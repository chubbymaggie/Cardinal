; ModuleID = 'lua.llvm.o'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%struct.luaL_Reg = type { i8*, i32 (%struct.lua_State*)* }
%struct.lua_State = type { %union.GCObject*, i8, i8, i8, %struct.lua_TValue*, %struct.lua_TValue*, %struct.global_State*, %struct.CallInfo*, i32*, %struct.lua_TValue*, %struct.lua_TValue*, %struct.CallInfo*, %struct.CallInfo*, i32, i32, i16, i16, i8, i8, i32, i32, void (%struct.lua_State*, %struct.lua_Debug*)*, %struct.lua_TValue, %struct.lua_TValue, %union.GCObject*, %union.GCObject*, %struct.lua_longjmp*, i64 }
%struct.global_State = type { %struct.stringtable, i8* (i8*, i8*, i64, i64)*, i8*, i8, i8, i32, %union.GCObject*, %union.GCObject**, %union.GCObject*, %union.GCObject*, %union.GCObject*, %union.GCObject*, %struct.Mbuffer, i64, i64, i64, i64, i32, i32, i32 (%struct.lua_State*)*, %struct.lua_TValue, %struct.lua_State*, %struct.UpVal, [9 x %struct.Table*], [17 x %union.TString*] }
%struct.stringtable = type { %union.GCObject**, i32, i32 }
%struct.Mbuffer = type { i8*, i64, i64 }
%struct.UpVal = type { %union.GCObject*, i8, i8, %struct.lua_TValue*, %union.anon }
%union.anon = type { %struct.lua_TValue }
%struct.Table = type { %union.GCObject*, i8, i8, i8, i8, %struct.Table*, %struct.lua_TValue*, %struct.Node*, %struct.Node*, %union.GCObject*, i32 }
%struct.Node = type { %struct.lua_TValue, %union.TKey }
%union.TKey = type { %struct.anon.0 }
%struct.anon.0 = type { %union.Value, i32, %struct.Node* }
%union.Value = type { %union.GCObject* }
%union.TString = type { %struct.anon.1 }
%struct.anon.1 = type { %union.GCObject*, i8, i8, i8, i32, i64 }
%struct.CallInfo = type { %struct.lua_TValue*, %struct.lua_TValue*, %struct.lua_TValue*, i32*, i32, i32 }
%struct.lua_Debug = type { i32, i8*, i8*, i8*, i8*, i32, i32, i32, i32, [60 x i8], i32 }
%struct.lua_TValue = type { %union.Value, i32 }
%union.GCObject = type { %struct.lua_State }
%struct.lua_longjmp = type { %struct.lua_longjmp*, [1 x %struct.__jmp_buf_tag], i32 }
%struct.__jmp_buf_tag = type { [8 x i64], i32, %struct.__sigset_t }
%struct.__sigset_t = type { [16 x i64] }
%struct.lua_TValue.218 = type { %union.Value.217, i32 }
%union.Value.217 = type { %union.GCObject.216* }
%union.GCObject.216 = type { %struct.lua_State.215 }
%struct.lua_State.215 = type { %union.GCObject.216*, i8, i8, i8, %struct.lua_TValue.218*, %struct.lua_TValue.218*, %struct.global_State.211*, %struct.CallInfo.212*, i32*, %struct.lua_TValue.218*, %struct.lua_TValue.218*, %struct.CallInfo.212*, %struct.CallInfo.212*, i32, i32, i16, i16, i8, i8, i32, i32, void (%struct.lua_State.215*, %struct.lua_Debug*)*, %struct.lua_TValue.218, %struct.lua_TValue.218, %union.GCObject.216*, %union.GCObject.216*, %struct.lua_longjmp*, i64 }
%struct.global_State.211 = type { %struct.stringtable.201, i8* (i8*, i8*, i64, i64)*, i8*, i8, i8, i32, %union.GCObject.216*, %union.GCObject.216**, %union.GCObject.216*, %union.GCObject.216*, %union.GCObject.216*, %union.GCObject.216*, %struct.Mbuffer, i64, i64, i64, i64, i32, i32, {}*, %struct.lua_TValue.218, %struct.lua_State.215*, %struct.UpVal.204, [9 x %struct.Table.208*], [17 x %union.TString.210*] }
%struct.stringtable.201 = type { %union.GCObject.216**, i32, i32 }
%struct.UpVal.204 = type { %union.GCObject.216*, i8, i8, %struct.lua_TValue.218*, %union.anon.203 }
%union.anon.203 = type { %struct.lua_TValue.218 }
%struct.Table.208 = type { %union.GCObject.216*, i8, i8, i8, i8, %struct.Table.208*, %struct.lua_TValue.218*, %struct.Node.207*, %struct.Node.207*, %union.GCObject.216*, i32 }
%struct.Node.207 = type { %struct.lua_TValue.218, %union.TKey.206 }
%union.TKey.206 = type { %struct.anon.1.205 }
%struct.anon.1.205 = type { %union.Value.217, i32, %struct.Node.207* }
%union.TString.210 = type { %struct.anon.209 }
%struct.anon.209 = type { %union.GCObject.216*, i8, i8, i8, i32, i64 }
%struct.CallInfo.212 = type { %struct.lua_TValue.218*, %struct.lua_TValue.218*, %struct.lua_TValue.218*, i32*, i32, i32 }
%struct.upvaldesc = type { i8, i8 }
%struct.CClosure = type { %union.GCObject*, i8, i8, i8, i8, %union.GCObject*, %struct.Table*, i32 (%struct.lua_State*)*, [1 x %struct.lua_TValue] }
%union.Closure = type { %struct.CClosure }
%struct.anon.2 = type { %union.GCObject*, i8, i8, %struct.Table*, %struct.Table*, i64 }
%union.Udata = type { %struct.anon.2 }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.GCheader = type { %union.GCObject*, i8, i8 }
%struct.CallS = type { %struct.lua_TValue*, i32 }
%struct.CCallS = type { i32 (%struct.lua_State*)*, i8* }
%struct.Zio = type { i64, i8*, i8* (%struct.lua_State*, i8*, i64*)*, i8*, %struct.lua_State* }
%struct.Proto = type { %union.GCObject*, i8, i8, %struct.lua_TValue*, i32*, %struct.Proto**, i32*, %struct.LocVar*, %union.TString**, %union.TString*, i32, i32, i32, i32, i32, i32, i32, i32, %union.GCObject*, i8, i8, i8, i8 }
%struct.LocVar = type { %union.TString*, i32, i32 }
%struct.luaL_Buffer = type { i8*, i32, %struct.lua_State*, [8192 x i8] }
%struct.LoadF = type { i32, %struct._IO_FILE*, [8192 x i8] }
%struct.LoadS = type { i8*, i64 }
%struct.FuncState = type { %struct.Proto*, %struct.Table*, %struct.FuncState*, %struct.LexState*, %struct.lua_State*, %struct.BlockCnt*, i32, i32, i32, i32, i32, i32, i16, i8, [60 x %struct.upvaldesc], [200 x i16] }
%struct.LexState = type { i32, i32, i32, %struct.Token, %struct.Token, %struct.FuncState*, %struct.lua_State*, %struct.Zio*, %struct.Mbuffer*, %union.TString*, i8 }
%struct.Token = type { i32, %union.SemInfo }
%union.SemInfo = type { double }
%struct.BlockCnt = type { %struct.BlockCnt*, i32, i8, i8, i8 }
%struct.expdesc = type { i32, %union.SemInfo, i32, i32 }
%struct.anon.4 = type { i32, i32 }
%struct.LClosure = type { %union.GCObject*, i8, i8, i8, i8, %union.GCObject*, %struct.Table*, %struct.Proto*, [1 x %struct.UpVal*] }
%struct.SParser = type { %struct.Zio*, %struct.Mbuffer, i8* }
%struct.DumpState = type { %struct.lua_State*, i32 (%struct.lua_State*, i8*, i64, i8*)*, i8*, i32, i32 }
%union.Closure.118 = type { %struct.CClosure.117 }
%struct.CClosure.117 = type { %union.GCObject.116*, i8, i8, i8, i8, %union.GCObject.116*, %struct.Table.108*, i32 (%struct.lua_State.115*)*, [1 x %struct.lua_TValue.101] }
%union.GCObject.116 = type { %struct.lua_State.115 }
%struct.lua_State.115 = type { %union.GCObject.116*, i8, i8, i8, %struct.lua_TValue.101*, %struct.lua_TValue.101*, %struct.global_State.111*, %struct.CallInfo.112*, i32*, %struct.lua_TValue.101*, %struct.lua_TValue.101*, %struct.CallInfo.112*, %struct.CallInfo.112*, i32, i32, i16, i16, i8, i8, i32, i32, void (%struct.lua_State.115*, %struct.lua_Debug*)*, %struct.lua_TValue.101, %struct.lua_TValue.101, %union.GCObject.116*, %union.GCObject.116*, %struct.lua_longjmp*, i64 }
%struct.global_State.111 = type { %struct.stringtable.102, i8* (i8*, i8*, i64, i64)*, i8*, i8, i8, i32, %union.GCObject.116*, %union.GCObject.116**, %union.GCObject.116*, %union.GCObject.116*, %union.GCObject.116*, %union.GCObject.116*, %struct.Mbuffer, i64, i64, i64, i64, i32, i32, {}*, %struct.lua_TValue.101, %struct.lua_State.115*, %struct.UpVal.105, [9 x %struct.Table.108*], [17 x %union.TString.110*] }
%struct.stringtable.102 = type { %union.GCObject.116**, i32, i32 }
%struct.UpVal.105 = type { %union.GCObject.116*, i8, i8, %struct.lua_TValue.101*, %union.anon.104 }
%union.anon.104 = type { %struct.lua_TValue.101 }
%union.TString.110 = type { %struct.anon.1.109 }
%struct.anon.1.109 = type { %union.GCObject.116*, i8, i8, i8, i32, i64 }
%struct.CallInfo.112 = type { %struct.lua_TValue.101*, %struct.lua_TValue.101*, %struct.lua_TValue.101*, i32*, i32, i32 }
%struct.lua_TValue.101 = type { %union.Value.100, i32 }
%union.Value.100 = type { %union.GCObject.116* }
%struct.Table.108 = type { %union.GCObject.116*, i8, i8, i8, i8, %struct.Table.108*, %struct.lua_TValue.101*, %struct.Node.107*, %struct.Node.107*, %union.GCObject.116*, i32 }
%struct.Node.107 = type { %struct.lua_TValue.101, %union.TKey.106 }
%union.TKey.106 = type { %struct.anon }
%struct.anon = type { %union.Value.100, i32, %struct.Node.107* }
%struct.Proto.120 = type { %union.GCObject.116*, i8, i8, %struct.lua_TValue.101*, i32*, %struct.Proto.120**, i32*, %struct.LocVar.119*, %union.TString.110**, %union.TString.110*, i32, i32, i32, i32, i32, i32, i32, i32, %union.GCObject.116*, i8, i8, i8, i8 }
%struct.LocVar.119 = type { %union.TString.110*, i32, i32 }
%struct.lconv = type { i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.tm = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i8* }
%struct.Zio.243 = type { i64, i8*, i8* (%struct.lua_State.115*, i8*, i64*)*, i8*, %struct.lua_State.115* }
%struct.LexState.249 = type { i32, i32, i32, %struct.Token, %struct.Token, %struct.FuncState.248*, %struct.lua_State.115*, %struct.Zio.243*, %struct.Mbuffer*, %union.TString.110*, i8 }
%struct.FuncState.248 = type { %struct.Proto.120*, %struct.Table.108*, %struct.FuncState.248*, %struct.LexState.249*, %struct.lua_State.115*, %struct.BlockCnt*, i32, i32, i32, i32, i32, i32, i16, i8, [60 x %struct.upvaldesc], [200 x i16] }
%struct.LHS_assign = type { %struct.LHS_assign*, %struct.expdesc }
%struct.ConsControl = type { %struct.expdesc, %struct.expdesc*, i32, i32, i32 }
%struct.MatchState = type { i8*, i8*, %struct.lua_State*, i32, [32 x %struct.LoadS] }
%struct.Smain = type { i32, i8**, i32 }
%struct.Proto.358 = type { %union.GCObject.216*, i8, i8, %struct.lua_TValue.218*, i32*, %struct.Proto.358**, i32*, %struct.LocVar.357*, %union.TString.210**, %union.TString.210*, i32, i32, i32, i32, i32, i32, i32, i32, %union.GCObject.216*, i8, i8, i8, i8 }
%struct.LocVar.357 = type { %union.TString.210*, i32, i32 }
%struct.Zio.359 = type { i64, i8*, i8* (%struct.lua_State.215*, i8*, i64*)*, i8*, %struct.lua_State.215* }
%struct.LoadState = type { %struct.lua_State.215*, %struct.Zio.359*, %struct.Mbuffer*, i8* }
%struct.GCheader.380 = type { %union.GCObject.216*, i8, i8 }
%struct.anon.0.381 = type { %union.GCObject.216*, i8, i8, %struct.Table.208*, %struct.Table.208*, i64 }
%struct.LClosure.384 = type { %union.GCObject.216*, i8, i8, i8, i8, %union.GCObject.216*, %struct.Table.208*, %struct.Proto.383*, [1 x %struct.UpVal.204*] }
%struct.Proto.383 = type { %union.GCObject.216*, i8, i8, %struct.lua_TValue.218*, i32*, %struct.Proto.383**, i32*, %struct.LocVar.357*, %union.TString.210**, %union.TString.210*, i32, i32, i32, i32, i32, i32, i32, i32, %union.GCObject.216*, i8, i8, i8, i8 }
%union.Closure.379 = type { %struct.CClosure.378 }
%struct.CClosure.378 = type { %union.GCObject.216*, i8, i8, i8, i8, %union.GCObject.216*, %struct.Table.208*, i32 (%struct.lua_State.215*)*, [1 x %struct.lua_TValue.218] }

@lua_ident = constant [141 x i8] c"$Lua: Lua 5.1.4 Copyright (C) 1994-2008 Lua.org, PUC-Rio $\0A$Authors: R. Ierusalimschy, L. H. de Figueiredo & W. Celes $\0A$URL: www.lua.org $\0A\00", align 16
@.str = private unnamed_addr constant [23 x i8] c"no calling environment\00", align 1
@.str.1 = private unnamed_addr constant [9 x i8] c"no value\00", align 1
@.str.2 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@.str.3 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@stdin = external global %struct._IO_FILE*, align 8
@stderr = external global %struct._IO_FILE*, align 8
@.str.4 = private unnamed_addr constant [22 x i8] c"bad argument #%d (%s)\00", align 1
@.str.1.5 = private unnamed_addr constant [2 x i8] c"n\00", align 1
@.str.2.6 = private unnamed_addr constant [7 x i8] c"method\00", align 1
@.str.3.7 = private unnamed_addr constant [30 x i8] c"calling '%s' on bad self (%s)\00", align 1
@.str.4.8 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@.str.5 = private unnamed_addr constant [30 x i8] c"bad argument #%d to '%s' (%s)\00", align 1
@.str.7 = private unnamed_addr constant [3 x i8] c"Sl\00", align 1
@.str.8 = private unnamed_addr constant [8 x i8] c"%s:%d: \00", align 1
@.str.9 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.6 = private unnamed_addr constant [20 x i8] c"%s expected, got %s\00", align 1
@.str.10 = private unnamed_addr constant [20 x i8] c"invalid option '%s'\00", align 1
@.str.11 = private unnamed_addr constant [20 x i8] c"stack overflow (%s)\00", align 1
@.str.12 = private unnamed_addr constant [15 x i8] c"value expected\00", align 1
@.str.13 = private unnamed_addr constant [8 x i8] c"_LOADED\00", align 1
@.str.14 = private unnamed_addr constant [30 x i8] c"name conflict for module '%s'\00", align 1
@.str.15 = private unnamed_addr constant [7 x i8] c"=stdin\00", align 1
@.str.16 = private unnamed_addr constant [4 x i8] c"@%s\00", align 1
@.str.17 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@.str.23 = private unnamed_addr constant [17 x i8] c"cannot %s %s: %s\00", align 1
@.str.18 = private unnamed_addr constant [5 x i8] c"open\00", align 1
@.str.20 = private unnamed_addr constant [3 x i8] c"rb\00", align 1
@.str.21 = private unnamed_addr constant [7 x i8] c"reopen\00", align 1
@.str.22 = private unnamed_addr constant [5 x i8] c"read\00", align 1
@.str.25 = private unnamed_addr constant [50 x i8] c"PANIC: unprotected error in call to Lua API (%s)\0A\00", align 1
@.str.24 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@stdout = external global %struct._IO_FILE*, align 8
@.str.1.9 = private unnamed_addr constant [3 x i8] c"_G\00", align 1
@base_funcs = internal constant [25 x %struct.luaL_Reg] [%struct.luaL_Reg { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9.20, i32 0, i32 0), i32 (%struct.lua_State*)* @luaB_assert }, %struct.luaL_Reg { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.10.21, i32 0, i32 0), i32 (%struct.lua_State*)* @luaB_collectgarbage }, %struct.luaL_Reg { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.11.22, i32 0, i32 0), i32 (%struct.lua_State*)* @luaB_dofile }, %struct.luaL_Reg { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.12.23, i32 0, i32 0), i32 (%struct.lua_State*)* @luaB_error }, %struct.luaL_Reg { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.13.24, i32 0, i32 0), i32 (%struct.lua_State*)* @luaB_gcinfo }, %struct.luaL_Reg { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.14.25, i32 0, i32 0), i32 (%struct.lua_State*)* @luaB_getfenv }, %struct.luaL_Reg { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.15.26, i32 0, i32 0), i32 (%struct.lua_State*)* @luaB_getmetatable }, %struct.luaL_Reg { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.16.27, i32 0, i32 0), i32 (%struct.lua_State*)* @luaB_loadfile }, %struct.luaL_Reg { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.17.28, i32 0, i32 0), i32 (%struct.lua_State*)* @luaB_load }, %struct.luaL_Reg { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.18.29, i32 0, i32 0), i32 (%struct.lua_State*)* @luaB_loadstring }, %struct.luaL_Reg { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.19.30, i32 0, i32 0), i32 (%struct.lua_State*)* @luaB_next }, %struct.luaL_Reg { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.20.31, i32 0, i32 0), i32 (%struct.lua_State*)* @luaB_pcall }, %struct.luaL_Reg { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.21.32, i32 0, i32 0), i32 (%struct.lua_State*)* @luaB_print }, %struct.luaL_Reg { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.22.33, i32 0, i32 0), i32 (%struct.lua_State*)* @luaB_rawequal }, %struct.luaL_Reg { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.23.34, i32 0, i32 0), i32 (%struct.lua_State*)* @luaB_rawget }, %struct.luaL_Reg { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.24.35, i32 0, i32 0), i32 (%struct.lua_State*)* @luaB_rawset }, %struct.luaL_Reg { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.25.36, i32 0, i32 0), i32 (%struct.lua_State*)* @luaB_select }, %struct.luaL_Reg { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.26, i32 0, i32 0), i32 (%struct.lua_State*)* @luaB_setfenv }, %struct.luaL_Reg { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.27, i32 0, i32 0), i32 (%struct.lua_State*)* @luaB_setmetatable }, %struct.luaL_Reg { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.28, i32 0, i32 0), i32 (%struct.lua_State*)* @luaB_tonumber }, %struct.luaL_Reg { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.29, i32 0, i32 0), i32 (%struct.lua_State*)* @luaB_tostring }, %struct.luaL_Reg { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.30, i32 0, i32 0), i32 (%struct.lua_State*)* @luaB_type }, %struct.luaL_Reg { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.31, i32 0, i32 0), i32 (%struct.lua_State*)* @luaB_unpack }, %struct.luaL_Reg { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.32, i32 0, i32 0), i32 (%struct.lua_State*)* @luaB_xpcall }, %struct.luaL_Reg zeroinitializer], align 16
@.str.2.10 = private unnamed_addr constant [8 x i8] c"Lua 5.1\00", align 1
@.str.3.11 = private unnamed_addr constant [9 x i8] c"_VERSION\00", align 1
@.str.4.12 = private unnamed_addr constant [7 x i8] c"ipairs\00", align 1
@.str.5.13 = private unnamed_addr constant [6 x i8] c"pairs\00", align 1
@.str.6.14 = private unnamed_addr constant [3 x i8] c"kv\00", align 1
@.str.7.15 = private unnamed_addr constant [7 x i8] c"__mode\00", align 1
@.str.8.16 = private unnamed_addr constant [9 x i8] c"newproxy\00", align 1
@.str.19 = private unnamed_addr constant [10 x i8] c"coroutine\00", align 1
@co_funcs = internal constant [7 x %struct.luaL_Reg] [%struct.luaL_Reg { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.65, i32 0, i32 0), i32 (%struct.lua_State*)* @luaB_cocreate }, %struct.luaL_Reg { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.66, i32 0, i32 0), i32 (%struct.lua_State*)* @luaB_coresume }, %struct.luaL_Reg { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.67, i32 0, i32 0), i32 (%struct.lua_State*)* @luaB_corunning }, %struct.luaL_Reg { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.68, i32 0, i32 0), i32 (%struct.lua_State*)* @luaB_costatus }, %struct.luaL_Reg { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.69, i32 0, i32 0), i32 (%struct.lua_State*)* @luaB_cowrap }, %struct.luaL_Reg { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.70, i32 0, i32 0), i32 (%struct.lua_State*)* @luaB_yield }, %struct.luaL_Reg zeroinitializer], align 16
@.str.65 = private unnamed_addr constant [7 x i8] c"create\00", align 1
@.str.66 = private unnamed_addr constant [7 x i8] c"resume\00", align 1
@.str.67 = private unnamed_addr constant [8 x i8] c"running\00", align 1
@.str.68 = private unnamed_addr constant [7 x i8] c"status\00", align 1
@.str.69 = private unnamed_addr constant [5 x i8] c"wrap\00", align 1
@.str.70 = private unnamed_addr constant [6 x i8] c"yield\00", align 1
@.str.71 = private unnamed_addr constant [22 x i8] c"Lua function expected\00", align 1
@.str.73 = private unnamed_addr constant [29 x i8] c"too many arguments to resume\00", align 1
@statnames = internal unnamed_addr constant [4 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.67, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.76, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.77, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.78, i32 0, i32 0)], align 16
@.str.74 = private unnamed_addr constant [27 x i8] c"cannot resume %s coroutine\00", align 1
@.str.75 = private unnamed_addr constant [27 x i8] c"too many results to resume\00", align 1
@.str.76 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.77 = private unnamed_addr constant [7 x i8] c"normal\00", align 1
@.str.78 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.72 = private unnamed_addr constant [19 x i8] c"coroutine expected\00", align 1
@.str.64 = private unnamed_addr constant [26 x i8] c"boolean or proxy expected\00", align 1
@.str.9.20 = private unnamed_addr constant [7 x i8] c"assert\00", align 1
@.str.10.21 = private unnamed_addr constant [15 x i8] c"collectgarbage\00", align 1
@.str.11.22 = private unnamed_addr constant [7 x i8] c"dofile\00", align 1
@.str.12.23 = private unnamed_addr constant [6 x i8] c"error\00", align 1
@.str.13.24 = private unnamed_addr constant [7 x i8] c"gcinfo\00", align 1
@.str.14.25 = private unnamed_addr constant [8 x i8] c"getfenv\00", align 1
@.str.15.26 = private unnamed_addr constant [13 x i8] c"getmetatable\00", align 1
@.str.16.27 = private unnamed_addr constant [9 x i8] c"loadfile\00", align 1
@.str.17.28 = private unnamed_addr constant [5 x i8] c"load\00", align 1
@.str.18.29 = private unnamed_addr constant [11 x i8] c"loadstring\00", align 1
@.str.19.30 = private unnamed_addr constant [5 x i8] c"next\00", align 1
@.str.20.31 = private unnamed_addr constant [6 x i8] c"pcall\00", align 1
@.str.21.32 = private unnamed_addr constant [6 x i8] c"print\00", align 1
@.str.22.33 = private unnamed_addr constant [9 x i8] c"rawequal\00", align 1
@.str.23.34 = private unnamed_addr constant [7 x i8] c"rawget\00", align 1
@.str.24.35 = private unnamed_addr constant [7 x i8] c"rawset\00", align 1
@.str.25.36 = private unnamed_addr constant [7 x i8] c"select\00", align 1
@.str.26 = private unnamed_addr constant [8 x i8] c"setfenv\00", align 1
@.str.27 = private unnamed_addr constant [13 x i8] c"setmetatable\00", align 1
@.str.28 = private unnamed_addr constant [9 x i8] c"tonumber\00", align 1
@.str.29 = private unnamed_addr constant [9 x i8] c"tostring\00", align 1
@.str.30 = private unnamed_addr constant [5 x i8] c"type\00", align 1
@.str.31 = private unnamed_addr constant [7 x i8] c"unpack\00", align 1
@.str.32 = private unnamed_addr constant [7 x i8] c"xpcall\00", align 1
@.str.63 = private unnamed_addr constant [27 x i8] c"too many results to unpack\00", align 1
@.str.58 = private unnamed_addr constant [11 x i8] c"__tostring\00", align 1
@.str.59 = private unnamed_addr constant [5 x i8] c"true\00", align 1
@.str.60 = private unnamed_addr constant [6 x i8] c"false\00", align 1
@.str.61 = private unnamed_addr constant [4 x i8] c"nil\00", align 1
@.str.62 = private unnamed_addr constant [7 x i8] c"%s: %p\00", align 1
@.str.57 = private unnamed_addr constant [18 x i8] c"base out of range\00", align 1
@.str.55 = private unnamed_addr constant [22 x i8] c"nil or table expected\00", align 1
@.str.46 = private unnamed_addr constant [12 x i8] c"__metatable\00", align 1
@.str.56 = private unnamed_addr constant [36 x i8] c"cannot change a protected metatable\00", align 1
@.str.54 = private unnamed_addr constant [52 x i8] c"'setfenv' cannot change environment of given object\00", align 1
@.str.42 = private unnamed_addr constant [27 x i8] c"level must be non-negative\00", align 1
@.str.43 = private unnamed_addr constant [14 x i8] c"invalid level\00", align 1
@.str.44 = private unnamed_addr constant [2 x i8] c"f\00", align 1
@.str.45 = private unnamed_addr constant [50 x i8] c"no function environment for tail call at level %d\00", align 1
@.str.53 = private unnamed_addr constant [19 x i8] c"index out of range\00", align 1
@.str.50 = private unnamed_addr constant [43 x i8] c"'tostring' must return a string to 'print'\00", align 1
@.str.47 = private unnamed_addr constant [8 x i8] c"=(load)\00", align 1
@.str.48 = private unnamed_addr constant [26 x i8] c"too many nested functions\00", align 1
@.str.49 = private unnamed_addr constant [37 x i8] c"reader function must return a string\00", align 1
@.str.37 = private unnamed_addr constant [8 x i8] c"collect\00", align 1
@luaB_collectgarbage.opts = internal constant [8 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.35, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.36, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.37, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.38, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.41, i32 0, i32 0), i8* null], align 16
@luaB_collectgarbage.optsnum = internal unnamed_addr constant [7 x i32] [i32 0, i32 1, i32 2, i32 3, i32 5, i32 6, i32 7], align 16
@.str.35 = private unnamed_addr constant [5 x i8] c"stop\00", align 1
@.str.36 = private unnamed_addr constant [8 x i8] c"restart\00", align 1
@.str.38 = private unnamed_addr constant [6 x i8] c"count\00", align 1
@.str.39 = private unnamed_addr constant [5 x i8] c"step\00", align 1
@.str.40 = private unnamed_addr constant [9 x i8] c"setpause\00", align 1
@.str.41 = private unnamed_addr constant [11 x i8] c"setstepmul\00", align 1
@.str.34 = private unnamed_addr constant [18 x i8] c"assertion failed!\00", align 1
@.str.33 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.1.37 = private unnamed_addr constant [27 x i8] c"control structure too long\00", align 1
@.str.51 = private unnamed_addr constant [35 x i8] c"function or expression too complex\00", align 1
@.str.2.52 = private unnamed_addr constant [24 x i8] c"constant table overflow\00", align 1
@.str.3.53 = private unnamed_addr constant [19 x i8] c"code size overflow\00", align 1
@.str.79 = private unnamed_addr constant [6 x i8] c"debug\00", align 1
@dblib = internal constant [15 x %struct.luaL_Reg] [%struct.luaL_Reg { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.79, i32 0, i32 0), i32 (%struct.lua_State*)* @db_debug }, %struct.luaL_Reg { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.80, i32 0, i32 0), i32 (%struct.lua_State*)* @db_getfenv }, %struct.luaL_Reg { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2.81, i32 0, i32 0), i32 (%struct.lua_State*)* @db_gethook }, %struct.luaL_Reg { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3.82, i32 0, i32 0), i32 (%struct.lua_State*)* @db_getinfo }, %struct.luaL_Reg { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4.83, i32 0, i32 0), i32 (%struct.lua_State*)* @db_getlocal }, %struct.luaL_Reg { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.5.84, i32 0, i32 0), i32 (%struct.lua_State*)* @db_getregistry }, %struct.luaL_Reg { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6.85, i32 0, i32 0), i32 (%struct.lua_State*)* @db_getmetatable }, %struct.luaL_Reg { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7.86, i32 0, i32 0), i32 (%struct.lua_State*)* @db_getupvalue }, %struct.luaL_Reg { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.8.87, i32 0, i32 0), i32 (%struct.lua_State*)* @db_setfenv }, %struct.luaL_Reg { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9.88, i32 0, i32 0), i32 (%struct.lua_State*)* @db_sethook }, %struct.luaL_Reg { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.10.89, i32 0, i32 0), i32 (%struct.lua_State*)* @db_setlocal }, %struct.luaL_Reg { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.11.90, i32 0, i32 0), i32 (%struct.lua_State*)* @db_setmetatable }, %struct.luaL_Reg { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.12.91, i32 0, i32 0), i32 (%struct.lua_State*)* @db_setupvalue }, %struct.luaL_Reg { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.13.92, i32 0, i32 0), i32 (%struct.lua_State*)* @db_errorfb }, %struct.luaL_Reg zeroinitializer], align 16
@.str.1.80 = private unnamed_addr constant [8 x i8] c"getfenv\00", align 1
@.str.2.81 = private unnamed_addr constant [8 x i8] c"gethook\00", align 1
@.str.3.82 = private unnamed_addr constant [8 x i8] c"getinfo\00", align 1
@.str.4.83 = private unnamed_addr constant [9 x i8] c"getlocal\00", align 1
@.str.5.84 = private unnamed_addr constant [12 x i8] c"getregistry\00", align 1
@.str.6.85 = private unnamed_addr constant [13 x i8] c"getmetatable\00", align 1
@.str.7.86 = private unnamed_addr constant [11 x i8] c"getupvalue\00", align 1
@.str.8.87 = private unnamed_addr constant [8 x i8] c"setfenv\00", align 1
@.str.9.88 = private unnamed_addr constant [8 x i8] c"sethook\00", align 1
@.str.10.89 = private unnamed_addr constant [9 x i8] c"setlocal\00", align 1
@.str.11.90 = private unnamed_addr constant [13 x i8] c"setmetatable\00", align 1
@.str.12.91 = private unnamed_addr constant [11 x i8] c"setupvalue\00", align 1
@.str.13.92 = private unnamed_addr constant [10 x i8] c"traceback\00", align 1
@.str.42.93 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.17.94 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.43.95 = private unnamed_addr constant [17 x i8] c"stack traceback:\00", align 1
@.str.44.96 = private unnamed_addr constant [6 x i8] c"\0A\09...\00", align 1
@.str.45.97 = private unnamed_addr constant [3 x i8] c"\0A\09\00", align 1
@.str.46.98 = private unnamed_addr constant [4 x i8] c"Snl\00", align 1
@.str.47.99 = private unnamed_addr constant [4 x i8] c"%s:\00", align 1
@.str.48.100 = private unnamed_addr constant [4 x i8] c"%d:\00", align 1
@.str.49.101 = private unnamed_addr constant [18 x i8] c" in function '%s'\00", align 1
@.str.50.102 = private unnamed_addr constant [15 x i8] c" in main chunk\00", align 1
@.str.51.103 = private unnamed_addr constant [3 x i8] c" ?\00", align 1
@.str.52 = private unnamed_addr constant [21 x i8] c" in function <%s:%d>\00", align 1
@.str.41.104 = private unnamed_addr constant [22 x i8] c"nil or table expected\00", align 1
@.str.39.105 = private unnamed_addr constant [19 x i8] c"level out of range\00", align 1
@KEY_HOOK = internal constant i8 104, align 1
@hookf.hooknames = internal unnamed_addr constant [5 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.19.106, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.20.107, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.21.108, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.22.109, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.23.110, i32 0, i32 0)], align 16
@.str.19.106 = private unnamed_addr constant [5 x i8] c"call\00", align 1
@.str.20.107 = private unnamed_addr constant [7 x i8] c"return\00", align 1
@.str.21.108 = private unnamed_addr constant [5 x i8] c"line\00", align 1
@.str.22.109 = private unnamed_addr constant [6 x i8] c"count\00", align 1
@.str.23.110 = private unnamed_addr constant [12 x i8] c"tail return\00", align 1
@.str.40.111 = private unnamed_addr constant [52 x i8] c"'setfenv' cannot change environment of given object\00", align 1
@.str.24.112 = private unnamed_addr constant [6 x i8] c"flnSu\00", align 1
@.str.25.113 = private unnamed_addr constant [4 x i8] c">%s\00", align 1
@.str.26.114 = private unnamed_addr constant [27 x i8] c"function or level expected\00", align 1
@.str.27.115 = private unnamed_addr constant [15 x i8] c"invalid option\00", align 1
@.str.28.116 = private unnamed_addr constant [7 x i8] c"source\00", align 1
@.str.29.117 = private unnamed_addr constant [10 x i8] c"short_src\00", align 1
@.str.30.118 = private unnamed_addr constant [12 x i8] c"linedefined\00", align 1
@.str.31.119 = private unnamed_addr constant [16 x i8] c"lastlinedefined\00", align 1
@.str.32.120 = private unnamed_addr constant [5 x i8] c"what\00", align 1
@.str.33.121 = private unnamed_addr constant [12 x i8] c"currentline\00", align 1
@.str.34.122 = private unnamed_addr constant [5 x i8] c"nups\00", align 1
@.str.35.123 = private unnamed_addr constant [5 x i8] c"name\00", align 1
@.str.36.124 = private unnamed_addr constant [9 x i8] c"namewhat\00", align 1
@.str.37.125 = private unnamed_addr constant [12 x i8] c"activelines\00", align 1
@.str.38.126 = private unnamed_addr constant [5 x i8] c"func\00", align 1
@.str.18.127 = private unnamed_addr constant [14 x i8] c"external hook\00", align 1
@.str.14.128 = private unnamed_addr constant [12 x i8] c"lua_debug> \00", align 1
@.str.15.129 = private unnamed_addr constant [6 x i8] c"cont\0A\00", align 1
@.str.16.130 = private unnamed_addr constant [17 x i8] c"=(debug command)\00", align 1
@.str.6.151 = private unnamed_addr constant [13 x i8] c"(*temporary)\00", align 1
@.str.7.152 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.8.153 = private unnamed_addr constant [5 x i8] c"tail\00", align 1
@.str.9.154 = private unnamed_addr constant [13 x i8] c"=(tail call)\00", align 1
@.str.10.155 = private unnamed_addr constant [5 x i8] c"=[C]\00", align 1
@.str.12.156 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@.str.13.157 = private unnamed_addr constant [4 x i8] c"Lua\00", align 1
@.str.11.158 = private unnamed_addr constant [2 x i8] c"C\00", align 1
@.str.159 = private unnamed_addr constant [35 x i8] c"attempt to %s %s '%s' (a %s value)\00", align 1
@.str.1.160 = private unnamed_addr constant [25 x i8] c"attempt to %s a %s value\00", align 1
@.str.20.161 = private unnamed_addr constant [10 x i8] c"%s:%d: %s\00", align 1
@.str.2.162 = private unnamed_addr constant [12 x i8] c"concatenate\00", align 1
@.str.3.163 = private unnamed_addr constant [22 x i8] c"perform arithmetic on\00", align 1
@.str.4.164 = private unnamed_addr constant [33 x i8] c"attempt to compare two %s values\00", align 1
@.str.5.165 = private unnamed_addr constant [30 x i8] c"attempt to compare %s with %s\00", align 1
@.str.17.166 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@.str.14.167 = private unnamed_addr constant [6 x i8] c"local\00", align 1
@.str.15.168 = private unnamed_addr constant [7 x i8] c"global\00", align 1
@.str.16.169 = private unnamed_addr constant [6 x i8] c"field\00", align 1
@.str.18.170 = private unnamed_addr constant [8 x i8] c"upvalue\00", align 1
@.str.19.171 = private unnamed_addr constant [7 x i8] c"method\00", align 1
@.str.186 = private unnamed_addr constant [18 x i8] c"not enough memory\00", align 1
@.str.1.187 = private unnamed_addr constant [24 x i8] c"error in error handling\00", align 1
@.str.5.188 = private unnamed_addr constant [5 x i8] c"call\00", align 1
@.str.6.189 = private unnamed_addr constant [2 x i8] c"n\00", align 1
@.str.7.190 = private unnamed_addr constant [15 x i8] c"stack overflow\00", align 1
@.str.2.191 = private unnamed_addr constant [17 x i8] c"C stack overflow\00", align 1
@.str.3.192 = private unnamed_addr constant [38 x i8] c"cannot resume non-suspended coroutine\00", align 1
@.str.4.193 = private unnamed_addr constant [51 x i8] c"attempt to yield across metamethod/C-call boundary\00", align 1
@.str.218 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.1.219 = private unnamed_addr constant [8 x i8] c"package\00", align 1
@.str.2.220 = private unnamed_addr constant [6 x i8] c"table\00", align 1
@.str.3.221 = private unnamed_addr constant [3 x i8] c"io\00", align 1
@.str.4.222 = private unnamed_addr constant [3 x i8] c"os\00", align 1
@.str.5.223 = private unnamed_addr constant [7 x i8] c"string\00", align 1
@.str.6.224 = private unnamed_addr constant [5 x i8] c"math\00", align 1
@.str.7.225 = private unnamed_addr constant [6 x i8] c"debug\00", align 1
@.str.5.228 = private unnamed_addr constant [6 x i8] c"FILE*\00", align 1
@.str.6.229 = private unnamed_addr constant [8 x i8] c"__index\00", align 1
@flib = internal constant [10 x %struct.luaL_Reg] [%struct.luaL_Reg { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.7.238, i32 0, i32 0), i32 (%struct.lua_State*)* @io_close }, %struct.luaL_Reg { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8.239, i32 0, i32 0), i32 (%struct.lua_State*)* @f_flush }, %struct.luaL_Reg { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.9.241, i32 0, i32 0), i32 (%struct.lua_State*)* @f_lines }, %struct.luaL_Reg { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.10.244, i32 0, i32 0), i32 (%struct.lua_State*)* @f_read }, %struct.luaL_Reg { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11.261, i32 0, i32 0), i32 (%struct.lua_State*)* @f_seek }, %struct.luaL_Reg { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.12.262, i32 0, i32 0), i32 (%struct.lua_State*)* @f_setvbuf }, %struct.luaL_Reg { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.247, i32 0, i32 0), i32 (%struct.lua_State*)* @f_write }, %struct.luaL_Reg { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.14.263, i32 0, i32 0), i32 (%struct.lua_State*)* @io_gc }, %struct.luaL_Reg { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.15.264, i32 0, i32 0), i32 (%struct.lua_State*)* @io_tostring }, %struct.luaL_Reg zeroinitializer], align 16
@.str.17.230 = private unnamed_addr constant [8 x i8] c"__close\00", align 1
@.str.231 = private unnamed_addr constant [3 x i8] c"io\00", align 1
@iolib = internal constant [12 x %struct.luaL_Reg] [%struct.luaL_Reg { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.7.238, i32 0, i32 0), i32 (%struct.lua_State*)* @io_close }, %struct.luaL_Reg { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8.239, i32 0, i32 0), i32 (%struct.lua_State*)* @io_flush }, %struct.luaL_Reg { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.34.240, i32 0, i32 0), i32 (%struct.lua_State*)* @io_input }, %struct.luaL_Reg { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.9.241, i32 0, i32 0), i32 (%struct.lua_State*)* @io_lines }, %struct.luaL_Reg { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.35.242, i32 0, i32 0), i32 (%struct.lua_State*)* @io_open }, %struct.luaL_Reg { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.36.243, i32 0, i32 0), i32 (%struct.lua_State*)* @io_output }, %struct.luaL_Reg { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4.235, i32 0, i32 0), i32 (%struct.lua_State*)* @io_popen }, %struct.luaL_Reg { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.10.244, i32 0, i32 0), i32 (%struct.lua_State*)* @io_read }, %struct.luaL_Reg { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.37.245, i32 0, i32 0), i32 (%struct.lua_State*)* @io_tmpfile }, %struct.luaL_Reg { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.38.246, i32 0, i32 0), i32 (%struct.lua_State*)* @io_type }, %struct.luaL_Reg { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.247, i32 0, i32 0), i32 (%struct.lua_State*)* @io_write }, %struct.luaL_Reg zeroinitializer], align 16
@.str.1.232 = private unnamed_addr constant [6 x i8] c"stdin\00", align 1
@.str.2.233 = private unnamed_addr constant [7 x i8] c"stdout\00", align 1
@.str.3.234 = private unnamed_addr constant [7 x i8] c"stderr\00", align 1
@.str.4.235 = private unnamed_addr constant [6 x i8] c"popen\00", align 1
@.str.19.236 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.44.237 = private unnamed_addr constant [27 x i8] c"cannot close standard file\00", align 1
@.str.7.238 = private unnamed_addr constant [6 x i8] c"close\00", align 1
@.str.8.239 = private unnamed_addr constant [6 x i8] c"flush\00", align 1
@.str.34.240 = private unnamed_addr constant [6 x i8] c"input\00", align 1
@.str.9.241 = private unnamed_addr constant [6 x i8] c"lines\00", align 1
@.str.35.242 = private unnamed_addr constant [5 x i8] c"open\00", align 1
@.str.36.243 = private unnamed_addr constant [7 x i8] c"output\00", align 1
@.str.10.244 = private unnamed_addr constant [5 x i8] c"read\00", align 1
@.str.37.245 = private unnamed_addr constant [8 x i8] c"tmpfile\00", align 1
@.str.38.246 = private unnamed_addr constant [5 x i8] c"type\00", align 1
@.str.13.247 = private unnamed_addr constant [6 x i8] c"write\00", align 1
@.str.39.248 = private unnamed_addr constant [27 x i8] c"standard %s file is closed\00", align 1
@.str.31.249 = private unnamed_addr constant [6 x i8] c"%.14g\00", align 1
@.str.42.250 = private unnamed_addr constant [12 x i8] c"closed file\00", align 1
@.str.43.251 = private unnamed_addr constant [5 x i8] c"file\00", align 1
@.str.21.252 = private unnamed_addr constant [19 x i8] c"too many arguments\00", align 1
@.str.22.253 = private unnamed_addr constant [15 x i8] c"invalid option\00", align 1
@.str.24.254 = private unnamed_addr constant [4 x i8] c"%lf\00", align 1
@.str.23.255 = private unnamed_addr constant [15 x i8] c"invalid format\00", align 1
@.str.40.256 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@.str.18.257 = private unnamed_addr constant [7 x i8] c"%s: %s\00", align 1
@.str.41.258 = private unnamed_addr constant [2 x i8] c"w\00", align 1
@.str.16.259 = private unnamed_addr constant [29 x i8] c"attempt to use a closed file\00", align 1
@.str.20.260 = private unnamed_addr constant [23 x i8] c"file is already closed\00", align 1
@.str.11.261 = private unnamed_addr constant [5 x i8] c"seek\00", align 1
@.str.12.262 = private unnamed_addr constant [8 x i8] c"setvbuf\00", align 1
@.str.14.263 = private unnamed_addr constant [5 x i8] c"__gc\00", align 1
@.str.15.264 = private unnamed_addr constant [11 x i8] c"__tostring\00", align 1
@.str.32.265 = private unnamed_addr constant [14 x i8] c"file (closed)\00", align 1
@.str.33.266 = private unnamed_addr constant [10 x i8] c"file (%p)\00", align 1
@f_setvbuf.modenames = internal constant [4 x i8*] [i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.28.267, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.29.268, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.30.269, i32 0, i32 0), i8* null], align 16
@f_setvbuf.mode = internal unnamed_addr constant [3 x i32] [i32 2, i32 0, i32 1], align 4
@.str.28.267 = private unnamed_addr constant [3 x i8] c"no\00", align 1
@.str.29.268 = private unnamed_addr constant [5 x i8] c"full\00", align 1
@.str.30.269 = private unnamed_addr constant [5 x i8] c"line\00", align 1
@.str.26.270 = private unnamed_addr constant [4 x i8] c"cur\00", align 1
@f_seek.modenames = internal constant [4 x i8*] [i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.25.271, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.26.270, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.27.272, i32 0, i32 0), i8* null], align 16
@f_seek.mode = internal unnamed_addr constant [3 x i32] [i32 0, i32 1, i32 2], align 4
@.str.25.271 = private unnamed_addr constant [4 x i8] c"set\00", align 1
@.str.27.272 = private unnamed_addr constant [4 x i8] c"end\00", align 1
@luaX_tokens = hidden constant [32 x i8*] [i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.280, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.281, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2.282, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.283, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4.284, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.5.285, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6.286, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7.287, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.8.288, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9.289, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10.290, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.11.291, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.12.292, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.13.293, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.14.294, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.15.295, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.16.296, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.17.297, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.18.298, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.19.299, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.20.300, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.21.301, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.22.302, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.23.303, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.24.304, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.25.305, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.26.306, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.27.307, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.28.308, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.29.309, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.30.310, i32 0, i32 0), i8* null], align 16
@.str.31.275 = private unnamed_addr constant [9 x i8] c"char(%d)\00", align 1
@.str.32.276 = private unnamed_addr constant [3 x i8] c"%c\00", align 1
@.str.33.277 = private unnamed_addr constant [10 x i8] c"%s:%d: %s\00", align 1
@.str.35.278 = private unnamed_addr constant [25 x i8] c"lexical element too long\00", align 1
@.str.34.279 = private unnamed_addr constant [13 x i8] c"%s near '%s'\00", align 1
@.str.280 = private unnamed_addr constant [4 x i8] c"and\00", align 1
@.str.1.281 = private unnamed_addr constant [6 x i8] c"break\00", align 1
@.str.2.282 = private unnamed_addr constant [3 x i8] c"do\00", align 1
@.str.3.283 = private unnamed_addr constant [5 x i8] c"else\00", align 1
@.str.4.284 = private unnamed_addr constant [7 x i8] c"elseif\00", align 1
@.str.5.285 = private unnamed_addr constant [4 x i8] c"end\00", align 1
@.str.6.286 = private unnamed_addr constant [6 x i8] c"false\00", align 1
@.str.7.287 = private unnamed_addr constant [4 x i8] c"for\00", align 1
@.str.8.288 = private unnamed_addr constant [9 x i8] c"function\00", align 1
@.str.9.289 = private unnamed_addr constant [3 x i8] c"if\00", align 1
@.str.10.290 = private unnamed_addr constant [3 x i8] c"in\00", align 1
@.str.11.291 = private unnamed_addr constant [6 x i8] c"local\00", align 1
@.str.12.292 = private unnamed_addr constant [4 x i8] c"nil\00", align 1
@.str.13.293 = private unnamed_addr constant [4 x i8] c"not\00", align 1
@.str.14.294 = private unnamed_addr constant [3 x i8] c"or\00", align 1
@.str.15.295 = private unnamed_addr constant [7 x i8] c"repeat\00", align 1
@.str.16.296 = private unnamed_addr constant [7 x i8] c"return\00", align 1
@.str.17.297 = private unnamed_addr constant [5 x i8] c"then\00", align 1
@.str.18.298 = private unnamed_addr constant [5 x i8] c"true\00", align 1
@.str.19.299 = private unnamed_addr constant [6 x i8] c"until\00", align 1
@.str.20.300 = private unnamed_addr constant [6 x i8] c"while\00", align 1
@.str.21.301 = private unnamed_addr constant [3 x i8] c"..\00", align 1
@.str.22.302 = private unnamed_addr constant [4 x i8] c"...\00", align 1
@.str.23.303 = private unnamed_addr constant [3 x i8] c"==\00", align 1
@.str.24.304 = private unnamed_addr constant [3 x i8] c">=\00", align 1
@.str.25.305 = private unnamed_addr constant [3 x i8] c"<=\00", align 1
@.str.26.306 = private unnamed_addr constant [3 x i8] c"~=\00", align 1
@.str.27.307 = private unnamed_addr constant [9 x i8] c"<number>\00", align 1
@.str.28.308 = private unnamed_addr constant [7 x i8] c"<name>\00", align 1
@.str.29.309 = private unnamed_addr constant [9 x i8] c"<string>\00", align 1
@.str.30.310 = private unnamed_addr constant [6 x i8] c"<eof>\00", align 1
@.str.36.311 = private unnamed_addr constant [30 x i8] c"invalid long string delimiter\00", align 1
@.str.42.312 = private unnamed_addr constant [18 x i8] c"unfinished string\00", align 1
@.str.43.313 = private unnamed_addr constant [26 x i8] c"escape sequence too large\00", align 1
@.str.44.314 = private unnamed_addr constant [3 x i8] c"Ee\00", align 1
@.str.46.315 = private unnamed_addr constant [17 x i8] c"malformed number\00", align 1
@.str.39.316 = private unnamed_addr constant [23 x i8] c"unfinished long string\00", align 1
@.str.40.317 = private unnamed_addr constant [24 x i8] c"unfinished long comment\00", align 1
@.str.41.318 = private unnamed_addr constant [33 x i8] c"nesting of [[...]] is deprecated\00", align 1
@.str.38.319 = private unnamed_addr constant [25 x i8] c"chunk has too many lines\00", align 1
@.str.322 = private unnamed_addr constant [5 x i8] c"math\00", align 1
@mathlib = internal constant [29 x %struct.luaL_Reg] [%struct.luaL_Reg { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.5.327, i32 0, i32 0), i32 (%struct.lua_State*)* @math_abs }, %struct.luaL_Reg { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.328, i32 0, i32 0), i32 (%struct.lua_State*)* @math_acos }, %struct.luaL_Reg { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7.329, i32 0, i32 0), i32 (%struct.lua_State*)* @math_asin }, %struct.luaL_Reg { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8.330, i32 0, i32 0), i32 (%struct.lua_State*)* @math_atan2 }, %struct.luaL_Reg { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.9.331, i32 0, i32 0), i32 (%struct.lua_State*)* @math_atan }, %struct.luaL_Reg { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.10.332, i32 0, i32 0), i32 (%struct.lua_State*)* @math_ceil }, %struct.luaL_Reg { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11.333, i32 0, i32 0), i32 (%struct.lua_State*)* @math_cosh }, %struct.luaL_Reg { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.12.334, i32 0, i32 0), i32 (%struct.lua_State*)* @math_cos }, %struct.luaL_Reg { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.13.335, i32 0, i32 0), i32 (%struct.lua_State*)* @math_deg }, %struct.luaL_Reg { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14.336, i32 0, i32 0), i32 (%struct.lua_State*)* @math_exp }, %struct.luaL_Reg { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15.337, i32 0, i32 0), i32 (%struct.lua_State*)* @math_floor }, %struct.luaL_Reg { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.325, i32 0, i32 0), i32 (%struct.lua_State*)* @math_fmod }, %struct.luaL_Reg { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.16.338, i32 0, i32 0), i32 (%struct.lua_State*)* @math_frexp }, %struct.luaL_Reg { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.17.339, i32 0, i32 0), i32 (%struct.lua_State*)* @math_ldexp }, %struct.luaL_Reg { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.18.340, i32 0, i32 0), i32 (%struct.lua_State*)* @math_log10 }, %struct.luaL_Reg { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.19.341, i32 0, i32 0), i32 (%struct.lua_State*)* @math_log }, %struct.luaL_Reg { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.20.342, i32 0, i32 0), i32 (%struct.lua_State*)* @math_max }, %struct.luaL_Reg { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.21.343, i32 0, i32 0), i32 (%struct.lua_State*)* @math_min }, %struct.luaL_Reg { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.22.344, i32 0, i32 0), i32 (%struct.lua_State*)* @math_modf }, %struct.luaL_Reg { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.23.345, i32 0, i32 0), i32 (%struct.lua_State*)* @math_pow }, %struct.luaL_Reg { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.24.346, i32 0, i32 0), i32 (%struct.lua_State*)* @math_rad }, %struct.luaL_Reg { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.25.347, i32 0, i32 0), i32 (%struct.lua_State*)* @math_random }, %struct.luaL_Reg { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.26.348, i32 0, i32 0), i32 (%struct.lua_State*)* @math_randomseed }, %struct.luaL_Reg { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.27.349, i32 0, i32 0), i32 (%struct.lua_State*)* @math_sinh }, %struct.luaL_Reg { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.28.350, i32 0, i32 0), i32 (%struct.lua_State*)* @math_sin }, %struct.luaL_Reg { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.29.351, i32 0, i32 0), i32 (%struct.lua_State*)* @math_sqrt }, %struct.luaL_Reg { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.30.352, i32 0, i32 0), i32 (%struct.lua_State*)* @math_tanh }, %struct.luaL_Reg { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.31.353, i32 0, i32 0), i32 (%struct.lua_State*)* @math_tan }, %struct.luaL_Reg zeroinitializer], align 16
@.str.1.323 = private unnamed_addr constant [3 x i8] c"pi\00", align 1
@.str.2.324 = private unnamed_addr constant [5 x i8] c"huge\00", align 1
@.str.3.325 = private unnamed_addr constant [5 x i8] c"fmod\00", align 1
@.str.4.326 = private unnamed_addr constant [4 x i8] c"mod\00", align 1
@.str.5.327 = private unnamed_addr constant [4 x i8] c"abs\00", align 1
@.str.6.328 = private unnamed_addr constant [5 x i8] c"acos\00", align 1
@.str.7.329 = private unnamed_addr constant [5 x i8] c"asin\00", align 1
@.str.8.330 = private unnamed_addr constant [6 x i8] c"atan2\00", align 1
@.str.9.331 = private unnamed_addr constant [5 x i8] c"atan\00", align 1
@.str.10.332 = private unnamed_addr constant [5 x i8] c"ceil\00", align 1
@.str.11.333 = private unnamed_addr constant [5 x i8] c"cosh\00", align 1
@.str.12.334 = private unnamed_addr constant [4 x i8] c"cos\00", align 1
@.str.13.335 = private unnamed_addr constant [4 x i8] c"deg\00", align 1
@.str.14.336 = private unnamed_addr constant [4 x i8] c"exp\00", align 1
@.str.15.337 = private unnamed_addr constant [6 x i8] c"floor\00", align 1
@.str.16.338 = private unnamed_addr constant [6 x i8] c"frexp\00", align 1
@.str.17.339 = private unnamed_addr constant [6 x i8] c"ldexp\00", align 1
@.str.18.340 = private unnamed_addr constant [6 x i8] c"log10\00", align 1
@.str.19.341 = private unnamed_addr constant [4 x i8] c"log\00", align 1
@.str.20.342 = private unnamed_addr constant [4 x i8] c"max\00", align 1
@.str.21.343 = private unnamed_addr constant [4 x i8] c"min\00", align 1
@.str.22.344 = private unnamed_addr constant [5 x i8] c"modf\00", align 1
@.str.23.345 = private unnamed_addr constant [4 x i8] c"pow\00", align 1
@.str.24.346 = private unnamed_addr constant [4 x i8] c"rad\00", align 1
@.str.25.347 = private unnamed_addr constant [7 x i8] c"random\00", align 1
@.str.26.348 = private unnamed_addr constant [11 x i8] c"randomseed\00", align 1
@.str.27.349 = private unnamed_addr constant [5 x i8] c"sinh\00", align 1
@.str.28.350 = private unnamed_addr constant [4 x i8] c"sin\00", align 1
@.str.29.351 = private unnamed_addr constant [5 x i8] c"sqrt\00", align 1
@.str.30.352 = private unnamed_addr constant [5 x i8] c"tanh\00", align 1
@.str.31.353 = private unnamed_addr constant [4 x i8] c"tan\00", align 1
@.str.32.354 = private unnamed_addr constant [18 x i8] c"interval is empty\00", align 1
@.str.33.355 = private unnamed_addr constant [26 x i8] c"wrong number of arguments\00", align 1
@.str.362 = private unnamed_addr constant [39 x i8] c"memory allocation error: block too big\00", align 1
@.str.365 = private unnamed_addr constant [9 x i8] c"_LOADLIB\00", align 1
@.str.1.366 = private unnamed_addr constant [5 x i8] c"__gc\00", align 1
@.str.2.367 = private unnamed_addr constant [8 x i8] c"package\00", align 1
@pk_funcs = internal constant [3 x %struct.luaL_Reg] [%struct.luaL_Reg { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.15.410, i32 0, i32 0), i32 (%struct.lua_State*)* @ll_loadlib }, %struct.luaL_Reg { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.16.411, i32 0, i32 0), i32 (%struct.lua_State*)* @ll_seeall }, %struct.luaL_Reg zeroinitializer], align 16
@.str.3.368 = private unnamed_addr constant [8 x i8] c"loaders\00", align 1
@.str.5.369 = private unnamed_addr constant [9 x i8] c"LUA_PATH\00", align 1
@.str.6.370 = private unnamed_addr constant [138 x i8] c"./?.lua;/usr/local/share/lua/5.1/?.lua;/usr/local/share/lua/5.1/?/init.lua;/usr/local/lib/lua/5.1/?.lua;/usr/local/lib/lua/5.1/?/init.lua\00", align 1
@.str.38.371 = private unnamed_addr constant [3 x i8] c";;\00", align 1
@.str.39.372 = private unnamed_addr constant [4 x i8] c";\01;\00", align 1
@.str.40.373 = private unnamed_addr constant [2 x i8] c"\01\00", align 1
@.str.4.374 = private unnamed_addr constant [5 x i8] c"path\00", align 1
@.str.8.375 = private unnamed_addr constant [10 x i8] c"LUA_CPATH\00", align 1
@.str.9.376 = private unnamed_addr constant [69 x i8] c"./?.so;/usr/local/lib/lua/5.1/?.so;/usr/local/lib/lua/5.1/loadall.so\00", align 1
@.str.7.377 = private unnamed_addr constant [6 x i8] c"cpath\00", align 1
@.str.10.378 = private unnamed_addr constant [10 x i8] c"/\0A;\0A?\0A!\0A-\00", align 1
@.str.11.379 = private unnamed_addr constant [7 x i8] c"config\00", align 1
@.str.12.380 = private unnamed_addr constant [8 x i8] c"_LOADED\00", align 1
@.str.13.381 = private unnamed_addr constant [7 x i8] c"loaded\00", align 1
@.str.14.382 = private unnamed_addr constant [8 x i8] c"preload\00", align 1
@ll_funcs = internal constant [3 x %struct.luaL_Reg] [%struct.luaL_Reg { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.41.383, i32 0, i32 0), i32 (%struct.lua_State*)* @ll_module }, %struct.luaL_Reg { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.42.384, i32 0, i32 0), i32 (%struct.lua_State*)* @ll_require }, %struct.luaL_Reg zeroinitializer], align 16
@.str.41.383 = private unnamed_addr constant [7 x i8] c"module\00", align 1
@.str.42.384 = private unnamed_addr constant [8 x i8] c"require\00", align 1
@sentinel_ = internal constant i32 0, align 4
@.str.49.385 = private unnamed_addr constant [43 x i8] c"loop or previous error loading module '%s'\00", align 1
@.str.50.386 = private unnamed_addr constant [34 x i8] c"'package.loaders' must be a table\00", align 1
@.str.28.387 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.51.388 = private unnamed_addr constant [25 x i8] c"module '%s' not found:%s\00", align 1
@.str.43.389 = private unnamed_addr constant [30 x i8] c"name conflict for module '%s'\00", align 1
@.str.44.390 = private unnamed_addr constant [6 x i8] c"_NAME\00", align 1
@.str.45.391 = private unnamed_addr constant [3 x i8] c"_M\00", align 1
@.str.46.392 = private unnamed_addr constant [9 x i8] c"_PACKAGE\00", align 1
@.str.47.393 = private unnamed_addr constant [2 x i8] c"f\00", align 1
@.str.48.394 = private unnamed_addr constant [40 x i8] c"'module' not called from a Lua function\00", align 1
@.str.25.395 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.35.396 = private unnamed_addr constant [2 x i8] c"_\00", align 1
@.str.36.397 = private unnamed_addr constant [11 x i8] c"luaopen_%s\00", align 1
@.str.33.398 = private unnamed_addr constant [46 x i8] c"error loading module '%s' from file '%s':\0A\09%s\00", align 1
@.str.37.399 = private unnamed_addr constant [30 x i8] c"\0A\09no module '%s' in file '%s'\00", align 1
@.str.19.400 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@.str.20.401 = private unnamed_addr constant [10 x i8] c"LOADLIB: \00", align 1
@.str.21.402 = private unnamed_addr constant [59 x i8] c"dynamic libraries not enabled; check your Lua installation\00", align 1
@.str.26.403 = private unnamed_addr constant [2 x i8] c"/\00", align 1
@.str.27.404 = private unnamed_addr constant [30 x i8] c"'package.%s' must be a string\00", align 1
@.str.29.405 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@.str.32.406 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@.str.30.407 = private unnamed_addr constant [15 x i8] c"\0A\09no file '%s'\00", align 1
@.str.23.408 = private unnamed_addr constant [34 x i8] c"'package.preload' must be a table\00", align 1
@.str.24.409 = private unnamed_addr constant [33 x i8] c"\0A\09no field package.preload['%s']\00", align 1
@.str.15.410 = private unnamed_addr constant [8 x i8] c"loadlib\00", align 1
@.str.16.411 = private unnamed_addr constant [7 x i8] c"seeall\00", align 1
@.str.22.412 = private unnamed_addr constant [8 x i8] c"__index\00", align 1
@.str.17.413 = private unnamed_addr constant [7 x i8] c"absent\00", align 1
@.str.18.414 = private unnamed_addr constant [5 x i8] c"init\00", align 1
@luaO_nilobject_ = hidden constant %struct.lua_TValue.218 zeroinitializer, align 8
@luaO_log2.log_2 = internal unnamed_addr constant [256 x i8] calign 16
@.str.427 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.1.428 = private unnamed_addr constant [7 x i8] c"(null)\00", align 1
@.str.2.429 = private unnamed_addr constant [3 x i8] c"%p\00", align 1
@.str.3.430 = private unnamed_addr constant [2 x i8] c"%\00", align 1
@.str.6.431 = private unnamed_addr constant [10 x i8] c"[string \22\00", align 1
@.str.7.432 = private unnamed_addr constant [3 x i8] c"\22]\00", align 1
@luaP_opnames = hidden constant [39 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.435, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.436, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.437, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3.438, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4.439, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.5.440, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6.441, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.7.442, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.8.443, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.9.444, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.10.445, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11.446, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.12.447, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.13.448, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14.449, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.15.450, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.16.451, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.17.452, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.18.453, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.19.454, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.20.455, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.21.456, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.22.457, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.23.458, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.24.459, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.25.460, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.26.461, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.27.462, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.28.463, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.29.464, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.30.465, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.31.466, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.32.467, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.33.468, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.34.469, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.35.470, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.36.471, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.37.472, i32 0, i32 0), i8* null], align 16
@luaP_opmodes = hidden constant [38 x i8] c"`qT`Pql1\10<Tl||||||```h\22\BC\BC\BC\E4\E4TT\10bb\84\14\00QP", align 16
@.str.435 = private unnamed_addr constant [5 x i8] c"MOVE\00", align 1
@.str.1.436 = private unnamed_addr constant [6 x i8] c"LOADK\00", align 1
@.str.2.437 = private unnamed_addr constant [9 x i8] c"LOADBOOL\00", align 1
@.str.3.438 = private unnamed_addr constant [8 x i8] c"LOADNIL\00", align 1
@.str.4.439 = private unnamed_addr constant [9 x i8] c"GETUPVAL\00", align 1
@.str.5.440 = private unnamed_addr constant [10 x i8] c"GETGLOBAL\00", align 1
@.str.6.441 = private unnamed_addr constant [9 x i8] c"GETTABLE\00", align 1
@.str.7.442 = private unnamed_addr constant [10 x i8] c"SETGLOBAL\00", align 1
@.str.8.443 = private unnamed_addr constant [9 x i8] c"SETUPVAL\00", align 1
@.str.9.444 = private unnamed_addr constant [9 x i8] c"SETTABLE\00", align 1
@.str.10.445 = private unnamed_addr constant [9 x i8] c"NEWTABLE\00", align 1
@.str.11.446 = private unnamed_addr constant [5 x i8] c"SELF\00", align 1
@.str.12.447 = private unnamed_addr constant [4 x i8] c"ADD\00", align 1
@.str.13.448 = private unnamed_addr constant [4 x i8] c"SUB\00", align 1
@.str.14.449 = private unnamed_addr constant [4 x i8] c"MUL\00", align 1
@.str.15.450 = private unnamed_addr constant [4 x i8] c"DIV\00", align 1
@.str.16.451 = private unnamed_addr constant [4 x i8] c"MOD\00", align 1
@.str.17.452 = private unnamed_addr constant [4 x i8] c"POW\00", align 1
@.str.18.453 = private unnamed_addr constant [4 x i8] c"UNM\00", align 1
@.str.19.454 = private unnamed_addr constant [4 x i8] c"NOT\00", align 1
@.str.20.455 = private unnamed_addr constant [4 x i8] c"LEN\00", align 1
@.str.21.456 = private unnamed_addr constant [7 x i8] c"CONCAT\00", align 1
@.str.22.457 = private unnamed_addr constant [4 x i8] c"JMP\00", align 1
@.str.23.458 = private unnamed_addr constant [3 x i8] c"EQ\00", align 1
@.str.24.459 = private unnamed_addr constant [3 x i8] c"LT\00", align 1
@.str.25.460 = private unnamed_addr constant [3 x i8] c"LE\00", align 1
@.str.26.461 = private unnamed_addr constant [5 x i8] c"TEST\00", align 1
@.str.27.462 = private unnamed_addr constant [8 x i8] c"TESTSET\00", align 1
@.str.28.463 = private unnamed_addr constant [5 x i8] c"CALL\00", align 1
@.str.29.464 = private unnamed_addr constant [9 x i8] c"TAILCALL\00", align 1
@.str.30.465 = private unnamed_addr constant [7 x i8] c"RETURN\00", align 1
@.str.31.466 = private unnamed_addr constant [8 x i8] c"FORLOOP\00", align 1
@.str.32.467 = private unnamed_addr constant [8 x i8] c"FORPREP\00", align 1
@.str.33.468 = private unnamed_addr constant [9 x i8] c"TFORLOOP\00", align 1
@.str.34.469 = private unnamed_addr constant [8 x i8] c"SETLIST\00", align 1
@.str.35.470 = private unnamed_addr constant [6 x i8] c"CLOSE\00", align 1
@.str.36.471 = private unnamed_addr constant [8 x i8] c"CLOSURE\00", align 1
@.str.37.472 = private unnamed_addr constant [7 x i8] c"VARARG\00", align 1
@.str.475 = private unnamed_addr constant [3 x i8] c"os\00", align 1
@syslib = internal constant [12 x %struct.luaL_Reg] [%struct.luaL_Reg { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.476, i32 0, i32 0), i32 (%struct.lua_State*)* @os_clock }, %struct.luaL_Reg { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2.477, i32 0, i32 0), i32 (%struct.lua_State*)* @os_date }, %struct.luaL_Reg { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.3.478, i32 0, i32 0), i32 (%struct.lua_State*)* @os_difftime }, %struct.luaL_Reg { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.4.479, i32 0, i32 0), i32 (%struct.lua_State*)* @os_execute }, %struct.luaL_Reg { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5.480, i32 0, i32 0), i32 (%struct.lua_State*)* @os_exit }, %struct.luaL_Reg { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6.481, i32 0, i32 0), i32 (%struct.lua_State*)* @os_getenv }, %struct.luaL_Reg { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.482, i32 0, i32 0), i32 (%struct.lua_State*)* @os_remove }, %struct.luaL_Reg { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.8.483, i32 0, i32 0), i32 (%struct.lua_State*)* @os_rename }, %struct.luaL_Reg { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9.484, i32 0, i32 0), i32 (%struct.lua_State*)* @os_setlocale }, %struct.luaL_Reg { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.10.485, i32 0, i32 0), i32 (%struct.lua_State*)* @os_time }, %struct.luaL_Reg { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.11.486, i32 0, i32 0), i32 (%struct.lua_State*)* @os_tmpname }, %struct.luaL_Reg zeroinitializer], align 16
@.str.1.476 = private unnamed_addr constant [6 x i8] c"clock\00", align 1
@.str.2.477 = private unnamed_addr constant [5 x i8] c"date\00", align 1
@.str.3.478 = private unnamed_addr constant [9 x i8] c"difftime\00", align 1
@.str.4.479 = private unnamed_addr constant [8 x i8] c"execute\00", align 1
@.str.5.480 = private unnamed_addr constant [5 x i8] c"exit\00", align 1
@.str.6.481 = private unnamed_addr constant [7 x i8] c"getenv\00", align 1
@.str.7.482 = private unnamed_addr constant [7 x i8] c"remove\00", align 1
@.str.8.483 = private unnamed_addr constant [7 x i8] c"rename\00", align 1
@.str.9.484 = private unnamed_addr constant [10 x i8] c"setlocale\00", align 1
@.str.10.485 = private unnamed_addr constant [5 x i8] c"time\00", align 1
@.str.11.486 = private unnamed_addr constant [8 x i8] c"tmpname\00", align 1
@.str.30.487 = private unnamed_addr constant [16 x i8] c"/tmp/lua_XXXXXX\00", align 1
@.str.31.488 = private unnamed_addr constant [37 x i8] c"unable to generate a unique filename\00", align 1
@.str.14.489 = private unnamed_addr constant [4 x i8] c"sec\00", align 1
@.str.15.490 = private unnamed_addr constant [4 x i8] c"min\00", align 1
@.str.16.491 = private unnamed_addr constant [5 x i8] c"hour\00", align 1
@.str.17.492 = private unnamed_addr constant [4 x i8] c"day\00", align 1
@.str.29.493 = private unnamed_addr constant [33 x i8] c"field '%s' missing in date table\00", align 1
@.str.18.494 = private unnamed_addr constant [6 x i8] c"month\00", align 1
@.str.19.495 = private unnamed_addr constant [5 x i8] c"year\00", align 1
@.str.22.496 = private unnamed_addr constant [6 x i8] c"isdst\00", align 1
@.str.24.497 = private unnamed_addr constant [4 x i8] c"all\00", align 1
@os_setlocale.catnames = internal constant [7 x i8*] [i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.24.497, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.25.498, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.26.499, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.27.500, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.28.501, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.10.485, i32 0, i32 0), i8* null], align 16
@os_setlocale.cat = internal unnamed_addr constant [6 x i32] [i32 6, i32 3, i32 0, i32 4, i32 1, i32 2], align 16
@.str.25.498 = private unnamed_addr constant [8 x i8] c"collate\00", align 1
@.str.26.499 = private unnamed_addr constant [6 x i8] c"ctype\00", align 1
@.str.27.500 = private unnamed_addr constant [9 x i8] c"monetary\00", align 1
@.str.28.501 = private unnamed_addr constant [8 x i8] c"numeric\00", align 1
@.str.23.502 = private unnamed_addr constant [7 x i8] c"%s: %s\00", align 1
@.str.12.503 = private unnamed_addr constant [3 x i8] c"%c\00", align 1
@.str.20.504 = private unnamed_addr constant [5 x i8] c"wday\00", align 1
@.str.21.505 = private unnamed_addr constant [5 x i8] c"yday\00", align 1
@.str.1.508 = private unnamed_addr constant [33 x i8] c"chunk has too many syntax levels\00", align 1
@.str.509 = private unnamed_addr constant [14 x i8] c"'%s' expected\00", align 1
@.str.19.510 = private unnamed_addr constant [12 x i8] c"(for index)\00", align 1
@.str.20.511 = private unnamed_addr constant [12 x i8] c"(for limit)\00", align 1
@.str.21.512 = private unnamed_addr constant [11 x i8] c"(for step)\00", align 1
@.str.22.513 = private unnamed_addr constant [16 x i8] c"(for generator)\00", align 1
@.str.23.514 = private unnamed_addr constant [12 x i8] c"(for state)\00", align 1
@.str.24.515 = private unnamed_addr constant [14 x i8] c"(for control)\00", align 1
@.str.18.516 = private unnamed_addr constant [21 x i8] c"'=' or 'in' expected\00", align 1
@.str.25.517 = private unnamed_addr constant [17 x i8] c"no loop to break\00", align 1
@.str.26.518 = private unnamed_addr constant [13 x i8] c"syntax error\00", align 1
@.str.4.519 = private unnamed_addr constant [34 x i8] c"main function has more than %d %s\00", align 1
@.str.27.520 = private unnamed_addr constant [24 x i8] c"variables in assignment\00", align 1
@.str.5.521 = private unnamed_addr constant [40 x i8] c"function at line %d has more than %d %s\00", align 1
@.str.12.522 = private unnamed_addr constant [18 x i8] c"unexpected symbol\00", align 1
@.str.15.523 = private unnamed_addr constant [49 x i8] c"ambiguous syntax (function call x new statement)\00", align 1
@.str.16.524 = private unnamed_addr constant [28 x i8] c"function arguments expected\00", align 1
@.str.3.525 = private unnamed_addr constant [23 x i8] c"items in a constructor\00", align 1
@.str.6.526 = private unnamed_addr constant [5 x i8] c"self\00", align 1
@.str.9.527 = private unnamed_addr constant [4 x i8] c"arg\00", align 1
@.str.10.528 = private unnamed_addr constant [25 x i8] c"<name> or '...' expected\00", align 1
@.str.11.529 = private unnamed_addr constant [24 x i8] c"constant table overflow\00", align 1
@.str.13.530 = private unnamed_addr constant [9 x i8] c"upvalues\00", align 1
@.str.14.531 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7.532 = private unnamed_addr constant [16 x i8] c"local variables\00", align 1
@.str.8.533 = private unnamed_addr constant [25 x i8] c"too many local variables\00", align 1
@.str.2.534 = private unnamed_addr constant [43 x i8] c"cannot use '...' outside a vararg function\00", align 1
@priority = internal unnamed_addr constant [15 x %struct.upvaldesc] [%struct.upvaldesc { i8 6, i8 6 }, %struct.upvaldesc { i8 6, i8 6 }, %struct.upvaldesc { i8 7, i8 7 }, %struct.upvaldesc { i8 7, i8 7 }, %struct.upvaldesc { i8 7, i8 7 }, %struct.upvaldesc { i8 10, i8 9 }, %struct.upvaldesc { i8 5, i8 4 }, %struct.upvaldesc { i8 3, i8 3 }, %struct.upvaldesc { i8 3, i8 3 }, %struct.upvaldesc { i8 3, i8 3 }, %struct.upvaldesc { i8 3, i8 3 }, %struct.upvaldesc { i8 3, i8 3 }, %struct.upvaldesc { i8 3, i8 3 }, %struct.upvaldesc { i8 2, i8 2 }, %struct.upvaldesc { i8 1, i8 1 }], align 16
@.str.17.535 = private unnamed_addr constant [41 x i8] c"'%s' expected (to close '%s' at line %d)\00", align 1
@.str.542 = private unnamed_addr constant [18 x i8] c"not enough memory\00", align 1
@.str.551 = private unnamed_addr constant [7 x i8] c"string\00", align 1
@strlib = internal constant [16 x %struct.luaL_Reg] [%struct.luaL_Reg { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.556, i32 0, i32 0), i32 (%struct.lua_State*)* @str_byte }, %struct.luaL_Reg { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4.557, i32 0, i32 0), i32 (%struct.lua_State*)* @str_char }, %struct.luaL_Reg { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5.558, i32 0, i32 0), i32 (%struct.lua_State*)* @str_dump }, %struct.luaL_Reg { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.559, i32 0, i32 0), i32 (%struct.lua_State*)* @str_find }, %struct.luaL_Reg { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.560, i32 0, i32 0), i32 (%struct.lua_State*)* @str_format }, %struct.luaL_Reg { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2.553, i32 0, i32 0), i32 (%struct.lua_State*)* @gfind_nodef }, %struct.luaL_Reg { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.552, i32 0, i32 0), i32 (%struct.lua_State*)* @gmatch }, %struct.luaL_Reg { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.8.561, i32 0, i32 0), i32 (%struct.lua_State*)* @str_gsub }, %struct.luaL_Reg { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9.562, i32 0, i32 0), i32 (%struct.lua_State*)* @str_len }, %struct.luaL_Reg { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.10.563, i32 0, i32 0), i32 (%struct.lua_State*)* @str_lower }, %struct.luaL_Reg { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.11.564, i32 0, i32 0), i32 (%struct.lua_State*)* @str_match }, %struct.luaL_Reg { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.12.565, i32 0, i32 0), i32 (%struct.lua_State*)* @str_rep }, %struct.luaL_Reg { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.13.566, i32 0, i32 0), i32 (%struct.lua_State*)* @str_reverse }, %struct.luaL_Reg { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14.567, i32 0, i32 0), i32 (%struct.lua_State*)* @str_sub }, %struct.luaL_Reg { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15.568, i32 0, i32 0), i32 (%struct.lua_State*)* @str_upper }, %struct.luaL_Reg zeroinitializer], align 16
@.str.1.552 = private unnamed_addr constant [7 x i8] c"gmatch\00", align 1
@.str.2.553 = private unnamed_addr constant [6 x i8] c"gfind\00", align 1
@.str.38.554 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.39.555 = private unnamed_addr constant [8 x i8] c"__index\00", align 1
@.str.3.556 = private unnamed_addr constant [5 x i8] c"byte\00", align 1
@.str.4.557 = private unnamed_addr constant [5 x i8] c"char\00", align 1
@.str.5.558 = private unnamed_addr constant [5 x i8] c"dump\00", align 1
@.str.6.559 = private unnamed_addr constant [5 x i8] c"find\00", align 1
@.str.7.560 = private unnamed_addr constant [7 x i8] c"format\00", align 1
@.str.8.561 = private unnamed_addr constant [5 x i8] c"gsub\00", align 1
@.str.9.562 = private unnamed_addr constant [4 x i8] c"len\00", align 1
@.str.10.563 = private unnamed_addr constant [6 x i8] c"lower\00", align 1
@.str.11.564 = private unnamed_addr constant [6 x i8] c"match\00", align 1
@.str.12.565 = private unnamed_addr constant [4 x i8] c"rep\00", align 1
@.str.13.566 = private unnamed_addr constant [8 x i8] c"reverse\00", align 1
@.str.14.567 = private unnamed_addr constant [4 x i8] c"sub\00", align 1
@.str.15.568 = private unnamed_addr constant [6 x i8] c"upper\00", align 1
@.str.19.569 = private unnamed_addr constant [11 x i8] c"^$*+?.([%-\00", align 1
@.str.21.570 = private unnamed_addr constant [18 x i8] c"too many captures\00", align 1
@.str.26.571 = private unnamed_addr constant [22 x i8] c"invalid capture index\00", align 1
@.str.27.572 = private unnamed_addr constant [19 x i8] c"unfinished capture\00", align 1
@.str.22.573 = private unnamed_addr constant [24 x i8] c"invalid pattern capture\00", align 1
@.str.23.574 = private unnamed_addr constant [19 x i8] c"unbalanced pattern\00", align 1
@.str.20.575 = private unnamed_addr constant [35 x i8] c"missing '[' after '%%f' in pattern\00", align 1
@.str.24.576 = private unnamed_addr constant [35 x i8] c"malformed pattern (ends with '%%')\00", align 1
@.str.25.577 = private unnamed_addr constant [32 x i8] c"malformed pattern (missing ']')\00", align 1
@.str.36.578 = private unnamed_addr constant [31 x i8] c"string/function/table expected\00", align 1
@.str.37.579 = private unnamed_addr constant [33 x i8] c"invalid replacement value (a %s)\00", align 1
@.str.35.580 = private unnamed_addr constant [46 x i8] c"'string.gfind' was renamed to 'string.gmatch'\00", align 1
@.str.30.581 = private unnamed_addr constant [32 x i8] c"invalid format (repeated flags)\00", align 1
@.str.31.582 = private unnamed_addr constant [45 x i8] c"invalid format (width or precision too long)\00", align 1
@.str.33.583 = private unnamed_addr constant [3 x i8] c"\5Cr\00", align 1
@.str.34.584 = private unnamed_addr constant [5 x i8] c"\5C000\00", align 1
@.str.28.585 = private unnamed_addr constant [34 x i8] c"invalid option '%%%c' to 'format'\00", align 1
@.str.18.586 = private unnamed_addr constant [30 x i8] c"unable to dump given function\00", align 1
@.str.17.587 = private unnamed_addr constant [14 x i8] c"invalid value\00", align 1
@.str.16.588 = private unnamed_addr constant [22 x i8] c"string slice too long\00", align 1
@.str.2.607 = private unnamed_addr constant [22 x i8] c"invalid key to 'next'\00", align 1
@dummynode_ = internal constant %struct.Node zeroinitializer, align 8
@.str.608 = private unnamed_addr constant [19 x i8] c"table index is nil\00", align 1
@.str.1.609 = private unnamed_addr constant [19 x i8] c"table index is NaN\00", align 1
@.str.3.610 = private unnamed_addr constant [15 x i8] c"table overflow\00", align 1
@.str.613 = private unnamed_addr constant [6 x i8] c"table\00", align 1
@tab_funcs = internal constant [10 x %struct.luaL_Reg] [%struct.luaL_Reg { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.614, i32 0, i32 0), i32 (%struct.lua_State*)* @tconcat }, %struct.luaL_Reg { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2.615, i32 0, i32 0), i32 (%struct.lua_State*)* @foreach }, %struct.luaL_Reg { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.3.616, i32 0, i32 0), i32 (%struct.lua_State*)* @foreachi }, %struct.luaL_Reg { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4.617, i32 0, i32 0), i32 (%struct.lua_State*)* @getn }, %struct.luaL_Reg { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5.618, i32 0, i32 0), i32 (%struct.lua_State*)* @maxn }, %struct.luaL_Reg { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6.619, i32 0, i32 0), i32 (%struct.lua_State*)* @tinsert }, %struct.luaL_Reg { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.620, i32 0, i32 0), i32 (%struct.lua_State*)* @tremove }, %struct.luaL_Reg { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.8.621, i32 0, i32 0), i32 (%struct.lua_State*)* @setn }, %struct.luaL_Reg { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.9.622, i32 0, i32 0), i32 (%struct.lua_State*)* @sort }, %struct.luaL_Reg zeroinitializer], align 16
@.str.1.614 = private unnamed_addr constant [7 x i8] c"concat\00", align 1
@.str.2.615 = private unnamed_addr constant [8 x i8] c"foreach\00", align 1
@.str.3.616 = private unnamed_addr constant [9 x i8] c"foreachi\00", align 1
@.str.4.617 = private unnamed_addr constant [5 x i8] c"getn\00", align 1
@.str.5.618 = private unnamed_addr constant [5 x i8] c"maxn\00", align 1
@.str.6.619 = private unnamed_addr constant [7 x i8] c"insert\00", align 1
@.str.7.620 = private unnamed_addr constant [7 x i8] c"remove\00", align 1
@.str.8.621 = private unnamed_addr constant [5 x i8] c"setn\00", align 1
@.str.9.622 = private unnamed_addr constant [5 x i8] c"sort\00", align 1
@.str.10.623 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.14.624 = private unnamed_addr constant [35 x i8] c"invalid order function for sorting\00", align 1
@.str.13.625 = private unnamed_addr constant [19 x i8] c"'setn' is obsolete\00", align 1
@.str.12.626 = private unnamed_addr constant [38 x i8] c"wrong number of arguments to 'insert'\00", align 1
@.str.11.627 = private unnamed_addr constant [53 x i8] c"invalid value (%s) at index %d in table for 'concat'\00", align 1
@luaT_typenames = hidden constant [11 x i8*] [i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.636, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.637, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.638, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3.639, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4.640, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5.641, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6.642, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.638, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.643, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8.644, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.9.645, i32 0, i32 0)], align 16
@luaT_init.luaT_eventname = internal unnamed_addr constant [17 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.646, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.11.647, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.12.648, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.13.649, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.14.650, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15.651, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.16.652, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.17.653, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.18.654, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.19.655, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.20.656, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.21.657, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.22.658, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23.659, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.24.660, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.25.661, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.26.662, i32 0, i32 0)], align 16
@.str.636 = private unnamed_addr constant [4 x i8] c"nil\00", align 1
@.str.1.637 = private unnamed_addr constant [8 x i8] c"boolean\00", align 1
@.str.2.638 = private unnamed_addr constant [9 x i8] c"userdata\00", align 1
@.str.3.639 = private unnamed_addr constant [7 x i8] c"number\00", align 1
@.str.4.640 = private unnamed_addr constant [7 x i8] c"string\00", align 1
@.str.5.641 = private unnamed_addr constant [6 x i8] c"table\00", align 1
@.str.6.642 = private unnamed_addr constant [9 x i8] c"function\00", align 1
@.str.7.643 = private unnamed_addr constant [7 x i8] c"thread\00", align 1
@.str.8.644 = private unnamed_addr constant [6 x i8] c"proto\00", align 1
@.str.9.645 = private unnamed_addr constant [6 x i8] c"upval\00", align 1
@.str.10.646 = private unnamed_addr constant [8 x i8] c"__index\00", align 1
@.str.11.647 = private unnamed_addr constant [11 x i8] c"__newindex\00", align 1
@.str.12.648 = private unnamed_addr constant [5 x i8] c"__gc\00", align 1
@.str.13.649 = private unnamed_addr constant [7 x i8] c"__mode\00", align 1
@.str.14.650 = private unnamed_addr constant [5 x i8] c"__eq\00", align 1
@.str.15.651 = private unnamed_addr constant [6 x i8] c"__add\00", align 1
@.str.16.652 = private unnamed_addr constant [6 x i8] c"__sub\00", align 1
@.str.17.653 = private unnamed_addr constant [6 x i8] c"__mul\00", align 1
@.str.18.654 = private unnamed_addr constant [6 x i8] c"__div\00", align 1
@.str.19.655 = private unnamed_addr constant [6 x i8] c"__mod\00", align 1
@.str.20.656 = private unnamed_addr constant [6 x i8] c"__pow\00", align 1
@.str.21.657 = private unnamed_addr constant [6 x i8] c"__unm\00", align 1
@.str.22.658 = private unnamed_addr constant [6 x i8] c"__len\00", align 1
@.str.23.659 = private unnamed_addr constant [5 x i8] c"__lt\00", align 1
@.str.24.660 = private unnamed_addr constant [5 x i8] c"__le\00", align 1
@.str.25.661 = private unnamed_addr constant [9 x i8] c"__concat\00", align 1
@.str.26.662 = private unnamed_addr constant [7 x i8] c"__call\00", align 1
@.str.2.663 = private unnamed_addr constant [5 x i8] c"%s: \00", align 1
@.str.3.664 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@.str.665 = private unnamed_addr constant [39 x i8] c"cannot create state: not enough memory\00", align 1
@.str.1.666 = private unnamed_addr constant [4 x i8] c"lua\00", align 1
@.str.27.667 = private unnamed_addr constant [31 x i8] c"(error object is not a string)\00", align 1
@progname = internal unnamed_addr global i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1.666, i64 0, i64 0), align 8
@globalL = internal unnamed_addr global %struct.lua_State* null, align 8
@.str.4.668 = private unnamed_addr constant [9 x i8] c"LUA_INIT\00", align 1
@.str.5.669 = private unnamed_addr constant [10 x i8] c"=LUA_INIT\00", align 1
@.str.9.670 = private unnamed_addr constant [307 x i8] c"usage: %s [options] [script [args]].\0AAvailable options are:\0A  -e stat  execute string 'stat'\0A  -l name  require library 'name'\0A  -i       enter interactive mode after executing 'script'\0A  -v       show version information\0A  --       stop handling options\0A  -        execute stdin and stop handling options\0A\00", align 1
@.str.10.671 = private unnamed_addr constant [52 x i8] c"Lua 5.1.4  Copyright (C) 1994-2008 Lua.org, PUC-Rio\00", align 1
@.str.11.672 = private unnamed_addr constant [16 x i8] c"=(command line)\00", align 1
@.str.12.673 = private unnamed_addr constant [8 x i8] c"require\00", align 1
@.str.16.674 = private unnamed_addr constant [29 x i8] c"too many arguments to script\00", align 1
@.str.13.675 = private unnamed_addr constant [4 x i8] c"arg\00", align 1
@.str.20.676 = private unnamed_addr constant [7 x i8] c"=stdin\00", align 1
@.str.26.677 = private unnamed_addr constant [8 x i8] c"'<eof>'\00", align 1
@.str.19.678 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.17.679 = private unnamed_addr constant [6 x i8] c"print\00", align 1
@.str.18.680 = private unnamed_addr constant [27 x i8] c"error calling 'print' (%s)\00", align 1
@.str.22.681 = private unnamed_addr constant [8 x i8] c"_PROMPT\00", align 1
@.str.23.682 = private unnamed_addr constant [9 x i8] c"_PROMPT2\00", align 1
@.str.24.683 = private unnamed_addr constant [3 x i8] c"> \00", align 1
@.str.25.684 = private unnamed_addr constant [4 x i8] c">> \00", align 1
@.str.21.685 = private unnamed_addr constant [10 x i8] c"return %s\00", align 1
@.str.8.686 = private unnamed_addr constant [13 x i8] c"interrupted!\00", align 1
@.str.6.687 = private unnamed_addr constant [6 x i8] c"debug\00", align 1
@.str.7.688 = private unnamed_addr constant [10 x i8] c"traceback\00", align 1
@.str.1.693 = private unnamed_addr constant [14 x i8] c"binary string\00", align 1
@.str.5.694 = private unnamed_addr constant [28 x i8] c"%s: %s in precompiled chunk\00", align 1
@.str.4.695 = private unnamed_addr constant [15 x i8] c"unexpected end\00", align 1
@.str.3.696 = private unnamed_addr constant [11 x i8] c"bad header\00", align 1
@.str.2.697 = private unnamed_addr constant [3 x i8] c"=?\00", align 1
@.str.6.698 = private unnamed_addr constant [14 x i8] c"code too deep\00", align 1
@.str.8.699 = private unnamed_addr constant [12 x i8] c"bad integer\00", align 1
@.str.9.700 = private unnamed_addr constant [13 x i8] c"bad constant\00", align 1
@.str.7.701 = private unnamed_addr constant [9 x i8] c"bad code\00", align 1
@.str.718 = private unnamed_addr constant [6 x i8] c"%.14g\00", align 1
@.str.1.719 = private unnamed_addr constant [6 x i8] c"index\00", align 1
@.str.2.720 = private unnamed_addr constant [17 x i8] c"loop in gettable\00", align 1
@.str.3.721 = private unnamed_addr constant [17 x i8] c"loop in settable\00", align 1
@.str.4.722 = private unnamed_addr constant [23 x i8] c"string length overflow\00", align 1
@.str.5.723 = private unnamed_addr constant [14 x i8] c"get length of\00", align 1
@.str.6.724 = private unnamed_addr constant [37 x i8] c"'for' initial value must be a number\00", align 1
@.str.7.725 = private unnamed_addr constant [29 x i8] c"'for' limit must be a number\00", align 1
@.str.8.726 = private unnamed_addr constant [28 x i8] c"'for' step must be a number\00", align 1

; Function Attrs: nounwind uwtable
define hidden void @luaA_pushobject(%struct.lua_State* nocapture %L, %struct.lua_TValue* nocapture readonly %o) #0 {
  %1 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %2 = load %struct.lua_TValue*, %struct.lua_TValue** %1, align 8, !tbaa !1
  %3 = bitcast %struct.lua_TValue* %o to i64*
  %4 = bitcast %struct.lua_TValue* %2 to i64*
  %5 = load i64, i64* %3, align 8
  store i64 %5, i64* %4, align 8
  %6 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %o, i64 0, i32 1
  %7 = load i32, i32* %6, align 4, !tbaa !10
  %8 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %2, i64 0, i32 1
  store i32 %7, i32* %8, align 4, !tbaa !10
  %9 = load %struct.lua_TValue*, %struct.lua_TValue** %1, align 8, !tbaa !1
  %10 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %9, i64 1
  store %struct.lua_TValue* %10, %struct.lua_TValue** %1, align 8, !tbaa !1
  ret void
}

; Function Attrs: nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #1

; Function Attrs: nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #1

; Function Attrs: nounwind uwtable
define i32 @lua_checkstack(%struct.lua_State* %L, i32 %size) #0 {
  %1 = icmp sgt i32 %size, 8000
  br i1 %1, label %35, label %2

; <label>:2                                       ; preds = %0
  %3 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %4 = bitcast %struct.lua_TValue** %3 to i64*
  %5 = load i64, i64* %4, align 8, !tbaa !1
  %6 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 5
  %7 = bitcast %struct.lua_TValue** %6 to i64*
  %8 = load i64, i64* %7, align 8, !tbaa !11
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 4
  %11 = sext i32 %size to i64
  %12 = add nsw i64 %10, %11
  %13 = icmp sgt i64 %12, 8000
  %14 = inttoptr i64 %5 to %struct.lua_TValue*
  br i1 %13, label %35, label %15

; <label>:15                                      ; preds = %2
  %16 = icmp sgt i32 %size, 0
  br i1 %16, label %17, label %35

; <label>:17                                      ; preds = %15
  %18 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 9
  %19 = bitcast %struct.lua_TValue** %18 to i64*
  %20 = load i64, i64* %19, align 8, !tbaa !12
  %21 = sub i64 %20, %5
  %22 = shl nsw i32 %size, 4
  %23 = sext i32 %22 to i64
  %24 = icmp sgt i64 %21, %23
  br i1 %24, label %26, label %25

; <label>:25                                      ; preds = %17
  tail call void @luaD_growstack(%struct.lua_State* %L, i32 %size) #1
  %.pre = load %struct.lua_TValue*, %struct.lua_TValue** %3, align 8, !tbaa !1
  br label %26

; <label>:26                                      ; preds = %17, %25
  %27 = phi %struct.lua_TValue* [ %14, %17 ], [ %.pre, %25 ]
  %28 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 7
  %29 = load %struct.CallInfo*, %struct.CallInfo** %28, align 8, !tbaa !13
  %30 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %29, i64 0, i32 2
  %31 = load %struct.lua_TValue*, %struct.lua_TValue** %30, align 8, !tbaa !14
  %32 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %27, i64 %11
  %33 = icmp ult %struct.lua_TValue* %31, %32
  br i1 %33, label %34, label %35

; <label>:34                                      ; preds = %26
  store %struct.lua_TValue* %32, %struct.lua_TValue** %30, align 8, !tbaa !14
  br label %35

; <label>:35                                      ; preds = %0, %2, %15, %34, %26
  %res.0 = phi i32 [ 1, %34 ], [ 1, %26 ], [ 1, %15 ], [ 0, %2 ], [ 0, %0 ]
  ret i32 %res.0
}

; Function Attrs: nounwind uwtable
define void @lua_xmove(%struct.lua_State* %from, %struct.lua_State* %to, i32 %n) #0 {
  %1 = icmp eq %struct.lua_State* %from, %to
  br i1 %1, label %.loopexit, label %2

; <label>:2                                       ; preds = %0
  %3 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %from, i64 0, i32 4
  %4 = load %struct.lua_TValue*, %struct.lua_TValue** %3, align 8, !tbaa !1
  %5 = sext i32 %n to i64
  %6 = sub nsw i64 0, %5
  %7 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %4, i64 %6
  store %struct.lua_TValue* %7, %struct.lua_TValue** %3, align 8, !tbaa !1
  %8 = icmp sgt i32 %n, 0
  br i1 %8, label %.lr.ph, label %.loopexit

.lr.ph:                                           ; preds = %2
  %9 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %to, i64 0, i32 4
  %10 = load %struct.lua_TValue*, %struct.lua_TValue** %9, align 8, !tbaa !1
  %11 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %10, i64 1
  store %struct.lua_TValue* %11, %struct.lua_TValue** %9, align 8, !tbaa !1
  %12 = bitcast %struct.lua_TValue* %7 to i64*
  %13 = bitcast %struct.lua_TValue* %10 to i64*
  %14 = load i64, i64* %12, align 8
  store i64 %14, i64* %13, align 8
  %15 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %4, i64 %6, i32 1
  %16 = load i32, i32* %15, align 4, !tbaa !10
  %17 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %10, i64 0, i32 1
  store i32 %16, i32* %17, align 4, !tbaa !10
  %exitcond.2 = icmp eq i32 %n, 1
  br i1 %exitcond.2, label %.loopexit, label %._crit_edge.preheader

._crit_edge.preheader:                            ; preds = %.lr.ph
  %18 = and i32 %n, 1
  %lcmp.mod = icmp eq i32 %18, 0
  br i1 %lcmp.mod, label %._crit_edge.prol, label %._crit_edge.preheader.split

._crit_edge.prol:                                 ; preds = %._crit_edge.preheader
  %.pre.prol = load %struct.lua_TValue*, %struct.lua_TValue** %3, align 8, !tbaa !1
  %19 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %.pre.prol, i64 1
  %20 = load %struct.lua_TValue*, %struct.lua_TValue** %9, align 8, !tbaa !1
  %21 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %20, i64 1
  store %struct.lua_TValue* %21, %struct.lua_TValue** %9, align 8, !tbaa !1
  %22 = bitcast %struct.lua_TValue* %19 to i64*
  %23 = bitcast %struct.lua_TValue* %20 to i64*
  %24 = load i64, i64* %22, align 8
  store i64 %24, i64* %23, align 8
  %25 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %.pre.prol, i64 1, i32 1
  %26 = load i32, i32* %25, align 4, !tbaa !10
  %27 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %20, i64 0, i32 1
  store i32 %26, i32* %27, align 4, !tbaa !10
  br label %._crit_edge.preheader.split

._crit_edge.preheader.split:                      ; preds = %._crit_edge.prol, %._crit_edge.preheader
  %indvars.iv.next3.unr = phi i64 [ 1, %._crit_edge.preheader ], [ 2, %._crit_edge.prol ]
  %28 = icmp eq i32 %n, 2
  br i1 %28, label %.loopexit.loopexit, label %._crit_edge.preheader.split.split

._crit_edge.preheader.split.split:                ; preds = %._crit_edge.preheader.split
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge, %._crit_edge.preheader.split.split
  %indvars.iv.next3 = phi i64 [ %indvars.iv.next3.unr, %._crit_edge.preheader.split.split ], [ %indvars.iv.next.1, %._crit_edge ]
  %.pre = load %struct.lua_TValue*, %struct.lua_TValue** %3, align 8, !tbaa !1
  %29 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %.pre, i64 %indvars.iv.next3
  %30 = load %struct.lua_TValue*, %struct.lua_TValue** %9, align 8, !tbaa !1
  %31 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %30, i64 1
  store %struct.lua_TValue* %31, %struct.lua_TValue** %9, align 8, !tbaa !1
  %32 = bitcast %struct.lua_TValue* %29 to i64*
  %33 = bitcast %struct.lua_TValue* %30 to i64*
  %34 = load i64, i64* %32, align 8
  store i64 %34, i64* %33, align 8
  %35 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %.pre, i64 %indvars.iv.next3, i32 1
  %36 = load i32, i32* %35, align 4, !tbaa !10
  %37 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %30, i64 0, i32 1
  store i32 %36, i32* %37, align 4, !tbaa !10
  %indvars.iv.next = add nuw nsw i64 %indvars.iv.next3, 1
  %.pre.1 = load %struct.lua_TValue*, %struct.lua_TValue** %3, align 8, !tbaa !1
  %38 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %.pre.1, i64 %indvars.iv.next
  %39 = load %struct.lua_TValue*, %struct.lua_TValue** %9, align 8, !tbaa !1
  %40 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %39, i64 1
  store %struct.lua_TValue* %40, %struct.lua_TValue** %9, align 8, !tbaa !1
  %41 = bitcast %struct.lua_TValue* %38 to i64*
  %42 = bitcast %struct.lua_TValue* %39 to i64*
  %43 = load i64, i64* %41, align 8
  store i64 %43, i64* %42, align 8
  %44 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %.pre.1, i64 %indvars.iv.next, i32 1
  %45 = load i32, i32* %44, align 4, !tbaa !10
  %46 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %39, i64 0, i32 1
  store i32 %45, i32* %46, align 4, !tbaa !10
  %indvars.iv.next.1 = add nsw i64 %indvars.iv.next3, 2
  %lftr.wideiv.1 = trunc i64 %indvars.iv.next.1 to i32
  %exitcond.1 = icmp eq i32 %lftr.wideiv.1, %n
  br i1 %exitcond.1, label %.loopexit.loopexit.unr-lcssa, label %._crit_edge

.loopexit.loopexit.unr-lcssa:                     ; preds = %._crit_edge
  br label %.loopexit.loopexit

.loopexit.loopexit:                               ; preds = %._crit_edge.preheader.split, %.loopexit.loopexit.unr-lcssa
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %.lr.ph, %2, %0
  ret void
}

; Function Attrs: nounwind uwtable
define void @lua_setlevel(%struct.lua_State* nocapture readonly %from, %struct.lua_State* nocapture %to) #0 {
  %1 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %from, i64 0, i32 15
  %2 = load i16, i16* %1, align 2, !tbaa !16
  %3 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %to, i64 0, i32 15
  store i16 %2, i16* %3, align 2, !tbaa !16
  ret void
}

; Function Attrs: nounwind uwtable
define i32 (%struct.lua_State*)* @lua_atpanic(%struct.lua_State* nocapture readonly %L, i32 (%struct.lua_State*)* %panicf) #0 {
  %1 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 6
  %2 = load %struct.global_State*, %struct.global_State** %1, align 8, !tbaa !17
  %3 = getelementptr inbounds %struct.global_State, %struct.global_State* %2, i64 0, i32 19
  %4 = load i32 (%struct.lua_State*)*, i32 (%struct.lua_State*)** %3, align 8, !tbaa !18
  store i32 (%struct.lua_State*)* %panicf, i32 (%struct.lua_State*)** %3, align 8, !tbaa !18
  ret i32 (%struct.lua_State*)* %4
}

; Function Attrs: nounwind uwtable
define %struct.lua_State* @lua_newthread(%struct.lua_State* %L) #0 {
  %1 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 6
  %2 = load %struct.global_State*, %struct.global_State** %1, align 8, !tbaa !17
  %3 = getelementptr inbounds %struct.global_State, %struct.global_State* %2, i64 0, i32 14
  %4 = load i64, i64* %3, align 8, !tbaa !23
  %5 = getelementptr inbounds %struct.global_State, %struct.global_State* %2, i64 0, i32 13
  %6 = load i64, i64* %5, align 8, !tbaa !24
  %7 = icmp ult i64 %4, %6
  br i1 %7, label %9, label %8

; <label>:8                                       ; preds = %0
  tail call void @luaC_step(%struct.lua_State* %L) #1
  br label %9

; <label>:9                                       ; preds = %0, %8
  %10 = tail call %struct.lua_State* @luaE_newthread(%struct.lua_State* %L) #1
  %11 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %12 = load %struct.lua_TValue*, %struct.lua_TValue** %11, align 8, !tbaa !1
  %13 = bitcast %struct.lua_TValue* %12 to %struct.lua_State**
  store %struct.lua_State* %10, %struct.lua_State** %13, align 8, !tbaa !25
  %14 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %12, i64 0, i32 1
  store i32 8, i32* %14, align 4, !tbaa !10
  %15 = load %struct.lua_TValue*, %struct.lua_TValue** %11, align 8, !tbaa !1
  %16 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %15, i64 1
  store %struct.lua_TValue* %16, %struct.lua_TValue** %11, align 8, !tbaa !1
  ret %struct.lua_State* %10
}

; Function Attrs: nounwind readonly uwtable
define i32 @lua_gettop(%struct.lua_State* nocapture readonly %L) #2 {
  %1 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %2 = bitcast %struct.lua_TValue** %1 to i64*
  %3 = load i64, i64* %2, align 8, !tbaa !1
  %4 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 5
  %5 = bitcast %struct.lua_TValue** %4 to i64*
  %6 = load i64, i64* %5, align 8, !tbaa !11
  %7 = sub i64 %3, %6
  %8 = lshr exact i64 %7, 4
  %9 = trunc i64 %8 to i32
  ret i32 %9
}

; Function Attrs: nounwind uwtable
define void @lua_settop(%struct.lua_State* nocapture %L, i32 %idx) #0 {
  %1 = icmp sgt i32 %idx, -1
  br i1 %1, label %.preheader, label %36

.preheader:                                       ; preds = %0
  %2 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %3 = load %struct.lua_TValue*, %struct.lua_TValue** %2, align 8, !tbaa !1
  %4 = ptrtoint %struct.lua_TValue* %3 to i64
  %5 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 5
  %6 = load %struct.lua_TValue*, %struct.lua_TValue** %5, align 8, !tbaa !11
  %7 = sext i32 %idx to i64
  %8 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %6, i64 %7
  %9 = icmp ult %struct.lua_TValue* %3, %8
  br i1 %9, label %.lr.ph, label %35

.lr.ph:                                           ; preds = %.preheader
  %scevgep4 = getelementptr %struct.lua_TValue, %struct.lua_TValue* %3, i64 1
  %10 = icmp ugt %struct.lua_TValue* %8, %scevgep4
  %umax = select i1 %10, %struct.lua_TValue* %8, %struct.lua_TValue* %scevgep4
  %umax5 = bitcast %struct.lua_TValue* %umax to i8*
  %11 = xor i64 %4, -1
  %uglygep = getelementptr i8, i8* %umax5, i64 %11
  %uglygep6 = ptrtoint i8* %uglygep to i64
  %12 = lshr i64 %uglygep6, 4
  %13 = add nuw nsw i64 %12, 1
  %14 = sext i32 %idx to i64
  %scevgep = getelementptr %struct.lua_TValue, %struct.lua_TValue* %6, i64 %14, i32 0, i32 0
  %scevgep8 = bitcast %union.GCObject** %scevgep to i8*
  %15 = xor i64 %4, -1
  %uglygep9 = getelementptr i8, i8* %scevgep8, i64 %15
  %uglygep910 = ptrtoint i8* %uglygep9 to i64
  %16 = lshr i64 %uglygep910, 4
  %17 = add nuw nsw i64 %16, 1
  %xtraiter = and i64 %17, 7
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod, label %.lr.ph.split, label %.preheader11

.preheader11:                                     ; preds = %.lr.ph
  br label %18

; <label>:18                                      ; preds = %.preheader11, %18
  %19 = phi %struct.lua_TValue* [ %20, %18 ], [ %3, %.preheader11 ]
  %prol.iter = phi i64 [ %prol.iter.sub, %18 ], [ %xtraiter, %.preheader11 ]
  %20 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %19, i64 1
  %21 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %19, i64 0, i32 1
  store i32 0, i32* %21, align 4, !tbaa !10
  %prol.iter.sub = add i64 %prol.iter, -1
  %prol.iter.cmp = icmp eq i64 %prol.iter.sub, 0
  br i1 %prol.iter.cmp, label %.lr.ph.split.loopexit, label %18, !llvm.loop !26

.lr.ph.split.loopexit:                            ; preds = %18
  %.lcssa = phi %struct.lua_TValue* [ %20, %18 ]
  br label %.lr.ph.split

.lr.ph.split:                                     ; preds = %.lr.ph.split.loopexit, %.lr.ph
  %.unr = phi %struct.lua_TValue* [ %3, %.lr.ph ], [ %.lcssa, %.lr.ph.split.loopexit ]
  %22 = icmp ult i8* %uglygep9, inttoptr (i64 112 to i8*)
  br i1 %22, label %._crit_edge, label %.lr.ph.split.split

.lr.ph.split.split:                               ; preds = %.lr.ph.split
  br label %23

; <label>:23                                      ; preds = %23, %.lr.ph.split.split
  %24 = phi %struct.lua_TValue* [ %.unr, %.lr.ph.split.split ], [ %32, %23 ]
  %25 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %24, i64 0, i32 1
  store i32 0, i32* %25, align 4, !tbaa !10
  %26 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %24, i64 1, i32 1
  store i32 0, i32* %26, align 4, !tbaa !10
  %27 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %24, i64 2, i32 1
  store i32 0, i32* %27, align 4, !tbaa !10
  %28 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %24, i64 3, i32 1
  store i32 0, i32* %28, align 4, !tbaa !10
  %29 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %24, i64 4, i32 1
  store i32 0, i32* %29, align 4, !tbaa !10
  %30 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %24, i64 5, i32 1
  store i32 0, i32* %30, align 4, !tbaa !10
  %31 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %24, i64 6, i32 1
  store i32 0, i32* %31, align 4, !tbaa !10
  %32 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %24, i64 8
  %33 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %24, i64 7, i32 1
  store i32 0, i32* %33, align 4, !tbaa !10
  %34 = icmp ult %struct.lua_TValue* %32, %8
  br i1 %34, label %23, label %._crit_edge.unr-lcssa

._crit_edge.unr-lcssa:                            ; preds = %23
  br label %._crit_edge

._crit_edge:                                      ; preds = %.lr.ph.split, %._crit_edge.unr-lcssa
  %scevgep7 = getelementptr %struct.lua_TValue, %struct.lua_TValue* %3, i64 %13
  store %struct.lua_TValue* %scevgep7, %struct.lua_TValue** %2, align 8, !tbaa !1
  br label %35

; <label>:35                                      ; preds = %._crit_edge, %.preheader
  store %struct.lua_TValue* %8, %struct.lua_TValue** %2, align 8, !tbaa !1
  br label %42

; <label>:36                                      ; preds = %0
  %37 = add nsw i32 %idx, 1
  %38 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %39 = load %struct.lua_TValue*, %struct.lua_TValue** %38, align 8, !tbaa !1
  %40 = sext i32 %37 to i64
  %41 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %39, i64 %40
  store %struct.lua_TValue* %41, %struct.lua_TValue** %38, align 8, !tbaa !1
  br label %42

; <label>:42                                      ; preds = %36, %35
  ret void
}

; Function Attrs: nounwind uwtable
define void @lua_remove(%struct.lua_State* %L, i32 %idx) #0 {
  %1 = icmp sgt i32 %idx, 0
  br i1 %1, label %2, label %11

; <label>:2                                       ; preds = %0
  %3 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 5
  %4 = load %struct.lua_TValue*, %struct.lua_TValue** %3, align 8, !tbaa !11
  %5 = add nsw i32 %idx, -1
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %4, i64 %6
  %8 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %9 = load %struct.lua_TValue*, %struct.lua_TValue** %8, align 8, !tbaa !1
  %10 = icmp ult %struct.lua_TValue* %7, %9
  %.luaO_nilobject_.i = select i1 %10, %struct.lua_TValue* %7, %struct.lua_TValue* bitcast (%struct.lua_TValue.218* @luaO_nilobject_ to %struct.lua_TValue*)
  br label %index2adr.exit.preheader

; <label>:11                                      ; preds = %0
  %12 = icmp sgt i32 %idx, -10000
  br i1 %12, label %13, label %18

; <label>:13                                      ; preds = %11
  %14 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %15 = load %struct.lua_TValue*, %struct.lua_TValue** %14, align 8, !tbaa !1
  %16 = sext i32 %idx to i64
  %17 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %15, i64 %16
  br label %index2adr.exit.preheader

; <label>:18                                      ; preds = %11
  switch i32 %idx, label %38 [
    i32 -10000, label %19
    i32 -10001, label %23
    i32 -10002, label %36
  ]

; <label>:19                                      ; preds = %18
  %20 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 6
  %21 = load %struct.global_State*, %struct.global_State** %20, align 8, !tbaa !17
  %22 = getelementptr inbounds %struct.global_State, %struct.global_State* %21, i64 0, i32 20
  br label %index2adr.exit.preheader

; <label>:23                                      ; preds = %18
  %24 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 7
  %25 = load %struct.CallInfo*, %struct.CallInfo** %24, align 8, !tbaa !13
  %26 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %25, i64 0, i32 1
  %27 = bitcast %struct.lua_TValue** %26 to %struct.CClosure***
  %28 = load %struct.CClosure**, %struct.CClosure*** %27, align 8, !tbaa !28
  %29 = load %struct.CClosure*, %struct.CClosure** %28, align 8, !tbaa !25
  %30 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 23
  %31 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %29, i64 0, i32 6
  %32 = bitcast %struct.Table** %31 to i64*
  %33 = load i64, i64* %32, align 8, !tbaa !29
  %34 = bitcast %struct.lua_TValue* %30 to i64*
  store i64 %33, i64* %34, align 8, !tbaa !25
  %35 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 23, i32 1
  store i32 5, i32* %35, align 4, !tbaa !10
  br label %index2adr.exit.preheader

; <label>:36                                      ; preds = %18
  %37 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 22
  br label %index2adr.exit.preheader

; <label>:38                                      ; preds = %18
  %39 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 7
  %40 = load %struct.CallInfo*, %struct.CallInfo** %39, align 8, !tbaa !13
  %41 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %40, i64 0, i32 1
  %42 = bitcast %struct.lua_TValue** %41 to %struct.CClosure***
  %43 = load %struct.CClosure**, %struct.CClosure*** %42, align 8, !tbaa !28
  %44 = load %struct.CClosure*, %struct.CClosure** %43, align 8, !tbaa !25
  %45 = sub nsw i32 -10002, %idx
  %46 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %44, i64 0, i32 4
  %47 = load i8, i8* %46, align 1, !tbaa !31
  %48 = zext i8 %47 to i32
  %49 = icmp sgt i32 %45, %48
  br i1 %49, label %index2adr.exit.preheader, label %50

; <label>:50                                      ; preds = %38
  %51 = add nsw i32 %45, -1
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %44, i64 0, i32 8, i64 %52
  br label %index2adr.exit.preheader

index2adr.exit.preheader:                         ; preds = %2, %13, %19, %23, %36, %38, %50
  %p.0.ph = phi %struct.lua_TValue* [ bitcast (%struct.lua_TValue.218* @luaO_nilobject_ to %struct.lua_TValue*), %38 ], [ %53, %50 ], [ %22, %19 ], [ %30, %23 ], [ %37, %36 ], [ %17, %13 ], [ %.luaO_nilobject_.i, %2 ]
  %54 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %p.0.ph, i64 1
  %55 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %56 = load %struct.lua_TValue*, %struct.lua_TValue** %55, align 8, !tbaa !1
  %57 = icmp ult %struct.lua_TValue* %54, %56
  br i1 %57, label %index2adr.exit.preheader6, label %index2adr.exit._crit_edge

index2adr.exit.preheader6:                        ; preds = %index2adr.exit.preheader
  br label %index2adr.exit

index2adr.exit:                                   ; preds = %index2adr.exit.preheader6, %index2adr.exit
  %58 = phi %struct.lua_TValue* [ %65, %index2adr.exit ], [ %54, %index2adr.exit.preheader6 ]
  %p.02 = phi %struct.lua_TValue* [ %58, %index2adr.exit ], [ %p.0.ph, %index2adr.exit.preheader6 ]
  %59 = bitcast %struct.lua_TValue* %58 to i64*
  %60 = bitcast %struct.lua_TValue* %p.02 to i64*
  %61 = load i64, i64* %59, align 8
  store i64 %61, i64* %60, align 8
  %62 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %p.02, i64 1, i32 1
  %63 = load i32, i32* %62, align 4, !tbaa !10
  %64 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %p.02, i64 0, i32 1
  store i32 %63, i32* %64, align 4, !tbaa !10
  %65 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %58, i64 1
  %66 = load %struct.lua_TValue*, %struct.lua_TValue** %55, align 8, !tbaa !1
  %67 = icmp ult %struct.lua_TValue* %65, %66
  br i1 %67, label %index2adr.exit, label %index2adr.exit._crit_edge.loopexit

index2adr.exit._crit_edge.loopexit:               ; preds = %index2adr.exit
  %.lcssa = phi %struct.lua_TValue* [ %66, %index2adr.exit ]
  br label %index2adr.exit._crit_edge

index2adr.exit._crit_edge:                        ; preds = %index2adr.exit._crit_edge.loopexit, %index2adr.exit.preheader
  %.lcssa1 = phi %struct.lua_TValue* [ %56, %index2adr.exit.preheader ], [ %.lcssa, %index2adr.exit._crit_edge.loopexit ]
  %68 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %.lcssa1, i64 -1
  store %struct.lua_TValue* %68, %struct.lua_TValue** %55, align 8, !tbaa !1
  ret void
}

; Function Attrs: nounwind uwtable
define void @lua_insert(%struct.lua_State* %L, i32 %idx) #0 {
  %1 = icmp sgt i32 %idx, 0
  br i1 %1, label %2, label %11

; <label>:2                                       ; preds = %0
  %3 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 5
  %4 = load %struct.lua_TValue*, %struct.lua_TValue** %3, align 8, !tbaa !11
  %5 = add nsw i32 %idx, -1
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %4, i64 %6
  %8 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %9 = load %struct.lua_TValue*, %struct.lua_TValue** %8, align 8, !tbaa !1
  %10 = icmp ult %struct.lua_TValue* %7, %9
  %.luaO_nilobject_.i = select i1 %10, %struct.lua_TValue* %7, %struct.lua_TValue* bitcast (%struct.lua_TValue.218* @luaO_nilobject_ to %struct.lua_TValue*)
  br label %index2adr.exit

; <label>:11                                      ; preds = %0
  %12 = icmp sgt i32 %idx, -10000
  br i1 %12, label %13, label %18

; <label>:13                                      ; preds = %11
  %14 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %15 = load %struct.lua_TValue*, %struct.lua_TValue** %14, align 8, !tbaa !1
  %16 = sext i32 %idx to i64
  %17 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %15, i64 %16
  br label %index2adr.exit

; <label>:18                                      ; preds = %11
  switch i32 %idx, label %38 [
    i32 -10000, label %19
    i32 -10001, label %23
    i32 -10002, label %36
  ]

; <label>:19                                      ; preds = %18
  %20 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 6
  %21 = load %struct.global_State*, %struct.global_State** %20, align 8, !tbaa !17
  %22 = getelementptr inbounds %struct.global_State, %struct.global_State* %21, i64 0, i32 20
  br label %index2adr.exit

; <label>:23                                      ; preds = %18
  %24 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 7
  %25 = load %struct.CallInfo*, %struct.CallInfo** %24, align 8, !tbaa !13
  %26 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %25, i64 0, i32 1
  %27 = bitcast %struct.lua_TValue** %26 to %struct.CClosure***
  %28 = load %struct.CClosure**, %struct.CClosure*** %27, align 8, !tbaa !28
  %29 = load %struct.CClosure*, %struct.CClosure** %28, align 8, !tbaa !25
  %30 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 23
  %31 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %29, i64 0, i32 6
  %32 = bitcast %struct.Table** %31 to i64*
  %33 = load i64, i64* %32, align 8, !tbaa !29
  %34 = bitcast %struct.lua_TValue* %30 to i64*
  store i64 %33, i64* %34, align 8, !tbaa !25
  %35 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 23, i32 1
  store i32 5, i32* %35, align 4, !tbaa !10
  br label %index2adr.exit

; <label>:36                                      ; preds = %18
  %37 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 22
  br label %index2adr.exit

; <label>:38                                      ; preds = %18
  %39 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 7
  %40 = load %struct.CallInfo*, %struct.CallInfo** %39, align 8, !tbaa !13
  %41 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %40, i64 0, i32 1
  %42 = bitcast %struct.lua_TValue** %41 to %struct.CClosure***
  %43 = load %struct.CClosure**, %struct.CClosure*** %42, align 8, !tbaa !28
  %44 = load %struct.CClosure*, %struct.CClosure** %43, align 8, !tbaa !25
  %45 = sub nsw i32 -10002, %idx
  %46 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %44, i64 0, i32 4
  %47 = load i8, i8* %46, align 1, !tbaa !31
  %48 = zext i8 %47 to i32
  %49 = icmp sgt i32 %45, %48
  br i1 %49, label %index2adr.exit, label %50

; <label>:50                                      ; preds = %38
  %51 = add nsw i32 %45, -1
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %44, i64 0, i32 8, i64 %52
  br label %index2adr.exit

index2adr.exit:                                   ; preds = %2, %13, %19, %23, %36, %38, %50
  %.1.i = phi %struct.lua_TValue* [ %.luaO_nilobject_.i, %2 ], [ %17, %13 ], [ %37, %36 ], [ %30, %23 ], [ %22, %19 ], [ %53, %50 ], [ bitcast (%struct.lua_TValue.218* @luaO_nilobject_ to %struct.lua_TValue*), %38 ]
  %54 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %55 = load %struct.lua_TValue*, %struct.lua_TValue** %54, align 8, !tbaa !1
  %56 = icmp ugt %struct.lua_TValue* %55, %.1.i
  br i1 %56, label %.lr.ph.preheader, label %65

.lr.ph.preheader:                                 ; preds = %index2adr.exit
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %.lr.ph
  %q.03 = phi %struct.lua_TValue* [ %57, %.lr.ph ], [ %55, %.lr.ph.preheader ]
  %57 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %q.03, i64 -1
  %58 = bitcast %struct.lua_TValue* %57 to i64*
  %59 = bitcast %struct.lua_TValue* %q.03 to i64*
  %60 = load i64, i64* %58, align 8
  store i64 %60, i64* %59, align 8
  %61 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %q.03, i64 -1, i32 1
  %62 = load i32, i32* %61, align 4, !tbaa !10
  %63 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %q.03, i64 0, i32 1
  store i32 %62, i32* %63, align 4, !tbaa !10
  %64 = icmp ugt %struct.lua_TValue* %57, %.1.i
  br i1 %64, label %.lr.ph, label %._crit_edge

._crit_edge:                                      ; preds = %.lr.ph
  %.pre = load %struct.lua_TValue*, %struct.lua_TValue** %54, align 8, !tbaa !1
  br label %65

; <label>:65                                      ; preds = %._crit_edge, %index2adr.exit
  %66 = phi %struct.lua_TValue* [ %.pre, %._crit_edge ], [ %55, %index2adr.exit ]
  %67 = bitcast %struct.lua_TValue* %66 to i64*
  %68 = bitcast %struct.lua_TValue* %.1.i to i64*
  %69 = load i64, i64* %67, align 8
  store i64 %69, i64* %68, align 8
  %70 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %66, i64 0, i32 1
  %71 = load i32, i32* %70, align 4, !tbaa !10
  %72 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %.1.i, i64 0, i32 1
  store i32 %71, i32* %72, align 4, !tbaa !10
  ret void
}

; Function Attrs: nounwind uwtable
define void @lua_replace(%struct.lua_State* %L, i32 %idx) #0 {
  %1 = icmp eq i32 %idx, -10001
  br i1 %1, label %2, label %9

; <label>:2                                       ; preds = %0
  %3 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 7
  %4 = load %struct.CallInfo*, %struct.CallInfo** %3, align 8, !tbaa !13
  %5 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 12
  %6 = load %struct.CallInfo*, %struct.CallInfo** %5, align 8, !tbaa !32
  %7 = icmp eq %struct.CallInfo* %4, %6
  br i1 %7, label %8, label %.thread2

; <label>:8                                       ; preds = %2
  tail call void (%struct.lua_State*, i8*, ...) @luaG_runerror(%struct.lua_State* %L, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0)) #1
  br label %.thread2

; <label>:9                                       ; preds = %0
  %10 = icmp sgt i32 %idx, 0
  br i1 %10, label %11, label %20

; <label>:11                                      ; preds = %9
  %12 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 5
  %13 = load %struct.lua_TValue*, %struct.lua_TValue** %12, align 8, !tbaa !11
  %14 = add nsw i32 %idx, -1
  %15 = sext i32 %14 to i64
  %16 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %13, i64 %15
  %17 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %18 = load %struct.lua_TValue*, %struct.lua_TValue** %17, align 8, !tbaa !1
  %19 = icmp ult %struct.lua_TValue* %16, %18
  %.luaO_nilobject_.i = select i1 %19, %struct.lua_TValue* %16, %struct.lua_TValue* bitcast (%struct.lua_TValue.218* @luaO_nilobject_ to %struct.lua_TValue*)
  br label %87

; <label>:20                                      ; preds = %9
  %21 = icmp sgt i32 %idx, -10000
  br i1 %21, label %22, label %27

; <label>:22                                      ; preds = %20
  %23 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %24 = load %struct.lua_TValue*, %struct.lua_TValue** %23, align 8, !tbaa !1
  %25 = sext i32 %idx to i64
  %26 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %24, i64 %25
  br label %87

; <label>:27                                      ; preds = %20
  switch i32 %idx, label %34 [
    i32 -10000, label %28
    i32 -10001, label %..thread2_crit_edge
    i32 -10002, label %32
  ]

..thread2_crit_edge:                              ; preds = %27
  %.pre = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 7
  br label %.thread2

; <label>:28                                      ; preds = %27
  %29 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 6
  %30 = load %struct.global_State*, %struct.global_State** %29, align 8, !tbaa !17
  %31 = getelementptr inbounds %struct.global_State, %struct.global_State* %30, i64 0, i32 20
  br label %87

; <label>:32                                      ; preds = %27
  %33 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 22
  br label %87

; <label>:34                                      ; preds = %27
  %35 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 7
  %36 = load %struct.CallInfo*, %struct.CallInfo** %35, align 8, !tbaa !13
  %37 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %36, i64 0, i32 1
  %38 = bitcast %struct.lua_TValue** %37 to %struct.CClosure***
  %39 = load %struct.CClosure**, %struct.CClosure*** %38, align 8, !tbaa !28
  %40 = load %struct.CClosure*, %struct.CClosure** %39, align 8, !tbaa !25
  %41 = sub nsw i32 -10002, %idx
  %42 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %40, i64 0, i32 4
  %43 = load i8, i8* %42, align 1, !tbaa !31
  %44 = zext i8 %43 to i32
  %45 = icmp sgt i32 %41, %44
  br i1 %45, label %87, label %46

; <label>:46                                      ; preds = %34
  %47 = add nsw i32 %41, -1
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %40, i64 0, i32 8, i64 %48
  br label %87

.thread2:                                         ; preds = %..thread2_crit_edge, %2, %8
  %.pre-phi4 = phi %struct.CallInfo** [ %.pre, %..thread2_crit_edge ], [ %3, %2 ], [ %3, %8 ]
  %50 = load %struct.CallInfo*, %struct.CallInfo** %.pre-phi4, align 8, !tbaa !13
  %51 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %50, i64 0, i32 1
  %52 = bitcast %struct.lua_TValue** %51 to %struct.CClosure***
  %53 = load %struct.CClosure**, %struct.CClosure*** %52, align 8, !tbaa !28
  %54 = load %struct.CClosure*, %struct.CClosure** %53, align 8, !tbaa !25
  %55 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 23
  %56 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %54, i64 0, i32 6
  %57 = bitcast %struct.Table** %56 to i64*
  %58 = load i64, i64* %57, align 8, !tbaa !29
  %59 = bitcast %struct.lua_TValue* %55 to i64*
  store i64 %58, i64* %59, align 8, !tbaa !25
  %60 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 23, i32 1
  store i32 5, i32* %60, align 4, !tbaa !10
  %61 = bitcast %struct.lua_TValue** %51 to %union.Closure***
  %62 = load %union.Closure**, %union.Closure*** %61, align 8, !tbaa !28
  %63 = load %union.Closure*, %union.Closure** %62, align 8, !tbaa !25
  %64 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %65 = load %struct.lua_TValue*, %struct.lua_TValue** %64, align 8, !tbaa !1
  %66 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %65, i64 -1, i32 0, i32 0
  %67 = bitcast %union.GCObject** %66 to i64*
  %68 = load i64, i64* %67, align 8, !tbaa !25
  %69 = getelementptr inbounds %union.Closure, %union.Closure* %63, i64 0, i32 0, i32 6
  %70 = bitcast %struct.Table** %69 to i64*
  store i64 %68, i64* %70, align 8, !tbaa !29
  %71 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %65, i64 -1, i32 1
  %72 = load i32, i32* %71, align 4, !tbaa !10
  %73 = icmp sgt i32 %72, 3
  br i1 %73, label %74, label %122

; <label>:74                                      ; preds = %.thread2
  %75 = load %union.GCObject*, %union.GCObject** %66, align 8, !tbaa !25
  %76 = getelementptr inbounds %union.GCObject, %union.GCObject* %75, i64 0, i32 0, i32 2
  %77 = load i8, i8* %76, align 1, !tbaa !33
  %78 = and i8 %77, 3
  %79 = icmp eq i8 %78, 0
  br i1 %79, label %122, label %80

; <label>:80                                      ; preds = %74
  %81 = getelementptr inbounds %union.Closure, %union.Closure* %63, i64 0, i32 0, i32 2
  %82 = load i8, i8* %81, align 1, !tbaa !33
  %83 = and i8 %82, 4
  %84 = icmp eq i8 %83, 0
  br i1 %84, label %122, label %85

; <label>:85                                      ; preds = %80
  %86 = bitcast %union.Closure* %63 to %union.GCObject*
  tail call void @luaC_barrierf(%struct.lua_State* %L, %union.GCObject* %86, %union.GCObject* %75) #1
  br label %122

; <label>:87                                      ; preds = %11, %22, %28, %32, %34, %46
  %.1.i.ph = phi %struct.lua_TValue* [ bitcast (%struct.lua_TValue.218* @luaO_nilobject_ to %struct.lua_TValue*), %34 ], [ %49, %46 ], [ %31, %28 ], [ %33, %32 ], [ %26, %22 ], [ %.luaO_nilobject_.i, %11 ]
  %88 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %89 = load %struct.lua_TValue*, %struct.lua_TValue** %88, align 8, !tbaa !1
  %90 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %89, i64 -1
  %91 = bitcast %struct.lua_TValue* %90 to i64*
  %92 = bitcast %struct.lua_TValue* %.1.i.ph to i64*
  %93 = load i64, i64* %91, align 8
  store i64 %93, i64* %92, align 8
  %94 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %89, i64 -1, i32 1
  %95 = load i32, i32* %94, align 4, !tbaa !10
  %96 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %.1.i.ph, i64 0, i32 1
  store i32 %95, i32* %96, align 4, !tbaa !10
  %97 = icmp slt i32 %idx, -10002
  br i1 %97, label %98, label %122

; <label>:98                                      ; preds = %87
  %99 = load %struct.lua_TValue*, %struct.lua_TValue** %88, align 8, !tbaa !1
  %100 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %99, i64 -1, i32 1
  %101 = load i32, i32* %100, align 4, !tbaa !10
  %102 = icmp sgt i32 %101, 3
  br i1 %102, label %103, label %122

; <label>:103                                     ; preds = %98
  %104 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %99, i64 -1, i32 0, i32 0
  %105 = load %union.GCObject*, %union.GCObject** %104, align 8, !tbaa !25
  %106 = getelementptr inbounds %union.GCObject, %union.GCObject* %105, i64 0, i32 0, i32 2
  %107 = load i8, i8* %106, align 1, !tbaa !33
  %108 = and i8 %107, 3
  %109 = icmp eq i8 %108, 0
  br i1 %109, label %122, label %110

; <label>:110                                     ; preds = %103
  %111 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 7
  %112 = load %struct.CallInfo*, %struct.CallInfo** %111, align 8, !tbaa !13
  %113 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %112, i64 0, i32 1
  %114 = load %struct.lua_TValue*, %struct.lua_TValue** %113, align 8, !tbaa !28
  %115 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %114, i64 0, i32 0, i32 0
  %116 = load %union.GCObject*, %union.GCObject** %115, align 8, !tbaa !25
  %117 = getelementptr inbounds %union.GCObject, %union.GCObject* %116, i64 0, i32 0, i32 2
  %118 = load i8, i8* %117, align 1, !tbaa !33
  %119 = and i8 %118, 4
  %120 = icmp eq i8 %119, 0
  br i1 %120, label %122, label %121

; <label>:121                                     ; preds = %110
  tail call void @luaC_barrierf(%struct.lua_State* %L, %union.GCObject* %116, %union.GCObject* %105) #1
  br label %122

; <label>:122                                     ; preds = %.thread2, %85, %74, %80, %110, %103, %87, %121, %98
  %.pre-phi = phi %struct.lua_TValue** [ %64, %.thread2 ], [ %64, %85 ], [ %64, %74 ], [ %64, %80 ], [ %88, %110 ], [ %88, %103 ], [ %88, %87 ], [ %88, %121 ], [ %88, %98 ]
  %123 = load %struct.lua_TValue*, %struct.lua_TValue** %.pre-phi, align 8, !tbaa !1
  %124 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %123, i64 -1
  store %struct.lua_TValue* %124, %struct.lua_TValue** %.pre-phi, align 8, !tbaa !1
  ret void
}

; Function Attrs: nounwind uwtable
define void @lua_pushvalue(%struct.lua_State* nocapture %L, i32 %idx) #0 {
  %1 = icmp sgt i32 %idx, 0
  br i1 %1, label %2, label %11

; <label>:2                                       ; preds = %0
  %3 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 5
  %4 = load %struct.lua_TValue*, %struct.lua_TValue** %3, align 8, !tbaa !11
  %5 = add nsw i32 %idx, -1
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %4, i64 %6
  %8 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %9 = load %struct.lua_TValue*, %struct.lua_TValue** %8, align 8, !tbaa !1
  %10 = icmp ult %struct.lua_TValue* %7, %9
  %.luaO_nilobject_.i = select i1 %10, %struct.lua_TValue* %7, %struct.lua_TValue* bitcast (%struct.lua_TValue.218* @luaO_nilobject_ to %struct.lua_TValue*)
  br label %index2adr.exit

; <label>:11                                      ; preds = %0
  %12 = icmp sgt i32 %idx, -10000
  br i1 %12, label %13, label %18

; <label>:13                                      ; preds = %11
  %14 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %15 = load %struct.lua_TValue*, %struct.lua_TValue** %14, align 8, !tbaa !1
  %16 = sext i32 %idx to i64
  %17 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %15, i64 %16
  br label %index2adr.exit

; <label>:18                                      ; preds = %11
  switch i32 %idx, label %38 [
    i32 -10000, label %19
    i32 -10001, label %23
    i32 -10002, label %36
  ]

; <label>:19                                      ; preds = %18
  %20 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 6
  %21 = load %struct.global_State*, %struct.global_State** %20, align 8, !tbaa !17
  %22 = getelementptr inbounds %struct.global_State, %struct.global_State* %21, i64 0, i32 20
  br label %index2adr.exit

; <label>:23                                      ; preds = %18
  %24 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 7
  %25 = load %struct.CallInfo*, %struct.CallInfo** %24, align 8, !tbaa !13
  %26 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %25, i64 0, i32 1
  %27 = bitcast %struct.lua_TValue** %26 to %struct.CClosure***
  %28 = load %struct.CClosure**, %struct.CClosure*** %27, align 8, !tbaa !28
  %29 = load %struct.CClosure*, %struct.CClosure** %28, align 8, !tbaa !25
  %30 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 23
  %31 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %29, i64 0, i32 6
  %32 = bitcast %struct.Table** %31 to i64*
  %33 = load i64, i64* %32, align 8, !tbaa !29
  %34 = bitcast %struct.lua_TValue* %30 to i64*
  store i64 %33, i64* %34, align 8, !tbaa !25
  %35 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 23, i32 1
  store i32 5, i32* %35, align 4, !tbaa !10
  br label %index2adr.exit

; <label>:36                                      ; preds = %18
  %37 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 22
  br label %index2adr.exit

; <label>:38                                      ; preds = %18
  %39 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 7
  %40 = load %struct.CallInfo*, %struct.CallInfo** %39, align 8, !tbaa !13
  %41 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %40, i64 0, i32 1
  %42 = bitcast %struct.lua_TValue** %41 to %struct.CClosure***
  %43 = load %struct.CClosure**, %struct.CClosure*** %42, align 8, !tbaa !28
  %44 = load %struct.CClosure*, %struct.CClosure** %43, align 8, !tbaa !25
  %45 = sub nsw i32 -10002, %idx
  %46 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %44, i64 0, i32 4
  %47 = load i8, i8* %46, align 1, !tbaa !31
  %48 = zext i8 %47 to i32
  %49 = icmp sgt i32 %45, %48
  br i1 %49, label %index2adr.exit, label %50

; <label>:50                                      ; preds = %38
  %51 = add nsw i32 %45, -1
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %44, i64 0, i32 8, i64 %52
  br label %index2adr.exit

index2adr.exit:                                   ; preds = %2, %13, %19, %23, %36, %38, %50
  %.1.i = phi %struct.lua_TValue* [ %.luaO_nilobject_.i, %2 ], [ %17, %13 ], [ %37, %36 ], [ %30, %23 ], [ %22, %19 ], [ %53, %50 ], [ bitcast (%struct.lua_TValue.218* @luaO_nilobject_ to %struct.lua_TValue*), %38 ]
  %54 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %55 = load %struct.lua_TValue*, %struct.lua_TValue** %54, align 8, !tbaa !1
  %56 = bitcast %struct.lua_TValue* %.1.i to i64*
  %57 = bitcast %struct.lua_TValue* %55 to i64*
  %58 = load i64, i64* %56, align 8
  store i64 %58, i64* %57, align 8
  %59 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %.1.i, i64 0, i32 1
  %60 = load i32, i32* %59, align 4, !tbaa !10
  %61 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %55, i64 0, i32 1
  store i32 %60, i32* %61, align 4, !tbaa !10
  %62 = load %struct.lua_TValue*, %struct.lua_TValue** %54, align 8, !tbaa !1
  %63 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %62, i64 1
  store %struct.lua_TValue* %63, %struct.lua_TValue** %54, align 8, !tbaa !1
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @lua_type(%struct.lua_State* %L, i32 %idx) #0 {
  %1 = icmp sgt i32 %idx, 0
  br i1 %1, label %2, label %11

; <label>:2                                       ; preds = %0
  %3 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 5
  %4 = load %struct.lua_TValue*, %struct.lua_TValue** %3, align 8, !tbaa !11
  %5 = add nsw i32 %idx, -1
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %4, i64 %6
  %8 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %9 = load %struct.lua_TValue*, %struct.lua_TValue** %8, align 8, !tbaa !1
  %10 = icmp ult %struct.lua_TValue* %7, %9
  br i1 %10, label %index2adr.exit, label %index2adr.exit.thread

; <label>:11                                      ; preds = %0
  %12 = icmp sgt i32 %idx, -10000
  br i1 %12, label %13, label %18

; <label>:13                                      ; preds = %11
  %14 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %15 = load %struct.lua_TValue*, %struct.lua_TValue** %14, align 8, !tbaa !1
  %16 = sext i32 %idx to i64
  %17 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %15, i64 %16
  br label %index2adr.exit

; <label>:18                                      ; preds = %11
  switch i32 %idx, label %38 [
    i32 -10000, label %19
    i32 -10001, label %23
    i32 -10002, label %36
  ]

; <label>:19                                      ; preds = %18
  %20 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 6
  %21 = load %struct.global_State*, %struct.global_State** %20, align 8, !tbaa !17
  %22 = getelementptr inbounds %struct.global_State, %struct.global_State* %21, i64 0, i32 20
  br label %index2adr.exit

; <label>:23                                      ; preds = %18
  %24 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 7
  %25 = load %struct.CallInfo*, %struct.CallInfo** %24, align 8, !tbaa !13
  %26 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %25, i64 0, i32 1
  %27 = bitcast %struct.lua_TValue** %26 to %struct.CClosure***
  %28 = load %struct.CClosure**, %struct.CClosure*** %27, align 8, !tbaa !28
  %29 = load %struct.CClosure*, %struct.CClosure** %28, align 8, !tbaa !25
  %30 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 23
  %31 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %29, i64 0, i32 6
  %32 = bitcast %struct.Table** %31 to i64*
  %33 = load i64, i64* %32, align 8, !tbaa !29
  %34 = bitcast %struct.lua_TValue* %30 to i64*
  store i64 %33, i64* %34, align 8, !tbaa !25
  %35 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 23, i32 1
  store i32 5, i32* %35, align 4, !tbaa !10
  br label %index2adr.exit

; <label>:36                                      ; preds = %18
  %37 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 22
  br label %index2adr.exit

; <label>:38                                      ; preds = %18
  %39 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 7
  %40 = load %struct.CallInfo*, %struct.CallInfo** %39, align 8, !tbaa !13
  %41 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %40, i64 0, i32 1
  %42 = bitcast %struct.lua_TValue** %41 to %struct.CClosure***
  %43 = load %struct.CClosure**, %struct.CClosure*** %42, align 8, !tbaa !28
  %44 = load %struct.CClosure*, %struct.CClosure** %43, align 8, !tbaa !25
  %45 = sub nsw i32 -10002, %idx
  %46 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %44, i64 0, i32 4
  %47 = load i8, i8* %46, align 1, !tbaa !31
  %48 = zext i8 %47 to i32
  %49 = icmp sgt i32 %45, %48
  br i1 %49, label %index2adr.exit.thread, label %50

; <label>:50                                      ; preds = %38
  %51 = add nsw i32 %45, -1
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %44, i64 0, i32 8, i64 %52
  br label %index2adr.exit

index2adr.exit:                                   ; preds = %2, %13, %19, %23, %36, %50
  %.1.i = phi %struct.lua_TValue* [ %17, %13 ], [ %37, %36 ], [ %30, %23 ], [ %22, %19 ], [ %53, %50 ], [ %7, %2 ]
  %54 = icmp eq %struct.lua_TValue* %.1.i, bitcast (%struct.lua_TValue.218* @luaO_nilobject_ to %struct.lua_TValue*)
  br i1 %54, label %index2adr.exit.thread, label %55

; <label>:55                                      ; preds = %index2adr.exit
  %56 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %.1.i, i64 0, i32 1
  %57 = load i32, i32* %56, align 4, !tbaa !10
  br label %index2adr.exit.thread

index2adr.exit.thread:                            ; preds = %38, %2, %index2adr.exit, %55
  %58 = phi i32 [ %57, %55 ], [ -1, %index2adr.exit ], [ -1, %2 ], [ -1, %38 ]
  ret i32 %58
}

; Function Attrs: nounwind readnone uwtable
define i8* @lua_typename(%struct.lua_State* nocapture readnone %L, i32 %t) #3 {
  %1 = icmp eq i32 %t, -1
  br i1 %1, label %6, label %2

; <label>:2                                       ; preds = %0
  %3 = sext i32 %t to i64
  %4 = getelementptr inbounds [0 x i8*], [0 x i8*]* bitcast ([11 x i8*]* @luaT_typenames to [0 x i8*]*), i64 0, i64 %3
  %5 = load i8*, i8** %4, align 8, !tbaa !25
  br label %6

; <label>:6                                       ; preds = %0, %2
  %7 = phi i8* [ %5, %2 ], [ getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), %0 ]
  ret i8* %7
}

; Function Attrs: nounwind uwtable
define i32 @lua_iscfunction(%struct.lua_State* nocapture %L, i32 %idx) #0 {
  %1 = icmp sgt i32 %idx, 0
  br i1 %1, label %2, label %11

; <label>:2                                       ; preds = %0
  %3 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 5
  %4 = load %struct.lua_TValue*, %struct.lua_TValue** %3, align 8, !tbaa !11
  %5 = add nsw i32 %idx, -1
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %4, i64 %6
  %8 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %9 = load %struct.lua_TValue*, %struct.lua_TValue** %8, align 8, !tbaa !1
  %10 = icmp ult %struct.lua_TValue* %7, %9
  %.luaO_nilobject_.i = select i1 %10, %struct.lua_TValue* %7, %struct.lua_TValue* bitcast (%struct.lua_TValue.218* @luaO_nilobject_ to %struct.lua_TValue*)
  br label %index2adr.exit

; <label>:11                                      ; preds = %0
  %12 = icmp sgt i32 %idx, -10000
  br i1 %12, label %13, label %18

; <label>:13                                      ; preds = %11
  %14 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %15 = load %struct.lua_TValue*, %struct.lua_TValue** %14, align 8, !tbaa !1
  %16 = sext i32 %idx to i64
  %17 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %15, i64 %16
  br label %index2adr.exit

; <label>:18                                      ; preds = %11
  switch i32 %idx, label %38 [
    i32 -10000, label %19
    i32 -10001, label %23
    i32 -10002, label %36
  ]

; <label>:19                                      ; preds = %18
  %20 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 6
  %21 = load %struct.global_State*, %struct.global_State** %20, align 8, !tbaa !17
  %22 = getelementptr inbounds %struct.global_State, %struct.global_State* %21, i64 0, i32 20
  br label %index2adr.exit

; <label>:23                                      ; preds = %18
  %24 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 7
  %25 = load %struct.CallInfo*, %struct.CallInfo** %24, align 8, !tbaa !13
  %26 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %25, i64 0, i32 1
  %27 = bitcast %struct.lua_TValue** %26 to %struct.CClosure***
  %28 = load %struct.CClosure**, %struct.CClosure*** %27, align 8, !tbaa !28
  %29 = load %struct.CClosure*, %struct.CClosure** %28, align 8, !tbaa !25
  %30 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 23
  %31 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %29, i64 0, i32 6
  %32 = bitcast %struct.Table** %31 to i64*
  %33 = load i64, i64* %32, align 8, !tbaa !29
  %34 = bitcast %struct.lua_TValue* %30 to i64*
  store i64 %33, i64* %34, align 8, !tbaa !25
  %35 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 23, i32 1
  store i32 5, i32* %35, align 4, !tbaa !10
  br label %index2adr.exit

; <label>:36                                      ; preds = %18
  %37 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 22
  br label %index2adr.exit

; <label>:38                                      ; preds = %18
  %39 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 7
  %40 = load %struct.CallInfo*, %struct.CallInfo** %39, align 8, !tbaa !13
  %41 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %40, i64 0, i32 1
  %42 = bitcast %struct.lua_TValue** %41 to %struct.CClosure***
  %43 = load %struct.CClosure**, %struct.CClosure*** %42, align 8, !tbaa !28
  %44 = load %struct.CClosure*, %struct.CClosure** %43, align 8, !tbaa !25
  %45 = sub nsw i32 -10002, %idx
  %46 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %44, i64 0, i32 4
  %47 = load i8, i8* %46, align 1, !tbaa !31
  %48 = zext i8 %47 to i32
  %49 = icmp sgt i32 %45, %48
  br i1 %49, label %index2adr.exit, label %50

; <label>:50                                      ; preds = %38
  %51 = add nsw i32 %45, -1
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %44, i64 0, i32 8, i64 %52
  br label %index2adr.exit

index2adr.exit:                                   ; preds = %2, %13, %19, %23, %36, %38, %50
  %.1.i = phi %struct.lua_TValue* [ %.luaO_nilobject_.i, %2 ], [ %17, %13 ], [ %37, %36 ], [ %30, %23 ], [ %22, %19 ], [ %53, %50 ], [ bitcast (%struct.lua_TValue.218* @luaO_nilobject_ to %struct.lua_TValue*), %38 ]
  %54 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %.1.i, i64 0, i32 1
  %55 = load i32, i32* %54, align 4, !tbaa !10
  %56 = icmp eq i32 %55, 6
  br i1 %56, label %57, label %63

; <label>:57                                      ; preds = %index2adr.exit
  %58 = bitcast %struct.lua_TValue* %.1.i to %struct.CClosure**
  %59 = load %struct.CClosure*, %struct.CClosure** %58, align 8, !tbaa !25
  %60 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %59, i64 0, i32 3
  %61 = load i8, i8* %60, align 1, !tbaa !35
  %62 = icmp ne i8 %61, 0
  br label %63

; <label>:63                                      ; preds = %57, %index2adr.exit
  %64 = phi i1 [ false, %index2adr.exit ], [ %62, %57 ]
  %65 = zext i1 %64 to i32
  ret i32 %65
}

; Function Attrs: nounwind uwtable
define i32 @lua_isnumber(%struct.lua_State* %L, i32 %idx) #0 {
  %n = alloca %struct.lua_TValue, align 8
  %1 = bitcast %struct.lua_TValue* %n to i8*
  call void @llvm.lifetime.start(i64 16, i8* %1) #1
  %2 = icmp sgt i32 %idx, 0
  br i1 %2, label %3, label %12

; <label>:3                                       ; preds = %0
  %4 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 5
  %5 = load %struct.lua_TValue*, %struct.lua_TValue** %4, align 8, !tbaa !11
  %6 = add nsw i32 %idx, -1
  %7 = sext i32 %6 to i64
  %8 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %5, i64 %7
  %9 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %10 = load %struct.lua_TValue*, %struct.lua_TValue** %9, align 8, !tbaa !1
  %11 = icmp ult %struct.lua_TValue* %8, %10
  %.luaO_nilobject_.i = select i1 %11, %struct.lua_TValue* %8, %struct.lua_TValue* bitcast (%struct.lua_TValue.218* @luaO_nilobject_ to %struct.lua_TValue*)
  br label %index2adr.exit

; <label>:12                                      ; preds = %0
  %13 = icmp sgt i32 %idx, -10000
  br i1 %13, label %14, label %19

; <label>:14                                      ; preds = %12
  %15 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %16 = load %struct.lua_TValue*, %struct.lua_TValue** %15, align 8, !tbaa !1
  %17 = sext i32 %idx to i64
  %18 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %16, i64 %17
  br label %index2adr.exit

; <label>:19                                      ; preds = %12
  switch i32 %idx, label %39 [
    i32 -10000, label %20
    i32 -10001, label %24
    i32 -10002, label %37
  ]

; <label>:20                                      ; preds = %19
  %21 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 6
  %22 = load %struct.global_State*, %struct.global_State** %21, align 8, !tbaa !17
  %23 = getelementptr inbounds %struct.global_State, %struct.global_State* %22, i64 0, i32 20
  br label %index2adr.exit

; <label>:24                                      ; preds = %19
  %25 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 7
  %26 = load %struct.CallInfo*, %struct.CallInfo** %25, align 8, !tbaa !13
  %27 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %26, i64 0, i32 1
  %28 = bitcast %struct.lua_TValue** %27 to %struct.CClosure***
  %29 = load %struct.CClosure**, %struct.CClosure*** %28, align 8, !tbaa !28
  %30 = load %struct.CClosure*, %struct.CClosure** %29, align 8, !tbaa !25
  %31 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 23
  %32 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %30, i64 0, i32 6
  %33 = bitcast %struct.Table** %32 to i64*
  %34 = load i64, i64* %33, align 8, !tbaa !29
  %35 = bitcast %struct.lua_TValue* %31 to i64*
  store i64 %34, i64* %35, align 8, !tbaa !25
  %36 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 23, i32 1
  store i32 5, i32* %36, align 4, !tbaa !10
  br label %index2adr.exit

; <label>:37                                      ; preds = %19
  %38 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 22
  br label %index2adr.exit

; <label>:39                                      ; preds = %19
  %40 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 7
  %41 = load %struct.CallInfo*, %struct.CallInfo** %40, align 8, !tbaa !13
  %42 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %41, i64 0, i32 1
  %43 = bitcast %struct.lua_TValue** %42 to %struct.CClosure***
  %44 = load %struct.CClosure**, %struct.CClosure*** %43, align 8, !tbaa !28
  %45 = load %struct.CClosure*, %struct.CClosure** %44, align 8, !tbaa !25
  %46 = sub nsw i32 -10002, %idx
  %47 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %45, i64 0, i32 4
  %48 = load i8, i8* %47, align 1, !tbaa !31
  %49 = zext i8 %48 to i32
  %50 = icmp sgt i32 %46, %49
  br i1 %50, label %index2adr.exit, label %51

; <label>:51                                      ; preds = %39
  %52 = add nsw i32 %46, -1
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %45, i64 0, i32 8, i64 %53
  br label %index2adr.exit

index2adr.exit:                                   ; preds = %3, %14, %20, %24, %37, %39, %51
  %.1.i = phi %struct.lua_TValue* [ %.luaO_nilobject_.i, %3 ], [ %18, %14 ], [ %38, %37 ], [ %31, %24 ], [ %23, %20 ], [ %54, %51 ], [ bitcast (%struct.lua_TValue.218* @luaO_nilobject_ to %struct.lua_TValue*), %39 ]
  %55 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %.1.i, i64 0, i32 1
  %56 = load i32, i32* %55, align 4, !tbaa !10
  %57 = icmp eq i32 %56, 3
  br i1 %57, label %61, label %58

; <label>:58                                      ; preds = %index2adr.exit
  %59 = call %struct.lua_TValue* bitcast (%struct.lua_TValue.218* (%struct.lua_TValue.218*, %struct.lua_TValue.218*)* @luaV_tonumber to %struct.lua_TValue* (%struct.lua_TValue*, %struct.lua_TValue*)*)(%struct.lua_TValue* %.1.i, %struct.lua_TValue* nonnull %n) #1
  %60 = icmp ne %struct.lua_TValue* %59, null
  br label %61

; <label>:61                                      ; preds = %58, %index2adr.exit
  %62 = phi i1 [ true, %index2adr.exit ], [ %60, %58 ]
  %63 = zext i1 %62 to i32
  call void @llvm.lifetime.end(i64 16, i8* %1) #1
  ret i32 %63
}

; Function Attrs: nounwind uwtable
define i32 @lua_isstring(%struct.lua_State* %L, i32 %idx) #0 {
  %1 = icmp sgt i32 %idx, 0
  br i1 %1, label %2, label %11

; <label>:2                                       ; preds = %0
  %3 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 5
  %4 = load %struct.lua_TValue*, %struct.lua_TValue** %3, align 8, !tbaa !11
  %5 = add nsw i32 %idx, -1
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %4, i64 %6
  %8 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %9 = load %struct.lua_TValue*, %struct.lua_TValue** %8, align 8, !tbaa !1
  %10 = icmp ult %struct.lua_TValue* %7, %9
  br i1 %10, label %index2adr.exit.i, label %lua_type.exit

; <label>:11                                      ; preds = %0
  %12 = icmp sgt i32 %idx, -10000
  br i1 %12, label %13, label %18

; <label>:13                                      ; preds = %11
  %14 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %15 = load %struct.lua_TValue*, %struct.lua_TValue** %14, align 8, !tbaa !1
  %16 = sext i32 %idx to i64
  %17 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %15, i64 %16
  br label %index2adr.exit.i

; <label>:18                                      ; preds = %11
  switch i32 %idx, label %38 [
    i32 -10000, label %19
    i32 -10001, label %23
    i32 -10002, label %36
  ]

; <label>:19                                      ; preds = %18
  %20 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 6
  %21 = load %struct.global_State*, %struct.global_State** %20, align 8, !tbaa !17
  %22 = getelementptr inbounds %struct.global_State, %struct.global_State* %21, i64 0, i32 20
  br label %index2adr.exit.i

; <label>:23                                      ; preds = %18
  %24 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 7
  %25 = load %struct.CallInfo*, %struct.CallInfo** %24, align 8, !tbaa !13
  %26 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %25, i64 0, i32 1
  %27 = bitcast %struct.lua_TValue** %26 to %struct.CClosure***
  %28 = load %struct.CClosure**, %struct.CClosure*** %27, align 8, !tbaa !28
  %29 = load %struct.CClosure*, %struct.CClosure** %28, align 8, !tbaa !25
  %30 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 23
  %31 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %29, i64 0, i32 6
  %32 = bitcast %struct.Table** %31 to i64*
  %33 = load i64, i64* %32, align 8, !tbaa !29
  %34 = bitcast %struct.lua_TValue* %30 to i64*
  store i64 %33, i64* %34, align 8, !tbaa !25
  %35 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 23, i32 1
  store i32 5, i32* %35, align 4, !tbaa !10
  br label %index2adr.exit.i

; <label>:36                                      ; preds = %18
  %37 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 22
  br label %index2adr.exit.i

; <label>:38                                      ; preds = %18
  %39 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 7
  %40 = load %struct.CallInfo*, %struct.CallInfo** %39, align 8, !tbaa !13
  %41 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %40, i64 0, i32 1
  %42 = bitcast %struct.lua_TValue** %41 to %struct.CClosure***
  %43 = load %struct.CClosure**, %struct.CClosure*** %42, align 8, !tbaa !28
  %44 = load %struct.CClosure*, %struct.CClosure** %43, align 8, !tbaa !25
  %45 = sub nsw i32 -10002, %idx
  %46 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %44, i64 0, i32 4
  %47 = load i8, i8* %46, align 1, !tbaa !31
  %48 = zext i8 %47 to i32
  %49 = icmp sgt i32 %45, %48
  br i1 %49, label %lua_type.exit, label %50

; <label>:50                                      ; preds = %38
  %51 = add nsw i32 %45, -1
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %44, i64 0, i32 8, i64 %52
  br label %index2adr.exit.i

index2adr.exit.i:                                 ; preds = %50, %36, %23, %19, %13, %2
  %.1.i.i = phi %struct.lua_TValue* [ %17, %13 ], [ %37, %36 ], [ %30, %23 ], [ %22, %19 ], [ %53, %50 ], [ %7, %2 ]
  %54 = icmp eq %struct.lua_TValue* %.1.i.i, bitcast (%struct.lua_TValue.218* @luaO_nilobject_ to %struct.lua_TValue*)
  br i1 %54, label %lua_type.exit, label %55

; <label>:55                                      ; preds = %index2adr.exit.i
  %56 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %.1.i.i, i64 0, i32 1
  %57 = load i32, i32* %56, align 4, !tbaa !10
  %phitmp = add i32 %57, -3
  %phitmp1 = icmp ult i32 %phitmp, 2
  br label %lua_type.exit

lua_type.exit:                                    ; preds = %2, %38, %index2adr.exit.i, %55
  %58 = phi i1 [ %phitmp1, %55 ], [ false, %index2adr.exit.i ], [ false, %2 ], [ false, %38 ]
  %59 = zext i1 %58 to i32
  ret i32 %59
}

; Function Attrs: nounwind uwtable
define i32 @lua_isuserdata(%struct.lua_State* nocapture %L, i32 %idx) #0 {
  %1 = icmp sgt i32 %idx, 0
  br i1 %1, label %2, label %11

; <label>:2                                       ; preds = %0
  %3 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 5
  %4 = load %struct.lua_TValue*, %struct.lua_TValue** %3, align 8, !tbaa !11
  %5 = add nsw i32 %idx, -1
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %4, i64 %6
  %8 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %9 = load %struct.lua_TValue*, %struct.lua_TValue** %8, align 8, !tbaa !1
  %10 = icmp ult %struct.lua_TValue* %7, %9
  %.luaO_nilobject_.i = select i1 %10, %struct.lua_TValue* %7, %struct.lua_TValue* bitcast (%struct.lua_TValue.218* @luaO_nilobject_ to %struct.lua_TValue*)
  br label %index2adr.exit

; <label>:11                                      ; preds = %0
  %12 = icmp sgt i32 %idx, -10000
  br i1 %12, label %13, label %18

; <label>:13                                      ; preds = %11
  %14 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %15 = load %struct.lua_TValue*, %struct.lua_TValue** %14, align 8, !tbaa !1
  %16 = sext i32 %idx to i64
  %17 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %15, i64 %16
  br label %index2adr.exit

; <label>:18                                      ; preds = %11
  switch i32 %idx, label %38 [
    i32 -10000, label %19
    i32 -10001, label %23
    i32 -10002, label %36
  ]

; <label>:19                                      ; preds = %18
  %20 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 6
  %21 = load %struct.global_State*, %struct.global_State** %20, align 8, !tbaa !17
  %22 = getelementptr inbounds %struct.global_State, %struct.global_State* %21, i64 0, i32 20
  br label %index2adr.exit

; <label>:23                                      ; preds = %18
  %24 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 7
  %25 = load %struct.CallInfo*, %struct.CallInfo** %24, align 8, !tbaa !13
  %26 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %25, i64 0, i32 1
  %27 = bitcast %struct.lua_TValue** %26 to %struct.CClosure***
  %28 = load %struct.CClosure**, %struct.CClosure*** %27, align 8, !tbaa !28
  %29 = load %struct.CClosure*, %struct.CClosure** %28, align 8, !tbaa !25
  %30 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 23
  %31 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %29, i64 0, i32 6
  %32 = bitcast %struct.Table** %31 to i64*
  %33 = load i64, i64* %32, align 8, !tbaa !29
  %34 = bitcast %struct.lua_TValue* %30 to i64*
  store i64 %33, i64* %34, align 8, !tbaa !25
  %35 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 23, i32 1
  store i32 5, i32* %35, align 4, !tbaa !10
  br label %index2adr.exit

; <label>:36                                      ; preds = %18
  %37 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 22
  br label %index2adr.exit

; <label>:38                                      ; preds = %18
  %39 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 7
  %40 = load %struct.CallInfo*, %struct.CallInfo** %39, align 8, !tbaa !13
  %41 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %40, i64 0, i32 1
  %42 = bitcast %struct.lua_TValue** %41 to %struct.CClosure***
  %43 = load %struct.CClosure**, %struct.CClosure*** %42, align 8, !tbaa !28
  %44 = load %struct.CClosure*, %struct.CClosure** %43, align 8, !tbaa !25
  %45 = sub nsw i32 -10002, %idx
  %46 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %44, i64 0, i32 4
  %47 = load i8, i8* %46, align 1, !tbaa !31
  %48 = zext i8 %47 to i32
  %49 = icmp sgt i32 %45, %48
  br i1 %49, label %index2adr.exit, label %50

; <label>:50                                      ; preds = %38
  %51 = add nsw i32 %45, -1
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %44, i64 0, i32 8, i64 %52
  br label %index2adr.exit

index2adr.exit:                                   ; preds = %2, %13, %19, %23, %36, %38, %50
  %.1.i = phi %struct.lua_TValue* [ %.luaO_nilobject_.i, %2 ], [ %17, %13 ], [ %37, %36 ], [ %30, %23 ], [ %22, %19 ], [ %53, %50 ], [ bitcast (%struct.lua_TValue.218* @luaO_nilobject_ to %struct.lua_TValue*), %38 ]
  %54 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %.1.i, i64 0, i32 1
  %55 = load i32, i32* %54, align 4, !tbaa !10
  %56 = icmp eq i32 %55, 7
  %57 = icmp eq i32 %55, 2
  %. = or i1 %56, %57
  %58 = zext i1 %. to i32
  ret i32 %58
}

; Function Attrs: nounwind uwtable
define i32 @lua_rawequal(%struct.lua_State* %L, i32 %index1, i32 %index2) #0 {
  %1 = icmp sgt i32 %index1, 0
  br i1 %1, label %2, label %11

; <label>:2                                       ; preds = %0
  %3 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 5
  %4 = load %struct.lua_TValue*, %struct.lua_TValue** %3, align 8, !tbaa !11
  %5 = add nsw i32 %index1, -1
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %4, i64 %6
  %8 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %9 = load %struct.lua_TValue*, %struct.lua_TValue** %8, align 8, !tbaa !1
  %10 = icmp ult %struct.lua_TValue* %7, %9
  %.luaO_nilobject_.i = select i1 %10, %struct.lua_TValue* %7, %struct.lua_TValue* bitcast (%struct.lua_TValue.218* @luaO_nilobject_ to %struct.lua_TValue*)
  br label %index2adr.exit

; <label>:11                                      ; preds = %0
  %12 = icmp sgt i32 %index1, -10000
  br i1 %12, label %13, label %18

; <label>:13                                      ; preds = %11
  %14 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %15 = load %struct.lua_TValue*, %struct.lua_TValue** %14, align 8, !tbaa !1
  %16 = sext i32 %index1 to i64
  %17 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %15, i64 %16
  br label %index2adr.exit

; <label>:18                                      ; preds = %11
  switch i32 %index1, label %38 [
    i32 -10000, label %19
    i32 -10001, label %23
    i32 -10002, label %36
  ]

; <label>:19                                      ; preds = %18
  %20 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 6
  %21 = load %struct.global_State*, %struct.global_State** %20, align 8, !tbaa !17
  %22 = getelementptr inbounds %struct.global_State, %struct.global_State* %21, i64 0, i32 20
  br label %index2adr.exit

; <label>:23                                      ; preds = %18
  %24 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 7
  %25 = load %struct.CallInfo*, %struct.CallInfo** %24, align 8, !tbaa !13
  %26 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %25, i64 0, i32 1
  %27 = bitcast %struct.lua_TValue** %26 to %struct.CClosure***
  %28 = load %struct.CClosure**, %struct.CClosure*** %27, align 8, !tbaa !28
  %29 = load %struct.CClosure*, %struct.CClosure** %28, align 8, !tbaa !25
  %30 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 23
  %31 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %29, i64 0, i32 6
  %32 = bitcast %struct.Table** %31 to i64*
  %33 = load i64, i64* %32, align 8, !tbaa !29
  %34 = bitcast %struct.lua_TValue* %30 to i64*
  store i64 %33, i64* %34, align 8, !tbaa !25
  %35 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 23, i32 1
  store i32 5, i32* %35, align 4, !tbaa !10
  br label %index2adr.exit

; <label>:36                                      ; preds = %18
  %37 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 22
  br label %index2adr.exit

; <label>:38                                      ; preds = %18
  %39 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 7
  %40 = load %struct.CallInfo*, %struct.CallInfo** %39, align 8, !tbaa !13
  %41 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %40, i64 0, i32 1
  %42 = bitcast %struct.lua_TValue** %41 to %struct.CClosure***
  %43 = load %struct.CClosure**, %struct.CClosure*** %42, align 8, !tbaa !28
  %44 = load %struct.CClosure*, %struct.CClosure** %43, align 8, !tbaa !25
  %45 = sub nsw i32 -10002, %index1
  %46 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %44, i64 0, i32 4
  %47 = load i8, i8* %46, align 1, !tbaa !31
  %48 = zext i8 %47 to i32
  %49 = icmp sgt i32 %45, %48
  br i1 %49, label %index2adr.exit, label %50

; <label>:50                                      ; preds = %38
  %51 = add nsw i32 %45, -1
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %44, i64 0, i32 8, i64 %52
  br label %index2adr.exit

index2adr.exit:                                   ; preds = %2, %13, %19, %23, %36, %38, %50
  %.1.i = phi %struct.lua_TValue* [ %.luaO_nilobject_.i, %2 ], [ %17, %13 ], [ %37, %36 ], [ %30, %23 ], [ %22, %19 ], [ %53, %50 ], [ bitcast (%struct.lua_TValue.218* @luaO_nilobject_ to %struct.lua_TValue*), %38 ]
  %54 = icmp sgt i32 %index2, 0
  br i1 %54, label %55, label %64

; <label>:55                                      ; preds = %index2adr.exit
  %56 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 5
  %57 = load %struct.lua_TValue*, %struct.lua_TValue** %56, align 8, !tbaa !11
  %58 = add nsw i32 %index2, -1
  %59 = sext i32 %58 to i64
  %60 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %57, i64 %59
  %61 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %62 = load %struct.lua_TValue*, %struct.lua_TValue** %61, align 8, !tbaa !1
  %63 = icmp ult %struct.lua_TValue* %60, %62
  %.luaO_nilobject_.i.2 = select i1 %63, %struct.lua_TValue* %60, %struct.lua_TValue* bitcast (%struct.lua_TValue.218* @luaO_nilobject_ to %struct.lua_TValue*)
  br label %index2adr.exit4

; <label>:64                                      ; preds = %index2adr.exit
  %65 = icmp sgt i32 %index2, -10000
  br i1 %65, label %66, label %71

; <label>:66                                      ; preds = %64
  %67 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %68 = load %struct.lua_TValue*, %struct.lua_TValue** %67, align 8, !tbaa !1
  %69 = sext i32 %index2 to i64
  %70 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %68, i64 %69
  br label %index2adr.exit4

; <label>:71                                      ; preds = %64
  switch i32 %index2, label %91 [
    i32 -10000, label %72
    i32 -10001, label %76
    i32 -10002, label %89
  ]

; <label>:72                                      ; preds = %71
  %73 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 6
  %74 = load %struct.global_State*, %struct.global_State** %73, align 8, !tbaa !17
  %75 = getelementptr inbounds %struct.global_State, %struct.global_State* %74, i64 0, i32 20
  br label %index2adr.exit4

; <label>:76                                      ; preds = %71
  %77 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 7
  %78 = load %struct.CallInfo*, %struct.CallInfo** %77, align 8, !tbaa !13
  %79 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %78, i64 0, i32 1
  %80 = bitcast %struct.lua_TValue** %79 to %struct.CClosure***
  %81 = load %struct.CClosure**, %struct.CClosure*** %80, align 8, !tbaa !28
  %82 = load %struct.CClosure*, %struct.CClosure** %81, align 8, !tbaa !25
  %83 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 23
  %84 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %82, i64 0, i32 6
  %85 = bitcast %struct.Table** %84 to i64*
  %86 = load i64, i64* %85, align 8, !tbaa !29
  %87 = bitcast %struct.lua_TValue* %83 to i64*
  store i64 %86, i64* %87, align 8, !tbaa !25
  %88 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 23, i32 1
  store i32 5, i32* %88, align 4, !tbaa !10
  br label %index2adr.exit4

; <label>:89                                      ; preds = %71
  %90 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 22
  br label %index2adr.exit4

; <label>:91                                      ; preds = %71
  %92 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 7
  %93 = load %struct.CallInfo*, %struct.CallInfo** %92, align 8, !tbaa !13
  %94 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %93, i64 0, i32 1
  %95 = bitcast %struct.lua_TValue** %94 to %struct.CClosure***
  %96 = load %struct.CClosure**, %struct.CClosure*** %95, align 8, !tbaa !28
  %97 = load %struct.CClosure*, %struct.CClosure** %96, align 8, !tbaa !25
  %98 = sub nsw i32 -10002, %index2
  %99 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %97, i64 0, i32 4
  %100 = load i8, i8* %99, align 1, !tbaa !31
  %101 = zext i8 %100 to i32
  %102 = icmp sgt i32 %98, %101
  br i1 %102, label %index2adr.exit4.thread, label %103

; <label>:103                                     ; preds = %91
  %104 = add nsw i32 %98, -1
  %105 = sext i32 %104 to i64
  %106 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %97, i64 0, i32 8, i64 %105
  br label %index2adr.exit4

index2adr.exit4:                                  ; preds = %55, %66, %72, %76, %89, %103
  %.1.i.3 = phi %struct.lua_TValue* [ %.luaO_nilobject_.i.2, %55 ], [ %70, %66 ], [ %90, %89 ], [ %83, %76 ], [ %75, %72 ], [ %106, %103 ]
  %107 = icmp eq %struct.lua_TValue* %.1.i, bitcast (%struct.lua_TValue.218* @luaO_nilobject_ to %struct.lua_TValue*)
  %108 = icmp eq %struct.lua_TValue* %.1.i.3, bitcast (%struct.lua_TValue.218* @luaO_nilobject_ to %struct.lua_TValue*)
  %or.cond = or i1 %107, %108
  br i1 %or.cond, label %index2adr.exit4.thread, label %109

; <label>:109                                     ; preds = %index2adr.exit4
  %110 = tail call i32 bitcast (i32 (%struct.lua_TValue.218*, %struct.lua_TValue.218*)* @luaO_rawequalObj to i32 (%struct.lua_TValue*, %struct.lua_TValue*)*)(%struct.lua_TValue* %.1.i, %struct.lua_TValue* %.1.i.3) #1
  br label %index2adr.exit4.thread

index2adr.exit4.thread:                           ; preds = %91, %index2adr.exit4, %109
  %111 = phi i32 [ %110, %109 ], [ 0, %index2adr.exit4 ], [ 0, %91 ]
  ret i32 %111
}

; Function Attrs: nounwind uwtable
define i32 @lua_equal(%struct.lua_State* %L, i32 %index1, i32 %index2) #0 {
  %1 = icmp sgt i32 %index1, 0
  br i1 %1, label %2, label %11

; <label>:2                                       ; preds = %0
  %3 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 5
  %4 = load %struct.lua_TValue*, %struct.lua_TValue** %3, align 8, !tbaa !11
  %5 = add nsw i32 %index1, -1
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %4, i64 %6
  %8 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %9 = load %struct.lua_TValue*, %struct.lua_TValue** %8, align 8, !tbaa !1
  %10 = icmp ult %struct.lua_TValue* %7, %9
  %.luaO_nilobject_.i = select i1 %10, %struct.lua_TValue* %7, %struct.lua_TValue* bitcast (%struct.lua_TValue.218* @luaO_nilobject_ to %struct.lua_TValue*)
  br label %index2adr.exit

; <label>:11                                      ; preds = %0
  %12 = icmp sgt i32 %index1, -10000
  br i1 %12, label %13, label %18

; <label>:13                                      ; preds = %11
  %14 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %15 = load %struct.lua_TValue*, %struct.lua_TValue** %14, align 8, !tbaa !1
  %16 = sext i32 %index1 to i64
  %17 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %15, i64 %16
  br label %index2adr.exit

; <label>:18                                      ; preds = %11
  switch i32 %index1, label %38 [
    i32 -10000, label %19
    i32 -10001, label %23
    i32 -10002, label %36
  ]

; <label>:19                                      ; preds = %18
  %20 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 6
  %21 = load %struct.global_State*, %struct.global_State** %20, align 8, !tbaa !17
  %22 = getelementptr inbounds %struct.global_State, %struct.global_State* %21, i64 0, i32 20
  br label %index2adr.exit

; <label>:23                                      ; preds = %18
  %24 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 7
  %25 = load %struct.CallInfo*, %struct.CallInfo** %24, align 8, !tbaa !13
  %26 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %25, i64 0, i32 1
  %27 = bitcast %struct.lua_TValue** %26 to %struct.CClosure***
  %28 = load %struct.CClosure**, %struct.CClosure*** %27, align 8, !tbaa !28
  %29 = load %struct.CClosure*, %struct.CClosure** %28, align 8, !tbaa !25
  %30 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 23
  %31 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %29, i64 0, i32 6
  %32 = bitcast %struct.Table** %31 to i64*
  %33 = load i64, i64* %32, align 8, !tbaa !29
  %34 = bitcast %struct.lua_TValue* %30 to i64*
  store i64 %33, i64* %34, align 8, !tbaa !25
  %35 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 23, i32 1
  store i32 5, i32* %35, align 4, !tbaa !10
  br label %index2adr.exit

; <label>:36                                      ; preds = %18
  %37 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 22
  br label %index2adr.exit

; <label>:38                                      ; preds = %18
  %39 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 7
  %40 = load %struct.CallInfo*, %struct.CallInfo** %39, align 8, !tbaa !13
  %41 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %40, i64 0, i32 1
  %42 = bitcast %struct.lua_TValue** %41 to %struct.CClosure***
  %43 = load %struct.CClosure**, %struct.CClosure*** %42, align 8, !tbaa !28
  %44 = load %struct.CClosure*, %struct.CClosure** %43, align 8, !tbaa !25
  %45 = sub nsw i32 -10002, %index1
  %46 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %44, i64 0, i32 4
  %47 = load i8, i8* %46, align 1, !tbaa !31
  %48 = zext i8 %47 to i32
  %49 = icmp sgt i32 %45, %48
  br i1 %49, label %index2adr.exit, label %50

; <label>:50                                      ; preds = %38
  %51 = add nsw i32 %45, -1
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %44, i64 0, i32 8, i64 %52
  br label %index2adr.exit

index2adr.exit:                                   ; preds = %2, %13, %19, %23, %36, %38, %50
  %.1.i = phi %struct.lua_TValue* [ %.luaO_nilobject_.i, %2 ], [ %17, %13 ], [ %37, %36 ], [ %30, %23 ], [ %22, %19 ], [ %53, %50 ], [ bitcast (%struct.lua_TValue.218* @luaO_nilobject_ to %struct.lua_TValue*), %38 ]
  %54 = icmp sgt i32 %index2, 0
  br i1 %54, label %55, label %64

; <label>:55                                      ; preds = %index2adr.exit
  %56 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 5
  %57 = load %struct.lua_TValue*, %struct.lua_TValue** %56, align 8, !tbaa !11
  %58 = add nsw i32 %index2, -1
  %59 = sext i32 %58 to i64
  %60 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %57, i64 %59
  %61 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %62 = load %struct.lua_TValue*, %struct.lua_TValue** %61, align 8, !tbaa !1
  %63 = icmp ult %struct.lua_TValue* %60, %62
  %.luaO_nilobject_.i.2 = select i1 %63, %struct.lua_TValue* %60, %struct.lua_TValue* bitcast (%struct.lua_TValue.218* @luaO_nilobject_ to %struct.lua_TValue*)
  br label %index2adr.exit4

; <label>:64                                      ; preds = %index2adr.exit
  %65 = icmp sgt i32 %index2, -10000
  br i1 %65, label %66, label %71

; <label>:66                                      ; preds = %64
  %67 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %68 = load %struct.lua_TValue*, %struct.lua_TValue** %67, align 8, !tbaa !1
  %69 = sext i32 %index2 to i64
  %70 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %68, i64 %69
  br label %index2adr.exit4

; <label>:71                                      ; preds = %64
  switch i32 %index2, label %91 [
    i32 -10000, label %72
    i32 -10001, label %76
    i32 -10002, label %89
  ]

; <label>:72                                      ; preds = %71
  %73 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 6
  %74 = load %struct.global_State*, %struct.global_State** %73, align 8, !tbaa !17
  %75 = getelementptr inbounds %struct.global_State, %struct.global_State* %74, i64 0, i32 20
  br label %index2adr.exit4

; <label>:76                                      ; preds = %71
  %77 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 7
  %78 = load %struct.CallInfo*, %struct.CallInfo** %77, align 8, !tbaa !13
  %79 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %78, i64 0, i32 1
  %80 = bitcast %struct.lua_TValue** %79 to %struct.CClosure***
  %81 = load %struct.CClosure**, %struct.CClosure*** %80, align 8, !tbaa !28
  %82 = load %struct.CClosure*, %struct.CClosure** %81, align 8, !tbaa !25
  %83 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 23
  %84 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %82, i64 0, i32 6
  %85 = bitcast %struct.Table** %84 to i64*
  %86 = load i64, i64* %85, align 8, !tbaa !29
  %87 = bitcast %struct.lua_TValue* %83 to i64*
  store i64 %86, i64* %87, align 8, !tbaa !25
  %88 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 23, i32 1
  store i32 5, i32* %88, align 4, !tbaa !10
  br label %index2adr.exit4

; <label>:89                                      ; preds = %71
  %90 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 22
  br label %index2adr.exit4

; <label>:91                                      ; preds = %71
  %92 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 7
  %93 = load %struct.CallInfo*, %struct.CallInfo** %92, align 8, !tbaa !13
  %94 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %93, i64 0, i32 1
  %95 = bitcast %struct.lua_TValue** %94 to %struct.CClosure***
  %96 = load %struct.CClosure**, %struct.CClosure*** %95, align 8, !tbaa !28
  %97 = load %struct.CClosure*, %struct.CClosure** %96, align 8, !tbaa !25
  %98 = sub nsw i32 -10002, %index2
  %99 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %97, i64 0, i32 4
  %100 = load i8, i8* %99, align 1, !tbaa !31
  %101 = zext i8 %100 to i32
  %102 = icmp sgt i32 %98, %101
  br i1 %102, label %index2adr.exit4.thread, label %103

; <label>:103                                     ; preds = %91
  %104 = add nsw i32 %98, -1
  %105 = sext i32 %104 to i64
  %106 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %97, i64 0, i32 8, i64 %105
  br label %index2adr.exit4

index2adr.exit4:                                  ; preds = %55, %66, %72, %76, %89, %103
  %.1.i.3 = phi %struct.lua_TValue* [ %.luaO_nilobject_.i.2, %55 ], [ %70, %66 ], [ %90, %89 ], [ %83, %76 ], [ %75, %72 ], [ %106, %103 ]
  %107 = icmp eq %struct.lua_TValue* %.1.i, bitcast (%struct.lua_TValue.218* @luaO_nilobject_ to %struct.lua_TValue*)
  %108 = icmp eq %struct.lua_TValue* %.1.i.3, bitcast (%struct.lua_TValue.218* @luaO_nilobject_ to %struct.lua_TValue*)
  %or.cond = or i1 %107, %108
  br i1 %or.cond, label %index2adr.exit4.thread, label %109

; <label>:109                                     ; preds = %index2adr.exit4
  %110 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %.1.i, i64 0, i32 1
  %111 = load i32, i32* %110, align 4, !tbaa !10
  %112 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %.1.i.3, i64 0, i32 1
  %113 = load i32, i32* %112, align 4, !tbaa !10
  %114 = icmp eq i32 %111, %113
  br i1 %114, label %115, label %118

; <label>:115                                     ; preds = %109
  %116 = tail call i32 bitcast (i32 (%struct.lua_State.215*, %struct.lua_TValue.218*, %struct.lua_TValue.218*)* @luaV_equalval to i32 (%struct.lua_State*, %struct.lua_TValue*, %struct.lua_TValue*)*)(%struct.lua_State* %L, %struct.lua_TValue* %.1.i, %struct.lua_TValue* %.1.i.3) #1
  %117 = icmp ne i32 %116, 0
  br label %118

; <label>:118                                     ; preds = %115, %109
  %119 = phi i1 [ false, %109 ], [ %117, %115 ]
  %120 = zext i1 %119 to i32
  br label %index2adr.exit4.thread

index2adr.exit4.thread:                           ; preds = %91, %index2adr.exit4, %118
  %121 = phi i32 [ %120, %118 ], [ 0, %index2adr.exit4 ], [ 0, %91 ]
  ret i32 %121
}

; Function Attrs: nounwind uwtable
define i32 @lua_lessthan(%struct.lua_State* %L, i32 %index1, i32 %index2) #0 {
  %1 = icmp sgt i32 %index1, 0
  br i1 %1, label %2, label %11

; <label>:2                                       ; preds = %0
  %3 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 5
  %4 = load %struct.lua_TValue*, %struct.lua_TValue** %3, align 8, !tbaa !11
  %5 = add nsw i32 %index1, -1
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %4, i64 %6
  %8 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %9 = load %struct.lua_TValue*, %struct.lua_TValue** %8, align 8, !tbaa !1
  %10 = icmp ult %struct.lua_TValue* %7, %9
  %.luaO_nilobject_.i = select i1 %10, %struct.lua_TValue* %7, %struct.lua_TValue* bitcast (%struct.lua_TValue.218* @luaO_nilobject_ to %struct.lua_TValue*)
  br label %index2adr.exit

; <label>:11                                      ; preds = %0
  %12 = icmp sgt i32 %index1, -10000
  br i1 %12, label %13, label %18

; <label>:13                                      ; preds = %11
  %14 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %15 = load %struct.lua_TValue*, %struct.lua_TValue** %14, align 8, !tbaa !1
  %16 = sext i32 %index1 to i64
  %17 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %15, i64 %16
  br label %index2adr.exit

; <label>:18                                      ; preds = %11
  switch i32 %index1, label %38 [
    i32 -10000, label %19
    i32 -10001, label %23
    i32 -10002, label %36
  ]

; <label>:19                                      ; preds = %18
  %20 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 6
  %21 = load %struct.global_State*, %struct.global_State** %20, align 8, !tbaa !17
  %22 = getelementptr inbounds %struct.global_State, %struct.global_State* %21, i64 0, i32 20
  br label %index2adr.exit

; <label>:23                                      ; preds = %18
  %24 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 7
  %25 = load %struct.CallInfo*, %struct.CallInfo** %24, align 8, !tbaa !13
  %26 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %25, i64 0, i32 1
  %27 = bitcast %struct.lua_TValue** %26 to %struct.CClosure***
  %28 = load %struct.CClosure**, %struct.CClosure*** %27, align 8, !tbaa !28
  %29 = load %struct.CClosure*, %struct.CClosure** %28, align 8, !tbaa !25
  %30 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 23
  %31 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %29, i64 0, i32 6
  %32 = bitcast %struct.Table** %31 to i64*
  %33 = load i64, i64* %32, align 8, !tbaa !29
  %34 = bitcast %struct.lua_TValue* %30 to i64*
  store i64 %33, i64* %34, align 8, !tbaa !25
  %35 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 23, i32 1
  store i32 5, i32* %35, align 4, !tbaa !10
  br label %index2adr.exit

; <label>:36                                      ; preds = %18
  %37 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 22
  br label %index2adr.exit

; <label>:38                                      ; preds = %18
  %39 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 7
  %40 = load %struct.CallInfo*, %struct.CallInfo** %39, align 8, !tbaa !13
  %41 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %40, i64 0, i32 1
  %42 = bitcast %struct.lua_TValue** %41 to %struct.CClosure***
  %43 = load %struct.CClosure**, %struct.CClosure*** %42, align 8, !tbaa !28
  %44 = load %struct.CClosure*, %struct.CClosure** %43, align 8, !tbaa !25
  %45 = sub nsw i32 -10002, %index1
  %46 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %44, i64 0, i32 4
  %47 = load i8, i8* %46, align 1, !tbaa !31
  %48 = zext i8 %47 to i32
  %49 = icmp sgt i32 %45, %48
  br i1 %49, label %index2adr.exit, label %50

; <label>:50                                      ; preds = %38
  %51 = add nsw i32 %45, -1
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %44, i64 0, i32 8, i64 %52
  br label %index2adr.exit

index2adr.exit:                                   ; preds = %2, %13, %19, %23, %36, %38, %50
  %.1.i = phi %struct.lua_TValue* [ %.luaO_nilobject_.i, %2 ], [ %17, %13 ], [ %37, %36 ], [ %30, %23 ], [ %22, %19 ], [ %53, %50 ], [ bitcast (%struct.lua_TValue.218* @luaO_nilobject_ to %struct.lua_TValue*), %38 ]
  %54 = icmp sgt i32 %index2, 0
  br i1 %54, label %55, label %64

; <label>:55                                      ; preds = %index2adr.exit
  %56 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 5
  %57 = load %struct.lua_TValue*, %struct.lua_TValue** %56, align 8, !tbaa !11
  %58 = add nsw i32 %index2, -1
  %59 = sext i32 %58 to i64
  %60 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %57, i64 %59
  %61 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %62 = load %struct.lua_TValue*, %struct.lua_TValue** %61, align 8, !tbaa !1
  %63 = icmp ult %struct.lua_TValue* %60, %62
  %.luaO_nilobject_.i.2 = select i1 %63, %struct.lua_TValue* %60, %struct.lua_TValue* bitcast (%struct.lua_TValue.218* @luaO_nilobject_ to %struct.lua_TValue*)
  br label %index2adr.exit4

; <label>:64                                      ; preds = %index2adr.exit
  %65 = icmp sgt i32 %index2, -10000
  br i1 %65, label %66, label %71

; <label>:66                                      ; preds = %64
  %67 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %68 = load %struct.lua_TValue*, %struct.lua_TValue** %67, align 8, !tbaa !1
  %69 = sext i32 %index2 to i64
  %70 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %68, i64 %69
  br label %index2adr.exit4

; <label>:71                                      ; preds = %64
  switch i32 %index2, label %91 [
    i32 -10000, label %72
    i32 -10001, label %76
    i32 -10002, label %89
  ]

; <label>:72                                      ; preds = %71
  %73 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 6
  %74 = load %struct.global_State*, %struct.global_State** %73, align 8, !tbaa !17
  %75 = getelementptr inbounds %struct.global_State, %struct.global_State* %74, i64 0, i32 20
  br label %index2adr.exit4

; <label>:76                                      ; preds = %71
  %77 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 7
  %78 = load %struct.CallInfo*, %struct.CallInfo** %77, align 8, !tbaa !13
  %79 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %78, i64 0, i32 1
  %80 = bitcast %struct.lua_TValue** %79 to %struct.CClosure***
  %81 = load %struct.CClosure**, %struct.CClosure*** %80, align 8, !tbaa !28
  %82 = load %struct.CClosure*, %struct.CClosure** %81, align 8, !tbaa !25
  %83 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 23
  %84 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %82, i64 0, i32 6
  %85 = bitcast %struct.Table** %84 to i64*
  %86 = load i64, i64* %85, align 8, !tbaa !29
  %87 = bitcast %struct.lua_TValue* %83 to i64*
  store i64 %86, i64* %87, align 8, !tbaa !25
  %88 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 23, i32 1
  store i32 5, i32* %88, align 4, !tbaa !10
  br label %index2adr.exit4

; <label>:89                                      ; preds = %71
  %90 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 22
  br label %index2adr.exit4

; <label>:91                                      ; preds = %71
  %92 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 7
  %93 = load %struct.CallInfo*, %struct.CallInfo** %92, align 8, !tbaa !13
  %94 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %93, i64 0, i32 1
  %95 = bitcast %struct.lua_TValue** %94 to %struct.CClosure***
  %96 = load %struct.CClosure**, %struct.CClosure*** %95, align 8, !tbaa !28
  %97 = load %struct.CClosure*, %struct.CClosure** %96, align 8, !tbaa !25
  %98 = sub nsw i32 -10002, %index2
  %99 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %97, i64 0, i32 4
  %100 = load i8, i8* %99, align 1, !tbaa !31
  %101 = zext i8 %100 to i32
  %102 = icmp sgt i32 %98, %101
  br i1 %102, label %index2adr.exit4.thread, label %103

; <label>:103                                     ; preds = %91
  %104 = add nsw i32 %98, -1
  %105 = sext i32 %104 to i64
  %106 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %97, i64 0, i32 8, i64 %105
  br label %index2adr.exit4

index2adr.exit4:                                  ; preds = %55, %66, %72, %76, %89, %103
  %.1.i.3 = phi %struct.lua_TValue* [ %.luaO_nilobject_.i.2, %55 ], [ %70, %66 ], [ %90, %89 ], [ %83, %76 ], [ %75, %72 ], [ %106, %103 ]
  %107 = icmp eq %struct.lua_TValue* %.1.i, bitcast (%struct.lua_TValue.218* @luaO_nilobject_ to %struct.lua_TValue*)
  %108 = icmp eq %struct.lua_TValue* %.1.i.3, bitcast (%struct.lua_TValue.218* @luaO_nilobject_ to %struct.lua_TValue*)
  %or.cond = or i1 %107, %108
  br i1 %or.cond, label %index2adr.exit4.thread, label %109

; <label>:109                                     ; preds = %index2adr.exit4
  %110 = tail call i32 bitcast (i32 (%struct.lua_State.215*, %struct.lua_TValue.218*, %struct.lua_TValue.218*)* @luaV_lessthan to i32 (%struct.lua_State*, %struct.lua_TValue*, %struct.lua_TValue*)*)(%struct.lua_State* %L, %struct.lua_TValue* %.1.i, %struct.lua_TValue* %.1.i.3) #1
  br label %index2adr.exit4.thread

index2adr.exit4.thread:                           ; preds = %91, %index2adr.exit4, %109
  %111 = phi i32 [ %110, %109 ], [ 0, %index2adr.exit4 ], [ 0, %91 ]
  ret i32 %111
}

; Function Attrs: nounwind uwtable
define double @lua_tonumber(%struct.lua_State* %L, i32 %idx) #0 {
  %n = alloca %struct.lua_TValue, align 8
  %1 = bitcast %struct.lua_TValue* %n to i8*
  call void @llvm.lifetime.start(i64 16, i8* %1) #1
  %2 = icmp sgt i32 %idx, 0
  br i1 %2, label %3, label %12

; <label>:3                                       ; preds = %0
  %4 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 5
  %5 = load %struct.lua_TValue*, %struct.lua_TValue** %4, align 8, !tbaa !11
  %6 = add nsw i32 %idx, -1
  %7 = sext i32 %6 to i64
  %8 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %5, i64 %7
  %9 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %10 = load %struct.lua_TValue*, %struct.lua_TValue** %9, align 8, !tbaa !1
  %11 = icmp ult %struct.lua_TValue* %8, %10
  %.luaO_nilobject_.i = select i1 %11, %struct.lua_TValue* %8, %struct.lua_TValue* bitcast (%struct.lua_TValue.218* @luaO_nilobject_ to %struct.lua_TValue*)
  br label %index2adr.exit

; <label>:12                                      ; preds = %0
  %13 = icmp sgt i32 %idx, -10000
  br i1 %13, label %14, label %19

; <label>:14                                      ; preds = %12
  %15 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %16 = load %struct.lua_TValue*, %struct.lua_TValue** %15, align 8, !tbaa !1
  %17 = sext i32 %idx to i64
  %18 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %16, i64 %17
  br label %index2adr.exit

; <label>:19                                      ; preds = %12
  switch i32 %idx, label %39 [
    i32 -10000, label %20
    i32 -10001, label %24
    i32 -10002, label %37
  ]

; <label>:20                                      ; preds = %19
  %21 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 6
  %22 = load %struct.global_State*, %struct.global_State** %21, align 8, !tbaa !17
  %23 = getelementptr inbounds %struct.global_State, %struct.global_State* %22, i64 0, i32 20
  br label %index2adr.exit

; <label>:24                                      ; preds = %19
  %25 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 7
  %26 = load %struct.CallInfo*, %struct.CallInfo** %25, align 8, !tbaa !13
  %27 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %26, i64 0, i32 1
  %28 = bitcast %struct.lua_TValue** %27 to %struct.CClosure***
  %29 = load %struct.CClosure**, %struct.CClosure*** %28, align 8, !tbaa !28
  %30 = load %struct.CClosure*, %struct.CClosure** %29, align 8, !tbaa !25
  %31 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 23
  %32 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %30, i64 0, i32 6
  %33 = bitcast %struct.Table** %32 to i64*
  %34 = load i64, i64* %33, align 8, !tbaa !29
  %35 = bitcast %struct.lua_TValue* %31 to i64*
  store i64 %34, i64* %35, align 8, !tbaa !25
  %36 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 23, i32 1
  store i32 5, i32* %36, align 4, !tbaa !10
  br label %index2adr.exit

; <label>:37                                      ; preds = %19
  %38 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 22
  br label %index2adr.exit

; <label>:39                                      ; preds = %19
  %40 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 7
  %41 = load %struct.CallInfo*, %struct.CallInfo** %40, align 8, !tbaa !13
  %42 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %41, i64 0, i32 1
  %43 = bitcast %struct.lua_TValue** %42 to %struct.CClosure***
  %44 = load %struct.CClosure**, %struct.CClosure*** %43, align 8, !tbaa !28
  %45 = load %struct.CClosure*, %struct.CClosure** %44, align 8, !tbaa !25
  %46 = sub nsw i32 -10002, %idx
  %47 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %45, i64 0, i32 4
  %48 = load i8, i8* %47, align 1, !tbaa !31
  %49 = zext i8 %48 to i32
  %50 = icmp sgt i32 %46, %49
  br i1 %50, label %index2adr.exit, label %51

; <label>:51                                      ; preds = %39
  %52 = add nsw i32 %46, -1
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %45, i64 0, i32 8, i64 %53
  br label %index2adr.exit

index2adr.exit:                                   ; preds = %3, %14, %20, %24, %37, %39, %51
  %.1.i = phi %struct.lua_TValue* [ %.luaO_nilobject_.i, %3 ], [ %18, %14 ], [ %38, %37 ], [ %31, %24 ], [ %23, %20 ], [ %54, %51 ], [ bitcast (%struct.lua_TValue.218* @luaO_nilobject_ to %struct.lua_TValue*), %39 ]
  %55 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %.1.i, i64 0, i32 1
  %56 = load i32, i32* %55, align 4, !tbaa !10
  %57 = icmp eq i32 %56, 3
  br i1 %57, label %61, label %58

; <label>:58                                      ; preds = %index2adr.exit
  %59 = call %struct.lua_TValue* bitcast (%struct.lua_TValue.218* (%struct.lua_TValue.218*, %struct.lua_TValue.218*)* @luaV_tonumber to %struct.lua_TValue* (%struct.lua_TValue*, %struct.lua_TValue*)*)(%struct.lua_TValue* %.1.i, %struct.lua_TValue* nonnull %n) #1
  %60 = icmp eq %struct.lua_TValue* %59, null
  br i1 %60, label %64, label %61

; <label>:61                                      ; preds = %58, %index2adr.exit
  %o.0 = phi %struct.lua_TValue* [ %.1.i, %index2adr.exit ], [ %59, %58 ]
  %62 = bitcast %struct.lua_TValue* %o.0 to double*
  %63 = load double, double* %62, align 8, !tbaa !36
  br label %64

; <label>:64                                      ; preds = %58, %61
  %.0 = phi double [ %63, %61 ], [ 0.000000e+00, %58 ]
  call void @llvm.lifetime.end(i64 16, i8* %1) #1
  ret double %.0
}

; Function Attrs: nounwind uwtable
define i64 @lua_tointeger(%struct.lua_State* %L, i32 %idx) #0 {
  %n = alloca %struct.lua_TValue, align 8
  %1 = bitcast %struct.lua_TValue* %n to i8*
  call void @llvm.lifetime.start(i64 16, i8* %1) #1
  %2 = icmp sgt i32 %idx, 0
  br i1 %2, label %3, label %12

; <label>:3                                       ; preds = %0
  %4 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 5
  %5 = load %struct.lua_TValue*, %struct.lua_TValue** %4, align 8, !tbaa !11
  %6 = add nsw i32 %idx, -1
  %7 = sext i32 %6 to i64
  %8 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %5, i64 %7
  %9 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %10 = load %struct.lua_TValue*, %struct.lua_TValue** %9, align 8, !tbaa !1
  %11 = icmp ult %struct.lua_TValue* %8, %10
  %.luaO_nilobject_.i = select i1 %11, %struct.lua_TValue* %8, %struct.lua_TValue* bitcast (%struct.lua_TValue.218* @luaO_nilobject_ to %struct.lua_TValue*)
  br label %index2adr.exit

; <label>:12                                      ; preds = %0
  %13 = icmp sgt i32 %idx, -10000
  br i1 %13, label %14, label %19

; <label>:14                                      ; preds = %12
  %15 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %16 = load %struct.lua_TValue*, %struct.lua_TValue** %15, align 8, !tbaa !1
  %17 = sext i32 %idx to i64
  %18 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %16, i64 %17
  br label %index2adr.exit

; <label>:19                                      ; preds = %12
  switch i32 %idx, label %39 [
    i32 -10000, label %20
    i32 -10001, label %24
    i32 -10002, label %37
  ]

; <label>:20                                      ; preds = %19
  %21 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 6
  %22 = load %struct.global_State*, %struct.global_State** %21, align 8, !tbaa !17
  %23 = getelementptr inbounds %struct.global_State, %struct.global_State* %22, i64 0, i32 20
  br label %index2adr.exit

; <label>:24                                      ; preds = %19
  %25 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 7
  %26 = load %struct.CallInfo*, %struct.CallInfo** %25, align 8, !tbaa !13
  %27 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %26, i64 0, i32 1
  %28 = bitcast %struct.lua_TValue** %27 to %struct.CClosure***
  %29 = load %struct.CClosure**, %struct.CClosure*** %28, align 8, !tbaa !28
  %30 = load %struct.CClosure*, %struct.CClosure** %29, align 8, !tbaa !25
  %31 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 23
  %32 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %30, i64 0, i32 6
  %33 = bitcast %struct.Table** %32 to i64*
  %34 = load i64, i64* %33, align 8, !tbaa !29
  %35 = bitcast %struct.lua_TValue* %31 to i64*
  store i64 %34, i64* %35, align 8, !tbaa !25
  %36 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 23, i32 1
  store i32 5, i32* %36, align 4, !tbaa !10
  br label %index2adr.exit

; <label>:37                                      ; preds = %19
  %38 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 22
  br label %index2adr.exit

; <label>:39                                      ; preds = %19
  %40 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 7
  %41 = load %struct.CallInfo*, %struct.CallInfo** %40, align 8, !tbaa !13
  %42 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %41, i64 0, i32 1
  %43 = bitcast %struct.lua_TValue** %42 to %struct.CClosure***
  %44 = load %struct.CClosure**, %struct.CClosure*** %43, align 8, !tbaa !28
  %45 = load %struct.CClosure*, %struct.CClosure** %44, align 8, !tbaa !25
  %46 = sub nsw i32 -10002, %idx
  %47 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %45, i64 0, i32 4
  %48 = load i8, i8* %47, align 1, !tbaa !31
  %49 = zext i8 %48 to i32
  %50 = icmp sgt i32 %46, %49
  br i1 %50, label %index2adr.exit, label %51

; <label>:51                                      ; preds = %39
  %52 = add nsw i32 %46, -1
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %45, i64 0, i32 8, i64 %53
  br label %index2adr.exit

index2adr.exit:                                   ; preds = %3, %14, %20, %24, %37, %39, %51
  %.1.i = phi %struct.lua_TValue* [ %.luaO_nilobject_.i, %3 ], [ %18, %14 ], [ %38, %37 ], [ %31, %24 ], [ %23, %20 ], [ %54, %51 ], [ bitcast (%struct.lua_TValue.218* @luaO_nilobject_ to %struct.lua_TValue*), %39 ]
  %55 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %.1.i, i64 0, i32 1
  %56 = load i32, i32* %55, align 4, !tbaa !10
  %57 = icmp eq i32 %56, 3
  br i1 %57, label %61, label %58

; <label>:58                                      ; preds = %index2adr.exit
  %59 = call %struct.lua_TValue* bitcast (%struct.lua_TValue.218* (%struct.lua_TValue.218*, %struct.lua_TValue.218*)* @luaV_tonumber to %struct.lua_TValue* (%struct.lua_TValue*, %struct.lua_TValue*)*)(%struct.lua_TValue* %.1.i, %struct.lua_TValue* nonnull %n) #1
  %60 = icmp eq %struct.lua_TValue* %59, null
  br i1 %60, label %65, label %61

; <label>:61                                      ; preds = %58, %index2adr.exit
  %o.0 = phi %struct.lua_TValue* [ %.1.i, %index2adr.exit ], [ %59, %58 ]
  %62 = bitcast %struct.lua_TValue* %o.0 to double*
  %63 = load double, double* %62, align 8, !tbaa !36
  %64 = fptosi double %63 to i64
  br label %65

; <label>:65                                      ; preds = %58, %61
  %.0 = phi i64 [ %64, %61 ], [ 0, %58 ]
  call void @llvm.lifetime.end(i64 16, i8* %1) #1
  ret i64 %.0
}

; Function Attrs: nounwind uwtable
define i32 @lua_toboolean(%struct.lua_State* nocapture %L, i32 %idx) #0 {
  %1 = icmp sgt i32 %idx, 0
  br i1 %1, label %2, label %11

; <label>:2                                       ; preds = %0
  %3 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 5
  %4 = load %struct.lua_TValue*, %struct.lua_TValue** %3, align 8, !tbaa !11
  %5 = add nsw i32 %idx, -1
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %4, i64 %6
  %8 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %9 = load %struct.lua_TValue*, %struct.lua_TValue** %8, align 8, !tbaa !1
  %10 = icmp ult %struct.lua_TValue* %7, %9
  %.luaO_nilobject_.i = select i1 %10, %struct.lua_TValue* %7, %struct.lua_TValue* bitcast (%struct.lua_TValue.218* @luaO_nilobject_ to %struct.lua_TValue*)
  br label %index2adr.exit

; <label>:11                                      ; preds = %0
  %12 = icmp sgt i32 %idx, -10000
  br i1 %12, label %13, label %18

; <label>:13                                      ; preds = %11
  %14 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %15 = load %struct.lua_TValue*, %struct.lua_TValue** %14, align 8, !tbaa !1
  %16 = sext i32 %idx to i64
  %17 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %15, i64 %16
  br label %index2adr.exit

; <label>:18                                      ; preds = %11
  switch i32 %idx, label %38 [
    i32 -10000, label %19
    i32 -10001, label %23
    i32 -10002, label %36
  ]

; <label>:19                                      ; preds = %18
  %20 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 6
  %21 = load %struct.global_State*, %struct.global_State** %20, align 8, !tbaa !17
  %22 = getelementptr inbounds %struct.global_State, %struct.global_State* %21, i64 0, i32 20
  br label %index2adr.exit

; <label>:23                                      ; preds = %18
  %24 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 7
  %25 = load %struct.CallInfo*, %struct.CallInfo** %24, align 8, !tbaa !13
  %26 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %25, i64 0, i32 1
  %27 = bitcast %struct.lua_TValue** %26 to %struct.CClosure***
  %28 = load %struct.CClosure**, %struct.CClosure*** %27, align 8, !tbaa !28
  %29 = load %struct.CClosure*, %struct.CClosure** %28, align 8, !tbaa !25
  %30 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 23
  %31 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %29, i64 0, i32 6
  %32 = bitcast %struct.Table** %31 to i64*
  %33 = load i64, i64* %32, align 8, !tbaa !29
  %34 = bitcast %struct.lua_TValue* %30 to i64*
  store i64 %33, i64* %34, align 8, !tbaa !25
  %35 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 23, i32 1
  store i32 5, i32* %35, align 4, !tbaa !10
  br label %index2adr.exit

; <label>:36                                      ; preds = %18
  %37 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 22
  br label %index2adr.exit

; <label>:38                                      ; preds = %18
  %39 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 7
  %40 = load %struct.CallInfo*, %struct.CallInfo** %39, align 8, !tbaa !13
  %41 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %40, i64 0, i32 1
  %42 = bitcast %struct.lua_TValue** %41 to %struct.CClosure***
  %43 = load %struct.CClosure**, %struct.CClosure*** %42, align 8, !tbaa !28
  %44 = load %struct.CClosure*, %struct.CClosure** %43, align 8, !tbaa !25
  %45 = sub nsw i32 -10002, %idx
  %46 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %44, i64 0, i32 4
  %47 = load i8, i8* %46, align 1, !tbaa !31
  %48 = zext i8 %47 to i32
  %49 = icmp sgt i32 %45, %48
  br i1 %49, label %index2adr.exit, label %50

; <label>:50                                      ; preds = %38
  %51 = add nsw i32 %45, -1
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %44, i64 0, i32 8, i64 %52
  br label %index2adr.exit

index2adr.exit:                                   ; preds = %2, %13, %19, %23, %36, %38, %50
  %.1.i = phi %struct.lua_TValue* [ %.luaO_nilobject_.i, %2 ], [ %17, %13 ], [ %37, %36 ], [ %30, %23 ], [ %22, %19 ], [ %53, %50 ], [ bitcast (%struct.lua_TValue.218* @luaO_nilobject_ to %struct.lua_TValue*), %38 ]
  %54 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %.1.i, i64 0, i32 1
  %55 = load i32, i32* %54, align 4, !tbaa !10
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %62, label %57

; <label>:57                                      ; preds = %index2adr.exit
  %58 = icmp eq i32 %55, 1
  br i1 %58, label %59, label %62

; <label>:59                                      ; preds = %57
  %60 = bitcast %struct.lua_TValue* %.1.i to i32*
  %61 = load i32, i32* %60, align 4, !tbaa !38
  %phitmp = icmp ne i32 %61, 0
  br label %62

; <label>:62                                      ; preds = %57, %59, %index2adr.exit
  %63 = phi i1 [ false, %index2adr.exit ], [ true, %57 ], [ %phitmp, %59 ]
  %64 = zext i1 %63 to i32
  ret i32 %64
}

; Function Attrs: nounwind uwtable
define i8* @lua_tolstring(%struct.lua_State* %L, i32 %idx, i64* %len) #0 {
  %1 = icmp sgt i32 %idx, 0
  br i1 %1, label %2, label %11

; <label>:2                                       ; preds = %0
  %3 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 5
  %4 = load %struct.lua_TValue*, %struct.lua_TValue** %3, align 8, !tbaa !11
  %5 = add nsw i32 %idx, -1
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %4, i64 %6
  %8 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %9 = load %struct.lua_TValue*, %struct.lua_TValue** %8, align 8, !tbaa !1
  %10 = icmp ult %struct.lua_TValue* %7, %9
  %.luaO_nilobject_.i = select i1 %10, %struct.lua_TValue* %7, %struct.lua_TValue* bitcast (%struct.lua_TValue.218* @luaO_nilobject_ to %struct.lua_TValue*)
  br label %index2adr.exit

; <label>:11                                      ; preds = %0
  %12 = icmp sgt i32 %idx, -10000
  br i1 %12, label %13, label %18

; <label>:13                                      ; preds = %11
  %14 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %15 = load %struct.lua_TValue*, %struct.lua_TValue** %14, align 8, !tbaa !1
  %16 = sext i32 %idx to i64
  %17 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %15, i64 %16
  br label %index2adr.exit

; <label>:18                                      ; preds = %11
  switch i32 %idx, label %38 [
    i32 -10000, label %19
    i32 -10001, label %23
    i32 -10002, label %36
  ]

; <label>:19                                      ; preds = %18
  %20 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 6
  %21 = load %struct.global_State*, %struct.global_State** %20, align 8, !tbaa !17
  %22 = getelementptr inbounds %struct.global_State, %struct.global_State* %21, i64 0, i32 20
  br label %index2adr.exit

; <label>:23                                      ; preds = %18
  %24 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 7
  %25 = load %struct.CallInfo*, %struct.CallInfo** %24, align 8, !tbaa !13
  %26 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %25, i64 0, i32 1
  %27 = bitcast %struct.lua_TValue** %26 to %struct.CClosure***
  %28 = load %struct.CClosure**, %struct.CClosure*** %27, align 8, !tbaa !28
  %29 = load %struct.CClosure*, %struct.CClosure** %28, align 8, !tbaa !25
  %30 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 23
  %31 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %29, i64 0, i32 6
  %32 = bitcast %struct.Table** %31 to i64*
  %33 = load i64, i64* %32, align 8, !tbaa !29
  %34 = bitcast %struct.lua_TValue* %30 to i64*
  store i64 %33, i64* %34, align 8, !tbaa !25
  %35 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 23, i32 1
  store i32 5, i32* %35, align 4, !tbaa !10
  br label %index2adr.exit

; <label>:36                                      ; preds = %18
  %37 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 22
  br label %index2adr.exit

; <label>:38                                      ; preds = %18
  %39 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 7
  %40 = load %struct.CallInfo*, %struct.CallInfo** %39, align 8, !tbaa !13
  %41 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %40, i64 0, i32 1
  %42 = bitcast %struct.lua_TValue** %41 to %struct.CClosure***
  %43 = load %struct.CClosure**, %struct.CClosure*** %42, align 8, !tbaa !28
  %44 = load %struct.CClosure*, %struct.CClosure** %43, align 8, !tbaa !25
  %45 = sub nsw i32 -10002, %idx
  %46 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %44, i64 0, i32 4
  %47 = load i8, i8* %46, align 1, !tbaa !31
  %48 = zext i8 %47 to i32
  %49 = icmp sgt i32 %45, %48
  br i1 %49, label %index2adr.exit, label %50

; <label>:50                                      ; preds = %38
  %51 = add nsw i32 %45, -1
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %44, i64 0, i32 8, i64 %52
  br label %index2adr.exit

index2adr.exit:                                   ; preds = %2, %13, %19, %23, %36, %38, %50
  %.1.i = phi %struct.lua_TValue* [ %.luaO_nilobject_.i, %2 ], [ %17, %13 ], [ %37, %36 ], [ %30, %23 ], [ %22, %19 ], [ %53, %50 ], [ bitcast (%struct.lua_TValue.218* @luaO_nilobject_ to %struct.lua_TValue*), %38 ]
  %54 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %.1.i, i64 0, i32 1
  %55 = load i32, i32* %54, align 4, !tbaa !10
  %56 = icmp eq i32 %55, 4
  br i1 %56, label %index2adr.exit3, label %57

; <label>:57                                      ; preds = %index2adr.exit
  %58 = tail call i32 bitcast (i32 (%struct.lua_State.215*, %struct.lua_TValue.218*)* @luaV_tostring to i32 (%struct.lua_State*, %struct.lua_TValue*)*)(%struct.lua_State* %L, %struct.lua_TValue* %.1.i) #1
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %63

; <label>:60                                      ; preds = %57
  %61 = icmp eq i64* %len, null
  br i1 %61, label %135, label %62

; <label>:62                                      ; preds = %60
  store i64 0, i64* %len, align 8, !tbaa !39
  br label %135

; <label>:63                                      ; preds = %57
  %64 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 6
  %65 = load %struct.global_State*, %struct.global_State** %64, align 8, !tbaa !17
  %66 = getelementptr inbounds %struct.global_State, %struct.global_State* %65, i64 0, i32 14
  %67 = load i64, i64* %66, align 8, !tbaa !23
  %68 = getelementptr inbounds %struct.global_State, %struct.global_State* %65, i64 0, i32 13
  %69 = load i64, i64* %68, align 8, !tbaa !24
  %70 = icmp ult i64 %67, %69
  br i1 %70, label %72, label %71

; <label>:71                                      ; preds = %63
  tail call void @luaC_step(%struct.lua_State* %L) #1
  br label %72

; <label>:72                                      ; preds = %63, %71
  br i1 %1, label %73, label %82

; <label>:73                                      ; preds = %72
  %74 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 5
  %75 = load %struct.lua_TValue*, %struct.lua_TValue** %74, align 8, !tbaa !11
  %76 = add nsw i32 %idx, -1
  %77 = sext i32 %76 to i64
  %78 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %75, i64 %77
  %79 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %80 = load %struct.lua_TValue*, %struct.lua_TValue** %79, align 8, !tbaa !1
  %81 = icmp ult %struct.lua_TValue* %78, %80
  %.luaO_nilobject_.i.1 = select i1 %81, %struct.lua_TValue* %78, %struct.lua_TValue* bitcast (%struct.lua_TValue.218* @luaO_nilobject_ to %struct.lua_TValue*)
  br label %index2adr.exit3

; <label>:82                                      ; preds = %72
  %83 = icmp sgt i32 %idx, -10000
  br i1 %83, label %84, label %89

; <label>:84                                      ; preds = %82
  %85 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %86 = load %struct.lua_TValue*, %struct.lua_TValue** %85, align 8, !tbaa !1
  %87 = sext i32 %idx to i64
  %88 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %86, i64 %87
  br label %index2adr.exit3

; <label>:89                                      ; preds = %82
  switch i32 %idx, label %108 [
    i32 -10000, label %90
    i32 -10001, label %93
    i32 -10002, label %106
  ]

; <label>:90                                      ; preds = %89
  %91 = load %struct.global_State*, %struct.global_State** %64, align 8, !tbaa !17
  %92 = getelementptr inbounds %struct.global_State, %struct.global_State* %91, i64 0, i32 20
  br label %index2adr.exit3

; <label>:93                                      ; preds = %89
  %94 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 7
  %95 = load %struct.CallInfo*, %struct.CallInfo** %94, align 8, !tbaa !13
  %96 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %95, i64 0, i32 1
  %97 = bitcast %struct.lua_TValue** %96 to %struct.CClosure***
  %98 = load %struct.CClosure**, %struct.CClosure*** %97, align 8, !tbaa !28
  %99 = load %struct.CClosure*, %struct.CClosure** %98, align 8, !tbaa !25
  %100 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 23
  %101 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %99, i64 0, i32 6
  %102 = bitcast %struct.Table** %101 to i64*
  %103 = load i64, i64* %102, align 8, !tbaa !29
  %104 = bitcast %struct.lua_TValue* %100 to i64*
  store i64 %103, i64* %104, align 8, !tbaa !25
  %105 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 23, i32 1
  store i32 5, i32* %105, align 4, !tbaa !10
  br label %index2adr.exit3

; <label>:106                                     ; preds = %89
  %107 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 22
  br label %index2adr.exit3

; <label>:108                                     ; preds = %89
  %109 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 7
  %110 = load %struct.CallInfo*, %struct.CallInfo** %109, align 8, !tbaa !13
  %111 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %110, i64 0, i32 1
  %112 = bitcast %struct.lua_TValue** %111 to %struct.CClosure***
  %113 = load %struct.CClosure**, %struct.CClosure*** %112, align 8, !tbaa !28
  %114 = load %struct.CClosure*, %struct.CClosure** %113, align 8, !tbaa !25
  %115 = sub nsw i32 -10002, %idx
  %116 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %114, i64 0, i32 4
  %117 = load i8, i8* %116, align 1, !tbaa !31
  %118 = zext i8 %117 to i32
  %119 = icmp sgt i32 %115, %118
  br i1 %119, label %index2adr.exit3, label %120

; <label>:120                                     ; preds = %108
  %121 = add nsw i32 %115, -1
  %122 = sext i32 %121 to i64
  %123 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %114, i64 0, i32 8, i64 %122
  br label %index2adr.exit3

index2adr.exit3:                                  ; preds = %120, %108, %106, %93, %90, %84, %73, %index2adr.exit
  %o.0 = phi %struct.lua_TValue* [ %.1.i, %index2adr.exit ], [ %.luaO_nilobject_.i.1, %73 ], [ %88, %84 ], [ %107, %106 ], [ %100, %93 ], [ %92, %90 ], [ %123, %120 ], [ bitcast (%struct.lua_TValue.218* @luaO_nilobject_ to %struct.lua_TValue*), %108 ]
  %124 = icmp eq i64* %len, null
  br i1 %124, label %index2adr.exit3._crit_edge, label %125

index2adr.exit3._crit_edge:                       ; preds = %index2adr.exit3
  %.phi.trans.insert = bitcast %struct.lua_TValue* %o.0 to %union.TString**
  %.pre = load %union.TString*, %union.TString** %.phi.trans.insert, align 8, !tbaa !25
  br label %131

; <label>:125                                     ; preds = %index2adr.exit3
  %126 = bitcast %struct.lua_TValue* %o.0 to %struct.anon.1**
  %127 = load %struct.anon.1*, %struct.anon.1** %126, align 8, !tbaa !25
  %128 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %127, i64 0, i32 5
  %129 = load i64, i64* %128, align 8, !tbaa !40
  store i64 %129, i64* %len, align 8, !tbaa !39
  %130 = bitcast %struct.anon.1* %127 to %union.TString*
  br label %131

; <label>:131                                     ; preds = %index2adr.exit3._crit_edge, %125
  %132 = phi %union.TString* [ %.pre, %index2adr.exit3._crit_edge ], [ %130, %125 ]
  %133 = getelementptr inbounds %union.TString, %union.TString* %132, i64 1
  %134 = bitcast %union.TString* %133 to i8*
  br label %135

; <label>:135                                     ; preds = %62, %60, %131
  %.0 = phi i8* [ %134, %131 ], [ null, %60 ], [ null, %62 ]
  ret i8* %.0
}

; Function Attrs: nounwind uwtable
define i64 @lua_objlen(%struct.lua_State* %L, i32 %idx) #0 {
  %1 = icmp sgt i32 %idx, 0
  br i1 %1, label %2, label %11

; <label>:2                                       ; preds = %0
  %3 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 5
  %4 = load %struct.lua_TValue*, %struct.lua_TValue** %3, align 8, !tbaa !11
  %5 = add nsw i32 %idx, -1
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %4, i64 %6
  %8 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %9 = load %struct.lua_TValue*, %struct.lua_TValue** %8, align 8, !tbaa !1
  %10 = icmp ult %struct.lua_TValue* %7, %9
  %.luaO_nilobject_.i = select i1 %10, %struct.lua_TValue* %7, %struct.lua_TValue* bitcast (%struct.lua_TValue.218* @luaO_nilobject_ to %struct.lua_TValue*)
  br label %index2adr.exit

; <label>:11                                      ; preds = %0
  %12 = icmp sgt i32 %idx, -10000
  br i1 %12, label %13, label %18

; <label>:13                                      ; preds = %11
  %14 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %15 = load %struct.lua_TValue*, %struct.lua_TValue** %14, align 8, !tbaa !1
  %16 = sext i32 %idx to i64
  %17 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %15, i64 %16
  br label %index2adr.exit

; <label>:18                                      ; preds = %11
  switch i32 %idx, label %38 [
    i32 -10000, label %19
    i32 -10001, label %23
    i32 -10002, label %36
  ]

; <label>:19                                      ; preds = %18
  %20 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 6
  %21 = load %struct.global_State*, %struct.global_State** %20, align 8, !tbaa !17
  %22 = getelementptr inbounds %struct.global_State, %struct.global_State* %21, i64 0, i32 20
  br label %index2adr.exit

; <label>:23                                      ; preds = %18
  %24 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 7
  %25 = load %struct.CallInfo*, %struct.CallInfo** %24, align 8, !tbaa !13
  %26 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %25, i64 0, i32 1
  %27 = bitcast %struct.lua_TValue** %26 to %struct.CClosure***
  %28 = load %struct.CClosure**, %struct.CClosure*** %27, align 8, !tbaa !28
  %29 = load %struct.CClosure*, %struct.CClosure** %28, align 8, !tbaa !25
  %30 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 23
  %31 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %29, i64 0, i32 6
  %32 = bitcast %struct.Table** %31 to i64*
  %33 = load i64, i64* %32, align 8, !tbaa !29
  %34 = bitcast %struct.lua_TValue* %30 to i64*
  store i64 %33, i64* %34, align 8, !tbaa !25
  %35 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 23, i32 1
  store i32 5, i32* %35, align 4, !tbaa !10
  br label %index2adr.exit

; <label>:36                                      ; preds = %18
  %37 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 22
  br label %index2adr.exit

; <label>:38                                      ; preds = %18
  %39 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 7
  %40 = load %struct.CallInfo*, %struct.CallInfo** %39, align 8, !tbaa !13
  %41 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %40, i64 0, i32 1
  %42 = bitcast %struct.lua_TValue** %41 to %struct.CClosure***
  %43 = load %struct.CClosure**, %struct.CClosure*** %42, align 8, !tbaa !28
  %44 = load %struct.CClosure*, %struct.CClosure** %43, align 8, !tbaa !25
  %45 = sub nsw i32 -10002, %idx
  %46 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %44, i64 0, i32 4
  %47 = load i8, i8* %46, align 1, !tbaa !31
  %48 = zext i8 %47 to i32
  %49 = icmp sgt i32 %45, %48
  br i1 %49, label %index2adr.exit, label %50

; <label>:50                                      ; preds = %38
  %51 = add nsw i32 %45, -1
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %44, i64 0, i32 8, i64 %52
  br label %index2adr.exit

index2adr.exit:                                   ; preds = %2, %13, %19, %23, %36, %38, %50
  %.1.i = phi %struct.lua_TValue* [ %.luaO_nilobject_.i, %2 ], [ %17, %13 ], [ %37, %36 ], [ %30, %23 ], [ %22, %19 ], [ %53, %50 ], [ bitcast (%struct.lua_TValue.218* @luaO_nilobject_ to %struct.lua_TValue*), %38 ]
  %54 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %.1.i, i64 0, i32 1
  %55 = load i32, i32* %54, align 4, !tbaa !10
  switch i32 %55, label %79 [
    i32 4, label %56
    i32 7, label %61
    i32 5, label %66
    i32 3, label %71
  ]

; <label>:56                                      ; preds = %index2adr.exit
  %57 = bitcast %struct.lua_TValue* %.1.i to %struct.anon.1**
  %58 = load %struct.anon.1*, %struct.anon.1** %57, align 8, !tbaa !25
  %59 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %58, i64 0, i32 5
  %60 = load i64, i64* %59, align 8, !tbaa !40
  br label %79

; <label>:61                                      ; preds = %index2adr.exit
  %62 = bitcast %struct.lua_TValue* %.1.i to %struct.anon.2**
  %63 = load %struct.anon.2*, %struct.anon.2** %62, align 8, !tbaa !25
  %64 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %63, i64 0, i32 5
  %65 = load i64, i64* %64, align 8, !tbaa !42
  br label %79

; <label>:66                                      ; preds = %index2adr.exit
  %67 = bitcast %struct.lua_TValue* %.1.i to %struct.Table**
  %68 = load %struct.Table*, %struct.Table** %67, align 8, !tbaa !25
  %69 = tail call i32 @luaH_getn(%struct.Table* %68) #1
  %70 = sext i32 %69 to i64
  br label %79

; <label>:71                                      ; preds = %index2adr.exit
  %72 = tail call i32 bitcast (i32 (%struct.lua_State.215*, %struct.lua_TValue.218*)* @luaV_tostring to i32 (%struct.lua_State*, %struct.lua_TValue*)*)(%struct.lua_State* %L, %struct.lua_TValue* %.1.i) #1
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %79, label %74

; <label>:74                                      ; preds = %71
  %75 = bitcast %struct.lua_TValue* %.1.i to %struct.anon.1**
  %76 = load %struct.anon.1*, %struct.anon.1** %75, align 8, !tbaa !25
  %77 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %76, i64 0, i32 5
  %78 = load i64, i64* %77, align 8, !tbaa !40
  br label %79

; <label>:79                                      ; preds = %index2adr.exit, %74, %71, %66, %61, %56
  %.0 = phi i64 [ %70, %66 ], [ %65, %61 ], [ %60, %56 ], [ %78, %74 ], [ 0, %71 ], [ 0, %index2adr.exit ]
  ret i64 %.0
}

; Function Attrs: nounwind uwtable
define i32 (%struct.lua_State*)* @lua_tocfunction(%struct.lua_State* nocapture %L, i32 %idx) #0 {
  %1 = icmp sgt i32 %idx, 0
  br i1 %1, label %2, label %11

; <label>:2                                       ; preds = %0
  %3 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 5
  %4 = load %struct.lua_TValue*, %struct.lua_TValue** %3, align 8, !tbaa !11
  %5 = add nsw i32 %idx, -1
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %4, i64 %6
  %8 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %9 = load %struct.lua_TValue*, %struct.lua_TValue** %8, align 8, !tbaa !1
  %10 = icmp ult %struct.lua_TValue* %7, %9
  %.luaO_nilobject_.i = select i1 %10, %struct.lua_TValue* %7, %struct.lua_TValue* bitcast (%struct.lua_TValue.218* @luaO_nilobject_ to %struct.lua_TValue*)
  br label %index2adr.exit

; <label>:11                                      ; preds = %0
  %12 = icmp sgt i32 %idx, -10000
  br i1 %12, label %13, label %18

; <label>:13                                      ; preds = %11
  %14 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %15 = load %struct.lua_TValue*, %struct.lua_TValue** %14, align 8, !tbaa !1
  %16 = sext i32 %idx to i64
  %17 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %15, i64 %16
  br label %index2adr.exit

; <label>:18                                      ; preds = %11
  switch i32 %idx, label %38 [
    i32 -10000, label %19
    i32 -10001, label %23
    i32 -10002, label %36
  ]

; <label>:19                                      ; preds = %18
  %20 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 6
  %21 = load %struct.global_State*, %struct.global_State** %20, align 8, !tbaa !17
  %22 = getelementptr inbounds %struct.global_State, %struct.global_State* %21, i64 0, i32 20
  br label %index2adr.exit

; <label>:23                                      ; preds = %18
  %24 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 7
  %25 = load %struct.CallInfo*, %struct.CallInfo** %24, align 8, !tbaa !13
  %26 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %25, i64 0, i32 1
  %27 = bitcast %struct.lua_TValue** %26 to %struct.CClosure***
  %28 = load %struct.CClosure**, %struct.CClosure*** %27, align 8, !tbaa !28
  %29 = load %struct.CClosure*, %struct.CClosure** %28, align 8, !tbaa !25
  %30 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 23
  %31 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %29, i64 0, i32 6
  %32 = bitcast %struct.Table** %31 to i64*
  %33 = load i64, i64* %32, align 8, !tbaa !29
  %34 = bitcast %struct.lua_TValue* %30 to i64*
  store i64 %33, i64* %34, align 8, !tbaa !25
  %35 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 23, i32 1
  store i32 5, i32* %35, align 4, !tbaa !10
  br label %index2adr.exit

; <label>:36                                      ; preds = %18
  %37 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 22
  br label %index2adr.exit

; <label>:38                                      ; preds = %18
  %39 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 7
  %40 = load %struct.CallInfo*, %struct.CallInfo** %39, align 8, !tbaa !13
  %41 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %40, i64 0, i32 1
  %42 = bitcast %struct.lua_TValue** %41 to %struct.CClosure***
  %43 = load %struct.CClosure**, %struct.CClosure*** %42, align 8, !tbaa !28
  %44 = load %struct.CClosure*, %struct.CClosure** %43, align 8, !tbaa !25
  %45 = sub nsw i32 -10002, %idx
  %46 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %44, i64 0, i32 4
  %47 = load i8, i8* %46, align 1, !tbaa !31
  %48 = zext i8 %47 to i32
  %49 = icmp sgt i32 %45, %48
  br i1 %49, label %index2adr.exit, label %50

; <label>:50                                      ; preds = %38
  %51 = add nsw i32 %45, -1
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %44, i64 0, i32 8, i64 %52
  br label %index2adr.exit

index2adr.exit:                                   ; preds = %2, %13, %19, %23, %36, %38, %50
  %.1.i = phi %struct.lua_TValue* [ %.luaO_nilobject_.i, %2 ], [ %17, %13 ], [ %37, %36 ], [ %30, %23 ], [ %22, %19 ], [ %53, %50 ], [ bitcast (%struct.lua_TValue.218* @luaO_nilobject_ to %struct.lua_TValue*), %38 ]
  %54 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %.1.i, i64 0, i32 1
  %55 = load i32, i32* %54, align 4, !tbaa !10
  %56 = icmp eq i32 %55, 6
  br i1 %56, label %57, label %66

; <label>:57                                      ; preds = %index2adr.exit
  %58 = bitcast %struct.lua_TValue* %.1.i to %struct.CClosure**
  %59 = load %struct.CClosure*, %struct.CClosure** %58, align 8, !tbaa !25
  %60 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %59, i64 0, i32 3
  %61 = load i8, i8* %60, align 1, !tbaa !35
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %66, label %63

; <label>:63                                      ; preds = %57
  %64 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %59, i64 0, i32 7
  %65 = load i32 (%struct.lua_State*)*, i32 (%struct.lua_State*)** %64, align 8, !tbaa !44
  br label %66

; <label>:66                                      ; preds = %57, %index2adr.exit, %63
  %67 = phi i32 (%struct.lua_State*)* [ %65, %63 ], [ null, %57 ], [ null, %index2adr.exit ]
  ret i32 (%struct.lua_State*)* %67
}

; Function Attrs: nounwind uwtable
define i8* @lua_touserdata(%struct.lua_State* nocapture %L, i32 %idx) #0 {
  %1 = icmp sgt i32 %idx, 0
  br i1 %1, label %2, label %11

; <label>:2                                       ; preds = %0
  %3 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 5
  %4 = load %struct.lua_TValue*, %struct.lua_TValue** %3, align 8, !tbaa !11
  %5 = add nsw i32 %idx, -1
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %4, i64 %6
  %8 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %9 = load %struct.lua_TValue*, %struct.lua_TValue** %8, align 8, !tbaa !1
  %10 = icmp ult %struct.lua_TValue* %7, %9
  %.luaO_nilobject_.i = select i1 %10, %struct.lua_TValue* %7, %struct.lua_TValue* bitcast (%struct.lua_TValue.218* @luaO_nilobject_ to %struct.lua_TValue*)
  br label %index2adr.exit

; <label>:11                                      ; preds = %0
  %12 = icmp sgt i32 %idx, -10000
  br i1 %12, label %13, label %18

; <label>:13                                      ; preds = %11
  %14 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %15 = load %struct.lua_TValue*, %struct.lua_TValue** %14, align 8, !tbaa !1
  %16 = sext i32 %idx to i64
  %17 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %15, i64 %16
  br label %index2adr.exit

; <label>:18                                      ; preds = %11
  switch i32 %idx, label %38 [
    i32 -10000, label %19
    i32 -10001, label %23
    i32 -10002, label %36
  ]

; <label>:19                                      ; preds = %18
  %20 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 6
  %21 = load %struct.global_State*, %struct.global_State** %20, align 8, !tbaa !17
  %22 = getelementptr inbounds %struct.global_State, %struct.global_State* %21, i64 0, i32 20
  br label %index2adr.exit

; <label>:23                                      ; preds = %18
  %24 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 7
  %25 = load %struct.CallInfo*, %struct.CallInfo** %24, align 8, !tbaa !13
  %26 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %25, i64 0, i32 1
  %27 = bitcast %struct.lua_TValue** %26 to %struct.CClosure***
  %28 = load %struct.CClosure**, %struct.CClosure*** %27, align 8, !tbaa !28
  %29 = load %struct.CClosure*, %struct.CClosure** %28, align 8, !tbaa !25
  %30 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 23
  %31 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %29, i64 0, i32 6
  %32 = bitcast %struct.Table** %31 to i64*
  %33 = load i64, i64* %32, align 8, !tbaa !29
  %34 = bitcast %struct.lua_TValue* %30 to i64*
  store i64 %33, i64* %34, align 8, !tbaa !25
  %35 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 23, i32 1
  store i32 5, i32* %35, align 4, !tbaa !10
  br label %index2adr.exit

; <label>:36                                      ; preds = %18
  %37 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 22
  br label %index2adr.exit

; <label>:38                                      ; preds = %18
  %39 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 7
  %40 = load %struct.CallInfo*, %struct.CallInfo** %39, align 8, !tbaa !13
  %41 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %40, i64 0, i32 1
  %42 = bitcast %struct.lua_TValue** %41 to %struct.CClosure***
  %43 = load %struct.CClosure**, %struct.CClosure*** %42, align 8, !tbaa !28
  %44 = load %struct.CClosure*, %struct.CClosure** %43, align 8, !tbaa !25
  %45 = sub nsw i32 -10002, %idx
  %46 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %44, i64 0, i32 4
  %47 = load i8, i8* %46, align 1, !tbaa !31
  %48 = zext i8 %47 to i32
  %49 = icmp sgt i32 %45, %48
  br i1 %49, label %index2adr.exit, label %50

; <label>:50                                      ; preds = %38
  %51 = add nsw i32 %45, -1
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %44, i64 0, i32 8, i64 %52
  br label %index2adr.exit

index2adr.exit:                                   ; preds = %2, %13, %19, %23, %36, %38, %50
  %.1.i = phi %struct.lua_TValue* [ %.luaO_nilobject_.i, %2 ], [ %17, %13 ], [ %37, %36 ], [ %30, %23 ], [ %22, %19 ], [ %53, %50 ], [ bitcast (%struct.lua_TValue.218* @luaO_nilobject_ to %struct.lua_TValue*), %38 ]
  %54 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %.1.i, i64 0, i32 1
  %55 = load i32, i32* %54, align 4, !tbaa !10
  switch i32 %55, label %64 [
    i32 7, label %56
    i32 2, label %61
  ]

; <label>:56                                      ; preds = %index2adr.exit
  %57 = bitcast %struct.lua_TValue* %.1.i to %union.Udata**
  %58 = load %union.Udata*, %union.Udata** %57, align 8, !tbaa !25
  %59 = getelementptr inbounds %union.Udata, %union.Udata* %58, i64 1
  %60 = bitcast %union.Udata* %59 to i8*
  br label %64

; <label>:61                                      ; preds = %index2adr.exit
  %62 = bitcast %struct.lua_TValue* %.1.i to i8**
  %63 = load i8*, i8** %62, align 8, !tbaa !25
  br label %64

; <label>:64                                      ; preds = %index2adr.exit, %61, %56
  %.0 = phi i8* [ %63, %61 ], [ %60, %56 ], [ null, %index2adr.exit ]
  ret i8* %.0
}

; Function Attrs: nounwind uwtable
define %struct.lua_State* @lua_tothread(%struct.lua_State* nocapture %L, i32 %idx) #0 {
  %1 = icmp sgt i32 %idx, 0
  br i1 %1, label %2, label %11

; <label>:2                                       ; preds = %0
  %3 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 5
  %4 = load %struct.lua_TValue*, %struct.lua_TValue** %3, align 8, !tbaa !11
  %5 = add nsw i32 %idx, -1
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %4, i64 %6
  %8 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %9 = load %struct.lua_TValue*, %struct.lua_TValue** %8, align 8, !tbaa !1
  %10 = icmp ult %struct.lua_TValue* %7, %9
  %.luaO_nilobject_.i = select i1 %10, %struct.lua_TValue* %7, %struct.lua_TValue* bitcast (%struct.lua_TValue.218* @luaO_nilobject_ to %struct.lua_TValue*)
  br label %index2adr.exit

; <label>:11                                      ; preds = %0
  %12 = icmp sgt i32 %idx, -10000
  br i1 %12, label %13, label %18

; <label>:13                                      ; preds = %11
  %14 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %15 = load %struct.lua_TValue*, %struct.lua_TValue** %14, align 8, !tbaa !1
  %16 = sext i32 %idx to i64
  %17 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %15, i64 %16
  br label %index2adr.exit

; <label>:18                                      ; preds = %11
  switch i32 %idx, label %38 [
    i32 -10000, label %19
    i32 -10001, label %23
    i32 -10002, label %36
  ]

; <label>:19                                      ; preds = %18
  %20 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 6
  %21 = load %struct.global_State*, %struct.global_State** %20, align 8, !tbaa !17
  %22 = getelementptr inbounds %struct.global_State, %struct.global_State* %21, i64 0, i32 20
  br label %index2adr.exit

; <label>:23                                      ; preds = %18
  %24 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 7
  %25 = load %struct.CallInfo*, %struct.CallInfo** %24, align 8, !tbaa !13
  %26 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %25, i64 0, i32 1
  %27 = bitcast %struct.lua_TValue** %26 to %struct.CClosure***
  %28 = load %struct.CClosure**, %struct.CClosure*** %27, align 8, !tbaa !28
  %29 = load %struct.CClosure*, %struct.CClosure** %28, align 8, !tbaa !25
  %30 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 23
  %31 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %29, i64 0, i32 6
  %32 = bitcast %struct.Table** %31 to i64*
  %33 = load i64, i64* %32, align 8, !tbaa !29
  %34 = bitcast %struct.lua_TValue* %30 to i64*
  store i64 %33, i64* %34, align 8, !tbaa !25
  %35 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 23, i32 1
  store i32 5, i32* %35, align 4, !tbaa !10
  br label %index2adr.exit

; <label>:36                                      ; preds = %18
  %37 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 22
  br label %index2adr.exit

; <label>:38                                      ; preds = %18
  %39 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 7
  %40 = load %struct.CallInfo*, %struct.CallInfo** %39, align 8, !tbaa !13
  %41 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %40, i64 0, i32 1
  %42 = bitcast %struct.lua_TValue** %41 to %struct.CClosure***
  %43 = load %struct.CClosure**, %struct.CClosure*** %42, align 8, !tbaa !28
  %44 = load %struct.CClosure*, %struct.CClosure** %43, align 8, !tbaa !25
  %45 = sub nsw i32 -10002, %idx
  %46 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %44, i64 0, i32 4
  %47 = load i8, i8* %46, align 1, !tbaa !31
  %48 = zext i8 %47 to i32
  %49 = icmp sgt i32 %45, %48
  br i1 %49, label %index2adr.exit, label %50

; <label>:50                                      ; preds = %38
  %51 = add nsw i32 %45, -1
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %44, i64 0, i32 8, i64 %52
  br label %index2adr.exit

index2adr.exit:                                   ; preds = %2, %13, %19, %23, %36, %38, %50
  %.1.i = phi %struct.lua_TValue* [ %.luaO_nilobject_.i, %2 ], [ %17, %13 ], [ %37, %36 ], [ %30, %23 ], [ %22, %19 ], [ %53, %50 ], [ bitcast (%struct.lua_TValue.218* @luaO_nilobject_ to %struct.lua_TValue*), %38 ]
  %54 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %.1.i, i64 0, i32 1
  %55 = load i32, i32* %54, align 4, !tbaa !10
  %56 = icmp eq i32 %55, 8
  br i1 %56, label %57, label %60

; <label>:57                                      ; preds = %index2adr.exit
  %58 = bitcast %struct.lua_TValue* %.1.i to %struct.lua_State**
  %59 = load %struct.lua_State*, %struct.lua_State** %58, align 8, !tbaa !25
  br label %60

; <label>:60                                      ; preds = %index2adr.exit, %57
  %61 = phi %struct.lua_State* [ %59, %57 ], [ null, %index2adr.exit ]
  ret %struct.lua_State* %61
}

; Function Attrs: nounwind uwtable
define i8* @lua_topointer(%struct.lua_State* nocapture %L, i32 %idx) #0 {
  %1 = icmp sgt i32 %idx, 0
  br i1 %1, label %2, label %11

; <label>:2                                       ; preds = %0
  %3 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 5
  %4 = load %struct.lua_TValue*, %struct.lua_TValue** %3, align 8, !tbaa !11
  %5 = add nsw i32 %idx, -1
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %4, i64 %6
  %8 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %9 = load %struct.lua_TValue*, %struct.lua_TValue** %8, align 8, !tbaa !1
  %10 = icmp ult %struct.lua_TValue* %7, %9
  %.luaO_nilobject_.i = select i1 %10, %struct.lua_TValue* %7, %struct.lua_TValue* bitcast (%struct.lua_TValue.218* @luaO_nilobject_ to %struct.lua_TValue*)
  br label %index2adr.exit

; <label>:11                                      ; preds = %0
  %12 = icmp sgt i32 %idx, -10000
  br i1 %12, label %13, label %18

; <label>:13                                      ; preds = %11
  %14 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %15 = load %struct.lua_TValue*, %struct.lua_TValue** %14, align 8, !tbaa !1
  %16 = sext i32 %idx to i64
  %17 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %15, i64 %16
  br label %index2adr.exit

; <label>:18                                      ; preds = %11
  switch i32 %idx, label %38 [
    i32 -10000, label %19
    i32 -10001, label %23
    i32 -10002, label %36
  ]

; <label>:19                                      ; preds = %18
  %20 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 6
  %21 = load %struct.global_State*, %struct.global_State** %20, align 8, !tbaa !17
  %22 = getelementptr inbounds %struct.global_State, %struct.global_State* %21, i64 0, i32 20
  br label %index2adr.exit

; <label>:23                                      ; preds = %18
  %24 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 7
  %25 = load %struct.CallInfo*, %struct.CallInfo** %24, align 8, !tbaa !13
  %26 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %25, i64 0, i32 1
  %27 = bitcast %struct.lua_TValue** %26 to %struct.CClosure***
  %28 = load %struct.CClosure**, %struct.CClosure*** %27, align 8, !tbaa !28
  %29 = load %struct.CClosure*, %struct.CClosure** %28, align 8, !tbaa !25
  %30 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 23
  %31 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %29, i64 0, i32 6
  %32 = bitcast %struct.Table** %31 to i64*
  %33 = load i64, i64* %32, align 8, !tbaa !29
  %34 = bitcast %struct.lua_TValue* %30 to i64*
  store i64 %33, i64* %34, align 8, !tbaa !25
  %35 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 23, i32 1
  store i32 5, i32* %35, align 4, !tbaa !10
  br label %index2adr.exit

; <label>:36                                      ; preds = %18
  %37 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 22
  br label %index2adr.exit

; <label>:38                                      ; preds = %18
  %39 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 7
  %40 = load %struct.CallInfo*, %struct.CallInfo** %39, align 8, !tbaa !13
  %41 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %40, i64 0, i32 1
  %42 = bitcast %struct.lua_TValue** %41 to %struct.CClosure***
  %43 = load %struct.CClosure**, %struct.CClosure*** %42, align 8, !tbaa !28
  %44 = load %struct.CClosure*, %struct.CClosure** %43, align 8, !tbaa !25
  %45 = sub nsw i32 -10002, %idx
  %46 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %44, i64 0, i32 4
  %47 = load i8, i8* %46, align 1, !tbaa !31
  %48 = zext i8 %47 to i32
  %49 = icmp sgt i32 %45, %48
  br i1 %49, label %index2adr.exit, label %50

; <label>:50                                      ; preds = %38
  %51 = add nsw i32 %45, -1
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %44, i64 0, i32 8, i64 %52
  br label %index2adr.exit

index2adr.exit:                                   ; preds = %2, %13, %19, %23, %36, %38, %50
  %.1.i = phi %struct.lua_TValue* [ %.luaO_nilobject_.i, %2 ], [ %17, %13 ], [ %37, %36 ], [ %30, %23 ], [ %22, %19 ], [ %53, %50 ], [ bitcast (%struct.lua_TValue.218* @luaO_nilobject_ to %struct.lua_TValue*), %38 ]
  %54 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %.1.i, i64 0, i32 1
  %55 = load i32, i32* %54, align 4, !tbaa !10
  switch i32 %55, label %lua_touserdata.exit [
    i32 5, label %56
    i32 6, label %59
    i32 8, label %62
    i32 7, label %65
    i32 2, label %65
  ]

; <label>:56                                      ; preds = %index2adr.exit
  %57 = bitcast %struct.lua_TValue* %.1.i to i8**
  %58 = load i8*, i8** %57, align 8, !tbaa !25
  br label %lua_touserdata.exit

; <label>:59                                      ; preds = %index2adr.exit
  %60 = bitcast %struct.lua_TValue* %.1.i to i8**
  %61 = load i8*, i8** %60, align 8, !tbaa !25
  br label %lua_touserdata.exit

; <label>:62                                      ; preds = %index2adr.exit
  %63 = bitcast %struct.lua_TValue* %.1.i to i8**
  %64 = load i8*, i8** %63, align 8, !tbaa !25
  br label %lua_touserdata.exit

; <label>:65                                      ; preds = %index2adr.exit, %index2adr.exit
  br i1 %1, label %66, label %75

; <label>:66                                      ; preds = %65
  %67 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 5
  %68 = load %struct.lua_TValue*, %struct.lua_TValue** %67, align 8, !tbaa !11
  %69 = add nsw i32 %idx, -1
  %70 = sext i32 %69 to i64
  %71 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %68, i64 %70
  %72 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %73 = load %struct.lua_TValue*, %struct.lua_TValue** %72, align 8, !tbaa !1
  %74 = icmp ult %struct.lua_TValue* %71, %73
  %.luaO_nilobject_.i.i = select i1 %74, %struct.lua_TValue* %71, %struct.lua_TValue* bitcast (%struct.lua_TValue.218* @luaO_nilobject_ to %struct.lua_TValue*)
  br label %index2adr.exit.i

; <label>:75                                      ; preds = %65
  %76 = icmp sgt i32 %idx, -10000
  br i1 %76, label %77, label %82

; <label>:77                                      ; preds = %75
  %78 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %79 = load %struct.lua_TValue*, %struct.lua_TValue** %78, align 8, !tbaa !1
  %80 = sext i32 %idx to i64
  %81 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %79, i64 %80
  br label %index2adr.exit.i

; <label>:82                                      ; preds = %75
  switch i32 %idx, label %102 [
    i32 -10000, label %83
    i32 -10001, label %87
    i32 -10002, label %100
  ]

; <label>:83                                      ; preds = %82
  %84 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 6
  %85 = load %struct.global_State*, %struct.global_State** %84, align 8, !tbaa !17
  %86 = getelementptr inbounds %struct.global_State, %struct.global_State* %85, i64 0, i32 20
  br label %index2adr.exit.i

; <label>:87                                      ; preds = %82
  %88 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 7
  %89 = load %struct.CallInfo*, %struct.CallInfo** %88, align 8, !tbaa !13
  %90 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %89, i64 0, i32 1
  %91 = bitcast %struct.lua_TValue** %90 to %struct.CClosure***
  %92 = load %struct.CClosure**, %struct.CClosure*** %91, align 8, !tbaa !28
  %93 = load %struct.CClosure*, %struct.CClosure** %92, align 8, !tbaa !25
  %94 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 23
  %95 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %93, i64 0, i32 6
  %96 = bitcast %struct.Table** %95 to i64*
  %97 = load i64, i64* %96, align 8, !tbaa !29
  %98 = bitcast %struct.lua_TValue* %94 to i64*
  store i64 %97, i64* %98, align 8, !tbaa !25
  %99 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 23, i32 1
  store i32 5, i32* %99, align 4, !tbaa !10
  br label %index2adr.exit.i

; <label>:100                                     ; preds = %82
  %101 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 22
  br label %index2adr.exit.i

; <label>:102                                     ; preds = %82
  %103 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 7
  %104 = load %struct.CallInfo*, %struct.CallInfo** %103, align 8, !tbaa !13
  %105 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %104, i64 0, i32 1
  %106 = bitcast %struct.lua_TValue** %105 to %struct.CClosure***
  %107 = load %struct.CClosure**, %struct.CClosure*** %106, align 8, !tbaa !28
  %108 = load %struct.CClosure*, %struct.CClosure** %107, align 8, !tbaa !25
  %109 = sub nsw i32 -10002, %idx
  %110 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %108, i64 0, i32 4
  %111 = load i8, i8* %110, align 1, !tbaa !31
  %112 = zext i8 %111 to i32
  %113 = icmp sgt i32 %109, %112
  br i1 %113, label %index2adr.exit.i, label %114

; <label>:114                                     ; preds = %102
  %115 = add nsw i32 %109, -1
  %116 = sext i32 %115 to i64
  %117 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %108, i64 0, i32 8, i64 %116
  br label %index2adr.exit.i

index2adr.exit.i:                                 ; preds = %114, %102, %100, %87, %83, %77, %66
  %.1.i.i = phi %struct.lua_TValue* [ %.luaO_nilobject_.i.i, %66 ], [ %81, %77 ], [ %101, %100 ], [ %94, %87 ], [ %86, %83 ], [ %117, %114 ], [ bitcast (%struct.lua_TValue.218* @luaO_nilobject_ to %struct.lua_TValue*), %102 ]
  %118 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %.1.i.i, i64 0, i32 1
  %119 = load i32, i32* %118, align 4, !tbaa !10
  switch i32 %119, label %lua_touserdata.exit [
    i32 7, label %120
    i32 2, label %125
  ]

; <label>:120                                     ; preds = %index2adr.exit.i
  %121 = bitcast %struct.lua_TValue* %.1.i.i to %union.Udata**
  %122 = load %union.Udata*, %union.Udata** %121, align 8, !tbaa !25
  %123 = getelementptr inbounds %union.Udata, %union.Udata* %122, i64 1
  %124 = bitcast %union.Udata* %123 to i8*
  br label %lua_touserdata.exit

; <label>:125                                     ; preds = %index2adr.exit.i
  %126 = bitcast %struct.lua_TValue* %.1.i.i to i8**
  %127 = load i8*, i8** %126, align 8, !tbaa !25
  br label %lua_touserdata.exit

lua_touserdata.exit:                              ; preds = %125, %120, %index2adr.exit.i, %index2adr.exit, %62, %59, %56
  %.0 = phi i8* [ %64, %62 ], [ %61, %59 ], [ %58, %56 ], [ null, %index2adr.exit ], [ %127, %125 ], [ %124, %120 ], [ null, %index2adr.exit.i ]
  ret i8* %.0
}

; Function Attrs: nounwind uwtable
define void @lua_pushnil(%struct.lua_State* nocapture %L) #0 {
  %1 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %2 = load %struct.lua_TValue*, %struct.lua_TValue** %1, align 8, !tbaa !1
  %3 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %2, i64 0, i32 1
  store i32 0, i32* %3, align 4, !tbaa !10
  %4 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %2, i64 1
  store %struct.lua_TValue* %4, %struct.lua_TValue** %1, align 8, !tbaa !1
  ret void
}

; Function Attrs: nounwind uwtable
define void @lua_pushnumber(%struct.lua_State* nocapture %L, double %n) #0 {
  %1 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %2 = load %struct.lua_TValue*, %struct.lua_TValue** %1, align 8, !tbaa !1
  %3 = bitcast %struct.lua_TValue* %2 to double*
  store double %n, double* %3, align 8, !tbaa !36
  %4 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %2, i64 0, i32 1
  store i32 3, i32* %4, align 4, !tbaa !10
  %5 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %2, i64 1
  store %struct.lua_TValue* %5, %struct.lua_TValue** %1, align 8, !tbaa !1
  ret void
}

; Function Attrs: nounwind uwtable
define void @lua_pushinteger(%struct.lua_State* nocapture %L, i64 %n) #0 {
  %1 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %2 = load %struct.lua_TValue*, %struct.lua_TValue** %1, align 8, !tbaa !1
  %3 = sitofp i64 %n to double
  %4 = bitcast %struct.lua_TValue* %2 to double*
  store double %3, double* %4, align 8, !tbaa !36
  %5 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %2, i64 0, i32 1
  store i32 3, i32* %5, align 4, !tbaa !10
  %6 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %2, i64 1
  store %struct.lua_TValue* %6, %struct.lua_TValue** %1, align 8, !tbaa !1
  ret void
}

; Function Attrs: nounwind uwtable
define void @lua_pushlstring(%struct.lua_State* %L, i8* %s, i64 %len) #0 {
  %1 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 6
  %2 = load %struct.global_State*, %struct.global_State** %1, align 8, !tbaa !17
  %3 = getelementptr inbounds %struct.global_State, %struct.global_State* %2, i64 0, i32 14
  %4 = load i64, i64* %3, align 8, !tbaa !23
  %5 = getelementptr inbounds %struct.global_State, %struct.global_State* %2, i64 0, i32 13
  %6 = load i64, i64* %5, align 8, !tbaa !24
  %7 = icmp ult i64 %4, %6
  br i1 %7, label %9, label %8

; <label>:8                                       ; preds = %0
  tail call void @luaC_step(%struct.lua_State* %L) #1
  br label %9

; <label>:9                                       ; preds = %0, %8
  %10 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %11 = load %struct.lua_TValue*, %struct.lua_TValue** %10, align 8, !tbaa !1
  %12 = tail call %union.TString* @luaS_newlstr(%struct.lua_State* %L, i8* %s, i64 %len) #1
  %13 = bitcast %struct.lua_TValue* %11 to %union.TString**
  store %union.TString* %12, %union.TString** %13, align 8, !tbaa !25
  %14 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %11, i64 0, i32 1
  store i32 4, i32* %14, align 4, !tbaa !10
  %15 = load %struct.lua_TValue*, %struct.lua_TValue** %10, align 8, !tbaa !1
  %16 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %15, i64 1
  store %struct.lua_TValue* %16, %struct.lua_TValue** %10, align 8, !tbaa !1
  ret void
}

; Function Attrs: nounwind uwtable
define void @lua_pushstring(%struct.lua_State* %L, i8* %s) #0 {
  %1 = icmp eq i8* %s, null
  br i1 %1, label %2, label %7

; <label>:2                                       ; preds = %0
  %3 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %4 = load %struct.lua_TValue*, %struct.lua_TValue** %3, align 8, !tbaa !1
  %5 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %4, i64 0, i32 1
  store i32 0, i32* %5, align 4, !tbaa !10
  %6 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %4, i64 1
  store %struct.lua_TValue* %6, %struct.lua_TValue** %3, align 8, !tbaa !1
  br label %24

; <label>:7                                       ; preds = %0
  %8 = tail call i64 @strlen(i8* %s) #11
  %9 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 6
  %10 = load %struct.global_State*, %struct.global_State** %9, align 8, !tbaa !17
  %11 = getelementptr inbounds %struct.global_State, %struct.global_State* %10, i64 0, i32 14
  %12 = load i64, i64* %11, align 8, !tbaa !23
  %13 = getelementptr inbounds %struct.global_State, %struct.global_State* %10, i64 0, i32 13
  %14 = load i64, i64* %13, align 8, !tbaa !24
  %15 = icmp ult i64 %12, %14
  br i1 %15, label %lua_pushlstring.exit, label %16

; <label>:16                                      ; preds = %7
  tail call void @luaC_step(%struct.lua_State* %L) #1
  br label %lua_pushlstring.exit

lua_pushlstring.exit:                             ; preds = %7, %16
  %17 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %18 = load %struct.lua_TValue*, %struct.lua_TValue** %17, align 8, !tbaa !1
  %19 = tail call %union.TString* @luaS_newlstr(%struct.lua_State* %L, i8* %s, i64 %8) #1
  %20 = bitcast %struct.lua_TValue* %18 to %union.TString**
  store %union.TString* %19, %union.TString** %20, align 8, !tbaa !25
  %21 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %18, i64 0, i32 1
  store i32 4, i32* %21, align 4, !tbaa !10
  %22 = load %struct.lua_TValue*, %struct.lua_TValue** %17, align 8, !tbaa !1
  %23 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %22, i64 1
  store %struct.lua_TValue* %23, %struct.lua_TValue** %17, align 8, !tbaa !1
  br label %24

; <label>:24                                      ; preds = %lua_pushlstring.exit, %2
  ret void
}

; Function Attrs: nounwind readonly
declare i64 @strlen(i8* nocapture) #4

; Function Attrs: nounwind uwtable
define i8* @lua_pushvfstring(%struct.lua_State* %L, i8* %fmt, %struct.__va_list_tag* %argp) #0 {
  %1 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 6
  %2 = load %struct.global_State*, %struct.global_State** %1, align 8, !tbaa !17
  %3 = getelementptr inbounds %struct.global_State, %struct.global_State* %2, i64 0, i32 14
  %4 = load i64, i64* %3, align 8, !tbaa !23
  %5 = getelementptr inbounds %struct.global_State, %struct.global_State* %2, i64 0, i32 13
  %6 = load i64, i64* %5, align 8, !tbaa !24
  %7 = icmp ult i64 %4, %6
  br i1 %7, label %9, label %8

; <label>:8                                       ; preds = %0
  tail call void @luaC_step(%struct.lua_State* %L) #1
  br label %9

; <label>:9                                       ; preds = %0, %8
  %10 = tail call i8* bitcast (i8* (%struct.lua_State.215*, i8*, %struct.__va_list_tag*)* @luaO_pushvfstring to i8* (%struct.lua_State*, i8*, %struct.__va_list_tag*)*)(%struct.lua_State* %L, i8* %fmt, %struct.__va_list_tag* %argp) #1
  ret i8* %10
}

; Function Attrs: nounwind uwtable
define i8* @lua_pushfstring(%struct.lua_State* %L, i8* %fmt, ...) #0 {
  %argp = alloca [1 x %struct.__va_list_tag], align 16
  %1 = bitcast [1 x %struct.__va_list_tag]* %argp to i8*
  call void @llvm.lifetime.start(i64 24, i8* %1) #1
  %2 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 6
  %3 = load %struct.global_State*, %struct.global_State** %2, align 8, !tbaa !17
  %4 = getelementptr inbounds %struct.global_State, %struct.global_State* %3, i64 0, i32 14
  %5 = load i64, i64* %4, align 8, !tbaa !23
  %6 = getelementptr inbounds %struct.global_State, %struct.global_State* %3, i64 0, i32 13
  %7 = load i64, i64* %6, align 8, !tbaa !24
  %8 = icmp ult i64 %5, %7
  br i1 %8, label %10, label %9

; <label>:9                                       ; preds = %0
  tail call void @luaC_step(%struct.lua_State* %L) #1
  br label %10

; <label>:10                                      ; preds = %0, %9
  %11 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %argp, i64 0, i64 0
  call void @llvm.va_start(i8* %1)
  %12 = call i8* bitcast (i8* (%struct.lua_State.215*, i8*, %struct.__va_list_tag*)* @luaO_pushvfstring to i8* (%struct.lua_State*, i8*, %struct.__va_list_tag*)*)(%struct.lua_State* %L, i8* %fmt, %struct.__va_list_tag* %11) #1
  call void @llvm.va_end(i8* %1)
  call void @llvm.lifetime.end(i64 24, i8* %1) #1
  ret i8* %12
}

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #1

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #1

; Function Attrs: nounwind uwtable
define void @lua_pushcclosure(%struct.lua_State* %L, i32 (%struct.lua_State*)* %fn, i32 %n) #0 {
  %1 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 6
  %2 = load %struct.global_State*, %struct.global_State** %1, align 8, !tbaa !17
  %3 = getelementptr inbounds %struct.global_State, %struct.global_State* %2, i64 0, i32 14
  %4 = load i64, i64* %3, align 8, !tbaa !23
  %5 = getelementptr inbounds %struct.global_State, %struct.global_State* %2, i64 0, i32 13
  %6 = load i64, i64* %5, align 8, !tbaa !24
  %7 = icmp ult i64 %4, %6
  br i1 %7, label %9, label %8

; <label>:8                                       ; preds = %0
  tail call void @luaC_step(%struct.lua_State* %L) #1
  br label %9

; <label>:9                                       ; preds = %0, %8
  %10 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 7
  %11 = load %struct.CallInfo*, %struct.CallInfo** %10, align 8, !tbaa !13
  %12 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 12
  %13 = load %struct.CallInfo*, %struct.CallInfo** %12, align 8, !tbaa !32
  %14 = icmp eq %struct.CallInfo* %11, %13
  br i1 %14, label %15, label %18

; <label>:15                                      ; preds = %9
  %16 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 22, i32 0, i32 0
  %17 = bitcast %union.GCObject** %16 to %struct.Table**
  br label %getcurrenv.exit

; <label>:18                                      ; preds = %9
  %19 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %11, i64 0, i32 1
  %20 = bitcast %struct.lua_TValue** %19 to %struct.CClosure***
  %21 = load %struct.CClosure**, %struct.CClosure*** %20, align 8, !tbaa !28
  %22 = load %struct.CClosure*, %struct.CClosure** %21, align 8, !tbaa !25
  %23 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %22, i64 0, i32 6
  br label %getcurrenv.exit

getcurrenv.exit:                                  ; preds = %15, %18
  %.0.in.i = phi %struct.Table** [ %17, %15 ], [ %23, %18 ]
  %.0.i = load %struct.Table*, %struct.Table** %.0.in.i, align 8
  %24 = tail call %union.Closure* bitcast (%union.Closure.118* (%struct.lua_State.115*, i32, %struct.Table.108*)* @luaF_newCclosure to %union.Closure* (%struct.lua_State*, i32, %struct.Table*)*)(%struct.lua_State* %L, i32 %n, %struct.Table* %.0.i) #1
  %25 = getelementptr inbounds %union.Closure, %union.Closure* %24, i64 0, i32 0, i32 7
  store i32 (%struct.lua_State*)* %fn, i32 (%struct.lua_State*)** %25, align 8, !tbaa !44
  %26 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %27 = load %struct.lua_TValue*, %struct.lua_TValue** %26, align 8, !tbaa !1
  %28 = sext i32 %n to i64
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %27, i64 %29
  store %struct.lua_TValue* %30, %struct.lua_TValue** %26, align 8, !tbaa !1
  %31 = icmp eq i32 %n, 0
  br i1 %31, label %._crit_edge, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %getcurrenv.exit
  %xtraiter = and i32 %n, 1
  %lcmp.mod = icmp eq i32 %xtraiter, 0
  br i1 %lcmp.mod, label %.lr.ph.preheader.split, label %.lr.ph.prol

.lr.ph.prol:                                      ; preds = %.lr.ph.preheader
  %32 = add nsw i32 %n, -1
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %30, i64 %33
  %35 = getelementptr inbounds %union.Closure, %union.Closure* %24, i64 0, i32 0, i32 8, i64 %33
  %36 = bitcast %struct.lua_TValue* %34 to i64*
  %37 = bitcast %struct.lua_TValue* %35 to i64*
  %38 = load i64, i64* %36, align 8
  store i64 %38, i64* %37, align 8
  %39 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %30, i64 %33, i32 1
  %40 = load i32, i32* %39, align 4, !tbaa !10
  %41 = getelementptr inbounds %union.Closure, %union.Closure* %24, i64 0, i32 0, i32 8, i64 %33, i32 1
  store i32 %40, i32* %41, align 4, !tbaa !10
  %42 = load %struct.lua_TValue*, %struct.lua_TValue** %26, align 8, !tbaa !1
  br label %.lr.ph.preheader.split

.lr.ph.preheader.split:                           ; preds = %.lr.ph.preheader, %.lr.ph.prol
  %.lcssa4.unr = phi %struct.lua_TValue* [ undef, %.lr.ph.preheader ], [ %42, %.lr.ph.prol ]
  %.unr = phi %struct.lua_TValue* [ %30, %.lr.ph.preheader ], [ %42, %.lr.ph.prol ]
  %.in.unr = phi i32 [ %n, %.lr.ph.preheader ], [ %32, %.lr.ph.prol ]
  %43 = icmp eq i32 %n, 1
  br i1 %43, label %._crit_edge.loopexit, label %.lr.ph.preheader.split.split

.lr.ph.preheader.split.split:                     ; preds = %.lr.ph.preheader.split
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph, %.lr.ph.preheader.split.split
  %44 = phi %struct.lua_TValue* [ %.unr, %.lr.ph.preheader.split.split ], [ %67, %.lr.ph ]
  %.in = phi i32 [ %.in.unr, %.lr.ph.preheader.split.split ], [ %56, %.lr.ph ]
  %45 = add nsw i32 %.in, -1
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %44, i64 %46
  %48 = getelementptr inbounds %union.Closure, %union.Closure* %24, i64 0, i32 0, i32 8, i64 %46
  %49 = bitcast %struct.lua_TValue* %47 to i64*
  %50 = bitcast %struct.lua_TValue* %48 to i64*
  %51 = load i64, i64* %49, align 8
  store i64 %51, i64* %50, align 8
  %52 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %44, i64 %46, i32 1
  %53 = load i32, i32* %52, align 4, !tbaa !10
  %54 = getelementptr inbounds %union.Closure, %union.Closure* %24, i64 0, i32 0, i32 8, i64 %46, i32 1
  store i32 %53, i32* %54, align 4, !tbaa !10
  %55 = load %struct.lua_TValue*, %struct.lua_TValue** %26, align 8, !tbaa !1
  %56 = add nsw i32 %.in, -2
  %57 = sext i32 %56 to i64
  %58 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %55, i64 %57
  %59 = getelementptr inbounds %union.Closure, %union.Closure* %24, i64 0, i32 0, i32 8, i64 %57
  %60 = bitcast %struct.lua_TValue* %58 to i64*
  %61 = bitcast %struct.lua_TValue* %59 to i64*
  %62 = load i64, i64* %60, align 8
  store i64 %62, i64* %61, align 8
  %63 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %55, i64 %57, i32 1
  %64 = load i32, i32* %63, align 4, !tbaa !10
  %65 = getelementptr inbounds %union.Closure, %union.Closure* %24, i64 0, i32 0, i32 8, i64 %57, i32 1
  store i32 %64, i32* %65, align 4, !tbaa !10
  %66 = icmp eq i32 %56, 0
  %67 = load %struct.lua_TValue*, %struct.lua_TValue** %26, align 8, !tbaa !1
  br i1 %66, label %._crit_edge.loopexit.unr-lcssa, label %.lr.ph

._crit_edge.loopexit.unr-lcssa:                   ; preds = %.lr.ph
  %.lcssa5 = phi %struct.lua_TValue* [ %67, %.lr.ph ]
  br label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %.lr.ph.preheader.split, %._crit_edge.loopexit.unr-lcssa
  %.lcssa4 = phi %struct.lua_TValue* [ %.lcssa4.unr, %.lr.ph.preheader.split ], [ %.lcssa5, %._crit_edge.loopexit.unr-lcssa ]
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %getcurrenv.exit
  %.lcssa = phi %struct.lua_TValue* [ %30, %getcurrenv.exit ], [ %.lcssa4, %._crit_edge.loopexit ]
  %68 = bitcast %struct.lua_TValue* %.lcssa to %union.Closure**
  store %union.Closure* %24, %union.Closure** %68, align 8, !tbaa !25
  %69 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %.lcssa, i64 0, i32 1
  store i32 6, i32* %69, align 4, !tbaa !10
  %70 = load %struct.lua_TValue*, %struct.lua_TValue** %26, align 8, !tbaa !1
  %71 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %70, i64 1
  store %struct.lua_TValue* %71, %struct.lua_TValue** %26, align 8, !tbaa !1
  ret void
}

; Function Attrs: nounwind uwtable
define void @lua_pushboolean(%struct.lua_State* nocapture %L, i32 %b) #0 {
  %1 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %2 = load %struct.lua_TValue*, %struct.lua_TValue** %1, align 8, !tbaa !1
  %3 = icmp ne i32 %b, 0
  %4 = zext i1 %3 to i32
  %5 = bitcast %struct.lua_TValue* %2 to i32*
  store i32 %4, i32* %5, align 4, !tbaa !38
  %6 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %2, i64 0, i32 1
  store i32 1, i32* %6, align 4, !tbaa !10
  %7 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %2, i64 1
  store %struct.lua_TValue* %7, %struct.lua_TValue** %1, align 8, !tbaa !1
  ret void
}

; Function Attrs: nounwind uwtable
define void @lua_pushlightuserdata(%struct.lua_State* nocapture %L, i8* %p) #0 {
  %1 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %2 = load %struct.lua_TValue*, %struct.lua_TValue** %1, align 8, !tbaa !1
  %3 = bitcast %struct.lua_TValue* %2 to i8**
  store i8* %p, i8** %3, align 8, !tbaa !25
  %4 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %2, i64 0, i32 1
  store i32 2, i32* %4, align 4, !tbaa !10
  %5 = load %struct.lua_TValue*, %struct.lua_TValue** %1, align 8, !tbaa !1
  %6 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %5, i64 1
  store %struct.lua_TValue* %6, %struct.lua_TValue** %1, align 8, !tbaa !1
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @lua_pushthread(%struct.lua_State* %L) #0 {
  %1 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %2 = load %struct.lua_TValue*, %struct.lua_TValue** %1, align 8, !tbaa !1
  %3 = bitcast %struct.lua_TValue* %2 to %struct.lua_State**
  store %struct.lua_State* %L, %struct.lua_State** %3, align 8, !tbaa !25
  %4 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %2, i64 0, i32 1
  store i32 8, i32* %4, align 4, !tbaa !10
  %5 = load %struct.lua_TValue*, %struct.lua_TValue** %1, align 8, !tbaa !1
  %6 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %5, i64 1
  store %struct.lua_TValue* %6, %struct.lua_TValue** %1, align 8, !tbaa !1
  %7 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 6
  %8 = load %struct.global_State*, %struct.global_State** %7, align 8, !tbaa !17
  %9 = getelementptr inbounds %struct.global_State, %struct.global_State* %8, i64 0, i32 21
  %10 = load %struct.lua_State*, %struct.lua_State** %9, align 8, !tbaa !45
  %11 = icmp eq %struct.lua_State* %10, %L
  %12 = zext i1 %11 to i32
  ret i32 %12
}

; Function Attrs: nounwind uwtable
define void @lua_gettable(%struct.lua_State* %L, i32 %idx) #0 {
  %1 = icmp sgt i32 %idx, 0
  br i1 %1, label %2, label %11

; <label>:2                                       ; preds = %0
  %3 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 5
  %4 = load %struct.lua_TValue*, %struct.lua_TValue** %3, align 8, !tbaa !11
  %5 = add nsw i32 %idx, -1
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %4, i64 %6
  %8 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %9 = load %struct.lua_TValue*, %struct.lua_TValue** %8, align 8, !tbaa !1
  %10 = icmp ult %struct.lua_TValue* %7, %9
  %.luaO_nilobject_.i = select i1 %10, %struct.lua_TValue* %7, %struct.lua_TValue* bitcast (%struct.lua_TValue.218* @luaO_nilobject_ to %struct.lua_TValue*)
  br label %index2adr.exit

; <label>:11                                      ; preds = %0
  %12 = icmp sgt i32 %idx, -10000
  br i1 %12, label %13, label %18

; <label>:13                                      ; preds = %11
  %14 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %15 = load %struct.lua_TValue*, %struct.lua_TValue** %14, align 8, !tbaa !1
  %16 = sext i32 %idx to i64
  %17 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %15, i64 %16
  br label %index2adr.exit

; <label>:18                                      ; preds = %11
  switch i32 %idx, label %38 [
    i32 -10000, label %19
    i32 -10001, label %23
    i32 -10002, label %36
  ]

; <label>:19                                      ; preds = %18
  %20 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 6
  %21 = load %struct.global_State*, %struct.global_State** %20, align 8, !tbaa !17
  %22 = getelementptr inbounds %struct.global_State, %struct.global_State* %21, i64 0, i32 20
  br label %index2adr.exit

; <label>:23                                      ; preds = %18
  %24 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 7
  %25 = load %struct.CallInfo*, %struct.CallInfo** %24, align 8, !tbaa !13
  %26 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %25, i64 0, i32 1
  %27 = bitcast %struct.lua_TValue** %26 to %struct.CClosure***
  %28 = load %struct.CClosure**, %struct.CClosure*** %27, align 8, !tbaa !28
  %29 = load %struct.CClosure*, %struct.CClosure** %28, align 8, !tbaa !25
  %30 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 23
  %31 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %29, i64 0, i32 6
  %32 = bitcast %struct.Table** %31 to i64*
  %33 = load i64, i64* %32, align 8, !tbaa !29
  %34 = bitcast %struct.lua_TValue* %30 to i64*
  store i64 %33, i64* %34, align 8, !tbaa !25
  %35 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 23, i32 1
  store i32 5, i32* %35, align 4, !tbaa !10
  br label %index2adr.exit

; <label>:36                                      ; preds = %18
  %37 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 22
  br label %index2adr.exit

; <label>:38                                      ; preds = %18
  %39 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 7
  %40 = load %struct.CallInfo*, %struct.CallInfo** %39, align 8, !tbaa !13
  %41 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %40, i64 0, i32 1
  %42 = bitcast %struct.lua_TValue** %41 to %struct.CClosure***
  %43 = load %struct.CClosure**, %struct.CClosure*** %42, align 8, !tbaa !28
  %44 = load %struct.CClosure*, %struct.CClosure** %43, align 8, !tbaa !25
  %45 = sub nsw i32 -10002, %idx
  %46 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %44, i64 0, i32 4
  %47 = load i8, i8* %46, align 1, !tbaa !31
  %48 = zext i8 %47 to i32
  %49 = icmp sgt i32 %45, %48
  br i1 %49, label %index2adr.exit, label %50

; <label>:50                                      ; preds = %38
  %51 = add nsw i32 %45, -1
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %44, i64 0, i32 8, i64 %52
  br label %index2adr.exit

index2adr.exit:                                   ; preds = %2, %13, %19, %23, %36, %38, %50
  %.1.i = phi %struct.lua_TValue* [ %.luaO_nilobject_.i, %2 ], [ %17, %13 ], [ %37, %36 ], [ %30, %23 ], [ %22, %19 ], [ %53, %50 ], [ bitcast (%struct.lua_TValue.218* @luaO_nilobject_ to %struct.lua_TValue*), %38 ]
  %54 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %55 = load %struct.lua_TValue*, %struct.lua_TValue** %54, align 8, !tbaa !1
  %56 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %55, i64 -1
  tail call void bitcast (void (%struct.lua_State.215*, %struct.lua_TValue.218*, %struct.lua_TValue.218*, %struct.lua_TValue.218*)* @luaV_gettable to void (%struct.lua_State*, %struct.lua_TValue*, %struct.lua_TValue*, %struct.lua_TValue*)*)(%struct.lua_State* %L, %struct.lua_TValue* %.1.i, %struct.lua_TValue* %56, %struct.lua_TValue* %56) #1
  ret void
}

; Function Attrs: nounwind uwtable
define void @lua_getfield(%struct.lua_State* %L, i32 %idx, i8* %k) #0 {
  %key = alloca %struct.lua_TValue, align 8
  %1 = bitcast %struct.lua_TValue* %key to i8*
  call void @llvm.lifetime.start(i64 16, i8* %1) #1
  %2 = icmp sgt i32 %idx, 0
  br i1 %2, label %3, label %12

; <label>:3                                       ; preds = %0
  %4 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 5
  %5 = load %struct.lua_TValue*, %struct.lua_TValue** %4, align 8, !tbaa !11
  %6 = add nsw i32 %idx, -1
  %7 = sext i32 %6 to i64
  %8 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %5, i64 %7
  %9 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %10 = load %struct.lua_TValue*, %struct.lua_TValue** %9, align 8, !tbaa !1
  %11 = icmp ult %struct.lua_TValue* %8, %10
  %.luaO_nilobject_.i = select i1 %11, %struct.lua_TValue* %8, %struct.lua_TValue* bitcast (%struct.lua_TValue.218* @luaO_nilobject_ to %struct.lua_TValue*)
  br label %index2adr.exit

; <label>:12                                      ; preds = %0
  %13 = icmp sgt i32 %idx, -10000
  br i1 %13, label %14, label %19

; <label>:14                                      ; preds = %12
  %15 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %16 = load %struct.lua_TValue*, %struct.lua_TValue** %15, align 8, !tbaa !1
  %17 = sext i32 %idx to i64
  %18 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %16, i64 %17
  br label %index2adr.exit

; <label>:19                                      ; preds = %12
  switch i32 %idx, label %39 [
    i32 -10000, label %20
    i32 -10001, label %24
    i32 -10002, label %37
  ]

; <label>:20                                      ; preds = %19
  %21 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 6
  %22 = load %struct.global_State*, %struct.global_State** %21, align 8, !tbaa !17
  %23 = getelementptr inbounds %struct.global_State, %struct.global_State* %22, i64 0, i32 20
  br label %index2adr.exit

; <label>:24                                      ; preds = %19
  %25 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 7
  %26 = load %struct.CallInfo*, %struct.CallInfo** %25, align 8, !tbaa !13
  %27 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %26, i64 0, i32 1
  %28 = bitcast %struct.lua_TValue** %27 to %struct.CClosure***
  %29 = load %struct.CClosure**, %struct.CClosure*** %28, align 8, !tbaa !28
  %30 = load %struct.CClosure*, %struct.CClosure** %29, align 8, !tbaa !25
  %31 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 23
  %32 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %30, i64 0, i32 6
  %33 = bitcast %struct.Table** %32 to i64*
  %34 = load i64, i64* %33, align 8, !tbaa !29
  %35 = bitcast %struct.lua_TValue* %31 to i64*
  store i64 %34, i64* %35, align 8, !tbaa !25
  %36 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 23, i32 1
  store i32 5, i32* %36, align 4, !tbaa !10
  br label %index2adr.exit

; <label>:37                                      ; preds = %19
  %38 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 22
  br label %index2adr.exit

; <label>:39                                      ; preds = %19
  %40 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 7
  %41 = load %struct.CallInfo*, %struct.CallInfo** %40, align 8, !tbaa !13
  %42 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %41, i64 0, i32 1
  %43 = bitcast %struct.lua_TValue** %42 to %struct.CClosure***
  %44 = load %struct.CClosure**, %struct.CClosure*** %43, align 8, !tbaa !28
  %45 = load %struct.CClosure*, %struct.CClosure** %44, align 8, !tbaa !25
  %46 = sub nsw i32 -10002, %idx
  %47 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %45, i64 0, i32 4
  %48 = load i8, i8* %47, align 1, !tbaa !31
  %49 = zext i8 %48 to i32
  %50 = icmp sgt i32 %46, %49
  br i1 %50, label %index2adr.exit, label %51

; <label>:51                                      ; preds = %39
  %52 = add nsw i32 %46, -1
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %45, i64 0, i32 8, i64 %53
  br label %index2adr.exit

index2adr.exit:                                   ; preds = %3, %14, %20, %24, %37, %39, %51
  %.1.i = phi %struct.lua_TValue* [ %.luaO_nilobject_.i, %3 ], [ %18, %14 ], [ %38, %37 ], [ %31, %24 ], [ %23, %20 ], [ %54, %51 ], [ bitcast (%struct.lua_TValue.218* @luaO_nilobject_ to %struct.lua_TValue*), %39 ]
  %55 = tail call i64 @strlen(i8* %k) #11
  %56 = tail call %union.TString* @luaS_newlstr(%struct.lua_State* %L, i8* %k, i64 %55) #1
  %57 = bitcast %struct.lua_TValue* %key to %union.TString**
  store %union.TString* %56, %union.TString** %57, align 8, !tbaa !25
  %58 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %key, i64 0, i32 1
  store i32 4, i32* %58, align 8, !tbaa !10
  %59 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %60 = load %struct.lua_TValue*, %struct.lua_TValue** %59, align 8, !tbaa !1
  call void bitcast (void (%struct.lua_State.215*, %struct.lua_TValue.218*, %struct.lua_TValue.218*, %struct.lua_TValue.218*)* @luaV_gettable to void (%struct.lua_State*, %struct.lua_TValue*, %struct.lua_TValue*, %struct.lua_TValue*)*)(%struct.lua_State* %L, %struct.lua_TValue* %.1.i, %struct.lua_TValue* nonnull %key, %struct.lua_TValue* %60) #1
  %61 = load %struct.lua_TValue*, %struct.lua_TValue** %59, align 8, !tbaa !1
  %62 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %61, i64 1
  store %struct.lua_TValue* %62, %struct.lua_TValue** %59, align 8, !tbaa !1
  call void @llvm.lifetime.end(i64 16, i8* %1) #1
  ret void
}

; Function Attrs: nounwind uwtable
define void @lua_rawget(%struct.lua_State* nocapture %L, i32 %idx) #0 {
  %1 = icmp sgt i32 %idx, 0
  br i1 %1, label %2, label %11

; <label>:2                                       ; preds = %0
  %3 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 5
  %4 = load %struct.lua_TValue*, %struct.lua_TValue** %3, align 8, !tbaa !11
  %5 = add nsw i32 %idx, -1
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %4, i64 %6
  %8 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %9 = load %struct.lua_TValue*, %struct.lua_TValue** %8, align 8, !tbaa !1
  %10 = icmp ult %struct.lua_TValue* %7, %9
  %.luaO_nilobject_.i = select i1 %10, %struct.lua_TValue* %7, %struct.lua_TValue* bitcast (%struct.lua_TValue.218* @luaO_nilobject_ to %struct.lua_TValue*)
  br label %index2adr.exit

; <label>:11                                      ; preds = %0
  %12 = icmp sgt i32 %idx, -10000
  br i1 %12, label %13, label %18

; <label>:13                                      ; preds = %11
  %14 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %15 = load %struct.lua_TValue*, %struct.lua_TValue** %14, align 8, !tbaa !1
  %16 = sext i32 %idx to i64
  %17 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %15, i64 %16
  br label %index2adr.exit

; <label>:18                                      ; preds = %11
  switch i32 %idx, label %38 [
    i32 -10000, label %19
    i32 -10001, label %23
    i32 -10002, label %36
  ]

; <label>:19                                      ; preds = %18
  %20 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 6
  %21 = load %struct.global_State*, %struct.global_State** %20, align 8, !tbaa !17
  %22 = getelementptr inbounds %struct.global_State, %struct.global_State* %21, i64 0, i32 20
  br label %index2adr.exit

; <label>:23                                      ; preds = %18
  %24 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 7
  %25 = load %struct.CallInfo*, %struct.CallInfo** %24, align 8, !tbaa !13
  %26 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %25, i64 0, i32 1
  %27 = bitcast %struct.lua_TValue** %26 to %struct.CClosure***
  %28 = load %struct.CClosure**, %struct.CClosure*** %27, align 8, !tbaa !28
  %29 = load %struct.CClosure*, %struct.CClosure** %28, align 8, !tbaa !25
  %30 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 23
  %31 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %29, i64 0, i32 6
  %32 = bitcast %struct.Table** %31 to i64*
  %33 = load i64, i64* %32, align 8, !tbaa !29
  %34 = bitcast %struct.lua_TValue* %30 to i64*
  store i64 %33, i64* %34, align 8, !tbaa !25
  %35 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 23, i32 1
  store i32 5, i32* %35, align 4, !tbaa !10
  br label %index2adr.exit

; <label>:36                                      ; preds = %18
  %37 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 22
  br label %index2adr.exit

; <label>:38                                      ; preds = %18
  %39 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 7
  %40 = load %struct.CallInfo*, %struct.CallInfo** %39, align 8, !tbaa !13
  %41 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %40, i64 0, i32 1
  %42 = bitcast %struct.lua_TValue** %41 to %struct.CClosure***
  %43 = load %struct.CClosure**, %struct.CClosure*** %42, align 8, !tbaa !28
  %44 = load %struct.CClosure*, %struct.CClosure** %43, align 8, !tbaa !25
  %45 = sub nsw i32 -10002, %idx
  %46 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %44, i64 0, i32 4
  %47 = load i8, i8* %46, align 1, !tbaa !31
  %48 = zext i8 %47 to i32
  %49 = icmp sgt i32 %45, %48
  br i1 %49, label %index2adr.exit, label %50

; <label>:50                                      ; preds = %38
  %51 = add nsw i32 %45, -1
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %44, i64 0, i32 8, i64 %52
  br label %index2adr.exit

index2adr.exit:                                   ; preds = %2, %13, %19, %23, %36, %38, %50
  %.1.i = phi %struct.lua_TValue* [ %.luaO_nilobject_.i, %2 ], [ %17, %13 ], [ %37, %36 ], [ %30, %23 ], [ %22, %19 ], [ %53, %50 ], [ bitcast (%struct.lua_TValue.218* @luaO_nilobject_ to %struct.lua_TValue*), %38 ]
  %54 = bitcast %struct.lua_TValue* %.1.i to %struct.Table**
  %55 = load %struct.Table*, %struct.Table** %54, align 8, !tbaa !25
  %56 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %57 = load %struct.lua_TValue*, %struct.lua_TValue** %56, align 8, !tbaa !1
  %58 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %57, i64 -1
  %59 = tail call %struct.lua_TValue* @luaH_get(%struct.Table* %55, %struct.lua_TValue* %58) #1
  %60 = load %struct.lua_TValue*, %struct.lua_TValue** %56, align 8, !tbaa !1
  %61 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %60, i64 -1
  %62 = bitcast %struct.lua_TValue* %59 to i64*
  %63 = bitcast %struct.lua_TValue* %61 to i64*
  %64 = load i64, i64* %62, align 8
  store i64 %64, i64* %63, align 8
  %65 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %59, i64 0, i32 1
  %66 = load i32, i32* %65, align 4, !tbaa !10
  %67 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %60, i64 -1, i32 1
  store i32 %66, i32* %67, align 4, !tbaa !10
  ret void
}

; Function Attrs: nounwind uwtable
define void @lua_rawgeti(%struct.lua_State* nocapture %L, i32 %idx, i32 %n) #0 {
  %1 = icmp sgt i32 %idx, 0
  br i1 %1, label %2, label %11

; <label>:2                                       ; preds = %0
  %3 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 5
  %4 = load %struct.lua_TValue*, %struct.lua_TValue** %3, align 8, !tbaa !11
  %5 = add nsw i32 %idx, -1
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %4, i64 %6
  %8 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %9 = load %struct.lua_TValue*, %struct.lua_TValue** %8, align 8, !tbaa !1
  %10 = icmp ult %struct.lua_TValue* %7, %9
  %.luaO_nilobject_.i = select i1 %10, %struct.lua_TValue* %7, %struct.lua_TValue* bitcast (%struct.lua_TValue.218* @luaO_nilobject_ to %struct.lua_TValue*)
  br label %index2adr.exit

; <label>:11                                      ; preds = %0
  %12 = icmp sgt i32 %idx, -10000
  br i1 %12, label %13, label %18

; <label>:13                                      ; preds = %11
  %14 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %15 = load %struct.lua_TValue*, %struct.lua_TValue** %14, align 8, !tbaa !1
  %16 = sext i32 %idx to i64
  %17 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %15, i64 %16
  br label %index2adr.exit

; <label>:18                                      ; preds = %11
  switch i32 %idx, label %38 [
    i32 -10000, label %19
    i32 -10001, label %23
    i32 -10002, label %36
  ]

; <label>:19                                      ; preds = %18
  %20 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 6
  %21 = load %struct.global_State*, %struct.global_State** %20, align 8, !tbaa !17
  %22 = getelementptr inbounds %struct.global_State, %struct.global_State* %21, i64 0, i32 20
  br label %index2adr.exit

; <label>:23                                      ; preds = %18
  %24 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 7
  %25 = load %struct.CallInfo*, %struct.CallInfo** %24, align 8, !tbaa !13
  %26 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %25, i64 0, i32 1
  %27 = bitcast %struct.lua_TValue** %26 to %struct.CClosure***
  %28 = load %struct.CClosure**, %struct.CClosure*** %27, align 8, !tbaa !28
  %29 = load %struct.CClosure*, %struct.CClosure** %28, align 8, !tbaa !25
  %30 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 23
  %31 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %29, i64 0, i32 6
  %32 = bitcast %struct.Table** %31 to i64*
  %33 = load i64, i64* %32, align 8, !tbaa !29
  %34 = bitcast %struct.lua_TValue* %30 to i64*
  store i64 %33, i64* %34, align 8, !tbaa !25
  %35 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 23, i32 1
  store i32 5, i32* %35, align 4, !tbaa !10
  br label %index2adr.exit

; <label>:36                                      ; preds = %18
  %37 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 22
  br label %index2adr.exit

; <label>:38                                      ; preds = %18
  %39 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 7
  %40 = load %struct.CallInfo*, %struct.CallInfo** %39, align 8, !tbaa !13
  %41 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %40, i64 0, i32 1
  %42 = bitcast %struct.lua_TValue** %41 to %struct.CClosure***
  %43 = load %struct.CClosure**, %struct.CClosure*** %42, align 8, !tbaa !28
  %44 = load %struct.CClosure*, %struct.CClosure** %43, align 8, !tbaa !25
  %45 = sub nsw i32 -10002, %idx
  %46 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %44, i64 0, i32 4
  %47 = load i8, i8* %46, align 1, !tbaa !31
  %48 = zext i8 %47 to i32
  %49 = icmp sgt i32 %45, %48
  br i1 %49, label %index2adr.exit, label %50

; <label>:50                                      ; preds = %38
  %51 = add nsw i32 %45, -1
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %44, i64 0, i32 8, i64 %52
  br label %index2adr.exit

index2adr.exit:                                   ; preds = %2, %13, %19, %23, %36, %38, %50
  %.1.i = phi %struct.lua_TValue* [ %.luaO_nilobject_.i, %2 ], [ %17, %13 ], [ %37, %36 ], [ %30, %23 ], [ %22, %19 ], [ %53, %50 ], [ bitcast (%struct.lua_TValue.218* @luaO_nilobject_ to %struct.lua_TValue*), %38 ]
  %54 = bitcast %struct.lua_TValue* %.1.i to %struct.Table**
  %55 = load %struct.Table*, %struct.Table** %54, align 8, !tbaa !25
  %56 = tail call %struct.lua_TValue* @luaH_getnum(%struct.Table* %55, i32 %n) #1
  %57 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %58 = load %struct.lua_TValue*, %struct.lua_TValue** %57, align 8, !tbaa !1
  %59 = bitcast %struct.lua_TValue* %56 to i64*
  %60 = bitcast %struct.lua_TValue* %58 to i64*
  %61 = load i64, i64* %59, align 8
  store i64 %61, i64* %60, align 8
  %62 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %56, i64 0, i32 1
  %63 = load i32, i32* %62, align 4, !tbaa !10
  %64 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %58, i64 0, i32 1
  store i32 %63, i32* %64, align 4, !tbaa !10
  %65 = load %struct.lua_TValue*, %struct.lua_TValue** %57, align 8, !tbaa !1
  %66 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %65, i64 1
  store %struct.lua_TValue* %66, %struct.lua_TValue** %57, align 8, !tbaa !1
  ret void
}

; Function Attrs: nounwind uwtable
define void @lua_createtable(%struct.lua_State* %L, i32 %narray, i32 %nrec) #0 {
  %1 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 6
  %2 = load %struct.global_State*, %struct.global_State** %1, align 8, !tbaa !17
  %3 = getelementptr inbounds %struct.global_State, %struct.global_State* %2, i64 0, i32 14
  %4 = load i64, i64* %3, align 8, !tbaa !23
  %5 = getelementptr inbounds %struct.global_State, %struct.global_State* %2, i64 0, i32 13
  %6 = load i64, i64* %5, align 8, !tbaa !24
  %7 = icmp ult i64 %4, %6
  br i1 %7, label %9, label %8

; <label>:8                                       ; preds = %0
  tail call void @luaC_step(%struct.lua_State* %L) #1
  br label %9

; <label>:9                                       ; preds = %0, %8
  %10 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %11 = load %struct.lua_TValue*, %struct.lua_TValue** %10, align 8, !tbaa !1
  %12 = tail call %struct.Table* @luaH_new(%struct.lua_State* %L, i32 %narray, i32 %nrec) #1
  %13 = bitcast %struct.lua_TValue* %11 to %struct.Table**
  store %struct.Table* %12, %struct.Table** %13, align 8, !tbaa !25
  %14 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %11, i64 0, i32 1
  store i32 5, i32* %14, align 4, !tbaa !10
  %15 = load %struct.lua_TValue*, %struct.lua_TValue** %10, align 8, !tbaa !1
  %16 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %15, i64 1
  store %struct.lua_TValue* %16, %struct.lua_TValue** %10, align 8, !tbaa !1
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @lua_getmetatable(%struct.lua_State* nocapture %L, i32 %objindex) #0 {
  %1 = icmp sgt i32 %objindex, 0
  br i1 %1, label %2, label %11

; <label>:2                                       ; preds = %0
  %3 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 5
  %4 = load %struct.lua_TValue*, %struct.lua_TValue** %3, align 8, !tbaa !11
  %5 = add nsw i32 %objindex, -1
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %4, i64 %6
  %8 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %9 = load %struct.lua_TValue*, %struct.lua_TValue** %8, align 8, !tbaa !1
  %10 = icmp ult %struct.lua_TValue* %7, %9
  %.luaO_nilobject_.i = select i1 %10, %struct.lua_TValue* %7, %struct.lua_TValue* bitcast (%struct.lua_TValue.218* @luaO_nilobject_ to %struct.lua_TValue*)
  br label %index2adr.exit

; <label>:11                                      ; preds = %0
  %12 = icmp sgt i32 %objindex, -10000
  br i1 %12, label %13, label %18

; <label>:13                                      ; preds = %11
  %14 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %15 = load %struct.lua_TValue*, %struct.lua_TValue** %14, align 8, !tbaa !1
  %16 = sext i32 %objindex to i64
  %17 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %15, i64 %16
  br label %index2adr.exit

; <label>:18                                      ; preds = %11
  switch i32 %objindex, label %38 [
    i32 -10000, label %19
    i32 -10001, label %23
    i32 -10002, label %36
  ]

; <label>:19                                      ; preds = %18
  %20 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 6
  %21 = load %struct.global_State*, %struct.global_State** %20, align 8, !tbaa !17
  %22 = getelementptr inbounds %struct.global_State, %struct.global_State* %21, i64 0, i32 20
  br label %index2adr.exit

; <label>:23                                      ; preds = %18
  %24 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 7
  %25 = load %struct.CallInfo*, %struct.CallInfo** %24, align 8, !tbaa !13
  %26 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %25, i64 0, i32 1
  %27 = bitcast %struct.lua_TValue** %26 to %struct.CClosure***
  %28 = load %struct.CClosure**, %struct.CClosure*** %27, align 8, !tbaa !28
  %29 = load %struct.CClosure*, %struct.CClosure** %28, align 8, !tbaa !25
  %30 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 23
  %31 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %29, i64 0, i32 6
  %32 = bitcast %struct.Table** %31 to i64*
  %33 = load i64, i64* %32, align 8, !tbaa !29
  %34 = bitcast %struct.lua_TValue* %30 to i64*
  store i64 %33, i64* %34, align 8, !tbaa !25
  %35 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 23, i32 1
  store i32 5, i32* %35, align 4, !tbaa !10
  br label %index2adr.exit

; <label>:36                                      ; preds = %18
  %37 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 22
  br label %index2adr.exit

; <label>:38                                      ; preds = %18
  %39 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 7
  %40 = load %struct.CallInfo*, %struct.CallInfo** %39, align 8, !tbaa !13
  %41 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %40, i64 0, i32 1
  %42 = bitcast %struct.lua_TValue** %41 to %struct.CClosure***
  %43 = load %struct.CClosure**, %struct.CClosure*** %42, align 8, !tbaa !28
  %44 = load %struct.CClosure*, %struct.CClosure** %43, align 8, !tbaa !25
  %45 = sub nsw i32 -10002, %objindex
  %46 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %44, i64 0, i32 4
  %47 = load i8, i8* %46, align 1, !tbaa !31
  %48 = zext i8 %47 to i32
  %49 = icmp sgt i32 %45, %48
  br i1 %49, label %index2adr.exit, label %50

; <label>:50                                      ; preds = %38
  %51 = add nsw i32 %45, -1
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %44, i64 0, i32 8, i64 %52
  br label %index2adr.exit

index2adr.exit:                                   ; preds = %2, %13, %19, %23, %36, %38, %50
  %.1.i = phi %struct.lua_TValue* [ %.luaO_nilobject_.i, %2 ], [ %17, %13 ], [ %37, %36 ], [ %30, %23 ], [ %22, %19 ], [ %53, %50 ], [ bitcast (%struct.lua_TValue.218* @luaO_nilobject_ to %struct.lua_TValue*), %38 ]
  %54 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %.1.i, i64 0, i32 1
  %55 = load i32, i32* %54, align 4, !tbaa !10
  switch i32 %55, label %64 [
    i32 5, label %56
    i32 7, label %60
  ]

; <label>:56                                      ; preds = %index2adr.exit
  %57 = bitcast %struct.lua_TValue* %.1.i to %struct.Table**
  %58 = load %struct.Table*, %struct.Table** %57, align 8, !tbaa !25
  %59 = getelementptr inbounds %struct.Table, %struct.Table* %58, i64 0, i32 5
  br label %69

; <label>:60                                      ; preds = %index2adr.exit
  %61 = bitcast %struct.lua_TValue* %.1.i to %struct.anon.2**
  %62 = load %struct.anon.2*, %struct.anon.2** %61, align 8, !tbaa !25
  %63 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %62, i64 0, i32 3
  br label %69

; <label>:64                                      ; preds = %index2adr.exit
  %65 = sext i32 %55 to i64
  %66 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 6
  %67 = load %struct.global_State*, %struct.global_State** %66, align 8, !tbaa !17
  %68 = getelementptr inbounds %struct.global_State, %struct.global_State* %67, i64 0, i32 23, i64 %65
  br label %69

; <label>:69                                      ; preds = %64, %60, %56
  %mt.0.in = phi %struct.Table** [ %68, %64 ], [ %63, %60 ], [ %59, %56 ]
  %mt.0 = load %struct.Table*, %struct.Table** %mt.0.in, align 8
  %70 = icmp eq %struct.Table* %mt.0, null
  br i1 %70, label %78, label %71

; <label>:71                                      ; preds = %69
  %72 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %73 = load %struct.lua_TValue*, %struct.lua_TValue** %72, align 8, !tbaa !1
  %74 = bitcast %struct.lua_TValue* %73 to %struct.Table**
  store %struct.Table* %mt.0, %struct.Table** %74, align 8, !tbaa !25
  %75 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %73, i64 0, i32 1
  store i32 5, i32* %75, align 4, !tbaa !10
  %76 = load %struct.lua_TValue*, %struct.lua_TValue** %72, align 8, !tbaa !1
  %77 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %76, i64 1
  store %struct.lua_TValue* %77, %struct.lua_TValue** %72, align 8, !tbaa !1
  br label %78

; <label>:78                                      ; preds = %69, %71
  %res.0 = phi i32 [ 1, %71 ], [ 0, %69 ]
  ret i32 %res.0
}

; Function Attrs: nounwind uwtable
define void @lua_getfenv(%struct.lua_State* nocapture %L, i32 %idx) #0 {
  %1 = icmp sgt i32 %idx, 0
  br i1 %1, label %2, label %11

; <label>:2                                       ; preds = %0
  %3 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 5
  %4 = load %struct.lua_TValue*, %struct.lua_TValue** %3, align 8, !tbaa !11
  %5 = add nsw i32 %idx, -1
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %4, i64 %6
  %8 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %9 = load %struct.lua_TValue*, %struct.lua_TValue** %8, align 8, !tbaa !1
  %10 = icmp ult %struct.lua_TValue* %7, %9
  %.luaO_nilobject_.i = select i1 %10, %struct.lua_TValue* %7, %struct.lua_TValue* bitcast (%struct.lua_TValue.218* @luaO_nilobject_ to %struct.lua_TValue*)
  br label %index2adr.exit

; <label>:11                                      ; preds = %0
  %12 = icmp sgt i32 %idx, -10000
  br i1 %12, label %13, label %18

; <label>:13                                      ; preds = %11
  %14 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %15 = load %struct.lua_TValue*, %struct.lua_TValue** %14, align 8, !tbaa !1
  %16 = sext i32 %idx to i64
  %17 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %15, i64 %16
  br label %index2adr.exit

; <label>:18                                      ; preds = %11
  switch i32 %idx, label %38 [
    i32 -10000, label %19
    i32 -10001, label %23
    i32 -10002, label %36
  ]

; <label>:19                                      ; preds = %18
  %20 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 6
  %21 = load %struct.global_State*, %struct.global_State** %20, align 8, !tbaa !17
  %22 = getelementptr inbounds %struct.global_State, %struct.global_State* %21, i64 0, i32 20
  br label %index2adr.exit

; <label>:23                                      ; preds = %18
  %24 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 7
  %25 = load %struct.CallInfo*, %struct.CallInfo** %24, align 8, !tbaa !13
  %26 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %25, i64 0, i32 1
  %27 = bitcast %struct.lua_TValue** %26 to %struct.CClosure***
  %28 = load %struct.CClosure**, %struct.CClosure*** %27, align 8, !tbaa !28
  %29 = load %struct.CClosure*, %struct.CClosure** %28, align 8, !tbaa !25
  %30 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 23
  %31 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %29, i64 0, i32 6
  %32 = bitcast %struct.Table** %31 to i64*
  %33 = load i64, i64* %32, align 8, !tbaa !29
  %34 = bitcast %struct.lua_TValue* %30 to i64*
  store i64 %33, i64* %34, align 8, !tbaa !25
  %35 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 23, i32 1
  store i32 5, i32* %35, align 4, !tbaa !10
  br label %index2adr.exit

; <label>:36                                      ; preds = %18
  %37 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 22
  br label %index2adr.exit

; <label>:38                                      ; preds = %18
  %39 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 7
  %40 = load %struct.CallInfo*, %struct.CallInfo** %39, align 8, !tbaa !13
  %41 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %40, i64 0, i32 1
  %42 = bitcast %struct.lua_TValue** %41 to %struct.CClosure***
  %43 = load %struct.CClosure**, %struct.CClosure*** %42, align 8, !tbaa !28
  %44 = load %struct.CClosure*, %struct.CClosure** %43, align 8, !tbaa !25
  %45 = sub nsw i32 -10002, %idx
  %46 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %44, i64 0, i32 4
  %47 = load i8, i8* %46, align 1, !tbaa !31
  %48 = zext i8 %47 to i32
  %49 = icmp sgt i32 %45, %48
  br i1 %49, label %index2adr.exit, label %50

; <label>:50                                      ; preds = %38
  %51 = add nsw i32 %45, -1
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %44, i64 0, i32 8, i64 %52
  br label %index2adr.exit

index2adr.exit:                                   ; preds = %2, %13, %19, %23, %36, %38, %50
  %.1.i = phi %struct.lua_TValue* [ %.luaO_nilobject_.i, %2 ], [ %17, %13 ], [ %37, %36 ], [ %30, %23 ], [ %22, %19 ], [ %53, %50 ], [ bitcast (%struct.lua_TValue.218* @luaO_nilobject_ to %struct.lua_TValue*), %38 ]
  %54 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %.1.i, i64 0, i32 1
  %55 = load i32, i32* %54, align 4, !tbaa !10
  switch i32 %55, label %88 [
    i32 6, label %56
    i32 7, label %66
    i32 8, label %76
  ]

; <label>:56                                      ; preds = %index2adr.exit
  %57 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %58 = load %struct.lua_TValue*, %struct.lua_TValue** %57, align 8, !tbaa !1
  %59 = bitcast %struct.lua_TValue* %.1.i to %struct.CClosure**
  %60 = load %struct.CClosure*, %struct.CClosure** %59, align 8, !tbaa !25
  %61 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %60, i64 0, i32 6
  %62 = bitcast %struct.Table** %61 to i64*
  %63 = load i64, i64* %62, align 8, !tbaa !29
  %64 = bitcast %struct.lua_TValue* %58 to i64*
  store i64 %63, i64* %64, align 8, !tbaa !25
  %65 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %58, i64 0, i32 1
  store i32 5, i32* %65, align 4, !tbaa !10
  br label %92

; <label>:66                                      ; preds = %index2adr.exit
  %67 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %68 = load %struct.lua_TValue*, %struct.lua_TValue** %67, align 8, !tbaa !1
  %69 = bitcast %struct.lua_TValue* %.1.i to %struct.anon.2**
  %70 = load %struct.anon.2*, %struct.anon.2** %69, align 8, !tbaa !25
  %71 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %70, i64 0, i32 4
  %72 = bitcast %struct.Table** %71 to i64*
  %73 = load i64, i64* %72, align 8, !tbaa !46
  %74 = bitcast %struct.lua_TValue* %68 to i64*
  store i64 %73, i64* %74, align 8, !tbaa !25
  %75 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %68, i64 0, i32 1
  store i32 5, i32* %75, align 4, !tbaa !10
  br label %92

; <label>:76                                      ; preds = %index2adr.exit
  %77 = bitcast %struct.lua_TValue* %.1.i to %struct.lua_State**
  %78 = load %struct.lua_State*, %struct.lua_State** %77, align 8, !tbaa !25
  %79 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %78, i64 0, i32 22
  %80 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %81 = load %struct.lua_TValue*, %struct.lua_TValue** %80, align 8, !tbaa !1
  %82 = bitcast %struct.lua_TValue* %79 to i64*
  %83 = bitcast %struct.lua_TValue* %81 to i64*
  %84 = load i64, i64* %82, align 8
  store i64 %84, i64* %83, align 8
  %85 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %78, i64 0, i32 22, i32 1
  %86 = load i32, i32* %85, align 4, !tbaa !10
  %87 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %81, i64 0, i32 1
  store i32 %86, i32* %87, align 4, !tbaa !10
  br label %92

; <label>:88                                      ; preds = %index2adr.exit
  %89 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %90 = load %struct.lua_TValue*, %struct.lua_TValue** %89, align 8, !tbaa !1
  %91 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %90, i64 0, i32 1
  store i32 0, i32* %91, align 4, !tbaa !10
  br label %92

; <label>:92                                      ; preds = %88, %76, %66, %56
  %.pre-phi = phi %struct.lua_TValue** [ %89, %88 ], [ %80, %76 ], [ %67, %66 ], [ %57, %56 ]
  %93 = load %struct.lua_TValue*, %struct.lua_TValue** %.pre-phi, align 8, !tbaa !1
  %94 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %93, i64 1
  store %struct.lua_TValue* %94, %struct.lua_TValue** %.pre-phi, align 8, !tbaa !1
  ret void
}

; Function Attrs: nounwind uwtable
define void @lua_settable(%struct.lua_State* %L, i32 %idx) #0 {
  %1 = icmp sgt i32 %idx, 0
  br i1 %1, label %2, label %11

; <label>:2                                       ; preds = %0
  %3 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 5
  %4 = load %struct.lua_TValue*, %struct.lua_TValue** %3, align 8, !tbaa !11
  %5 = add nsw i32 %idx, -1
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %4, i64 %6
  %8 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %9 = load %struct.lua_TValue*, %struct.lua_TValue** %8, align 8, !tbaa !1
  %10 = icmp ult %struct.lua_TValue* %7, %9
  %.luaO_nilobject_.i = select i1 %10, %struct.lua_TValue* %7, %struct.lua_TValue* bitcast (%struct.lua_TValue.218* @luaO_nilobject_ to %struct.lua_TValue*)
  br label %index2adr.exit

; <label>:11                                      ; preds = %0
  %12 = icmp sgt i32 %idx, -10000
  br i1 %12, label %13, label %18

; <label>:13                                      ; preds = %11
  %14 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %15 = load %struct.lua_TValue*, %struct.lua_TValue** %14, align 8, !tbaa !1
  %16 = sext i32 %idx to i64
  %17 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %15, i64 %16
  br label %index2adr.exit

; <label>:18                                      ; preds = %11
  switch i32 %idx, label %38 [
    i32 -10000, label %19
    i32 -10001, label %23
    i32 -10002, label %36
  ]

; <label>:19                                      ; preds = %18
  %20 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 6
  %21 = load %struct.global_State*, %struct.global_State** %20, align 8, !tbaa !17
  %22 = getelementptr inbounds %struct.global_State, %struct.global_State* %21, i64 0, i32 20
  br label %index2adr.exit

; <label>:23                                      ; preds = %18
  %24 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 7
  %25 = load %struct.CallInfo*, %struct.CallInfo** %24, align 8, !tbaa !13
  %26 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %25, i64 0, i32 1
  %27 = bitcast %struct.lua_TValue** %26 to %struct.CClosure***
  %28 = load %struct.CClosure**, %struct.CClosure*** %27, align 8, !tbaa !28
  %29 = load %struct.CClosure*, %struct.CClosure** %28, align 8, !tbaa !25
  %30 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 23
  %31 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %29, i64 0, i32 6
  %32 = bitcast %struct.Table** %31 to i64*
  %33 = load i64, i64* %32, align 8, !tbaa !29
  %34 = bitcast %struct.lua_TValue* %30 to i64*
  store i64 %33, i64* %34, align 8, !tbaa !25
  %35 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 23, i32 1
  store i32 5, i32* %35, align 4, !tbaa !10
  br label %index2adr.exit

; <label>:36                                      ; preds = %18
  %37 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 22
  br label %index2adr.exit

; <label>:38                                      ; preds = %18
  %39 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 7
  %40 = load %struct.CallInfo*, %struct.CallInfo** %39, align 8, !tbaa !13
  %41 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %40, i64 0, i32 1
  %42 = bitcast %struct.lua_TValue** %41 to %struct.CClosure***
  %43 = load %struct.CClosure**, %struct.CClosure*** %42, align 8, !tbaa !28
  %44 = load %struct.CClosure*, %struct.CClosure** %43, align 8, !tbaa !25
  %45 = sub nsw i32 -10002, %idx
  %46 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %44, i64 0, i32 4
  %47 = load i8, i8* %46, align 1, !tbaa !31
  %48 = zext i8 %47 to i32
  %49 = icmp sgt i32 %45, %48
  br i1 %49, label %index2adr.exit, label %50

; <label>:50                                      ; preds = %38
  %51 = add nsw i32 %45, -1
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %44, i64 0, i32 8, i64 %52
  br label %index2adr.exit

index2adr.exit:                                   ; preds = %2, %13, %19, %23, %36, %38, %50
  %.1.i = phi %struct.lua_TValue* [ %.luaO_nilobject_.i, %2 ], [ %17, %13 ], [ %37, %36 ], [ %30, %23 ], [ %22, %19 ], [ %53, %50 ], [ bitcast (%struct.lua_TValue.218* @luaO_nilobject_ to %struct.lua_TValue*), %38 ]
  %54 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %55 = load %struct.lua_TValue*, %struct.lua_TValue** %54, align 8, !tbaa !1
  %56 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %55, i64 -2
  %57 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %55, i64 -1
  tail call void bitcast (void (%struct.lua_State.215*, %struct.lua_TValue.218*, %struct.lua_TValue.218*, %struct.lua_TValue.218*)* @luaV_settable to void (%struct.lua_State*, %struct.lua_TValue*, %struct.lua_TValue*, %struct.lua_TValue*)*)(%struct.lua_State* %L, %struct.lua_TValue* %.1.i, %struct.lua_TValue* %56, %struct.lua_TValue* %57) #1
  %58 = load %struct.lua_TValue*, %struct.lua_TValue** %54, align 8, !tbaa !1
  %59 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %58, i64 -2
  store %struct.lua_TValue* %59, %struct.lua_TValue** %54, align 8, !tbaa !1
  ret void
}

; Function Attrs: nounwind uwtable
define void @lua_setfield(%struct.lua_State* %L, i32 %idx, i8* %k) #0 {
  %key = alloca %struct.lua_TValue, align 8
  %1 = bitcast %struct.lua_TValue* %key to i8*
  call void @llvm.lifetime.start(i64 16, i8* %1) #1
  %2 = icmp sgt i32 %idx, 0
  br i1 %2, label %3, label %12

; <label>:3                                       ; preds = %0
  %4 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 5
  %5 = load %struct.lua_TValue*, %struct.lua_TValue** %4, align 8, !tbaa !11
  %6 = add nsw i32 %idx, -1
  %7 = sext i32 %6 to i64
  %8 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %5, i64 %7
  %9 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %10 = load %struct.lua_TValue*, %struct.lua_TValue** %9, align 8, !tbaa !1
  %11 = icmp ult %struct.lua_TValue* %8, %10
  %.luaO_nilobject_.i = select i1 %11, %struct.lua_TValue* %8, %struct.lua_TValue* bitcast (%struct.lua_TValue.218* @luaO_nilobject_ to %struct.lua_TValue*)
  br label %index2adr.exit

; <label>:12                                      ; preds = %0
  %13 = icmp sgt i32 %idx, -10000
  br i1 %13, label %14, label %19

; <label>:14                                      ; preds = %12
  %15 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %16 = load %struct.lua_TValue*, %struct.lua_TValue** %15, align 8, !tbaa !1
  %17 = sext i32 %idx to i64
  %18 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %16, i64 %17
  br label %index2adr.exit

; <label>:19                                      ; preds = %12
  switch i32 %idx, label %39 [
    i32 -10000, label %20
    i32 -10001, label %24
    i32 -10002, label %37
  ]

; <label>:20                                      ; preds = %19
  %21 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 6
  %22 = load %struct.global_State*, %struct.global_State** %21, align 8, !tbaa !17
  %23 = getelementptr inbounds %struct.global_State, %struct.global_State* %22, i64 0, i32 20
  br label %index2adr.exit

; <label>:24                                      ; preds = %19
  %25 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 7
  %26 = load %struct.CallInfo*, %struct.CallInfo** %25, align 8, !tbaa !13
  %27 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %26, i64 0, i32 1
  %28 = bitcast %struct.lua_TValue** %27 to %struct.CClosure***
  %29 = load %struct.CClosure**, %struct.CClosure*** %28, align 8, !tbaa !28
  %30 = load %struct.CClosure*, %struct.CClosure** %29, align 8, !tbaa !25
  %31 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 23
  %32 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %30, i64 0, i32 6
  %33 = bitcast %struct.Table** %32 to i64*
  %34 = load i64, i64* %33, align 8, !tbaa !29
  %35 = bitcast %struct.lua_TValue* %31 to i64*
  store i64 %34, i64* %35, align 8, !tbaa !25
  %36 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 23, i32 1
  store i32 5, i32* %36, align 4, !tbaa !10
  br label %index2adr.exit

; <label>:37                                      ; preds = %19
  %38 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 22
  br label %index2adr.exit

; <label>:39                                      ; preds = %19
  %40 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 7
  %41 = load %struct.CallInfo*, %struct.CallInfo** %40, align 8, !tbaa !13
  %42 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %41, i64 0, i32 1
  %43 = bitcast %struct.lua_TValue** %42 to %struct.CClosure***
  %44 = load %struct.CClosure**, %struct.CClosure*** %43, align 8, !tbaa !28
  %45 = load %struct.CClosure*, %struct.CClosure** %44, align 8, !tbaa !25
  %46 = sub nsw i32 -10002, %idx
  %47 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %45, i64 0, i32 4
  %48 = load i8, i8* %47, align 1, !tbaa !31
  %49 = zext i8 %48 to i32
  %50 = icmp sgt i32 %46, %49
  br i1 %50, label %index2adr.exit, label %51

; <label>:51                                      ; preds = %39
  %52 = add nsw i32 %46, -1
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %45, i64 0, i32 8, i64 %53
  br label %index2adr.exit

index2adr.exit:                                   ; preds = %3, %14, %20, %24, %37, %39, %51
  %.1.i = phi %struct.lua_TValue* [ %.luaO_nilobject_.i, %3 ], [ %18, %14 ], [ %38, %37 ], [ %31, %24 ], [ %23, %20 ], [ %54, %51 ], [ bitcast (%struct.lua_TValue.218* @luaO_nilobject_ to %struct.lua_TValue*), %39 ]
  %55 = tail call i64 @strlen(i8* %k) #11
  %56 = tail call %union.TString* @luaS_newlstr(%struct.lua_State* %L, i8* %k, i64 %55) #1
  %57 = bitcast %struct.lua_TValue* %key to %union.TString**
  store %union.TString* %56, %union.TString** %57, align 8, !tbaa !25
  %58 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %key, i64 0, i32 1
  store i32 4, i32* %58, align 8, !tbaa !10
  %59 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %60 = load %struct.lua_TValue*, %struct.lua_TValue** %59, align 8, !tbaa !1
  %61 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %60, i64 -1
  call void bitcast (void (%struct.lua_State.215*, %struct.lua_TValue.218*, %struct.lua_TValue.218*, %struct.lua_TValue.218*)* @luaV_settable to void (%struct.lua_State*, %struct.lua_TValue*, %struct.lua_TValue*, %struct.lua_TValue*)*)(%struct.lua_State* %L, %struct.lua_TValue* %.1.i, %struct.lua_TValue* nonnull %key, %struct.lua_TValue* %61) #1
  %62 = load %struct.lua_TValue*, %struct.lua_TValue** %59, align 8, !tbaa !1
  %63 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %62, i64 -1
  store %struct.lua_TValue* %63, %struct.lua_TValue** %59, align 8, !tbaa !1
  call void @llvm.lifetime.end(i64 16, i8* %1) #1
  ret void
}

; Function Attrs: nounwind uwtable
define void @lua_rawset(%struct.lua_State* %L, i32 %idx) #0 {
  %1 = icmp sgt i32 %idx, 0
  br i1 %1, label %2, label %11

; <label>:2                                       ; preds = %0
  %3 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 5
  %4 = load %struct.lua_TValue*, %struct.lua_TValue** %3, align 8, !tbaa !11
  %5 = add nsw i32 %idx, -1
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %4, i64 %6
  %8 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %9 = load %struct.lua_TValue*, %struct.lua_TValue** %8, align 8, !tbaa !1
  %10 = icmp ult %struct.lua_TValue* %7, %9
  %.luaO_nilobject_.i = select i1 %10, %struct.lua_TValue* %7, %struct.lua_TValue* bitcast (%struct.lua_TValue.218* @luaO_nilobject_ to %struct.lua_TValue*)
  br label %index2adr.exit

; <label>:11                                      ; preds = %0
  %12 = icmp sgt i32 %idx, -10000
  br i1 %12, label %13, label %18

; <label>:13                                      ; preds = %11
  %14 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %15 = load %struct.lua_TValue*, %struct.lua_TValue** %14, align 8, !tbaa !1
  %16 = sext i32 %idx to i64
  %17 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %15, i64 %16
  br label %index2adr.exit

; <label>:18                                      ; preds = %11
  switch i32 %idx, label %38 [
    i32 -10000, label %19
    i32 -10001, label %23
    i32 -10002, label %36
  ]

; <label>:19                                      ; preds = %18
  %20 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 6
  %21 = load %struct.global_State*, %struct.global_State** %20, align 8, !tbaa !17
  %22 = getelementptr inbounds %struct.global_State, %struct.global_State* %21, i64 0, i32 20
  br label %index2adr.exit

; <label>:23                                      ; preds = %18
  %24 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 7
  %25 = load %struct.CallInfo*, %struct.CallInfo** %24, align 8, !tbaa !13
  %26 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %25, i64 0, i32 1
  %27 = bitcast %struct.lua_TValue** %26 to %struct.CClosure***
  %28 = load %struct.CClosure**, %struct.CClosure*** %27, align 8, !tbaa !28
  %29 = load %struct.CClosure*, %struct.CClosure** %28, align 8, !tbaa !25
  %30 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 23
  %31 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %29, i64 0, i32 6
  %32 = bitcast %struct.Table** %31 to i64*
  %33 = load i64, i64* %32, align 8, !tbaa !29
  %34 = bitcast %struct.lua_TValue* %30 to i64*
  store i64 %33, i64* %34, align 8, !tbaa !25
  %35 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 23, i32 1
  store i32 5, i32* %35, align 4, !tbaa !10
  br label %index2adr.exit

; <label>:36                                      ; preds = %18
  %37 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 22
  br label %index2adr.exit

; <label>:38                                      ; preds = %18
  %39 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 7
  %40 = load %struct.CallInfo*, %struct.CallInfo** %39, align 8, !tbaa !13
  %41 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %40, i64 0, i32 1
  %42 = bitcast %struct.lua_TValue** %41 to %struct.CClosure***
  %43 = load %struct.CClosure**, %struct.CClosure*** %42, align 8, !tbaa !28
  %44 = load %struct.CClosure*, %struct.CClosure** %43, align 8, !tbaa !25
  %45 = sub nsw i32 -10002, %idx
  %46 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %44, i64 0, i32 4
  %47 = load i8, i8* %46, align 1, !tbaa !31
  %48 = zext i8 %47 to i32
  %49 = icmp sgt i32 %45, %48
  br i1 %49, label %index2adr.exit, label %50

; <label>:50                                      ; preds = %38
  %51 = add nsw i32 %45, -1
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %44, i64 0, i32 8, i64 %52
  br label %index2adr.exit

index2adr.exit:                                   ; preds = %2, %13, %19, %23, %36, %38, %50
  %.1.i = phi %struct.lua_TValue* [ %.luaO_nilobject_.i, %2 ], [ %17, %13 ], [ %37, %36 ], [ %30, %23 ], [ %22, %19 ], [ %53, %50 ], [ bitcast (%struct.lua_TValue.218* @luaO_nilobject_ to %struct.lua_TValue*), %38 ]
  %54 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %55 = load %struct.lua_TValue*, %struct.lua_TValue** %54, align 8, !tbaa !1
  %56 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %55, i64 -1
  %57 = bitcast %struct.lua_TValue* %.1.i to %struct.Table**
  %58 = load %struct.Table*, %struct.Table** %57, align 8, !tbaa !25
  %59 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %55, i64 -2
  %60 = tail call %struct.lua_TValue* @luaH_set(%struct.lua_State* %L, %struct.Table* %58, %struct.lua_TValue* %59) #1
  %61 = bitcast %struct.lua_TValue* %56 to i64*
  %62 = bitcast %struct.lua_TValue* %60 to i64*
  %63 = load i64, i64* %61, align 8
  store i64 %63, i64* %62, align 8
  %64 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %55, i64 -1, i32 1
  %65 = load i32, i32* %64, align 4, !tbaa !10
  %66 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %60, i64 0, i32 1
  store i32 %65, i32* %66, align 4, !tbaa !10
  %67 = load %struct.lua_TValue*, %struct.lua_TValue** %54, align 8, !tbaa !1
  %68 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %67, i64 -1, i32 1
  %69 = load i32, i32* %68, align 4, !tbaa !10
  %70 = icmp sgt i32 %69, 3
  br i1 %70, label %71, label %86

; <label>:71                                      ; preds = %index2adr.exit
  %72 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %67, i64 -1, i32 0, i32 0
  %73 = bitcast %union.GCObject** %72 to %struct.GCheader**
  %74 = load %struct.GCheader*, %struct.GCheader** %73, align 8, !tbaa !25
  %75 = getelementptr inbounds %struct.GCheader, %struct.GCheader* %74, i64 0, i32 2
  %76 = load i8, i8* %75, align 1, !tbaa !33
  %77 = and i8 %76, 3
  %78 = icmp eq i8 %77, 0
  br i1 %78, label %86, label %79

; <label>:79                                      ; preds = %71
  %80 = load %struct.Table*, %struct.Table** %57, align 8, !tbaa !25
  %81 = getelementptr inbounds %struct.Table, %struct.Table* %80, i64 0, i32 2
  %82 = load i8, i8* %81, align 1, !tbaa !33
  %83 = and i8 %82, 4
  %84 = icmp eq i8 %83, 0
  br i1 %84, label %86, label %85

; <label>:85                                      ; preds = %79
  tail call void @luaC_barrierback(%struct.lua_State* %L, %struct.Table* %80) #1
  %.pre = load %struct.lua_TValue*, %struct.lua_TValue** %54, align 8, !tbaa !1
  br label %86

; <label>:86                                      ; preds = %79, %71, %85, %index2adr.exit
  %87 = phi %struct.lua_TValue* [ %67, %79 ], [ %67, %71 ], [ %.pre, %85 ], [ %67, %index2adr.exit ]
  %88 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %87, i64 -2
  store %struct.lua_TValue* %88, %struct.lua_TValue** %54, align 8, !tbaa !1
  ret void
}

; Function Attrs: nounwind uwtable
define void @lua_rawseti(%struct.lua_State* %L, i32 %idx, i32 %n) #0 {
  %1 = icmp sgt i32 %idx, 0
  br i1 %1, label %2, label %11

; <label>:2                                       ; preds = %0
  %3 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 5
  %4 = load %struct.lua_TValue*, %struct.lua_TValue** %3, align 8, !tbaa !11
  %5 = add nsw i32 %idx, -1
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %4, i64 %6
  %8 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %9 = load %struct.lua_TValue*, %struct.lua_TValue** %8, align 8, !tbaa !1
  %10 = icmp ult %struct.lua_TValue* %7, %9
  %.luaO_nilobject_.i = select i1 %10, %struct.lua_TValue* %7, %struct.lua_TValue* bitcast (%struct.lua_TValue.218* @luaO_nilobject_ to %struct.lua_TValue*)
  br label %index2adr.exit

; <label>:11                                      ; preds = %0
  %12 = icmp sgt i32 %idx, -10000
  br i1 %12, label %13, label %18

; <label>:13                                      ; preds = %11
  %14 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %15 = load %struct.lua_TValue*, %struct.lua_TValue** %14, align 8, !tbaa !1
  %16 = sext i32 %idx to i64
  %17 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %15, i64 %16
  br label %index2adr.exit

; <label>:18                                      ; preds = %11
  switch i32 %idx, label %38 [
    i32 -10000, label %19
    i32 -10001, label %23
    i32 -10002, label %36
  ]

; <label>:19                                      ; preds = %18
  %20 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 6
  %21 = load %struct.global_State*, %struct.global_State** %20, align 8, !tbaa !17
  %22 = getelementptr inbounds %struct.global_State, %struct.global_State* %21, i64 0, i32 20
  br label %index2adr.exit

; <label>:23                                      ; preds = %18
  %24 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 7
  %25 = load %struct.CallInfo*, %struct.CallInfo** %24, align 8, !tbaa !13
  %26 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %25, i64 0, i32 1
  %27 = bitcast %struct.lua_TValue** %26 to %struct.CClosure***
  %28 = load %struct.CClosure**, %struct.CClosure*** %27, align 8, !tbaa !28
  %29 = load %struct.CClosure*, %struct.CClosure** %28, align 8, !tbaa !25
  %30 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 23
  %31 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %29, i64 0, i32 6
  %32 = bitcast %struct.Table** %31 to i64*
  %33 = load i64, i64* %32, align 8, !tbaa !29
  %34 = bitcast %struct.lua_TValue* %30 to i64*
  store i64 %33, i64* %34, align 8, !tbaa !25
  %35 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 23, i32 1
  store i32 5, i32* %35, align 4, !tbaa !10
  br label %index2adr.exit

; <label>:36                                      ; preds = %18
  %37 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 22
  br label %index2adr.exit

; <label>:38                                      ; preds = %18
  %39 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 7
  %40 = load %struct.CallInfo*, %struct.CallInfo** %39, align 8, !tbaa !13
  %41 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %40, i64 0, i32 1
  %42 = bitcast %struct.lua_TValue** %41 to %struct.CClosure***
  %43 = load %struct.CClosure**, %struct.CClosure*** %42, align 8, !tbaa !28
  %44 = load %struct.CClosure*, %struct.CClosure** %43, align 8, !tbaa !25
  %45 = sub nsw i32 -10002, %idx
  %46 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %44, i64 0, i32 4
  %47 = load i8, i8* %46, align 1, !tbaa !31
  %48 = zext i8 %47 to i32
  %49 = icmp sgt i32 %45, %48
  br i1 %49, label %index2adr.exit, label %50

; <label>:50                                      ; preds = %38
  %51 = add nsw i32 %45, -1
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %44, i64 0, i32 8, i64 %52
  br label %index2adr.exit

index2adr.exit:                                   ; preds = %2, %13, %19, %23, %36, %38, %50
  %.1.i = phi %struct.lua_TValue* [ %.luaO_nilobject_.i, %2 ], [ %17, %13 ], [ %37, %36 ], [ %30, %23 ], [ %22, %19 ], [ %53, %50 ], [ bitcast (%struct.lua_TValue.218* @luaO_nilobject_ to %struct.lua_TValue*), %38 ]
  %54 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %55 = load %struct.lua_TValue*, %struct.lua_TValue** %54, align 8, !tbaa !1
  %56 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %55, i64 -1
  %57 = bitcast %struct.lua_TValue* %.1.i to %struct.Table**
  %58 = load %struct.Table*, %struct.Table** %57, align 8, !tbaa !25
  %59 = tail call %struct.lua_TValue* @luaH_setnum(%struct.lua_State* %L, %struct.Table* %58, i32 %n) #1
  %60 = bitcast %struct.lua_TValue* %56 to i64*
  %61 = bitcast %struct.lua_TValue* %59 to i64*
  %62 = load i64, i64* %60, align 8
  store i64 %62, i64* %61, align 8
  %63 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %55, i64 -1, i32 1
  %64 = load i32, i32* %63, align 4, !tbaa !10
  %65 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %59, i64 0, i32 1
  store i32 %64, i32* %65, align 4, !tbaa !10
  %66 = load %struct.lua_TValue*, %struct.lua_TValue** %54, align 8, !tbaa !1
  %67 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %66, i64 -1, i32 1
  %68 = load i32, i32* %67, align 4, !tbaa !10
  %69 = icmp sgt i32 %68, 3
  br i1 %69, label %70, label %85

; <label>:70                                      ; preds = %index2adr.exit
  %71 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %66, i64 -1, i32 0, i32 0
  %72 = bitcast %union.GCObject** %71 to %struct.GCheader**
  %73 = load %struct.GCheader*, %struct.GCheader** %72, align 8, !tbaa !25
  %74 = getelementptr inbounds %struct.GCheader, %struct.GCheader* %73, i64 0, i32 2
  %75 = load i8, i8* %74, align 1, !tbaa !33
  %76 = and i8 %75, 3
  %77 = icmp eq i8 %76, 0
  br i1 %77, label %85, label %78

; <label>:78                                      ; preds = %70
  %79 = load %struct.Table*, %struct.Table** %57, align 8, !tbaa !25
  %80 = getelementptr inbounds %struct.Table, %struct.Table* %79, i64 0, i32 2
  %81 = load i8, i8* %80, align 1, !tbaa !33
  %82 = and i8 %81, 4
  %83 = icmp eq i8 %82, 0
  br i1 %83, label %85, label %84

; <label>:84                                      ; preds = %78
  tail call void @luaC_barrierback(%struct.lua_State* %L, %struct.Table* %79) #1
  %.pre = load %struct.lua_TValue*, %struct.lua_TValue** %54, align 8, !tbaa !1
  br label %85

; <label>:85                                      ; preds = %78, %70, %84, %index2adr.exit
  %86 = phi %struct.lua_TValue* [ %66, %78 ], [ %66, %70 ], [ %.pre, %84 ], [ %66, %index2adr.exit ]
  %87 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %86, i64 -1
  store %struct.lua_TValue* %87, %struct.lua_TValue** %54, align 8, !tbaa !1
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @lua_setmetatable(%struct.lua_State* %L, i32 %objindex) #0 {
  %1 = icmp sgt i32 %objindex, 0
  br i1 %1, label %2, label %11

; <label>:2                                       ; preds = %0
  %3 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 5
  %4 = load %struct.lua_TValue*, %struct.lua_TValue** %3, align 8, !tbaa !11
  %5 = add nsw i32 %objindex, -1
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %4, i64 %6
  %8 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %9 = load %struct.lua_TValue*, %struct.lua_TValue** %8, align 8, !tbaa !1
  %10 = icmp ult %struct.lua_TValue* %7, %9
  %.luaO_nilobject_.i = select i1 %10, %struct.lua_TValue* %7, %struct.lua_TValue* bitcast (%struct.lua_TValue.218* @luaO_nilobject_ to %struct.lua_TValue*)
  br label %index2adr.exit

; <label>:11                                      ; preds = %0
  %12 = icmp sgt i32 %objindex, -10000
  br i1 %12, label %13, label %18

; <label>:13                                      ; preds = %11
  %14 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %15 = load %struct.lua_TValue*, %struct.lua_TValue** %14, align 8, !tbaa !1
  %16 = sext i32 %objindex to i64
  %17 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %15, i64 %16
  br label %index2adr.exit

; <label>:18                                      ; preds = %11
  switch i32 %objindex, label %38 [
    i32 -10000, label %19
    i32 -10001, label %23
    i32 -10002, label %36
  ]

; <label>:19                                      ; preds = %18
  %20 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 6
  %21 = load %struct.global_State*, %struct.global_State** %20, align 8, !tbaa !17
  %22 = getelementptr inbounds %struct.global_State, %struct.global_State* %21, i64 0, i32 20
  br label %index2adr.exit

; <label>:23                                      ; preds = %18
  %24 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 7
  %25 = load %struct.CallInfo*, %struct.CallInfo** %24, align 8, !tbaa !13
  %26 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %25, i64 0, i32 1
  %27 = bitcast %struct.lua_TValue** %26 to %struct.CClosure***
  %28 = load %struct.CClosure**, %struct.CClosure*** %27, align 8, !tbaa !28
  %29 = load %struct.CClosure*, %struct.CClosure** %28, align 8, !tbaa !25
  %30 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 23
  %31 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %29, i64 0, i32 6
  %32 = bitcast %struct.Table** %31 to i64*
  %33 = load i64, i64* %32, align 8, !tbaa !29
  %34 = bitcast %struct.lua_TValue* %30 to i64*
  store i64 %33, i64* %34, align 8, !tbaa !25
  %35 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 23, i32 1
  store i32 5, i32* %35, align 4, !tbaa !10
  br label %index2adr.exit

; <label>:36                                      ; preds = %18
  %37 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 22
  br label %index2adr.exit

; <label>:38                                      ; preds = %18
  %39 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 7
  %40 = load %struct.CallInfo*, %struct.CallInfo** %39, align 8, !tbaa !13
  %41 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %40, i64 0, i32 1
  %42 = bitcast %struct.lua_TValue** %41 to %struct.CClosure***
  %43 = load %struct.CClosure**, %struct.CClosure*** %42, align 8, !tbaa !28
  %44 = load %struct.CClosure*, %struct.CClosure** %43, align 8, !tbaa !25
  %45 = sub nsw i32 -10002, %objindex
  %46 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %44, i64 0, i32 4
  %47 = load i8, i8* %46, align 1, !tbaa !31
  %48 = zext i8 %47 to i32
  %49 = icmp sgt i32 %45, %48
  br i1 %49, label %index2adr.exit, label %50

; <label>:50                                      ; preds = %38
  %51 = add nsw i32 %45, -1
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %44, i64 0, i32 8, i64 %52
  br label %index2adr.exit

index2adr.exit:                                   ; preds = %2, %13, %19, %23, %36, %38, %50
  %.1.i = phi %struct.lua_TValue* [ %.luaO_nilobject_.i, %2 ], [ %17, %13 ], [ %37, %36 ], [ %30, %23 ], [ %22, %19 ], [ %53, %50 ], [ bitcast (%struct.lua_TValue.218* @luaO_nilobject_ to %struct.lua_TValue*), %38 ]
  %54 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %55 = load %struct.lua_TValue*, %struct.lua_TValue** %54, align 8, !tbaa !1
  %56 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %55, i64 -1, i32 1
  %57 = load i32, i32* %56, align 4, !tbaa !10
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %63, label %59

; <label>:59                                      ; preds = %index2adr.exit
  %60 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %55, i64 -1, i32 0, i32 0
  %61 = bitcast %union.GCObject** %60 to %struct.Table**
  %62 = load %struct.Table*, %struct.Table** %61, align 8, !tbaa !25
  br label %63

; <label>:63                                      ; preds = %index2adr.exit, %59
  %mt.0 = phi %struct.Table* [ %62, %59 ], [ null, %index2adr.exit ]
  %64 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %.1.i, i64 0, i32 1
  %65 = load i32, i32* %64, align 4, !tbaa !10
  switch i32 %65, label %102 [
    i32 5, label %66
    i32 7, label %83
  ]

; <label>:66                                      ; preds = %63
  %67 = bitcast %struct.lua_TValue* %.1.i to %struct.Table**
  %68 = load %struct.Table*, %struct.Table** %67, align 8, !tbaa !25
  %69 = getelementptr inbounds %struct.Table, %struct.Table* %68, i64 0, i32 5
  store %struct.Table* %mt.0, %struct.Table** %69, align 8, !tbaa !47
  %70 = icmp eq %struct.Table* %mt.0, null
  br i1 %70, label %107, label %71

; <label>:71                                      ; preds = %66
  %72 = getelementptr inbounds %struct.Table, %struct.Table* %mt.0, i64 0, i32 2
  %73 = load i8, i8* %72, align 1, !tbaa !33
  %74 = and i8 %73, 3
  %75 = icmp eq i8 %74, 0
  br i1 %75, label %107, label %76

; <label>:76                                      ; preds = %71
  %77 = load %struct.Table*, %struct.Table** %67, align 8, !tbaa !25
  %78 = getelementptr inbounds %struct.Table, %struct.Table* %77, i64 0, i32 2
  %79 = load i8, i8* %78, align 1, !tbaa !33
  %80 = and i8 %79, 4
  %81 = icmp eq i8 %80, 0
  br i1 %81, label %107, label %82

; <label>:82                                      ; preds = %76
  tail call void @luaC_barrierback(%struct.lua_State* %L, %struct.Table* %77) #1
  br label %107

; <label>:83                                      ; preds = %63
  %84 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %.1.i, i64 0, i32 0, i32 0
  %85 = bitcast %struct.lua_TValue* %.1.i to %struct.anon.2**
  %86 = load %struct.anon.2*, %struct.anon.2** %85, align 8, !tbaa !25
  %87 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %86, i64 0, i32 3
  store %struct.Table* %mt.0, %struct.Table** %87, align 8, !tbaa !49
  %88 = icmp eq %struct.Table* %mt.0, null
  br i1 %88, label %107, label %89

; <label>:89                                      ; preds = %83
  %90 = bitcast %struct.Table* %mt.0 to %union.GCObject*
  %91 = getelementptr inbounds %struct.Table, %struct.Table* %mt.0, i64 0, i32 2
  %92 = load i8, i8* %91, align 1, !tbaa !33
  %93 = and i8 %92, 3
  %94 = icmp eq i8 %93, 0
  br i1 %94, label %107, label %95

; <label>:95                                      ; preds = %89
  %96 = load %union.GCObject*, %union.GCObject** %84, align 8, !tbaa !25
  %97 = getelementptr inbounds %union.GCObject, %union.GCObject* %96, i64 0, i32 0, i32 2
  %98 = load i8, i8* %97, align 1, !tbaa !33
  %99 = and i8 %98, 4
  %100 = icmp eq i8 %99, 0
  br i1 %100, label %107, label %101

; <label>:101                                     ; preds = %95
  tail call void @luaC_barrierf(%struct.lua_State* %L, %union.GCObject* %96, %union.GCObject* %90) #1
  br label %107

; <label>:102                                     ; preds = %63
  %103 = sext i32 %65 to i64
  %104 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 6
  %105 = load %struct.global_State*, %struct.global_State** %104, align 8, !tbaa !17
  %106 = getelementptr inbounds %struct.global_State, %struct.global_State* %105, i64 0, i32 23, i64 %103
  store %struct.Table* %mt.0, %struct.Table** %106, align 8, !tbaa !25
  br label %107

; <label>:107                                     ; preds = %76, %71, %66, %95, %89, %83, %101, %82, %102
  %108 = load %struct.lua_TValue*, %struct.lua_TValue** %54, align 8, !tbaa !1
  %109 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %108, i64 -1
  store %struct.lua_TValue* %109, %struct.lua_TValue** %54, align 8, !tbaa !1
  ret i32 1
}

; Function Attrs: nounwind uwtable
define i32 @lua_setfenv(%struct.lua_State* %L, i32 %idx) #0 {
  %1 = icmp sgt i32 %idx, 0
  br i1 %1, label %2, label %11

; <label>:2                                       ; preds = %0
  %3 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 5
  %4 = load %struct.lua_TValue*, %struct.lua_TValue** %3, align 8, !tbaa !11
  %5 = add nsw i32 %idx, -1
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %4, i64 %6
  %8 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %9 = load %struct.lua_TValue*, %struct.lua_TValue** %8, align 8, !tbaa !1
  %10 = icmp ult %struct.lua_TValue* %7, %9
  %.luaO_nilobject_.i = select i1 %10, %struct.lua_TValue* %7, %struct.lua_TValue* bitcast (%struct.lua_TValue.218* @luaO_nilobject_ to %struct.lua_TValue*)
  br label %index2adr.exit

; <label>:11                                      ; preds = %0
  %12 = icmp sgt i32 %idx, -10000
  br i1 %12, label %13, label %18

; <label>:13                                      ; preds = %11
  %14 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %15 = load %struct.lua_TValue*, %struct.lua_TValue** %14, align 8, !tbaa !1
  %16 = sext i32 %idx to i64
  %17 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %15, i64 %16
  br label %index2adr.exit

; <label>:18                                      ; preds = %11
  switch i32 %idx, label %38 [
    i32 -10000, label %19
    i32 -10001, label %23
    i32 -10002, label %36
  ]

; <label>:19                                      ; preds = %18
  %20 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 6
  %21 = load %struct.global_State*, %struct.global_State** %20, align 8, !tbaa !17
  %22 = getelementptr inbounds %struct.global_State, %struct.global_State* %21, i64 0, i32 20
  br label %index2adr.exit

; <label>:23                                      ; preds = %18
  %24 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 7
  %25 = load %struct.CallInfo*, %struct.CallInfo** %24, align 8, !tbaa !13
  %26 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %25, i64 0, i32 1
  %27 = bitcast %struct.lua_TValue** %26 to %struct.CClosure***
  %28 = load %struct.CClosure**, %struct.CClosure*** %27, align 8, !tbaa !28
  %29 = load %struct.CClosure*, %struct.CClosure** %28, align 8, !tbaa !25
  %30 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 23
  %31 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %29, i64 0, i32 6
  %32 = bitcast %struct.Table** %31 to i64*
  %33 = load i64, i64* %32, align 8, !tbaa !29
  %34 = bitcast %struct.lua_TValue* %30 to i64*
  store i64 %33, i64* %34, align 8, !tbaa !25
  %35 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 23, i32 1
  store i32 5, i32* %35, align 4, !tbaa !10
  br label %index2adr.exit

; <label>:36                                      ; preds = %18
  %37 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 22
  br label %index2adr.exit

; <label>:38                                      ; preds = %18
  %39 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 7
  %40 = load %struct.CallInfo*, %struct.CallInfo** %39, align 8, !tbaa !13
  %41 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %40, i64 0, i32 1
  %42 = bitcast %struct.lua_TValue** %41 to %struct.CClosure***
  %43 = load %struct.CClosure**, %struct.CClosure*** %42, align 8, !tbaa !28
  %44 = load %struct.CClosure*, %struct.CClosure** %43, align 8, !tbaa !25
  %45 = sub nsw i32 -10002, %idx
  %46 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %44, i64 0, i32 4
  %47 = load i8, i8* %46, align 1, !tbaa !31
  %48 = zext i8 %47 to i32
  %49 = icmp sgt i32 %45, %48
  br i1 %49, label %index2adr.exit, label %50

; <label>:50                                      ; preds = %38
  %51 = add nsw i32 %45, -1
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %44, i64 0, i32 8, i64 %52
  br label %index2adr.exit

index2adr.exit:                                   ; preds = %2, %13, %19, %23, %36, %38, %50
  %.1.i = phi %struct.lua_TValue* [ %.luaO_nilobject_.i, %2 ], [ %17, %13 ], [ %37, %36 ], [ %30, %23 ], [ %22, %19 ], [ %53, %50 ], [ bitcast (%struct.lua_TValue.218* @luaO_nilobject_ to %struct.lua_TValue*), %38 ]
  %54 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %.1.i, i64 0, i32 1
  %55 = load i32, i32* %54, align 4, !tbaa !10
  switch i32 %55, label %index2adr.exit..thread3_crit_edge [
    i32 6, label %56
    i32 7, label %66
    i32 8, label %76
  ]

index2adr.exit..thread3_crit_edge:                ; preds = %index2adr.exit
  %.pre4 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  br label %.thread3

; <label>:56                                      ; preds = %index2adr.exit
  %57 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %58 = load %struct.lua_TValue*, %struct.lua_TValue** %57, align 8, !tbaa !1
  %59 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %58, i64 -1, i32 0, i32 0
  %60 = bitcast %union.GCObject** %59 to i64*
  %61 = load i64, i64* %60, align 8, !tbaa !25
  %62 = bitcast %struct.lua_TValue* %.1.i to %struct.CClosure**
  %63 = load %struct.CClosure*, %struct.CClosure** %62, align 8, !tbaa !25
  %64 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %63, i64 0, i32 6
  %65 = bitcast %struct.Table** %64 to i64*
  store i64 %61, i64* %65, align 8, !tbaa !29
  br label %87

; <label>:66                                      ; preds = %index2adr.exit
  %67 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %68 = load %struct.lua_TValue*, %struct.lua_TValue** %67, align 8, !tbaa !1
  %69 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %68, i64 -1, i32 0, i32 0
  %70 = bitcast %union.GCObject** %69 to i64*
  %71 = load i64, i64* %70, align 8, !tbaa !25
  %72 = bitcast %struct.lua_TValue* %.1.i to %struct.anon.2**
  %73 = load %struct.anon.2*, %struct.anon.2** %72, align 8, !tbaa !25
  %74 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %73, i64 0, i32 4
  %75 = bitcast %struct.Table** %74 to i64*
  store i64 %71, i64* %75, align 8, !tbaa !46
  br label %87

; <label>:76                                      ; preds = %index2adr.exit
  %77 = bitcast %struct.lua_TValue* %.1.i to %struct.lua_State**
  %78 = load %struct.lua_State*, %struct.lua_State** %77, align 8, !tbaa !25
  %79 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %78, i64 0, i32 22
  %80 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %81 = load %struct.lua_TValue*, %struct.lua_TValue** %80, align 8, !tbaa !1
  %82 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %81, i64 -1, i32 0, i32 0
  %83 = bitcast %union.GCObject** %82 to i64*
  %84 = load i64, i64* %83, align 8, !tbaa !25
  %85 = bitcast %struct.lua_TValue* %79 to i64*
  store i64 %84, i64* %85, align 8, !tbaa !25
  %86 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %78, i64 0, i32 22, i32 1
  store i32 5, i32* %86, align 4, !tbaa !10
  %.pre = load %struct.lua_TValue*, %struct.lua_TValue** %80, align 8, !tbaa !1
  br label %87

; <label>:87                                      ; preds = %76, %66, %56
  %.pre-phi = phi %struct.lua_TValue** [ %80, %76 ], [ %67, %66 ], [ %57, %56 ]
  %88 = phi %struct.lua_TValue* [ %.pre, %76 ], [ %68, %66 ], [ %58, %56 ]
  %89 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %88, i64 -1, i32 0, i32 0
  %90 = load %union.GCObject*, %union.GCObject** %89, align 8, !tbaa !25
  %91 = getelementptr inbounds %union.GCObject, %union.GCObject* %90, i64 0, i32 0, i32 2
  %92 = load i8, i8* %91, align 1, !tbaa !33
  %93 = and i8 %92, 3
  %94 = icmp eq i8 %93, 0
  br i1 %94, label %.thread3, label %95

; <label>:95                                      ; preds = %87
  %96 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %.1.i, i64 0, i32 0, i32 0
  %97 = load %union.GCObject*, %union.GCObject** %96, align 8, !tbaa !25
  %98 = getelementptr inbounds %union.GCObject, %union.GCObject* %97, i64 0, i32 0, i32 2
  %99 = load i8, i8* %98, align 1, !tbaa !33
  %100 = and i8 %99, 4
  %101 = icmp eq i8 %100, 0
  br i1 %101, label %.thread3, label %102

; <label>:102                                     ; preds = %95
  tail call void @luaC_barrierf(%struct.lua_State* %L, %union.GCObject* %97, %union.GCObject* %90) #1
  br label %.thread3

.thread3:                                         ; preds = %index2adr.exit..thread3_crit_edge, %95, %87, %102
  %.pre-phi5 = phi %struct.lua_TValue** [ %.pre4, %index2adr.exit..thread3_crit_edge ], [ %.pre-phi, %95 ], [ %.pre-phi, %87 ], [ %.pre-phi, %102 ]
  %res.02 = phi i32 [ 0, %index2adr.exit..thread3_crit_edge ], [ 1, %95 ], [ 1, %87 ], [ 1, %102 ]
  %103 = load %struct.lua_TValue*, %struct.lua_TValue** %.pre-phi5, align 8, !tbaa !1
  %104 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %103, i64 -1
  store %struct.lua_TValue* %104, %struct.lua_TValue** %.pre-phi5, align 8, !tbaa !1
  ret i32 %res.02
}

; Function Attrs: nounwind uwtable
define void @lua_call(%struct.lua_State* %L, i32 %nargs, i32 %nresults) #0 {
  %1 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %2 = load %struct.lua_TValue*, %struct.lua_TValue** %1, align 8, !tbaa !1
  %3 = add nsw i32 %nargs, 1
  %4 = sext i32 %3 to i64
  %5 = sub nsw i64 0, %4
  %6 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %2, i64 %5
  tail call void @luaD_call(%struct.lua_State* %L, %struct.lua_TValue* %6, i32 %nresults) #1
  %7 = icmp eq i32 %nresults, -1
  br i1 %7, label %8, label %16

; <label>:8                                       ; preds = %0
  %9 = load %struct.lua_TValue*, %struct.lua_TValue** %1, align 8, !tbaa !1
  %10 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 7
  %11 = load %struct.CallInfo*, %struct.CallInfo** %10, align 8, !tbaa !13
  %12 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %11, i64 0, i32 2
  %13 = load %struct.lua_TValue*, %struct.lua_TValue** %12, align 8, !tbaa !14
  %14 = icmp ult %struct.lua_TValue* %9, %13
  br i1 %14, label %16, label %15

; <label>:15                                      ; preds = %8
  store %struct.lua_TValue* %9, %struct.lua_TValue** %12, align 8, !tbaa !14
  br label %16

; <label>:16                                      ; preds = %8, %15, %0
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @lua_pcall(%struct.lua_State* %L, i32 %nargs, i32 %nresults, i32 %errfunc) #0 {
  %c = alloca %struct.CallS, align 8
  %1 = bitcast %struct.CallS* %c to i8*
  call void @llvm.lifetime.start(i64 16, i8* %1) #1
  %2 = icmp eq i32 %errfunc, 0
  br i1 %2, label %._crit_edge, label %3

._crit_edge:                                      ; preds = %0
  %.phi.trans.insert = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 10
  %.phi.trans.insert1 = bitcast %struct.lua_TValue** %.phi.trans.insert to i64*
  %.pre = load i64, i64* %.phi.trans.insert1, align 8, !tbaa !50
  br label %62

; <label>:3                                       ; preds = %0
  %4 = icmp sgt i32 %errfunc, 0
  br i1 %4, label %5, label %14

; <label>:5                                       ; preds = %3
  %6 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 5
  %7 = load %struct.lua_TValue*, %struct.lua_TValue** %6, align 8, !tbaa !11
  %8 = add nsw i32 %errfunc, -1
  %9 = sext i32 %8 to i64
  %10 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %7, i64 %9
  %11 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %12 = load %struct.lua_TValue*, %struct.lua_TValue** %11, align 8, !tbaa !1
  %13 = icmp ult %struct.lua_TValue* %10, %12
  %.luaO_nilobject_.i = select i1 %13, %struct.lua_TValue* %10, %struct.lua_TValue* bitcast (%struct.lua_TValue.218* @luaO_nilobject_ to %struct.lua_TValue*)
  br label %index2adr.exit

; <label>:14                                      ; preds = %3
  %15 = icmp sgt i32 %errfunc, -10000
  br i1 %15, label %16, label %21

; <label>:16                                      ; preds = %14
  %17 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %18 = load %struct.lua_TValue*, %struct.lua_TValue** %17, align 8, !tbaa !1
  %19 = sext i32 %errfunc to i64
  %20 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %18, i64 %19
  br label %index2adr.exit

; <label>:21                                      ; preds = %14
  switch i32 %errfunc, label %41 [
    i32 -10000, label %22
    i32 -10001, label %26
    i32 -10002, label %39
  ]

; <label>:22                                      ; preds = %21
  %23 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 6
  %24 = load %struct.global_State*, %struct.global_State** %23, align 8, !tbaa !17
  %25 = getelementptr inbounds %struct.global_State, %struct.global_State* %24, i64 0, i32 20
  br label %index2adr.exit

; <label>:26                                      ; preds = %21
  %27 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 7
  %28 = load %struct.CallInfo*, %struct.CallInfo** %27, align 8, !tbaa !13
  %29 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %28, i64 0, i32 1
  %30 = bitcast %struct.lua_TValue** %29 to %struct.CClosure***
  %31 = load %struct.CClosure**, %struct.CClosure*** %30, align 8, !tbaa !28
  %32 = load %struct.CClosure*, %struct.CClosure** %31, align 8, !tbaa !25
  %33 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 23
  %34 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %32, i64 0, i32 6
  %35 = bitcast %struct.Table** %34 to i64*
  %36 = load i64, i64* %35, align 8, !tbaa !29
  %37 = bitcast %struct.lua_TValue* %33 to i64*
  store i64 %36, i64* %37, align 8, !tbaa !25
  %38 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 23, i32 1
  store i32 5, i32* %38, align 4, !tbaa !10
  br label %index2adr.exit

; <label>:39                                      ; preds = %21
  %40 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 22
  br label %index2adr.exit

; <label>:41                                      ; preds = %21
  %42 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 7
  %43 = load %struct.CallInfo*, %struct.CallInfo** %42, align 8, !tbaa !13
  %44 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %43, i64 0, i32 1
  %45 = bitcast %struct.lua_TValue** %44 to %struct.CClosure***
  %46 = load %struct.CClosure**, %struct.CClosure*** %45, align 8, !tbaa !28
  %47 = load %struct.CClosure*, %struct.CClosure** %46, align 8, !tbaa !25
  %48 = sub nsw i32 -10002, %errfunc
  %49 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %47, i64 0, i32 4
  %50 = load i8, i8* %49, align 1, !tbaa !31
  %51 = zext i8 %50 to i32
  %52 = icmp sgt i32 %48, %51
  br i1 %52, label %index2adr.exit, label %53

; <label>:53                                      ; preds = %41
  %54 = add nsw i32 %48, -1
  %55 = sext i32 %54 to i64
  %56 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %47, i64 0, i32 8, i64 %55
  br label %index2adr.exit

index2adr.exit:                                   ; preds = %5, %16, %22, %26, %39, %41, %53
  %.1.i = phi %struct.lua_TValue* [ %.luaO_nilobject_.i, %5 ], [ %20, %16 ], [ %40, %39 ], [ %33, %26 ], [ %25, %22 ], [ %56, %53 ], [ bitcast (%struct.lua_TValue.218* @luaO_nilobject_ to %struct.lua_TValue*), %41 ]
  %57 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 10
  %58 = bitcast %struct.lua_TValue** %57 to i64*
  %59 = load i64, i64* %58, align 8, !tbaa !50
  %60 = ptrtoint %struct.lua_TValue* %.1.i to i64
  %61 = sub i64 %60, %59
  br label %62

; <label>:62                                      ; preds = %._crit_edge, %index2adr.exit
  %63 = phi i64 [ %59, %index2adr.exit ], [ %.pre, %._crit_edge ]
  %func.0 = phi i64 [ %61, %index2adr.exit ], [ 0, %._crit_edge ]
  %64 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %65 = load %struct.lua_TValue*, %struct.lua_TValue** %64, align 8, !tbaa !1
  %66 = add nsw i32 %nargs, 1
  %67 = sext i32 %66 to i64
  %68 = sub nsw i64 0, %67
  %69 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %65, i64 %68
  %70 = getelementptr inbounds %struct.CallS, %struct.CallS* %c, i64 0, i32 0
  store %struct.lua_TValue* %69, %struct.lua_TValue** %70, align 8, !tbaa !51
  %71 = getelementptr inbounds %struct.CallS, %struct.CallS* %c, i64 0, i32 1
  store i32 %nresults, i32* %71, align 8, !tbaa !53
  %.cast = ptrtoint %struct.lua_TValue* %69 to i64
  %72 = sub i64 %.cast, %63
  %73 = call i32 @luaD_pcall(%struct.lua_State* %L, void (%struct.lua_State*, i8*)* nonnull @f_call, i8* %1, i64 %72, i64 %func.0) #1
  %74 = icmp eq i32 %nresults, -1
  br i1 %74, label %75, label %83

; <label>:75                                      ; preds = %62
  %76 = load %struct.lua_TValue*, %struct.lua_TValue** %64, align 8, !tbaa !1
  %77 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 7
  %78 = load %struct.CallInfo*, %struct.CallInfo** %77, align 8, !tbaa !13
  %79 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %78, i64 0, i32 2
  %80 = load %struct.lua_TValue*, %struct.lua_TValue** %79, align 8, !tbaa !14
  %81 = icmp ult %struct.lua_TValue* %76, %80
  br i1 %81, label %83, label %82

; <label>:82                                      ; preds = %75
  store %struct.lua_TValue* %76, %struct.lua_TValue** %79, align 8, !tbaa !14
  br label %83

; <label>:83                                      ; preds = %75, %82, %62
  call void @llvm.lifetime.end(i64 16, i8* %1) #1
  ret i32 %73
}

; Function Attrs: nounwind uwtable
define i32 @lua_cpcall(%struct.lua_State* %L, i32 (%struct.lua_State*)* %func, i8* %ud) #0 {
  %c = alloca %struct.CCallS, align 8
  %1 = bitcast %struct.CCallS* %c to i8*
  call void @llvm.lifetime.start(i64 16, i8* %1) #1
  %2 = getelementptr inbounds %struct.CCallS, %struct.CCallS* %c, i64 0, i32 0
  store i32 (%struct.lua_State*)* %func, i32 (%struct.lua_State*)** %2, align 8, !tbaa !54
  %3 = getelementptr inbounds %struct.CCallS, %struct.CCallS* %c, i64 0, i32 1
  store i8* %ud, i8** %3, align 8, !tbaa !56
  %4 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %5 = bitcast %struct.lua_TValue** %4 to i64*
  %6 = load i64, i64* %5, align 8, !tbaa !1
  %7 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 10
  %8 = bitcast %struct.lua_TValue** %7 to i64*
  %9 = load i64, i64* %8, align 8, !tbaa !50
  %10 = sub i64 %6, %9
  %11 = call i32 @luaD_pcall(%struct.lua_State* %L, void (%struct.lua_State*, i8*)* nonnull @f_Ccall, i8* %1, i64 %10, i64 0) #1
  call void @llvm.lifetime.end(i64 16, i8* %1) #1
  ret i32 %11
}

; Function Attrs: nounwind uwtable
define i32 @lua_load(%struct.lua_State* %L, i8* (%struct.lua_State*, i8*, i64*)* %reader, i8* %data, i8* %chunkname) #0 {
  %z = alloca %struct.Zio, align 8
  %1 = bitcast %struct.Zio* %z to i8*
  call void @llvm.lifetime.start(i64 40, i8* %1) #1
  %2 = icmp eq i8* %chunkname, null
  %.chunkname = select i1 %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0), i8* %chunkname
  call void @luaZ_init(%struct.lua_State* %L, %struct.Zio* nonnull %z, i8* (%struct.lua_State*, i8*, i64*)* %reader, i8* %data) #1
  %3 = call i32 @luaD_protectedparser(%struct.lua_State* %L, %struct.Zio* nonnull %z, i8* %.chunkname) #1
  call void @llvm.lifetime.end(i64 40, i8* %1) #1
  ret i32 %3
}

; Function Attrs: nounwind uwtable
define i32 @lua_dump(%struct.lua_State* %L, i32 (%struct.lua_State*, i8*, i64, i8*)* %writer, i8* %data) #0 {
  %1 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %2 = load %struct.lua_TValue*, %struct.lua_TValue** %1, align 8, !tbaa !1
  %3 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %2, i64 -1, i32 1
  %4 = load i32, i32* %3, align 4, !tbaa !10
  %5 = icmp eq i32 %4, 6
  br i1 %5, label %6, label %18

; <label>:6                                       ; preds = %0
  %7 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %2, i64 -1, i32 0, i32 0
  %8 = bitcast %union.GCObject** %7 to %union.Closure**
  %9 = load %union.Closure*, %union.Closure** %8, align 8, !tbaa !25
  %10 = getelementptr inbounds %union.Closure, %union.Closure* %9, i64 0, i32 0, i32 3
  %11 = load i8, i8* %10, align 1, !tbaa !35
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %18

; <label>:13                                      ; preds = %6
  %14 = getelementptr inbounds %union.Closure, %union.Closure* %9, i64 0, i32 0, i32 7
  %15 = bitcast i32 (%struct.lua_State*)** %14 to %struct.Proto**
  %16 = load %struct.Proto*, %struct.Proto** %15, align 8, !tbaa !57
  %17 = tail call i32 @luaU_dump(%struct.lua_State* %L, %struct.Proto* %16, i32 (%struct.lua_State*, i8*, i64, i8*)* %writer, i8* %data, i32 0) #1
  br label %18

; <label>:18                                      ; preds = %0, %6, %13
  %status.0 = phi i32 [ %17, %13 ], [ 1, %6 ], [ 1, %0 ]
  ret i32 %status.0
}

; Function Attrs: nounwind readonly uwtable
define i32 @lua_status(%struct.lua_State* nocapture readonly %L) #2 {
  %1 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 3
  %2 = load i8, i8* %1, align 1, !tbaa !59
  %3 = zext i8 %2 to i32
  ret i32 %3
}

; Function Attrs: nounwind uwtable
define i32 @lua_gc(%struct.lua_State* %L, i32 %what, i32 %data) #0 {
  %1 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 6
  %2 = load %struct.global_State*, %struct.global_State** %1, align 8, !tbaa !17
  switch i32 %what, label %.loopexit [
    i32 0, label %3
    i32 1, label %5
    i32 2, label %9
    i32 3, label %10
    i32 4, label %15
    i32 5, label %.preheader
    i32 6, label %31
    i32 7, label %34
  ]

; <label>:3                                       ; preds = %0
  %4 = getelementptr inbounds %struct.global_State, %struct.global_State* %2, i64 0, i32 13
  store i64 -3, i64* %4, align 8, !tbaa !24
  br label %.loopexit

; <label>:5                                       ; preds = %0
  %6 = getelementptr inbounds %struct.global_State, %struct.global_State* %2, i64 0, i32 14
  %7 = load i64, i64* %6, align 8, !tbaa !23
  %8 = getelementptr inbounds %struct.global_State, %struct.global_State* %2, i64 0, i32 13
  store i64 %7, i64* %8, align 8, !tbaa !24
  br label %.loopexit

; <label>:9                                       ; preds = %0
  tail call void @luaC_fullgc(%struct.lua_State* %L) #1
  br label %.loopexit

; <label>:10                                      ; preds = %0
  %11 = getelementptr inbounds %struct.global_State, %struct.global_State* %2, i64 0, i32 14
  %12 = load i64, i64* %11, align 8, !tbaa !23
  %13 = lshr i64 %12, 10
  %14 = trunc i64 %13 to i32
  br label %.loopexit

; <label>:15                                      ; preds = %0
  %16 = getelementptr inbounds %struct.global_State, %struct.global_State* %2, i64 0, i32 14
  %17 = load i64, i64* %16, align 8, !tbaa !23
  %.tr = trunc i64 %17 to i32
  %18 = and i32 %.tr, 1023
  br label %.loopexit

.preheader:                                       ; preds = %0
  %19 = sext i32 %data to i64
  %20 = shl nsw i64 %19, 10
  %21 = getelementptr inbounds %struct.global_State, %struct.global_State* %2, i64 0, i32 14
  %22 = load i64, i64* %21, align 8, !tbaa !23
  %23 = icmp ult i64 %22, %20
  %24 = sub i64 %22, %20
  %. = select i1 %23, i64 0, i64 %24
  %25 = getelementptr inbounds %struct.global_State, %struct.global_State* %2, i64 0, i32 13
  store i64 %., i64* %25, align 8
  %26 = getelementptr inbounds %struct.global_State, %struct.global_State* %2, i64 0, i32 4
  %27 = icmp ugt i64 %., %22
  br i1 %27, label %.loopexit, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %.preheader
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %._crit_edge
  tail call void @luaC_step(%struct.lua_State* %L) #1
  %28 = load i8, i8* %26, align 1, !tbaa !60
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %.loopexit.loopexit, label %._crit_edge

._crit_edge:                                      ; preds = %.lr.ph
  %.pre = load i64, i64* %25, align 8, !tbaa !24
  %.pre1 = load i64, i64* %21, align 8, !tbaa !23
  %30 = icmp ugt i64 %.pre, %.pre1
  br i1 %30, label %.loopexit.loopexit, label %.lr.ph

; <label>:31                                      ; preds = %0
  %32 = getelementptr inbounds %struct.global_State, %struct.global_State* %2, i64 0, i32 17
  %33 = load i32, i32* %32, align 4, !tbaa !61
  store i32 %data, i32* %32, align 4, !tbaa !61
  br label %.loopexit

; <label>:34                                      ; preds = %0
  %35 = getelementptr inbounds %struct.global_State, %struct.global_State* %2, i64 0, i32 18
  %36 = load i32, i32* %35, align 4, !tbaa !62
  store i32 %data, i32* %35, align 4, !tbaa !62
  br label %.loopexit

.loopexit.loopexit:                               ; preds = %._crit_edge, %.lr.ph
  %res.1.ph = phi i32 [ 0, %._crit_edge ], [ 1, %.lr.ph ]
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %.preheader, %0, %34, %31, %15, %10, %9, %5, %3
  %res.1 = phi i32 [ %36, %34 ], [ %33, %31 ], [ %18, %15 ], [ %14, %10 ], [ 0, %9 ], [ 0, %5 ], [ 0, %3 ], [ -1, %0 ], [ 0, %.preheader ], [ %res.1.ph, %.loopexit.loopexit ]
  ret i32 %res.1
}

; Function Attrs: nounwind uwtable
define i32 @lua_error(%struct.lua_State* %L) #0 {
  tail call void @luaG_errormsg(%struct.lua_State* %L) #1
  ret i32 0
}

; Function Attrs: nounwind uwtable
define i32 @lua_next(%struct.lua_State* %L, i32 %idx) #0 {
  %1 = icmp sgt i32 %idx, 0
  br i1 %1, label %2, label %11

; <label>:2                                       ; preds = %0
  %3 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 5
  %4 = load %struct.lua_TValue*, %struct.lua_TValue** %3, align 8, !tbaa !11
  %5 = add nsw i32 %idx, -1
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %4, i64 %6
  %8 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %9 = load %struct.lua_TValue*, %struct.lua_TValue** %8, align 8, !tbaa !1
  %10 = icmp ult %struct.lua_TValue* %7, %9
  %.luaO_nilobject_.i = select i1 %10, %struct.lua_TValue* %7, %struct.lua_TValue* bitcast (%struct.lua_TValue.218* @luaO_nilobject_ to %struct.lua_TValue*)
  br label %index2adr.exit

; <label>:11                                      ; preds = %0
  %12 = icmp sgt i32 %idx, -10000
  br i1 %12, label %13, label %18

; <label>:13                                      ; preds = %11
  %14 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %15 = load %struct.lua_TValue*, %struct.lua_TValue** %14, align 8, !tbaa !1
  %16 = sext i32 %idx to i64
  %17 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %15, i64 %16
  br label %index2adr.exit

; <label>:18                                      ; preds = %11
  switch i32 %idx, label %38 [
    i32 -10000, label %19
    i32 -10001, label %23
    i32 -10002, label %36
  ]

; <label>:19                                      ; preds = %18
  %20 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 6
  %21 = load %struct.global_State*, %struct.global_State** %20, align 8, !tbaa !17
  %22 = getelementptr inbounds %struct.global_State, %struct.global_State* %21, i64 0, i32 20
  br label %index2adr.exit

; <label>:23                                      ; preds = %18
  %24 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 7
  %25 = load %struct.CallInfo*, %struct.CallInfo** %24, align 8, !tbaa !13
  %26 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %25, i64 0, i32 1
  %27 = bitcast %struct.lua_TValue** %26 to %struct.CClosure***
  %28 = load %struct.CClosure**, %struct.CClosure*** %27, align 8, !tbaa !28
  %29 = load %struct.CClosure*, %struct.CClosure** %28, align 8, !tbaa !25
  %30 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 23
  %31 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %29, i64 0, i32 6
  %32 = bitcast %struct.Table** %31 to i64*
  %33 = load i64, i64* %32, align 8, !tbaa !29
  %34 = bitcast %struct.lua_TValue* %30 to i64*
  store i64 %33, i64* %34, align 8, !tbaa !25
  %35 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 23, i32 1
  store i32 5, i32* %35, align 4, !tbaa !10
  br label %index2adr.exit

; <label>:36                                      ; preds = %18
  %37 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 22
  br label %index2adr.exit

; <label>:38                                      ; preds = %18
  %39 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 7
  %40 = load %struct.CallInfo*, %struct.CallInfo** %39, align 8, !tbaa !13
  %41 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %40, i64 0, i32 1
  %42 = bitcast %struct.lua_TValue** %41 to %struct.CClosure***
  %43 = load %struct.CClosure**, %struct.CClosure*** %42, align 8, !tbaa !28
  %44 = load %struct.CClosure*, %struct.CClosure** %43, align 8, !tbaa !25
  %45 = sub nsw i32 -10002, %idx
  %46 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %44, i64 0, i32 4
  %47 = load i8, i8* %46, align 1, !tbaa !31
  %48 = zext i8 %47 to i32
  %49 = icmp sgt i32 %45, %48
  br i1 %49, label %index2adr.exit, label %50

; <label>:50                                      ; preds = %38
  %51 = add nsw i32 %45, -1
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %44, i64 0, i32 8, i64 %52
  br label %index2adr.exit

index2adr.exit:                                   ; preds = %2, %13, %19, %23, %36, %38, %50
  %.1.i = phi %struct.lua_TValue* [ %.luaO_nilobject_.i, %2 ], [ %17, %13 ], [ %37, %36 ], [ %30, %23 ], [ %22, %19 ], [ %53, %50 ], [ bitcast (%struct.lua_TValue.218* @luaO_nilobject_ to %struct.lua_TValue*), %38 ]
  %54 = bitcast %struct.lua_TValue* %.1.i to %struct.Table**
  %55 = load %struct.Table*, %struct.Table** %54, align 8, !tbaa !25
  %56 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %57 = load %struct.lua_TValue*, %struct.lua_TValue** %56, align 8, !tbaa !1
  %58 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %57, i64 -1
  %59 = tail call i32 @luaH_next(%struct.lua_State* %L, %struct.Table* %55, %struct.lua_TValue* %58) #1
  %60 = icmp eq i32 %59, 0
  %61 = load %struct.lua_TValue*, %struct.lua_TValue** %56, align 8, !tbaa !1
  %62 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %61, i64 -1
  %63 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %61, i64 1
  %storemerge = select i1 %60, %struct.lua_TValue* %62, %struct.lua_TValue* %63
  store %struct.lua_TValue* %storemerge, %struct.lua_TValue** %56, align 8, !tbaa !1
  ret i32 %59
}

; Function Attrs: nounwind uwtable
define void @lua_concat(%struct.lua_State* %L, i32 %n) #0 {
  %1 = icmp sgt i32 %n, 1
  br i1 %1, label %2, label %27

; <label>:2                                       ; preds = %0
  %3 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 6
  %4 = load %struct.global_State*, %struct.global_State** %3, align 8, !tbaa !17
  %5 = getelementptr inbounds %struct.global_State, %struct.global_State* %4, i64 0, i32 14
  %6 = load i64, i64* %5, align 8, !tbaa !23
  %7 = getelementptr inbounds %struct.global_State, %struct.global_State* %4, i64 0, i32 13
  %8 = load i64, i64* %7, align 8, !tbaa !24
  %9 = icmp ult i64 %6, %8
  br i1 %9, label %11, label %10

; <label>:10                                      ; preds = %2
  tail call void @luaC_step(%struct.lua_State* %L) #1
  br label %11

; <label>:11                                      ; preds = %2, %10
  %12 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %13 = bitcast %struct.lua_TValue** %12 to i64*
  %14 = load i64, i64* %13, align 8, !tbaa !1
  %15 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 5
  %16 = bitcast %struct.lua_TValue** %15 to i64*
  %17 = load i64, i64* %16, align 8, !tbaa !11
  %18 = sub i64 %14, %17
  %19 = lshr exact i64 %18, 4
  %20 = trunc i64 %19 to i32
  %21 = add nsw i32 %20, -1
  tail call void bitcast (void (%struct.lua_State.215*, i32, i32)* @luaV_concat to void (%struct.lua_State*, i32, i32)*)(%struct.lua_State* %L, i32 %n, i32 %21) #1
  %22 = add nsw i32 %n, -1
  %23 = load %struct.lua_TValue*, %struct.lua_TValue** %12, align 8, !tbaa !1
  %24 = sext i32 %22 to i64
  %25 = sub nsw i64 0, %24
  %26 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %23, i64 %25
  store %struct.lua_TValue* %26, %struct.lua_TValue** %12, align 8, !tbaa !1
  br label %37

; <label>:27                                      ; preds = %0
  %28 = icmp eq i32 %n, 0
  br i1 %28, label %29, label %37

; <label>:29                                      ; preds = %27
  %30 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %31 = load %struct.lua_TValue*, %struct.lua_TValue** %30, align 8, !tbaa !1
  %32 = tail call %union.TString* @luaS_newlstr(%struct.lua_State* %L, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), i64 0) #1
  %33 = bitcast %struct.lua_TValue* %31 to %union.TString**
  store %union.TString* %32, %union.TString** %33, align 8, !tbaa !25
  %34 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %31, i64 0, i32 1
  store i32 4, i32* %34, align 4, !tbaa !10
  %35 = load %struct.lua_TValue*, %struct.lua_TValue** %30, align 8, !tbaa !1
  %36 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %35, i64 1
  store %struct.lua_TValue* %36, %struct.lua_TValue** %30, align 8, !tbaa !1
  br label %37

; <label>:37                                      ; preds = %27, %29, %11
  ret void
}

; Function Attrs: nounwind uwtable
define i8* (i8*, i8*, i64, i64)* @lua_getallocf(%struct.lua_State* nocapture readonly %L, i8** %ud) #0 {
  %1 = icmp eq i8** %ud, null
  %.pre = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 6
  br i1 %1, label %._crit_edge, label %2

; <label>:2                                       ; preds = %0
  %3 = load %struct.global_State*, %struct.global_State** %.pre, align 8, !tbaa !17
  %4 = getelementptr inbounds %struct.global_State, %struct.global_State* %3, i64 0, i32 2
  %5 = bitcast i8** %4 to i64*
  %6 = load i64, i64* %5, align 8, !tbaa !63
  %7 = bitcast i8** %ud to i64*
  store i64 %6, i64* %7, align 8, !tbaa !25
  br label %._crit_edge

._crit_edge:                                      ; preds = %0, %2
  %8 = load %struct.global_State*, %struct.global_State** %.pre, align 8, !tbaa !17
  %9 = getelementptr inbounds %struct.global_State, %struct.global_State* %8, i64 0, i32 1
  %10 = load i8* (i8*, i8*, i64, i64)*, i8* (i8*, i8*, i64, i64)** %9, align 8, !tbaa !64
  ret i8* (i8*, i8*, i64, i64)* %10
}

; Function Attrs: nounwind uwtable
define void @lua_setallocf(%struct.lua_State* nocapture readonly %L, i8* (i8*, i8*, i64, i64)* %f, i8* %ud) #0 {
  %1 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 6
  %2 = load %struct.global_State*, %struct.global_State** %1, align 8, !tbaa !17
  %3 = getelementptr inbounds %struct.global_State, %struct.global_State* %2, i64 0, i32 2
  store i8* %ud, i8** %3, align 8, !tbaa !63
  %4 = getelementptr inbounds %struct.global_State, %struct.global_State* %2, i64 0, i32 1
  store i8* (i8*, i8*, i64, i64)* %f, i8* (i8*, i8*, i64, i64)** %4, align 8, !tbaa !64
  ret void
}

; Function Attrs: nounwind uwtable
define i8* @lua_newuserdata(%struct.lua_State* %L, i64 %size) #0 {
  %1 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 6
  %2 = load %struct.global_State*, %struct.global_State** %1, align 8, !tbaa !17
  %3 = getelementptr inbounds %struct.global_State, %struct.global_State* %2, i64 0, i32 14
  %4 = load i64, i64* %3, align 8, !tbaa !23
  %5 = getelementptr inbounds %struct.global_State, %struct.global_State* %2, i64 0, i32 13
  %6 = load i64, i64* %5, align 8, !tbaa !24
  %7 = icmp ult i64 %4, %6
  br i1 %7, label %9, label %8

; <label>:8                                       ; preds = %0
  tail call void @luaC_step(%struct.lua_State* %L) #1
  br label %9

; <label>:9                                       ; preds = %0, %8
  %10 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 7
  %11 = load %struct.CallInfo*, %struct.CallInfo** %10, align 8, !tbaa !13
  %12 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 12
  %13 = load %struct.CallInfo*, %struct.CallInfo** %12, align 8, !tbaa !32
  %14 = icmp eq %struct.CallInfo* %11, %13
  br i1 %14, label %15, label %18

; <label>:15                                      ; preds = %9
  %16 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 22, i32 0, i32 0
  %17 = bitcast %union.GCObject** %16 to %struct.Table**
  br label %getcurrenv.exit

; <label>:18                                      ; preds = %9
  %19 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %11, i64 0, i32 1
  %20 = bitcast %struct.lua_TValue** %19 to %struct.CClosure***
  %21 = load %struct.CClosure**, %struct.CClosure*** %20, align 8, !tbaa !28
  %22 = load %struct.CClosure*, %struct.CClosure** %21, align 8, !tbaa !25
  %23 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %22, i64 0, i32 6
  br label %getcurrenv.exit

getcurrenv.exit:                                  ; preds = %15, %18
  %.0.in.i = phi %struct.Table** [ %17, %15 ], [ %23, %18 ]
  %.0.i = load %struct.Table*, %struct.Table** %.0.in.i, align 8
  %24 = tail call %union.Udata* @luaS_newudata(%struct.lua_State* %L, i64 %size, %struct.Table* %.0.i) #1
  %25 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %26 = load %struct.lua_TValue*, %struct.lua_TValue** %25, align 8, !tbaa !1
  %27 = bitcast %struct.lua_TValue* %26 to %union.Udata**
  store %union.Udata* %24, %union.Udata** %27, align 8, !tbaa !25
  %28 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %26, i64 0, i32 1
  store i32 7, i32* %28, align 4, !tbaa !10
  %29 = load %struct.lua_TValue*, %struct.lua_TValue** %25, align 8, !tbaa !1
  %30 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %29, i64 1
  store %struct.lua_TValue* %30, %struct.lua_TValue** %25, align 8, !tbaa !1
  %31 = getelementptr inbounds %union.Udata, %union.Udata* %24, i64 1
  %32 = bitcast %union.Udata* %31 to i8*
  ret i8* %32
}

; Function Attrs: nounwind uwtable
define i8* @lua_getupvalue(%struct.lua_State* nocapture %L, i32 %funcindex, i32 %n) #0 {
  %1 = icmp sgt i32 %funcindex, 0
  br i1 %1, label %2, label %11

; <label>:2                                       ; preds = %0
  %3 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 5
  %4 = load %struct.lua_TValue*, %struct.lua_TValue** %3, align 8, !tbaa !11
  %5 = add nsw i32 %funcindex, -1
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %4, i64 %6
  %8 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %9 = load %struct.lua_TValue*, %struct.lua_TValue** %8, align 8, !tbaa !1
  %10 = icmp ult %struct.lua_TValue* %7, %9
  %.luaO_nilobject_.i = select i1 %10, %struct.lua_TValue* %7, %struct.lua_TValue* bitcast (%struct.lua_TValue.218* @luaO_nilobject_ to %struct.lua_TValue*)
  br label %index2adr.exit

; <label>:11                                      ; preds = %0
  %12 = icmp sgt i32 %funcindex, -10000
  br i1 %12, label %13, label %18

; <label>:13                                      ; preds = %11
  %14 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %15 = load %struct.lua_TValue*, %struct.lua_TValue** %14, align 8, !tbaa !1
  %16 = sext i32 %funcindex to i64
  %17 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %15, i64 %16
  br label %index2adr.exit

; <label>:18                                      ; preds = %11
  switch i32 %funcindex, label %38 [
    i32 -10000, label %19
    i32 -10001, label %23
    i32 -10002, label %36
  ]

; <label>:19                                      ; preds = %18
  %20 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 6
  %21 = load %struct.global_State*, %struct.global_State** %20, align 8, !tbaa !17
  %22 = getelementptr inbounds %struct.global_State, %struct.global_State* %21, i64 0, i32 20
  br label %index2adr.exit

; <label>:23                                      ; preds = %18
  %24 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 7
  %25 = load %struct.CallInfo*, %struct.CallInfo** %24, align 8, !tbaa !13
  %26 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %25, i64 0, i32 1
  %27 = bitcast %struct.lua_TValue** %26 to %struct.CClosure***
  %28 = load %struct.CClosure**, %struct.CClosure*** %27, align 8, !tbaa !28
  %29 = load %struct.CClosure*, %struct.CClosure** %28, align 8, !tbaa !25
  %30 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 23
  %31 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %29, i64 0, i32 6
  %32 = bitcast %struct.Table** %31 to i64*
  %33 = load i64, i64* %32, align 8, !tbaa !29
  %34 = bitcast %struct.lua_TValue* %30 to i64*
  store i64 %33, i64* %34, align 8, !tbaa !25
  %35 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 23, i32 1
  store i32 5, i32* %35, align 4, !tbaa !10
  br label %index2adr.exit

; <label>:36                                      ; preds = %18
  %37 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 22
  br label %index2adr.exit

; <label>:38                                      ; preds = %18
  %39 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 7
  %40 = load %struct.CallInfo*, %struct.CallInfo** %39, align 8, !tbaa !13
  %41 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %40, i64 0, i32 1
  %42 = bitcast %struct.lua_TValue** %41 to %struct.CClosure***
  %43 = load %struct.CClosure**, %struct.CClosure*** %42, align 8, !tbaa !28
  %44 = load %struct.CClosure*, %struct.CClosure** %43, align 8, !tbaa !25
  %45 = sub nsw i32 -10002, %funcindex
  %46 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %44, i64 0, i32 4
  %47 = load i8, i8* %46, align 1, !tbaa !31
  %48 = zext i8 %47 to i32
  %49 = icmp sgt i32 %45, %48
  br i1 %49, label %index2adr.exit, label %50

; <label>:50                                      ; preds = %38
  %51 = add nsw i32 %45, -1
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %44, i64 0, i32 8, i64 %52
  br label %index2adr.exit

index2adr.exit:                                   ; preds = %2, %13, %19, %23, %36, %38, %50
  %.1.i = phi %struct.lua_TValue* [ %.luaO_nilobject_.i, %2 ], [ %17, %13 ], [ %37, %36 ], [ %30, %23 ], [ %22, %19 ], [ %53, %50 ], [ bitcast (%struct.lua_TValue.218* @luaO_nilobject_ to %struct.lua_TValue*), %38 ]
  %54 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %.1.i, i64 0, i32 1
  %55 = load i32, i32* %54, align 4, !tbaa !10
  %56 = icmp eq i32 %55, 6
  br i1 %56, label %57, label %aux_upvalue.exit.thread

; <label>:57                                      ; preds = %index2adr.exit
  %58 = bitcast %struct.lua_TValue* %.1.i to %union.Closure**
  %59 = load %union.Closure*, %union.Closure** %58, align 8, !tbaa !25
  %60 = getelementptr inbounds %union.Closure, %union.Closure* %59, i64 0, i32 0, i32 3
  %61 = load i8, i8* %60, align 1, !tbaa !35
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %74, label %63

; <label>:63                                      ; preds = %57
  %64 = icmp sgt i32 %n, 0
  br i1 %64, label %65, label %aux_upvalue.exit.thread

; <label>:65                                      ; preds = %63
  %66 = getelementptr inbounds %union.Closure, %union.Closure* %59, i64 0, i32 0, i32 4
  %67 = load i8, i8* %66, align 1, !tbaa !31
  %68 = zext i8 %67 to i32
  %69 = icmp slt i32 %68, %n
  br i1 %69, label %aux_upvalue.exit.thread, label %aux_upvalue.exit.thread3

aux_upvalue.exit.thread3:                         ; preds = %65
  %70 = add nsw i32 %n, -1
  %71 = sext i32 %70 to i64
  %72 = getelementptr inbounds %union.Closure, %union.Closure* %59, i64 0, i32 0, i32 8, i64 %71
  %73 = ptrtoint %struct.lua_TValue* %72 to i64
  br label %98

; <label>:74                                      ; preds = %57
  %75 = getelementptr inbounds %union.Closure, %union.Closure* %59, i64 0, i32 0, i32 7
  %76 = bitcast i32 (%struct.lua_State*)** %75 to %struct.Proto**
  %77 = load %struct.Proto*, %struct.Proto** %76, align 8, !tbaa !57
  %78 = icmp sgt i32 %n, 0
  br i1 %78, label %79, label %aux_upvalue.exit.thread

; <label>:79                                      ; preds = %74
  %80 = getelementptr inbounds %struct.Proto, %struct.Proto* %77, i64 0, i32 10
  %81 = load i32, i32* %80, align 4, !tbaa !65
  %82 = icmp slt i32 %81, %n
  br i1 %82, label %aux_upvalue.exit.thread, label %aux_upvalue.exit

aux_upvalue.exit:                                 ; preds = %79
  %83 = add nsw i32 %n, -1
  %84 = sext i32 %83 to i64
  %85 = getelementptr inbounds %union.Closure, %union.Closure* %59, i64 0, i32 0, i32 8
  %86 = bitcast [1 x %struct.lua_TValue]* %85 to [1 x %struct.UpVal*]*
  %87 = getelementptr inbounds [1 x %struct.UpVal*], [1 x %struct.UpVal*]* %86, i64 0, i64 %84
  %88 = load %struct.UpVal*, %struct.UpVal** %87, align 8, !tbaa !25
  %89 = getelementptr inbounds %struct.UpVal, %struct.UpVal* %88, i64 0, i32 3
  %90 = bitcast %struct.lua_TValue** %89 to i64*
  %91 = load i64, i64* %90, align 8, !tbaa !67
  %92 = getelementptr inbounds %struct.Proto, %struct.Proto* %77, i64 0, i32 8
  %93 = load %union.TString**, %union.TString*** %92, align 8, !tbaa !68
  %94 = getelementptr inbounds %union.TString*, %union.TString** %93, i64 %84
  %95 = load %union.TString*, %union.TString** %94, align 8, !tbaa !25
  %96 = getelementptr inbounds %union.TString, %union.TString* %95, i64 1
  %97 = bitcast %union.TString* %96 to i8*
  br label %98

; <label>:98                                      ; preds = %aux_upvalue.exit, %aux_upvalue.exit.thread3
  %.1.i.15 = phi i8* [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), %aux_upvalue.exit.thread3 ], [ %97, %aux_upvalue.exit ]
  %val.sroa.0.04 = phi i64 [ %73, %aux_upvalue.exit.thread3 ], [ %91, %aux_upvalue.exit ]
  %99 = inttoptr i64 %val.sroa.0.04 to %struct.lua_TValue*
  %100 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %101 = load %struct.lua_TValue*, %struct.lua_TValue** %100, align 8, !tbaa !1
  %102 = inttoptr i64 %val.sroa.0.04 to i64*
  %103 = bitcast %struct.lua_TValue* %101 to i64*
  %104 = load i64, i64* %102, align 8
  store i64 %104, i64* %103, align 8
  %105 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %99, i64 0, i32 1
  %106 = load i32, i32* %105, align 4, !tbaa !10
  %107 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %101, i64 0, i32 1
  store i32 %106, i32* %107, align 4, !tbaa !10
  %108 = load %struct.lua_TValue*, %struct.lua_TValue** %100, align 8, !tbaa !1
  %109 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %108, i64 1
  store %struct.lua_TValue* %109, %struct.lua_TValue** %100, align 8, !tbaa !1
  br label %aux_upvalue.exit.thread

aux_upvalue.exit.thread:                          ; preds = %74, %79, %63, %65, %index2adr.exit, %98
  %.1.i.12 = phi i8* [ %.1.i.15, %98 ], [ null, %index2adr.exit ], [ null, %65 ], [ null, %63 ], [ null, %79 ], [ null, %74 ]
  ret i8* %.1.i.12
}

; Function Attrs: nounwind uwtable
define i8* @lua_setupvalue(%struct.lua_State* %L, i32 %funcindex, i32 %n) #0 {
  %1 = icmp sgt i32 %funcindex, 0
  br i1 %1, label %2, label %11

; <label>:2                                       ; preds = %0
  %3 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 5
  %4 = load %struct.lua_TValue*, %struct.lua_TValue** %3, align 8, !tbaa !11
  %5 = add nsw i32 %funcindex, -1
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %4, i64 %6
  %8 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %9 = load %struct.lua_TValue*, %struct.lua_TValue** %8, align 8, !tbaa !1
  %10 = icmp ult %struct.lua_TValue* %7, %9
  %.luaO_nilobject_.i = select i1 %10, %struct.lua_TValue* %7, %struct.lua_TValue* bitcast (%struct.lua_TValue.218* @luaO_nilobject_ to %struct.lua_TValue*)
  br label %index2adr.exit

; <label>:11                                      ; preds = %0
  %12 = icmp sgt i32 %funcindex, -10000
  br i1 %12, label %13, label %18

; <label>:13                                      ; preds = %11
  %14 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %15 = load %struct.lua_TValue*, %struct.lua_TValue** %14, align 8, !tbaa !1
  %16 = sext i32 %funcindex to i64
  %17 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %15, i64 %16
  br label %index2adr.exit

; <label>:18                                      ; preds = %11
  switch i32 %funcindex, label %38 [
    i32 -10000, label %19
    i32 -10001, label %23
    i32 -10002, label %36
  ]

; <label>:19                                      ; preds = %18
  %20 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 6
  %21 = load %struct.global_State*, %struct.global_State** %20, align 8, !tbaa !17
  %22 = getelementptr inbounds %struct.global_State, %struct.global_State* %21, i64 0, i32 20
  br label %index2adr.exit

; <label>:23                                      ; preds = %18
  %24 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 7
  %25 = load %struct.CallInfo*, %struct.CallInfo** %24, align 8, !tbaa !13
  %26 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %25, i64 0, i32 1
  %27 = bitcast %struct.lua_TValue** %26 to %struct.CClosure***
  %28 = load %struct.CClosure**, %struct.CClosure*** %27, align 8, !tbaa !28
  %29 = load %struct.CClosure*, %struct.CClosure** %28, align 8, !tbaa !25
  %30 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 23
  %31 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %29, i64 0, i32 6
  %32 = bitcast %struct.Table** %31 to i64*
  %33 = load i64, i64* %32, align 8, !tbaa !29
  %34 = bitcast %struct.lua_TValue* %30 to i64*
  store i64 %33, i64* %34, align 8, !tbaa !25
  %35 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 23, i32 1
  store i32 5, i32* %35, align 4, !tbaa !10
  br label %index2adr.exit

; <label>:36                                      ; preds = %18
  %37 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 22
  br label %index2adr.exit

; <label>:38                                      ; preds = %18
  %39 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 7
  %40 = load %struct.CallInfo*, %struct.CallInfo** %39, align 8, !tbaa !13
  %41 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %40, i64 0, i32 1
  %42 = bitcast %struct.lua_TValue** %41 to %struct.CClosure***
  %43 = load %struct.CClosure**, %struct.CClosure*** %42, align 8, !tbaa !28
  %44 = load %struct.CClosure*, %struct.CClosure** %43, align 8, !tbaa !25
  %45 = sub nsw i32 -10002, %funcindex
  %46 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %44, i64 0, i32 4
  %47 = load i8, i8* %46, align 1, !tbaa !31
  %48 = zext i8 %47 to i32
  %49 = icmp sgt i32 %45, %48
  br i1 %49, label %index2adr.exit, label %50

; <label>:50                                      ; preds = %38
  %51 = add nsw i32 %45, -1
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %44, i64 0, i32 8, i64 %52
  br label %index2adr.exit

index2adr.exit:                                   ; preds = %2, %13, %19, %23, %36, %38, %50
  %.1.i = phi %struct.lua_TValue* [ %.luaO_nilobject_.i, %2 ], [ %17, %13 ], [ %37, %36 ], [ %30, %23 ], [ %22, %19 ], [ %53, %50 ], [ bitcast (%struct.lua_TValue.218* @luaO_nilobject_ to %struct.lua_TValue*), %38 ]
  %54 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %.1.i, i64 0, i32 1
  %55 = load i32, i32* %54, align 4, !tbaa !10
  %56 = icmp eq i32 %55, 6
  br i1 %56, label %57, label %aux_upvalue.exit.thread

; <label>:57                                      ; preds = %index2adr.exit
  %58 = bitcast %struct.lua_TValue* %.1.i to %union.Closure**
  %59 = load %union.Closure*, %union.Closure** %58, align 8, !tbaa !25
  %60 = getelementptr inbounds %union.Closure, %union.Closure* %59, i64 0, i32 0, i32 3
  %61 = load i8, i8* %60, align 1, !tbaa !35
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %74, label %63

; <label>:63                                      ; preds = %57
  %64 = icmp sgt i32 %n, 0
  br i1 %64, label %65, label %aux_upvalue.exit.thread

; <label>:65                                      ; preds = %63
  %66 = getelementptr inbounds %union.Closure, %union.Closure* %59, i64 0, i32 0, i32 4
  %67 = load i8, i8* %66, align 1, !tbaa !31
  %68 = zext i8 %67 to i32
  %69 = icmp slt i32 %68, %n
  br i1 %69, label %aux_upvalue.exit.thread, label %aux_upvalue.exit.thread3

aux_upvalue.exit.thread3:                         ; preds = %65
  %70 = add nsw i32 %n, -1
  %71 = sext i32 %70 to i64
  %72 = getelementptr inbounds %union.Closure, %union.Closure* %59, i64 0, i32 0, i32 8, i64 %71
  %73 = ptrtoint %struct.lua_TValue* %72 to i64
  br label %98

; <label>:74                                      ; preds = %57
  %75 = getelementptr inbounds %union.Closure, %union.Closure* %59, i64 0, i32 0, i32 7
  %76 = bitcast i32 (%struct.lua_State*)** %75 to %struct.Proto**
  %77 = load %struct.Proto*, %struct.Proto** %76, align 8, !tbaa !57
  %78 = icmp sgt i32 %n, 0
  br i1 %78, label %79, label %aux_upvalue.exit.thread

; <label>:79                                      ; preds = %74
  %80 = getelementptr inbounds %struct.Proto, %struct.Proto* %77, i64 0, i32 10
  %81 = load i32, i32* %80, align 4, !tbaa !65
  %82 = icmp slt i32 %81, %n
  br i1 %82, label %aux_upvalue.exit.thread, label %aux_upvalue.exit

aux_upvalue.exit:                                 ; preds = %79
  %83 = add nsw i32 %n, -1
  %84 = sext i32 %83 to i64
  %85 = getelementptr inbounds %union.Closure, %union.Closure* %59, i64 0, i32 0, i32 8
  %86 = bitcast [1 x %struct.lua_TValue]* %85 to [1 x %struct.UpVal*]*
  %87 = getelementptr inbounds [1 x %struct.UpVal*], [1 x %struct.UpVal*]* %86, i64 0, i64 %84
  %88 = load %struct.UpVal*, %struct.UpVal** %87, align 8, !tbaa !25
  %89 = getelementptr inbounds %struct.UpVal, %struct.UpVal* %88, i64 0, i32 3
  %90 = bitcast %struct.lua_TValue** %89 to i64*
  %91 = load i64, i64* %90, align 8, !tbaa !67
  %92 = getelementptr inbounds %struct.Proto, %struct.Proto* %77, i64 0, i32 8
  %93 = load %union.TString**, %union.TString*** %92, align 8, !tbaa !68
  %94 = getelementptr inbounds %union.TString*, %union.TString** %93, i64 %84
  %95 = load %union.TString*, %union.TString** %94, align 8, !tbaa !25
  %96 = getelementptr inbounds %union.TString, %union.TString* %95, i64 1
  %97 = bitcast %union.TString* %96 to i8*
  br label %98

; <label>:98                                      ; preds = %aux_upvalue.exit, %aux_upvalue.exit.thread3
  %.1.i.15 = phi i8* [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), %aux_upvalue.exit.thread3 ], [ %97, %aux_upvalue.exit ]
  %val.sroa.0.04 = phi i64 [ %73, %aux_upvalue.exit.thread3 ], [ %91, %aux_upvalue.exit ]
  %99 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %100 = load %struct.lua_TValue*, %struct.lua_TValue** %99, align 8, !tbaa !1
  %101 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %100, i64 -1
  store %struct.lua_TValue* %101, %struct.lua_TValue** %99, align 8, !tbaa !1
  %102 = inttoptr i64 %val.sroa.0.04 to %struct.lua_TValue*
  %103 = bitcast %struct.lua_TValue* %101 to i64*
  %104 = inttoptr i64 %val.sroa.0.04 to i64*
  %105 = load i64, i64* %103, align 8
  store i64 %105, i64* %104, align 8
  %106 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %100, i64 -1, i32 1
  %107 = load i32, i32* %106, align 4, !tbaa !10
  %108 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %102, i64 0, i32 1
  store i32 %107, i32* %108, align 4, !tbaa !10
  %109 = load %struct.lua_TValue*, %struct.lua_TValue** %99, align 8, !tbaa !1
  %110 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %109, i64 0, i32 1
  %111 = load i32, i32* %110, align 4, !tbaa !10
  %112 = icmp sgt i32 %111, 3
  br i1 %112, label %113, label %aux_upvalue.exit.thread

; <label>:113                                     ; preds = %98
  %114 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %109, i64 0, i32 0, i32 0
  %115 = load %union.GCObject*, %union.GCObject** %114, align 8, !tbaa !25
  %116 = getelementptr inbounds %union.GCObject, %union.GCObject* %115, i64 0, i32 0, i32 2
  %117 = load i8, i8* %116, align 1, !tbaa !33
  %118 = and i8 %117, 3
  %119 = icmp eq i8 %118, 0
  br i1 %119, label %aux_upvalue.exit.thread, label %120

; <label>:120                                     ; preds = %113
  %121 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %.1.i, i64 0, i32 0, i32 0
  %122 = load %union.GCObject*, %union.GCObject** %121, align 8, !tbaa !25
  %123 = getelementptr inbounds %union.GCObject, %union.GCObject* %122, i64 0, i32 0, i32 2
  %124 = load i8, i8* %123, align 1, !tbaa !33
  %125 = and i8 %124, 4
  %126 = icmp eq i8 %125, 0
  br i1 %126, label %aux_upvalue.exit.thread, label %127

; <label>:127                                     ; preds = %120
  tail call void @luaC_barrierf(%struct.lua_State* %L, %union.GCObject* %122, %union.GCObject* %115) #1
  br label %aux_upvalue.exit.thread

aux_upvalue.exit.thread:                          ; preds = %74, %79, %63, %65, %index2adr.exit, %120, %113, %98, %127
  %.1.i.12 = phi i8* [ %.1.i.15, %120 ], [ %.1.i.15, %113 ], [ %.1.i.15, %98 ], [ %.1.i.15, %127 ], [ null, %index2adr.exit ], [ null, %65 ], [ null, %63 ], [ null, %79 ], [ null, %74 ]
  ret i8* %.1.i.12
}

; Function Attrs: nounwind uwtable
define internal void @f_call(%struct.lua_State* %L, i8* nocapture readonly %ud) #0 {
  %1 = bitcast i8* %ud to %struct.lua_TValue**
  %2 = load %struct.lua_TValue*, %struct.lua_TValue** %1, align 8, !tbaa !51
  %3 = getelementptr inbounds i8, i8* %ud, i64 8
  %4 = bitcast i8* %3 to i32*
  %5 = load i32, i32* %4, align 4, !tbaa !53
  tail call void @luaD_call(%struct.lua_State* %L, %struct.lua_TValue* %2, i32 %5) #1
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @f_Ccall(%struct.lua_State* %L, i8* nocapture readonly %ud) #0 {
  %1 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 7
  %2 = load %struct.CallInfo*, %struct.CallInfo** %1, align 8, !tbaa !13
  %3 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 12
  %4 = load %struct.CallInfo*, %struct.CallInfo** %3, align 8, !tbaa !32
  %5 = icmp eq %struct.CallInfo* %2, %4
  br i1 %5, label %6, label %9

; <label>:6                                       ; preds = %0
  %7 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 22, i32 0, i32 0
  %8 = bitcast %union.GCObject** %7 to %struct.Table**
  br label %getcurrenv.exit

; <label>:9                                       ; preds = %0
  %10 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %2, i64 0, i32 1
  %11 = bitcast %struct.lua_TValue** %10 to %struct.CClosure***
  %12 = load %struct.CClosure**, %struct.CClosure*** %11, align 8, !tbaa !28
  %13 = load %struct.CClosure*, %struct.CClosure** %12, align 8, !tbaa !25
  %14 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %13, i64 0, i32 6
  br label %getcurrenv.exit

getcurrenv.exit:                                  ; preds = %6, %9
  %.0.in.i = phi %struct.Table** [ %8, %6 ], [ %14, %9 ]
  %.0.i = load %struct.Table*, %struct.Table** %.0.in.i, align 8
  %15 = tail call %union.Closure* bitcast (%union.Closure.118* (%struct.lua_State.115*, i32, %struct.Table.108*)* @luaF_newCclosure to %union.Closure* (%struct.lua_State*, i32, %struct.Table*)*)(%struct.lua_State* %L, i32 0, %struct.Table* %.0.i) #1
  %16 = bitcast i8* %ud to i64*
  %17 = load i64, i64* %16, align 8, !tbaa !54
  %18 = getelementptr inbounds %union.Closure, %union.Closure* %15, i64 0, i32 0, i32 7
  %19 = bitcast i32 (%struct.lua_State*)** %18 to i64*
  store i64 %17, i64* %19, align 8, !tbaa !44
  %20 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %21 = load %struct.lua_TValue*, %struct.lua_TValue** %20, align 8, !tbaa !1
  %22 = bitcast %struct.lua_TValue* %21 to %union.Closure**
  store %union.Closure* %15, %union.Closure** %22, align 8, !tbaa !25
  %23 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %21, i64 0, i32 1
  store i32 6, i32* %23, align 4, !tbaa !10
  %24 = load %struct.lua_TValue*, %struct.lua_TValue** %20, align 8, !tbaa !1
  %25 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %24, i64 1
  store %struct.lua_TValue* %25, %struct.lua_TValue** %20, align 8, !tbaa !1
  %26 = getelementptr inbounds i8, i8* %ud, i64 8
  %27 = bitcast i8* %26 to i64*
  %28 = load i64, i64* %27, align 8, !tbaa !56
  %29 = bitcast %struct.lua_TValue* %25 to i64*
  store i64 %28, i64* %29, align 8, !tbaa !25
  %30 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %24, i64 1, i32 1
  store i32 2, i32* %30, align 4, !tbaa !10
  %31 = load %struct.lua_TValue*, %struct.lua_TValue** %20, align 8, !tbaa !1
  %32 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %31, i64 1
  store %struct.lua_TValue* %32, %struct.lua_TValue** %20, align 8, !tbaa !1
  %33 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %31, i64 -1
  tail call void @luaD_call(%struct.lua_State* %L, %struct.lua_TValue* %33, i32 0) #1
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @luaL_argerror(%struct.lua_State* %L, i32 %narg, i8* %extramsg) #0 {
  %ar = alloca %struct.lua_Debug, align 8
  %1 = bitcast %struct.lua_Debug* %ar to i8*
  call void @llvm.lifetime.start(i64 120, i8* %1) #1
  %2 = call i32 @lua_getstack(%struct.lua_State* %L, i32 0, %struct.lua_Debug* nonnull %ar) #1
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %4, label %6

; <label>:4                                       ; preds = %0
  %5 = call i32 (%struct.lua_State*, i8*, ...) @luaL_error(%struct.lua_State* %L, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.4, i64 0, i64 0), i32 %narg, i8* %extramsg)
  br label %27

; <label>:6                                       ; preds = %0
  %7 = call i32 @lua_getinfo(%struct.lua_State* %L, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.5, i64 0, i64 0), %struct.lua_Debug* nonnull %ar) #1
  %8 = getelementptr inbounds %struct.lua_Debug, %struct.lua_Debug* %ar, i64 0, i32 2
  %9 = load i8*, i8** %8, align 8, !tbaa !69
  %10 = call i32 @strcmp(i8* %9, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2.6, i64 0, i64 0)) #1
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %19

; <label>:12                                      ; preds = %6
  %13 = add nsw i32 %narg, -1
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %19

; <label>:15                                      ; preds = %12
  %16 = getelementptr inbounds %struct.lua_Debug, %struct.lua_Debug* %ar, i64 0, i32 1
  %17 = load i8*, i8** %16, align 8, !tbaa !71
  %18 = call i32 (%struct.lua_State*, i8*, ...) @luaL_error(%struct.lua_State* %L, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.3.7, i64 0, i64 0), i8* %17, i8* %extramsg)
  br label %27

; <label>:19                                      ; preds = %12, %6
  %.06 = phi i32 [ %13, %12 ], [ %narg, %6 ]
  %20 = getelementptr inbounds %struct.lua_Debug, %struct.lua_Debug* %ar, i64 0, i32 1
  %21 = load i8*, i8** %20, align 8, !tbaa !71
  %22 = icmp eq i8* %21, null
  br i1 %22, label %23, label %24

; <label>:23                                      ; preds = %19
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4.8, i64 0, i64 0), i8** %20, align 8, !tbaa !71
  br label %24

; <label>:24                                      ; preds = %23, %19
  %25 = phi i8* [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4.8, i64 0, i64 0), %23 ], [ %21, %19 ]
  %26 = call i32 (%struct.lua_State*, i8*, ...) @luaL_error(%struct.lua_State* %L, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.5, i64 0, i64 0), i32 %.06, i8* %25, i8* %extramsg)
  br label %27

; <label>:27                                      ; preds = %24, %15, %4
  %.0 = phi i32 [ %18, %15 ], [ %26, %24 ], [ %5, %4 ]
  call void @llvm.lifetime.end(i64 120, i8* %1) #1
  ret i32 %.0
}

; Function Attrs: nounwind uwtable
define i32 @luaL_error(%struct.lua_State* %L, i8* %fmt, ...) #0 {
  %ar.i = alloca %struct.lua_Debug, align 8
  %argp = alloca [1 x %struct.__va_list_tag], align 16
  %1 = bitcast [1 x %struct.__va_list_tag]* %argp to i8*
  call void @llvm.lifetime.start(i64 24, i8* %1) #1
  %2 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %argp, i64 0, i64 0
  call void @llvm.va_start(i8* %1)
  %3 = bitcast %struct.lua_Debug* %ar.i to i8*
  call void @llvm.lifetime.start(i64 120, i8* %3) #1
  %4 = call i32 @lua_getstack(%struct.lua_State* %L, i32 1, %struct.lua_Debug* nonnull %ar.i) #1
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %14, label %6

; <label>:6                                       ; preds = %0
  %7 = call i32 @lua_getinfo(%struct.lua_State* %L, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i64 0, i64 0), %struct.lua_Debug* nonnull %ar.i) #1
  %8 = getelementptr inbounds %struct.lua_Debug, %struct.lua_Debug* %ar.i, i64 0, i32 5
  %9 = load i32, i32* %8, align 8, !tbaa !72
  %10 = icmp sgt i32 %9, 0
  br i1 %10, label %11, label %14

; <label>:11                                      ; preds = %6
  %12 = getelementptr inbounds %struct.lua_Debug, %struct.lua_Debug* %ar.i, i64 0, i32 9, i64 0
  %13 = call i8* (%struct.lua_State*, i8*, ...) @lua_pushfstring(%struct.lua_State* %L, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.8, i64 0, i64 0), i8* %12, i32 %9) #1
  br label %luaL_where.exit

; <label>:14                                      ; preds = %6, %0
  call void @lua_pushlstring(%struct.lua_State* %L, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.9, i64 0, i64 0), i64 0) #1
  br label %luaL_where.exit

luaL_where.exit:                                  ; preds = %11, %14
  call void @llvm.lifetime.end(i64 120, i8* %3) #1
  %15 = call i8* @lua_pushvfstring(%struct.lua_State* %L, i8* %fmt, %struct.__va_list_tag* %2) #1
  call void @llvm.va_end(i8* %1)
  call void @lua_concat(%struct.lua_State* %L, i32 2) #1
  %16 = call i32 @lua_error(%struct.lua_State* %L) #1
  call void @llvm.lifetime.end(i64 24, i8* %1) #1
  ret i32 %16
}

; Function Attrs: nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) #4

; Function Attrs: nounwind uwtable
define i32 @luaL_typerror(%struct.lua_State* %L, i32 %narg, i8* %tname) #0 {
  %1 = tail call i32 @lua_type(%struct.lua_State* %L, i32 %narg) #1
  %2 = tail call i8* @lua_typename(%struct.lua_State* %L, i32 %1) #1
  %3 = tail call i8* (%struct.lua_State*, i8*, ...) @lua_pushfstring(%struct.lua_State* %L, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.6, i64 0, i64 0), i8* %tname, i8* %2) #1
  %4 = tail call i32 @luaL_argerror(%struct.lua_State* %L, i32 %narg, i8* %3)
  ret i32 %4
}

; Function Attrs: nounwind uwtable
define void @luaL_where(%struct.lua_State* %L, i32 %level) #0 {
  %ar = alloca %struct.lua_Debug, align 8
  %1 = bitcast %struct.lua_Debug* %ar to i8*
  call void @llvm.lifetime.start(i64 120, i8* %1) #1
  %2 = call i32 @lua_getstack(%struct.lua_State* %L, i32 %level, %struct.lua_Debug* nonnull %ar) #1
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %12, label %4

; <label>:4                                       ; preds = %0
  %5 = call i32 @lua_getinfo(%struct.lua_State* %L, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i64 0, i64 0), %struct.lua_Debug* nonnull %ar) #1
  %6 = getelementptr inbounds %struct.lua_Debug, %struct.lua_Debug* %ar, i64 0, i32 5
  %7 = load i32, i32* %6, align 8, !tbaa !72
  %8 = icmp sgt i32 %7, 0
  br i1 %8, label %9, label %12

; <label>:9                                       ; preds = %4
  %10 = getelementptr inbounds %struct.lua_Debug, %struct.lua_Debug* %ar, i64 0, i32 9, i64 0
  %11 = call i8* (%struct.lua_State*, i8*, ...) @lua_pushfstring(%struct.lua_State* %L, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.8, i64 0, i64 0), i8* %10, i32 %7) #1
  br label %13

; <label>:12                                      ; preds = %0, %4
  call void @lua_pushlstring(%struct.lua_State* %L, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.9, i64 0, i64 0), i64 0) #1
  br label %13

; <label>:13                                      ; preds = %12, %9
  call void @llvm.lifetime.end(i64 120, i8* %1) #1
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @luaL_checkoption(%struct.lua_State* %L, i32 %narg, i8* %def, i8** nocapture readonly %lst) #0 {
  %1 = icmp eq i8* %def, null
  br i1 %1, label %4, label %2

; <label>:2                                       ; preds = %0
  %3 = tail call i8* @luaL_optlstring(%struct.lua_State* %L, i32 %narg, i8* %def, i64* null)
  br label %luaL_checklstring.exit

; <label>:4                                       ; preds = %0
  %5 = tail call i8* @lua_tolstring(%struct.lua_State* %L, i32 %narg, i64* null) #1
  %6 = icmp eq i8* %5, null
  br i1 %6, label %7, label %luaL_checklstring.exit

; <label>:7                                       ; preds = %4
  %8 = tail call i8* @lua_typename(%struct.lua_State* %L, i32 4) #1
  %9 = tail call i32 @lua_type(%struct.lua_State* %L, i32 %narg) #1
  %10 = tail call i8* @lua_typename(%struct.lua_State* %L, i32 %9) #1
  %11 = tail call i8* (%struct.lua_State*, i8*, ...) @lua_pushfstring(%struct.lua_State* %L, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.6, i64 0, i64 0), i8* %8, i8* %10) #1
  %12 = tail call i32 @luaL_argerror(%struct.lua_State* %L, i32 %narg, i8* %11) #1
  br label %luaL_checklstring.exit

luaL_checklstring.exit:                           ; preds = %7, %4, %2
  %13 = phi i8* [ %3, %2 ], [ %5, %4 ], [ null, %7 ]
  %14 = load i8*, i8** %lst, align 8, !tbaa !25
  %15 = icmp eq i8* %14, null
  br i1 %15, label %._crit_edge, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %luaL_checklstring.exit
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %19
  %indvars.iv = phi i64 [ %indvars.iv.next, %19 ], [ 0, %.lr.ph.preheader ]
  %16 = phi i8* [ %21, %19 ], [ %14, %.lr.ph.preheader ]
  %17 = tail call i32 @strcmp(i8* %16, i8* %13) #1
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %.loopexit, label %19

; <label>:19                                      ; preds = %.lr.ph
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %20 = getelementptr inbounds i8*, i8** %lst, i64 %indvars.iv.next
  %21 = load i8*, i8** %20, align 8, !tbaa !25
  %22 = icmp eq i8* %21, null
  br i1 %22, label %._crit_edge.loopexit, label %.lr.ph

._crit_edge.loopexit:                             ; preds = %19
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %luaL_checklstring.exit
  %23 = tail call i8* (%struct.lua_State*, i8*, ...) @lua_pushfstring(%struct.lua_State* %L, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.10, i64 0, i64 0), i8* %13) #1
  %24 = tail call i32 @luaL_argerror(%struct.lua_State* %L, i32 %narg, i8* %23)
  br label %26

.loopexit:                                        ; preds = %.lr.ph
  %indvars.iv.lcssa = phi i64 [ %indvars.iv, %.lr.ph ]
  %25 = trunc i64 %indvars.iv.lcssa to i32
  br label %26

; <label>:26                                      ; preds = %.loopexit, %._crit_edge
  %.0 = phi i32 [ %24, %._crit_edge ], [ %25, %.loopexit ]
  ret i32 %.0
}

; Function Attrs: nounwind uwtable
define i8* @luaL_optlstring(%struct.lua_State* %L, i32 %narg, i8* readonly %def, i64* %len) #0 {
  %1 = tail call i32 @lua_type(%struct.lua_State* %L, i32 %narg) #1
  %2 = icmp slt i32 %1, 1
  br i1 %2, label %3, label %11

; <label>:3                                       ; preds = %0
  %4 = icmp eq i64* %len, null
  br i1 %4, label %luaL_checklstring.exit, label %5

; <label>:5                                       ; preds = %3
  %6 = icmp eq i8* %def, null
  br i1 %6, label %9, label %7

; <label>:7                                       ; preds = %5
  %8 = tail call i64 @strlen(i8* %def) #11
  br label %9

; <label>:9                                       ; preds = %5, %7
  %10 = phi i64 [ %8, %7 ], [ 0, %5 ]
  store i64 %10, i64* %len, align 8, !tbaa !39
  br label %luaL_checklstring.exit

; <label>:11                                      ; preds = %0
  %12 = tail call i8* @lua_tolstring(%struct.lua_State* %L, i32 %narg, i64* %len) #1
  %13 = icmp eq i8* %12, null
  br i1 %13, label %14, label %luaL_checklstring.exit

; <label>:14                                      ; preds = %11
  %15 = tail call i8* @lua_typename(%struct.lua_State* %L, i32 4) #1
  %16 = tail call i32 @lua_type(%struct.lua_State* %L, i32 %narg) #1
  %17 = tail call i8* @lua_typename(%struct.lua_State* %L, i32 %16) #1
  %18 = tail call i8* (%struct.lua_State*, i8*, ...) @lua_pushfstring(%struct.lua_State* %L, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.6, i64 0, i64 0), i8* %15, i8* %17) #1
  %19 = tail call i32 @luaL_argerror(%struct.lua_State* %L, i32 %narg, i8* %18) #1
  br label %luaL_checklstring.exit

luaL_checklstring.exit:                           ; preds = %14, %11, %9, %3
  %.0 = phi i8* [ %def, %3 ], [ %def, %9 ], [ %12, %11 ], [ null, %14 ]
  ret i8* %.0
}

; Function Attrs: nounwind uwtable
define i8* @luaL_checklstring(%struct.lua_State* %L, i32 %narg, i64* %len) #0 {
  %1 = tail call i8* @lua_tolstring(%struct.lua_State* %L, i32 %narg, i64* %len) #1
  %2 = icmp eq i8* %1, null
  br i1 %2, label %3, label %9

; <label>:3                                       ; preds = %0
  %4 = tail call i8* @lua_typename(%struct.lua_State* %L, i32 4) #1
  %5 = tail call i32 @lua_type(%struct.lua_State* %L, i32 %narg) #1
  %6 = tail call i8* @lua_typename(%struct.lua_State* %L, i32 %5) #1
  %7 = tail call i8* (%struct.lua_State*, i8*, ...) @lua_pushfstring(%struct.lua_State* %L, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.6, i64 0, i64 0), i8* %4, i8* %6) #1
  %8 = tail call i32 @luaL_argerror(%struct.lua_State* %L, i32 %narg, i8* %7) #1
  br label %9

; <label>:9                                       ; preds = %0, %3
  ret i8* %1
}

; Function Attrs: nounwind uwtable
define i32 @luaL_newmetatable(%struct.lua_State* %L, i8* %tname) #0 {
  tail call void @lua_getfield(%struct.lua_State* %L, i32 -10000, i8* %tname) #1
  %1 = tail call i32 @lua_type(%struct.lua_State* %L, i32 -1) #1
  %2 = icmp eq i32 %1, 0
  br i1 %2, label %3, label %4

; <label>:3                                       ; preds = %0
  tail call void @lua_settop(%struct.lua_State* %L, i32 -2) #1
  tail call void @lua_createtable(%struct.lua_State* %L, i32 0, i32 0) #1
  tail call void @lua_pushvalue(%struct.lua_State* %L, i32 -1) #1
  tail call void @lua_setfield(%struct.lua_State* %L, i32 -10000, i8* %tname) #1
  br label %4

; <label>:4                                       ; preds = %0, %3
  %.0 = phi i32 [ 1, %3 ], [ 0, %0 ]
  ret i32 %.0
}

; Function Attrs: nounwind uwtable
define i8* @luaL_checkudata(%struct.lua_State* %L, i32 %ud, i8* %tname) #0 {
  %1 = tail call i8* @lua_touserdata(%struct.lua_State* %L, i32 %ud) #1
  %2 = icmp eq i8* %1, null
  br i1 %2, label %10, label %3

; <label>:3                                       ; preds = %0
  %4 = tail call i32 @lua_getmetatable(%struct.lua_State* %L, i32 %ud) #1
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %10, label %6

; <label>:6                                       ; preds = %3
  tail call void @lua_getfield(%struct.lua_State* %L, i32 -10000, i8* %tname) #1
  %7 = tail call i32 @lua_rawequal(%struct.lua_State* %L, i32 -1, i32 -2) #1
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %10, label %9

; <label>:9                                       ; preds = %6
  tail call void @lua_settop(%struct.lua_State* %L, i32 -3) #1
  br label %15

; <label>:10                                      ; preds = %6, %3, %0
  %11 = tail call i32 @lua_type(%struct.lua_State* %L, i32 %ud) #1
  %12 = tail call i8* @lua_typename(%struct.lua_State* %L, i32 %11) #1
  %13 = tail call i8* (%struct.lua_State*, i8*, ...) @lua_pushfstring(%struct.lua_State* %L, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.6, i64 0, i64 0), i8* %tname, i8* %12) #1
  %14 = tail call i32 @luaL_argerror(%struct.lua_State* %L, i32 %ud, i8* %13) #1
  br label %15

; <label>:15                                      ; preds = %10, %9
  %.0 = phi i8* [ %1, %9 ], [ null, %10 ]
  ret i8* %.0
}

; Function Attrs: nounwind uwtable
define void @luaL_checkstack(%struct.lua_State* %L, i32 %space, i8* %mes) #0 {
  %1 = tail call i32 @lua_checkstack(%struct.lua_State* %L, i32 %space) #1
  %2 = icmp eq i32 %1, 0
  br i1 %2, label %3, label %5

; <label>:3                                       ; preds = %0
  %4 = tail call i32 (%struct.lua_State*, i8*, ...) @luaL_error(%struct.lua_State* %L, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.11, i64 0, i64 0), i8* %mes)
  br label %5

; <label>:5                                       ; preds = %0, %3
  ret void
}

; Function Attrs: nounwind uwtable
define void @luaL_checktype(%struct.lua_State* %L, i32 %narg, i32 %t) #0 {
  %1 = tail call i32 @lua_type(%struct.lua_State* %L, i32 %narg) #1
  %2 = icmp eq i32 %1, %t
  br i1 %2, label %9, label %3

; <label>:3                                       ; preds = %0
  %4 = tail call i8* @lua_typename(%struct.lua_State* %L, i32 %t) #1
  %5 = tail call i32 @lua_type(%struct.lua_State* %L, i32 %narg) #1
  %6 = tail call i8* @lua_typename(%struct.lua_State* %L, i32 %5) #1
  %7 = tail call i8* (%struct.lua_State*, i8*, ...) @lua_pushfstring(%struct.lua_State* %L, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.6, i64 0, i64 0), i8* %4, i8* %6) #1
  %8 = tail call i32 @luaL_argerror(%struct.lua_State* %L, i32 %narg, i8* %7) #1
  br label %9

; <label>:9                                       ; preds = %0, %3
  ret void
}

; Function Attrs: nounwind uwtable
define void @luaL_checkany(%struct.lua_State* %L, i32 %narg) #0 {
  %1 = tail call i32 @lua_type(%struct.lua_State* %L, i32 %narg) #1
  %2 = icmp eq i32 %1, -1
  br i1 %2, label %3, label %5

; <label>:3                                       ; preds = %0
  %4 = tail call i32 @luaL_argerror(%struct.lua_State* %L, i32 %narg, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.12, i64 0, i64 0))
  br label %5

; <label>:5                                       ; preds = %3, %0
  ret void
}

; Function Attrs: nounwind uwtable
define double @luaL_checknumber(%struct.lua_State* %L, i32 %narg) #0 {
  %1 = tail call double @lua_tonumber(%struct.lua_State* %L, i32 %narg) #1
  %2 = fcmp oeq double %1, 0.000000e+00
  br i1 %2, label %3, label %12

; <label>:3                                       ; preds = %0
  %4 = tail call i32 @lua_isnumber(%struct.lua_State* %L, i32 %narg) #1
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %12

; <label>:6                                       ; preds = %3
  %7 = tail call i8* @lua_typename(%struct.lua_State* %L, i32 3) #1
  %8 = tail call i32 @lua_type(%struct.lua_State* %L, i32 %narg) #1
  %9 = tail call i8* @lua_typename(%struct.lua_State* %L, i32 %8) #1
  %10 = tail call i8* (%struct.lua_State*, i8*, ...) @lua_pushfstring(%struct.lua_State* %L, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.6, i64 0, i64 0), i8* %7, i8* %9) #1
  %11 = tail call i32 @luaL_argerror(%struct.lua_State* %L, i32 %narg, i8* %10) #1
  br label %12

; <label>:12                                      ; preds = %3, %6, %0
  ret double %1
}

; Function Attrs: nounwind uwtable
define double @luaL_optnumber(%struct.lua_State* %L, i32 %narg, double %def) #0 {
  %1 = tail call i32 @lua_type(%struct.lua_State* %L, i32 %narg) #1
  %2 = icmp slt i32 %1, 1
  br i1 %2, label %5, label %3

; <label>:3                                       ; preds = %0
  %4 = tail call double @luaL_checknumber(%struct.lua_State* %L, i32 %narg)
  br label %5

; <label>:5                                       ; preds = %0, %3
  %6 = phi double [ %4, %3 ], [ %def, %0 ]
  ret double %6
}

; Function Attrs: nounwind uwtable
define i64 @luaL_checkinteger(%struct.lua_State* %L, i32 %narg) #0 {
  %1 = tail call i64 @lua_tointeger(%struct.lua_State* %L, i32 %narg) #1
  %2 = icmp eq i64 %1, 0
  br i1 %2, label %3, label %12

; <label>:3                                       ; preds = %0
  %4 = tail call i32 @lua_isnumber(%struct.lua_State* %L, i32 %narg) #1
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %12

; <label>:6                                       ; preds = %3
  %7 = tail call i8* @lua_typename(%struct.lua_State* %L, i32 3) #1
  %8 = tail call i32 @lua_type(%struct.lua_State* %L, i32 %narg) #1
  %9 = tail call i8* @lua_typename(%struct.lua_State* %L, i32 %8) #1
  %10 = tail call i8* (%struct.lua_State*, i8*, ...) @lua_pushfstring(%struct.lua_State* %L, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.6, i64 0, i64 0), i8* %7, i8* %9) #1
  %11 = tail call i32 @luaL_argerror(%struct.lua_State* %L, i32 %narg, i8* %10) #1
  br label %12

; <label>:12                                      ; preds = %3, %6, %0
  ret i64 %1
}

; Function Attrs: nounwind uwtable
define i64 @luaL_optinteger(%struct.lua_State* %L, i32 %narg, i64 %def) #0 {
  %1 = tail call i32 @lua_type(%struct.lua_State* %L, i32 %narg) #1
  %2 = icmp slt i32 %1, 1
  br i1 %2, label %5, label %3

; <label>:3                                       ; preds = %0
  %4 = tail call i64 @luaL_checkinteger(%struct.lua_State* %L, i32 %narg)
  br label %5

; <label>:5                                       ; preds = %0, %3
  %6 = phi i64 [ %4, %3 ], [ %def, %0 ]
  ret i64 %6
}

; Function Attrs: nounwind uwtable
define i32 @luaL_getmetafield(%struct.lua_State* %L, i32 %obj, i8* %event) #0 {
  %1 = tail call i32 @lua_getmetatable(%struct.lua_State* %L, i32 %obj) #1
  %2 = icmp eq i32 %1, 0
  br i1 %2, label %8, label %3

; <label>:3                                       ; preds = %0
  tail call void @lua_pushstring(%struct.lua_State* %L, i8* %event) #1
  tail call void @lua_rawget(%struct.lua_State* %L, i32 -2) #1
  %4 = tail call i32 @lua_type(%struct.lua_State* %L, i32 -1) #1
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %7

; <label>:6                                       ; preds = %3
  tail call void @lua_settop(%struct.lua_State* %L, i32 -3) #1
  br label %8

; <label>:7                                       ; preds = %3
  tail call void @lua_remove(%struct.lua_State* %L, i32 -2) #1
  br label %8

; <label>:8                                       ; preds = %0, %7, %6
  %.0 = phi i32 [ 0, %6 ], [ 1, %7 ], [ 0, %0 ]
  ret i32 %.0
}

; Function Attrs: nounwind uwtable
define i32 @luaL_callmeta(%struct.lua_State* %L, i32 %obj, i8* %event) #0 {
  %obj.off = add i32 %obj, 9999
  %1 = icmp ugt i32 %obj.off, 9999
  br i1 %1, label %6, label %2

; <label>:2                                       ; preds = %0
  %3 = tail call i32 @lua_gettop(%struct.lua_State* %L) #1
  %4 = add i32 %obj, 1
  %5 = add i32 %4, %3
  br label %6

; <label>:6                                       ; preds = %0, %2
  %7 = phi i32 [ %5, %2 ], [ %obj, %0 ]
  %8 = tail call i32 @lua_getmetatable(%struct.lua_State* %L, i32 %7) #1
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %luaL_getmetafield.exit.thread, label %10

; <label>:10                                      ; preds = %6
  tail call void @lua_pushstring(%struct.lua_State* %L, i8* %event) #1
  tail call void @lua_rawget(%struct.lua_State* %L, i32 -2) #1
  %11 = tail call i32 @lua_type(%struct.lua_State* %L, i32 -1) #1
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %14

; <label>:13                                      ; preds = %10
  tail call void @lua_settop(%struct.lua_State* %L, i32 -3) #1
  br label %luaL_getmetafield.exit.thread

; <label>:14                                      ; preds = %10
  tail call void @lua_remove(%struct.lua_State* %L, i32 -2) #1
  tail call void @lua_pushvalue(%struct.lua_State* %L, i32 %7) #1
  tail call void @lua_call(%struct.lua_State* %L, i32 1, i32 1) #1
  br label %luaL_getmetafield.exit.thread

luaL_getmetafield.exit.thread:                    ; preds = %6, %13, %14
  %.0 = phi i32 [ 1, %14 ], [ 0, %13 ], [ 0, %6 ]
  ret i32 %.0
}

; Function Attrs: nounwind uwtable
define void @luaL_register(%struct.lua_State* %L, i8* %libname, %struct.luaL_Reg* nocapture readonly %l) #0 {
  tail call void @luaL_openlib(%struct.lua_State* %L, i8* %libname, %struct.luaL_Reg* %l, i32 0)
  ret void
}

; Function Attrs: nounwind uwtable
define void @luaL_openlib(%struct.lua_State* %L, i8* %libname, %struct.luaL_Reg* nocapture readonly %l, i32 %nup) #0 {
  %1 = icmp eq i8* %libname, null
  %.pre = getelementptr inbounds %struct.luaL_Reg, %struct.luaL_Reg* %l, i64 0, i32 0
  br i1 %1, label %.preheader1, label %2

; <label>:2                                       ; preds = %0
  %3 = load i8*, i8** %.pre, align 8, !tbaa !73
  %4 = icmp eq i8* %3, null
  br i1 %4, label %libsize.exit, label %.lr.ph.i.preheader

.lr.ph.i.preheader:                               ; preds = %2
  br label %.lr.ph.i

.lr.ph.i:                                         ; preds = %.lr.ph.i.preheader, %.lr.ph.i
  %size.02.i = phi i32 [ %5, %.lr.ph.i ], [ 0, %.lr.ph.i.preheader ]
  %.01.i = phi %struct.luaL_Reg* [ %6, %.lr.ph.i ], [ %l, %.lr.ph.i.preheader ]
  %5 = add nuw nsw i32 %size.02.i, 1
  %6 = getelementptr inbounds %struct.luaL_Reg, %struct.luaL_Reg* %.01.i, i64 1
  %7 = getelementptr inbounds %struct.luaL_Reg, %struct.luaL_Reg* %6, i64 0, i32 0
  %8 = load i8*, i8** %7, align 8, !tbaa !73
  %9 = icmp eq i8* %8, null
  br i1 %9, label %libsize.exit.loopexit, label %.lr.ph.i

libsize.exit.loopexit:                            ; preds = %.lr.ph.i
  %.lcssa = phi i32 [ %5, %.lr.ph.i ]
  br label %libsize.exit

libsize.exit:                                     ; preds = %libsize.exit.loopexit, %2
  %size.0.lcssa.i = phi i32 [ 0, %2 ], [ %.lcssa, %libsize.exit.loopexit ]
  %10 = tail call i8* @luaL_findtable(%struct.lua_State* %L, i32 -10000, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.13, i64 0, i64 0), i32 1)
  tail call void @lua_getfield(%struct.lua_State* %L, i32 -1, i8* %libname) #1
  %11 = tail call i32 @lua_type(%struct.lua_State* %L, i32 -1) #1
  %12 = icmp eq i32 %11, 5
  br i1 %12, label %19, label %13

; <label>:13                                      ; preds = %libsize.exit
  tail call void @lua_settop(%struct.lua_State* %L, i32 -2) #1
  %14 = tail call i8* @luaL_findtable(%struct.lua_State* %L, i32 -10002, i8* %libname, i32 %size.0.lcssa.i)
  %15 = icmp eq i8* %14, null
  br i1 %15, label %18, label %16

; <label>:16                                      ; preds = %13
  %17 = tail call i32 (%struct.lua_State*, i8*, ...) @luaL_error(%struct.lua_State* %L, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.14, i64 0, i64 0), i8* %libname)
  br label %18

; <label>:18                                      ; preds = %13, %16
  tail call void @lua_pushvalue(%struct.lua_State* %L, i32 -1) #1
  tail call void @lua_setfield(%struct.lua_State* %L, i32 -3, i8* %libname) #1
  br label %19

; <label>:19                                      ; preds = %18, %libsize.exit
  tail call void @lua_remove(%struct.lua_State* %L, i32 -2) #1
  %20 = xor i32 %nup, -1
  tail call void @lua_insert(%struct.lua_State* %L, i32 %20) #1
  br label %.preheader1

.preheader1:                                      ; preds = %0, %19
  %21 = load i8*, i8** %.pre, align 8, !tbaa !73
  %22 = icmp eq i8* %21, null
  br i1 %22, label %._crit_edge.4, label %.preheader.lr.ph

.preheader.lr.ph:                                 ; preds = %.preheader1
  %23 = icmp sgt i32 %nup, 0
  %24 = sub i32 -2, %nup
  %25 = sub nsw i32 0, %nup
  br i1 %23, label %.lr.ph.us.preheader, label %.preheader.preheader

.preheader.preheader:                             ; preds = %.preheader.lr.ph
  br label %.preheader

.lr.ph.us.preheader:                              ; preds = %.preheader.lr.ph
  br label %.lr.ph.us

; <label>:26                                      ; preds = %34
  %27 = getelementptr inbounds i8*, i8** %36, i64 1
  %28 = bitcast i8** %27 to i32 (%struct.lua_State*)**
  %29 = load i32 (%struct.lua_State*)*, i32 (%struct.lua_State*)** %28, align 8, !tbaa !75
  tail call void @lua_pushcclosure(%struct.lua_State* %L, i32 (%struct.lua_State*)* %29, i32 %nup) #1
  %30 = load i8*, i8** %36, align 8, !tbaa !73
  tail call void @lua_setfield(%struct.lua_State* %L, i32 %24, i8* %30) #1
  %31 = getelementptr inbounds i8*, i8** %36, i64 2
  %32 = load i8*, i8** %31, align 8, !tbaa !73
  %33 = icmp eq i8* %32, null
  br i1 %33, label %._crit_edge.4.loopexit, label %.lr.ph.us

; <label>:34                                      ; preds = %34, %.lr.ph.us
  %i.02.us = phi i32 [ 0, %.lr.ph.us ], [ %35, %34 ]
  tail call void @lua_pushvalue(%struct.lua_State* %L, i32 %25) #1
  %35 = add nuw nsw i32 %i.02.us, 1
  %exitcond = icmp eq i32 %35, %nup
  br i1 %exitcond, label %26, label %34

.lr.ph.us:                                        ; preds = %.lr.ph.us.preheader, %26
  %36 = phi i8** [ %31, %26 ], [ %.pre, %.lr.ph.us.preheader ]
  br label %34

.preheader:                                       ; preds = %.preheader.preheader, %.preheader
  %37 = phi i8** [ %42, %.preheader ], [ %.pre, %.preheader.preheader ]
  %38 = getelementptr inbounds i8*, i8** %37, i64 1
  %39 = bitcast i8** %38 to i32 (%struct.lua_State*)**
  %40 = load i32 (%struct.lua_State*)*, i32 (%struct.lua_State*)** %39, align 8, !tbaa !75
  tail call void @lua_pushcclosure(%struct.lua_State* %L, i32 (%struct.lua_State*)* %40, i32 %nup) #1
  %41 = load i8*, i8** %37, align 8, !tbaa !73
  tail call void @lua_setfield(%struct.lua_State* %L, i32 %24, i8* %41) #1
  %42 = getelementptr inbounds i8*, i8** %37, i64 2
  %43 = load i8*, i8** %42, align 8, !tbaa !73
  %44 = icmp eq i8* %43, null
  br i1 %44, label %._crit_edge.4.loopexit8, label %.preheader

._crit_edge.4.loopexit:                           ; preds = %26
  br label %._crit_edge.4

._crit_edge.4.loopexit8:                          ; preds = %.preheader
  br label %._crit_edge.4

._crit_edge.4:                                    ; preds = %._crit_edge.4.loopexit8, %._crit_edge.4.loopexit, %.preheader1
  %45 = xor i32 %nup, -1
  tail call void @lua_settop(%struct.lua_State* %L, i32 %45) #1
  ret void
}

; Function Attrs: nounwind uwtable
define i8* @luaL_findtable(%struct.lua_State* %L, i32 %idx, i8* %fname, i32 %szhint) #0 {
  tail call void @lua_pushvalue(%struct.lua_State* %L, i32 %idx) #1
  br label %1

; <label>:1                                       ; preds = %21, %0
  %.01 = phi i8* [ %fname, %0 ], [ %22, %21 ]
  %2 = tail call i8* @strchr(i8* %.01, i32 46) #1
  %3 = icmp eq i8* %2, null
  br i1 %3, label %4, label %7

; <label>:4                                       ; preds = %1
  %5 = tail call i64 @strlen(i8* %.01) #11
  %6 = getelementptr inbounds i8, i8* %.01, i64 %5
  br label %7

; <label>:7                                       ; preds = %4, %1
  %e.0 = phi i8* [ %6, %4 ], [ %2, %1 ]
  %8 = ptrtoint i8* %e.0 to i64
  %9 = ptrtoint i8* %.01 to i64
  %10 = sub i64 %8, %9
  tail call void @lua_pushlstring(%struct.lua_State* %L, i8* %.01, i64 %10) #1
  tail call void @lua_rawget(%struct.lua_State* %L, i32 -2) #1
  %11 = tail call i32 @lua_type(%struct.lua_State* %L, i32 -1) #1
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %17

; <label>:13                                      ; preds = %7
  tail call void @lua_settop(%struct.lua_State* %L, i32 -2) #1
  %14 = load i8, i8* %e.0, align 1, !tbaa !76
  %15 = icmp eq i8 %14, 46
  %16 = select i1 %15, i32 1, i32 %szhint
  tail call void @lua_createtable(%struct.lua_State* %L, i32 0, i32 %16) #1
  tail call void @lua_pushlstring(%struct.lua_State* %L, i8* %.01, i64 %10) #1
  tail call void @lua_pushvalue(%struct.lua_State* %L, i32 -2) #1
  tail call void @lua_settable(%struct.lua_State* %L, i32 -4) #1
  br label %21

; <label>:17                                      ; preds = %7
  %18 = tail call i32 @lua_type(%struct.lua_State* %L, i32 -1) #1
  %19 = icmp eq i32 %18, 5
  br i1 %19, label %21, label %20

; <label>:20                                      ; preds = %17
  %.01.lcssa = phi i8* [ %.01, %17 ]
  tail call void @lua_settop(%struct.lua_State* %L, i32 -3) #1
  br label %.loopexit

; <label>:21                                      ; preds = %17, %13
  tail call void @lua_remove(%struct.lua_State* %L, i32 -2) #1
  %22 = getelementptr inbounds i8, i8* %e.0, i64 1
  %23 = load i8, i8* %e.0, align 1, !tbaa !76
  %24 = icmp eq i8 %23, 46
  br i1 %24, label %1, label %.loopexit.loopexit

.loopexit.loopexit:                               ; preds = %21
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %20
  %.0 = phi i8* [ %.01.lcssa, %20 ], [ null, %.loopexit.loopexit ]
  ret i8* %.0
}

; Function Attrs: nounwind uwtable
define i8* @luaL_gsub(%struct.lua_State* %L, i8* %s, i8* nocapture readonly %p, i8* nocapture readonly %r) #0 {
  %b = alloca %struct.luaL_Buffer, align 8
  %1 = tail call i64 @strlen(i8* %p) #11
  %2 = bitcast %struct.luaL_Buffer* %b to i8*
  call void @llvm.lifetime.start(i64 8216, i8* %2) #1
  %3 = getelementptr inbounds %struct.luaL_Buffer, %struct.luaL_Buffer* %b, i64 0, i32 2
  store %struct.lua_State* %L, %struct.lua_State** %3, align 8, !tbaa !77
  %4 = getelementptr inbounds %struct.luaL_Buffer, %struct.luaL_Buffer* %b, i64 0, i32 3, i64 0
  %5 = getelementptr inbounds %struct.luaL_Buffer, %struct.luaL_Buffer* %b, i64 0, i32 0
  store i8* %4, i8** %5, align 8, !tbaa !79
  %6 = getelementptr inbounds %struct.luaL_Buffer, %struct.luaL_Buffer* %b, i64 0, i32 1
  store i32 0, i32* %6, align 8, !tbaa !80
  %7 = call i8* @strstr(i8* %s, i8* %p) #11
  %8 = icmp eq i8* %7, null
  br i1 %8, label %._crit_edge, label %.lr.ph

.lr.ph:                                           ; preds = %0
  %9 = getelementptr inbounds %struct.luaL_Buffer, %struct.luaL_Buffer* %b, i64 0, i32 3, i64 8192
  br label %10

; <label>:10                                      ; preds = %.lr.ph, %luaL_addstring.exit
  %11 = phi i8* [ %7, %.lr.ph ], [ %42, %luaL_addstring.exit ]
  %.07 = phi i8* [ %s, %.lr.ph ], [ %41, %luaL_addstring.exit ]
  %12 = icmp eq i8* %11, %.07
  br i1 %12, label %luaL_addlstring.exit, label %.lr.ph.i

.lr.ph.i:                                         ; preds = %10
  %13 = ptrtoint i8* %11 to i64
  %14 = ptrtoint i8* %.07 to i64
  %15 = sub i64 %13, %14
  br label %16

; <label>:16                                      ; preds = %22, %.lr.ph.i
  %.in.i = phi i64 [ %15, %.lr.ph.i ], [ %17, %22 ]
  %.012.i = phi i8* [ %.07, %.lr.ph.i ], [ %24, %22 ]
  %17 = add i64 %.in.i, -1
  %18 = load i8*, i8** %5, align 8, !tbaa !79
  %19 = icmp ult i8* %18, %9
  br i1 %19, label %22, label %20

; <label>:20                                      ; preds = %16
  %21 = call i8* @luaL_prepbuffer(%struct.luaL_Buffer* nonnull %b) #1
  %.pre.i.1 = load i8*, i8** %5, align 8, !tbaa !79
  br label %22

; <label>:22                                      ; preds = %20, %16
  %23 = phi i8* [ %.pre.i.1, %20 ], [ %18, %16 ]
  %24 = getelementptr inbounds i8, i8* %.012.i, i64 1
  %25 = load i8, i8* %.012.i, align 1, !tbaa !76
  %26 = getelementptr inbounds i8, i8* %23, i64 1
  store i8* %26, i8** %5, align 8, !tbaa !79
  store i8 %25, i8* %23, align 1, !tbaa !76
  %27 = icmp eq i64 %17, 0
  br i1 %27, label %luaL_addlstring.exit.loopexit, label %16

luaL_addlstring.exit.loopexit:                    ; preds = %22
  br label %luaL_addlstring.exit

luaL_addlstring.exit:                             ; preds = %luaL_addlstring.exit.loopexit, %10
  %28 = call i64 @strlen(i8* %r) #11
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %luaL_addstring.exit, label %.lr.ph.i.i.preheader

.lr.ph.i.i.preheader:                             ; preds = %luaL_addlstring.exit
  br label %.lr.ph.i.i

.lr.ph.i.i:                                       ; preds = %.lr.ph.i.i.preheader, %35
  %.in.i.i = phi i64 [ %30, %35 ], [ %28, %.lr.ph.i.i.preheader ]
  %.012.i.i = phi i8* [ %37, %35 ], [ %r, %.lr.ph.i.i.preheader ]
  %30 = add i64 %.in.i.i, -1
  %31 = load i8*, i8** %5, align 8, !tbaa !79
  %32 = icmp ult i8* %31, %9
  br i1 %32, label %35, label %33

; <label>:33                                      ; preds = %.lr.ph.i.i
  %34 = call i8* @luaL_prepbuffer(%struct.luaL_Buffer* nonnull %b) #1
  %.pre.i.i = load i8*, i8** %5, align 8, !tbaa !79
  br label %35

; <label>:35                                      ; preds = %33, %.lr.ph.i.i
  %36 = phi i8* [ %.pre.i.i, %33 ], [ %31, %.lr.ph.i.i ]
  %37 = getelementptr inbounds i8, i8* %.012.i.i, i64 1
  %38 = load i8, i8* %.012.i.i, align 1, !tbaa !76
  %39 = getelementptr inbounds i8, i8* %36, i64 1
  store i8* %39, i8** %5, align 8, !tbaa !79
  store i8 %38, i8* %36, align 1, !tbaa !76
  %40 = icmp eq i64 %30, 0
  br i1 %40, label %luaL_addstring.exit.loopexit, label %.lr.ph.i.i

luaL_addstring.exit.loopexit:                     ; preds = %35
  br label %luaL_addstring.exit

luaL_addstring.exit:                              ; preds = %luaL_addstring.exit.loopexit, %luaL_addlstring.exit
  %41 = getelementptr inbounds i8, i8* %11, i64 %1
  %42 = call i8* @strstr(i8* %41, i8* %p) #11
  %43 = icmp eq i8* %42, null
  br i1 %43, label %._crit_edge.loopexit, label %10

._crit_edge.loopexit:                             ; preds = %luaL_addstring.exit
  %.lcssa = phi i8* [ %41, %luaL_addstring.exit ]
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %0
  %.0.lcssa = phi i8* [ %s, %0 ], [ %.lcssa, %._crit_edge.loopexit ]
  %44 = call i64 @strlen(i8* %.0.lcssa) #11
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %luaL_addstring.exit6, label %.lr.ph.i.i.2

.lr.ph.i.i.2:                                     ; preds = %._crit_edge
  %46 = getelementptr inbounds %struct.luaL_Buffer, %struct.luaL_Buffer* %b, i64 0, i32 3, i64 8192
  br label %47

; <label>:47                                      ; preds = %53, %.lr.ph.i.i.2
  %.in.i.i.3 = phi i64 [ %44, %.lr.ph.i.i.2 ], [ %48, %53 ]
  %.012.i.i.4 = phi i8* [ %.0.lcssa, %.lr.ph.i.i.2 ], [ %55, %53 ]
  %48 = add i64 %.in.i.i.3, -1
  %49 = load i8*, i8** %5, align 8, !tbaa !79
  %50 = icmp ult i8* %49, %46
  br i1 %50, label %53, label %51

; <label>:51                                      ; preds = %47
  %52 = call i8* @luaL_prepbuffer(%struct.luaL_Buffer* nonnull %b) #1
  %.pre.i.i.5 = load i8*, i8** %5, align 8, !tbaa !79
  br label %53

; <label>:53                                      ; preds = %51, %47
  %54 = phi i8* [ %.pre.i.i.5, %51 ], [ %49, %47 ]
  %55 = getelementptr inbounds i8, i8* %.012.i.i.4, i64 1
  %56 = load i8, i8* %.012.i.i.4, align 1, !tbaa !76
  %57 = getelementptr inbounds i8, i8* %54, i64 1
  store i8* %57, i8** %5, align 8, !tbaa !79
  store i8 %56, i8* %54, align 1, !tbaa !76
  %58 = icmp eq i64 %48, 0
  br i1 %58, label %luaL_addstring.exit6.loopexit, label %47

luaL_addstring.exit6.loopexit:                    ; preds = %53
  br label %luaL_addstring.exit6

luaL_addstring.exit6:                             ; preds = %luaL_addstring.exit6.loopexit, %._crit_edge
  %59 = bitcast %struct.luaL_Buffer* %b to i64*
  %60 = load i64, i64* %59, align 8, !tbaa !79
  %61 = ptrtoint i8* %4 to i64
  %62 = icmp eq i64 %60, %61
  br i1 %62, label %.emptybuffer.exit_crit_edge.i, label %63

.emptybuffer.exit_crit_edge.i:                    ; preds = %luaL_addstring.exit6
  %.pre.i = load i32, i32* %6, align 8, !tbaa !80
  br label %luaL_pushresult.exit

; <label>:63                                      ; preds = %luaL_addstring.exit6
  %64 = sub i64 %60, %61
  %65 = load %struct.lua_State*, %struct.lua_State** %3, align 8, !tbaa !77
  call void @lua_pushlstring(%struct.lua_State* %65, i8* %4, i64 %64) #1
  store i8* %4, i8** %5, align 8, !tbaa !79
  %66 = load i32, i32* %6, align 8, !tbaa !80
  %67 = add nsw i32 %66, 1
  store i32 %67, i32* %6, align 8, !tbaa !80
  br label %luaL_pushresult.exit

luaL_pushresult.exit:                             ; preds = %.emptybuffer.exit_crit_edge.i, %63
  %68 = phi i32 [ %.pre.i, %.emptybuffer.exit_crit_edge.i ], [ %67, %63 ]
  %69 = load %struct.lua_State*, %struct.lua_State** %3, align 8, !tbaa !77
  call void @lua_concat(%struct.lua_State* %69, i32 %68) #1
  store i32 1, i32* %6, align 8, !tbaa !80
  %70 = call i8* @lua_tolstring(%struct.lua_State* %L, i32 -1, i64* null) #1
  call void @llvm.lifetime.end(i64 8216, i8* %2) #1
  ret i8* %70
}

; Function Attrs: nounwind uwtable
define void @luaL_buffinit(%struct.lua_State* %L, %struct.luaL_Buffer* %B) #0 {
  %1 = getelementptr inbounds %struct.luaL_Buffer, %struct.luaL_Buffer* %B, i64 0, i32 2
  store %struct.lua_State* %L, %struct.lua_State** %1, align 8, !tbaa !77
  %2 = getelementptr inbounds %struct.luaL_Buffer, %struct.luaL_Buffer* %B, i64 0, i32 3, i64 0
  %3 = getelementptr inbounds %struct.luaL_Buffer, %struct.luaL_Buffer* %B, i64 0, i32 0
  store i8* %2, i8** %3, align 8, !tbaa !79
  %4 = getelementptr inbounds %struct.luaL_Buffer, %struct.luaL_Buffer* %B, i64 0, i32 1
  store i32 0, i32* %4, align 4, !tbaa !80
  ret void
}

; Function Attrs: nounwind readonly
declare i8* @strstr(i8*, i8* nocapture) #4

; Function Attrs: nounwind uwtable
define void @luaL_addlstring(%struct.luaL_Buffer* %B, i8* nocapture readonly %s, i64 %l) #0 {
  %1 = icmp eq i64 %l, 0
  br i1 %1, label %._crit_edge, label %.lr.ph

.lr.ph:                                           ; preds = %0
  %2 = getelementptr inbounds %struct.luaL_Buffer, %struct.luaL_Buffer* %B, i64 0, i32 0
  %3 = getelementptr inbounds %struct.luaL_Buffer, %struct.luaL_Buffer* %B, i64 0, i32 3, i64 8192
  br label %4

; <label>:4                                       ; preds = %.lr.ph, %10
  %.in = phi i64 [ %l, %.lr.ph ], [ %5, %10 ]
  %.012 = phi i8* [ %s, %.lr.ph ], [ %12, %10 ]
  %5 = add i64 %.in, -1
  %6 = load i8*, i8** %2, align 8, !tbaa !79
  %7 = icmp ult i8* %6, %3
  br i1 %7, label %10, label %8

; <label>:8                                       ; preds = %4
  %9 = tail call i8* @luaL_prepbuffer(%struct.luaL_Buffer* %B)
  %.pre = load i8*, i8** %2, align 8, !tbaa !79
  br label %10

; <label>:10                                      ; preds = %8, %4
  %11 = phi i8* [ %.pre, %8 ], [ %6, %4 ]
  %12 = getelementptr inbounds i8, i8* %.012, i64 1
  %13 = load i8, i8* %.012, align 1, !tbaa !76
  %14 = getelementptr inbounds i8, i8* %11, i64 1
  store i8* %14, i8** %2, align 8, !tbaa !79
  store i8 %13, i8* %11, align 1, !tbaa !76
  %15 = icmp eq i64 %5, 0
  br i1 %15, label %._crit_edge.loopexit, label %4

._crit_edge.loopexit:                             ; preds = %10
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %0
  ret void
}

; Function Attrs: nounwind uwtable
define void @luaL_addstring(%struct.luaL_Buffer* %B, i8* nocapture readonly %s) #0 {
  %1 = tail call i64 @strlen(i8* %s) #11
  %2 = icmp eq i64 %1, 0
  br i1 %2, label %luaL_addlstring.exit, label %.lr.ph.i

.lr.ph.i:                                         ; preds = %0
  %3 = getelementptr inbounds %struct.luaL_Buffer, %struct.luaL_Buffer* %B, i64 0, i32 0
  %4 = getelementptr inbounds %struct.luaL_Buffer, %struct.luaL_Buffer* %B, i64 0, i32 3, i64 8192
  br label %5

; <label>:5                                       ; preds = %11, %.lr.ph.i
  %.in.i = phi i64 [ %1, %.lr.ph.i ], [ %6, %11 ]
  %.012.i = phi i8* [ %s, %.lr.ph.i ], [ %13, %11 ]
  %6 = add i64 %.in.i, -1
  %7 = load i8*, i8** %3, align 8, !tbaa !79
  %8 = icmp ult i8* %7, %4
  br i1 %8, label %11, label %9

; <label>:9                                       ; preds = %5
  %10 = tail call i8* @luaL_prepbuffer(%struct.luaL_Buffer* %B) #1
  %.pre.i = load i8*, i8** %3, align 8, !tbaa !79
  br label %11

; <label>:11                                      ; preds = %9, %5
  %12 = phi i8* [ %.pre.i, %9 ], [ %7, %5 ]
  %13 = getelementptr inbounds i8, i8* %.012.i, i64 1
  %14 = load i8, i8* %.012.i, align 1, !tbaa !76
  %15 = getelementptr inbounds i8, i8* %12, i64 1
  store i8* %15, i8** %3, align 8, !tbaa !79
  store i8 %14, i8* %12, align 1, !tbaa !76
  %16 = icmp eq i64 %6, 0
  br i1 %16, label %luaL_addlstring.exit.loopexit, label %5

luaL_addlstring.exit.loopexit:                    ; preds = %11
  br label %luaL_addlstring.exit

luaL_addlstring.exit:                             ; preds = %luaL_addlstring.exit.loopexit, %0
  ret void
}

; Function Attrs: nounwind uwtable
define void @luaL_pushresult(%struct.luaL_Buffer* %B) #0 {
  %1 = bitcast %struct.luaL_Buffer* %B to i64*
  %2 = load i64, i64* %1, align 8, !tbaa !79
  %3 = getelementptr inbounds %struct.luaL_Buffer, %struct.luaL_Buffer* %B, i64 0, i32 3, i64 0
  %4 = ptrtoint i8* %3 to i64
  %5 = icmp eq i64 %2, %4
  br i1 %5, label %.emptybuffer.exit_crit_edge, label %6

.emptybuffer.exit_crit_edge:                      ; preds = %0
  %.phi.trans.insert = getelementptr inbounds %struct.luaL_Buffer, %struct.luaL_Buffer* %B, i64 0, i32 1
  %.pre = load i32, i32* %.phi.trans.insert, align 4, !tbaa !80
  %.pre1 = getelementptr inbounds %struct.luaL_Buffer, %struct.luaL_Buffer* %B, i64 0, i32 2
  br label %emptybuffer.exit

; <label>:6                                       ; preds = %0
  %7 = sub i64 %2, %4
  %8 = getelementptr inbounds %struct.luaL_Buffer, %struct.luaL_Buffer* %B, i64 0, i32 0
  %9 = getelementptr inbounds %struct.luaL_Buffer, %struct.luaL_Buffer* %B, i64 0, i32 2
  %10 = load %struct.lua_State*, %struct.lua_State** %9, align 8, !tbaa !77
  tail call void @lua_pushlstring(%struct.lua_State* %10, i8* %3, i64 %7) #1
  store i8* %3, i8** %8, align 8, !tbaa !79
  %11 = getelementptr inbounds %struct.luaL_Buffer, %struct.luaL_Buffer* %B, i64 0, i32 1
  %12 = load i32, i32* %11, align 4, !tbaa !80
  %13 = add nsw i32 %12, 1
  store i32 %13, i32* %11, align 4, !tbaa !80
  br label %emptybuffer.exit

emptybuffer.exit:                                 ; preds = %.emptybuffer.exit_crit_edge, %6
  %.pre-phi2 = phi i32* [ %.phi.trans.insert, %.emptybuffer.exit_crit_edge ], [ %11, %6 ]
  %.pre-phi = phi %struct.lua_State** [ %.pre1, %.emptybuffer.exit_crit_edge ], [ %9, %6 ]
  %14 = phi i32 [ %.pre, %.emptybuffer.exit_crit_edge ], [ %13, %6 ]
  %15 = load %struct.lua_State*, %struct.lua_State** %.pre-phi, align 8, !tbaa !77
  tail call void @lua_concat(%struct.lua_State* %15, i32 %14) #1
  store i32 1, i32* %.pre-phi2, align 4, !tbaa !80
  ret void
}

; Function Attrs: nounwind readonly
declare i8* @strchr(i8*, i32) #4

; Function Attrs: nounwind uwtable
define i8* @luaL_prepbuffer(%struct.luaL_Buffer* %B) #0 {
  %1 = bitcast %struct.luaL_Buffer* %B to i64*
  %2 = load i64, i64* %1, align 8, !tbaa !79
  %3 = getelementptr inbounds %struct.luaL_Buffer, %struct.luaL_Buffer* %B, i64 0, i32 3, i64 0
  %4 = ptrtoint i8* %3 to i64
  %5 = icmp eq i64 %2, %4
  br i1 %5, label %adjuststack.exit, label %6

; <label>:6                                       ; preds = %0
  %7 = sub i64 %2, %4
  %8 = getelementptr inbounds %struct.luaL_Buffer, %struct.luaL_Buffer* %B, i64 0, i32 0
  %9 = getelementptr inbounds %struct.luaL_Buffer, %struct.luaL_Buffer* %B, i64 0, i32 2
  %10 = load %struct.lua_State*, %struct.lua_State** %9, align 8, !tbaa !77
  tail call void @lua_pushlstring(%struct.lua_State* %10, i8* %3, i64 %7) #1
  store i8* %3, i8** %8, align 8, !tbaa !79
  %11 = getelementptr inbounds %struct.luaL_Buffer, %struct.luaL_Buffer* %B, i64 0, i32 1
  %12 = load i32, i32* %11, align 4, !tbaa !80
  %13 = add nsw i32 %12, 1
  store i32 %13, i32* %11, align 4, !tbaa !80
  %14 = icmp sgt i32 %12, 0
  br i1 %14, label %15, label %adjuststack.exit

; <label>:15                                      ; preds = %6
  %16 = load %struct.lua_State*, %struct.lua_State** %9, align 8, !tbaa !77
  %17 = tail call i64 @lua_objlen(%struct.lua_State* %16, i32 -1) #1
  br label %18

; <label>:18                                      ; preds = %18, %15
  %toplen.0.i = phi i64 [ %17, %15 ], [ %toplen.1.i, %18 ]
  %toget.0.i = phi i32 [ 1, %15 ], [ %toget.1.i, %18 ]
  %19 = xor i32 %toget.0.i, -1
  %20 = tail call i64 @lua_objlen(%struct.lua_State* %16, i32 %19) #1
  %21 = load i32, i32* %11, align 4, !tbaa !80
  %22 = sub nsw i32 %21, %toget.0.i
  %23 = icmp sgt i32 %22, 8
  %24 = icmp ugt i64 %toplen.0.i, %20
  %or.cond.i = or i1 %24, %23
  %25 = select i1 %or.cond.i, i64 %20, i64 0
  %toplen.1.i = add i64 %25, %toplen.0.i
  %26 = zext i1 %or.cond.i to i32
  %toget.1.i = add nsw i32 %26, %toget.0.i
  %27 = icmp slt i32 %toget.1.i, %21
  %or.cond1.i = and i1 %or.cond.i, %27
  br i1 %or.cond1.i, label %18, label %28

; <label>:28                                      ; preds = %18
  %toget.1.i.lcssa = phi i32 [ %toget.1.i, %18 ]
  tail call void @lua_concat(%struct.lua_State* %16, i32 %toget.1.i.lcssa) #1
  %29 = load i32, i32* %11, align 4, !tbaa !80
  %30 = sub i32 1, %toget.1.i.lcssa
  %31 = add i32 %30, %29
  store i32 %31, i32* %11, align 4, !tbaa !80
  br label %adjuststack.exit

adjuststack.exit:                                 ; preds = %0, %28, %6
  ret i8* %3
}

; Function Attrs: nounwind uwtable
define void @luaL_addvalue(%struct.luaL_Buffer* %B) #0 {
  %vl = alloca i64, align 8
  %1 = getelementptr inbounds %struct.luaL_Buffer, %struct.luaL_Buffer* %B, i64 0, i32 2
  %2 = load %struct.lua_State*, %struct.lua_State** %1, align 8, !tbaa !77
  %3 = bitcast i64* %vl to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3) #1
  %4 = call i8* @lua_tolstring(%struct.lua_State* %2, i32 -1, i64* nonnull %vl) #1
  %5 = load i64, i64* %vl, align 8, !tbaa !39
  %6 = getelementptr inbounds %struct.luaL_Buffer, %struct.luaL_Buffer* %B, i64 0, i32 0
  %7 = load i8*, i8** %6, align 8, !tbaa !79
  %8 = getelementptr inbounds %struct.luaL_Buffer, %struct.luaL_Buffer* %B, i64 0, i32 3, i64 0
  %9 = ptrtoint i8* %7 to i64
  %10 = ptrtoint i8* %8 to i64
  %11 = add i64 %10, 8192
  %12 = sub i64 %11, %9
  %13 = icmp ugt i64 %5, %12
  br i1 %13, label %18, label %14

; <label>:14                                      ; preds = %0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %7, i8* %4, i64 %5, i32 1, i1 false)
  %15 = load i64, i64* %vl, align 8, !tbaa !39
  %16 = load i8*, i8** %6, align 8, !tbaa !79
  %17 = getelementptr inbounds i8, i8* %16, i64 %15
  store i8* %17, i8** %6, align 8, !tbaa !79
  call void @lua_settop(%struct.lua_State* %2, i32 -2) #1
  br label %adjuststack.exit

; <label>:18                                      ; preds = %0
  %19 = icmp eq i8* %7, %8
  br i1 %19, label %.emptybuffer.exit.thread_crit_edge, label %20

.emptybuffer.exit.thread_crit_edge:               ; preds = %18
  %.pre = getelementptr inbounds %struct.luaL_Buffer, %struct.luaL_Buffer* %B, i64 0, i32 1
  br label %emptybuffer.exit.thread

; <label>:20                                      ; preds = %18
  %21 = sub i64 %9, %10
  %22 = load %struct.lua_State*, %struct.lua_State** %1, align 8, !tbaa !77
  call void @lua_pushlstring(%struct.lua_State* %22, i8* %8, i64 %21) #1
  store i8* %8, i8** %6, align 8, !tbaa !79
  %23 = getelementptr inbounds %struct.luaL_Buffer, %struct.luaL_Buffer* %B, i64 0, i32 1
  %24 = load i32, i32* %23, align 4, !tbaa !80
  %25 = add nsw i32 %24, 1
  store i32 %25, i32* %23, align 4, !tbaa !80
  call void @lua_insert(%struct.lua_State* %2, i32 -2) #1
  br label %emptybuffer.exit.thread

emptybuffer.exit.thread:                          ; preds = %.emptybuffer.exit.thread_crit_edge, %20
  %.pre-phi = phi i32* [ %.pre, %.emptybuffer.exit.thread_crit_edge ], [ %23, %20 ]
  %26 = load i32, i32* %.pre-phi, align 4, !tbaa !80
  %27 = add nsw i32 %26, 1
  store i32 %27, i32* %.pre-phi, align 4, !tbaa !80
  %28 = icmp sgt i32 %26, 0
  br i1 %28, label %29, label %adjuststack.exit

; <label>:29                                      ; preds = %emptybuffer.exit.thread
  %30 = load %struct.lua_State*, %struct.lua_State** %1, align 8, !tbaa !77
  %31 = call i64 @lua_objlen(%struct.lua_State* %30, i32 -1) #1
  br label %32

; <label>:32                                      ; preds = %32, %29
  %toplen.0.i = phi i64 [ %31, %29 ], [ %toplen.1.i, %32 ]
  %toget.0.i = phi i32 [ 1, %29 ], [ %toget.1.i, %32 ]
  %33 = xor i32 %toget.0.i, -1
  %34 = call i64 @lua_objlen(%struct.lua_State* %30, i32 %33) #1
  %35 = load i32, i32* %.pre-phi, align 4, !tbaa !80
  %36 = sub nsw i32 %35, %toget.0.i
  %37 = icmp sgt i32 %36, 8
  %38 = icmp ugt i64 %toplen.0.i, %34
  %or.cond.i = or i1 %38, %37
  %39 = select i1 %or.cond.i, i64 %34, i64 0
  %toplen.1.i = add i64 %39, %toplen.0.i
  %40 = zext i1 %or.cond.i to i32
  %toget.1.i = add nsw i32 %40, %toget.0.i
  %41 = icmp slt i32 %toget.1.i, %35
  %or.cond1.i = and i1 %or.cond.i, %41
  br i1 %or.cond1.i, label %32, label %42

; <label>:42                                      ; preds = %32
  %toget.1.i.lcssa = phi i32 [ %toget.1.i, %32 ]
  call void @lua_concat(%struct.lua_State* %30, i32 %toget.1.i.lcssa) #1
  %43 = load i32, i32* %.pre-phi, align 4, !tbaa !80
  %44 = sub i32 1, %toget.1.i.lcssa
  %45 = add i32 %44, %43
  store i32 %45, i32* %.pre-phi, align 4, !tbaa !80
  br label %adjuststack.exit

adjuststack.exit:                                 ; preds = %42, %emptybuffer.exit.thread, %14
  call void @llvm.lifetime.end(i64 8, i8* %3) #1
  ret void
}

; Function Attrs: nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #1

; Function Attrs: nounwind uwtable
define i32 @luaL_ref(%struct.lua_State* %L, i32 %t) #0 {
  %t.off = add i32 %t, 9999
  %1 = icmp ugt i32 %t.off, 9999
  br i1 %1, label %6, label %2

; <label>:2                                       ; preds = %0
  %3 = tail call i32 @lua_gettop(%struct.lua_State* %L) #1
  %4 = add i32 %t, 1
  %5 = add i32 %4, %3
  br label %6

; <label>:6                                       ; preds = %0, %2
  %7 = phi i32 [ %5, %2 ], [ %t, %0 ]
  %8 = tail call i32 @lua_type(%struct.lua_State* %L, i32 -1) #1
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %11

; <label>:10                                      ; preds = %6
  tail call void @lua_settop(%struct.lua_State* %L, i32 -2) #1
  br label %21

; <label>:11                                      ; preds = %6
  tail call void @lua_rawgeti(%struct.lua_State* %L, i32 %7, i32 0) #1
  %12 = tail call i64 @lua_tointeger(%struct.lua_State* %L, i32 -1) #1
  %13 = trunc i64 %12 to i32
  tail call void @lua_settop(%struct.lua_State* %L, i32 -2) #1
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %16, label %15

; <label>:15                                      ; preds = %11
  tail call void @lua_rawgeti(%struct.lua_State* %L, i32 %7, i32 %13) #1
  tail call void @lua_rawseti(%struct.lua_State* %L, i32 %7, i32 0) #1
  br label %20

; <label>:16                                      ; preds = %11
  %17 = tail call i64 @lua_objlen(%struct.lua_State* %L, i32 %7) #1
  %18 = trunc i64 %17 to i32
  %19 = add nsw i32 %18, 1
  br label %20

; <label>:20                                      ; preds = %16, %15
  %ref.0 = phi i32 [ %13, %15 ], [ %19, %16 ]
  tail call void @lua_rawseti(%struct.lua_State* %L, i32 %7, i32 %ref.0) #1
  br label %21

; <label>:21                                      ; preds = %20, %10
  %.0 = phi i32 [ -1, %10 ], [ %ref.0, %20 ]
  ret i32 %.0
}

; Function Attrs: nounwind uwtable
define void @luaL_unref(%struct.lua_State* %L, i32 %t, i32 %ref) #0 {
  %1 = icmp sgt i32 %ref, -1
  br i1 %1, label %2, label %11

; <label>:2                                       ; preds = %0
  %t.off = add i32 %t, 9999
  %3 = icmp ugt i32 %t.off, 9999
  br i1 %3, label %8, label %4

; <label>:4                                       ; preds = %2
  %5 = tail call i32 @lua_gettop(%struct.lua_State* %L) #1
  %6 = add i32 %t, 1
  %7 = add i32 %6, %5
  br label %8

; <label>:8                                       ; preds = %2, %4
  %9 = phi i32 [ %7, %4 ], [ %t, %2 ]
  tail call void @lua_rawgeti(%struct.lua_State* %L, i32 %9, i32 0) #1
  tail call void @lua_rawseti(%struct.lua_State* %L, i32 %9, i32 %ref) #1
  %10 = sext i32 %ref to i64
  tail call void @lua_pushinteger(%struct.lua_State* %L, i64 %10) #1
  tail call void @lua_rawseti(%struct.lua_State* %L, i32 %9, i32 0) #1
  br label %11

; <label>:11                                      ; preds = %8, %0
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @luaL_loadfile(%struct.lua_State* %L, i8* %filename) #0 {
  %lf = alloca %struct.LoadF, align 8
  %1 = bitcast %struct.LoadF* %lf to i8*
  call void @llvm.lifetime.start(i64 8208, i8* %1) #1
  %2 = tail call i32 @lua_gettop(%struct.lua_State* %L) #1
  %3 = add nsw i32 %2, 1
  %4 = getelementptr inbounds %struct.LoadF, %struct.LoadF* %lf, i64 0, i32 0
  store i32 0, i32* %4, align 8, !tbaa !81
  %5 = icmp eq i8* %filename, null
  br i1 %5, label %6, label %11

; <label>:6                                       ; preds = %0
  tail call void @lua_pushlstring(%struct.lua_State* %L, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.15, i64 0, i64 0), i64 6) #1
  %7 = load i64, i64* bitcast (%struct._IO_FILE** @stdin to i64*), align 8, !tbaa !25
  %8 = getelementptr inbounds %struct.LoadF, %struct.LoadF* %lf, i64 0, i32 1
  %9 = bitcast %struct._IO_FILE** %8 to i64*
  store i64 %7, i64* %9, align 8, !tbaa !83
  %10 = inttoptr i64 %7 to %struct._IO_FILE*
  br label %23

; <label>:11                                      ; preds = %0
  %12 = tail call i8* (%struct.lua_State*, i8*, ...) @lua_pushfstring(%struct.lua_State* %L, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.16, i64 0, i64 0), i8* %filename) #1
  %13 = tail call %struct._IO_FILE* @fopen(i8* %filename, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.17, i64 0, i64 0)) #1
  %14 = getelementptr inbounds %struct.LoadF, %struct.LoadF* %lf, i64 0, i32 1
  store %struct._IO_FILE* %13, %struct._IO_FILE** %14, align 8, !tbaa !83
  %15 = icmp eq %struct._IO_FILE* %13, null
  br i1 %15, label %16, label %23

; <label>:16                                      ; preds = %11
  %17 = tail call i32* @__errno_location() #12
  %18 = load i32, i32* %17, align 4, !tbaa !38
  %19 = tail call i8* @strerror(i32 %18) #1
  %20 = tail call i8* @lua_tolstring(%struct.lua_State* %L, i32 %3, i64* null) #1
  %21 = getelementptr inbounds i8, i8* %20, i64 1
  %22 = tail call i8* (%struct.lua_State*, i8*, ...) @lua_pushfstring(%struct.lua_State* %L, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.23, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.18, i64 0, i64 0), i8* %21, i8* %19) #1
  tail call void @lua_remove(%struct.lua_State* %L, i32 %3) #1
  br label %67

; <label>:23                                      ; preds = %11, %6
  %.pre-phi = phi %struct._IO_FILE** [ %14, %11 ], [ %8, %6 ]
  %24 = phi %struct._IO_FILE* [ %13, %11 ], [ %10, %6 ]
  %25 = tail call i32 @_IO_getc(%struct._IO_FILE* %24) #1
  %26 = icmp eq i32 %25, 35
  br i1 %26, label %27, label %33

; <label>:27                                      ; preds = %23
  store i32 1, i32* %4, align 8, !tbaa !81
  br label %28

; <label>:28                                      ; preds = %28, %27
  %29 = tail call i32 @_IO_getc(%struct._IO_FILE* %24) #1
  switch i32 %29, label %28 [
    i32 10, label %31
    i32 -1, label %.thread
  ]

.thread:                                          ; preds = %28
  %30 = icmp ne i8* %filename, null
  br label %47

; <label>:31                                      ; preds = %28
  %32 = tail call i32 @_IO_getc(%struct._IO_FILE* %24) #1
  br label %33

; <label>:33                                      ; preds = %31, %23
  %c.0 = phi i32 [ %32, %31 ], [ %25, %23 ]
  %34 = icmp eq i32 %c.0, 27
  %35 = icmp ne i8* %filename, null
  %or.cond = and i1 %35, %34
  br i1 %or.cond, label %36, label %47

; <label>:36                                      ; preds = %33
  %37 = tail call %struct._IO_FILE* @freopen(i8* %filename, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20, i64 0, i64 0), %struct._IO_FILE* %24) #1
  store %struct._IO_FILE* %37, %struct._IO_FILE** %.pre-phi, align 8, !tbaa !83
  %38 = icmp eq %struct._IO_FILE* %37, null
  br i1 %38, label %39, label %.preheader.preheader

.preheader.preheader:                             ; preds = %36
  br label %.preheader

; <label>:39                                      ; preds = %36
  %40 = tail call i32* @__errno_location() #12
  %41 = load i32, i32* %40, align 4, !tbaa !38
  %42 = tail call i8* @strerror(i32 %41) #1
  %43 = tail call i8* @lua_tolstring(%struct.lua_State* %L, i32 %3, i64* null) #1
  %44 = getelementptr inbounds i8, i8* %43, i64 1
  %45 = tail call i8* (%struct.lua_State*, i8*, ...) @lua_pushfstring(%struct.lua_State* %L, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.23, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.21, i64 0, i64 0), i8* %44, i8* %42) #1
  tail call void @lua_remove(%struct.lua_State* %L, i32 %3) #1
  br label %67

.preheader:                                       ; preds = %.preheader.preheader, %.preheader
  %46 = tail call i32 @_IO_getc(%struct._IO_FILE* %37) #1
  switch i32 %46, label %.preheader [
    i32 -1, label %.critedge
    i32 27, label %.critedge
  ]

.critedge:                                        ; preds = %.preheader, %.preheader
  %.lcssa = phi i32 [ %46, %.preheader ], [ %46, %.preheader ]
  store i32 0, i32* %4, align 8, !tbaa !81
  br label %47

; <label>:47                                      ; preds = %.thread, %.critedge, %33
  %48 = phi %struct._IO_FILE* [ %37, %.critedge ], [ %24, %33 ], [ %24, %.thread ]
  %49 = phi i1 [ true, %.critedge ], [ %35, %33 ], [ %30, %.thread ]
  %c.1 = phi i32 [ %.lcssa, %.critedge ], [ %c.0, %33 ], [ -1, %.thread ]
  %50 = tail call i32 @ungetc(i32 %c.1, %struct._IO_FILE* %48) #1
  %51 = tail call i8* @lua_tolstring(%struct.lua_State* %L, i32 -1, i64* null) #1
  %52 = call i32 @lua_load(%struct.lua_State* %L, i8* (%struct.lua_State*, i8*, i64*)* nonnull @getF, i8* %1, i8* %51) #1
  %53 = load %struct._IO_FILE*, %struct._IO_FILE** %.pre-phi, align 8, !tbaa !83
  %54 = call i32 @ferror(%struct._IO_FILE* %53) #1
  br i1 %49, label %55, label %57

; <label>:55                                      ; preds = %47
  %56 = call i32 @fclose(%struct._IO_FILE* %53) #1
  br label %57

; <label>:57                                      ; preds = %55, %47
  %58 = icmp eq i32 %54, 0
  br i1 %58, label %66, label %59

; <label>:59                                      ; preds = %57
  call void @lua_settop(%struct.lua_State* %L, i32 %3) #1
  %60 = tail call i32* @__errno_location() #12
  %61 = load i32, i32* %60, align 4, !tbaa !38
  %62 = call i8* @strerror(i32 %61) #1
  %63 = call i8* @lua_tolstring(%struct.lua_State* %L, i32 %3, i64* null) #1
  %64 = getelementptr inbounds i8, i8* %63, i64 1
  %65 = call i8* (%struct.lua_State*, i8*, ...) @lua_pushfstring(%struct.lua_State* %L, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.23, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.22, i64 0, i64 0), i8* %64, i8* %62) #1
  call void @lua_remove(%struct.lua_State* %L, i32 %3) #1
  br label %67

; <label>:66                                      ; preds = %57
  call void @lua_remove(%struct.lua_State* %L, i32 %3) #1
  br label %67

; <label>:67                                      ; preds = %66, %59, %39, %16
  %.0 = phi i32 [ 6, %39 ], [ 6, %59 ], [ %52, %66 ], [ 6, %16 ]
  call void @llvm.lifetime.end(i64 8208, i8* %1) #1
  ret i32 %.0
}

; Function Attrs: nounwind
declare noalias %struct._IO_FILE* @fopen(i8* nocapture readonly, i8* nocapture readonly) #5

; Function Attrs: nounwind
declare i32 @_IO_getc(%struct._IO_FILE* nocapture) #5

declare %struct._IO_FILE* @freopen(i8*, i8*, %struct._IO_FILE*) #6

; Function Attrs: nounwind
declare i32 @ungetc(i32, %struct._IO_FILE* nocapture) #5

; Function Attrs: nounwind readonly
declare i32 @ferror(%struct._IO_FILE* nocapture) #4

; Function Attrs: nounwind
declare i32 @fclose(%struct._IO_FILE* nocapture) #5

; Function Attrs: nounwind uwtable
define i32 @luaL_loadbuffer(%struct.lua_State* %L, i8* %buff, i64 %size, i8* %name) #0 {
  %ls = alloca %struct.LoadS, align 8
  %1 = bitcast %struct.LoadS* %ls to i8*
  call void @llvm.lifetime.start(i64 16, i8* %1) #1
  %2 = getelementptr inbounds %struct.LoadS, %struct.LoadS* %ls, i64 0, i32 0
  store i8* %buff, i8** %2, align 8, !tbaa !84
  %3 = getelementptr inbounds %struct.LoadS, %struct.LoadS* %ls, i64 0, i32 1
  store i64 %size, i64* %3, align 8, !tbaa !86
  %4 = call i32 @lua_load(%struct.lua_State* %L, i8* (%struct.lua_State*, i8*, i64*)* nonnull @getS, i8* %1, i8* %name) #1
  call void @llvm.lifetime.end(i64 16, i8* %1) #1
  ret i32 %4
}

; Function Attrs: nounwind uwtable
define i32 @luaL_loadstring(%struct.lua_State* %L, i8* %s) #0 {
  %ls.i = alloca %struct.LoadS, align 8
  %1 = tail call i64 @strlen(i8* %s) #11
  %2 = bitcast %struct.LoadS* %ls.i to i8*
  call void @llvm.lifetime.start(i64 16, i8* %2) #1
  %3 = getelementptr inbounds %struct.LoadS, %struct.LoadS* %ls.i, i64 0, i32 0
  store i8* %s, i8** %3, align 8, !tbaa !84
  %4 = getelementptr inbounds %struct.LoadS, %struct.LoadS* %ls.i, i64 0, i32 1
  store i64 %1, i64* %4, align 8, !tbaa !86
  %5 = call i32 @lua_load(%struct.lua_State* %L, i8* (%struct.lua_State*, i8*, i64*)* nonnull @getS, i8* %2, i8* %s) #1
  call void @llvm.lifetime.end(i64 16, i8* %2) #1
  ret i32 %5
}

; Function Attrs: nounwind uwtable
define %struct.lua_State* @luaL_newstate() #0 {
  %1 = tail call %struct.lua_State* @lua_newstate(i8* (i8*, i8*, i64, i64)* nonnull @l_alloc, i8* null) #1
  %2 = icmp eq %struct.lua_State* %1, null
  br i1 %2, label %5, label %3

; <label>:3                                       ; preds = %0
  %4 = tail call i32 (%struct.lua_State*)* @lua_atpanic(%struct.lua_State* %1, i32 (%struct.lua_State*)* nonnull @panic) #1
  br label %5

; <label>:5                                       ; preds = %0, %3
  ret %struct.lua_State* %1
}

; Function Attrs: nounwind
declare i8* @strerror(i32) #5

; Function Attrs: nounwind readnone
declare i32* @__errno_location() #7

; Function Attrs: nounwind
declare i32 @feof(%struct._IO_FILE* nocapture) #5

; Function Attrs: nounwind
declare i64 @fread(i8* nocapture, i64, i64, %struct._IO_FILE* nocapture) #5

; Function Attrs: nounwind
declare void @free(i8* nocapture) #5

; Function Attrs: nounwind
declare noalias i8* @realloc(i8* nocapture, i64) #5

; Function Attrs: nounwind
declare i32 @fprintf(%struct._IO_FILE* nocapture, i8* nocapture readonly, ...) #5

; Function Attrs: nounwind uwtable
define internal i8* @getF(%struct.lua_State* nocapture readnone %L, i8* %ud, i64* nocapture %size) #0 {
  %1 = bitcast i8* %ud to i32*
  %2 = load i32, i32* %1, align 4, !tbaa !81
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %5, label %4

; <label>:4                                       ; preds = %0
  store i32 0, i32* %1, align 4, !tbaa !81
  store i64 1, i64* %size, align 8, !tbaa !39
  br label %17

; <label>:5                                       ; preds = %0
  %6 = getelementptr inbounds i8, i8* %ud, i64 8
  %7 = bitcast i8* %6 to %struct._IO_FILE**
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !tbaa !83
  %9 = tail call i32 @feof(%struct._IO_FILE* %8) #1
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %17

; <label>:11                                      ; preds = %5
  %12 = getelementptr inbounds i8, i8* %ud, i64 16
  %13 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !tbaa !83
  %14 = tail call i64 @fread(i8* %12, i64 1, i64 8192, %struct._IO_FILE* %13) #1
  store i64 %14, i64* %size, align 8, !tbaa !39
  %15 = icmp ne i64 %14, 0
  %16 = select i1 %15, i8* %12, i8* null
  br label %17

; <label>:17                                      ; preds = %5, %11, %4
  %.0 = phi i8* [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.24, i64 0, i64 0), %4 ], [ %16, %11 ], [ null, %5 ]
  ret i8* %.0
}

; Function Attrs: nounwind uwtable
define internal i8* @getS(%struct.lua_State* nocapture readnone %L, i8* nocapture %ud, i64* nocapture %size) #0 {
  %1 = getelementptr inbounds i8, i8* %ud, i64 8
  %2 = bitcast i8* %1 to i64*
  %3 = load i64, i64* %2, align 8, !tbaa !86
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %8, label %5

; <label>:5                                       ; preds = %0
  store i64 %3, i64* %size, align 8, !tbaa !39
  store i64 0, i64* %2, align 8, !tbaa !86
  %6 = bitcast i8* %ud to i8**
  %7 = load i8*, i8** %6, align 8, !tbaa !84
  br label %8

; <label>:8                                       ; preds = %0, %5
  %.0 = phi i8* [ %7, %5 ], [ null, %0 ]
  ret i8* %.0
}

; Function Attrs: nounwind uwtable
define internal noalias i8* @l_alloc(i8* nocapture readnone %ud, i8* nocapture %ptr, i64 %osize, i64 %nsize) #0 {
  %1 = icmp eq i64 %nsize, 0
  br i1 %1, label %2, label %3

; <label>:2                                       ; preds = %0
  tail call void @free(i8* %ptr) #1
  br label %5

; <label>:3                                       ; preds = %0
  %4 = tail call i8* @realloc(i8* %ptr, i64 %nsize) #1
  br label %5

; <label>:5                                       ; preds = %3, %2
  %.0 = phi i8* [ null, %2 ], [ %4, %3 ]
  ret i8* %.0
}

; Function Attrs: nounwind uwtable
define internal i32 @panic(%struct.lua_State* %L) #0 {
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !25
  %2 = tail call i8* @lua_tolstring(%struct.lua_State* %L, i32 -1, i64* null) #1
  %3 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.25, i64 0, i64 0), i8* %2) #13
  ret i32 0
}

; Function Attrs: nounwind uwtable
define i32 @luaopen_base(%struct.lua_State* %L) #0 {
  tail call void @lua_pushvalue(%struct.lua_State* %L, i32 -10002) #1
  tail call void @lua_setfield(%struct.lua_State* %L, i32 -10002, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1.9, i64 0, i64 0)) #1
  tail call void @luaL_register(%struct.lua_State* %L, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1.9, i64 0, i64 0), %struct.luaL_Reg* getelementptr inbounds ([25 x %struct.luaL_Reg], [25 x %struct.luaL_Reg]* @base_funcs, i64 0, i64 0)) #1
  tail call void @lua_pushlstring(%struct.lua_State* %L, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2.10, i64 0, i64 0), i64 7) #1
  tail call void @lua_setfield(%struct.lua_State* %L, i32 -10002, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.3.11, i64 0, i64 0)) #1
  tail call void @lua_pushcclosure(%struct.lua_State* %L, i32 (%struct.lua_State*)* nonnull @ipairsaux, i32 0) #1
  tail call void @lua_pushcclosure(%struct.lua_State* %L, i32 (%struct.lua_State*)* nonnull @luaB_ipairs, i32 1) #1
  tail call void @lua_setfield(%struct.lua_State* %L, i32 -2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4.12, i64 0, i64 0)) #1
  tail call void @lua_pushcclosure(%struct.lua_State* %L, i32 (%struct.lua_State*)* nonnull @luaB_next, i32 0) #1
  tail call void @lua_pushcclosure(%struct.lua_State* %L, i32 (%struct.lua_State*)* nonnull @luaB_pairs, i32 1) #1
  tail call void @lua_setfield(%struct.lua_State* %L, i32 -2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5.13, i64 0, i64 0)) #1
  tail call void @lua_createtable(%struct.lua_State* %L, i32 0, i32 1) #1
  tail call void @lua_pushvalue(%struct.lua_State* %L, i32 -1) #1
  %1 = tail call i32 @lua_setmetatable(%struct.lua_State* %L, i32 -2) #1
  tail call void @lua_pushlstring(%struct.lua_State* %L, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6.14, i64 0, i64 0), i64 2) #1
  tail call void @lua_setfield(%struct.lua_State* %L, i32 -2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.15, i64 0, i64 0)) #1
  tail call void @lua_pushcclosure(%struct.lua_State* %L, i32 (%struct.lua_State*)* nonnull @luaB_newproxy, i32 1) #1
  tail call void @lua_setfield(%struct.lua_State* %L, i32 -10002, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.8.16, i64 0, i64 0)) #1
  tail call void @luaL_register(%struct.lua_State* %L, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.19, i64 0, i64 0), %struct.luaL_Reg* getelementptr inbounds ([7 x %struct.luaL_Reg], [7 x %struct.luaL_Reg]* @co_funcs, i64 0, i64 0)) #1
  ret i32 2
}

; Function Attrs: nounwind
declare i32 @fputs(i8* nocapture readonly, %struct._IO_FILE* nocapture) #5

; Function Attrs: nounwind
declare i64 @strtoul(i8* readonly, i8** nocapture, i32) #5

; Function Attrs: nounwind readnone
declare i16** @__ctype_b_loc() #7

; Function Attrs: nounwind
declare i32 @fputc(i32, %struct._IO_FILE* nocapture) #1

; Function Attrs: nounwind uwtable
define internal i32 @ipairsaux(%struct.lua_State* %L) #0 {
  %1 = tail call i64 @luaL_checkinteger(%struct.lua_State* %L, i32 2) #1
  %2 = trunc i64 %1 to i32
  tail call void @luaL_checktype(%struct.lua_State* %L, i32 1, i32 5) #1
  %3 = add nsw i32 %2, 1
  %4 = sext i32 %3 to i64
  tail call void @lua_pushinteger(%struct.lua_State* %L, i64 %4) #1
  tail call void @lua_rawgeti(%struct.lua_State* %L, i32 1, i32 %3) #1
  %5 = tail call i32 @lua_type(%struct.lua_State* %L, i32 -1) #1
  %6 = icmp eq i32 %5, 0
  %7 = select i1 %6, i32 0, i32 2
  ret i32 %7
}

; Function Attrs: nounwind uwtable
define internal i32 @luaB_ipairs(%struct.lua_State* %L) #0 {
  tail call void @luaL_checktype(%struct.lua_State* %L, i32 1, i32 5) #1
  tail call void @lua_pushvalue(%struct.lua_State* %L, i32 -10003) #1
  tail call void @lua_pushvalue(%struct.lua_State* %L, i32 1) #1
  tail call void @lua_pushinteger(%struct.lua_State* %L, i64 0) #1
  ret i32 3
}

; Function Attrs: nounwind uwtable
define internal i32 @luaB_next(%struct.lua_State* %L) #0 {
  tail call void @luaL_checktype(%struct.lua_State* %L, i32 1, i32 5) #1
  tail call void @lua_settop(%struct.lua_State* %L, i32 2) #1
  %1 = tail call i32 @lua_next(%struct.lua_State* %L, i32 1) #1
  %2 = icmp eq i32 %1, 0
  br i1 %2, label %3, label %4

; <label>:3                                       ; preds = %0
  tail call void @lua_pushnil(%struct.lua_State* %L) #1
  br label %4

; <label>:4                                       ; preds = %0, %3
  %.0 = phi i32 [ 1, %3 ], [ 2, %0 ]
  ret i32 %.0
}

; Function Attrs: nounwind uwtable
define internal i32 @luaB_pairs(%struct.lua_State* %L) #0 {
  tail call void @luaL_checktype(%struct.lua_State* %L, i32 1, i32 5) #1
  tail call void @lua_pushvalue(%struct.lua_State* %L, i32 -10003) #1
  tail call void @lua_pushvalue(%struct.lua_State* %L, i32 1) #1
  tail call void @lua_pushnil(%struct.lua_State* %L) #1
  ret i32 3
}

; Function Attrs: nounwind uwtable
define internal i32 @luaB_newproxy(%struct.lua_State* %L) #0 {
  tail call void @lua_settop(%struct.lua_State* %L, i32 1) #1
  %1 = tail call i8* @lua_newuserdata(%struct.lua_State* %L, i64 0) #1
  %2 = tail call i32 @lua_toboolean(%struct.lua_State* %L, i32 1) #1
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %18, label %4

; <label>:4                                       ; preds = %0
  %5 = tail call i32 @lua_type(%struct.lua_State* %L, i32 1) #1
  %6 = icmp eq i32 %5, 1
  br i1 %6, label %7, label %8

; <label>:7                                       ; preds = %4
  tail call void @lua_createtable(%struct.lua_State* %L, i32 0, i32 0) #1
  tail call void @lua_pushvalue(%struct.lua_State* %L, i32 -1) #1
  tail call void @lua_pushboolean(%struct.lua_State* %L, i32 1) #1
  tail call void @lua_rawset(%struct.lua_State* %L, i32 -10003) #1
  br label %16

; <label>:8                                       ; preds = %4
  %9 = tail call i32 @lua_getmetatable(%struct.lua_State* %L, i32 1) #1
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %.critedge, label %11

; <label>:11                                      ; preds = %8
  tail call void @lua_rawget(%struct.lua_State* %L, i32 -10003) #1
  %12 = tail call i32 @lua_toboolean(%struct.lua_State* %L, i32 -1) #1
  tail call void @lua_settop(%struct.lua_State* %L, i32 -2) #1
  %phitmp = icmp eq i32 %12, 0
  br i1 %phitmp, label %.critedge, label %14

.critedge:                                        ; preds = %11, %8
  %13 = tail call i32 @luaL_argerror(%struct.lua_State* %L, i32 1, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.64, i64 0, i64 0)) #1
  br label %14

; <label>:14                                      ; preds = %11, %.critedge
  %15 = tail call i32 @lua_getmetatable(%struct.lua_State* %L, i32 1) #1
  br label %16

; <label>:16                                      ; preds = %7, %14
  %17 = tail call i32 @lua_setmetatable(%struct.lua_State* %L, i32 2) #1
  br label %18

; <label>:18                                      ; preds = %0, %16
  ret i32 1
}

; Function Attrs: nounwind uwtable
define internal i32 @luaB_cocreate(%struct.lua_State* %L) #0 {
  %1 = tail call %struct.lua_State* @lua_newthread(%struct.lua_State* %L) #1
  %2 = tail call i32 @lua_type(%struct.lua_State* %L, i32 1) #1
  %3 = icmp eq i32 %2, 6
  br i1 %3, label %4, label %7

; <label>:4                                       ; preds = %0
  %5 = tail call i32 @lua_iscfunction(%struct.lua_State* %L, i32 1) #1
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %9, label %7

; <label>:7                                       ; preds = %4, %0
  %8 = tail call i32 @luaL_argerror(%struct.lua_State* %L, i32 1, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.71, i64 0, i64 0)) #1
  br label %9

; <label>:9                                       ; preds = %4, %7
  tail call void @lua_pushvalue(%struct.lua_State* %L, i32 1) #1
  tail call void @lua_xmove(%struct.lua_State* %L, %struct.lua_State* %1, i32 1) #1
  ret i32 1
}

; Function Attrs: nounwind uwtable
define internal i32 @luaB_coresume(%struct.lua_State* %L) #0 {
  %1 = tail call %struct.lua_State* @lua_tothread(%struct.lua_State* %L, i32 1) #1
  %2 = icmp eq %struct.lua_State* %1, null
  br i1 %2, label %3, label %5

; <label>:3                                       ; preds = %0
  %4 = tail call i32 @luaL_argerror(%struct.lua_State* %L, i32 1, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.72, i64 0, i64 0)) #1
  br label %5

; <label>:5                                       ; preds = %0, %3
  %6 = tail call i32 @lua_gettop(%struct.lua_State* %L) #1
  %7 = add nsw i32 %6, -1
  %8 = tail call fastcc i32 @auxresume(%struct.lua_State* %L, %struct.lua_State* %1, i32 %7)
  %9 = icmp slt i32 %8, 0
  br i1 %9, label %10, label %11

; <label>:10                                      ; preds = %5
  tail call void @lua_pushboolean(%struct.lua_State* %L, i32 0) #1
  tail call void @lua_insert(%struct.lua_State* %L, i32 -2) #1
  br label %14

; <label>:11                                      ; preds = %5
  tail call void @lua_pushboolean(%struct.lua_State* %L, i32 1) #1
  %12 = add nsw i32 %8, 1
  %13 = xor i32 %8, -1
  tail call void @lua_insert(%struct.lua_State* %L, i32 %13) #1
  br label %14

; <label>:14                                      ; preds = %11, %10
  %.0 = phi i32 [ 2, %10 ], [ %12, %11 ]
  ret i32 %.0
}

; Function Attrs: nounwind uwtable
define internal i32 @luaB_corunning(%struct.lua_State* %L) #0 {
  %1 = tail call i32 @lua_pushthread(%struct.lua_State* %L) #1
  %2 = icmp eq i32 %1, 0
  br i1 %2, label %4, label %3

; <label>:3                                       ; preds = %0
  tail call void @lua_pushnil(%struct.lua_State* %L) #1
  br label %4

; <label>:4                                       ; preds = %0, %3
  ret i32 1
}

; Function Attrs: nounwind uwtable
define internal i32 @luaB_costatus(%struct.lua_State* %L) #0 {
  %ar.i = alloca %struct.lua_Debug, align 8
  %1 = tail call %struct.lua_State* @lua_tothread(%struct.lua_State* %L, i32 1) #1
  %2 = icmp eq %struct.lua_State* %1, null
  br i1 %2, label %3, label %5

; <label>:3                                       ; preds = %0
  %4 = tail call i32 @luaL_argerror(%struct.lua_State* %L, i32 1, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.72, i64 0, i64 0)) #1
  br label %5

; <label>:5                                       ; preds = %0, %3
  %6 = icmp eq %struct.lua_State* %1, %L
  br i1 %6, label %costatus.exit, label %7

; <label>:7                                       ; preds = %5
  %8 = tail call i32 @lua_status(%struct.lua_State* %1) #1
  switch i32 %8, label %17 [
    i32 1, label %costatus.exit
    i32 0, label %9
  ]

; <label>:9                                       ; preds = %7
  %10 = bitcast %struct.lua_Debug* %ar.i to i8*
  call void @llvm.lifetime.start(i64 120, i8* %10) #1
  %11 = call i32 @lua_getstack(%struct.lua_State* %1, i32 0, %struct.lua_Debug* nonnull %ar.i) #1
  %12 = icmp sgt i32 %11, 0
  br i1 %12, label %16, label %13

; <label>:13                                      ; preds = %9
  %14 = call i32 @lua_gettop(%struct.lua_State* %1) #1
  %15 = icmp eq i32 %14, 0
  %..i = select i1 %15, i64 3, i64 1
  br label %16

; <label>:16                                      ; preds = %13, %9
  %.0.i = phi i64 [ 2, %9 ], [ %..i, %13 ]
  call void @llvm.lifetime.end(i64 120, i8* %10) #1
  br label %costatus.exit

; <label>:17                                      ; preds = %7
  br label %costatus.exit

costatus.exit:                                    ; preds = %5, %7, %16, %17
  %.1.i = phi i64 [ 3, %17 ], [ %.0.i, %16 ], [ 0, %5 ], [ 1, %7 ]
  %18 = getelementptr inbounds [4 x i8*], [4 x i8*]* @statnames, i64 0, i64 %.1.i
  %19 = load i8*, i8** %18, align 8, !tbaa !25
  call void @lua_pushstring(%struct.lua_State* %L, i8* %19) #1
  ret i32 1
}

; Function Attrs: nounwind uwtable
define internal i32 @luaB_cowrap(%struct.lua_State* %L) #0 {
  %1 = tail call %struct.lua_State* @lua_newthread(%struct.lua_State* %L) #1
  %2 = tail call i32 @lua_type(%struct.lua_State* %L, i32 1) #1
  %3 = icmp eq i32 %2, 6
  br i1 %3, label %4, label %7

; <label>:4                                       ; preds = %0
  %5 = tail call i32 @lua_iscfunction(%struct.lua_State* %L, i32 1) #1
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %luaB_cocreate.exit, label %7

; <label>:7                                       ; preds = %4, %0
  %8 = tail call i32 @luaL_argerror(%struct.lua_State* %L, i32 1, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.71, i64 0, i64 0)) #1
  br label %luaB_cocreate.exit

luaB_cocreate.exit:                               ; preds = %4, %7
  tail call void @lua_pushvalue(%struct.lua_State* %L, i32 1) #1
  tail call void @lua_xmove(%struct.lua_State* %L, %struct.lua_State* %1, i32 1) #1
  tail call void @lua_pushcclosure(%struct.lua_State* %L, i32 (%struct.lua_State*)* nonnull @luaB_auxwrap, i32 1) #1
  ret i32 1
}

; Function Attrs: nounwind uwtable
define internal i32 @luaB_yield(%struct.lua_State* %L) #0 {
  %1 = tail call i32 @lua_gettop(%struct.lua_State* %L) #1
  %2 = tail call i32 @lua_yield(%struct.lua_State* %L, i32 %1) #1
  ret i32 %2
}

; Function Attrs: nounwind uwtable
define internal i32 @luaB_auxwrap(%struct.lua_State* %L) #0 {
  %1 = tail call %struct.lua_State* @lua_tothread(%struct.lua_State* %L, i32 -10003) #1
  %2 = tail call i32 @lua_gettop(%struct.lua_State* %L) #1
  %3 = tail call fastcc i32 @auxresume(%struct.lua_State* %L, %struct.lua_State* %1, i32 %2)
  %4 = icmp slt i32 %3, 0
  br i1 %4, label %5, label %11

; <label>:5                                       ; preds = %0
  %6 = tail call i32 @lua_isstring(%struct.lua_State* %L, i32 -1) #1
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %9, label %8

; <label>:8                                       ; preds = %5
  tail call void @luaL_where(%struct.lua_State* %L, i32 1) #1
  tail call void @lua_insert(%struct.lua_State* %L, i32 -2) #1
  tail call void @lua_concat(%struct.lua_State* %L, i32 2) #1
  br label %9

; <label>:9                                       ; preds = %5, %8
  %10 = tail call i32 @lua_error(%struct.lua_State* %L) #1
  br label %11

; <label>:11                                      ; preds = %9, %0
  ret i32 %3
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @auxresume(%struct.lua_State* %L, %struct.lua_State* %co, i32 %narg) #0 {
  %ar.i = alloca %struct.lua_Debug, align 8
  %1 = icmp eq %struct.lua_State* %L, %co
  br i1 %1, label %costatus.exit, label %2

; <label>:2                                       ; preds = %0
  %3 = tail call i32 @lua_status(%struct.lua_State* %co) #1
  switch i32 %3, label %12 [
    i32 1, label %costatus.exit
    i32 0, label %4
  ]

; <label>:4                                       ; preds = %2
  %5 = bitcast %struct.lua_Debug* %ar.i to i8*
  call void @llvm.lifetime.start(i64 120, i8* %5) #1
  %6 = call i32 @lua_getstack(%struct.lua_State* %co, i32 0, %struct.lua_Debug* nonnull %ar.i) #1
  %7 = icmp sgt i32 %6, 0
  br i1 %7, label %11, label %8

; <label>:8                                       ; preds = %4
  %9 = call i32 @lua_gettop(%struct.lua_State* %co) #1
  %10 = icmp eq i32 %9, 0
  %..i = select i1 %10, i32 3, i32 1
  br label %11

; <label>:11                                      ; preds = %8, %4
  %.0.i = phi i32 [ 2, %4 ], [ %..i, %8 ]
  call void @llvm.lifetime.end(i64 120, i8* %5) #1
  br label %costatus.exit

; <label>:12                                      ; preds = %2
  br label %costatus.exit

costatus.exit:                                    ; preds = %0, %2, %11, %12
  %.1.i = phi i32 [ 3, %12 ], [ %.0.i, %11 ], [ 0, %0 ], [ 1, %2 ]
  %13 = call i32 @lua_checkstack(%struct.lua_State* %co, i32 %narg) #1
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %17

; <label>:15                                      ; preds = %costatus.exit
  %16 = call i32 (%struct.lua_State*, i8*, ...) @luaL_error(%struct.lua_State* %L, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.73, i64 0, i64 0)) #1
  br label %17

; <label>:17                                      ; preds = %costatus.exit, %15
  %18 = icmp eq i32 %.1.i, 1
  br i1 %18, label %24, label %19

; <label>:19                                      ; preds = %17
  %20 = sext i32 %.1.i to i64
  %21 = getelementptr inbounds [4 x i8*], [4 x i8*]* @statnames, i64 0, i64 %20
  %22 = load i8*, i8** %21, align 8, !tbaa !25
  %23 = call i8* (%struct.lua_State*, i8*, ...) @lua_pushfstring(%struct.lua_State* %L, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.74, i64 0, i64 0), i8* %22) #1
  br label %36

; <label>:24                                      ; preds = %17
  call void @lua_xmove(%struct.lua_State* %L, %struct.lua_State* %co, i32 %narg) #1
  call void @lua_setlevel(%struct.lua_State* %L, %struct.lua_State* %co) #1
  %25 = call i32 @lua_resume(%struct.lua_State* %co, i32 %narg) #1
  %26 = icmp ult i32 %25, 2
  br i1 %26, label %27, label %35

; <label>:27                                      ; preds = %24
  %28 = call i32 @lua_gettop(%struct.lua_State* %co) #1
  %29 = add nsw i32 %28, 1
  %30 = call i32 @lua_checkstack(%struct.lua_State* %L, i32 %29) #1
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %34

; <label>:32                                      ; preds = %27
  %33 = call i32 (%struct.lua_State*, i8*, ...) @luaL_error(%struct.lua_State* %L, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.75, i64 0, i64 0)) #1
  br label %34

; <label>:34                                      ; preds = %27, %32
  call void @lua_xmove(%struct.lua_State* %co, %struct.lua_State* %L, i32 %28) #1
  br label %36

; <label>:35                                      ; preds = %24
  call void @lua_xmove(%struct.lua_State* %co, %struct.lua_State* %L, i32 1) #1
  br label %36

; <label>:36                                      ; preds = %35, %34, %19
  %.0 = phi i32 [ -1, %19 ], [ %28, %34 ], [ -1, %35 ]
  ret i32 %.0
}

; Function Attrs: nounwind uwtable
define internal i32 @luaB_assert(%struct.lua_State* %L) #0 {
  tail call void @luaL_checkany(%struct.lua_State* %L, i32 1) #1
  %1 = tail call i32 @lua_toboolean(%struct.lua_State* %L, i32 1) #1
  %2 = icmp eq i32 %1, 0
  br i1 %2, label %3, label %6

; <label>:3                                       ; preds = %0
  %4 = tail call i8* @luaL_optlstring(%struct.lua_State* %L, i32 2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.34, i64 0, i64 0), i64* null) #1
  %5 = tail call i32 (%struct.lua_State*, i8*, ...) @luaL_error(%struct.lua_State* %L, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.33, i64 0, i64 0), i8* %4) #1
  br label %8

; <label>:6                                       ; preds = %0
  %7 = tail call i32 @lua_gettop(%struct.lua_State* %L) #1
  br label %8

; <label>:8                                       ; preds = %6, %3
  %.0 = phi i32 [ %7, %6 ], [ %5, %3 ]
  ret i32 %.0
}

; Function Attrs: nounwind uwtable
define internal i32 @luaB_collectgarbage(%struct.lua_State* %L) #0 {
  %1 = tail call i32 @luaL_checkoption(%struct.lua_State* %L, i32 1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.37, i64 0, i64 0), i8** getelementptr inbounds ([8 x i8*], [8 x i8*]* @luaB_collectgarbage.opts, i64 0, i64 0)) #1
  %2 = tail call i64 @luaL_optinteger(%struct.lua_State* %L, i32 2, i64 0) #1
  %3 = trunc i64 %2 to i32
  %4 = sext i32 %1 to i64
  %5 = getelementptr inbounds [7 x i32], [7 x i32]* @luaB_collectgarbage.optsnum, i64 0, i64 %4
  %6 = load i32, i32* %5, align 4, !tbaa !38
  %7 = tail call i32 @lua_gc(%struct.lua_State* %L, i32 %6, i32 %3) #1
  switch i32 %6, label %15 [
    i32 3, label %8
    i32 5, label %14
  ]

; <label>:8                                       ; preds = %0
  %9 = tail call i32 @lua_gc(%struct.lua_State* %L, i32 4, i32 0) #1
  %10 = sitofp i32 %7 to double
  %11 = sitofp i32 %9 to double
  %12 = fmul double %11, 9.765625e-04
  %13 = fadd double %10, %12
  tail call void @lua_pushnumber(%struct.lua_State* %L, double %13) #1
  br label %17

; <label>:14                                      ; preds = %0
  tail call void @lua_pushboolean(%struct.lua_State* %L, i32 %7) #1
  br label %17

; <label>:15                                      ; preds = %0
  %16 = sitofp i32 %7 to double
  tail call void @lua_pushnumber(%struct.lua_State* %L, double %16) #1
  br label %17

; <label>:17                                      ; preds = %15, %14, %8
  ret i32 1
}

; Function Attrs: nounwind uwtable
define internal i32 @luaB_dofile(%struct.lua_State* %L) #0 {
  %1 = tail call i8* @luaL_optlstring(%struct.lua_State* %L, i32 1, i8* null, i64* null) #1
  %2 = tail call i32 @lua_gettop(%struct.lua_State* %L) #1
  %3 = tail call i32 @luaL_loadfile(%struct.lua_State* %L, i8* %1) #1
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %7, label %5

; <label>:5                                       ; preds = %0
  %6 = tail call i32 @lua_error(%struct.lua_State* %L) #1
  br label %7

; <label>:7                                       ; preds = %0, %5
  tail call void @lua_call(%struct.lua_State* %L, i32 0, i32 -1) #1
  %8 = tail call i32 @lua_gettop(%struct.lua_State* %L) #1
  %9 = sub nsw i32 %8, %2
  ret i32 %9
}

; Function Attrs: nounwind uwtable
define internal i32 @luaB_error(%struct.lua_State* %L) #0 {
  %1 = tail call i64 @luaL_optinteger(%struct.lua_State* %L, i32 2, i64 1) #1
  %2 = trunc i64 %1 to i32
  tail call void @lua_settop(%struct.lua_State* %L, i32 1) #1
  %3 = tail call i32 @lua_isstring(%struct.lua_State* %L, i32 1) #1
  %4 = icmp ne i32 %3, 0
  %5 = icmp sgt i32 %2, 0
  %or.cond = and i1 %5, %4
  br i1 %or.cond, label %6, label %7

; <label>:6                                       ; preds = %0
  tail call void @luaL_where(%struct.lua_State* %L, i32 %2) #1
  tail call void @lua_pushvalue(%struct.lua_State* %L, i32 1) #1
  tail call void @lua_concat(%struct.lua_State* %L, i32 2) #1
  br label %7

; <label>:7                                       ; preds = %6, %0
  %8 = tail call i32 @lua_error(%struct.lua_State* %L) #1
  ret i32 %8
}

; Function Attrs: nounwind uwtable
define internal i32 @luaB_gcinfo(%struct.lua_State* %L) #0 {
  %1 = tail call i32 @lua_gc(%struct.lua_State* %L, i32 3, i32 0) #1
  %2 = sext i32 %1 to i64
  tail call void @lua_pushinteger(%struct.lua_State* %L, i64 %2) #1
  ret i32 1
}

; Function Attrs: nounwind uwtable
define internal i32 @luaB_getfenv(%struct.lua_State* %L) #0 {
  tail call fastcc void @getfunc(%struct.lua_State* %L, i32 1)
  %1 = tail call i32 @lua_iscfunction(%struct.lua_State* %L, i32 -1) #1
  %2 = icmp eq i32 %1, 0
  br i1 %2, label %4, label %3

; <label>:3                                       ; preds = %0
  tail call void @lua_pushvalue(%struct.lua_State* %L, i32 -10002) #1
  br label %5

; <label>:4                                       ; preds = %0
  tail call void @lua_getfenv(%struct.lua_State* %L, i32 -1) #1
  br label %5

; <label>:5                                       ; preds = %4, %3
  ret i32 1
}

; Function Attrs: nounwind uwtable
define internal i32 @luaB_getmetatable(%struct.lua_State* %L) #0 {
  tail call void @luaL_checkany(%struct.lua_State* %L, i32 1) #1
  %1 = tail call i32 @lua_getmetatable(%struct.lua_State* %L, i32 1) #1
  %2 = icmp eq i32 %1, 0
  br i1 %2, label %3, label %4

; <label>:3                                       ; preds = %0
  tail call void @lua_pushnil(%struct.lua_State* %L) #1
  br label %6

; <label>:4                                       ; preds = %0
  %5 = tail call i32 @luaL_getmetafield(%struct.lua_State* %L, i32 1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.46, i64 0, i64 0)) #1
  br label %6

; <label>:6                                       ; preds = %4, %3
  ret i32 1
}

; Function Attrs: nounwind uwtable
define internal i32 @luaB_loadfile(%struct.lua_State* %L) #0 {
  %1 = tail call i8* @luaL_optlstring(%struct.lua_State* %L, i32 1, i8* null, i64* null) #1
  %2 = tail call i32 @luaL_loadfile(%struct.lua_State* %L, i8* %1) #1
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %load_aux.exit, label %4

; <label>:4                                       ; preds = %0
  tail call void @lua_pushnil(%struct.lua_State* %L) #1
  tail call void @lua_insert(%struct.lua_State* %L, i32 -2) #1
  br label %load_aux.exit

load_aux.exit:                                    ; preds = %0, %4
  %.0.i = phi i32 [ 2, %4 ], [ 1, %0 ]
  ret i32 %.0.i
}

; Function Attrs: nounwind uwtable
define internal i32 @luaB_load(%struct.lua_State* %L) #0 {
  %1 = tail call i8* @luaL_optlstring(%struct.lua_State* %L, i32 2, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.47, i64 0, i64 0), i64* null) #1
  tail call void @luaL_checktype(%struct.lua_State* %L, i32 1, i32 6) #1
  tail call void @lua_settop(%struct.lua_State* %L, i32 3) #1
  %2 = tail call i32 @lua_load(%struct.lua_State* %L, i8* (%struct.lua_State*, i8*, i64*)* nonnull @generic_reader, i8* null, i8* %1) #1
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %load_aux.exit, label %4

; <label>:4                                       ; preds = %0
  tail call void @lua_pushnil(%struct.lua_State* %L) #1
  tail call void @lua_insert(%struct.lua_State* %L, i32 -2) #1
  br label %load_aux.exit

load_aux.exit:                                    ; preds = %0, %4
  %.0.i = phi i32 [ 2, %4 ], [ 1, %0 ]
  ret i32 %.0.i
}

; Function Attrs: nounwind uwtable
define internal i32 @luaB_loadstring(%struct.lua_State* %L) #0 {
  %l = alloca i64, align 8
  %1 = bitcast i64* %l to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1) #1
  %2 = call i8* @luaL_checklstring(%struct.lua_State* %L, i32 1, i64* nonnull %l) #1
  %3 = call i8* @luaL_optlstring(%struct.lua_State* %L, i32 2, i8* %2, i64* null) #1
  %4 = load i64, i64* %l, align 8, !tbaa !39
  %5 = call i32 @luaL_loadbuffer(%struct.lua_State* %L, i8* %2, i64 %4, i8* %3) #1
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %load_aux.exit, label %7

; <label>:7                                       ; preds = %0
  call void @lua_pushnil(%struct.lua_State* %L) #1
  call void @lua_insert(%struct.lua_State* %L, i32 -2) #1
  br label %load_aux.exit

load_aux.exit:                                    ; preds = %0, %7
  %.0.i = phi i32 [ 2, %7 ], [ 1, %0 ]
  call void @llvm.lifetime.end(i64 8, i8* %1) #1
  ret i32 %.0.i
}

; Function Attrs: nounwind uwtable
define internal i32 @luaB_pcall(%struct.lua_State* %L) #0 {
  tail call void @luaL_checkany(%struct.lua_State* %L, i32 1) #1
  %1 = tail call i32 @lua_gettop(%struct.lua_State* %L) #1
  %2 = add nsw i32 %1, -1
  %3 = tail call i32 @lua_pcall(%struct.lua_State* %L, i32 %2, i32 -1, i32 0) #1
  %4 = icmp eq i32 %3, 0
  %5 = zext i1 %4 to i32
  tail call void @lua_pushboolean(%struct.lua_State* %L, i32 %5) #1
  tail call void @lua_insert(%struct.lua_State* %L, i32 1) #1
  %6 = tail call i32 @lua_gettop(%struct.lua_State* %L) #1
  ret i32 %6
}

; Function Attrs: nounwind uwtable
define internal i32 @luaB_print(%struct.lua_State* %L) #0 {
  %1 = tail call i32 @lua_gettop(%struct.lua_State* %L) #1
  tail call void @lua_getfield(%struct.lua_State* %L, i32 -10002, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.29, i64 0, i64 0)) #1
  %2 = icmp slt i32 %1, 1
  br i1 %2, label %._crit_edge, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %0
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %11
  %i.06 = phi i32 [ %14, %11 ], [ 1, %.lr.ph.preheader ]
  tail call void @lua_pushvalue(%struct.lua_State* %L, i32 -1) #1
  tail call void @lua_pushvalue(%struct.lua_State* %L, i32 %i.06) #1
  tail call void @lua_call(%struct.lua_State* %L, i32 1, i32 1) #1
  %3 = tail call i8* @lua_tolstring(%struct.lua_State* %L, i32 -1, i64* null) #1
  %4 = icmp eq i8* %3, null
  br i1 %4, label %9, label %5

; <label>:5                                       ; preds = %.lr.ph
  %6 = icmp sgt i32 %i.06, 1
  br i1 %6, label %7, label %11

; <label>:7                                       ; preds = %5
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !tbaa !25
  %fputc = tail call i32 @fputc(i32 9, %struct._IO_FILE* %8)
  br label %11

; <label>:9                                       ; preds = %.lr.ph
  %10 = tail call i32 (%struct.lua_State*, i8*, ...) @luaL_error(%struct.lua_State* %L, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.50, i64 0, i64 0)) #1
  br label %17

; <label>:11                                      ; preds = %5, %7
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !tbaa !25
  %13 = tail call i32 @fputs(i8* %3, %struct._IO_FILE* %12) #1
  tail call void @lua_settop(%struct.lua_State* %L, i32 -2) #1
  %14 = add nuw nsw i32 %i.06, 1
  %15 = icmp slt i32 %i.06, %1
  br i1 %15, label %.lr.ph, label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %11
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %0
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !tbaa !25
  %fputc4 = tail call i32 @fputc(i32 10, %struct._IO_FILE* %16)
  br label %17

; <label>:17                                      ; preds = %9, %._crit_edge
  %.2 = phi i32 [ %10, %9 ], [ 0, %._crit_edge ]
  ret i32 %.2
}

; Function Attrs: nounwind uwtable
define internal i32 @luaB_rawequal(%struct.lua_State* %L) #0 {
  tail call void @luaL_checkany(%struct.lua_State* %L, i32 1) #1
  tail call void @luaL_checkany(%struct.lua_State* %L, i32 2) #1
  %1 = tail call i32 @lua_rawequal(%struct.lua_State* %L, i32 1, i32 2) #1
  tail call void @lua_pushboolean(%struct.lua_State* %L, i32 %1) #1
  ret i32 1
}

; Function Attrs: nounwind uwtable
define internal i32 @luaB_rawget(%struct.lua_State* %L) #0 {
  tail call void @luaL_checktype(%struct.lua_State* %L, i32 1, i32 5) #1
  tail call void @luaL_checkany(%struct.lua_State* %L, i32 2) #1
  tail call void @lua_settop(%struct.lua_State* %L, i32 2) #1
  tail call void @lua_rawget(%struct.lua_State* %L, i32 1) #1
  ret i32 1
}

; Function Attrs: nounwind uwtable
define internal i32 @luaB_rawset(%struct.lua_State* %L) #0 {
  tail call void @luaL_checktype(%struct.lua_State* %L, i32 1, i32 5) #1
  tail call void @luaL_checkany(%struct.lua_State* %L, i32 2) #1
  tail call void @luaL_checkany(%struct.lua_State* %L, i32 3) #1
  tail call void @lua_settop(%struct.lua_State* %L, i32 3) #1
  tail call void @lua_rawset(%struct.lua_State* %L, i32 1) #1
  ret i32 1
}

; Function Attrs: nounwind uwtable
define internal i32 @luaB_select(%struct.lua_State* %L) #0 {
  %1 = tail call i32 @lua_gettop(%struct.lua_State* %L) #1
  %2 = tail call i32 @lua_type(%struct.lua_State* %L, i32 1) #1
  %3 = icmp eq i32 %2, 4
  br i1 %3, label %4, label %11

; <label>:4                                       ; preds = %0
  %5 = tail call i8* @lua_tolstring(%struct.lua_State* %L, i32 1, i64* null) #1
  %6 = load i8, i8* %5, align 1, !tbaa !76
  %7 = icmp eq i8 %6, 35
  br i1 %7, label %8, label %11

; <label>:8                                       ; preds = %4
  %9 = add nsw i32 %1, -1
  %10 = sext i32 %9 to i64
  tail call void @lua_pushinteger(%struct.lua_State* %L, i64 %10) #1
  br label %22

; <label>:11                                      ; preds = %4, %0
  %12 = tail call i64 @luaL_checkinteger(%struct.lua_State* %L, i32 1) #1
  %13 = trunc i64 %12 to i32
  %14 = icmp slt i32 %13, 0
  %15 = add nsw i32 %13, %1
  %16 = icmp sgt i32 %13, %1
  %. = select i1 %16, i32 %1, i32 %13
  %i.0 = select i1 %14, i32 %15, i32 %.
  %17 = icmp sgt i32 %i.0, 0
  br i1 %17, label %20, label %18

; <label>:18                                      ; preds = %11
  %19 = tail call i32 @luaL_argerror(%struct.lua_State* %L, i32 1, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.53, i64 0, i64 0)) #1
  br label %20

; <label>:20                                      ; preds = %18, %11
  %21 = sub nsw i32 %1, %i.0
  br label %22

; <label>:22                                      ; preds = %20, %8
  %.0 = phi i32 [ 1, %8 ], [ %21, %20 ]
  ret i32 %.0
}

; Function Attrs: nounwind uwtable
define internal i32 @luaB_setfenv(%struct.lua_State* %L) #0 {
  tail call void @luaL_checktype(%struct.lua_State* %L, i32 2, i32 5) #1
  tail call fastcc void @getfunc(%struct.lua_State* %L, i32 0)
  tail call void @lua_pushvalue(%struct.lua_State* %L, i32 2) #1
  %1 = tail call i32 @lua_isnumber(%struct.lua_State* %L, i32 1) #1
  %2 = icmp eq i32 %1, 0
  br i1 %2, label %9, label %3

; <label>:3                                       ; preds = %0
  %4 = tail call double @lua_tonumber(%struct.lua_State* %L, i32 1) #1
  %5 = fcmp oeq double %4, 0.000000e+00
  br i1 %5, label %6, label %9

; <label>:6                                       ; preds = %3
  %7 = tail call i32 @lua_pushthread(%struct.lua_State* %L) #1
  tail call void @lua_insert(%struct.lua_State* %L, i32 -2) #1
  %8 = tail call i32 @lua_setfenv(%struct.lua_State* %L, i32 -2) #1
  br label %17

; <label>:9                                       ; preds = %0, %3
  %10 = tail call i32 @lua_iscfunction(%struct.lua_State* %L, i32 -2) #1
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %15

; <label>:12                                      ; preds = %9
  %13 = tail call i32 @lua_setfenv(%struct.lua_State* %L, i32 -2) #1
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %17

; <label>:15                                      ; preds = %9, %12
  %16 = tail call i32 (%struct.lua_State*, i8*, ...) @luaL_error(%struct.lua_State* %L, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.54, i64 0, i64 0)) #1
  br label %17

; <label>:17                                      ; preds = %15, %12, %6
  %.0 = phi i32 [ 0, %6 ], [ 1, %12 ], [ 1, %15 ]
  ret i32 %.0
}

; Function Attrs: nounwind uwtable
define internal i32 @luaB_setmetatable(%struct.lua_State* %L) #0 {
  %1 = tail call i32 @lua_type(%struct.lua_State* %L, i32 2) #1
  tail call void @luaL_checktype(%struct.lua_State* %L, i32 1, i32 5) #1
  switch i32 %1, label %2 [
    i32 5, label %4
    i32 0, label %4
  ]

; <label>:2                                       ; preds = %0
  %3 = tail call i32 @luaL_argerror(%struct.lua_State* %L, i32 2, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.55, i64 0, i64 0)) #1
  br label %4

; <label>:4                                       ; preds = %0, %0, %2
  %5 = tail call i32 @luaL_getmetafield(%struct.lua_State* %L, i32 1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.46, i64 0, i64 0)) #1
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %9, label %7

; <label>:7                                       ; preds = %4
  %8 = tail call i32 (%struct.lua_State*, i8*, ...) @luaL_error(%struct.lua_State* %L, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.56, i64 0, i64 0)) #1
  br label %9

; <label>:9                                       ; preds = %4, %7
  tail call void @lua_settop(%struct.lua_State* %L, i32 2) #1
  %10 = tail call i32 @lua_setmetatable(%struct.lua_State* %L, i32 1) #1
  ret i32 1
}

; Function Attrs: nounwind uwtable
define internal i32 @luaB_tonumber(%struct.lua_State* %L) #0 {
  %s2 = alloca i8*, align 8
  %1 = tail call i64 @luaL_optinteger(%struct.lua_State* %L, i32 2, i64 10) #1
  %2 = trunc i64 %1 to i32
  %3 = icmp eq i32 %2, 10
  br i1 %3, label %4, label %9

; <label>:4                                       ; preds = %0
  tail call void @luaL_checkany(%struct.lua_State* %L, i32 1) #1
  %5 = tail call i32 @lua_isnumber(%struct.lua_State* %L, i32 1) #1
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %39, label %7

; <label>:7                                       ; preds = %4
  %8 = tail call double @lua_tonumber(%struct.lua_State* %L, i32 1) #1
  tail call void @lua_pushnumber(%struct.lua_State* %L, double %8) #1
  br label %40

; <label>:9                                       ; preds = %0
  %10 = tail call i8* @luaL_checklstring(%struct.lua_State* %L, i32 1, i64* null) #1
  %11 = bitcast i8** %s2 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %11) #1
  %.off = add i32 %2, -2
  %12 = icmp ult i32 %.off, 35
  br i1 %12, label %15, label %13

; <label>:13                                      ; preds = %9
  %14 = tail call i32 @luaL_argerror(%struct.lua_State* %L, i32 2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.57, i64 0, i64 0)) #1
  br label %15

; <label>:15                                      ; preds = %9, %13
  %16 = call i64 @strtoul(i8* %10, i8** nonnull %s2, i32 %2) #1
  %17 = load i8*, i8** %s2, align 8, !tbaa !25
  %18 = icmp eq i8* %10, %17
  br i1 %18, label %38, label %.preheader

.preheader:                                       ; preds = %15
  %19 = load i8, i8* %17, align 1, !tbaa !76
  %20 = zext i8 %19 to i64
  %21 = tail call i16** @__ctype_b_loc() #12
  %22 = load i16*, i16** %21, align 8, !tbaa !25
  %23 = getelementptr inbounds i16, i16* %22, i64 %20
  %24 = load i16, i16* %23, align 2, !tbaa !87
  %25 = and i16 %24, 8192
  %26 = icmp eq i16 %25, 0
  br i1 %26, label %35, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %.preheader
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %.lr.ph
  %27 = phi i8* [ %28, %.lr.ph ], [ %17, %.lr.ph.preheader ]
  %28 = getelementptr inbounds i8, i8* %27, i64 1
  %29 = load i8, i8* %28, align 1, !tbaa !76
  %30 = zext i8 %29 to i64
  %31 = getelementptr inbounds i16, i16* %22, i64 %30
  %32 = load i16, i16* %31, align 2, !tbaa !87
  %33 = and i16 %32, 8192
  %34 = icmp eq i16 %33, 0
  br i1 %34, label %._crit_edge, label %.lr.ph

._crit_edge:                                      ; preds = %.lr.ph
  %.lcssa13 = phi i8 [ %29, %.lr.ph ]
  %.lcssa12 = phi i8* [ %28, %.lr.ph ]
  store i8* %.lcssa12, i8** %s2, align 8, !tbaa !25
  br label %35

; <label>:35                                      ; preds = %._crit_edge, %.preheader
  %.lcssa = phi i8 [ %.lcssa13, %._crit_edge ], [ %19, %.preheader ]
  %36 = icmp eq i8 %.lcssa, 0
  br i1 %36, label %.critedge, label %38

.critedge:                                        ; preds = %35
  %37 = uitofp i64 %16 to double
  tail call void @lua_pushnumber(%struct.lua_State* %L, double %37) #1
  call void @llvm.lifetime.end(i64 8, i8* %11) #1
  br label %40

; <label>:38                                      ; preds = %35, %15
  call void @llvm.lifetime.end(i64 8, i8* %11) #1
  br label %39

; <label>:39                                      ; preds = %38, %4
  tail call void @lua_pushnil(%struct.lua_State* %L) #1
  br label %40

; <label>:40                                      ; preds = %.critedge, %39, %7
  ret i32 1
}

; Function Attrs: nounwind uwtable
define internal i32 @luaB_tostring(%struct.lua_State* %L) #0 {
  tail call void @luaL_checkany(%struct.lua_State* %L, i32 1) #1
  %1 = tail call i32 @luaL_callmeta(%struct.lua_State* %L, i32 1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.58, i64 0, i64 0)) #1
  %2 = icmp eq i32 %1, 0
  br i1 %2, label %3, label %18

; <label>:3                                       ; preds = %0
  %4 = tail call i32 @lua_type(%struct.lua_State* %L, i32 1) #1
  switch i32 %4, label %13 [
    i32 3, label %5
    i32 4, label %7
    i32 1, label %8
    i32 0, label %12
  ]

; <label>:5                                       ; preds = %3
  %6 = tail call i8* @lua_tolstring(%struct.lua_State* %L, i32 1, i64* null) #1
  tail call void @lua_pushstring(%struct.lua_State* %L, i8* %6) #1
  br label %18

; <label>:7                                       ; preds = %3
  tail call void @lua_pushvalue(%struct.lua_State* %L, i32 1) #1
  br label %18

; <label>:8                                       ; preds = %3
  %9 = tail call i32 @lua_toboolean(%struct.lua_State* %L, i32 1) #1
  %10 = icmp ne i32 %9, 0
  %11 = select i1 %10, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.59, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.60, i64 0, i64 0)
  tail call void @lua_pushstring(%struct.lua_State* %L, i8* %11) #1
  br label %18

; <label>:12                                      ; preds = %3
  tail call void @lua_pushlstring(%struct.lua_State* %L, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.61, i64 0, i64 0), i64 3) #1
  br label %18

; <label>:13                                      ; preds = %3
  %14 = tail call i32 @lua_type(%struct.lua_State* %L, i32 1) #1
  %15 = tail call i8* @lua_typename(%struct.lua_State* %L, i32 %14) #1
  %16 = tail call i8* @lua_topointer(%struct.lua_State* %L, i32 1) #1
  %17 = tail call i8* (%struct.lua_State*, i8*, ...) @lua_pushfstring(%struct.lua_State* %L, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.62, i64 0, i64 0), i8* %15, i8* %16) #1
  br label %18

; <label>:18                                      ; preds = %5, %7, %8, %12, %13, %0
  ret i32 1
}

; Function Attrs: nounwind uwtable
define internal i32 @luaB_type(%struct.lua_State* %L) #0 {
  tail call void @luaL_checkany(%struct.lua_State* %L, i32 1) #1
  %1 = tail call i32 @lua_type(%struct.lua_State* %L, i32 1) #1
  %2 = tail call i8* @lua_typename(%struct.lua_State* %L, i32 %1) #1
  tail call void @lua_pushstring(%struct.lua_State* %L, i8* %2) #1
  ret i32 1
}

; Function Attrs: nounwind uwtable
define internal i32 @luaB_unpack(%struct.lua_State* %L) #0 {
  tail call void @luaL_checktype(%struct.lua_State* %L, i32 1, i32 5) #1
  %1 = tail call i64 @luaL_optinteger(%struct.lua_State* %L, i32 2, i64 1) #1
  %2 = trunc i64 %1 to i32
  %3 = tail call i32 @lua_type(%struct.lua_State* %L, i32 3) #1
  %4 = icmp slt i32 %3, 1
  br i1 %4, label %5, label %7

; <label>:5                                       ; preds = %0
  %6 = tail call i64 @lua_objlen(%struct.lua_State* %L, i32 1) #1
  br label %9

; <label>:7                                       ; preds = %0
  %8 = tail call i64 @luaL_checkinteger(%struct.lua_State* %L, i32 3) #1
  br label %9

; <label>:9                                       ; preds = %7, %5
  %.sink = phi i64 [ %6, %5 ], [ %8, %7 ]
  %10 = trunc i64 %.sink to i32
  %11 = icmp slt i32 %10, %2
  br i1 %11, label %.loopexit, label %12

; <label>:12                                      ; preds = %9
  %13 = sub nsw i32 %10, %2
  %14 = add nsw i32 %13, 1
  %15 = icmp slt i32 %13, 0
  br i1 %15, label %19, label %16

; <label>:16                                      ; preds = %12
  %17 = tail call i32 @lua_checkstack(%struct.lua_State* %L, i32 %14) #1
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %21

; <label>:19                                      ; preds = %16, %12
  %20 = tail call i32 (%struct.lua_State*, i8*, ...) @luaL_error(%struct.lua_State* %L, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.63, i64 0, i64 0)) #1
  br label %.loopexit

; <label>:21                                      ; preds = %16
  tail call void @lua_rawgeti(%struct.lua_State* %L, i32 1, i32 %2) #1
  %22 = icmp sgt i32 %10, %2
  br i1 %22, label %.lr.ph.preheader, label %.loopexit

.lr.ph.preheader:                                 ; preds = %21
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %.lr.ph
  %.in = phi i32 [ %23, %.lr.ph ], [ %2, %.lr.ph.preheader ]
  %23 = add nsw i32 %.in, 1
  tail call void @lua_rawgeti(%struct.lua_State* %L, i32 1, i32 %23) #1
  %exitcond = icmp eq i32 %23, %10
  br i1 %exitcond, label %.loopexit.loopexit, label %.lr.ph

.loopexit.loopexit:                               ; preds = %.lr.ph
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %21, %9, %19
  %.0 = phi i32 [ %20, %19 ], [ 0, %9 ], [ %14, %21 ], [ %14, %.loopexit.loopexit ]
  ret i32 %.0
}

; Function Attrs: nounwind uwtable
define internal i32 @luaB_xpcall(%struct.lua_State* %L) #0 {
  tail call void @luaL_checkany(%struct.lua_State* %L, i32 2) #1
  tail call void @lua_settop(%struct.lua_State* %L, i32 2) #1
  tail call void @lua_insert(%struct.lua_State* %L, i32 1) #1
  %1 = tail call i32 @lua_pcall(%struct.lua_State* %L, i32 0, i32 -1, i32 1) #1
  %2 = icmp eq i32 %1, 0
  %3 = zext i1 %2 to i32
  tail call void @lua_pushboolean(%struct.lua_State* %L, i32 %3) #1
  tail call void @lua_replace(%struct.lua_State* %L, i32 1) #1
  %4 = tail call i32 @lua_gettop(%struct.lua_State* %L) #1
  ret i32 %4
}

; Function Attrs: nounwind uwtable
define internal fastcc void @getfunc(%struct.lua_State* %L, i32 %opt) #0 {
  %ar = alloca %struct.lua_Debug, align 8
  %1 = tail call i32 @lua_type(%struct.lua_State* %L, i32 1) #1
  %2 = icmp eq i32 %1, 6
  br i1 %2, label %3, label %4

; <label>:3                                       ; preds = %0
  tail call void @lua_pushvalue(%struct.lua_State* %L, i32 1) #1
  br label %28

; <label>:4                                       ; preds = %0
  %5 = bitcast %struct.lua_Debug* %ar to i8*
  call void @llvm.lifetime.start(i64 120, i8* %5) #1
  %6 = icmp eq i32 %opt, 0
  br i1 %6, label %9, label %7

; <label>:7                                       ; preds = %4
  %8 = tail call i64 @luaL_optinteger(%struct.lua_State* %L, i32 1, i64 1) #1
  br label %11

; <label>:9                                       ; preds = %4
  %10 = tail call i64 @luaL_checkinteger(%struct.lua_State* %L, i32 1) #1
  br label %11

; <label>:11                                      ; preds = %9, %7
  %.sink = phi i64 [ %8, %7 ], [ %10, %9 ]
  %12 = trunc i64 %.sink to i32
  %13 = icmp sgt i32 %12, -1
  br i1 %13, label %16, label %14

; <label>:14                                      ; preds = %11
  %15 = tail call i32 @luaL_argerror(%struct.lua_State* %L, i32 1, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.42, i64 0, i64 0)) #1
  br label %16

; <label>:16                                      ; preds = %14, %11
  %17 = call i32 @lua_getstack(%struct.lua_State* %L, i32 %12, %struct.lua_Debug* nonnull %ar) #1
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %21

; <label>:19                                      ; preds = %16
  %20 = call i32 @luaL_argerror(%struct.lua_State* %L, i32 1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.43, i64 0, i64 0)) #1
  br label %21

; <label>:21                                      ; preds = %19, %16
  %22 = call i32 @lua_getinfo(%struct.lua_State* %L, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.44, i64 0, i64 0), %struct.lua_Debug* nonnull %ar) #1
  %23 = call i32 @lua_type(%struct.lua_State* %L, i32 -1) #1
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %27

; <label>:25                                      ; preds = %21
  %26 = call i32 (%struct.lua_State*, i8*, ...) @luaL_error(%struct.lua_State* %L, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.45, i64 0, i64 0), i32 %12) #1
  br label %27

; <label>:27                                      ; preds = %25, %21
  call void @llvm.lifetime.end(i64 120, i8* %5) #1
  br label %28

; <label>:28                                      ; preds = %27, %3
  ret void
}

; Function Attrs: nounwind uwtable
define internal i8* @generic_reader(%struct.lua_State* %L, i8* nocapture readnone %ud, i64* %size) #0 {
  tail call void @luaL_checkstack(%struct.lua_State* %L, i32 2, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.48, i64 0, i64 0)) #1
  tail call void @lua_pushvalue(%struct.lua_State* %L, i32 1) #1
  tail call void @lua_call(%struct.lua_State* %L, i32 0, i32 1) #1
  %1 = tail call i32 @lua_type(%struct.lua_State* %L, i32 -1) #1
  %2 = icmp eq i32 %1, 0
  br i1 %2, label %3, label %4

; <label>:3                                       ; preds = %0
  store i64 0, i64* %size, align 8, !tbaa !39
  br label %11

; <label>:4                                       ; preds = %0
  %5 = tail call i32 @lua_isstring(%struct.lua_State* %L, i32 -1) #1
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %9, label %7

; <label>:7                                       ; preds = %4
  tail call void @lua_replace(%struct.lua_State* %L, i32 3) #1
  %8 = tail call i8* @lua_tolstring(%struct.lua_State* %L, i32 3, i64* %size) #1
  br label %11

; <label>:9                                       ; preds = %4
  %10 = tail call i32 (%struct.lua_State*, i8*, ...) @luaL_error(%struct.lua_State* %L, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.49, i64 0, i64 0)) #1
  br label %11

; <label>:11                                      ; preds = %9, %7, %3
  %.0 = phi i8* [ null, %3 ], [ %8, %7 ], [ null, %9 ]
  ret i8* %.0
}

; Function Attrs: nounwind uwtable
define hidden void @luaK_nil(%struct.FuncState* nocapture %fs, i32 %from, i32 %n) #0 {
  %1 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 6
  %2 = load i32, i32* %1, align 4, !tbaa !88
  %3 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 7
  %4 = load i32, i32* %3, align 4, !tbaa !90
  %5 = icmp sgt i32 %2, %4
  br i1 %5, label %6, label %38

; <label>:6                                       ; preds = %0
  %7 = icmp eq i32 %2, 0
  br i1 %7, label %8, label %13

; <label>:8                                       ; preds = %6
  %9 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 13
  %10 = load i8, i8* %9, align 1, !tbaa !91
  %11 = zext i8 %10 to i32
  %12 = icmp sgt i32 %11, %from
  br i1 %12, label %38, label %.critedge3

; <label>:13                                      ; preds = %6
  %14 = add nsw i32 %2, -1
  %15 = sext i32 %14 to i64
  %16 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 0
  %17 = load %struct.Proto*, %struct.Proto** %16, align 8, !tbaa !92
  %18 = getelementptr inbounds %struct.Proto, %struct.Proto* %17, i64 0, i32 4
  %19 = load i32*, i32** %18, align 8, !tbaa !93
  %20 = getelementptr inbounds i32, i32* %19, i64 %15
  %21 = load i32, i32* %20, align 4, !tbaa !38
  %22 = and i32 %21, 63
  %23 = icmp eq i32 %22, 3
  br i1 %23, label %24, label %38

; <label>:24                                      ; preds = %13
  %25 = lshr i32 %21, 6
  %26 = and i32 %25, 255
  %27 = lshr i32 %21, 23
  %28 = icmp sgt i32 %26, %from
  %29 = add nuw nsw i32 %27, 1
  %30 = icmp slt i32 %29, %from
  %or.cond = or i1 %28, %30
  br i1 %or.cond, label %38, label %31

; <label>:31                                      ; preds = %24
  %32 = add i32 %from, -1
  %33 = add i32 %32, %n
  %34 = icmp sgt i32 %33, %27
  br i1 %34, label %.critedge, label %.critedge3

.critedge:                                        ; preds = %31
  %35 = and i32 %21, 8388607
  %36 = shl i32 %33, 23
  %37 = or i32 %35, %36
  store i32 %37, i32* %20, align 4, !tbaa !38
  br label %.critedge3

; <label>:38                                      ; preds = %24, %8, %13, %0
  %39 = add nsw i32 %n, %from
  %40 = shl i32 %from, 6
  %41 = shl i32 %39, 23
  %42 = add i32 %41, -8388608
  %43 = or i32 %40, %42
  %44 = or i32 %43, 3
  %45 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 3
  %46 = load %struct.LexState*, %struct.LexState** %45, align 8, !tbaa !94
  %47 = getelementptr inbounds %struct.LexState, %struct.LexState* %46, i64 0, i32 2
  %48 = load i32, i32* %47, align 4, !tbaa !95
  %49 = tail call fastcc i32 @luaK_code(%struct.FuncState* %fs, i32 %44, i32 %48) #1
  br label %.critedge3

.critedge3:                                       ; preds = %31, %.critedge, %8, %38
  ret void
}

; Function Attrs: nounwind uwtable
define hidden i32 @luaK_codeABC(%struct.FuncState* nocapture %fs, i32 %o, i32 %a, i32 %b, i32 %c) #0 {
  %1 = shl i32 %a, 6
  %2 = or i32 %1, %o
  %3 = shl i32 %b, 23
  %4 = or i32 %2, %3
  %5 = shl i32 %c, 14
  %6 = or i32 %4, %5
  %7 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 3
  %8 = load %struct.LexState*, %struct.LexState** %7, align 8, !tbaa !94
  %9 = getelementptr inbounds %struct.LexState, %struct.LexState* %8, i64 0, i32 2
  %10 = load i32, i32* %9, align 4, !tbaa !95
  %11 = tail call fastcc i32 @luaK_code(%struct.FuncState* %fs, i32 %6, i32 %10)
  ret i32 %11
}

; Function Attrs: nounwind uwtable
define hidden i32 @luaK_jump(%struct.FuncState* nocapture %fs) #0 {
  %1 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 8
  %2 = load i32, i32* %1, align 4, !tbaa !98
  store i32 -1, i32* %1, align 4, !tbaa !98
  %3 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 3
  %4 = load %struct.LexState*, %struct.LexState** %3, align 8, !tbaa !94
  %5 = getelementptr inbounds %struct.LexState, %struct.LexState* %4, i64 0, i32 2
  %6 = load i32, i32* %5, align 4, !tbaa !95
  %7 = tail call fastcc i32 @luaK_code(%struct.FuncState* %fs, i32 2147450902, i32 %6) #1
  %8 = icmp eq i32 %2, -1
  br i1 %8, label %luaK_concat.exit, label %9

; <label>:9                                       ; preds = %0
  %10 = icmp eq i32 %7, -1
  br i1 %10, label %luaK_concat.exit, label %.preheader.i

.preheader.i:                                     ; preds = %9
  %fs.idx.i = getelementptr %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 0
  %fs.idx.val.i = load %struct.Proto*, %struct.Proto** %fs.idx.i, align 8, !tbaa !92
  %fs.idx.val.idx.i = getelementptr %struct.Proto, %struct.Proto* %fs.idx.val.i, i64 0, i32 4
  %fs.idx.val.idx.val.i = load i32*, i32** %fs.idx.val.idx.i, align 8, !tbaa !93
  br label %11

; <label>:11                                      ; preds = %11, %.preheader.i
  %list.0.i = phi i32 [ %.0.i.i, %11 ], [ %7, %.preheader.i ]
  %12 = sext i32 %list.0.i to i64
  %13 = getelementptr inbounds i32, i32* %fs.idx.val.idx.val.i, i64 %12
  %14 = load i32, i32* %13, align 4, !tbaa !38
  %15 = lshr i32 %14, 14
  %16 = add nsw i32 %15, -131071
  %17 = icmp eq i32 %16, -1
  %18 = add nsw i32 %list.0.i, 1
  %19 = add nsw i32 %18, %16
  %.0.i.i = select i1 %17, i32 -1, i32 %19
  %20 = icmp eq i32 %.0.i.i, -1
  br i1 %20, label %21, label %11

; <label>:21                                      ; preds = %11
  %.lcssa6 = phi i32 [ %14, %11 ]
  %.lcssa = phi i32* [ %13, %11 ]
  %list.0.i.lcssa = phi i32 [ %list.0.i, %11 ]
  %.neg.i.i = xor i32 %list.0.i.lcssa, -1
  %22 = add i32 %2, %.neg.i.i
  %ispos.i.i = icmp sgt i32 %22, -1
  %neg.i.i = sub i32 0, %22
  %23 = select i1 %ispos.i.i, i32 %22, i32 %neg.i.i
  %24 = icmp sgt i32 %23, 131071
  br i1 %24, label %25, label %fixjump.exit.i

; <label>:25                                      ; preds = %21
  %26 = load %struct.LexState*, %struct.LexState** %3, align 8, !tbaa !94
  tail call void @luaX_syntaxerror(%struct.LexState* %26, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1.37, i64 0, i64 0)) #1
  %.pre.i = load i32, i32* %.lcssa, align 4, !tbaa !38
  br label %fixjump.exit.i

fixjump.exit.i:                                   ; preds = %25, %21
  %27 = phi i32 [ %.lcssa6, %21 ], [ %.pre.i, %25 ]
  %28 = and i32 %27, 16383
  %29 = shl i32 %22, 14
  %30 = add i32 %29, 2147467264
  %31 = or i32 %28, %30
  store i32 %31, i32* %.lcssa, align 4, !tbaa !38
  br label %luaK_concat.exit

luaK_concat.exit:                                 ; preds = %9, %0, %fixjump.exit.i
  %j.0 = phi i32 [ %7, %0 ], [ %7, %fixjump.exit.i ], [ %2, %9 ]
  ret i32 %j.0
}

; Function Attrs: nounwind uwtable
define hidden i32 @luaK_codeABx(%struct.FuncState* nocapture %fs, i32 %o, i32 %a, i32 %bc) #0 {
  %1 = shl i32 %a, 6
  %2 = or i32 %1, %o
  %3 = shl i32 %bc, 14
  %4 = or i32 %2, %3
  %5 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 3
  %6 = load %struct.LexState*, %struct.LexState** %5, align 8, !tbaa !94
  %7 = getelementptr inbounds %struct.LexState, %struct.LexState* %6, i64 0, i32 2
  %8 = load i32, i32* %7, align 4, !tbaa !95
  %9 = tail call fastcc i32 @luaK_code(%struct.FuncState* %fs, i32 %4, i32 %8)
  ret i32 %9
}

; Function Attrs: nounwind uwtable
define hidden void @luaK_concat(%struct.FuncState* nocapture readonly %fs, i32* nocapture %l1, i32 %l2) #0 {
  %1 = icmp eq i32 %l2, -1
  br i1 %1, label %28, label %2

; <label>:2                                       ; preds = %0
  %3 = load i32, i32* %l1, align 4, !tbaa !38
  %4 = icmp eq i32 %3, -1
  br i1 %4, label %5, label %.preheader

.preheader:                                       ; preds = %2
  %fs.idx = getelementptr %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 0
  %fs.idx.val = load %struct.Proto*, %struct.Proto** %fs.idx, align 8, !tbaa !92
  %fs.idx.val.idx = getelementptr %struct.Proto, %struct.Proto* %fs.idx.val, i64 0, i32 4
  %fs.idx.val.idx.val = load i32*, i32** %fs.idx.val.idx, align 8, !tbaa !93
  br label %6

; <label>:5                                       ; preds = %2
  store i32 %l2, i32* %l1, align 4, !tbaa !38
  br label %28

; <label>:6                                       ; preds = %.preheader, %6
  %list.0 = phi i32 [ %.0.i, %6 ], [ %3, %.preheader ]
  %7 = sext i32 %list.0 to i64
  %8 = getelementptr inbounds i32, i32* %fs.idx.val.idx.val, i64 %7
  %9 = load i32, i32* %8, align 4, !tbaa !38
  %10 = lshr i32 %9, 14
  %11 = add nsw i32 %10, -131071
  %12 = icmp eq i32 %11, -1
  %13 = add nsw i32 %list.0, 1
  %14 = add nsw i32 %13, %11
  %.0.i = select i1 %12, i32 -1, i32 %14
  %15 = icmp eq i32 %.0.i, -1
  br i1 %15, label %16, label %6

; <label>:16                                      ; preds = %6
  %.lcssa4 = phi i32 [ %9, %6 ]
  %.lcssa = phi i32* [ %8, %6 ]
  %list.0.lcssa = phi i32 [ %list.0, %6 ]
  %.neg.i = xor i32 %list.0.lcssa, -1
  %17 = add i32 %.neg.i, %l2
  %ispos.i = icmp sgt i32 %17, -1
  %neg.i = sub i32 0, %17
  %18 = select i1 %ispos.i, i32 %17, i32 %neg.i
  %19 = icmp sgt i32 %18, 131071
  br i1 %19, label %20, label %fixjump.exit

; <label>:20                                      ; preds = %16
  %21 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 3
  %22 = load %struct.LexState*, %struct.LexState** %21, align 8, !tbaa !94
  tail call void @luaX_syntaxerror(%struct.LexState* %22, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1.37, i64 0, i64 0)) #1
  %.pre = load i32, i32* %.lcssa, align 4, !tbaa !38
  br label %fixjump.exit

fixjump.exit:                                     ; preds = %16, %20
  %23 = phi i32 [ %.lcssa4, %16 ], [ %.pre, %20 ]
  %24 = and i32 %23, 16383
  %25 = shl i32 %17, 14
  %26 = add i32 %25, 2147467264
  %27 = or i32 %24, %26
  store i32 %27, i32* %.lcssa, align 4, !tbaa !38
  br label %28

; <label>:28                                      ; preds = %5, %fixjump.exit, %0
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @luaK_ret(%struct.FuncState* nocapture %fs, i32 %first, i32 %nret) #0 {
  %1 = shl i32 %first, 6
  %2 = shl i32 %nret, 23
  %3 = add i32 %2, 8388608
  %4 = or i32 %1, %3
  %5 = or i32 %4, 30
  %6 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 3
  %7 = load %struct.LexState*, %struct.LexState** %6, align 8, !tbaa !94
  %8 = getelementptr inbounds %struct.LexState, %struct.LexState* %7, i64 0, i32 2
  %9 = load i32, i32* %8, align 4, !tbaa !95
  %10 = tail call fastcc i32 @luaK_code(%struct.FuncState* %fs, i32 %5, i32 %9) #1
  ret void
}

; Function Attrs: nounwind uwtable
define hidden i32 @luaK_getlabel(%struct.FuncState* nocapture %fs) #0 {
  %1 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 6
  %2 = load i32, i32* %1, align 4, !tbaa !88
  %3 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 7
  store i32 %2, i32* %3, align 4, !tbaa !90
  ret i32 %2
}

; Function Attrs: nounwind uwtable
define hidden void @luaK_patchlist(%struct.FuncState* nocapture %fs, i32 %list, i32 %target) #0 {
  %1 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 6
  %2 = load i32, i32* %1, align 4, !tbaa !88
  %3 = icmp eq i32 %2, %target
  br i1 %3, label %4, label %34

; <label>:4                                       ; preds = %0
  %5 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 7
  store i32 %target, i32* %5, align 4, !tbaa !90
  %6 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 8
  %7 = icmp eq i32 %list, -1
  br i1 %7, label %luaK_patchtohere.exit, label %8

; <label>:8                                       ; preds = %4
  %9 = load i32, i32* %6, align 4, !tbaa !38
  %10 = icmp eq i32 %9, -1
  br i1 %10, label %11, label %.preheader.i.i

.preheader.i.i:                                   ; preds = %8
  %fs.idx.i.i = getelementptr %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 0
  %fs.idx.val.i.i = load %struct.Proto*, %struct.Proto** %fs.idx.i.i, align 8, !tbaa !92
  %fs.idx.val.idx.i.i = getelementptr %struct.Proto, %struct.Proto* %fs.idx.val.i.i, i64 0, i32 4
  %fs.idx.val.idx.val.i.i = load i32*, i32** %fs.idx.val.idx.i.i, align 8, !tbaa !93
  br label %12

; <label>:11                                      ; preds = %8
  store i32 %list, i32* %6, align 4, !tbaa !38
  br label %luaK_patchtohere.exit

; <label>:12                                      ; preds = %12, %.preheader.i.i
  %list.0.i.i = phi i32 [ %.0.i.i.i, %12 ], [ %9, %.preheader.i.i ]
  %13 = sext i32 %list.0.i.i to i64
  %14 = getelementptr inbounds i32, i32* %fs.idx.val.idx.val.i.i, i64 %13
  %15 = load i32, i32* %14, align 4, !tbaa !38
  %16 = lshr i32 %15, 14
  %17 = add nsw i32 %16, -131071
  %18 = icmp eq i32 %17, -1
  %19 = add nsw i32 %list.0.i.i, 1
  %20 = add nsw i32 %19, %17
  %.0.i.i.i = select i1 %18, i32 -1, i32 %20
  %21 = icmp eq i32 %.0.i.i.i, -1
  br i1 %21, label %22, label %12

; <label>:22                                      ; preds = %12
  %.lcssa11 = phi i32 [ %15, %12 ]
  %.lcssa = phi i32* [ %14, %12 ]
  %list.0.i.i.lcssa = phi i32 [ %list.0.i.i, %12 ]
  %.neg.i.i.i = xor i32 %list.0.i.i.lcssa, -1
  %23 = add i32 %.neg.i.i.i, %list
  %ispos.i.i.i = icmp sgt i32 %23, -1
  %neg.i.i.i = sub i32 0, %23
  %24 = select i1 %ispos.i.i.i, i32 %23, i32 %neg.i.i.i
  %25 = icmp sgt i32 %24, 131071
  br i1 %25, label %26, label %fixjump.exit.i.i

; <label>:26                                      ; preds = %22
  %27 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 3
  %28 = load %struct.LexState*, %struct.LexState** %27, align 8, !tbaa !94
  tail call void @luaX_syntaxerror(%struct.LexState* %28, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1.37, i64 0, i64 0)) #1
  %.pre.i.i = load i32, i32* %.lcssa, align 4, !tbaa !38
  br label %fixjump.exit.i.i

fixjump.exit.i.i:                                 ; preds = %26, %22
  %29 = phi i32 [ %.lcssa11, %22 ], [ %.pre.i.i, %26 ]
  %30 = and i32 %29, 16383
  %31 = shl i32 %23, 14
  %32 = add i32 %31, 2147467264
  %33 = or i32 %30, %32
  store i32 %33, i32* %.lcssa, align 4, !tbaa !38
  br label %luaK_patchtohere.exit

; <label>:34                                      ; preds = %0
  %35 = icmp eq i32 %list, -1
  br i1 %35, label %luaK_patchtohere.exit, label %.lr.ph.i

.lr.ph.i:                                         ; preds = %34
  %fs.idx.i = getelementptr %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 0
  %36 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 3
  br label %37

; <label>:37                                      ; preds = %.backedge.i, %.lr.ph.i
  %.02.i = phi i32 [ %list, %.lr.ph.i ], [ %.0.i.i, %.backedge.i ]
  %fs.idx.val.i = load %struct.Proto*, %struct.Proto** %fs.idx.i, align 8, !tbaa !92
  %fs.idx.val.idx.i = getelementptr %struct.Proto, %struct.Proto* %fs.idx.val.i, i64 0, i32 4
  %fs.idx.val.idx.val.i = load i32*, i32** %fs.idx.val.idx.i, align 8, !tbaa !93
  %38 = sext i32 %.02.i to i64
  %39 = getelementptr inbounds i32, i32* %fs.idx.val.idx.val.i, i64 %38
  %40 = load i32, i32* %39, align 4, !tbaa !38
  %41 = lshr i32 %40, 14
  %42 = add nsw i32 %41, -131071
  %43 = icmp eq i32 %42, -1
  %44 = add nsw i32 %.02.i, 1
  %45 = add nsw i32 %44, %42
  %.0.i.i = select i1 %43, i32 -1, i32 %45
  %46 = icmp sgt i32 %.02.i, 0
  br i1 %46, label %47, label %55

; <label>:47                                      ; preds = %37
  %48 = getelementptr inbounds i32, i32* %39, i64 -1
  %49 = load i32, i32* %48, align 4, !tbaa !38
  %50 = and i32 %49, 63
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds [38 x i8], [38 x i8]* @luaP_opmodes, i64 0, i64 %51
  %53 = load i8, i8* %52, align 1, !tbaa !76
  %54 = icmp slt i8 %53, 0
  br i1 %54, label %getjumpcontrol.exit.i, label %55

; <label>:55                                      ; preds = %47, %37
  br label %getjumpcontrol.exit.i

getjumpcontrol.exit.i:                            ; preds = %55, %47
  %56 = phi i32 [ %40, %55 ], [ %49, %47 ]
  %.0.i.i.5 = phi i32* [ %39, %55 ], [ %48, %47 ]
  %57 = and i32 %56, 63
  %58 = icmp eq i32 %57, 27
  br i1 %58, label %59, label %75

; <label>:59                                      ; preds = %getjumpcontrol.exit.i
  %60 = lshr i32 %56, 23
  %61 = shl nuw nsw i32 %60, 6
  %62 = and i32 %56, 8372224
  %63 = or i32 %62, %61
  %64 = or i32 %63, 26
  store i32 %64, i32* %.0.i.i.5, align 4, !tbaa !38
  %.neg.i = xor i32 %.02.i, -1
  %65 = add i32 %.neg.i, %target
  %ispos.i = icmp sgt i32 %65, -1
  %neg.i = sub i32 0, %65
  %66 = select i1 %ispos.i, i32 %65, i32 %neg.i
  %67 = icmp sgt i32 %66, 131071
  br i1 %67, label %68, label %fixjump.exit

; <label>:68                                      ; preds = %59
  %69 = load %struct.LexState*, %struct.LexState** %36, align 8, !tbaa !94
  tail call void @luaX_syntaxerror(%struct.LexState* %69, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1.37, i64 0, i64 0)) #1
  br label %fixjump.exit

fixjump.exit:                                     ; preds = %59, %68
  %70 = load i32, i32* %39, align 4, !tbaa !38
  %71 = and i32 %70, 16383
  %72 = shl i32 %65, 14
  %73 = add i32 %72, 2147467264
  %74 = or i32 %71, %73
  br label %.backedge.i

; <label>:75                                      ; preds = %getjumpcontrol.exit.i
  %.neg.i.1 = xor i32 %.02.i, -1
  %76 = add i32 %.neg.i.1, %target
  %ispos.i.2 = icmp sgt i32 %76, -1
  %neg.i.3 = sub i32 0, %76
  %77 = select i1 %ispos.i.2, i32 %76, i32 %neg.i.3
  %78 = icmp sgt i32 %77, 131071
  br i1 %78, label %79, label %fixjump.exit4

; <label>:79                                      ; preds = %75
  %80 = load %struct.LexState*, %struct.LexState** %36, align 8, !tbaa !94
  tail call void @luaX_syntaxerror(%struct.LexState* %80, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1.37, i64 0, i64 0)) #1
  %.pre = load i32, i32* %39, align 4, !tbaa !38
  br label %fixjump.exit4

fixjump.exit4:                                    ; preds = %75, %79
  %81 = phi i32 [ %40, %75 ], [ %.pre, %79 ]
  %82 = and i32 %81, 16383
  %83 = shl i32 %76, 14
  %84 = add i32 %83, 2147467264
  %85 = or i32 %82, %84
  br label %.backedge.i

.backedge.i:                                      ; preds = %fixjump.exit4, %fixjump.exit
  %storemerge = phi i32 [ %85, %fixjump.exit4 ], [ %74, %fixjump.exit ]
  store i32 %storemerge, i32* %39, align 4, !tbaa !38
  %86 = icmp eq i32 %.0.i.i, -1
  br i1 %86, label %luaK_patchtohere.exit.loopexit, label %37

luaK_patchtohere.exit.loopexit:                   ; preds = %.backedge.i
  br label %luaK_patchtohere.exit

luaK_patchtohere.exit:                            ; preds = %luaK_patchtohere.exit.loopexit, %34, %fixjump.exit.i.i, %11, %4
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @luaK_patchtohere(%struct.FuncState* nocapture %fs, i32 %list) #0 {
  %1 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 6
  %2 = load i32, i32* %1, align 4, !tbaa !88
  %3 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 7
  store i32 %2, i32* %3, align 4, !tbaa !90
  %4 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 8
  %5 = icmp eq i32 %list, -1
  br i1 %5, label %luaK_concat.exit, label %6

; <label>:6                                       ; preds = %0
  %7 = load i32, i32* %4, align 4, !tbaa !38
  %8 = icmp eq i32 %7, -1
  br i1 %8, label %9, label %.preheader.i

.preheader.i:                                     ; preds = %6
  %fs.idx.i = getelementptr %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 0
  %fs.idx.val.i = load %struct.Proto*, %struct.Proto** %fs.idx.i, align 8, !tbaa !92
  %fs.idx.val.idx.i = getelementptr %struct.Proto, %struct.Proto* %fs.idx.val.i, i64 0, i32 4
  %fs.idx.val.idx.val.i = load i32*, i32** %fs.idx.val.idx.i, align 8, !tbaa !93
  br label %10

; <label>:9                                       ; preds = %6
  store i32 %list, i32* %4, align 4, !tbaa !38
  br label %luaK_concat.exit

; <label>:10                                      ; preds = %10, %.preheader.i
  %list.0.i = phi i32 [ %.0.i.i, %10 ], [ %7, %.preheader.i ]
  %11 = sext i32 %list.0.i to i64
  %12 = getelementptr inbounds i32, i32* %fs.idx.val.idx.val.i, i64 %11
  %13 = load i32, i32* %12, align 4, !tbaa !38
  %14 = lshr i32 %13, 14
  %15 = add nsw i32 %14, -131071
  %16 = icmp eq i32 %15, -1
  %17 = add nsw i32 %list.0.i, 1
  %18 = add nsw i32 %17, %15
  %.0.i.i = select i1 %16, i32 -1, i32 %18
  %19 = icmp eq i32 %.0.i.i, -1
  br i1 %19, label %20, label %10

; <label>:20                                      ; preds = %10
  %.lcssa6 = phi i32 [ %13, %10 ]
  %.lcssa = phi i32* [ %12, %10 ]
  %list.0.i.lcssa = phi i32 [ %list.0.i, %10 ]
  %.neg.i.i = xor i32 %list.0.i.lcssa, -1
  %21 = add i32 %.neg.i.i, %list
  %ispos.i.i = icmp sgt i32 %21, -1
  %neg.i.i = sub i32 0, %21
  %22 = select i1 %ispos.i.i, i32 %21, i32 %neg.i.i
  %23 = icmp sgt i32 %22, 131071
  br i1 %23, label %24, label %fixjump.exit.i

; <label>:24                                      ; preds = %20
  %25 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 3
  %26 = load %struct.LexState*, %struct.LexState** %25, align 8, !tbaa !94
  tail call void @luaX_syntaxerror(%struct.LexState* %26, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1.37, i64 0, i64 0)) #1
  %.pre.i = load i32, i32* %.lcssa, align 4, !tbaa !38
  br label %fixjump.exit.i

fixjump.exit.i:                                   ; preds = %24, %20
  %27 = phi i32 [ %.lcssa6, %20 ], [ %.pre.i, %24 ]
  %28 = and i32 %27, 16383
  %29 = shl i32 %21, 14
  %30 = add i32 %29, 2147467264
  %31 = or i32 %28, %30
  store i32 %31, i32* %.lcssa, align 4, !tbaa !38
  br label %luaK_concat.exit

luaK_concat.exit:                                 ; preds = %0, %9, %fixjump.exit.i
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @luaK_checkstack(%struct.FuncState* nocapture readonly %fs, i32 %n) #0 {
  %1 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 9
  %2 = load i32, i32* %1, align 4, !tbaa !99
  %3 = add nsw i32 %2, %n
  %4 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 0
  %5 = load %struct.Proto*, %struct.Proto** %4, align 8, !tbaa !92
  %6 = getelementptr inbounds %struct.Proto, %struct.Proto* %5, i64 0, i32 22
  %7 = load i8, i8* %6, align 1, !tbaa !100
  %8 = zext i8 %7 to i32
  %9 = icmp sgt i32 %3, %8
  br i1 %9, label %10, label %19

; <label>:10                                      ; preds = %0
  %11 = icmp sgt i32 %3, 249
  br i1 %11, label %12, label %15

; <label>:12                                      ; preds = %10
  %13 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 3
  %14 = load %struct.LexState*, %struct.LexState** %13, align 8, !tbaa !94
  tail call void @luaX_syntaxerror(%struct.LexState* %14, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.51, i64 0, i64 0)) #1
  %.pre = load %struct.Proto*, %struct.Proto** %4, align 8, !tbaa !92
  br label %15

; <label>:15                                      ; preds = %12, %10
  %16 = phi %struct.Proto* [ %.pre, %12 ], [ %5, %10 ]
  %17 = trunc i32 %3 to i8
  %18 = getelementptr inbounds %struct.Proto, %struct.Proto* %16, i64 0, i32 22
  store i8 %17, i8* %18, align 1, !tbaa !100
  br label %19

; <label>:19                                      ; preds = %15, %0
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @luaK_reserveregs(%struct.FuncState* nocapture %fs, i32 %n) #0 {
  %1 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 9
  %2 = load i32, i32* %1, align 4, !tbaa !99
  %3 = add nsw i32 %2, %n
  %4 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 0
  %5 = load %struct.Proto*, %struct.Proto** %4, align 8, !tbaa !92
  %6 = getelementptr inbounds %struct.Proto, %struct.Proto* %5, i64 0, i32 22
  %7 = load i8, i8* %6, align 1, !tbaa !100
  %8 = zext i8 %7 to i32
  %9 = icmp sgt i32 %3, %8
  br i1 %9, label %10, label %luaK_checkstack.exit

; <label>:10                                      ; preds = %0
  %11 = icmp sgt i32 %3, 249
  br i1 %11, label %12, label %15

; <label>:12                                      ; preds = %10
  %13 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 3
  %14 = load %struct.LexState*, %struct.LexState** %13, align 8, !tbaa !94
  tail call void @luaX_syntaxerror(%struct.LexState* %14, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.51, i64 0, i64 0)) #1
  %.pre.i = load %struct.Proto*, %struct.Proto** %4, align 8, !tbaa !92
  %.pre.pre = load i32, i32* %1, align 4, !tbaa !99
  br label %15

; <label>:15                                      ; preds = %12, %10
  %.pre = phi i32 [ %.pre.pre, %12 ], [ %2, %10 ]
  %16 = phi %struct.Proto* [ %.pre.i, %12 ], [ %5, %10 ]
  %17 = trunc i32 %3 to i8
  %18 = getelementptr inbounds %struct.Proto, %struct.Proto* %16, i64 0, i32 22
  store i8 %17, i8* %18, align 1, !tbaa !100
  br label %luaK_checkstack.exit

luaK_checkstack.exit:                             ; preds = %0, %15
  %19 = phi i32 [ %2, %0 ], [ %.pre, %15 ]
  %20 = add nsw i32 %19, %n
  store i32 %20, i32* %1, align 4, !tbaa !99
  ret void
}

; Function Attrs: nounwind uwtable
define hidden i32 @luaK_stringK(%struct.FuncState* nocapture %fs, %union.TString* %s) #0 {
  %o = alloca %struct.lua_TValue, align 8
  %1 = bitcast %struct.lua_TValue* %o to i8*
  call void @llvm.lifetime.start(i64 16, i8* %1) #1
  %2 = bitcast %struct.lua_TValue* %o to %union.TString**
  store %union.TString* %s, %union.TString** %2, align 8, !tbaa !25
  %3 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %o, i64 0, i32 1
  store i32 4, i32* %3, align 8, !tbaa !10
  %4 = call fastcc i32 @addk(%struct.FuncState* %fs, %struct.lua_TValue* nonnull %o, %struct.lua_TValue* nonnull %o)
  call void @llvm.lifetime.end(i64 16, i8* %1) #1
  ret i32 %4
}

; Function Attrs: nounwind uwtable
define hidden i32 @luaK_numberK(%struct.FuncState* nocapture %fs, double %r) #0 {
  %o = alloca %struct.lua_TValue, align 8
  %1 = bitcast %struct.lua_TValue* %o to i8*
  call void @llvm.lifetime.start(i64 16, i8* %1) #1
  %2 = bitcast %struct.lua_TValue* %o to double*
  store double %r, double* %2, align 8, !tbaa !36
  %3 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %o, i64 0, i32 1
  store i32 3, i32* %3, align 8, !tbaa !10
  %4 = call fastcc i32 @addk(%struct.FuncState* %fs, %struct.lua_TValue* nonnull %o, %struct.lua_TValue* nonnull %o)
  call void @llvm.lifetime.end(i64 16, i8* %1) #1
  ret i32 %4
}

; Function Attrs: nounwind uwtable
define hidden void @luaK_setreturns(%struct.FuncState* nocapture %fs, %struct.expdesc* nocapture readonly %e, i32 %nresults) #0 {
  %1 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %e, i64 0, i32 0
  %2 = load i32, i32* %1, align 4, !tbaa !101
  switch i32 %2, label %61 [
    i32 13, label %3
    i32 14, label %19
  ]

; <label>:3                                       ; preds = %0
  %4 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %e, i64 0, i32 1
  %5 = bitcast %union.SemInfo* %4 to i32*
  %6 = load i32, i32* %5, align 4, !tbaa !103
  %7 = sext i32 %6 to i64
  %8 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 0
  %9 = load %struct.Proto*, %struct.Proto** %8, align 8, !tbaa !92
  %10 = getelementptr inbounds %struct.Proto, %struct.Proto* %9, i64 0, i32 4
  %11 = load i32*, i32** %10, align 8, !tbaa !93
  %12 = getelementptr inbounds i32, i32* %11, i64 %7
  %13 = load i32, i32* %12, align 4, !tbaa !38
  %14 = and i32 %13, -8372225
  %15 = shl i32 %nresults, 14
  %16 = add i32 %15, 16384
  %17 = and i32 %16, 8372224
  %18 = or i32 %14, %17
  store i32 %18, i32* %12, align 4, !tbaa !38
  br label %61

; <label>:19                                      ; preds = %0
  %20 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %e, i64 0, i32 1
  %21 = bitcast %union.SemInfo* %20 to i32*
  %22 = load i32, i32* %21, align 4, !tbaa !103
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 0
  %25 = load %struct.Proto*, %struct.Proto** %24, align 8, !tbaa !92
  %26 = getelementptr inbounds %struct.Proto, %struct.Proto* %25, i64 0, i32 4
  %27 = load i32*, i32** %26, align 8, !tbaa !93
  %28 = getelementptr inbounds i32, i32* %27, i64 %23
  %29 = load i32, i32* %28, align 4, !tbaa !38
  %30 = and i32 %29, 8388607
  %31 = shl i32 %nresults, 23
  %32 = add i32 %31, 8388608
  %33 = or i32 %30, %32
  store i32 %33, i32* %28, align 4, !tbaa !38
  %34 = load i32, i32* %21, align 4, !tbaa !103
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds i32, i32* %27, i64 %35
  %37 = load i32, i32* %36, align 4, !tbaa !38
  %38 = and i32 %37, -16321
  %39 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 9
  %40 = load i32, i32* %39, align 4, !tbaa !99
  %41 = shl i32 %40, 6
  %42 = and i32 %41, 16320
  %43 = or i32 %42, %38
  store i32 %43, i32* %36, align 4, !tbaa !38
  %44 = load i32, i32* %39, align 4, !tbaa !99
  %45 = add nsw i32 %44, 1
  %46 = getelementptr inbounds %struct.Proto, %struct.Proto* %25, i64 0, i32 22
  %47 = load i8, i8* %46, align 1, !tbaa !100
  %48 = zext i8 %47 to i32
  %49 = icmp slt i32 %44, %48
  br i1 %49, label %luaK_reserveregs.exit, label %50

; <label>:50                                      ; preds = %19
  %51 = icmp sgt i32 %44, 248
  br i1 %51, label %52, label %55

; <label>:52                                      ; preds = %50
  %53 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 3
  %54 = load %struct.LexState*, %struct.LexState** %53, align 8, !tbaa !94
  tail call void @luaX_syntaxerror(%struct.LexState* %54, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.51, i64 0, i64 0)) #1
  %.pre.i.i = load %struct.Proto*, %struct.Proto** %24, align 8, !tbaa !92
  %.pre.pre.i = load i32, i32* %39, align 4, !tbaa !99
  br label %55

; <label>:55                                      ; preds = %52, %50
  %.pre.i = phi i32 [ %.pre.pre.i, %52 ], [ %44, %50 ]
  %56 = phi %struct.Proto* [ %.pre.i.i, %52 ], [ %25, %50 ]
  %57 = trunc i32 %45 to i8
  %58 = getelementptr inbounds %struct.Proto, %struct.Proto* %56, i64 0, i32 22
  store i8 %57, i8* %58, align 1, !tbaa !100
  br label %luaK_reserveregs.exit

luaK_reserveregs.exit:                            ; preds = %19, %55
  %59 = phi i32 [ %44, %19 ], [ %.pre.i, %55 ]
  %60 = add nsw i32 %59, 1
  store i32 %60, i32* %39, align 4, !tbaa !99
  br label %61

; <label>:61                                      ; preds = %0, %luaK_reserveregs.exit, %3
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @luaK_setoneret(%struct.FuncState* nocapture readonly %fs, %struct.expdesc* nocapture %e) #0 {
  %1 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %e, i64 0, i32 0
  %2 = load i32, i32* %1, align 4, !tbaa !101
  switch i32 %2, label %29 [
    i32 13, label %3
    i32 14, label %16
  ]

; <label>:3                                       ; preds = %0
  store i32 12, i32* %1, align 4, !tbaa !101
  %4 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %e, i64 0, i32 1
  %5 = bitcast %union.SemInfo* %4 to i32*
  %6 = load i32, i32* %5, align 4, !tbaa !103
  %7 = sext i32 %6 to i64
  %8 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 0
  %9 = load %struct.Proto*, %struct.Proto** %8, align 8, !tbaa !92
  %10 = getelementptr inbounds %struct.Proto, %struct.Proto* %9, i64 0, i32 4
  %11 = load i32*, i32** %10, align 8, !tbaa !93
  %12 = getelementptr inbounds i32, i32* %11, i64 %7
  %13 = load i32, i32* %12, align 4, !tbaa !38
  %14 = lshr i32 %13, 6
  %15 = and i32 %14, 255
  store i32 %15, i32* %5, align 4, !tbaa !103
  br label %29

; <label>:16                                      ; preds = %0
  %17 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %e, i64 0, i32 1
  %18 = bitcast %union.SemInfo* %17 to i32*
  %19 = load i32, i32* %18, align 4, !tbaa !103
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 0
  %22 = load %struct.Proto*, %struct.Proto** %21, align 8, !tbaa !92
  %23 = getelementptr inbounds %struct.Proto, %struct.Proto* %22, i64 0, i32 4
  %24 = load i32*, i32** %23, align 8, !tbaa !93
  %25 = getelementptr inbounds i32, i32* %24, i64 %20
  %26 = load i32, i32* %25, align 4, !tbaa !38
  %27 = and i32 %26, 8388607
  %28 = or i32 %27, 16777216
  store i32 %28, i32* %25, align 4, !tbaa !38
  store i32 11, i32* %1, align 4, !tbaa !101
  br label %29

; <label>:29                                      ; preds = %0, %16, %3
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @luaK_dischargevars(%struct.FuncState* nocapture %fs, %struct.expdesc* nocapture %e) #0 {
  %1 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %e, i64 0, i32 0
  %2 = load i32, i32* %1, align 4, !tbaa !101
  switch i32 %2, label %luaK_setoneret.exit [
    i32 6, label %3
    i32 7, label %4
    i32 8, label %15
    i32 9, label %26
    i32 13, label %64
    i32 14, label %77
  ]

; <label>:3                                       ; preds = %0
  store i32 12, i32* %1, align 4, !tbaa !101
  br label %luaK_setoneret.exit

; <label>:4                                       ; preds = %0
  %5 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %e, i64 0, i32 1
  %6 = bitcast %union.SemInfo* %5 to i32*
  %7 = load i32, i32* %6, align 4, !tbaa !103
  %8 = shl i32 %7, 23
  %9 = or i32 %8, 4
  %10 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 3
  %11 = load %struct.LexState*, %struct.LexState** %10, align 8, !tbaa !94
  %12 = getelementptr inbounds %struct.LexState, %struct.LexState* %11, i64 0, i32 2
  %13 = load i32, i32* %12, align 4, !tbaa !95
  %14 = tail call fastcc i32 @luaK_code(%struct.FuncState* %fs, i32 %9, i32 %13) #1
  store i32 %14, i32* %6, align 4, !tbaa !103
  store i32 11, i32* %1, align 4, !tbaa !101
  br label %luaK_setoneret.exit

; <label>:15                                      ; preds = %0
  %16 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %e, i64 0, i32 1
  %17 = bitcast %union.SemInfo* %16 to i32*
  %18 = load i32, i32* %17, align 4, !tbaa !103
  %19 = shl i32 %18, 14
  %20 = or i32 %19, 5
  %21 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 3
  %22 = load %struct.LexState*, %struct.LexState** %21, align 8, !tbaa !94
  %23 = getelementptr inbounds %struct.LexState, %struct.LexState* %22, i64 0, i32 2
  %24 = load i32, i32* %23, align 4, !tbaa !95
  %25 = tail call fastcc i32 @luaK_code(%struct.FuncState* %fs, i32 %20, i32 %24) #1
  store i32 %25, i32* %17, align 4, !tbaa !103
  store i32 11, i32* %1, align 4, !tbaa !101
  br label %luaK_setoneret.exit

; <label>:26                                      ; preds = %0
  %27 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %e, i64 0, i32 1
  %28 = bitcast %union.SemInfo* %27 to %struct.anon.4*
  %29 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %28, i64 0, i32 1
  %30 = load i32, i32* %29, align 4, !tbaa !105
  %31 = and i32 %30, 256
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %freereg.exit

; <label>:33                                      ; preds = %26
  %34 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 13
  %35 = load i8, i8* %34, align 1, !tbaa !91
  %36 = zext i8 %35 to i32
  %37 = icmp sgt i32 %36, %30
  br i1 %37, label %freereg.exit, label %38

; <label>:38                                      ; preds = %33
  %39 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 9
  %40 = load i32, i32* %39, align 4, !tbaa !99
  %41 = add nsw i32 %40, -1
  store i32 %41, i32* %39, align 4, !tbaa !99
  br label %freereg.exit

freereg.exit:                                     ; preds = %26, %33, %38
  %42 = bitcast %union.SemInfo* %27 to i32*
  %43 = load i32, i32* %42, align 4, !tbaa !103
  %44 = and i32 %43, 256
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %freereg.exit1

; <label>:46                                      ; preds = %freereg.exit
  %47 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 13
  %48 = load i8, i8* %47, align 1, !tbaa !91
  %49 = zext i8 %48 to i32
  %50 = icmp sgt i32 %49, %43
  br i1 %50, label %freereg.exit1, label %51

; <label>:51                                      ; preds = %46
  %52 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 9
  %53 = load i32, i32* %52, align 4, !tbaa !99
  %54 = add nsw i32 %53, -1
  store i32 %54, i32* %52, align 4, !tbaa !99
  br label %freereg.exit1

freereg.exit1:                                    ; preds = %freereg.exit, %46, %51
  %55 = shl i32 %43, 23
  %56 = shl i32 %30, 14
  %57 = or i32 %55, %56
  %58 = or i32 %57, 6
  %59 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 3
  %60 = load %struct.LexState*, %struct.LexState** %59, align 8, !tbaa !94
  %61 = getelementptr inbounds %struct.LexState, %struct.LexState* %60, i64 0, i32 2
  %62 = load i32, i32* %61, align 4, !tbaa !95
  %63 = tail call fastcc i32 @luaK_code(%struct.FuncState* %fs, i32 %58, i32 %62) #1
  store i32 %63, i32* %42, align 4, !tbaa !103
  store i32 11, i32* %1, align 4, !tbaa !101
  br label %luaK_setoneret.exit

; <label>:64                                      ; preds = %0
  store i32 12, i32* %1, align 4, !tbaa !101
  %65 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %e, i64 0, i32 1
  %66 = bitcast %union.SemInfo* %65 to i32*
  %67 = load i32, i32* %66, align 4, !tbaa !103
  %68 = sext i32 %67 to i64
  %69 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 0
  %70 = load %struct.Proto*, %struct.Proto** %69, align 8, !tbaa !92
  %71 = getelementptr inbounds %struct.Proto, %struct.Proto* %70, i64 0, i32 4
  %72 = load i32*, i32** %71, align 8, !tbaa !93
  %73 = getelementptr inbounds i32, i32* %72, i64 %68
  %74 = load i32, i32* %73, align 4, !tbaa !38
  %75 = lshr i32 %74, 6
  %76 = and i32 %75, 255
  store i32 %76, i32* %66, align 4, !tbaa !103
  br label %luaK_setoneret.exit

; <label>:77                                      ; preds = %0
  %78 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %e, i64 0, i32 1
  %79 = bitcast %union.SemInfo* %78 to i32*
  %80 = load i32, i32* %79, align 4, !tbaa !103
  %81 = sext i32 %80 to i64
  %82 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 0
  %83 = load %struct.Proto*, %struct.Proto** %82, align 8, !tbaa !92
  %84 = getelementptr inbounds %struct.Proto, %struct.Proto* %83, i64 0, i32 4
  %85 = load i32*, i32** %84, align 8, !tbaa !93
  %86 = getelementptr inbounds i32, i32* %85, i64 %81
  %87 = load i32, i32* %86, align 4, !tbaa !38
  %88 = and i32 %87, 8388607
  %89 = or i32 %88, 16777216
  store i32 %89, i32* %86, align 4, !tbaa !38
  store i32 11, i32* %1, align 4, !tbaa !101
  br label %luaK_setoneret.exit

luaK_setoneret.exit:                              ; preds = %0, %77, %64, %freereg.exit1, %15, %4, %3
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @luaK_exp2nextreg(%struct.FuncState* %fs, %struct.expdesc* nocapture %e) #0 {
  tail call void @luaK_dischargevars(%struct.FuncState* %fs, %struct.expdesc* %e)
  %1 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %e, i64 0, i32 0
  %2 = load i32, i32* %1, align 4, !tbaa !101
  %3 = icmp eq i32 %2, 12
  br i1 %3, label %4, label %freeexp.exit

; <label>:4                                       ; preds = %0
  %5 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %e, i64 0, i32 1
  %6 = bitcast %union.SemInfo* %5 to i32*
  %7 = load i32, i32* %6, align 4, !tbaa !103
  %8 = and i32 %7, 256
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %freeexp.exit

; <label>:10                                      ; preds = %4
  %11 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 13
  %12 = load i8, i8* %11, align 1, !tbaa !91
  %13 = zext i8 %12 to i32
  %14 = icmp sgt i32 %13, %7
  br i1 %14, label %freeexp.exit, label %15

; <label>:15                                      ; preds = %10
  %16 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 9
  %17 = load i32, i32* %16, align 4, !tbaa !99
  %18 = add nsw i32 %17, -1
  store i32 %18, i32* %16, align 4, !tbaa !99
  br label %freeexp.exit

freeexp.exit:                                     ; preds = %0, %4, %10, %15
  %19 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 9
  %20 = load i32, i32* %19, align 4, !tbaa !99
  %21 = add nsw i32 %20, 1
  %22 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 0
  %23 = load %struct.Proto*, %struct.Proto** %22, align 8, !tbaa !92
  %24 = getelementptr inbounds %struct.Proto, %struct.Proto* %23, i64 0, i32 22
  %25 = load i8, i8* %24, align 1, !tbaa !100
  %26 = zext i8 %25 to i32
  %27 = icmp slt i32 %20, %26
  br i1 %27, label %luaK_reserveregs.exit, label %28

; <label>:28                                      ; preds = %freeexp.exit
  %29 = icmp sgt i32 %20, 248
  br i1 %29, label %30, label %33

; <label>:30                                      ; preds = %28
  %31 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 3
  %32 = load %struct.LexState*, %struct.LexState** %31, align 8, !tbaa !94
  tail call void @luaX_syntaxerror(%struct.LexState* %32, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.51, i64 0, i64 0)) #1
  %.pre.i.i = load %struct.Proto*, %struct.Proto** %22, align 8, !tbaa !92
  %.pre.pre.i = load i32, i32* %19, align 4, !tbaa !99
  br label %33

; <label>:33                                      ; preds = %30, %28
  %.pre.i = phi i32 [ %.pre.pre.i, %30 ], [ %20, %28 ]
  %34 = phi %struct.Proto* [ %.pre.i.i, %30 ], [ %23, %28 ]
  %35 = trunc i32 %21 to i8
  %36 = getelementptr inbounds %struct.Proto, %struct.Proto* %34, i64 0, i32 22
  store i8 %35, i8* %36, align 1, !tbaa !100
  br label %luaK_reserveregs.exit

luaK_reserveregs.exit:                            ; preds = %freeexp.exit, %33
  %37 = phi i32 [ %20, %freeexp.exit ], [ %.pre.i, %33 ]
  %38 = add nsw i32 %37, 1
  store i32 %38, i32* %19, align 4, !tbaa !99
  tail call fastcc void @exp2reg(%struct.FuncState* %fs, %struct.expdesc* %e, i32 %37)
  ret void
}

; Function Attrs: nounwind uwtable
define hidden i32 @luaK_exp2anyreg(%struct.FuncState* %fs, %struct.expdesc* nocapture %e) #0 {
  tail call void @luaK_dischargevars(%struct.FuncState* %fs, %struct.expdesc* %e)
  %1 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %e, i64 0, i32 0
  %2 = load i32, i32* %1, align 4, !tbaa !101
  %3 = icmp eq i32 %2, 12
  br i1 %3, label %4, label %20

; <label>:4                                       ; preds = %0
  %5 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %e, i64 0, i32 2
  %6 = load i32, i32* %5, align 4, !tbaa !106
  %7 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %e, i64 0, i32 3
  %8 = load i32, i32* %7, align 4, !tbaa !107
  %9 = icmp eq i32 %6, %8
  %10 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %e, i64 0, i32 1
  %11 = bitcast %union.SemInfo* %10 to i32*
  %12 = load i32, i32* %11, align 4, !tbaa !103
  br i1 %9, label %61, label %13

; <label>:13                                      ; preds = %4
  %14 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 13
  %15 = load i8, i8* %14, align 1, !tbaa !91
  %16 = zext i8 %15 to i32
  %17 = icmp slt i32 %12, %16
  br i1 %17, label %20, label %18

; <label>:18                                      ; preds = %13
  tail call fastcc void @exp2reg(%struct.FuncState* %fs, %struct.expdesc* %e, i32 %12)
  %19 = load i32, i32* %11, align 4, !tbaa !103
  br label %61

; <label>:20                                      ; preds = %13, %0
  tail call void @luaK_dischargevars(%struct.FuncState* %fs, %struct.expdesc* %e) #1
  %21 = load i32, i32* %1, align 4, !tbaa !101
  %22 = icmp eq i32 %21, 12
  br i1 %22, label %23, label %freeexp.exit.i

; <label>:23                                      ; preds = %20
  %24 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %e, i64 0, i32 1
  %25 = bitcast %union.SemInfo* %24 to i32*
  %26 = load i32, i32* %25, align 4, !tbaa !103
  %27 = and i32 %26, 256
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %freeexp.exit.i

; <label>:29                                      ; preds = %23
  %30 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 13
  %31 = load i8, i8* %30, align 1, !tbaa !91
  %32 = zext i8 %31 to i32
  %33 = icmp sgt i32 %32, %26
  br i1 %33, label %freeexp.exit.i, label %34

; <label>:34                                      ; preds = %29
  %35 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 9
  %36 = load i32, i32* %35, align 4, !tbaa !99
  %37 = add nsw i32 %36, -1
  store i32 %37, i32* %35, align 4, !tbaa !99
  br label %freeexp.exit.i

freeexp.exit.i:                                   ; preds = %34, %29, %23, %20
  %38 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 9
  %39 = load i32, i32* %38, align 4, !tbaa !99
  %40 = add nsw i32 %39, 1
  %41 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 0
  %42 = load %struct.Proto*, %struct.Proto** %41, align 8, !tbaa !92
  %43 = getelementptr inbounds %struct.Proto, %struct.Proto* %42, i64 0, i32 22
  %44 = load i8, i8* %43, align 1, !tbaa !100
  %45 = zext i8 %44 to i32
  %46 = icmp slt i32 %39, %45
  br i1 %46, label %luaK_exp2nextreg.exit, label %47

; <label>:47                                      ; preds = %freeexp.exit.i
  %48 = icmp sgt i32 %39, 248
  br i1 %48, label %49, label %52

; <label>:49                                      ; preds = %47
  %50 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 3
  %51 = load %struct.LexState*, %struct.LexState** %50, align 8, !tbaa !94
  tail call void @luaX_syntaxerror(%struct.LexState* %51, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.51, i64 0, i64 0)) #1
  %.pre.i.i.i = load %struct.Proto*, %struct.Proto** %41, align 8, !tbaa !92
  %.pre.pre.i.i = load i32, i32* %38, align 4, !tbaa !99
  br label %52

; <label>:52                                      ; preds = %49, %47
  %.pre.i.i = phi i32 [ %.pre.pre.i.i, %49 ], [ %39, %47 ]
  %53 = phi %struct.Proto* [ %.pre.i.i.i, %49 ], [ %42, %47 ]
  %54 = trunc i32 %40 to i8
  %55 = getelementptr inbounds %struct.Proto, %struct.Proto* %53, i64 0, i32 22
  store i8 %54, i8* %55, align 1, !tbaa !100
  br label %luaK_exp2nextreg.exit

luaK_exp2nextreg.exit:                            ; preds = %freeexp.exit.i, %52
  %56 = phi i32 [ %39, %freeexp.exit.i ], [ %.pre.i.i, %52 ]
  %57 = add nsw i32 %56, 1
  store i32 %57, i32* %38, align 4, !tbaa !99
  tail call fastcc void @exp2reg(%struct.FuncState* %fs, %struct.expdesc* %e, i32 %56) #1
  %58 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %e, i64 0, i32 1
  %59 = bitcast %union.SemInfo* %58 to i32*
  %60 = load i32, i32* %59, align 4, !tbaa !103
  br label %61

; <label>:61                                      ; preds = %4, %luaK_exp2nextreg.exit, %18
  %.0 = phi i32 [ %19, %18 ], [ %60, %luaK_exp2nextreg.exit ], [ %12, %4 ]
  ret i32 %.0
}

; Function Attrs: nounwind uwtable
define hidden void @luaK_exp2val(%struct.FuncState* %fs, %struct.expdesc* nocapture %e) #0 {
  %1 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %e, i64 0, i32 2
  %2 = load i32, i32* %1, align 4, !tbaa !106
  %3 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %e, i64 0, i32 3
  %4 = load i32, i32* %3, align 4, !tbaa !107
  %5 = icmp eq i32 %2, %4
  br i1 %5, label %8, label %6

; <label>:6                                       ; preds = %0
  %7 = tail call i32 @luaK_exp2anyreg(%struct.FuncState* %fs, %struct.expdesc* %e)
  br label %9

; <label>:8                                       ; preds = %0
  tail call void @luaK_dischargevars(%struct.FuncState* %fs, %struct.expdesc* %e)
  br label %9

; <label>:9                                       ; preds = %8, %6
  ret void
}

; Function Attrs: nounwind uwtable
define hidden i32 @luaK_exp2RK(%struct.FuncState* %fs, %struct.expdesc* nocapture %e) #0 {
  %o.i.1 = alloca %struct.lua_TValue, align 8
  %o.i = alloca %struct.lua_TValue, align 8
  %k.i = alloca %struct.lua_TValue, align 8
  %v.i = alloca %struct.lua_TValue, align 8
  %1 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %e, i64 0, i32 2
  %2 = load i32, i32* %1, align 4, !tbaa !106
  %3 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %e, i64 0, i32 3
  %4 = load i32, i32* %3, align 4, !tbaa !107
  %5 = icmp eq i32 %2, %4
  br i1 %5, label %8, label %6

; <label>:6                                       ; preds = %0
  %7 = tail call i32 @luaK_exp2anyreg(%struct.FuncState* %fs, %struct.expdesc* %e) #1
  br label %luaK_exp2val.exit

; <label>:8                                       ; preds = %0
  tail call void @luaK_dischargevars(%struct.FuncState* %fs, %struct.expdesc* %e) #1
  br label %luaK_exp2val.exit

luaK_exp2val.exit:                                ; preds = %6, %8
  %9 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %e, i64 0, i32 0
  %10 = load i32, i32* %9, align 4, !tbaa !101
  switch i32 %10, label %53 [
    i32 5, label %11
    i32 2, label %11
    i32 3, label %11
    i32 1, label %11
    i32 4, label %46
  ]

; <label>:11                                      ; preds = %luaK_exp2val.exit, %luaK_exp2val.exit, %luaK_exp2val.exit, %luaK_exp2val.exit
  %12 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 10
  %13 = load i32, i32* %12, align 4, !tbaa !108
  %14 = icmp slt i32 %13, 256
  br i1 %14, label %15, label %53

; <label>:15                                      ; preds = %11
  switch i32 %10, label %34 [
    i32 1, label %16
    i32 5, label %26
  ]

; <label>:16                                      ; preds = %15
  %17 = bitcast %struct.lua_TValue* %k.i to i8*
  call void @llvm.lifetime.start(i64 16, i8* %17) #1
  %18 = bitcast %struct.lua_TValue* %v.i to i8*
  call void @llvm.lifetime.start(i64 16, i8* %18) #1
  %19 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %v.i, i64 0, i32 1
  store i32 0, i32* %19, align 8, !tbaa !10
  %20 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 1
  %21 = bitcast %struct.Table** %20 to i64*
  %22 = load i64, i64* %21, align 8, !tbaa !109
  %23 = bitcast %struct.lua_TValue* %k.i to i64*
  store i64 %22, i64* %23, align 8, !tbaa !25
  %24 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %k.i, i64 0, i32 1
  store i32 5, i32* %24, align 8, !tbaa !10
  %25 = call fastcc i32 @addk(%struct.FuncState* %fs, %struct.lua_TValue* nonnull %k.i, %struct.lua_TValue* nonnull %v.i) #1
  call void @llvm.lifetime.end(i64 16, i8* %18) #1
  call void @llvm.lifetime.end(i64 16, i8* %17) #1
  br label %41

; <label>:26                                      ; preds = %15
  %27 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %e, i64 0, i32 1, i32 0
  %28 = bitcast double* %27 to i64*
  %29 = load i64, i64* %28, align 8, !tbaa !36
  %30 = bitcast %struct.lua_TValue* %o.i to i8*
  call void @llvm.lifetime.start(i64 16, i8* %30) #1
  %31 = bitcast %struct.lua_TValue* %o.i to i64*
  store i64 %29, i64* %31, align 8, !tbaa !36
  %32 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %o.i, i64 0, i32 1
  store i32 3, i32* %32, align 8, !tbaa !10
  %33 = call fastcc i32 @addk(%struct.FuncState* %fs, %struct.lua_TValue* nonnull %o.i, %struct.lua_TValue* nonnull %o.i) #1
  call void @llvm.lifetime.end(i64 16, i8* %30) #1
  br label %41

; <label>:34                                      ; preds = %15
  %35 = icmp eq i32 %10, 2
  %36 = zext i1 %35 to i32
  %37 = bitcast %struct.lua_TValue* %o.i.1 to i8*
  call void @llvm.lifetime.start(i64 16, i8* %37) #1
  %38 = bitcast %struct.lua_TValue* %o.i.1 to i32*
  store i32 %36, i32* %38, align 8, !tbaa !38
  %39 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %o.i.1, i64 0, i32 1
  store i32 1, i32* %39, align 8, !tbaa !10
  %40 = call fastcc i32 @addk(%struct.FuncState* %fs, %struct.lua_TValue* nonnull %o.i.1, %struct.lua_TValue* nonnull %o.i.1) #1
  call void @llvm.lifetime.end(i64 16, i8* %37) #1
  br label %41

; <label>:41                                      ; preds = %26, %34, %16
  %42 = phi i32 [ %25, %16 ], [ %33, %26 ], [ %40, %34 ]
  %43 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %e, i64 0, i32 1
  %44 = bitcast %union.SemInfo* %43 to i32*
  store i32 %42, i32* %44, align 4, !tbaa !103
  store i32 4, i32* %9, align 4, !tbaa !101
  %45 = or i32 %42, 256
  br label %55

; <label>:46                                      ; preds = %luaK_exp2val.exit
  %47 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %e, i64 0, i32 1
  %48 = bitcast %union.SemInfo* %47 to i32*
  %49 = load i32, i32* %48, align 4, !tbaa !103
  %50 = icmp slt i32 %49, 256
  br i1 %50, label %51, label %53

; <label>:51                                      ; preds = %46
  %52 = or i32 %49, 256
  br label %55

; <label>:53                                      ; preds = %luaK_exp2val.exit, %46, %11
  %54 = tail call i32 @luaK_exp2anyreg(%struct.FuncState* %fs, %struct.expdesc* %e)
  br label %55

; <label>:55                                      ; preds = %53, %51, %41
  %.0 = phi i32 [ %54, %53 ], [ %52, %51 ], [ %45, %41 ]
  ret i32 %.0
}

; Function Attrs: nounwind uwtable
define hidden void @luaK_storevar(%struct.FuncState* %fs, %struct.expdesc* nocapture readonly %var, %struct.expdesc* nocapture %ex) #0 {
  %1 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %var, i64 0, i32 0
  %2 = load i32, i32* %1, align 4, !tbaa !101
  switch i32 %2, label %72 [
    i32 6, label %3
    i32 7, label %25
    i32 8, label %39
    i32 9, label %53
  ]

; <label>:3                                       ; preds = %0
  %4 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %ex, i64 0, i32 0
  %5 = load i32, i32* %4, align 4, !tbaa !101
  %6 = icmp eq i32 %5, 12
  br i1 %6, label %7, label %freeexp.exit

; <label>:7                                       ; preds = %3
  %8 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %ex, i64 0, i32 1
  %9 = bitcast %union.SemInfo* %8 to i32*
  %10 = load i32, i32* %9, align 4, !tbaa !103
  %11 = and i32 %10, 256
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %freeexp.exit

; <label>:13                                      ; preds = %7
  %14 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 13
  %15 = load i8, i8* %14, align 1, !tbaa !91
  %16 = zext i8 %15 to i32
  %17 = icmp sgt i32 %16, %10
  br i1 %17, label %freeexp.exit, label %18

; <label>:18                                      ; preds = %13
  %19 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 9
  %20 = load i32, i32* %19, align 4, !tbaa !99
  %21 = add nsw i32 %20, -1
  store i32 %21, i32* %19, align 4, !tbaa !99
  br label %freeexp.exit

freeexp.exit:                                     ; preds = %3, %7, %13, %18
  %22 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %var, i64 0, i32 1
  %23 = bitcast %union.SemInfo* %22 to i32*
  %24 = load i32, i32* %23, align 4, !tbaa !103
  tail call fastcc void @exp2reg(%struct.FuncState* %fs, %struct.expdesc* %ex, i32 %24)
  br label %freeexp.exit3

; <label>:25                                      ; preds = %0
  %26 = tail call i32 @luaK_exp2anyreg(%struct.FuncState* %fs, %struct.expdesc* %ex)
  %27 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %var, i64 0, i32 1
  %28 = bitcast %union.SemInfo* %27 to i32*
  %29 = load i32, i32* %28, align 4, !tbaa !103
  %30 = shl i32 %26, 6
  %31 = shl i32 %29, 23
  %32 = or i32 %30, %31
  %33 = or i32 %32, 8
  %34 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 3
  %35 = load %struct.LexState*, %struct.LexState** %34, align 8, !tbaa !94
  %36 = getelementptr inbounds %struct.LexState, %struct.LexState* %35, i64 0, i32 2
  %37 = load i32, i32* %36, align 4, !tbaa !95
  %38 = tail call fastcc i32 @luaK_code(%struct.FuncState* %fs, i32 %33, i32 %37) #1
  br label %72

; <label>:39                                      ; preds = %0
  %40 = tail call i32 @luaK_exp2anyreg(%struct.FuncState* %fs, %struct.expdesc* %ex)
  %41 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %var, i64 0, i32 1
  %42 = bitcast %union.SemInfo* %41 to i32*
  %43 = load i32, i32* %42, align 4, !tbaa !103
  %44 = shl i32 %40, 6
  %45 = shl i32 %43, 14
  %46 = or i32 %44, %45
  %47 = or i32 %46, 7
  %48 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 3
  %49 = load %struct.LexState*, %struct.LexState** %48, align 8, !tbaa !94
  %50 = getelementptr inbounds %struct.LexState, %struct.LexState* %49, i64 0, i32 2
  %51 = load i32, i32* %50, align 4, !tbaa !95
  %52 = tail call fastcc i32 @luaK_code(%struct.FuncState* %fs, i32 %47, i32 %51) #1
  br label %72

; <label>:53                                      ; preds = %0
  %54 = tail call i32 @luaK_exp2RK(%struct.FuncState* %fs, %struct.expdesc* %ex)
  %55 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %var, i64 0, i32 1
  %56 = bitcast %union.SemInfo* %55 to %struct.anon.4*
  %57 = bitcast %union.SemInfo* %55 to i32*
  %58 = load i32, i32* %57, align 4, !tbaa !103
  %59 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %56, i64 0, i32 1
  %60 = load i32, i32* %59, align 4, !tbaa !105
  %61 = shl i32 %58, 6
  %62 = shl i32 %60, 23
  %63 = shl i32 %54, 14
  %64 = or i32 %63, %61
  %65 = or i32 %64, %62
  %66 = or i32 %65, 9
  %67 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 3
  %68 = load %struct.LexState*, %struct.LexState** %67, align 8, !tbaa !94
  %69 = getelementptr inbounds %struct.LexState, %struct.LexState* %68, i64 0, i32 2
  %70 = load i32, i32* %69, align 4, !tbaa !95
  %71 = tail call fastcc i32 @luaK_code(%struct.FuncState* %fs, i32 %66, i32 %70) #1
  br label %72

; <label>:72                                      ; preds = %0, %53, %39, %25
  %73 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %ex, i64 0, i32 0
  %74 = load i32, i32* %73, align 4, !tbaa !101
  %75 = icmp eq i32 %74, 12
  br i1 %75, label %76, label %freeexp.exit3

; <label>:76                                      ; preds = %72
  %77 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %ex, i64 0, i32 1
  %78 = bitcast %union.SemInfo* %77 to i32*
  %79 = load i32, i32* %78, align 4, !tbaa !103
  %80 = and i32 %79, 256
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %freeexp.exit3

; <label>:82                                      ; preds = %76
  %83 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 13
  %84 = load i8, i8* %83, align 1, !tbaa !91
  %85 = zext i8 %84 to i32
  %86 = icmp sgt i32 %85, %79
  br i1 %86, label %freeexp.exit3, label %87

; <label>:87                                      ; preds = %82
  %88 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 9
  %89 = load i32, i32* %88, align 4, !tbaa !99
  %90 = add nsw i32 %89, -1
  store i32 %90, i32* %88, align 4, !tbaa !99
  br label %freeexp.exit3

freeexp.exit3:                                    ; preds = %87, %82, %76, %72, %freeexp.exit
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @luaK_self(%struct.FuncState* %fs, %struct.expdesc* nocapture %e, %struct.expdesc* nocapture %key) #0 {
  %1 = tail call i32 @luaK_exp2anyreg(%struct.FuncState* %fs, %struct.expdesc* %e)
  %2 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %e, i64 0, i32 0
  %3 = load i32, i32* %2, align 4, !tbaa !101
  %4 = icmp eq i32 %3, 12
  br i1 %4, label %5, label %freeexp.exit

; <label>:5                                       ; preds = %0
  %6 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %e, i64 0, i32 1
  %7 = bitcast %union.SemInfo* %6 to i32*
  %8 = load i32, i32* %7, align 4, !tbaa !103
  %9 = and i32 %8, 256
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %freeexp.exit

; <label>:11                                      ; preds = %5
  %12 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 13
  %13 = load i8, i8* %12, align 1, !tbaa !91
  %14 = zext i8 %13 to i32
  %15 = icmp sgt i32 %14, %8
  br i1 %15, label %freeexp.exit, label %16

; <label>:16                                      ; preds = %11
  %17 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 9
  %18 = load i32, i32* %17, align 4, !tbaa !99
  %19 = add nsw i32 %18, -1
  store i32 %19, i32* %17, align 4, !tbaa !99
  br label %freeexp.exit

freeexp.exit:                                     ; preds = %0, %5, %11, %16
  %20 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 9
  %21 = load i32, i32* %20, align 4, !tbaa !99
  %22 = add nsw i32 %21, 2
  %23 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 0
  %24 = load %struct.Proto*, %struct.Proto** %23, align 8, !tbaa !92
  %25 = getelementptr inbounds %struct.Proto, %struct.Proto* %24, i64 0, i32 22
  %26 = load i8, i8* %25, align 1, !tbaa !100
  %27 = zext i8 %26 to i32
  %28 = icmp sgt i32 %22, %27
  br i1 %28, label %29, label %luaK_reserveregs.exit

; <label>:29                                      ; preds = %freeexp.exit
  %30 = icmp sgt i32 %22, 249
  br i1 %30, label %31, label %34

; <label>:31                                      ; preds = %29
  %32 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 3
  %33 = load %struct.LexState*, %struct.LexState** %32, align 8, !tbaa !94
  tail call void @luaX_syntaxerror(%struct.LexState* %33, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.51, i64 0, i64 0)) #1
  %.pre.i.i = load %struct.Proto*, %struct.Proto** %23, align 8, !tbaa !92
  %.pre.pre.i = load i32, i32* %20, align 4, !tbaa !99
  br label %34

; <label>:34                                      ; preds = %31, %29
  %.pre.i = phi i32 [ %.pre.pre.i, %31 ], [ %21, %29 ]
  %35 = phi %struct.Proto* [ %.pre.i.i, %31 ], [ %24, %29 ]
  %36 = trunc i32 %22 to i8
  %37 = getelementptr inbounds %struct.Proto, %struct.Proto* %35, i64 0, i32 22
  store i8 %36, i8* %37, align 1, !tbaa !100
  br label %luaK_reserveregs.exit

luaK_reserveregs.exit:                            ; preds = %freeexp.exit, %34
  %38 = phi i32 [ %21, %freeexp.exit ], [ %.pre.i, %34 ]
  %39 = add nsw i32 %38, 2
  store i32 %39, i32* %20, align 4, !tbaa !99
  %40 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %e, i64 0, i32 1
  %41 = bitcast %union.SemInfo* %40 to i32*
  %42 = load i32, i32* %41, align 4, !tbaa !103
  %43 = tail call i32 @luaK_exp2RK(%struct.FuncState* %fs, %struct.expdesc* %key)
  %44 = shl i32 %21, 6
  %45 = shl i32 %42, 23
  %46 = shl i32 %43, 14
  %47 = or i32 %44, %45
  %48 = or i32 %47, %46
  %49 = or i32 %48, 11
  %50 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 3
  %51 = load %struct.LexState*, %struct.LexState** %50, align 8, !tbaa !94
  %52 = getelementptr inbounds %struct.LexState, %struct.LexState* %51, i64 0, i32 2
  %53 = load i32, i32* %52, align 4, !tbaa !95
  %54 = tail call fastcc i32 @luaK_code(%struct.FuncState* %fs, i32 %49, i32 %53) #1
  %55 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %key, i64 0, i32 0
  %56 = load i32, i32* %55, align 4, !tbaa !101
  %57 = icmp eq i32 %56, 12
  br i1 %57, label %58, label %freeexp.exit1

; <label>:58                                      ; preds = %luaK_reserveregs.exit
  %59 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %key, i64 0, i32 1
  %60 = bitcast %union.SemInfo* %59 to i32*
  %61 = load i32, i32* %60, align 4, !tbaa !103
  %62 = and i32 %61, 256
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %freeexp.exit1

; <label>:64                                      ; preds = %58
  %65 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 13
  %66 = load i8, i8* %65, align 1, !tbaa !91
  %67 = zext i8 %66 to i32
  %68 = icmp sgt i32 %67, %61
  br i1 %68, label %freeexp.exit1, label %69

; <label>:69                                      ; preds = %64
  %70 = load i32, i32* %20, align 4, !tbaa !99
  %71 = add nsw i32 %70, -1
  store i32 %71, i32* %20, align 4, !tbaa !99
  br label %freeexp.exit1

freeexp.exit1:                                    ; preds = %luaK_reserveregs.exit, %58, %64, %69
  store i32 %21, i32* %41, align 4, !tbaa !103
  store i32 12, i32* %2, align 4, !tbaa !101
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @luaK_goiftrue(%struct.FuncState* %fs, %struct.expdesc* nocapture %e) #0 {
  tail call void @luaK_dischargevars(%struct.FuncState* %fs, %struct.expdesc* %e)
  %1 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %e, i64 0, i32 0
  %2 = load i32, i32* %1, align 4, !tbaa !101
  switch i32 %2, label %59 [
    i32 4, label %luaK_concat.exit
    i32 5, label %luaK_concat.exit
    i32 2, label %luaK_concat.exit
    i32 3, label %3
    i32 10, label %35
  ]

; <label>:3                                       ; preds = %0
  %4 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 8
  %5 = load i32, i32* %4, align 4, !tbaa !98
  store i32 -1, i32* %4, align 4, !tbaa !98
  %6 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 3
  %7 = load %struct.LexState*, %struct.LexState** %6, align 8, !tbaa !94
  %8 = getelementptr inbounds %struct.LexState, %struct.LexState* %7, i64 0, i32 2
  %9 = load i32, i32* %8, align 4, !tbaa !95
  %10 = tail call fastcc i32 @luaK_code(%struct.FuncState* %fs, i32 2147450902, i32 %9) #1
  %11 = icmp eq i32 %5, -1
  br i1 %11, label %luaK_jump.exit, label %12

; <label>:12                                      ; preds = %3
  %13 = icmp eq i32 %10, -1
  br i1 %13, label %luaK_jump.exit.thread16, label %.preheader.i.i

.preheader.i.i:                                   ; preds = %12
  %fs.idx.i.i = getelementptr %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 0
  %fs.idx.val.i.i = load %struct.Proto*, %struct.Proto** %fs.idx.i.i, align 8, !tbaa !92
  %fs.idx.val.idx.i.i = getelementptr %struct.Proto, %struct.Proto* %fs.idx.val.i.i, i64 0, i32 4
  %fs.idx.val.idx.val.i.i = load i32*, i32** %fs.idx.val.idx.i.i, align 8, !tbaa !93
  br label %14

; <label>:14                                      ; preds = %14, %.preheader.i.i
  %list.0.i.i = phi i32 [ %.0.i.i.i, %14 ], [ %10, %.preheader.i.i ]
  %15 = sext i32 %list.0.i.i to i64
  %16 = getelementptr inbounds i32, i32* %fs.idx.val.idx.val.i.i, i64 %15
  %17 = load i32, i32* %16, align 4, !tbaa !38
  %18 = lshr i32 %17, 14
  %19 = add nsw i32 %18, -131071
  %20 = icmp eq i32 %19, -1
  %21 = add nsw i32 %list.0.i.i, 1
  %22 = add nsw i32 %21, %19
  %.0.i.i.i = select i1 %20, i32 -1, i32 %22
  %23 = icmp eq i32 %.0.i.i.i, -1
  br i1 %23, label %24, label %14

; <label>:24                                      ; preds = %14
  %.lcssa47 = phi i32 [ %17, %14 ]
  %.lcssa46 = phi i32* [ %16, %14 ]
  %list.0.i.i.lcssa = phi i32 [ %list.0.i.i, %14 ]
  %.neg.i.i.i = xor i32 %list.0.i.i.lcssa, -1
  %25 = add i32 %5, %.neg.i.i.i
  %ispos.i.i.i = icmp sgt i32 %25, -1
  %neg.i.i.i = sub i32 0, %25
  %26 = select i1 %ispos.i.i.i, i32 %25, i32 %neg.i.i.i
  %27 = icmp sgt i32 %26, 131071
  br i1 %27, label %28, label %fixjump.exit.i.i

; <label>:28                                      ; preds = %24
  %29 = load %struct.LexState*, %struct.LexState** %6, align 8, !tbaa !94
  tail call void @luaX_syntaxerror(%struct.LexState* %29, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1.37, i64 0, i64 0)) #1
  %.pre.i.i = load i32, i32* %.lcssa46, align 4, !tbaa !38
  br label %fixjump.exit.i.i

fixjump.exit.i.i:                                 ; preds = %28, %24
  %30 = phi i32 [ %.lcssa47, %24 ], [ %.pre.i.i, %28 ]
  %31 = and i32 %30, 16383
  %32 = shl i32 %25, 14
  %33 = add i32 %32, 2147467264
  %34 = or i32 %31, %33
  store i32 %34, i32* %.lcssa46, align 4, !tbaa !38
  br label %luaK_jump.exit

; <label>:35                                      ; preds = %0
  %fs.idx = getelementptr %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 0
  %fs.idx.val = load %struct.Proto*, %struct.Proto** %fs.idx, align 8, !tbaa !92
  %fs.idx.val.idx = getelementptr %struct.Proto, %struct.Proto* %fs.idx.val, i64 0, i32 4
  %fs.idx.val.idx.val = load i32*, i32** %fs.idx.val.idx, align 8, !tbaa !93
  %36 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %e, i64 0, i32 1
  %37 = bitcast %union.SemInfo* %36 to i32*
  %38 = load i32, i32* %37, align 4, !tbaa !103
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds i32, i32* %fs.idx.val.idx.val, i64 %39
  %41 = icmp sgt i32 %38, 0
  br i1 %41, label %42, label %50

; <label>:42                                      ; preds = %35
  %43 = getelementptr inbounds i32, i32* %40, i64 -1
  %44 = load i32, i32* %43, align 4, !tbaa !38
  %45 = and i32 %44, 63
  %46 = zext i32 %45 to i64
  %47 = getelementptr inbounds [38 x i8], [38 x i8]* @luaP_opmodes, i64 0, i64 %46
  %48 = load i8, i8* %47, align 1, !tbaa !76
  %49 = icmp slt i8 %48, 0
  br i1 %49, label %invertjump.exit, label %50

; <label>:50                                      ; preds = %42, %35
  %.pre.i = load i32, i32* %40, align 4, !tbaa !38
  br label %invertjump.exit

invertjump.exit:                                  ; preds = %42, %50
  %51 = phi i32 [ %.pre.i, %50 ], [ %44, %42 ]
  %.0.i.i = phi i32* [ %40, %50 ], [ %43, %42 ]
  %52 = and i32 %51, -16321
  %53 = and i32 %51, 16320
  %54 = icmp eq i32 %53, 0
  %55 = zext i1 %54 to i32
  %56 = shl nuw nsw i32 %55, 6
  %57 = or i32 %56, %52
  store i32 %57, i32* %.0.i.i, align 4, !tbaa !38
  %58 = load i32, i32* %37, align 4, !tbaa !103
  br label %luaK_jump.exit

; <label>:59                                      ; preds = %0
  %60 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %e, i64 0, i32 1
  %61 = bitcast %union.SemInfo* %60 to i32*
  switch i32 %2, label %.thread.i.thread [
    i32 11, label %62
    i32 12, label %discharge2anyreg.exit.thread
  ]

; <label>:62                                      ; preds = %59
  %63 = load i32, i32* %61, align 4, !tbaa !103
  %64 = sext i32 %63 to i64
  %65 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 0
  %66 = load %struct.Proto*, %struct.Proto** %65, align 8, !tbaa !92
  %67 = getelementptr inbounds %struct.Proto, %struct.Proto* %66, i64 0, i32 4
  %68 = load i32*, i32** %67, align 8, !tbaa !93
  %69 = getelementptr inbounds i32, i32* %68, i64 %64
  %70 = load i32, i32* %69, align 4, !tbaa !38
  %71 = and i32 %70, 63
  %72 = icmp eq i32 %71, 19
  br i1 %72, label %73, label %.thread.i.thread

; <label>:73                                      ; preds = %62
  %74 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 6
  %75 = load i32, i32* %74, align 4, !tbaa !88
  %76 = add nsw i32 %75, -1
  store i32 %76, i32* %74, align 4, !tbaa !88
  %77 = lshr i32 %70, 23
  %78 = tail call fastcc i32 @condjump(%struct.FuncState* %fs, i32 26, i32 %77, i32 0, i32 1) #1
  br label %luaK_jump.exit

.thread.i.thread:                                 ; preds = %59, %62
  %79 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 9
  %80 = load i32, i32* %79, align 4, !tbaa !99
  %81 = add nsw i32 %80, 1
  %82 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 0
  %83 = load %struct.Proto*, %struct.Proto** %82, align 8, !tbaa !92
  %84 = getelementptr inbounds %struct.Proto, %struct.Proto* %83, i64 0, i32 22
  %85 = load i8, i8* %84, align 1, !tbaa !100
  %86 = zext i8 %85 to i32
  %87 = icmp slt i32 %80, %86
  br i1 %87, label %discharge2anyreg.exit, label %88

; <label>:88                                      ; preds = %.thread.i.thread
  %89 = icmp sgt i32 %80, 248
  br i1 %89, label %90, label %93

; <label>:90                                      ; preds = %88
  %91 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 3
  %92 = load %struct.LexState*, %struct.LexState** %91, align 8, !tbaa !94
  tail call void @luaX_syntaxerror(%struct.LexState* %92, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.51, i64 0, i64 0)) #1
  %.pre.i.i.i = load %struct.Proto*, %struct.Proto** %82, align 8, !tbaa !92
  %.pre.pre.i.i = load i32, i32* %79, align 4, !tbaa !99
  br label %93

; <label>:93                                      ; preds = %90, %88
  %.pre.i.i.15 = phi i32 [ %.pre.pre.i.i, %90 ], [ %80, %88 ]
  %94 = phi %struct.Proto* [ %.pre.i.i.i, %90 ], [ %83, %88 ]
  %95 = trunc i32 %81 to i8
  %96 = getelementptr inbounds %struct.Proto, %struct.Proto* %94, i64 0, i32 22
  store i8 %95, i8* %96, align 1, !tbaa !100
  br label %discharge2anyreg.exit

discharge2anyreg.exit:                            ; preds = %.thread.i.thread, %93
  %97 = phi i32 [ %80, %.thread.i.thread ], [ %.pre.i.i.15, %93 ]
  %98 = add nsw i32 %97, 1
  store i32 %98, i32* %79, align 4, !tbaa !99
  tail call fastcc void @discharge2reg(%struct.FuncState* %fs, %struct.expdesc* %e, i32 %97) #1
  %.pr = load i32, i32* %1, align 4, !tbaa !101
  %99 = icmp eq i32 %.pr, 12
  br i1 %99, label %discharge2anyreg.exit.thread, label %discharge2anyreg.exit.freeexp.exit_crit_edge

discharge2anyreg.exit.freeexp.exit_crit_edge:     ; preds = %discharge2anyreg.exit
  %.pre = load i32, i32* %61, align 4, !tbaa !103
  br label %freeexp.exit

discharge2anyreg.exit.thread:                     ; preds = %59, %discharge2anyreg.exit
  %100 = load i32, i32* %61, align 4, !tbaa !103
  %101 = and i32 %100, 256
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %103, label %freeexp.exit

; <label>:103                                     ; preds = %discharge2anyreg.exit.thread
  %104 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 13
  %105 = load i8, i8* %104, align 1, !tbaa !91
  %106 = zext i8 %105 to i32
  %107 = icmp sgt i32 %106, %100
  br i1 %107, label %freeexp.exit, label %108

; <label>:108                                     ; preds = %103
  %109 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 9
  %110 = load i32, i32* %109, align 4, !tbaa !99
  %111 = add nsw i32 %110, -1
  store i32 %111, i32* %109, align 4, !tbaa !99
  br label %freeexp.exit

freeexp.exit:                                     ; preds = %discharge2anyreg.exit.freeexp.exit_crit_edge, %discharge2anyreg.exit.thread, %103, %108
  %112 = phi i32 [ %.pre, %discharge2anyreg.exit.freeexp.exit_crit_edge ], [ %100, %discharge2anyreg.exit.thread ], [ %100, %103 ], [ %100, %108 ]
  %113 = tail call fastcc i32 @condjump(%struct.FuncState* %fs, i32 27, i32 255, i32 %112, i32 0) #1
  br label %luaK_jump.exit

luaK_jump.exit:                                   ; preds = %freeexp.exit, %73, %fixjump.exit.i.i, %3, %invertjump.exit
  %pc.0 = phi i32 [ %58, %invertjump.exit ], [ %10, %3 ], [ %10, %fixjump.exit.i.i ], [ %113, %freeexp.exit ], [ %78, %73 ]
  %114 = icmp eq i32 %pc.0, -1
  br i1 %114, label %luaK_concat.exit, label %luaK_jump.exit.thread16

luaK_jump.exit.thread16:                          ; preds = %12, %luaK_jump.exit
  %pc.017 = phi i32 [ %pc.0, %luaK_jump.exit ], [ %5, %12 ]
  %115 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %e, i64 0, i32 3
  %116 = load i32, i32* %115, align 4, !tbaa !38
  %117 = icmp eq i32 %116, -1
  br i1 %117, label %118, label %.preheader.i

.preheader.i:                                     ; preds = %luaK_jump.exit.thread16
  %fs.idx.i = getelementptr %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 0
  %fs.idx.val.i = load %struct.Proto*, %struct.Proto** %fs.idx.i, align 8, !tbaa !92
  %fs.idx.val.idx.i = getelementptr %struct.Proto, %struct.Proto* %fs.idx.val.i, i64 0, i32 4
  %fs.idx.val.idx.val.i = load i32*, i32** %fs.idx.val.idx.i, align 8, !tbaa !93
  br label %119

; <label>:118                                     ; preds = %luaK_jump.exit.thread16
  store i32 %pc.017, i32* %115, align 4, !tbaa !38
  br label %luaK_concat.exit

; <label>:119                                     ; preds = %119, %.preheader.i
  %list.0.i = phi i32 [ %.0.i.i.1, %119 ], [ %116, %.preheader.i ]
  %120 = sext i32 %list.0.i to i64
  %121 = getelementptr inbounds i32, i32* %fs.idx.val.idx.val.i, i64 %120
  %122 = load i32, i32* %121, align 4, !tbaa !38
  %123 = lshr i32 %122, 14
  %124 = add nsw i32 %123, -131071
  %125 = icmp eq i32 %124, -1
  %126 = add nsw i32 %list.0.i, 1
  %127 = add nsw i32 %126, %124
  %.0.i.i.1 = select i1 %125, i32 -1, i32 %127
  %128 = icmp eq i32 %.0.i.i.1, -1
  br i1 %128, label %129, label %119

; <label>:129                                     ; preds = %119
  %.lcssa45 = phi i32 [ %122, %119 ]
  %.lcssa44 = phi i32* [ %121, %119 ]
  %list.0.i.lcssa = phi i32 [ %list.0.i, %119 ]
  %.neg.i.i = xor i32 %list.0.i.lcssa, -1
  %130 = add i32 %pc.017, %.neg.i.i
  %ispos.i.i = icmp sgt i32 %130, -1
  %neg.i.i = sub i32 0, %130
  %131 = select i1 %ispos.i.i, i32 %130, i32 %neg.i.i
  %132 = icmp sgt i32 %131, 131071
  br i1 %132, label %133, label %fixjump.exit.i

; <label>:133                                     ; preds = %129
  %134 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 3
  %135 = load %struct.LexState*, %struct.LexState** %134, align 8, !tbaa !94
  tail call void @luaX_syntaxerror(%struct.LexState* %135, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1.37, i64 0, i64 0)) #1
  %.pre.i.2 = load i32, i32* %.lcssa44, align 4, !tbaa !38
  br label %fixjump.exit.i

fixjump.exit.i:                                   ; preds = %133, %129
  %136 = phi i32 [ %.lcssa45, %129 ], [ %.pre.i.2, %133 ]
  %137 = and i32 %136, 16383
  %138 = shl i32 %130, 14
  %139 = add i32 %138, 2147467264
  %140 = or i32 %137, %139
  store i32 %140, i32* %.lcssa44, align 4, !tbaa !38
  br label %luaK_concat.exit

luaK_concat.exit:                                 ; preds = %0, %0, %0, %luaK_jump.exit, %118, %fixjump.exit.i
  %141 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %e, i64 0, i32 2
  %142 = load i32, i32* %141, align 4, !tbaa !106
  %143 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 6
  %144 = load i32, i32* %143, align 4, !tbaa !88
  %145 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 7
  store i32 %144, i32* %145, align 4, !tbaa !90
  %146 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 8
  %147 = icmp eq i32 %142, -1
  br i1 %147, label %luaK_patchtohere.exit, label %148

; <label>:148                                     ; preds = %luaK_concat.exit
  %149 = load i32, i32* %146, align 4, !tbaa !38
  %150 = icmp eq i32 %149, -1
  br i1 %150, label %151, label %.preheader.i.i.7

.preheader.i.i.7:                                 ; preds = %148
  %fs.idx.i.i.3 = getelementptr %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 0
  %fs.idx.val.i.i.4 = load %struct.Proto*, %struct.Proto** %fs.idx.i.i.3, align 8, !tbaa !92
  %fs.idx.val.idx.i.i.5 = getelementptr %struct.Proto, %struct.Proto* %fs.idx.val.i.i.4, i64 0, i32 4
  %fs.idx.val.idx.val.i.i.6 = load i32*, i32** %fs.idx.val.idx.i.i.5, align 8, !tbaa !93
  br label %152

; <label>:151                                     ; preds = %148
  store i32 %142, i32* %146, align 4, !tbaa !38
  br label %luaK_patchtohere.exit

; <label>:152                                     ; preds = %152, %.preheader.i.i.7
  %list.0.i.i.8 = phi i32 [ %.0.i.i.i.9, %152 ], [ %149, %.preheader.i.i.7 ]
  %153 = sext i32 %list.0.i.i.8 to i64
  %154 = getelementptr inbounds i32, i32* %fs.idx.val.idx.val.i.i.6, i64 %153
  %155 = load i32, i32* %154, align 4, !tbaa !38
  %156 = lshr i32 %155, 14
  %157 = add nsw i32 %156, -131071
  %158 = icmp eq i32 %157, -1
  %159 = add nsw i32 %list.0.i.i.8, 1
  %160 = add nsw i32 %159, %157
  %.0.i.i.i.9 = select i1 %158, i32 -1, i32 %160
  %161 = icmp eq i32 %.0.i.i.i.9, -1
  br i1 %161, label %162, label %152

; <label>:162                                     ; preds = %152
  %.lcssa43 = phi i32 [ %155, %152 ]
  %.lcssa = phi i32* [ %154, %152 ]
  %list.0.i.i.8.lcssa = phi i32 [ %list.0.i.i.8, %152 ]
  %.neg.i.i.i.10 = xor i32 %list.0.i.i.8.lcssa, -1
  %163 = add i32 %142, %.neg.i.i.i.10
  %ispos.i.i.i.11 = icmp sgt i32 %163, -1
  %neg.i.i.i.12 = sub i32 0, %163
  %164 = select i1 %ispos.i.i.i.11, i32 %163, i32 %neg.i.i.i.12
  %165 = icmp sgt i32 %164, 131071
  br i1 %165, label %166, label %fixjump.exit.i.i.14

; <label>:166                                     ; preds = %162
  %167 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 3
  %168 = load %struct.LexState*, %struct.LexState** %167, align 8, !tbaa !94
  tail call void @luaX_syntaxerror(%struct.LexState* %168, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1.37, i64 0, i64 0)) #1
  %.pre.i.i.13 = load i32, i32* %.lcssa, align 4, !tbaa !38
  br label %fixjump.exit.i.i.14

fixjump.exit.i.i.14:                              ; preds = %166, %162
  %169 = phi i32 [ %.lcssa43, %162 ], [ %.pre.i.i.13, %166 ]
  %170 = and i32 %169, 16383
  %171 = shl i32 %163, 14
  %172 = add i32 %171, 2147467264
  %173 = or i32 %170, %172
  store i32 %173, i32* %.lcssa, align 4, !tbaa !38
  br label %luaK_patchtohere.exit

luaK_patchtohere.exit:                            ; preds = %luaK_concat.exit, %151, %fixjump.exit.i.i.14
  store i32 -1, i32* %141, align 4, !tbaa !106
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @luaK_indexed(%struct.FuncState* %fs, %struct.expdesc* nocapture %t, %struct.expdesc* nocapture %k) #0 {
  %1 = tail call i32 @luaK_exp2RK(%struct.FuncState* %fs, %struct.expdesc* %k)
  %2 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %t, i64 0, i32 1
  %3 = bitcast %union.SemInfo* %2 to %struct.anon.4*
  %4 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %3, i64 0, i32 1
  store i32 %1, i32* %4, align 4, !tbaa !105
  %5 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %t, i64 0, i32 0
  store i32 9, i32* %5, align 4, !tbaa !101
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @luaK_prefix(%struct.FuncState* %fs, i32 %op, %struct.expdesc* nocapture %e) #0 {
  %e2 = alloca %struct.expdesc, align 8
  %1 = bitcast %struct.expdesc* %e2 to i8*
  call void @llvm.lifetime.start(i64 24, i8* %1) #1
  %2 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %e2, i64 0, i32 3
  store i32 -1, i32* %2, align 4, !tbaa !107
  %3 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %e2, i64 0, i32 2
  store i32 -1, i32* %3, align 8, !tbaa !106
  %4 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %e2, i64 0, i32 0
  store i32 5, i32* %4, align 8, !tbaa !101
  %5 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %e2, i64 0, i32 1, i32 0
  store double 0.000000e+00, double* %5, align 8, !tbaa !36
  switch i32 %op, label %codenot.exit [
    i32 0, label %6
    i32 1, label %19
    i32 2, label %156
  ]

; <label>:6                                       ; preds = %0
  %7 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %e, i64 0, i32 0
  %8 = load i32, i32* %7, align 4, !tbaa !101
  %9 = icmp eq i32 %8, 5
  br i1 %9, label %10, label %.critedge

; <label>:10                                      ; preds = %6
  %11 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %e, i64 0, i32 2
  %12 = load i32, i32* %11, align 4, !tbaa !106
  %13 = icmp eq i32 %12, -1
  br i1 %13, label %isnumeral.exit, label %.critedge

isnumeral.exit:                                   ; preds = %10
  %14 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %e, i64 0, i32 3
  %15 = load i32, i32* %14, align 4, !tbaa !107
  %16 = icmp eq i32 %15, -1
  br i1 %16, label %18, label %.critedge

.critedge:                                        ; preds = %6, %10, %isnumeral.exit
  %17 = tail call i32 @luaK_exp2anyreg(%struct.FuncState* %fs, %struct.expdesc* %e)
  br label %18

; <label>:18                                      ; preds = %isnumeral.exit, %.critedge
  call fastcc void @codearith(%struct.FuncState* %fs, i32 18, %struct.expdesc* %e, %struct.expdesc* nonnull %e2)
  br label %codenot.exit

; <label>:19                                      ; preds = %0
  tail call void @luaK_dischargevars(%struct.FuncState* %fs, %struct.expdesc* %e) #1
  %20 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %e, i64 0, i32 0
  %21 = load i32, i32* %20, align 4, !tbaa !101
  switch i32 %21, label %90 [
    i32 1, label %22
    i32 3, label %22
    i32 4, label %23
    i32 5, label %23
    i32 2, label %23
    i32 10, label %24
    i32 12, label %discharge2anyreg.exit.thread.i
    i32 11, label %47
  ]

; <label>:22                                      ; preds = %19, %19
  store i32 2, i32* %20, align 4, !tbaa !101
  br label %90

; <label>:23                                      ; preds = %19, %19, %19
  store i32 3, i32* %20, align 4, !tbaa !101
  br label %90

; <label>:24                                      ; preds = %19
  %fs.idx.i = getelementptr %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 0
  %fs.idx.val.i = load %struct.Proto*, %struct.Proto** %fs.idx.i, align 8, !tbaa !92
  %fs.idx.val.idx.i = getelementptr %struct.Proto, %struct.Proto* %fs.idx.val.i, i64 0, i32 4
  %fs.idx.val.idx.val.i = load i32*, i32** %fs.idx.val.idx.i, align 8, !tbaa !93
  %25 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %e, i64 0, i32 1
  %26 = bitcast %union.SemInfo* %25 to i32*
  %27 = load i32, i32* %26, align 4, !tbaa !103
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i32, i32* %fs.idx.val.idx.val.i, i64 %28
  %30 = icmp sgt i32 %27, 0
  br i1 %30, label %31, label %39

; <label>:31                                      ; preds = %24
  %32 = getelementptr inbounds i32, i32* %29, i64 -1
  %33 = load i32, i32* %32, align 4, !tbaa !38
  %34 = and i32 %33, 63
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds [38 x i8], [38 x i8]* @luaP_opmodes, i64 0, i64 %35
  %37 = load i8, i8* %36, align 1, !tbaa !76
  %38 = icmp slt i8 %37, 0
  br i1 %38, label %invertjump.exit.i, label %39

; <label>:39                                      ; preds = %31, %24
  %.pre.i.i = load i32, i32* %29, align 4, !tbaa !38
  br label %invertjump.exit.i

invertjump.exit.i:                                ; preds = %39, %31
  %40 = phi i32 [ %.pre.i.i, %39 ], [ %33, %31 ]
  %.0.i.i.i = phi i32* [ %29, %39 ], [ %32, %31 ]
  %41 = and i32 %40, -16321
  %42 = and i32 %40, 16320
  %43 = icmp eq i32 %42, 0
  %44 = zext i1 %43 to i32
  %45 = shl nuw nsw i32 %44, 6
  %46 = or i32 %45, %41
  store i32 %46, i32* %.0.i.i.i, align 4, !tbaa !38
  br label %90

; <label>:47                                      ; preds = %19
  %48 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 9
  %49 = load i32, i32* %48, align 4, !tbaa !99
  %50 = add nsw i32 %49, 1
  %51 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 0
  %52 = load %struct.Proto*, %struct.Proto** %51, align 8, !tbaa !92
  %53 = getelementptr inbounds %struct.Proto, %struct.Proto* %52, i64 0, i32 22
  %54 = load i8, i8* %53, align 1, !tbaa !100
  %55 = zext i8 %54 to i32
  %56 = icmp slt i32 %49, %55
  br i1 %56, label %discharge2anyreg.exit.i, label %57

; <label>:57                                      ; preds = %47
  %58 = icmp sgt i32 %49, 248
  br i1 %58, label %59, label %62

; <label>:59                                      ; preds = %57
  %60 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 3
  %61 = load %struct.LexState*, %struct.LexState** %60, align 8, !tbaa !94
  tail call void @luaX_syntaxerror(%struct.LexState* %61, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.51, i64 0, i64 0)) #1
  %.pre.i.i.i.i = load %struct.Proto*, %struct.Proto** %51, align 8, !tbaa !92
  %.pre.pre.i.i.i = load i32, i32* %48, align 4, !tbaa !99
  br label %62

; <label>:62                                      ; preds = %59, %57
  %.pre.i.i.13.i = phi i32 [ %.pre.pre.i.i.i, %59 ], [ %49, %57 ]
  %63 = phi %struct.Proto* [ %.pre.i.i.i.i, %59 ], [ %52, %57 ]
  %64 = trunc i32 %50 to i8
  %65 = getelementptr inbounds %struct.Proto, %struct.Proto* %63, i64 0, i32 22
  store i8 %64, i8* %65, align 1, !tbaa !100
  br label %discharge2anyreg.exit.i

discharge2anyreg.exit.i:                          ; preds = %62, %47
  %66 = phi i32 [ %49, %47 ], [ %.pre.i.i.13.i, %62 ]
  %67 = add nsw i32 %66, 1
  store i32 %67, i32* %48, align 4, !tbaa !99
  tail call fastcc void @discharge2reg(%struct.FuncState* %fs, %struct.expdesc* %e, i32 %66) #1
  %.pre.i = load i32, i32* %20, align 4, !tbaa !101
  %phitmp.i = icmp eq i32 %.pre.i, 12
  br i1 %phitmp.i, label %discharge2anyreg.exit.thread.i, label %discharge2anyreg.exit.freeexp.exit_crit_edge.i

discharge2anyreg.exit.freeexp.exit_crit_edge.i:   ; preds = %discharge2anyreg.exit.i
  %.phi.trans.insert.i = getelementptr inbounds %struct.expdesc, %struct.expdesc* %e, i64 0, i32 1
  %.phi.trans.insert14.i = bitcast %union.SemInfo* %.phi.trans.insert.i to i32*
  %.pre15.i = load i32, i32* %.phi.trans.insert14.i, align 4, !tbaa !103
  br label %freeexp.exit.i

discharge2anyreg.exit.thread.i:                   ; preds = %discharge2anyreg.exit.i, %19
  %68 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %e, i64 0, i32 1
  %69 = bitcast %union.SemInfo* %68 to i32*
  %70 = load i32, i32* %69, align 4, !tbaa !103
  %71 = and i32 %70, 256
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %freeexp.exit.i

; <label>:73                                      ; preds = %discharge2anyreg.exit.thread.i
  %74 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 13
  %75 = load i8, i8* %74, align 1, !tbaa !91
  %76 = zext i8 %75 to i32
  %77 = icmp sgt i32 %76, %70
  br i1 %77, label %freeexp.exit.i, label %78

; <label>:78                                      ; preds = %73
  %79 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 9
  %80 = load i32, i32* %79, align 4, !tbaa !99
  %81 = add nsw i32 %80, -1
  store i32 %81, i32* %79, align 4, !tbaa !99
  br label %freeexp.exit.i

freeexp.exit.i:                                   ; preds = %78, %73, %discharge2anyreg.exit.thread.i, %discharge2anyreg.exit.freeexp.exit_crit_edge.i
  %.pre-phi16.i = phi i32* [ %.phi.trans.insert14.i, %discharge2anyreg.exit.freeexp.exit_crit_edge.i ], [ %69, %discharge2anyreg.exit.thread.i ], [ %69, %73 ], [ %69, %78 ]
  %82 = phi i32 [ %.pre15.i, %discharge2anyreg.exit.freeexp.exit_crit_edge.i ], [ %70, %discharge2anyreg.exit.thread.i ], [ %70, %73 ], [ %70, %78 ]
  %83 = shl i32 %82, 23
  %84 = or i32 %83, 19
  %85 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 3
  %86 = load %struct.LexState*, %struct.LexState** %85, align 8, !tbaa !94
  %87 = getelementptr inbounds %struct.LexState, %struct.LexState* %86, i64 0, i32 2
  %88 = load i32, i32* %87, align 4, !tbaa !95
  %89 = tail call fastcc i32 @luaK_code(%struct.FuncState* %fs, i32 %84, i32 %88) #1
  store i32 %89, i32* %.pre-phi16.i, align 4, !tbaa !103
  store i32 11, i32* %20, align 4, !tbaa !101
  br label %90

; <label>:90                                      ; preds = %freeexp.exit.i, %invertjump.exit.i, %23, %22, %19
  %91 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %e, i64 0, i32 3
  %92 = load i32, i32* %91, align 4, !tbaa !107
  %93 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %e, i64 0, i32 2
  %94 = load i32, i32* %93, align 4, !tbaa !38
  store i32 %94, i32* %91, align 4, !tbaa !107
  store i32 %92, i32* %93, align 4, !tbaa !106
  %95 = icmp eq i32 %94, -1
  br i1 %95, label %removevalues.exit12.i, label %.lr.ph.i.5.i

.lr.ph.i.5.i:                                     ; preds = %90
  %fs.idx1.i.1.i = getelementptr %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 0
  %fs.idx1.val.pre.i.2.i = load %struct.Proto*, %struct.Proto** %fs.idx1.i.1.i, align 8, !tbaa !92
  %fs.idx1.val.idx.phi.trans.insert.i.3.i = getelementptr %struct.Proto, %struct.Proto* %fs.idx1.val.pre.i.2.i, i64 0, i32 4
  %fs.idx1.val.idx.val.pre.i.4.i = load i32*, i32** %fs.idx1.val.idx.phi.trans.insert.i.3.i, align 8, !tbaa !93
  br label %96

; <label>:96                                      ; preds = %patchtestreg.exit.i.11.i, %.lr.ph.i.5.i
  %.03.i.6.i = phi i32 [ %94, %.lr.ph.i.5.i ], [ %..i.10.i, %patchtestreg.exit.i.11.i ]
  %97 = sext i32 %.03.i.6.i to i64
  %98 = getelementptr inbounds i32, i32* %fs.idx1.val.idx.val.pre.i.4.i, i64 %97
  %99 = icmp sgt i32 %.03.i.6.i, 0
  br i1 %99, label %100, label %108

; <label>:100                                     ; preds = %96
  %101 = getelementptr inbounds i32, i32* %98, i64 -1
  %102 = load i32, i32* %101, align 4, !tbaa !38
  %103 = and i32 %102, 63
  %104 = zext i32 %103 to i64
  %105 = getelementptr inbounds [38 x i8], [38 x i8]* @luaP_opmodes, i64 0, i64 %104
  %106 = load i8, i8* %105, align 1, !tbaa !76
  %107 = icmp slt i8 %106, 0
  br i1 %107, label %getjumpcontrol.exit.i.i.9.i, label %108

; <label>:108                                     ; preds = %100, %96
  %.pre.i.i.7.i = load i32, i32* %98, align 4, !tbaa !38
  br label %getjumpcontrol.exit.i.i.9.i

getjumpcontrol.exit.i.i.9.i:                      ; preds = %108, %100
  %109 = phi i32 [ %.pre.i.i.7.i, %108 ], [ %102, %100 ]
  %.0.i.i.i.8.i = phi i32* [ %98, %108 ], [ %101, %100 ]
  %110 = and i32 %109, 63
  %111 = icmp eq i32 %110, 27
  br i1 %111, label %112, label %patchtestreg.exit.i.11.i

; <label>:112                                     ; preds = %getjumpcontrol.exit.i.i.9.i
  %113 = lshr i32 %109, 23
  %114 = shl nuw nsw i32 %113, 6
  %115 = and i32 %109, 8372224
  %116 = or i32 %115, %114
  %117 = or i32 %116, 26
  store i32 %117, i32* %.0.i.i.i.8.i, align 4, !tbaa !38
  br label %patchtestreg.exit.i.11.i

patchtestreg.exit.i.11.i:                         ; preds = %112, %getjumpcontrol.exit.i.i.9.i
  %118 = load i32, i32* %98, align 4, !tbaa !38
  %119 = lshr i32 %118, 14
  %120 = add nsw i32 %119, -131071
  %121 = icmp eq i32 %120, -1
  %122 = add nsw i32 %.03.i.6.i, 1
  %123 = add nsw i32 %122, %120
  %..i.10.i = select i1 %121, i32 -1, i32 %123
  %124 = icmp eq i32 %..i.10.i, -1
  br i1 %124, label %removevalues.exit12thread-pre-split.i, label %96

removevalues.exit12thread-pre-split.i:            ; preds = %patchtestreg.exit.i.11.i
  %.pr.i = load i32, i32* %93, align 4, !tbaa !106
  br label %removevalues.exit12.i

removevalues.exit12.i:                            ; preds = %removevalues.exit12thread-pre-split.i, %90
  %125 = phi i32 [ %.pr.i, %removevalues.exit12thread-pre-split.i ], [ %92, %90 ]
  %126 = icmp eq i32 %125, -1
  br i1 %126, label %codenot.exit, label %.lr.ph.i.i

.lr.ph.i.i:                                       ; preds = %removevalues.exit12.i
  %fs.idx1.i.i = getelementptr %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 0
  %fs.idx1.val.pre.i.i = load %struct.Proto*, %struct.Proto** %fs.idx1.i.i, align 8, !tbaa !92
  %fs.idx1.val.idx.phi.trans.insert.i.i = getelementptr %struct.Proto, %struct.Proto* %fs.idx1.val.pre.i.i, i64 0, i32 4
  %fs.idx1.val.idx.val.pre.i.i = load i32*, i32** %fs.idx1.val.idx.phi.trans.insert.i.i, align 8, !tbaa !93
  br label %127

; <label>:127                                     ; preds = %patchtestreg.exit.i.i, %.lr.ph.i.i
  %.03.i.i = phi i32 [ %125, %.lr.ph.i.i ], [ %..i.i, %patchtestreg.exit.i.i ]
  %128 = sext i32 %.03.i.i to i64
  %129 = getelementptr inbounds i32, i32* %fs.idx1.val.idx.val.pre.i.i, i64 %128
  %130 = icmp sgt i32 %.03.i.i, 0
  br i1 %130, label %131, label %139

; <label>:131                                     ; preds = %127
  %132 = getelementptr inbounds i32, i32* %129, i64 -1
  %133 = load i32, i32* %132, align 4, !tbaa !38
  %134 = and i32 %133, 63
  %135 = zext i32 %134 to i64
  %136 = getelementptr inbounds [38 x i8], [38 x i8]* @luaP_opmodes, i64 0, i64 %135
  %137 = load i8, i8* %136, align 1, !tbaa !76
  %138 = icmp slt i8 %137, 0
  br i1 %138, label %getjumpcontrol.exit.i.i.i, label %139

; <label>:139                                     ; preds = %131, %127
  %.pre.i.i.i = load i32, i32* %129, align 4, !tbaa !38
  br label %getjumpcontrol.exit.i.i.i

getjumpcontrol.exit.i.i.i:                        ; preds = %139, %131
  %140 = phi i32 [ %.pre.i.i.i, %139 ], [ %133, %131 ]
  %.0.i.i.i.i = phi i32* [ %129, %139 ], [ %132, %131 ]
  %141 = and i32 %140, 63
  %142 = icmp eq i32 %141, 27
  br i1 %142, label %143, label %patchtestreg.exit.i.i

; <label>:143                                     ; preds = %getjumpcontrol.exit.i.i.i
  %144 = lshr i32 %140, 23
  %145 = shl nuw nsw i32 %144, 6
  %146 = and i32 %140, 8372224
  %147 = or i32 %146, %145
  %148 = or i32 %147, 26
  store i32 %148, i32* %.0.i.i.i.i, align 4, !tbaa !38
  br label %patchtestreg.exit.i.i

patchtestreg.exit.i.i:                            ; preds = %143, %getjumpcontrol.exit.i.i.i
  %149 = load i32, i32* %129, align 4, !tbaa !38
  %150 = lshr i32 %149, 14
  %151 = add nsw i32 %150, -131071
  %152 = icmp eq i32 %151, -1
  %153 = add nsw i32 %.03.i.i, 1
  %154 = add nsw i32 %153, %151
  %..i.i = select i1 %152, i32 -1, i32 %154
  %155 = icmp eq i32 %..i.i, -1
  br i1 %155, label %codenot.exit.loopexit, label %127

; <label>:156                                     ; preds = %0
  %157 = tail call i32 @luaK_exp2anyreg(%struct.FuncState* %fs, %struct.expdesc* %e)
  call fastcc void @codearith(%struct.FuncState* %fs, i32 20, %struct.expdesc* %e, %struct.expdesc* nonnull %e2)
  br label %codenot.exit

codenot.exit.loopexit:                            ; preds = %patchtestreg.exit.i.i
  br label %codenot.exit

codenot.exit:                                     ; preds = %codenot.exit.loopexit, %removevalues.exit12.i, %0, %156, %18
  call void @llvm.lifetime.end(i64 24, i8* %1) #1
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @luaK_infix(%struct.FuncState* %fs, i32 %op, %struct.expdesc* nocapture %v) #0 {
  switch i32 %op, label %206 [
    i32 13, label %1
    i32 14, label %2
    i32 6, label %155
    i32 0, label %194
    i32 1, label %194
    i32 2, label %194
    i32 3, label %194
    i32 4, label %194
    i32 5, label %194
  ]

; <label>:1                                       ; preds = %0
  tail call void @luaK_goiftrue(%struct.FuncState* %fs, %struct.expdesc* %v)
  br label %208

; <label>:2                                       ; preds = %0
  tail call void @luaK_dischargevars(%struct.FuncState* %fs, %struct.expdesc* %v) #1
  %3 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %v, i64 0, i32 0
  %4 = load i32, i32* %3, align 4, !tbaa !101
  switch i32 %4, label %41 [
    i32 1, label %luaK_concat.exit.i
    i32 3, label %luaK_concat.exit.i
    i32 2, label %5
    i32 10, label %37
  ]

; <label>:5                                       ; preds = %2
  %6 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 8
  %7 = load i32, i32* %6, align 4, !tbaa !98
  store i32 -1, i32* %6, align 4, !tbaa !98
  %8 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 3
  %9 = load %struct.LexState*, %struct.LexState** %8, align 8, !tbaa !94
  %10 = getelementptr inbounds %struct.LexState, %struct.LexState* %9, i64 0, i32 2
  %11 = load i32, i32* %10, align 4, !tbaa !95
  %12 = tail call fastcc i32 @luaK_code(%struct.FuncState* %fs, i32 2147450902, i32 %11) #1
  %13 = icmp eq i32 %7, -1
  br i1 %13, label %luaK_jump.exit.i, label %14

; <label>:14                                      ; preds = %5
  %15 = icmp eq i32 %12, -1
  br i1 %15, label %luaK_jump.exit.thread14.i, label %.preheader.i.i.i

.preheader.i.i.i:                                 ; preds = %14
  %fs.idx.i.i.i = getelementptr %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 0
  %fs.idx.val.i.i.i = load %struct.Proto*, %struct.Proto** %fs.idx.i.i.i, align 8, !tbaa !92
  %fs.idx.val.idx.i.i.i = getelementptr %struct.Proto, %struct.Proto* %fs.idx.val.i.i.i, i64 0, i32 4
  %fs.idx.val.idx.val.i.i.i = load i32*, i32** %fs.idx.val.idx.i.i.i, align 8, !tbaa !93
  br label %16

; <label>:16                                      ; preds = %16, %.preheader.i.i.i
  %list.0.i.i.i = phi i32 [ %.0.i.i.i.i, %16 ], [ %12, %.preheader.i.i.i ]
  %17 = sext i32 %list.0.i.i.i to i64
  %18 = getelementptr inbounds i32, i32* %fs.idx.val.idx.val.i.i.i, i64 %17
  %19 = load i32, i32* %18, align 4, !tbaa !38
  %20 = lshr i32 %19, 14
  %21 = add nsw i32 %20, -131071
  %22 = icmp eq i32 %21, -1
  %23 = add nsw i32 %list.0.i.i.i, 1
  %24 = add nsw i32 %23, %21
  %.0.i.i.i.i = select i1 %22, i32 -1, i32 %24
  %25 = icmp eq i32 %.0.i.i.i.i, -1
  br i1 %25, label %26, label %16

; <label>:26                                      ; preds = %16
  %.lcssa34 = phi i32 [ %19, %16 ]
  %.lcssa33 = phi i32* [ %18, %16 ]
  %list.0.i.i.i.lcssa = phi i32 [ %list.0.i.i.i, %16 ]
  %.neg.i.i.i.i = xor i32 %list.0.i.i.i.lcssa, -1
  %27 = add i32 %7, %.neg.i.i.i.i
  %ispos.i.i.i.i = icmp sgt i32 %27, -1
  %neg.i.i.i.i = sub i32 0, %27
  %28 = select i1 %ispos.i.i.i.i, i32 %27, i32 %neg.i.i.i.i
  %29 = icmp sgt i32 %28, 131071
  br i1 %29, label %30, label %fixjump.exit.i.i.i

; <label>:30                                      ; preds = %26
  %31 = load %struct.LexState*, %struct.LexState** %8, align 8, !tbaa !94
  tail call void @luaX_syntaxerror(%struct.LexState* %31, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1.37, i64 0, i64 0)) #1
  %.pre.i.i.i = load i32, i32* %.lcssa33, align 4, !tbaa !38
  br label %fixjump.exit.i.i.i

fixjump.exit.i.i.i:                               ; preds = %30, %26
  %32 = phi i32 [ %.lcssa34, %26 ], [ %.pre.i.i.i, %30 ]
  %33 = and i32 %32, 16383
  %34 = shl i32 %27, 14
  %35 = add i32 %34, 2147467264
  %36 = or i32 %33, %35
  store i32 %36, i32* %.lcssa33, align 4, !tbaa !38
  br label %luaK_jump.exit.i

; <label>:37                                      ; preds = %2
  %38 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %v, i64 0, i32 1
  %39 = bitcast %union.SemInfo* %38 to i32*
  %40 = load i32, i32* %39, align 4, !tbaa !103
  br label %luaK_jump.exit.i

; <label>:41                                      ; preds = %2
  %42 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %v, i64 0, i32 1
  %43 = bitcast %union.SemInfo* %42 to i32*
  switch i32 %4, label %..thread.i.thread.i_crit_edge [
    i32 11, label %44
    i32 12, label %discharge2anyreg.exit.thread.i
  ]

..thread.i.thread.i_crit_edge:                    ; preds = %41
  %.phi.trans.insert = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 0
  %.pre = load %struct.Proto*, %struct.Proto** %.phi.trans.insert, align 8, !tbaa !92
  br label %.thread.i.thread.i

; <label>:44                                      ; preds = %41
  %45 = load i32, i32* %43, align 4, !tbaa !103
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 0
  %48 = load %struct.Proto*, %struct.Proto** %47, align 8, !tbaa !92
  %49 = getelementptr inbounds %struct.Proto, %struct.Proto* %48, i64 0, i32 4
  %50 = load i32*, i32** %49, align 8, !tbaa !93
  %51 = getelementptr inbounds i32, i32* %50, i64 %46
  %52 = load i32, i32* %51, align 4, !tbaa !38
  %53 = and i32 %52, 63
  %54 = icmp eq i32 %53, 19
  br i1 %54, label %55, label %.thread.i.thread.i

; <label>:55                                      ; preds = %44
  %56 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 6
  %57 = load i32, i32* %56, align 4, !tbaa !88
  %58 = add nsw i32 %57, -1
  store i32 %58, i32* %56, align 4, !tbaa !88
  %59 = lshr i32 %52, 23
  %60 = tail call fastcc i32 @condjump(%struct.FuncState* %fs, i32 26, i32 %59, i32 0, i32 0) #1
  br label %luaK_jump.exit.i

.thread.i.thread.i:                               ; preds = %..thread.i.thread.i_crit_edge, %44
  %.pre-phi = phi %struct.Proto** [ %.phi.trans.insert, %..thread.i.thread.i_crit_edge ], [ %47, %44 ]
  %61 = phi %struct.Proto* [ %.pre, %..thread.i.thread.i_crit_edge ], [ %48, %44 ]
  %62 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 9
  %63 = load i32, i32* %62, align 4, !tbaa !99
  %64 = add nsw i32 %63, 1
  %65 = getelementptr inbounds %struct.Proto, %struct.Proto* %61, i64 0, i32 22
  %66 = load i8, i8* %65, align 1, !tbaa !100
  %67 = zext i8 %66 to i32
  %68 = icmp slt i32 %63, %67
  br i1 %68, label %discharge2anyreg.exit.i, label %69

; <label>:69                                      ; preds = %.thread.i.thread.i
  %70 = icmp sgt i32 %63, 248
  br i1 %70, label %71, label %74

; <label>:71                                      ; preds = %69
  %72 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 3
  %73 = load %struct.LexState*, %struct.LexState** %72, align 8, !tbaa !94
  tail call void @luaX_syntaxerror(%struct.LexState* %73, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.51, i64 0, i64 0)) #1
  %.pre.i.i.i.i = load %struct.Proto*, %struct.Proto** %.pre-phi, align 8, !tbaa !92
  %.pre.pre.i.i.i = load i32, i32* %62, align 4, !tbaa !99
  br label %74

; <label>:74                                      ; preds = %71, %69
  %.pre.i.i.13.i = phi i32 [ %.pre.pre.i.i.i, %71 ], [ %63, %69 ]
  %75 = phi %struct.Proto* [ %.pre.i.i.i.i, %71 ], [ %61, %69 ]
  %76 = trunc i32 %64 to i8
  %77 = getelementptr inbounds %struct.Proto, %struct.Proto* %75, i64 0, i32 22
  store i8 %76, i8* %77, align 1, !tbaa !100
  br label %discharge2anyreg.exit.i

discharge2anyreg.exit.i:                          ; preds = %74, %.thread.i.thread.i
  %78 = phi i32 [ %63, %.thread.i.thread.i ], [ %.pre.i.i.13.i, %74 ]
  %79 = add nsw i32 %78, 1
  store i32 %79, i32* %62, align 4, !tbaa !99
  tail call fastcc void @discharge2reg(%struct.FuncState* %fs, %struct.expdesc* %v, i32 %78) #1
  %.pr.i = load i32, i32* %3, align 4, !tbaa !101
  %80 = icmp eq i32 %.pr.i, 12
  br i1 %80, label %discharge2anyreg.exit.thread.i, label %discharge2anyreg.exit.freeexp.exit_crit_edge.i

discharge2anyreg.exit.freeexp.exit_crit_edge.i:   ; preds = %discharge2anyreg.exit.i
  %.pre.i = load i32, i32* %43, align 4, !tbaa !103
  br label %freeexp.exit.i

discharge2anyreg.exit.thread.i:                   ; preds = %discharge2anyreg.exit.i, %41
  %81 = load i32, i32* %43, align 4, !tbaa !103
  %82 = and i32 %81, 256
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %freeexp.exit.i

; <label>:84                                      ; preds = %discharge2anyreg.exit.thread.i
  %85 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 13
  %86 = load i8, i8* %85, align 1, !tbaa !91
  %87 = zext i8 %86 to i32
  %88 = icmp sgt i32 %87, %81
  br i1 %88, label %freeexp.exit.i, label %89

; <label>:89                                      ; preds = %84
  %90 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 9
  %91 = load i32, i32* %90, align 4, !tbaa !99
  %92 = add nsw i32 %91, -1
  store i32 %92, i32* %90, align 4, !tbaa !99
  br label %freeexp.exit.i

freeexp.exit.i:                                   ; preds = %89, %84, %discharge2anyreg.exit.thread.i, %discharge2anyreg.exit.freeexp.exit_crit_edge.i
  %93 = phi i32 [ %.pre.i, %discharge2anyreg.exit.freeexp.exit_crit_edge.i ], [ %81, %discharge2anyreg.exit.thread.i ], [ %81, %84 ], [ %81, %89 ]
  %94 = tail call fastcc i32 @condjump(%struct.FuncState* %fs, i32 27, i32 255, i32 %93, i32 1) #1
  br label %luaK_jump.exit.i

luaK_jump.exit.i:                                 ; preds = %freeexp.exit.i, %55, %37, %fixjump.exit.i.i.i, %5
  %pc.0.i = phi i32 [ %40, %37 ], [ %12, %5 ], [ %12, %fixjump.exit.i.i.i ], [ %94, %freeexp.exit.i ], [ %60, %55 ]
  %95 = icmp eq i32 %pc.0.i, -1
  br i1 %95, label %luaK_concat.exit.i, label %luaK_jump.exit.thread14.i

luaK_jump.exit.thread14.i:                        ; preds = %luaK_jump.exit.i, %14
  %pc.015.i = phi i32 [ %pc.0.i, %luaK_jump.exit.i ], [ %7, %14 ]
  %96 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %v, i64 0, i32 2
  %97 = load i32, i32* %96, align 4, !tbaa !38
  %98 = icmp eq i32 %97, -1
  br i1 %98, label %99, label %.preheader.i.i

.preheader.i.i:                                   ; preds = %luaK_jump.exit.thread14.i
  %fs.idx.i.i = getelementptr %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 0
  %fs.idx.val.i.i = load %struct.Proto*, %struct.Proto** %fs.idx.i.i, align 8, !tbaa !92
  %fs.idx.val.idx.i.i = getelementptr %struct.Proto, %struct.Proto* %fs.idx.val.i.i, i64 0, i32 4
  %fs.idx.val.idx.val.i.i = load i32*, i32** %fs.idx.val.idx.i.i, align 8, !tbaa !93
  br label %100

; <label>:99                                      ; preds = %luaK_jump.exit.thread14.i
  store i32 %pc.015.i, i32* %96, align 4, !tbaa !38
  br label %luaK_concat.exit.i

; <label>:100                                     ; preds = %100, %.preheader.i.i
  %list.0.i.i = phi i32 [ %.0.i.i.i, %100 ], [ %97, %.preheader.i.i ]
  %101 = sext i32 %list.0.i.i to i64
  %102 = getelementptr inbounds i32, i32* %fs.idx.val.idx.val.i.i, i64 %101
  %103 = load i32, i32* %102, align 4, !tbaa !38
  %104 = lshr i32 %103, 14
  %105 = add nsw i32 %104, -131071
  %106 = icmp eq i32 %105, -1
  %107 = add nsw i32 %list.0.i.i, 1
  %108 = add nsw i32 %107, %105
  %.0.i.i.i = select i1 %106, i32 -1, i32 %108
  %109 = icmp eq i32 %.0.i.i.i, -1
  br i1 %109, label %110, label %100

; <label>:110                                     ; preds = %100
  %.lcssa32 = phi i32 [ %103, %100 ]
  %.lcssa31 = phi i32* [ %102, %100 ]
  %list.0.i.i.lcssa = phi i32 [ %list.0.i.i, %100 ]
  %.neg.i.i.i = xor i32 %list.0.i.i.lcssa, -1
  %111 = add i32 %pc.015.i, %.neg.i.i.i
  %ispos.i.i.i = icmp sgt i32 %111, -1
  %neg.i.i.i = sub i32 0, %111
  %112 = select i1 %ispos.i.i.i, i32 %111, i32 %neg.i.i.i
  %113 = icmp sgt i32 %112, 131071
  br i1 %113, label %114, label %fixjump.exit.i.i

; <label>:114                                     ; preds = %110
  %115 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 3
  %116 = load %struct.LexState*, %struct.LexState** %115, align 8, !tbaa !94
  tail call void @luaX_syntaxerror(%struct.LexState* %116, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1.37, i64 0, i64 0)) #1
  %.pre.i.i = load i32, i32* %.lcssa31, align 4, !tbaa !38
  br label %fixjump.exit.i.i

fixjump.exit.i.i:                                 ; preds = %114, %110
  %117 = phi i32 [ %.lcssa32, %110 ], [ %.pre.i.i, %114 ]
  %118 = and i32 %117, 16383
  %119 = shl i32 %111, 14
  %120 = add i32 %119, 2147467264
  %121 = or i32 %118, %120
  store i32 %121, i32* %.lcssa31, align 4, !tbaa !38
  br label %luaK_concat.exit.i

luaK_concat.exit.i:                               ; preds = %fixjump.exit.i.i, %99, %luaK_jump.exit.i, %2, %2
  %122 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %v, i64 0, i32 3
  %123 = load i32, i32* %122, align 4, !tbaa !107
  %124 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 6
  %125 = load i32, i32* %124, align 4, !tbaa !88
  %126 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 7
  store i32 %125, i32* %126, align 4, !tbaa !90
  %127 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 8
  %128 = icmp eq i32 %123, -1
  br i1 %128, label %luaK_goiffalse.exit, label %129

; <label>:129                                     ; preds = %luaK_concat.exit.i
  %130 = load i32, i32* %127, align 4, !tbaa !38
  %131 = icmp eq i32 %130, -1
  br i1 %131, label %132, label %.preheader.i.i.5.i

.preheader.i.i.5.i:                               ; preds = %129
  %fs.idx.i.i.1.i = getelementptr %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 0
  %fs.idx.val.i.i.2.i = load %struct.Proto*, %struct.Proto** %fs.idx.i.i.1.i, align 8, !tbaa !92
  %fs.idx.val.idx.i.i.3.i = getelementptr %struct.Proto, %struct.Proto* %fs.idx.val.i.i.2.i, i64 0, i32 4
  %fs.idx.val.idx.val.i.i.4.i = load i32*, i32** %fs.idx.val.idx.i.i.3.i, align 8, !tbaa !93
  br label %133

; <label>:132                                     ; preds = %129
  store i32 %123, i32* %127, align 4, !tbaa !38
  br label %luaK_goiffalse.exit

; <label>:133                                     ; preds = %133, %.preheader.i.i.5.i
  %list.0.i.i.6.i = phi i32 [ %.0.i.i.i.7.i, %133 ], [ %130, %.preheader.i.i.5.i ]
  %134 = sext i32 %list.0.i.i.6.i to i64
  %135 = getelementptr inbounds i32, i32* %fs.idx.val.idx.val.i.i.4.i, i64 %134
  %136 = load i32, i32* %135, align 4, !tbaa !38
  %137 = lshr i32 %136, 14
  %138 = add nsw i32 %137, -131071
  %139 = icmp eq i32 %138, -1
  %140 = add nsw i32 %list.0.i.i.6.i, 1
  %141 = add nsw i32 %140, %138
  %.0.i.i.i.7.i = select i1 %139, i32 -1, i32 %141
  %142 = icmp eq i32 %.0.i.i.i.7.i, -1
  br i1 %142, label %143, label %133

; <label>:143                                     ; preds = %133
  %.lcssa30 = phi i32 [ %136, %133 ]
  %.lcssa = phi i32* [ %135, %133 ]
  %list.0.i.i.6.i.lcssa = phi i32 [ %list.0.i.i.6.i, %133 ]
  %.neg.i.i.i.8.i = xor i32 %list.0.i.i.6.i.lcssa, -1
  %144 = add i32 %123, %.neg.i.i.i.8.i
  %ispos.i.i.i.9.i = icmp sgt i32 %144, -1
  %neg.i.i.i.10.i = sub i32 0, %144
  %145 = select i1 %ispos.i.i.i.9.i, i32 %144, i32 %neg.i.i.i.10.i
  %146 = icmp sgt i32 %145, 131071
  br i1 %146, label %147, label %fixjump.exit.i.i.12.i

; <label>:147                                     ; preds = %143
  %148 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 3
  %149 = load %struct.LexState*, %struct.LexState** %148, align 8, !tbaa !94
  tail call void @luaX_syntaxerror(%struct.LexState* %149, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1.37, i64 0, i64 0)) #1
  %.pre.i.i.11.i = load i32, i32* %.lcssa, align 4, !tbaa !38
  br label %fixjump.exit.i.i.12.i

fixjump.exit.i.i.12.i:                            ; preds = %147, %143
  %150 = phi i32 [ %.lcssa30, %143 ], [ %.pre.i.i.11.i, %147 ]
  %151 = and i32 %150, 16383
  %152 = shl i32 %144, 14
  %153 = add i32 %152, 2147467264
  %154 = or i32 %151, %153
  store i32 %154, i32* %.lcssa, align 4, !tbaa !38
  br label %luaK_goiffalse.exit

luaK_goiffalse.exit:                              ; preds = %luaK_concat.exit.i, %132, %fixjump.exit.i.i.12.i
  store i32 -1, i32* %122, align 4, !tbaa !107
  br label %208

; <label>:155                                     ; preds = %0
  tail call void @luaK_dischargevars(%struct.FuncState* %fs, %struct.expdesc* %v) #1
  %156 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %v, i64 0, i32 0
  %157 = load i32, i32* %156, align 4, !tbaa !101
  %158 = icmp eq i32 %157, 12
  br i1 %158, label %159, label %freeexp.exit.i.1

; <label>:159                                     ; preds = %155
  %160 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %v, i64 0, i32 1
  %161 = bitcast %union.SemInfo* %160 to i32*
  %162 = load i32, i32* %161, align 4, !tbaa !103
  %163 = and i32 %162, 256
  %164 = icmp eq i32 %163, 0
  br i1 %164, label %165, label %freeexp.exit.i.1

; <label>:165                                     ; preds = %159
  %166 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 13
  %167 = load i8, i8* %166, align 1, !tbaa !91
  %168 = zext i8 %167 to i32
  %169 = icmp sgt i32 %168, %162
  br i1 %169, label %freeexp.exit.i.1, label %170

; <label>:170                                     ; preds = %165
  %171 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 9
  %172 = load i32, i32* %171, align 4, !tbaa !99
  %173 = add nsw i32 %172, -1
  store i32 %173, i32* %171, align 4, !tbaa !99
  br label %freeexp.exit.i.1

freeexp.exit.i.1:                                 ; preds = %170, %165, %159, %155
  %174 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 9
  %175 = load i32, i32* %174, align 4, !tbaa !99
  %176 = add nsw i32 %175, 1
  %177 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 0
  %178 = load %struct.Proto*, %struct.Proto** %177, align 8, !tbaa !92
  %179 = getelementptr inbounds %struct.Proto, %struct.Proto* %178, i64 0, i32 22
  %180 = load i8, i8* %179, align 1, !tbaa !100
  %181 = zext i8 %180 to i32
  %182 = icmp slt i32 %175, %181
  br i1 %182, label %luaK_exp2nextreg.exit, label %183

; <label>:183                                     ; preds = %freeexp.exit.i.1
  %184 = icmp sgt i32 %175, 248
  br i1 %184, label %185, label %188

; <label>:185                                     ; preds = %183
  %186 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 3
  %187 = load %struct.LexState*, %struct.LexState** %186, align 8, !tbaa !94
  tail call void @luaX_syntaxerror(%struct.LexState* %187, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.51, i64 0, i64 0)) #1
  %.pre.i.i.i.2 = load %struct.Proto*, %struct.Proto** %177, align 8, !tbaa !92
  %.pre.pre.i.i = load i32, i32* %174, align 4, !tbaa !99
  br label %188

; <label>:188                                     ; preds = %185, %183
  %.pre.i.i.3 = phi i32 [ %.pre.pre.i.i, %185 ], [ %175, %183 ]
  %189 = phi %struct.Proto* [ %.pre.i.i.i.2, %185 ], [ %178, %183 ]
  %190 = trunc i32 %176 to i8
  %191 = getelementptr inbounds %struct.Proto, %struct.Proto* %189, i64 0, i32 22
  store i8 %190, i8* %191, align 1, !tbaa !100
  br label %luaK_exp2nextreg.exit

luaK_exp2nextreg.exit:                            ; preds = %freeexp.exit.i.1, %188
  %192 = phi i32 [ %175, %freeexp.exit.i.1 ], [ %.pre.i.i.3, %188 ]
  %193 = add nsw i32 %192, 1
  store i32 %193, i32* %174, align 4, !tbaa !99
  tail call fastcc void @exp2reg(%struct.FuncState* %fs, %struct.expdesc* %v, i32 %192) #1
  br label %208

; <label>:194                                     ; preds = %0, %0, %0, %0, %0, %0
  %195 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %v, i64 0, i32 0
  %196 = load i32, i32* %195, align 4, !tbaa !101
  %197 = icmp eq i32 %196, 5
  br i1 %197, label %198, label %.critedge

; <label>:198                                     ; preds = %194
  %199 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %v, i64 0, i32 2
  %200 = load i32, i32* %199, align 4, !tbaa !106
  %201 = icmp eq i32 %200, -1
  br i1 %201, label %isnumeral.exit, label %.critedge

isnumeral.exit:                                   ; preds = %198
  %202 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %v, i64 0, i32 3
  %203 = load i32, i32* %202, align 4, !tbaa !107
  %204 = icmp eq i32 %203, -1
  br i1 %204, label %208, label %.critedge

.critedge:                                        ; preds = %194, %198, %isnumeral.exit
  %205 = tail call i32 @luaK_exp2RK(%struct.FuncState* %fs, %struct.expdesc* %v)
  br label %208

; <label>:206                                     ; preds = %0
  %207 = tail call i32 @luaK_exp2RK(%struct.FuncState* %fs, %struct.expdesc* %v)
  br label %208

; <label>:208                                     ; preds = %isnumeral.exit, %.critedge, %206, %luaK_exp2nextreg.exit, %luaK_goiffalse.exit, %1
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @luaK_posfix(%struct.FuncState* %fs, i32 %op, %struct.expdesc* %e1, %struct.expdesc* %e2) #0 {
  switch i32 %op, label %399 [
    i32 13, label %1
    i32 14, label %34
    i32 6, label %67
    i32 0, label %153
    i32 1, label %154
    i32 2, label %155
    i32 3, label %156
    i32 4, label %157
    i32 5, label %158
    i32 8, label %159
    i32 7, label %199
    i32 9, label %239
    i32 10, label %279
    i32 11, label %319
    i32 12, label %359
  ]

; <label>:1                                       ; preds = %0
  tail call void @luaK_dischargevars(%struct.FuncState* %fs, %struct.expdesc* %e2)
  %2 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %e2, i64 0, i32 3
  %3 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %e1, i64 0, i32 3
  %4 = load i32, i32* %3, align 4, !tbaa !107
  %5 = icmp eq i32 %4, -1
  br i1 %5, label %luaK_concat.exit, label %6

; <label>:6                                       ; preds = %1
  %7 = load i32, i32* %2, align 4, !tbaa !38
  %8 = icmp eq i32 %7, -1
  br i1 %8, label %9, label %.preheader.i

.preheader.i:                                     ; preds = %6
  %fs.idx.i = getelementptr %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 0
  %fs.idx.val.i = load %struct.Proto*, %struct.Proto** %fs.idx.i, align 8, !tbaa !92
  %fs.idx.val.idx.i = getelementptr %struct.Proto, %struct.Proto* %fs.idx.val.i, i64 0, i32 4
  %fs.idx.val.idx.val.i = load i32*, i32** %fs.idx.val.idx.i, align 8, !tbaa !93
  br label %10

; <label>:9                                       ; preds = %6
  store i32 %4, i32* %2, align 4, !tbaa !38
  br label %luaK_concat.exit

; <label>:10                                      ; preds = %10, %.preheader.i
  %list.0.i = phi i32 [ %.0.i.i, %10 ], [ %7, %.preheader.i ]
  %11 = sext i32 %list.0.i to i64
  %12 = getelementptr inbounds i32, i32* %fs.idx.val.idx.val.i, i64 %11
  %13 = load i32, i32* %12, align 4, !tbaa !38
  %14 = lshr i32 %13, 14
  %15 = add nsw i32 %14, -131071
  %16 = icmp eq i32 %15, -1
  %17 = add nsw i32 %list.0.i, 1
  %18 = add nsw i32 %17, %15
  %.0.i.i = select i1 %16, i32 -1, i32 %18
  %19 = icmp eq i32 %.0.i.i, -1
  br i1 %19, label %20, label %10

; <label>:20                                      ; preds = %10
  %.lcssa74 = phi i32 [ %13, %10 ]
  %.lcssa = phi i32* [ %12, %10 ]
  %list.0.i.lcssa = phi i32 [ %list.0.i, %10 ]
  %.neg.i.i = xor i32 %list.0.i.lcssa, -1
  %21 = add i32 %4, %.neg.i.i
  %ispos.i.i = icmp sgt i32 %21, -1
  %neg.i.i = sub i32 0, %21
  %22 = select i1 %ispos.i.i, i32 %21, i32 %neg.i.i
  %23 = icmp sgt i32 %22, 131071
  br i1 %23, label %24, label %fixjump.exit.i

; <label>:24                                      ; preds = %20
  %25 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 3
  %26 = load %struct.LexState*, %struct.LexState** %25, align 8, !tbaa !94
  tail call void @luaX_syntaxerror(%struct.LexState* %26, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1.37, i64 0, i64 0)) #1
  %.pre.i = load i32, i32* %.lcssa, align 4, !tbaa !38
  br label %fixjump.exit.i

fixjump.exit.i:                                   ; preds = %24, %20
  %27 = phi i32 [ %.lcssa74, %20 ], [ %.pre.i, %24 ]
  %28 = and i32 %27, 16383
  %29 = shl i32 %21, 14
  %30 = add i32 %29, 2147467264
  %31 = or i32 %28, %30
  store i32 %31, i32* %.lcssa, align 4, !tbaa !38
  br label %luaK_concat.exit

luaK_concat.exit:                                 ; preds = %1, %9, %fixjump.exit.i
  %32 = bitcast %struct.expdesc* %e1 to i8*
  %33 = bitcast %struct.expdesc* %e2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %32, i8* %33, i64 24, i32 8, i1 false), !tbaa.struct !110
  br label %399

; <label>:34                                      ; preds = %0
  tail call void @luaK_dischargevars(%struct.FuncState* %fs, %struct.expdesc* %e2)
  %35 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %e2, i64 0, i32 2
  %36 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %e1, i64 0, i32 2
  %37 = load i32, i32* %36, align 4, !tbaa !106
  %38 = icmp eq i32 %37, -1
  br i1 %38, label %luaK_concat.exit13, label %39

; <label>:39                                      ; preds = %34
  %40 = load i32, i32* %35, align 4, !tbaa !38
  %41 = icmp eq i32 %40, -1
  br i1 %41, label %42, label %.preheader.i.5

.preheader.i.5:                                   ; preds = %39
  %fs.idx.i.1 = getelementptr %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 0
  %fs.idx.val.i.2 = load %struct.Proto*, %struct.Proto** %fs.idx.i.1, align 8, !tbaa !92
  %fs.idx.val.idx.i.3 = getelementptr %struct.Proto, %struct.Proto* %fs.idx.val.i.2, i64 0, i32 4
  %fs.idx.val.idx.val.i.4 = load i32*, i32** %fs.idx.val.idx.i.3, align 8, !tbaa !93
  br label %43

; <label>:42                                      ; preds = %39
  store i32 %37, i32* %35, align 4, !tbaa !38
  br label %luaK_concat.exit13

; <label>:43                                      ; preds = %43, %.preheader.i.5
  %list.0.i.6 = phi i32 [ %.0.i.i.7, %43 ], [ %40, %.preheader.i.5 ]
  %44 = sext i32 %list.0.i.6 to i64
  %45 = getelementptr inbounds i32, i32* %fs.idx.val.idx.val.i.4, i64 %44
  %46 = load i32, i32* %45, align 4, !tbaa !38
  %47 = lshr i32 %46, 14
  %48 = add nsw i32 %47, -131071
  %49 = icmp eq i32 %48, -1
  %50 = add nsw i32 %list.0.i.6, 1
  %51 = add nsw i32 %50, %48
  %.0.i.i.7 = select i1 %49, i32 -1, i32 %51
  %52 = icmp eq i32 %.0.i.i.7, -1
  br i1 %52, label %53, label %43

; <label>:53                                      ; preds = %43
  %.lcssa76 = phi i32 [ %46, %43 ]
  %.lcssa75 = phi i32* [ %45, %43 ]
  %list.0.i.6.lcssa = phi i32 [ %list.0.i.6, %43 ]
  %.neg.i.i.8 = xor i32 %list.0.i.6.lcssa, -1
  %54 = add i32 %37, %.neg.i.i.8
  %ispos.i.i.9 = icmp sgt i32 %54, -1
  %neg.i.i.10 = sub i32 0, %54
  %55 = select i1 %ispos.i.i.9, i32 %54, i32 %neg.i.i.10
  %56 = icmp sgt i32 %55, 131071
  br i1 %56, label %57, label %fixjump.exit.i.12

; <label>:57                                      ; preds = %53
  %58 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 3
  %59 = load %struct.LexState*, %struct.LexState** %58, align 8, !tbaa !94
  tail call void @luaX_syntaxerror(%struct.LexState* %59, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1.37, i64 0, i64 0)) #1
  %.pre.i.11 = load i32, i32* %.lcssa75, align 4, !tbaa !38
  br label %fixjump.exit.i.12

fixjump.exit.i.12:                                ; preds = %57, %53
  %60 = phi i32 [ %.lcssa76, %53 ], [ %.pre.i.11, %57 ]
  %61 = and i32 %60, 16383
  %62 = shl i32 %54, 14
  %63 = add i32 %62, 2147467264
  %64 = or i32 %61, %63
  store i32 %64, i32* %.lcssa75, align 4, !tbaa !38
  br label %luaK_concat.exit13

luaK_concat.exit13:                               ; preds = %34, %42, %fixjump.exit.i.12
  %65 = bitcast %struct.expdesc* %e1 to i8*
  %66 = bitcast %struct.expdesc* %e2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %65, i8* %66, i64 24, i32 8, i1 false), !tbaa.struct !110
  br label %399

; <label>:67                                      ; preds = %0
  %68 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %e2, i64 0, i32 2
  %69 = load i32, i32* %68, align 4, !tbaa !106
  %70 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %e2, i64 0, i32 3
  %71 = load i32, i32* %70, align 4, !tbaa !107
  %72 = icmp eq i32 %69, %71
  br i1 %72, label %75, label %73

; <label>:73                                      ; preds = %67
  %74 = tail call i32 @luaK_exp2anyreg(%struct.FuncState* %fs, %struct.expdesc* %e2) #1
  br label %luaK_exp2val.exit

; <label>:75                                      ; preds = %67
  tail call void @luaK_dischargevars(%struct.FuncState* %fs, %struct.expdesc* %e2) #1
  br label %luaK_exp2val.exit

luaK_exp2val.exit:                                ; preds = %73, %75
  %76 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %e2, i64 0, i32 0
  %77 = load i32, i32* %76, align 4, !tbaa !101
  %78 = icmp eq i32 %77, 11
  br i1 %78, label %79, label %115

; <label>:79                                      ; preds = %luaK_exp2val.exit
  %80 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %e2, i64 0, i32 1
  %81 = bitcast %union.SemInfo* %80 to i32*
  %82 = load i32, i32* %81, align 4, !tbaa !103
  %83 = sext i32 %82 to i64
  %84 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 0
  %85 = load %struct.Proto*, %struct.Proto** %84, align 8, !tbaa !92
  %86 = getelementptr inbounds %struct.Proto, %struct.Proto* %85, i64 0, i32 4
  %87 = load i32*, i32** %86, align 8, !tbaa !93
  %88 = getelementptr inbounds i32, i32* %87, i64 %83
  %89 = load i32, i32* %88, align 4, !tbaa !38
  %90 = and i32 %89, 63
  %91 = icmp eq i32 %90, 21
  br i1 %91, label %92, label %115

; <label>:92                                      ; preds = %79
  %93 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %e1, i64 0, i32 0
  %94 = load i32, i32* %93, align 4, !tbaa !101
  %95 = icmp eq i32 %94, 12
  %96 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %e1, i64 0, i32 1
  %97 = bitcast %union.SemInfo* %96 to i32*
  %98 = load i32, i32* %97, align 4, !tbaa !103
  %99 = and i32 %98, 256
  %100 = icmp eq i32 %99, 0
  %or.cond = and i1 %95, %100
  br i1 %or.cond, label %101, label %freeexp.exit

; <label>:101                                     ; preds = %92
  %102 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 13
  %103 = load i8, i8* %102, align 1, !tbaa !91
  %104 = zext i8 %103 to i32
  %105 = icmp sgt i32 %104, %98
  br i1 %105, label %freeexp.exit, label %106

; <label>:106                                     ; preds = %101
  %107 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 9
  %108 = load i32, i32* %107, align 4, !tbaa !99
  %109 = add nsw i32 %108, -1
  store i32 %109, i32* %107, align 4, !tbaa !99
  %.pre = load i32, i32* %88, align 4, !tbaa !38
  br label %freeexp.exit

freeexp.exit:                                     ; preds = %92, %101, %106
  %110 = phi i32 [ %89, %101 ], [ %.pre, %106 ], [ %89, %92 ]
  %111 = and i32 %110, 8388607
  %112 = shl i32 %98, 23
  %113 = or i32 %112, %111
  store i32 %113, i32* %88, align 4, !tbaa !38
  store i32 11, i32* %93, align 4, !tbaa !101
  %114 = load i32, i32* %81, align 4, !tbaa !103
  store i32 %114, i32* %97, align 4, !tbaa !103
  br label %399

; <label>:115                                     ; preds = %79, %luaK_exp2val.exit
  tail call void @luaK_dischargevars(%struct.FuncState* %fs, %struct.expdesc* %e2) #1
  %116 = load i32, i32* %76, align 4, !tbaa !101
  %117 = icmp eq i32 %116, 12
  br i1 %117, label %118, label %freeexp.exit.i

; <label>:118                                     ; preds = %115
  %119 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %e2, i64 0, i32 1
  %120 = bitcast %union.SemInfo* %119 to i32*
  %121 = load i32, i32* %120, align 4, !tbaa !103
  %122 = and i32 %121, 256
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %124, label %freeexp.exit.i

; <label>:124                                     ; preds = %118
  %125 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 13
  %126 = load i8, i8* %125, align 1, !tbaa !91
  %127 = zext i8 %126 to i32
  %128 = icmp sgt i32 %127, %121
  br i1 %128, label %freeexp.exit.i, label %129

; <label>:129                                     ; preds = %124
  %130 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 9
  %131 = load i32, i32* %130, align 4, !tbaa !99
  %132 = add nsw i32 %131, -1
  store i32 %132, i32* %130, align 4, !tbaa !99
  br label %freeexp.exit.i

freeexp.exit.i:                                   ; preds = %129, %124, %118, %115
  %133 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 9
  %134 = load i32, i32* %133, align 4, !tbaa !99
  %135 = add nsw i32 %134, 1
  %136 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 0
  %137 = load %struct.Proto*, %struct.Proto** %136, align 8, !tbaa !92
  %138 = getelementptr inbounds %struct.Proto, %struct.Proto* %137, i64 0, i32 22
  %139 = load i8, i8* %138, align 1, !tbaa !100
  %140 = zext i8 %139 to i32
  %141 = icmp slt i32 %134, %140
  br i1 %141, label %luaK_exp2nextreg.exit, label %142

; <label>:142                                     ; preds = %freeexp.exit.i
  %143 = icmp sgt i32 %134, 248
  br i1 %143, label %144, label %147

; <label>:144                                     ; preds = %142
  %145 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 3
  %146 = load %struct.LexState*, %struct.LexState** %145, align 8, !tbaa !94
  tail call void @luaX_syntaxerror(%struct.LexState* %146, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.51, i64 0, i64 0)) #1
  %.pre.i.i.i = load %struct.Proto*, %struct.Proto** %136, align 8, !tbaa !92
  %.pre.pre.i.i = load i32, i32* %133, align 4, !tbaa !99
  br label %147

; <label>:147                                     ; preds = %144, %142
  %.pre.i.i = phi i32 [ %.pre.pre.i.i, %144 ], [ %134, %142 ]
  %148 = phi %struct.Proto* [ %.pre.i.i.i, %144 ], [ %137, %142 ]
  %149 = trunc i32 %135 to i8
  %150 = getelementptr inbounds %struct.Proto, %struct.Proto* %148, i64 0, i32 22
  store i8 %149, i8* %150, align 1, !tbaa !100
  br label %luaK_exp2nextreg.exit

luaK_exp2nextreg.exit:                            ; preds = %freeexp.exit.i, %147
  %151 = phi i32 [ %134, %freeexp.exit.i ], [ %.pre.i.i, %147 ]
  %152 = add nsw i32 %151, 1
  store i32 %152, i32* %133, align 4, !tbaa !99
  tail call fastcc void @exp2reg(%struct.FuncState* %fs, %struct.expdesc* %e2, i32 %151) #1
  tail call fastcc void @codearith(%struct.FuncState* %fs, i32 21, %struct.expdesc* %e1, %struct.expdesc* %e2)
  br label %399

; <label>:153                                     ; preds = %0
  tail call fastcc void @codearith(%struct.FuncState* %fs, i32 12, %struct.expdesc* %e1, %struct.expdesc* %e2)
  br label %399

; <label>:154                                     ; preds = %0
  tail call fastcc void @codearith(%struct.FuncState* %fs, i32 13, %struct.expdesc* %e1, %struct.expdesc* %e2)
  br label %399

; <label>:155                                     ; preds = %0
  tail call fastcc void @codearith(%struct.FuncState* %fs, i32 14, %struct.expdesc* %e1, %struct.expdesc* %e2)
  br label %399

; <label>:156                                     ; preds = %0
  tail call fastcc void @codearith(%struct.FuncState* %fs, i32 15, %struct.expdesc* %e1, %struct.expdesc* %e2)
  br label %399

; <label>:157                                     ; preds = %0
  tail call fastcc void @codearith(%struct.FuncState* %fs, i32 16, %struct.expdesc* %e1, %struct.expdesc* %e2)
  br label %399

; <label>:158                                     ; preds = %0
  tail call fastcc void @codearith(%struct.FuncState* %fs, i32 17, %struct.expdesc* %e1, %struct.expdesc* %e2)
  br label %399

; <label>:159                                     ; preds = %0
  %160 = tail call i32 @luaK_exp2RK(%struct.FuncState* %fs, %struct.expdesc* %e1) #1
  %161 = tail call i32 @luaK_exp2RK(%struct.FuncState* %fs, %struct.expdesc* %e2) #1
  %162 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %e2, i64 0, i32 0
  %163 = load i32, i32* %162, align 4, !tbaa !101
  %164 = icmp eq i32 %163, 12
  br i1 %164, label %165, label %codecomp.exit

; <label>:165                                     ; preds = %159
  %166 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %e2, i64 0, i32 1
  %167 = bitcast %union.SemInfo* %166 to i32*
  %168 = load i32, i32* %167, align 4, !tbaa !103
  %169 = and i32 %168, 256
  %170 = icmp eq i32 %169, 0
  br i1 %170, label %171, label %codecomp.exit

; <label>:171                                     ; preds = %165
  %172 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 13
  %173 = load i8, i8* %172, align 1, !tbaa !91
  %174 = zext i8 %173 to i32
  %175 = icmp sgt i32 %174, %168
  br i1 %175, label %codecomp.exit, label %176

; <label>:176                                     ; preds = %171
  %177 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 9
  %178 = load i32, i32* %177, align 4, !tbaa !99
  %179 = add nsw i32 %178, -1
  store i32 %179, i32* %177, align 4, !tbaa !99
  br label %codecomp.exit

codecomp.exit:                                    ; preds = %159, %165, %171, %176
  %180 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %e1, i64 0, i32 0
  %181 = load i32, i32* %180, align 4, !tbaa !101
  %182 = icmp eq i32 %181, 12
  %183 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %e1, i64 0, i32 1
  %184 = bitcast %union.SemInfo* %183 to i32*
  br i1 %182, label %185, label %freeexp.exit15

; <label>:185                                     ; preds = %codecomp.exit
  %186 = load i32, i32* %184, align 4, !tbaa !103
  %187 = and i32 %186, 256
  %188 = icmp eq i32 %187, 0
  br i1 %188, label %189, label %freeexp.exit15

; <label>:189                                     ; preds = %185
  %190 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 13
  %191 = load i8, i8* %190, align 1, !tbaa !91
  %192 = zext i8 %191 to i32
  %193 = icmp sgt i32 %192, %186
  br i1 %193, label %freeexp.exit15, label %194

; <label>:194                                     ; preds = %189
  %195 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 9
  %196 = load i32, i32* %195, align 4, !tbaa !99
  %197 = add nsw i32 %196, -1
  store i32 %197, i32* %195, align 4, !tbaa !99
  br label %freeexp.exit15

freeexp.exit15:                                   ; preds = %codecomp.exit, %185, %189, %194
  %198 = tail call fastcc i32 @condjump(%struct.FuncState* %fs, i32 23, i32 1, i32 %160, i32 %161) #1
  store i32 %198, i32* %184, align 4, !tbaa !103
  store i32 10, i32* %180, align 4, !tbaa !101
  br label %399

; <label>:199                                     ; preds = %0
  %200 = tail call i32 @luaK_exp2RK(%struct.FuncState* %fs, %struct.expdesc* %e1) #1
  %201 = tail call i32 @luaK_exp2RK(%struct.FuncState* %fs, %struct.expdesc* %e2) #1
  %202 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %e2, i64 0, i32 0
  %203 = load i32, i32* %202, align 4, !tbaa !101
  %204 = icmp eq i32 %203, 12
  br i1 %204, label %205, label %codecomp.exit17

; <label>:205                                     ; preds = %199
  %206 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %e2, i64 0, i32 1
  %207 = bitcast %union.SemInfo* %206 to i32*
  %208 = load i32, i32* %207, align 4, !tbaa !103
  %209 = and i32 %208, 256
  %210 = icmp eq i32 %209, 0
  br i1 %210, label %211, label %codecomp.exit17

; <label>:211                                     ; preds = %205
  %212 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 13
  %213 = load i8, i8* %212, align 1, !tbaa !91
  %214 = zext i8 %213 to i32
  %215 = icmp sgt i32 %214, %208
  br i1 %215, label %codecomp.exit17, label %216

; <label>:216                                     ; preds = %211
  %217 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 9
  %218 = load i32, i32* %217, align 4, !tbaa !99
  %219 = add nsw i32 %218, -1
  store i32 %219, i32* %217, align 4, !tbaa !99
  br label %codecomp.exit17

codecomp.exit17:                                  ; preds = %199, %205, %211, %216
  %220 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %e1, i64 0, i32 0
  %221 = load i32, i32* %220, align 4, !tbaa !101
  %222 = icmp eq i32 %221, 12
  %223 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %e1, i64 0, i32 1
  %224 = bitcast %union.SemInfo* %223 to i32*
  br i1 %222, label %225, label %freeexp.exit18

; <label>:225                                     ; preds = %codecomp.exit17
  %226 = load i32, i32* %224, align 4, !tbaa !103
  %227 = and i32 %226, 256
  %228 = icmp eq i32 %227, 0
  br i1 %228, label %229, label %freeexp.exit18

; <label>:229                                     ; preds = %225
  %230 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 13
  %231 = load i8, i8* %230, align 1, !tbaa !91
  %232 = zext i8 %231 to i32
  %233 = icmp sgt i32 %232, %226
  br i1 %233, label %freeexp.exit18, label %234

; <label>:234                                     ; preds = %229
  %235 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 9
  %236 = load i32, i32* %235, align 4, !tbaa !99
  %237 = add nsw i32 %236, -1
  store i32 %237, i32* %235, align 4, !tbaa !99
  br label %freeexp.exit18

freeexp.exit18:                                   ; preds = %codecomp.exit17, %225, %229, %234
  %238 = tail call fastcc i32 @condjump(%struct.FuncState* %fs, i32 23, i32 0, i32 %200, i32 %201) #1
  store i32 %238, i32* %224, align 4, !tbaa !103
  store i32 10, i32* %220, align 4, !tbaa !101
  br label %399

; <label>:239                                     ; preds = %0
  %240 = tail call i32 @luaK_exp2RK(%struct.FuncState* %fs, %struct.expdesc* %e1) #1
  %241 = tail call i32 @luaK_exp2RK(%struct.FuncState* %fs, %struct.expdesc* %e2) #1
  %242 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %e2, i64 0, i32 0
  %243 = load i32, i32* %242, align 4, !tbaa !101
  %244 = icmp eq i32 %243, 12
  br i1 %244, label %245, label %codecomp.exit20

; <label>:245                                     ; preds = %239
  %246 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %e2, i64 0, i32 1
  %247 = bitcast %union.SemInfo* %246 to i32*
  %248 = load i32, i32* %247, align 4, !tbaa !103
  %249 = and i32 %248, 256
  %250 = icmp eq i32 %249, 0
  br i1 %250, label %251, label %codecomp.exit20

; <label>:251                                     ; preds = %245
  %252 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 13
  %253 = load i8, i8* %252, align 1, !tbaa !91
  %254 = zext i8 %253 to i32
  %255 = icmp sgt i32 %254, %248
  br i1 %255, label %codecomp.exit20, label %256

; <label>:256                                     ; preds = %251
  %257 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 9
  %258 = load i32, i32* %257, align 4, !tbaa !99
  %259 = add nsw i32 %258, -1
  store i32 %259, i32* %257, align 4, !tbaa !99
  br label %codecomp.exit20

codecomp.exit20:                                  ; preds = %239, %245, %251, %256
  %260 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %e1, i64 0, i32 0
  %261 = load i32, i32* %260, align 4, !tbaa !101
  %262 = icmp eq i32 %261, 12
  %263 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %e1, i64 0, i32 1
  %264 = bitcast %union.SemInfo* %263 to i32*
  br i1 %262, label %265, label %freeexp.exit21

; <label>:265                                     ; preds = %codecomp.exit20
  %266 = load i32, i32* %264, align 4, !tbaa !103
  %267 = and i32 %266, 256
  %268 = icmp eq i32 %267, 0
  br i1 %268, label %269, label %freeexp.exit21

; <label>:269                                     ; preds = %265
  %270 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 13
  %271 = load i8, i8* %270, align 1, !tbaa !91
  %272 = zext i8 %271 to i32
  %273 = icmp sgt i32 %272, %266
  br i1 %273, label %freeexp.exit21, label %274

; <label>:274                                     ; preds = %269
  %275 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 9
  %276 = load i32, i32* %275, align 4, !tbaa !99
  %277 = add nsw i32 %276, -1
  store i32 %277, i32* %275, align 4, !tbaa !99
  br label %freeexp.exit21

freeexp.exit21:                                   ; preds = %codecomp.exit20, %265, %269, %274
  %278 = tail call fastcc i32 @condjump(%struct.FuncState* %fs, i32 24, i32 1, i32 %240, i32 %241) #1
  store i32 %278, i32* %264, align 4, !tbaa !103
  store i32 10, i32* %260, align 4, !tbaa !101
  br label %399

; <label>:279                                     ; preds = %0
  %280 = tail call i32 @luaK_exp2RK(%struct.FuncState* %fs, %struct.expdesc* %e1) #1
  %281 = tail call i32 @luaK_exp2RK(%struct.FuncState* %fs, %struct.expdesc* %e2) #1
  %282 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %e2, i64 0, i32 0
  %283 = load i32, i32* %282, align 4, !tbaa !101
  %284 = icmp eq i32 %283, 12
  br i1 %284, label %285, label %codecomp.exit23

; <label>:285                                     ; preds = %279
  %286 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %e2, i64 0, i32 1
  %287 = bitcast %union.SemInfo* %286 to i32*
  %288 = load i32, i32* %287, align 4, !tbaa !103
  %289 = and i32 %288, 256
  %290 = icmp eq i32 %289, 0
  br i1 %290, label %291, label %codecomp.exit23

; <label>:291                                     ; preds = %285
  %292 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 13
  %293 = load i8, i8* %292, align 1, !tbaa !91
  %294 = zext i8 %293 to i32
  %295 = icmp sgt i32 %294, %288
  br i1 %295, label %codecomp.exit23, label %296

; <label>:296                                     ; preds = %291
  %297 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 9
  %298 = load i32, i32* %297, align 4, !tbaa !99
  %299 = add nsw i32 %298, -1
  store i32 %299, i32* %297, align 4, !tbaa !99
  br label %codecomp.exit23

codecomp.exit23:                                  ; preds = %279, %285, %291, %296
  %300 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %e1, i64 0, i32 0
  %301 = load i32, i32* %300, align 4, !tbaa !101
  %302 = icmp eq i32 %301, 12
  %303 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %e1, i64 0, i32 1
  %304 = bitcast %union.SemInfo* %303 to i32*
  br i1 %302, label %305, label %freeexp.exit24

; <label>:305                                     ; preds = %codecomp.exit23
  %306 = load i32, i32* %304, align 4, !tbaa !103
  %307 = and i32 %306, 256
  %308 = icmp eq i32 %307, 0
  br i1 %308, label %309, label %freeexp.exit24

; <label>:309                                     ; preds = %305
  %310 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 13
  %311 = load i8, i8* %310, align 1, !tbaa !91
  %312 = zext i8 %311 to i32
  %313 = icmp sgt i32 %312, %306
  br i1 %313, label %freeexp.exit24, label %314

; <label>:314                                     ; preds = %309
  %315 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 9
  %316 = load i32, i32* %315, align 4, !tbaa !99
  %317 = add nsw i32 %316, -1
  store i32 %317, i32* %315, align 4, !tbaa !99
  br label %freeexp.exit24

freeexp.exit24:                                   ; preds = %codecomp.exit23, %305, %309, %314
  %318 = tail call fastcc i32 @condjump(%struct.FuncState* %fs, i32 25, i32 1, i32 %280, i32 %281) #1
  store i32 %318, i32* %304, align 4, !tbaa !103
  store i32 10, i32* %300, align 4, !tbaa !101
  br label %399

; <label>:319                                     ; preds = %0
  %320 = tail call i32 @luaK_exp2RK(%struct.FuncState* %fs, %struct.expdesc* %e1) #1
  %321 = tail call i32 @luaK_exp2RK(%struct.FuncState* %fs, %struct.expdesc* %e2) #1
  %322 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %e2, i64 0, i32 0
  %323 = load i32, i32* %322, align 4, !tbaa !101
  %324 = icmp eq i32 %323, 12
  br i1 %324, label %325, label %codecomp.exit26

; <label>:325                                     ; preds = %319
  %326 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %e2, i64 0, i32 1
  %327 = bitcast %union.SemInfo* %326 to i32*
  %328 = load i32, i32* %327, align 4, !tbaa !103
  %329 = and i32 %328, 256
  %330 = icmp eq i32 %329, 0
  br i1 %330, label %331, label %codecomp.exit26

; <label>:331                                     ; preds = %325
  %332 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 13
  %333 = load i8, i8* %332, align 1, !tbaa !91
  %334 = zext i8 %333 to i32
  %335 = icmp sgt i32 %334, %328
  br i1 %335, label %codecomp.exit26, label %336

; <label>:336                                     ; preds = %331
  %337 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 9
  %338 = load i32, i32* %337, align 4, !tbaa !99
  %339 = add nsw i32 %338, -1
  store i32 %339, i32* %337, align 4, !tbaa !99
  br label %codecomp.exit26

codecomp.exit26:                                  ; preds = %319, %325, %331, %336
  %340 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %e1, i64 0, i32 0
  %341 = load i32, i32* %340, align 4, !tbaa !101
  %342 = icmp eq i32 %341, 12
  %343 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %e1, i64 0, i32 1
  %344 = bitcast %union.SemInfo* %343 to i32*
  br i1 %342, label %345, label %freeexp.exit27

; <label>:345                                     ; preds = %codecomp.exit26
  %346 = load i32, i32* %344, align 4, !tbaa !103
  %347 = and i32 %346, 256
  %348 = icmp eq i32 %347, 0
  br i1 %348, label %349, label %freeexp.exit27

; <label>:349                                     ; preds = %345
  %350 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 13
  %351 = load i8, i8* %350, align 1, !tbaa !91
  %352 = zext i8 %351 to i32
  %353 = icmp sgt i32 %352, %346
  br i1 %353, label %freeexp.exit27, label %354

; <label>:354                                     ; preds = %349
  %355 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 9
  %356 = load i32, i32* %355, align 4, !tbaa !99
  %357 = add nsw i32 %356, -1
  store i32 %357, i32* %355, align 4, !tbaa !99
  br label %freeexp.exit27

freeexp.exit27:                                   ; preds = %codecomp.exit26, %345, %349, %354
  %358 = tail call fastcc i32 @condjump(%struct.FuncState* %fs, i32 24, i32 1, i32 %321, i32 %320) #1
  store i32 %358, i32* %344, align 4, !tbaa !103
  store i32 10, i32* %340, align 4, !tbaa !101
  br label %399

; <label>:359                                     ; preds = %0
  %360 = tail call i32 @luaK_exp2RK(%struct.FuncState* %fs, %struct.expdesc* %e1) #1
  %361 = tail call i32 @luaK_exp2RK(%struct.FuncState* %fs, %struct.expdesc* %e2) #1
  %362 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %e2, i64 0, i32 0
  %363 = load i32, i32* %362, align 4, !tbaa !101
  %364 = icmp eq i32 %363, 12
  br i1 %364, label %365, label %codecomp.exit29

; <label>:365                                     ; preds = %359
  %366 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %e2, i64 0, i32 1
  %367 = bitcast %union.SemInfo* %366 to i32*
  %368 = load i32, i32* %367, align 4, !tbaa !103
  %369 = and i32 %368, 256
  %370 = icmp eq i32 %369, 0
  br i1 %370, label %371, label %codecomp.exit29

; <label>:371                                     ; preds = %365
  %372 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 13
  %373 = load i8, i8* %372, align 1, !tbaa !91
  %374 = zext i8 %373 to i32
  %375 = icmp sgt i32 %374, %368
  br i1 %375, label %codecomp.exit29, label %376

; <label>:376                                     ; preds = %371
  %377 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 9
  %378 = load i32, i32* %377, align 4, !tbaa !99
  %379 = add nsw i32 %378, -1
  store i32 %379, i32* %377, align 4, !tbaa !99
  br label %codecomp.exit29

codecomp.exit29:                                  ; preds = %359, %365, %371, %376
  %380 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %e1, i64 0, i32 0
  %381 = load i32, i32* %380, align 4, !tbaa !101
  %382 = icmp eq i32 %381, 12
  %383 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %e1, i64 0, i32 1
  %384 = bitcast %union.SemInfo* %383 to i32*
  br i1 %382, label %385, label %freeexp.exit30

; <label>:385                                     ; preds = %codecomp.exit29
  %386 = load i32, i32* %384, align 4, !tbaa !103
  %387 = and i32 %386, 256
  %388 = icmp eq i32 %387, 0
  br i1 %388, label %389, label %freeexp.exit30

; <label>:389                                     ; preds = %385
  %390 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 13
  %391 = load i8, i8* %390, align 1, !tbaa !91
  %392 = zext i8 %391 to i32
  %393 = icmp sgt i32 %392, %386
  br i1 %393, label %freeexp.exit30, label %394

; <label>:394                                     ; preds = %389
  %395 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 9
  %396 = load i32, i32* %395, align 4, !tbaa !99
  %397 = add nsw i32 %396, -1
  store i32 %397, i32* %395, align 4, !tbaa !99
  br label %freeexp.exit30

freeexp.exit30:                                   ; preds = %codecomp.exit29, %385, %389, %394
  %398 = tail call fastcc i32 @condjump(%struct.FuncState* %fs, i32 25, i32 1, i32 %361, i32 %360) #1
  store i32 %398, i32* %384, align 4, !tbaa !103
  store i32 10, i32* %380, align 4, !tbaa !101
  br label %399

; <label>:399                                     ; preds = %0, %freeexp.exit, %luaK_exp2nextreg.exit, %freeexp.exit30, %freeexp.exit27, %freeexp.exit24, %freeexp.exit21, %freeexp.exit18, %freeexp.exit15, %158, %157, %156, %155, %154, %153, %luaK_concat.exit13, %luaK_concat.exit
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @luaK_fixline(%struct.FuncState* nocapture readonly %fs, i32 %line) #0 {
  %1 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 6
  %2 = load i32, i32* %1, align 4, !tbaa !88
  %3 = add nsw i32 %2, -1
  %4 = sext i32 %3 to i64
  %5 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 0
  %6 = load %struct.Proto*, %struct.Proto** %5, align 8, !tbaa !92
  %7 = getelementptr inbounds %struct.Proto, %struct.Proto* %6, i64 0, i32 6
  %8 = load i32*, i32** %7, align 8, !tbaa !111
  %9 = getelementptr inbounds i32, i32* %8, i64 %4
  store i32 %line, i32* %9, align 4, !tbaa !38
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @luaK_setlist(%struct.FuncState* nocapture %fs, i32 %base, i32 %nelems, i32 %tostore) #0 {
  %1 = add nsw i32 %nelems, -1
  %2 = sdiv i32 %1, 50
  %3 = add nsw i32 %2, 1
  %4 = icmp eq i32 %tostore, -1
  %5 = icmp slt i32 %3, 512
  %6 = shl i32 %base, 6
  %tostore.op = shl i32 %tostore, 23
  %7 = select i1 %4, i32 0, i32 %tostore.op
  %8 = or i32 %6, %7
  %9 = or i32 %8, 34
  br i1 %5, label %10, label %18

; <label>:10                                      ; preds = %0
  %11 = shl i32 %3, 14
  %12 = or i32 %11, %9
  %13 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 3
  %14 = load %struct.LexState*, %struct.LexState** %13, align 8, !tbaa !94
  %15 = getelementptr inbounds %struct.LexState, %struct.LexState* %14, i64 0, i32 2
  %16 = load i32, i32* %15, align 4, !tbaa !95
  %17 = tail call fastcc i32 @luaK_code(%struct.FuncState* %fs, i32 %12, i32 %16) #1
  br label %28

; <label>:18                                      ; preds = %0
  %19 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 3
  %20 = load %struct.LexState*, %struct.LexState** %19, align 8, !tbaa !94
  %21 = getelementptr inbounds %struct.LexState, %struct.LexState* %20, i64 0, i32 2
  %22 = load i32, i32* %21, align 4, !tbaa !95
  %23 = tail call fastcc i32 @luaK_code(%struct.FuncState* %fs, i32 %9, i32 %22) #1
  %24 = load %struct.LexState*, %struct.LexState** %19, align 8, !tbaa !94
  %25 = getelementptr inbounds %struct.LexState, %struct.LexState* %24, i64 0, i32 2
  %26 = load i32, i32* %25, align 4, !tbaa !95
  %27 = tail call fastcc i32 @luaK_code(%struct.FuncState* %fs, i32 %3, i32 %26)
  br label %28

; <label>:28                                      ; preds = %18, %10
  %29 = add nsw i32 %base, 1
  %30 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 9
  store i32 %29, i32* %30, align 4, !tbaa !99
  ret void
}

; Function Attrs: nounwind readnone
declare double @floor(double) #7

; Function Attrs: nounwind
declare double @pow(double, double) #5

; Function Attrs: nounwind uwtable
define internal fastcc i32 @luaK_code(%struct.FuncState* nocapture %fs, i32 %i, i32 %line) #0 {
  %1 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 0
  %2 = load %struct.Proto*, %struct.Proto** %1, align 8, !tbaa !92
  %3 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 8
  %4 = load i32, i32* %3, align 4, !tbaa !98
  %5 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 6
  %6 = load i32, i32* %5, align 4, !tbaa !88
  %7 = icmp eq i32 %4, -1
  br i1 %7, label %dischargejpc.exit, label %.lr.ph.i.i

.lr.ph.i.i:                                       ; preds = %0
  %8 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 3
  br label %9

; <label>:9                                       ; preds = %.backedge.i.i._crit_edge, %.lr.ph.i.i
  %fs.idx.val.i.i = phi %struct.Proto* [ %2, %.lr.ph.i.i ], [ %fs.idx.val.i.i.pre, %.backedge.i.i._crit_edge ]
  %.02.i.i = phi i32 [ %4, %.lr.ph.i.i ], [ %.0.i.i.i, %.backedge.i.i._crit_edge ]
  %fs.idx.val.idx.i.i = getelementptr %struct.Proto, %struct.Proto* %fs.idx.val.i.i, i64 0, i32 4
  %fs.idx.val.idx.val.i.i = load i32*, i32** %fs.idx.val.idx.i.i, align 8, !tbaa !93
  %10 = sext i32 %.02.i.i to i64
  %11 = getelementptr inbounds i32, i32* %fs.idx.val.idx.val.i.i, i64 %10
  %12 = load i32, i32* %11, align 4, !tbaa !38
  %13 = lshr i32 %12, 14
  %14 = add nsw i32 %13, -131071
  %15 = icmp eq i32 %14, -1
  %16 = add nsw i32 %.02.i.i, 1
  %17 = add nsw i32 %16, %14
  %.0.i.i.i = select i1 %15, i32 -1, i32 %17
  %18 = icmp sgt i32 %.02.i.i, 0
  br i1 %18, label %19, label %27

; <label>:19                                      ; preds = %9
  %20 = getelementptr inbounds i32, i32* %11, i64 -1
  %21 = load i32, i32* %20, align 4, !tbaa !38
  %22 = and i32 %21, 63
  %23 = zext i32 %22 to i64
  %24 = getelementptr inbounds [38 x i8], [38 x i8]* @luaP_opmodes, i64 0, i64 %23
  %25 = load i8, i8* %24, align 1, !tbaa !76
  %26 = icmp slt i8 %25, 0
  br i1 %26, label %getjumpcontrol.exit.i.i, label %27

; <label>:27                                      ; preds = %19, %9
  br label %getjumpcontrol.exit.i.i

getjumpcontrol.exit.i.i:                          ; preds = %27, %19
  %28 = phi i32 [ %12, %27 ], [ %21, %19 ]
  %.0.i.i.5.i = phi i32* [ %11, %27 ], [ %20, %19 ]
  %29 = and i32 %28, 63
  %30 = icmp eq i32 %29, 27
  br i1 %30, label %31, label %47

; <label>:31                                      ; preds = %getjumpcontrol.exit.i.i
  %32 = lshr i32 %28, 23
  %33 = shl nuw nsw i32 %32, 6
  %34 = and i32 %28, 8372224
  %35 = or i32 %34, %33
  %36 = or i32 %35, 26
  store i32 %36, i32* %.0.i.i.5.i, align 4, !tbaa !38
  %.neg.i.i = xor i32 %.02.i.i, -1
  %37 = add i32 %6, %.neg.i.i
  %ispos.i.i = icmp sgt i32 %37, -1
  %neg.i.i = sub i32 0, %37
  %38 = select i1 %ispos.i.i, i32 %37, i32 %neg.i.i
  %39 = icmp sgt i32 %38, 131071
  br i1 %39, label %40, label %fixjump.exit.i

; <label>:40                                      ; preds = %31
  %41 = load %struct.LexState*, %struct.LexState** %8, align 8, !tbaa !94
  tail call void @luaX_syntaxerror(%struct.LexState* %41, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1.37, i64 0, i64 0)) #1
  br label %fixjump.exit.i

fixjump.exit.i:                                   ; preds = %40, %31
  %42 = load i32, i32* %11, align 4, !tbaa !38
  %43 = and i32 %42, 16383
  %44 = shl i32 %37, 14
  %45 = add i32 %44, 2147467264
  %46 = or i32 %43, %45
  br label %.backedge.i.i

; <label>:47                                      ; preds = %getjumpcontrol.exit.i.i
  %.neg.i.1.i = xor i32 %.02.i.i, -1
  %48 = add i32 %6, %.neg.i.1.i
  %ispos.i.2.i = icmp sgt i32 %48, -1
  %neg.i.3.i = sub i32 0, %48
  %49 = select i1 %ispos.i.2.i, i32 %48, i32 %neg.i.3.i
  %50 = icmp sgt i32 %49, 131071
  br i1 %50, label %51, label %fixjump.exit4.i

; <label>:51                                      ; preds = %47
  %52 = load %struct.LexState*, %struct.LexState** %8, align 8, !tbaa !94
  tail call void @luaX_syntaxerror(%struct.LexState* %52, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1.37, i64 0, i64 0)) #1
  %.pre.i = load i32, i32* %11, align 4, !tbaa !38
  br label %fixjump.exit4.i

fixjump.exit4.i:                                  ; preds = %51, %47
  %53 = phi i32 [ %12, %47 ], [ %.pre.i, %51 ]
  %54 = and i32 %53, 16383
  %55 = shl i32 %48, 14
  %56 = add i32 %55, 2147467264
  %57 = or i32 %54, %56
  br label %.backedge.i.i

.backedge.i.i:                                    ; preds = %fixjump.exit4.i, %fixjump.exit.i
  %storemerge.i = phi i32 [ %57, %fixjump.exit4.i ], [ %46, %fixjump.exit.i ]
  store i32 %storemerge.i, i32* %11, align 4, !tbaa !38
  %58 = icmp eq i32 %.0.i.i.i, -1
  br i1 %58, label %dischargejpc.exit.loopexit, label %.backedge.i.i._crit_edge

.backedge.i.i._crit_edge:                         ; preds = %.backedge.i.i
  %fs.idx.val.i.i.pre = load %struct.Proto*, %struct.Proto** %1, align 8, !tbaa !92
  br label %9

dischargejpc.exit.loopexit:                       ; preds = %.backedge.i.i
  %.pre = load i32, i32* %5, align 4, !tbaa !88
  br label %dischargejpc.exit

dischargejpc.exit:                                ; preds = %dischargejpc.exit.loopexit, %0
  %59 = phi i32 [ %.pre, %dischargejpc.exit.loopexit ], [ %6, %0 ]
  store i32 -1, i32* %3, align 4, !tbaa !98
  %60 = getelementptr inbounds %struct.Proto, %struct.Proto* %2, i64 0, i32 12
  %61 = load i32, i32* %60, align 4, !tbaa !112
  %62 = icmp slt i32 %59, %61
  br i1 %62, label %dischargejpc.exit._crit_edge, label %63

dischargejpc.exit._crit_edge:                     ; preds = %dischargejpc.exit
  %.phi.trans.insert = getelementptr inbounds %struct.Proto, %struct.Proto* %2, i64 0, i32 4
  %.pre3 = load i32*, i32** %.phi.trans.insert, align 8, !tbaa !93
  br label %71

; <label>:63                                      ; preds = %dischargejpc.exit
  %64 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 4
  %65 = load %struct.lua_State*, %struct.lua_State** %64, align 8, !tbaa !113
  %66 = getelementptr inbounds %struct.Proto, %struct.Proto* %2, i64 0, i32 4
  %67 = bitcast i32** %66 to i8**
  %68 = load i8*, i8** %67, align 8, !tbaa !93
  %69 = tail call i8* @luaM_growaux_(%struct.lua_State* %65, i8* %68, i32* %60, i64 4, i32 2147483645, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3.53, i64 0, i64 0)) #1
  store i8* %69, i8** %67, align 8, !tbaa !93
  %.pre2 = load i32, i32* %5, align 4, !tbaa !88
  %70 = bitcast i8* %69 to i32*
  br label %71

; <label>:71                                      ; preds = %dischargejpc.exit._crit_edge, %63
  %72 = phi i32* [ %.pre3, %dischargejpc.exit._crit_edge ], [ %70, %63 ]
  %73 = phi i32 [ %59, %dischargejpc.exit._crit_edge ], [ %.pre2, %63 ]
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds i32, i32* %72, i64 %74
  store i32 %i, i32* %75, align 4, !tbaa !38
  %76 = load i32, i32* %5, align 4, !tbaa !88
  %77 = getelementptr inbounds %struct.Proto, %struct.Proto* %2, i64 0, i32 13
  %78 = load i32, i32* %77, align 4, !tbaa !114
  %79 = icmp slt i32 %76, %78
  br i1 %79, label %._crit_edge, label %80

._crit_edge:                                      ; preds = %71
  %.phi.trans.insert5 = getelementptr inbounds %struct.Proto, %struct.Proto* %2, i64 0, i32 6
  %.pre6 = load i32*, i32** %.phi.trans.insert5, align 8, !tbaa !111
  br label %88

; <label>:80                                      ; preds = %71
  %81 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 4
  %82 = load %struct.lua_State*, %struct.lua_State** %81, align 8, !tbaa !113
  %83 = getelementptr inbounds %struct.Proto, %struct.Proto* %2, i64 0, i32 6
  %84 = bitcast i32** %83 to i8**
  %85 = load i8*, i8** %84, align 8, !tbaa !111
  %86 = tail call i8* @luaM_growaux_(%struct.lua_State* %82, i8* %85, i32* %77, i64 4, i32 2147483645, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3.53, i64 0, i64 0)) #1
  store i8* %86, i8** %84, align 8, !tbaa !111
  %.pre4 = load i32, i32* %5, align 4, !tbaa !88
  %87 = bitcast i8* %86 to i32*
  br label %88

; <label>:88                                      ; preds = %._crit_edge, %80
  %89 = phi i32* [ %.pre6, %._crit_edge ], [ %87, %80 ]
  %90 = phi i32 [ %76, %._crit_edge ], [ %.pre4, %80 ]
  %91 = sext i32 %90 to i64
  %92 = getelementptr inbounds i32, i32* %89, i64 %91
  store i32 %line, i32* %92, align 4, !tbaa !38
  %93 = load i32, i32* %5, align 4, !tbaa !88
  %94 = add nsw i32 %93, 1
  store i32 %94, i32* %5, align 4, !tbaa !88
  ret i32 %93
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @addk(%struct.FuncState* nocapture %fs, %struct.lua_TValue* %k, %struct.lua_TValue* nocapture readonly %v) #0 {
  %1 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 4
  %2 = load %struct.lua_State*, %struct.lua_State** %1, align 8, !tbaa !113
  %3 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 1
  %4 = load %struct.Table*, %struct.Table** %3, align 8, !tbaa !109
  %5 = tail call %struct.lua_TValue* @luaH_set(%struct.lua_State* %2, %struct.Table* %4, %struct.lua_TValue* %k) #1
  %6 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 0
  %7 = load %struct.Proto*, %struct.Proto** %6, align 8, !tbaa !92
  %8 = getelementptr inbounds %struct.Proto, %struct.Proto* %7, i64 0, i32 11
  %9 = load i32, i32* %8, align 4, !tbaa !115
  %10 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %5, i64 0, i32 1
  %11 = load i32, i32* %10, align 4, !tbaa !10
  %12 = icmp eq i32 %11, 3
  br i1 %12, label %13, label %17

; <label>:13                                      ; preds = %0
  %14 = bitcast %struct.lua_TValue* %5 to double*
  %15 = load double, double* %14, align 8, !tbaa !36
  %16 = fptosi double %15 to i32
  br label %80

; <label>:17                                      ; preds = %0
  %18 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 10
  %19 = load i32, i32* %18, align 4, !tbaa !108
  %20 = sitofp i32 %19 to double
  %21 = bitcast %struct.lua_TValue* %5 to double*
  store double %20, double* %21, align 8, !tbaa !36
  store i32 3, i32* %10, align 4, !tbaa !10
  %22 = icmp slt i32 %19, %9
  br i1 %22, label %.preheader, label %23

; <label>:23                                      ; preds = %17
  %24 = getelementptr inbounds %struct.Proto, %struct.Proto* %7, i64 0, i32 3
  %25 = bitcast %struct.lua_TValue** %24 to i8**
  %26 = load i8*, i8** %25, align 8, !tbaa !116
  %27 = tail call i8* @luaM_growaux_(%struct.lua_State* %2, i8* %26, i32* %8, i64 16, i32 262143, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.2.52, i64 0, i64 0)) #1
  store i8* %27, i8** %25, align 8, !tbaa !116
  %.pre = load i32, i32* %8, align 4, !tbaa !115
  br label %.preheader

.preheader:                                       ; preds = %23, %17
  %28 = phi i32 [ %.pre, %23 ], [ %9, %17 ]
  %29 = icmp slt i32 %9, %28
  %30 = getelementptr inbounds %struct.Proto, %struct.Proto* %7, i64 0, i32 3
  %31 = load %struct.lua_TValue*, %struct.lua_TValue** %30, align 8, !tbaa !116
  br i1 %29, label %.lr.ph, label %._crit_edge

.lr.ph:                                           ; preds = %.preheader
  %32 = sext i32 %9 to i64
  %33 = sext i32 %28 to i64
  %34 = sext i32 %28 to i64
  %35 = sext i32 %9 to i64
  %36 = sub nsw i64 %34, %35
  %37 = add nsw i64 %34, -1
  %38 = sub nsw i64 %37, %35
  %xtraiter = and i64 %36, 7
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod, label %.lr.ph.split, label %.preheader3

.preheader3:                                      ; preds = %.lr.ph
  br label %39

; <label>:39                                      ; preds = %.preheader3, %39
  %indvars.iv.prol = phi i64 [ %indvars.iv.next.prol, %39 ], [ %32, %.preheader3 ]
  %prol.iter = phi i64 [ %prol.iter.sub, %39 ], [ %xtraiter, %.preheader3 ]
  %indvars.iv.next.prol = add nsw i64 %indvars.iv.prol, 1
  %40 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %31, i64 %indvars.iv.prol, i32 1
  store i32 0, i32* %40, align 4, !tbaa !10
  %prol.iter.sub = add i64 %prol.iter, -1
  %prol.iter.cmp = icmp eq i64 %prol.iter.sub, 0
  br i1 %prol.iter.cmp, label %.lr.ph.split.loopexit, label %39, !llvm.loop !117

.lr.ph.split.loopexit:                            ; preds = %39
  %indvars.iv.next.prol.lcssa = phi i64 [ %indvars.iv.next.prol, %39 ]
  br label %.lr.ph.split

.lr.ph.split:                                     ; preds = %.lr.ph.split.loopexit, %.lr.ph
  %indvars.iv.unr = phi i64 [ %32, %.lr.ph ], [ %indvars.iv.next.prol.lcssa, %.lr.ph.split.loopexit ]
  %41 = icmp ult i64 %38, 7
  br i1 %41, label %._crit_edge.loopexit, label %.lr.ph.split.split

.lr.ph.split.split:                               ; preds = %.lr.ph.split
  br label %42

; <label>:42                                      ; preds = %42, %.lr.ph.split.split
  %indvars.iv = phi i64 [ %indvars.iv.unr, %.lr.ph.split.split ], [ %indvars.iv.next.7, %42 ]
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %43 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %31, i64 %indvars.iv, i32 1
  store i32 0, i32* %43, align 4, !tbaa !10
  %indvars.iv.next.1 = add nsw i64 %indvars.iv, 2
  %44 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %31, i64 %indvars.iv.next, i32 1
  store i32 0, i32* %44, align 4, !tbaa !10
  %indvars.iv.next.2 = add nsw i64 %indvars.iv, 3
  %45 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %31, i64 %indvars.iv.next.1, i32 1
  store i32 0, i32* %45, align 4, !tbaa !10
  %indvars.iv.next.3 = add nsw i64 %indvars.iv, 4
  %46 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %31, i64 %indvars.iv.next.2, i32 1
  store i32 0, i32* %46, align 4, !tbaa !10
  %indvars.iv.next.4 = add nsw i64 %indvars.iv, 5
  %47 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %31, i64 %indvars.iv.next.3, i32 1
  store i32 0, i32* %47, align 4, !tbaa !10
  %indvars.iv.next.5 = add nsw i64 %indvars.iv, 6
  %48 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %31, i64 %indvars.iv.next.4, i32 1
  store i32 0, i32* %48, align 4, !tbaa !10
  %indvars.iv.next.6 = add nsw i64 %indvars.iv, 7
  %49 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %31, i64 %indvars.iv.next.5, i32 1
  store i32 0, i32* %49, align 4, !tbaa !10
  %indvars.iv.next.7 = add nsw i64 %indvars.iv, 8
  %50 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %31, i64 %indvars.iv.next.6, i32 1
  store i32 0, i32* %50, align 4, !tbaa !10
  %51 = icmp slt i64 %indvars.iv.next.7, %33
  br i1 %51, label %42, label %._crit_edge.loopexit.unr-lcssa

._crit_edge.loopexit.unr-lcssa:                   ; preds = %42
  br label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %.lr.ph.split, %._crit_edge.loopexit.unr-lcssa
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %.preheader
  %52 = load i32, i32* %18, align 4, !tbaa !108
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %31, i64 %53
  %55 = bitcast %struct.lua_TValue* %v to i64*
  %56 = bitcast %struct.lua_TValue* %54 to i64*
  %57 = load i64, i64* %55, align 8
  store i64 %57, i64* %56, align 8
  %58 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %v, i64 0, i32 1
  %59 = load i32, i32* %58, align 4, !tbaa !10
  %60 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %31, i64 %53, i32 1
  store i32 %59, i32* %60, align 4, !tbaa !10
  %61 = load i32, i32* %58, align 4, !tbaa !10
  %62 = icmp sgt i32 %61, 3
  br i1 %62, label %63, label %77

; <label>:63                                      ; preds = %._crit_edge
  %64 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %v, i64 0, i32 0, i32 0
  %65 = load %union.GCObject*, %union.GCObject** %64, align 8, !tbaa !25
  %66 = getelementptr inbounds %union.GCObject, %union.GCObject* %65, i64 0, i32 0, i32 2
  %67 = load i8, i8* %66, align 1, !tbaa !33
  %68 = and i8 %67, 3
  %69 = icmp eq i8 %68, 0
  br i1 %69, label %77, label %70

; <label>:70                                      ; preds = %63
  %71 = getelementptr inbounds %struct.Proto, %struct.Proto* %7, i64 0, i32 2
  %72 = load i8, i8* %71, align 1, !tbaa !33
  %73 = and i8 %72, 4
  %74 = icmp eq i8 %73, 0
  br i1 %74, label %77, label %75

; <label>:75                                      ; preds = %70
  %76 = bitcast %struct.Proto* %7 to %union.GCObject*
  tail call void @luaC_barrierf(%struct.lua_State* %2, %union.GCObject* %76, %union.GCObject* %65) #1
  br label %77

; <label>:77                                      ; preds = %70, %63, %75, %._crit_edge
  %78 = load i32, i32* %18, align 4, !tbaa !108
  %79 = add nsw i32 %78, 1
  store i32 %79, i32* %18, align 4, !tbaa !108
  br label %80

; <label>:80                                      ; preds = %77, %13
  %.0 = phi i32 [ %16, %13 ], [ %78, %77 ]
  ret i32 %.0
}

; Function Attrs: nounwind uwtable
define internal fastcc void @exp2reg(%struct.FuncState* %fs, %struct.expdesc* nocapture %e, i32 %reg) #0 {
  tail call fastcc void @discharge2reg(%struct.FuncState* %fs, %struct.expdesc* %e, i32 %reg)
  %1 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %e, i64 0, i32 0
  %2 = load i32, i32* %1, align 4, !tbaa !101
  %3 = icmp eq i32 %2, 10
  %4 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %e, i64 0, i32 2
  br i1 %3, label %5, label %luaK_concat.exit

; <label>:5                                       ; preds = %0
  %6 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %e, i64 0, i32 1
  %7 = bitcast %union.SemInfo* %6 to i32*
  %8 = load i32, i32* %7, align 4, !tbaa !103
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %luaK_concat.exit, label %10

; <label>:10                                      ; preds = %5
  %11 = load i32, i32* %4, align 4, !tbaa !38
  %12 = icmp eq i32 %11, -1
  br i1 %12, label %13, label %.preheader.i

.preheader.i:                                     ; preds = %10
  %fs.idx.i = getelementptr %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 0
  %fs.idx.val.i = load %struct.Proto*, %struct.Proto** %fs.idx.i, align 8, !tbaa !92
  %fs.idx.val.idx.i = getelementptr %struct.Proto, %struct.Proto* %fs.idx.val.i, i64 0, i32 4
  %fs.idx.val.idx.val.i = load i32*, i32** %fs.idx.val.idx.i, align 8, !tbaa !93
  br label %14

; <label>:13                                      ; preds = %10
  store i32 %8, i32* %4, align 4, !tbaa !38
  br label %luaK_concat.exit

; <label>:14                                      ; preds = %14, %.preheader.i
  %list.0.i = phi i32 [ %.0.i.i, %14 ], [ %11, %.preheader.i ]
  %15 = sext i32 %list.0.i to i64
  %16 = getelementptr inbounds i32, i32* %fs.idx.val.idx.val.i, i64 %15
  %17 = load i32, i32* %16, align 4, !tbaa !38
  %18 = lshr i32 %17, 14
  %19 = add nsw i32 %18, -131071
  %20 = icmp eq i32 %19, -1
  %21 = add nsw i32 %list.0.i, 1
  %22 = add nsw i32 %21, %19
  %.0.i.i = select i1 %20, i32 -1, i32 %22
  %23 = icmp eq i32 %.0.i.i, -1
  br i1 %23, label %24, label %14

; <label>:24                                      ; preds = %14
  %.lcssa115 = phi i32 [ %17, %14 ]
  %.lcssa114 = phi i32* [ %16, %14 ]
  %list.0.i.lcssa = phi i32 [ %list.0.i, %14 ]
  %.neg.i.i = xor i32 %list.0.i.lcssa, -1
  %25 = add i32 %8, %.neg.i.i
  %ispos.i.i = icmp sgt i32 %25, -1
  %neg.i.i = sub i32 0, %25
  %26 = select i1 %ispos.i.i, i32 %25, i32 %neg.i.i
  %27 = icmp sgt i32 %26, 131071
  br i1 %27, label %28, label %fixjump.exit.i

; <label>:28                                      ; preds = %24
  %29 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 3
  %30 = load %struct.LexState*, %struct.LexState** %29, align 8, !tbaa !94
  tail call void @luaX_syntaxerror(%struct.LexState* %30, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1.37, i64 0, i64 0)) #1
  %.pre.i = load i32, i32* %.lcssa114, align 4, !tbaa !38
  br label %fixjump.exit.i

fixjump.exit.i:                                   ; preds = %28, %24
  %31 = phi i32 [ %.lcssa115, %24 ], [ %.pre.i, %28 ]
  %32 = and i32 %31, 16383
  %33 = shl i32 %25, 14
  %34 = add i32 %33, 2147467264
  %35 = or i32 %32, %34
  store i32 %35, i32* %.lcssa114, align 4, !tbaa !38
  br label %luaK_concat.exit

luaK_concat.exit:                                 ; preds = %0, %fixjump.exit.i, %13, %5
  %36 = load i32, i32* %4, align 4, !tbaa !106
  %37 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %e, i64 0, i32 3
  %38 = load i32, i32* %37, align 4, !tbaa !107
  %39 = icmp eq i32 %36, %38
  br i1 %39, label %patchlistaux.exit, label %40

; <label>:40                                      ; preds = %luaK_concat.exit
  %41 = icmp eq i32 %36, -1
  br i1 %41, label %.loopexit, label %.lr.ph.i

.lr.ph.i:                                         ; preds = %40
  %fs.idx3.i = getelementptr %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 0
  %fs.idx3.val.i = load %struct.Proto*, %struct.Proto** %fs.idx3.i, align 8, !tbaa !92
  %fs.idx3.val.idx.i = getelementptr %struct.Proto, %struct.Proto* %fs.idx3.val.i, i64 0, i32 4
  %fs.idx3.val.idx.val.i = load i32*, i32** %fs.idx3.val.idx.i, align 8, !tbaa !93
  br label %42

; <label>:42                                      ; preds = %select.unfold.i, %.lr.ph.i
  %.026.i = phi i32 [ %36, %.lr.ph.i ], [ %.5.i, %select.unfold.i ]
  %43 = sext i32 %.026.i to i64
  %44 = getelementptr inbounds i32, i32* %fs.idx3.val.idx.val.i, i64 %43
  %45 = icmp sgt i32 %.026.i, 0
  br i1 %45, label %46, label %54

; <label>:46                                      ; preds = %42
  %47 = getelementptr inbounds i32, i32* %44, i64 -1
  %48 = load i32, i32* %47, align 4, !tbaa !38
  %49 = and i32 %48, 63
  %50 = zext i32 %49 to i64
  %51 = getelementptr inbounds [38 x i8], [38 x i8]* @luaP_opmodes, i64 0, i64 %50
  %52 = load i8, i8* %51, align 1, !tbaa !76
  %53 = icmp slt i8 %52, 0
  br i1 %53, label %getjumpcontrol.exit.i, label %54

; <label>:54                                      ; preds = %46, %42
  %.pre.i.1 = load i32, i32* %44, align 4, !tbaa !38
  br label %getjumpcontrol.exit.i

getjumpcontrol.exit.i:                            ; preds = %54, %46
  %55 = phi i32 [ %.pre.i.1, %54 ], [ %48, %46 ]
  %56 = and i32 %55, 63
  %57 = icmp eq i32 %56, 27
  br i1 %57, label %select.unfold.i, label %need_value.exit.thread63.loopexit105

select.unfold.i:                                  ; preds = %getjumpcontrol.exit.i
  %58 = load i32, i32* %44, align 4, !tbaa !38
  %59 = lshr i32 %58, 14
  %60 = add nsw i32 %59, -131071
  %61 = icmp eq i32 %60, -1
  %62 = add nsw i32 %.026.i, 1
  %63 = add nsw i32 %62, %60
  %.5.i = select i1 %61, i32 -1, i32 %63
  %64 = icmp eq i32 %.5.i, -1
  br i1 %64, label %.loopexit.loopexit, label %42

.loopexit.loopexit:                               ; preds = %select.unfold.i
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %40
  %65 = icmp eq i32 %38, -1
  br i1 %65, label %luaK_patchtohere.exit, label %.lr.ph.i.12

.lr.ph.i.12:                                      ; preds = %.loopexit
  %fs.idx3.i.8 = getelementptr %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 0
  %fs.idx3.val.i.9 = load %struct.Proto*, %struct.Proto** %fs.idx3.i.8, align 8, !tbaa !92
  %fs.idx3.val.idx.i.10 = getelementptr %struct.Proto, %struct.Proto* %fs.idx3.val.i.9, i64 0, i32 4
  %fs.idx3.val.idx.val.i.11 = load i32*, i32** %fs.idx3.val.idx.i.10, align 8, !tbaa !93
  br label %66

; <label>:66                                      ; preds = %select.unfold.i.17, %.lr.ph.i.12
  %.026.i.13 = phi i32 [ %38, %.lr.ph.i.12 ], [ %.5.i.16, %select.unfold.i.17 ]
  %67 = sext i32 %.026.i.13 to i64
  %68 = getelementptr inbounds i32, i32* %fs.idx3.val.idx.val.i.11, i64 %67
  %69 = icmp sgt i32 %.026.i.13, 0
  br i1 %69, label %70, label %78

; <label>:70                                      ; preds = %66
  %71 = getelementptr inbounds i32, i32* %68, i64 -1
  %72 = load i32, i32* %71, align 4, !tbaa !38
  %73 = and i32 %72, 63
  %74 = zext i32 %73 to i64
  %75 = getelementptr inbounds [38 x i8], [38 x i8]* @luaP_opmodes, i64 0, i64 %74
  %76 = load i8, i8* %75, align 1, !tbaa !76
  %77 = icmp slt i8 %76, 0
  br i1 %77, label %getjumpcontrol.exit.i.15, label %78

; <label>:78                                      ; preds = %70, %66
  %.pre.i.14 = load i32, i32* %68, align 4, !tbaa !38
  br label %getjumpcontrol.exit.i.15

getjumpcontrol.exit.i.15:                         ; preds = %78, %70
  %79 = phi i32 [ %.pre.i.14, %78 ], [ %72, %70 ]
  %80 = and i32 %79, 63
  %81 = icmp eq i32 %80, 27
  br i1 %81, label %select.unfold.i.17, label %need_value.exit.thread63.loopexit

select.unfold.i.17:                               ; preds = %getjumpcontrol.exit.i.15
  %82 = load i32, i32* %68, align 4, !tbaa !38
  %83 = lshr i32 %82, 14
  %84 = add nsw i32 %83, -131071
  %85 = icmp eq i32 %84, -1
  %86 = add nsw i32 %.026.i.13, 1
  %87 = add nsw i32 %86, %84
  %.5.i.16 = select i1 %85, i32 -1, i32 %87
  %88 = icmp eq i32 %.5.i.16, -1
  br i1 %88, label %luaK_patchtohere.exit.loopexit, label %66

need_value.exit.thread63.loopexit:                ; preds = %getjumpcontrol.exit.i.15
  br label %need_value.exit.thread63

need_value.exit.thread63.loopexit105:             ; preds = %getjumpcontrol.exit.i
  br label %need_value.exit.thread63

need_value.exit.thread63:                         ; preds = %need_value.exit.thread63.loopexit105, %need_value.exit.thread63.loopexit
  %89 = load i32, i32* %1, align 4, !tbaa !101
  %90 = icmp eq i32 %89, 10
  br i1 %90, label %need_value.exit.thread63.luaK_jump.exit_crit_edge, label %91

need_value.exit.thread63.luaK_jump.exit_crit_edge: ; preds = %need_value.exit.thread63
  %.pre80 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 3
  %.pre82 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 8
  br label %luaK_jump.exit

; <label>:91                                      ; preds = %need_value.exit.thread63
  %92 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 8
  %93 = load i32, i32* %92, align 4, !tbaa !98
  store i32 -1, i32* %92, align 4, !tbaa !98
  %94 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 3
  %95 = load %struct.LexState*, %struct.LexState** %94, align 8, !tbaa !94
  %96 = getelementptr inbounds %struct.LexState, %struct.LexState* %95, i64 0, i32 2
  %97 = load i32, i32* %96, align 4, !tbaa !95
  %98 = tail call fastcc i32 @luaK_code(%struct.FuncState* %fs, i32 2147450902, i32 %97) #1
  %99 = icmp eq i32 %93, -1
  br i1 %99, label %luaK_jump.exit, label %100

; <label>:100                                     ; preds = %91
  %101 = icmp eq i32 %98, -1
  br i1 %101, label %luaK_jump.exit, label %.preheader.i.i

.preheader.i.i:                                   ; preds = %100
  %fs.idx.i.i = getelementptr %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 0
  %fs.idx.val.i.i = load %struct.Proto*, %struct.Proto** %fs.idx.i.i, align 8, !tbaa !92
  %fs.idx.val.idx.i.i = getelementptr %struct.Proto, %struct.Proto* %fs.idx.val.i.i, i64 0, i32 4
  %fs.idx.val.idx.val.i.i = load i32*, i32** %fs.idx.val.idx.i.i, align 8, !tbaa !93
  br label %102

; <label>:102                                     ; preds = %102, %.preheader.i.i
  %list.0.i.i = phi i32 [ %.0.i.i.i, %102 ], [ %98, %.preheader.i.i ]
  %103 = sext i32 %list.0.i.i to i64
  %104 = getelementptr inbounds i32, i32* %fs.idx.val.idx.val.i.i, i64 %103
  %105 = load i32, i32* %104, align 4, !tbaa !38
  %106 = lshr i32 %105, 14
  %107 = add nsw i32 %106, -131071
  %108 = icmp eq i32 %107, -1
  %109 = add nsw i32 %list.0.i.i, 1
  %110 = add nsw i32 %109, %107
  %.0.i.i.i = select i1 %108, i32 -1, i32 %110
  %111 = icmp eq i32 %.0.i.i.i, -1
  br i1 %111, label %112, label %102

; <label>:112                                     ; preds = %102
  %.lcssa113 = phi i32 [ %105, %102 ]
  %.lcssa112 = phi i32* [ %104, %102 ]
  %list.0.i.i.lcssa = phi i32 [ %list.0.i.i, %102 ]
  %.neg.i.i.i = xor i32 %list.0.i.i.lcssa, -1
  %113 = add i32 %93, %.neg.i.i.i
  %ispos.i.i.i = icmp sgt i32 %113, -1
  %neg.i.i.i = sub i32 0, %113
  %114 = select i1 %ispos.i.i.i, i32 %113, i32 %neg.i.i.i
  %115 = icmp sgt i32 %114, 131071
  br i1 %115, label %116, label %fixjump.exit.i.i

; <label>:116                                     ; preds = %112
  %117 = load %struct.LexState*, %struct.LexState** %94, align 8, !tbaa !94
  tail call void @luaX_syntaxerror(%struct.LexState* %117, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1.37, i64 0, i64 0)) #1
  %.pre.i.i = load i32, i32* %.lcssa112, align 4, !tbaa !38
  br label %fixjump.exit.i.i

fixjump.exit.i.i:                                 ; preds = %116, %112
  %118 = phi i32 [ %.lcssa113, %112 ], [ %.pre.i.i, %116 ]
  %119 = and i32 %118, 16383
  %120 = shl i32 %113, 14
  %121 = add i32 %120, 2147467264
  %122 = or i32 %119, %121
  store i32 %122, i32* %.lcssa112, align 4, !tbaa !38
  br label %luaK_jump.exit

luaK_jump.exit:                                   ; preds = %need_value.exit.thread63.luaK_jump.exit_crit_edge, %fixjump.exit.i.i, %100, %91
  %.pre-phi83 = phi i32* [ %.pre82, %need_value.exit.thread63.luaK_jump.exit_crit_edge ], [ %92, %fixjump.exit.i.i ], [ %92, %100 ], [ %92, %91 ]
  %.pre-phi81 = phi %struct.LexState** [ %.pre80, %need_value.exit.thread63.luaK_jump.exit_crit_edge ], [ %94, %fixjump.exit.i.i ], [ %94, %100 ], [ %94, %91 ]
  %123 = phi i32 [ -1, %need_value.exit.thread63.luaK_jump.exit_crit_edge ], [ %98, %fixjump.exit.i.i ], [ %93, %100 ], [ %98, %91 ]
  %124 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 6
  %125 = load i32, i32* %124, align 4, !tbaa !88
  %126 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 7
  store i32 %125, i32* %126, align 4, !tbaa !90
  %127 = shl i32 %reg, 6
  %128 = or i32 %127, 16386
  %129 = load %struct.LexState*, %struct.LexState** %.pre-phi81, align 8, !tbaa !94
  %130 = getelementptr inbounds %struct.LexState, %struct.LexState* %129, i64 0, i32 2
  %131 = load i32, i32* %130, align 4, !tbaa !95
  %132 = tail call fastcc i32 @luaK_code(%struct.FuncState* %fs, i32 %128, i32 %131) #1
  %133 = load i32, i32* %124, align 4, !tbaa !88
  store i32 %133, i32* %126, align 4, !tbaa !90
  %134 = or i32 %127, 8388610
  %135 = load %struct.LexState*, %struct.LexState** %.pre-phi81, align 8, !tbaa !94
  %136 = getelementptr inbounds %struct.LexState, %struct.LexState* %135, i64 0, i32 2
  %137 = load i32, i32* %136, align 4, !tbaa !95
  %138 = tail call fastcc i32 @luaK_code(%struct.FuncState* %fs, i32 %134, i32 %137) #1
  %139 = load i32, i32* %124, align 4, !tbaa !88
  store i32 %139, i32* %126, align 4, !tbaa !90
  %140 = icmp eq i32 %123, -1
  br i1 %140, label %luaK_patchtohere.exit, label %141

; <label>:141                                     ; preds = %luaK_jump.exit
  %142 = load i32, i32* %.pre-phi83, align 4, !tbaa !38
  %143 = icmp eq i32 %142, -1
  br i1 %143, label %144, label %.preheader.i.i.31

.preheader.i.i.31:                                ; preds = %141
  %fs.idx.i.i.27 = getelementptr %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 0
  %fs.idx.val.i.i.28 = load %struct.Proto*, %struct.Proto** %fs.idx.i.i.27, align 8, !tbaa !92
  %fs.idx.val.idx.i.i.29 = getelementptr %struct.Proto, %struct.Proto* %fs.idx.val.i.i.28, i64 0, i32 4
  %fs.idx.val.idx.val.i.i.30 = load i32*, i32** %fs.idx.val.idx.i.i.29, align 8, !tbaa !93
  br label %145

; <label>:144                                     ; preds = %141
  store i32 %123, i32* %.pre-phi83, align 4, !tbaa !38
  br label %luaK_patchtohere.exit

; <label>:145                                     ; preds = %145, %.preheader.i.i.31
  %list.0.i.i.32 = phi i32 [ %.0.i.i.i.33, %145 ], [ %142, %.preheader.i.i.31 ]
  %146 = sext i32 %list.0.i.i.32 to i64
  %147 = getelementptr inbounds i32, i32* %fs.idx.val.idx.val.i.i.30, i64 %146
  %148 = load i32, i32* %147, align 4, !tbaa !38
  %149 = lshr i32 %148, 14
  %150 = add nsw i32 %149, -131071
  %151 = icmp eq i32 %150, -1
  %152 = add nsw i32 %list.0.i.i.32, 1
  %153 = add nsw i32 %152, %150
  %.0.i.i.i.33 = select i1 %151, i32 -1, i32 %153
  %154 = icmp eq i32 %.0.i.i.i.33, -1
  br i1 %154, label %155, label %145

; <label>:155                                     ; preds = %145
  %.lcssa111 = phi i32 [ %148, %145 ]
  %.lcssa = phi i32* [ %147, %145 ]
  %list.0.i.i.32.lcssa = phi i32 [ %list.0.i.i.32, %145 ]
  %.neg.i.i.i.34 = xor i32 %list.0.i.i.32.lcssa, -1
  %156 = add i32 %123, %.neg.i.i.i.34
  %ispos.i.i.i.35 = icmp sgt i32 %156, -1
  %neg.i.i.i.36 = sub i32 0, %156
  %157 = select i1 %ispos.i.i.i.35, i32 %156, i32 %neg.i.i.i.36
  %158 = icmp sgt i32 %157, 131071
  br i1 %158, label %159, label %fixjump.exit.i.i.38

; <label>:159                                     ; preds = %155
  %160 = load %struct.LexState*, %struct.LexState** %.pre-phi81, align 8, !tbaa !94
  tail call void @luaX_syntaxerror(%struct.LexState* %160, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1.37, i64 0, i64 0)) #1
  %.pre.i.i.37 = load i32, i32* %.lcssa, align 4, !tbaa !38
  br label %fixjump.exit.i.i.38

fixjump.exit.i.i.38:                              ; preds = %159, %155
  %161 = phi i32 [ %.lcssa111, %155 ], [ %.pre.i.i.37, %159 ]
  %162 = and i32 %161, 16383
  %163 = shl i32 %156, 14
  %164 = add i32 %163, 2147467264
  %165 = or i32 %162, %164
  store i32 %165, i32* %.lcssa, align 4, !tbaa !38
  br label %luaK_patchtohere.exit

luaK_patchtohere.exit.loopexit:                   ; preds = %select.unfold.i.17
  br label %luaK_patchtohere.exit

luaK_patchtohere.exit:                            ; preds = %luaK_patchtohere.exit.loopexit, %.loopexit, %fixjump.exit.i.i.38, %144, %luaK_jump.exit
  %p_t.0 = phi i32 [ %138, %luaK_jump.exit ], [ %138, %144 ], [ %138, %fixjump.exit.i.i.38 ], [ -1, %.loopexit ], [ -1, %luaK_patchtohere.exit.loopexit ]
  %p_f.0 = phi i32 [ %132, %luaK_jump.exit ], [ %132, %144 ], [ %132, %fixjump.exit.i.i.38 ], [ -1, %.loopexit ], [ -1, %luaK_patchtohere.exit.loopexit ]
  %166 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 6
  %167 = load i32, i32* %166, align 4, !tbaa !88
  %168 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 7
  store i32 %167, i32* %168, align 4, !tbaa !90
  %169 = load i32, i32* %37, align 4, !tbaa !107
  %170 = icmp eq i32 %169, -1
  br i1 %170, label %patchlistaux.exit47, label %.lr.ph.i.40

.lr.ph.i.40:                                      ; preds = %luaK_patchtohere.exit
  %fs.idx.i.39 = getelementptr %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 0
  %171 = icmp eq i32 %reg, 255
  %172 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 3
  %173 = shl i32 %reg, 6
  %174 = and i32 %173, 16320
  br i1 %171, label %.lr.ph.i.40.split.us.preheader, label %.lr.ph.i.40..lr.ph.i.40.split_crit_edge.preheader

.lr.ph.i.40..lr.ph.i.40.split_crit_edge.preheader: ; preds = %.lr.ph.i.40
  br label %.lr.ph.i.40..lr.ph.i.40.split_crit_edge

.lr.ph.i.40.split.us.preheader:                   ; preds = %.lr.ph.i.40
  br label %.lr.ph.i.40.split.us

.lr.ph.i.40.split.us:                             ; preds = %.lr.ph.i.40.split.us.preheader, %.backedge.i.46.us
  %.02.i.41.us = phi i32 [ %.0.i.i.45.us, %.backedge.i.46.us ], [ %169, %.lr.ph.i.40.split.us.preheader ]
  %fs.idx.val.i.42.us = load %struct.Proto*, %struct.Proto** %fs.idx.i.39, align 8, !tbaa !92
  %fs.idx.val.idx.i.43.us = getelementptr %struct.Proto, %struct.Proto* %fs.idx.val.i.42.us, i64 0, i32 4
  %fs.idx.val.idx.val.i.44.us = load i32*, i32** %fs.idx.val.idx.i.43.us, align 8, !tbaa !93
  %175 = sext i32 %.02.i.41.us to i64
  %176 = getelementptr inbounds i32, i32* %fs.idx.val.idx.val.i.44.us, i64 %175
  %177 = load i32, i32* %176, align 4, !tbaa !38
  %178 = lshr i32 %177, 14
  %179 = add nsw i32 %178, -131071
  %180 = icmp eq i32 %179, -1
  %181 = add nsw i32 %.02.i.41.us, 1
  %182 = add nsw i32 %181, %179
  %.0.i.i.45.us = select i1 %180, i32 -1, i32 %182
  %183 = icmp sgt i32 %.02.i.41.us, 0
  br i1 %183, label %184, label %192

; <label>:184                                     ; preds = %.lr.ph.i.40.split.us
  %185 = getelementptr inbounds i32, i32* %176, i64 -1
  %186 = load i32, i32* %185, align 4, !tbaa !38
  %187 = and i32 %186, 63
  %188 = zext i32 %187 to i64
  %189 = getelementptr inbounds [38 x i8], [38 x i8]* @luaP_opmodes, i64 0, i64 %188
  %190 = load i8, i8* %189, align 1, !tbaa !76
  %191 = icmp slt i8 %190, 0
  br i1 %191, label %getjumpcontrol.exit.i.58.us, label %192

; <label>:192                                     ; preds = %184, %.lr.ph.i.40.split.us
  br label %getjumpcontrol.exit.i.58.us

getjumpcontrol.exit.i.58.us:                      ; preds = %192, %184
  %193 = phi i32 [ %177, %192 ], [ %186, %184 ]
  %.0.i.i.57.us = phi i32* [ %176, %192 ], [ %185, %184 ]
  %194 = and i32 %193, 63
  %195 = icmp eq i32 %194, 27
  br i1 %195, label %207, label %196

; <label>:196                                     ; preds = %getjumpcontrol.exit.i.58.us
  %.neg.i.52.us = xor i32 %.02.i.41.us, -1
  %197 = add i32 %p_f.0, %.neg.i.52.us
  %ispos.i.53.us = icmp sgt i32 %197, -1
  %neg.i.54.us = sub i32 0, %197
  %198 = select i1 %ispos.i.53.us, i32 %197, i32 %neg.i.54.us
  %199 = icmp sgt i32 %198, 131071
  br i1 %199, label %200, label %fixjump.exit55.us

; <label>:200                                     ; preds = %196
  %201 = load %struct.LexState*, %struct.LexState** %172, align 8, !tbaa !94
  tail call void @luaX_syntaxerror(%struct.LexState* %201, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1.37, i64 0, i64 0)) #1
  %.pre76 = load i32, i32* %176, align 4, !tbaa !38
  br label %fixjump.exit55.us

fixjump.exit55.us:                                ; preds = %200, %196
  %202 = phi i32 [ %.pre76, %200 ], [ %177, %196 ]
  %203 = and i32 %202, 16383
  %204 = shl i32 %197, 14
  %205 = add i32 %204, 2147467264
  %206 = or i32 %203, %205
  br label %.backedge.i.46.us

; <label>:207                                     ; preds = %getjumpcontrol.exit.i.58.us
  %208 = lshr i32 %193, 23
  %209 = shl nuw nsw i32 %208, 6
  %210 = and i32 %193, 8372224
  %211 = or i32 %210, %209
  %212 = or i32 %211, 26
  store i32 %212, i32* %.0.i.i.57.us, align 4, !tbaa !38
  %.neg.i.48.us = xor i32 %.02.i.41.us, -1
  %213 = add i32 %167, %.neg.i.48.us
  %ispos.i.49.us = icmp sgt i32 %213, -1
  %neg.i.50.us = sub i32 0, %213
  %214 = select i1 %ispos.i.49.us, i32 %213, i32 %neg.i.50.us
  %215 = icmp sgt i32 %214, 131071
  br i1 %215, label %216, label %fixjump.exit51.us

; <label>:216                                     ; preds = %207
  %217 = load %struct.LexState*, %struct.LexState** %172, align 8, !tbaa !94
  tail call void @luaX_syntaxerror(%struct.LexState* %217, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1.37, i64 0, i64 0)) #1
  br label %fixjump.exit51.us

fixjump.exit51.us:                                ; preds = %216, %207
  %218 = load i32, i32* %176, align 4, !tbaa !38
  %219 = and i32 %218, 16383
  %220 = shl i32 %213, 14
  %221 = add i32 %220, 2147467264
  %222 = or i32 %219, %221
  br label %.backedge.i.46.us

.backedge.i.46.us:                                ; preds = %fixjump.exit51.us, %fixjump.exit55.us
  %storemerge.86 = phi i32 [ %206, %fixjump.exit55.us ], [ %222, %fixjump.exit51.us ]
  store i32 %storemerge.86, i32* %176, align 4, !tbaa !38
  %223 = icmp eq i32 %.0.i.i.45.us, -1
  br i1 %223, label %patchlistaux.exit47.loopexit, label %.lr.ph.i.40.split.us

.lr.ph.i.40..lr.ph.i.40.split_crit_edge:          ; preds = %.lr.ph.i.40..lr.ph.i.40.split_crit_edge.preheader, %.backedge.i.46
  %.02.i.41 = phi i32 [ %.0.i.i.45, %.backedge.i.46 ], [ %169, %.lr.ph.i.40..lr.ph.i.40.split_crit_edge.preheader ]
  %fs.idx.val.i.42 = load %struct.Proto*, %struct.Proto** %fs.idx.i.39, align 8, !tbaa !92
  %fs.idx.val.idx.i.43 = getelementptr %struct.Proto, %struct.Proto* %fs.idx.val.i.42, i64 0, i32 4
  %fs.idx.val.idx.val.i.44 = load i32*, i32** %fs.idx.val.idx.i.43, align 8, !tbaa !93
  %224 = sext i32 %.02.i.41 to i64
  %225 = getelementptr inbounds i32, i32* %fs.idx.val.idx.val.i.44, i64 %224
  %226 = load i32, i32* %225, align 4, !tbaa !38
  %227 = lshr i32 %226, 14
  %228 = add nsw i32 %227, -131071
  %229 = icmp eq i32 %228, -1
  %230 = add nsw i32 %.02.i.41, 1
  %231 = add nsw i32 %230, %228
  %.0.i.i.45 = select i1 %229, i32 -1, i32 %231
  %232 = icmp sgt i32 %.02.i.41, 0
  br i1 %232, label %233, label %241

; <label>:233                                     ; preds = %.lr.ph.i.40..lr.ph.i.40.split_crit_edge
  %234 = getelementptr inbounds i32, i32* %225, i64 -1
  %235 = load i32, i32* %234, align 4, !tbaa !38
  %236 = and i32 %235, 63
  %237 = zext i32 %236 to i64
  %238 = getelementptr inbounds [38 x i8], [38 x i8]* @luaP_opmodes, i64 0, i64 %237
  %239 = load i8, i8* %238, align 1, !tbaa !76
  %240 = icmp slt i8 %239, 0
  br i1 %240, label %getjumpcontrol.exit.i.58, label %241

; <label>:241                                     ; preds = %233, %.lr.ph.i.40..lr.ph.i.40.split_crit_edge
  br label %getjumpcontrol.exit.i.58

getjumpcontrol.exit.i.58:                         ; preds = %241, %233
  %242 = phi i32 [ %226, %241 ], [ %235, %233 ]
  %.0.i.i.57 = phi i32* [ %225, %241 ], [ %234, %233 ]
  %243 = and i32 %242, 63
  %244 = icmp eq i32 %243, 27
  br i1 %244, label %245, label %266

; <label>:245                                     ; preds = %getjumpcontrol.exit.i.58
  %246 = lshr i32 %242, 23
  %247 = icmp eq i32 %246, %reg
  br i1 %247, label %251, label %248

; <label>:248                                     ; preds = %245
  %249 = and i32 %242, -16321
  %250 = or i32 %249, %174
  br label %255

; <label>:251                                     ; preds = %245
  %252 = and i32 %242, 8372224
  %253 = or i32 %252, %173
  %254 = or i32 %253, 26
  br label %255

; <label>:255                                     ; preds = %251, %248
  %storemerge.i.60 = phi i32 [ %254, %251 ], [ %250, %248 ]
  store i32 %storemerge.i.60, i32* %.0.i.i.57, align 4, !tbaa !38
  %.neg.i.48 = xor i32 %.02.i.41, -1
  %256 = add i32 %167, %.neg.i.48
  %ispos.i.49 = icmp sgt i32 %256, -1
  %neg.i.50 = sub i32 0, %256
  %257 = select i1 %ispos.i.49, i32 %256, i32 %neg.i.50
  %258 = icmp sgt i32 %257, 131071
  br i1 %258, label %259, label %fixjump.exit51

; <label>:259                                     ; preds = %255
  %260 = load %struct.LexState*, %struct.LexState** %172, align 8, !tbaa !94
  tail call void @luaX_syntaxerror(%struct.LexState* %260, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1.37, i64 0, i64 0)) #1
  br label %fixjump.exit51

fixjump.exit51:                                   ; preds = %255, %259
  %261 = load i32, i32* %225, align 4, !tbaa !38
  %262 = and i32 %261, 16383
  %263 = shl i32 %256, 14
  %264 = add i32 %263, 2147467264
  %265 = or i32 %262, %264
  br label %.backedge.i.46

; <label>:266                                     ; preds = %getjumpcontrol.exit.i.58
  %.neg.i.52 = xor i32 %.02.i.41, -1
  %267 = add i32 %p_f.0, %.neg.i.52
  %ispos.i.53 = icmp sgt i32 %267, -1
  %neg.i.54 = sub i32 0, %267
  %268 = select i1 %ispos.i.53, i32 %267, i32 %neg.i.54
  %269 = icmp sgt i32 %268, 131071
  br i1 %269, label %270, label %fixjump.exit55

; <label>:270                                     ; preds = %266
  %271 = load %struct.LexState*, %struct.LexState** %172, align 8, !tbaa !94
  tail call void @luaX_syntaxerror(%struct.LexState* %271, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1.37, i64 0, i64 0)) #1
  %.pre = load i32, i32* %225, align 4, !tbaa !38
  br label %fixjump.exit55

fixjump.exit55:                                   ; preds = %266, %270
  %272 = phi i32 [ %226, %266 ], [ %.pre, %270 ]
  %273 = and i32 %272, 16383
  %274 = shl i32 %267, 14
  %275 = add i32 %274, 2147467264
  %276 = or i32 %273, %275
  br label %.backedge.i.46

.backedge.i.46:                                   ; preds = %fixjump.exit55, %fixjump.exit51
  %storemerge = phi i32 [ %276, %fixjump.exit55 ], [ %265, %fixjump.exit51 ]
  store i32 %storemerge, i32* %225, align 4, !tbaa !38
  %277 = icmp eq i32 %.0.i.i.45, -1
  br i1 %277, label %patchlistaux.exit47.loopexit104, label %.lr.ph.i.40..lr.ph.i.40.split_crit_edge

patchlistaux.exit47.loopexit:                     ; preds = %.backedge.i.46.us
  br label %patchlistaux.exit47

patchlistaux.exit47.loopexit104:                  ; preds = %.backedge.i.46
  br label %patchlistaux.exit47

patchlistaux.exit47:                              ; preds = %patchlistaux.exit47.loopexit104, %patchlistaux.exit47.loopexit, %luaK_patchtohere.exit
  %278 = load i32, i32* %4, align 4, !tbaa !106
  %279 = icmp eq i32 %278, -1
  br i1 %279, label %patchlistaux.exit, label %.lr.ph.i.3

.lr.ph.i.3:                                       ; preds = %patchlistaux.exit47
  %fs.idx.i.2 = getelementptr %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 0
  %280 = icmp eq i32 %reg, 255
  %281 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 3
  %282 = shl i32 %reg, 6
  %283 = and i32 %282, 16320
  br i1 %280, label %.lr.ph.i.3.split.us.preheader, label %.lr.ph.i.3..lr.ph.i.3.split_crit_edge.preheader

.lr.ph.i.3..lr.ph.i.3.split_crit_edge.preheader:  ; preds = %.lr.ph.i.3
  br label %.lr.ph.i.3..lr.ph.i.3.split_crit_edge

.lr.ph.i.3.split.us.preheader:                    ; preds = %.lr.ph.i.3
  br label %.lr.ph.i.3.split.us

.lr.ph.i.3.split.us:                              ; preds = %.lr.ph.i.3.split.us.preheader, %.backedge.i.us
  %.02.i.us = phi i32 [ %.0.i.i.7.us, %.backedge.i.us ], [ %278, %.lr.ph.i.3.split.us.preheader ]
  %fs.idx.val.i.4.us = load %struct.Proto*, %struct.Proto** %fs.idx.i.2, align 8, !tbaa !92
  %fs.idx.val.idx.i.5.us = getelementptr %struct.Proto, %struct.Proto* %fs.idx.val.i.4.us, i64 0, i32 4
  %fs.idx.val.idx.val.i.6.us = load i32*, i32** %fs.idx.val.idx.i.5.us, align 8, !tbaa !93
  %284 = sext i32 %.02.i.us to i64
  %285 = getelementptr inbounds i32, i32* %fs.idx.val.idx.val.i.6.us, i64 %284
  %286 = load i32, i32* %285, align 4, !tbaa !38
  %287 = lshr i32 %286, 14
  %288 = add nsw i32 %287, -131071
  %289 = icmp eq i32 %288, -1
  %290 = add nsw i32 %.02.i.us, 1
  %291 = add nsw i32 %290, %288
  %.0.i.i.7.us = select i1 %289, i32 -1, i32 %291
  %292 = icmp sgt i32 %.02.i.us, 0
  br i1 %292, label %293, label %301

; <label>:293                                     ; preds = %.lr.ph.i.3.split.us
  %294 = getelementptr inbounds i32, i32* %285, i64 -1
  %295 = load i32, i32* %294, align 4, !tbaa !38
  %296 = and i32 %295, 63
  %297 = zext i32 %296 to i64
  %298 = getelementptr inbounds [38 x i8], [38 x i8]* @luaP_opmodes, i64 0, i64 %297
  %299 = load i8, i8* %298, align 1, !tbaa !76
  %300 = icmp slt i8 %299, 0
  br i1 %300, label %getjumpcontrol.exit.i.22.us, label %301

; <label>:301                                     ; preds = %293, %.lr.ph.i.3.split.us
  br label %getjumpcontrol.exit.i.22.us

getjumpcontrol.exit.i.22.us:                      ; preds = %301, %293
  %302 = phi i32 [ %286, %301 ], [ %295, %293 ]
  %.0.i.i.21.us = phi i32* [ %285, %301 ], [ %294, %293 ]
  %303 = and i32 %302, 63
  %304 = icmp eq i32 %303, 27
  br i1 %304, label %316, label %305

; <label>:305                                     ; preds = %getjumpcontrol.exit.i.22.us
  %.neg.i.23.us = xor i32 %.02.i.us, -1
  %306 = add i32 %p_t.0, %.neg.i.23.us
  %ispos.i.24.us = icmp sgt i32 %306, -1
  %neg.i.25.us = sub i32 0, %306
  %307 = select i1 %ispos.i.24.us, i32 %306, i32 %neg.i.25.us
  %308 = icmp sgt i32 %307, 131071
  br i1 %308, label %309, label %fixjump.exit26.us

; <label>:309                                     ; preds = %305
  %310 = load %struct.LexState*, %struct.LexState** %281, align 8, !tbaa !94
  tail call void @luaX_syntaxerror(%struct.LexState* %310, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1.37, i64 0, i64 0)) #1
  %.pre78 = load i32, i32* %285, align 4, !tbaa !38
  br label %fixjump.exit26.us

fixjump.exit26.us:                                ; preds = %309, %305
  %311 = phi i32 [ %.pre78, %309 ], [ %286, %305 ]
  %312 = and i32 %311, 16383
  %313 = shl i32 %306, 14
  %314 = add i32 %313, 2147467264
  %315 = or i32 %312, %314
  br label %.backedge.i.us

; <label>:316                                     ; preds = %getjumpcontrol.exit.i.22.us
  %317 = lshr i32 %302, 23
  %318 = shl nuw nsw i32 %317, 6
  %319 = and i32 %302, 8372224
  %320 = or i32 %319, %318
  %321 = or i32 %320, 26
  store i32 %321, i32* %.0.i.i.21.us, align 4, !tbaa !38
  %.neg.i.us = xor i32 %.02.i.us, -1
  %322 = add i32 %167, %.neg.i.us
  %ispos.i.us = icmp sgt i32 %322, -1
  %neg.i.us = sub i32 0, %322
  %323 = select i1 %ispos.i.us, i32 %322, i32 %neg.i.us
  %324 = icmp sgt i32 %323, 131071
  br i1 %324, label %325, label %fixjump.exit.us

; <label>:325                                     ; preds = %316
  %326 = load %struct.LexState*, %struct.LexState** %281, align 8, !tbaa !94
  tail call void @luaX_syntaxerror(%struct.LexState* %326, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1.37, i64 0, i64 0)) #1
  br label %fixjump.exit.us

fixjump.exit.us:                                  ; preds = %325, %316
  %327 = load i32, i32* %285, align 4, !tbaa !38
  %328 = and i32 %327, 16383
  %329 = shl i32 %322, 14
  %330 = add i32 %329, 2147467264
  %331 = or i32 %328, %330
  br label %.backedge.i.us

.backedge.i.us:                                   ; preds = %fixjump.exit.us, %fixjump.exit26.us
  %storemerge.85 = phi i32 [ %315, %fixjump.exit26.us ], [ %331, %fixjump.exit.us ]
  store i32 %storemerge.85, i32* %285, align 4, !tbaa !38
  %332 = icmp eq i32 %.0.i.i.7.us, -1
  br i1 %332, label %patchlistaux.exit.loopexit, label %.lr.ph.i.3.split.us

.lr.ph.i.3..lr.ph.i.3.split_crit_edge:            ; preds = %.lr.ph.i.3..lr.ph.i.3.split_crit_edge.preheader, %.backedge.i
  %.02.i = phi i32 [ %.0.i.i.7, %.backedge.i ], [ %278, %.lr.ph.i.3..lr.ph.i.3.split_crit_edge.preheader ]
  %fs.idx.val.i.4 = load %struct.Proto*, %struct.Proto** %fs.idx.i.2, align 8, !tbaa !92
  %fs.idx.val.idx.i.5 = getelementptr %struct.Proto, %struct.Proto* %fs.idx.val.i.4, i64 0, i32 4
  %fs.idx.val.idx.val.i.6 = load i32*, i32** %fs.idx.val.idx.i.5, align 8, !tbaa !93
  %333 = sext i32 %.02.i to i64
  %334 = getelementptr inbounds i32, i32* %fs.idx.val.idx.val.i.6, i64 %333
  %335 = load i32, i32* %334, align 4, !tbaa !38
  %336 = lshr i32 %335, 14
  %337 = add nsw i32 %336, -131071
  %338 = icmp eq i32 %337, -1
  %339 = add nsw i32 %.02.i, 1
  %340 = add nsw i32 %339, %337
  %.0.i.i.7 = select i1 %338, i32 -1, i32 %340
  %341 = icmp sgt i32 %.02.i, 0
  br i1 %341, label %342, label %350

; <label>:342                                     ; preds = %.lr.ph.i.3..lr.ph.i.3.split_crit_edge
  %343 = getelementptr inbounds i32, i32* %334, i64 -1
  %344 = load i32, i32* %343, align 4, !tbaa !38
  %345 = and i32 %344, 63
  %346 = zext i32 %345 to i64
  %347 = getelementptr inbounds [38 x i8], [38 x i8]* @luaP_opmodes, i64 0, i64 %346
  %348 = load i8, i8* %347, align 1, !tbaa !76
  %349 = icmp slt i8 %348, 0
  br i1 %349, label %getjumpcontrol.exit.i.22, label %350

; <label>:350                                     ; preds = %342, %.lr.ph.i.3..lr.ph.i.3.split_crit_edge
  br label %getjumpcontrol.exit.i.22

getjumpcontrol.exit.i.22:                         ; preds = %350, %342
  %351 = phi i32 [ %335, %350 ], [ %344, %342 ]
  %.0.i.i.21 = phi i32* [ %334, %350 ], [ %343, %342 ]
  %352 = and i32 %351, 63
  %353 = icmp eq i32 %352, 27
  br i1 %353, label %354, label %375

; <label>:354                                     ; preds = %getjumpcontrol.exit.i.22
  %355 = lshr i32 %351, 23
  %356 = icmp eq i32 %355, %reg
  br i1 %356, label %360, label %357

; <label>:357                                     ; preds = %354
  %358 = and i32 %351, -16321
  %359 = or i32 %358, %283
  br label %364

; <label>:360                                     ; preds = %354
  %361 = and i32 %351, 8372224
  %362 = or i32 %361, %282
  %363 = or i32 %362, 26
  br label %364

; <label>:364                                     ; preds = %360, %357
  %storemerge.i = phi i32 [ %363, %360 ], [ %359, %357 ]
  store i32 %storemerge.i, i32* %.0.i.i.21, align 4, !tbaa !38
  %.neg.i = xor i32 %.02.i, -1
  %365 = add i32 %167, %.neg.i
  %ispos.i = icmp sgt i32 %365, -1
  %neg.i = sub i32 0, %365
  %366 = select i1 %ispos.i, i32 %365, i32 %neg.i
  %367 = icmp sgt i32 %366, 131071
  br i1 %367, label %368, label %fixjump.exit

; <label>:368                                     ; preds = %364
  %369 = load %struct.LexState*, %struct.LexState** %281, align 8, !tbaa !94
  tail call void @luaX_syntaxerror(%struct.LexState* %369, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1.37, i64 0, i64 0)) #1
  br label %fixjump.exit

fixjump.exit:                                     ; preds = %364, %368
  %370 = load i32, i32* %334, align 4, !tbaa !38
  %371 = and i32 %370, 16383
  %372 = shl i32 %365, 14
  %373 = add i32 %372, 2147467264
  %374 = or i32 %371, %373
  br label %.backedge.i

; <label>:375                                     ; preds = %getjumpcontrol.exit.i.22
  %.neg.i.23 = xor i32 %.02.i, -1
  %376 = add i32 %p_t.0, %.neg.i.23
  %ispos.i.24 = icmp sgt i32 %376, -1
  %neg.i.25 = sub i32 0, %376
  %377 = select i1 %ispos.i.24, i32 %376, i32 %neg.i.25
  %378 = icmp sgt i32 %377, 131071
  br i1 %378, label %379, label %fixjump.exit26

; <label>:379                                     ; preds = %375
  %380 = load %struct.LexState*, %struct.LexState** %281, align 8, !tbaa !94
  tail call void @luaX_syntaxerror(%struct.LexState* %380, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1.37, i64 0, i64 0)) #1
  %.pre77 = load i32, i32* %334, align 4, !tbaa !38
  br label %fixjump.exit26

fixjump.exit26:                                   ; preds = %375, %379
  %381 = phi i32 [ %335, %375 ], [ %.pre77, %379 ]
  %382 = and i32 %381, 16383
  %383 = shl i32 %376, 14
  %384 = add i32 %383, 2147467264
  %385 = or i32 %382, %384
  br label %.backedge.i

.backedge.i:                                      ; preds = %fixjump.exit26, %fixjump.exit
  %storemerge.84 = phi i32 [ %385, %fixjump.exit26 ], [ %374, %fixjump.exit ]
  store i32 %storemerge.84, i32* %334, align 4, !tbaa !38
  %386 = icmp eq i32 %.0.i.i.7, -1
  br i1 %386, label %patchlistaux.exit.loopexit103, label %.lr.ph.i.3..lr.ph.i.3.split_crit_edge

patchlistaux.exit.loopexit:                       ; preds = %.backedge.i.us
  br label %patchlistaux.exit

patchlistaux.exit.loopexit103:                    ; preds = %.backedge.i
  br label %patchlistaux.exit

patchlistaux.exit:                                ; preds = %patchlistaux.exit.loopexit103, %patchlistaux.exit.loopexit, %patchlistaux.exit47, %luaK_concat.exit
  store i32 -1, i32* %4, align 4, !tbaa !106
  store i32 -1, i32* %37, align 4, !tbaa !107
  %387 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %e, i64 0, i32 1
  %388 = bitcast %union.SemInfo* %387 to i32*
  store i32 %reg, i32* %388, align 4, !tbaa !103
  store i32 12, i32* %1, align 4, !tbaa !101
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @condjump(%struct.FuncState* nocapture %fs, i32 %op, i32 %A, i32 %B, i32 %C) #0 {
  %1 = shl i32 %A, 6
  %2 = or i32 %1, %op
  %3 = shl i32 %B, 23
  %4 = or i32 %2, %3
  %5 = shl i32 %C, 14
  %6 = or i32 %4, %5
  %7 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 3
  %8 = load %struct.LexState*, %struct.LexState** %7, align 8, !tbaa !94
  %9 = getelementptr inbounds %struct.LexState, %struct.LexState* %8, i64 0, i32 2
  %10 = load i32, i32* %9, align 4, !tbaa !95
  %11 = tail call fastcc i32 @luaK_code(%struct.FuncState* %fs, i32 %6, i32 %10) #1
  %12 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 8
  %13 = load i32, i32* %12, align 4, !tbaa !98
  store i32 -1, i32* %12, align 4, !tbaa !98
  %14 = load %struct.LexState*, %struct.LexState** %7, align 8, !tbaa !94
  %15 = getelementptr inbounds %struct.LexState, %struct.LexState* %14, i64 0, i32 2
  %16 = load i32, i32* %15, align 4, !tbaa !95
  %17 = tail call fastcc i32 @luaK_code(%struct.FuncState* %fs, i32 2147450902, i32 %16) #1
  %18 = icmp eq i32 %13, -1
  br i1 %18, label %luaK_jump.exit, label %19

; <label>:19                                      ; preds = %0
  %20 = icmp eq i32 %17, -1
  br i1 %20, label %luaK_jump.exit, label %.preheader.i.i

.preheader.i.i:                                   ; preds = %19
  %fs.idx.i.i = getelementptr %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 0
  %fs.idx.val.i.i = load %struct.Proto*, %struct.Proto** %fs.idx.i.i, align 8, !tbaa !92
  %fs.idx.val.idx.i.i = getelementptr %struct.Proto, %struct.Proto* %fs.idx.val.i.i, i64 0, i32 4
  %fs.idx.val.idx.val.i.i = load i32*, i32** %fs.idx.val.idx.i.i, align 8, !tbaa !93
  br label %21

; <label>:21                                      ; preds = %21, %.preheader.i.i
  %list.0.i.i = phi i32 [ %.0.i.i.i, %21 ], [ %17, %.preheader.i.i ]
  %22 = sext i32 %list.0.i.i to i64
  %23 = getelementptr inbounds i32, i32* %fs.idx.val.idx.val.i.i, i64 %22
  %24 = load i32, i32* %23, align 4, !tbaa !38
  %25 = lshr i32 %24, 14
  %26 = add nsw i32 %25, -131071
  %27 = icmp eq i32 %26, -1
  %28 = add nsw i32 %list.0.i.i, 1
  %29 = add nsw i32 %28, %26
  %.0.i.i.i = select i1 %27, i32 -1, i32 %29
  %30 = icmp eq i32 %.0.i.i.i, -1
  br i1 %30, label %31, label %21

; <label>:31                                      ; preds = %21
  %.lcssa6 = phi i32 [ %24, %21 ]
  %.lcssa = phi i32* [ %23, %21 ]
  %list.0.i.i.lcssa = phi i32 [ %list.0.i.i, %21 ]
  %.neg.i.i.i = xor i32 %list.0.i.i.lcssa, -1
  %32 = add i32 %13, %.neg.i.i.i
  %ispos.i.i.i = icmp sgt i32 %32, -1
  %neg.i.i.i = sub i32 0, %32
  %33 = select i1 %ispos.i.i.i, i32 %32, i32 %neg.i.i.i
  %34 = icmp sgt i32 %33, 131071
  br i1 %34, label %35, label %fixjump.exit.i.i

; <label>:35                                      ; preds = %31
  %36 = load %struct.LexState*, %struct.LexState** %7, align 8, !tbaa !94
  tail call void @luaX_syntaxerror(%struct.LexState* %36, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1.37, i64 0, i64 0)) #1
  %.pre.i.i = load i32, i32* %.lcssa, align 4, !tbaa !38
  br label %fixjump.exit.i.i

fixjump.exit.i.i:                                 ; preds = %35, %31
  %37 = phi i32 [ %.lcssa6, %31 ], [ %.pre.i.i, %35 ]
  %38 = and i32 %37, 16383
  %39 = shl i32 %32, 14
  %40 = add i32 %39, 2147467264
  %41 = or i32 %38, %40
  store i32 %41, i32* %.lcssa, align 4, !tbaa !38
  br label %luaK_jump.exit

luaK_jump.exit:                                   ; preds = %0, %19, %fixjump.exit.i.i
  %j.0.i = phi i32 [ %17, %0 ], [ %17, %fixjump.exit.i.i ], [ %13, %19 ]
  ret i32 %j.0.i
}

; Function Attrs: nounwind uwtable
define internal fastcc void @discharge2reg(%struct.FuncState* nocapture %fs, %struct.expdesc* nocapture %e, i32 %reg) #0 {
  %o.i = alloca %struct.lua_TValue, align 8
  tail call void @luaK_dischargevars(%struct.FuncState* %fs, %struct.expdesc* %e)
  %1 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %e, i64 0, i32 0
  %2 = load i32, i32* %1, align 4, !tbaa !101
  switch i32 %2, label %122 [
    i32 1, label %3
    i32 3, label %49
    i32 2, label %49
    i32 4, label %61
    i32 5, label %74
    i32 11, label %91
    i32 12, label %106
  ]

; <label>:3                                       ; preds = %0
  %4 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 6
  %5 = load i32, i32* %4, align 4, !tbaa !88
  %6 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 7
  %7 = load i32, i32* %6, align 4, !tbaa !90
  %8 = icmp sgt i32 %5, %7
  br i1 %8, label %9, label %39

; <label>:9                                       ; preds = %3
  %10 = icmp eq i32 %5, 0
  br i1 %10, label %11, label %16

; <label>:11                                      ; preds = %9
  %12 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 13
  %13 = load i8, i8* %12, align 1, !tbaa !91
  %14 = zext i8 %13 to i32
  %15 = icmp sgt i32 %14, %reg
  br i1 %15, label %39, label %luaK_nil.exit

; <label>:16                                      ; preds = %9
  %17 = add nsw i32 %5, -1
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 0
  %20 = load %struct.Proto*, %struct.Proto** %19, align 8, !tbaa !92
  %21 = getelementptr inbounds %struct.Proto, %struct.Proto* %20, i64 0, i32 4
  %22 = load i32*, i32** %21, align 8, !tbaa !93
  %23 = getelementptr inbounds i32, i32* %22, i64 %18
  %24 = load i32, i32* %23, align 4, !tbaa !38
  %25 = and i32 %24, 63
  %26 = icmp eq i32 %25, 3
  br i1 %26, label %27, label %39

; <label>:27                                      ; preds = %16
  %28 = lshr i32 %24, 6
  %29 = and i32 %28, 255
  %30 = lshr i32 %24, 23
  %31 = icmp sgt i32 %29, %reg
  %32 = add nuw nsw i32 %30, 1
  %33 = icmp slt i32 %32, %reg
  %or.cond.i = or i1 %31, %33
  br i1 %or.cond.i, label %39, label %34

; <label>:34                                      ; preds = %27
  %35 = icmp slt i32 %30, %reg
  br i1 %35, label %.critedge.i, label %luaK_nil.exit

.critedge.i:                                      ; preds = %34
  %36 = and i32 %24, 8388607
  %37 = shl i32 %reg, 23
  %38 = or i32 %36, %37
  store i32 %38, i32* %23, align 4, !tbaa !38
  br label %luaK_nil.exit

; <label>:39                                      ; preds = %27, %16, %11, %3
  %40 = shl i32 %reg, 6
  %41 = shl i32 %reg, 23
  %42 = or i32 %41, %40
  %43 = or i32 %42, 3
  %44 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 3
  %45 = load %struct.LexState*, %struct.LexState** %44, align 8, !tbaa !94
  %46 = getelementptr inbounds %struct.LexState, %struct.LexState* %45, i64 0, i32 2
  %47 = load i32, i32* %46, align 4, !tbaa !95
  %48 = tail call fastcc i32 @luaK_code(%struct.FuncState* %fs, i32 %43, i32 %47) #1
  br label %luaK_nil.exit

; <label>:49                                      ; preds = %0, %0
  %50 = icmp eq i32 %2, 2
  %51 = zext i1 %50 to i32
  %52 = shl i32 %reg, 6
  %53 = shl nuw nsw i32 %51, 23
  %54 = or i32 %52, %53
  %55 = or i32 %54, 2
  %56 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 3
  %57 = load %struct.LexState*, %struct.LexState** %56, align 8, !tbaa !94
  %58 = getelementptr inbounds %struct.LexState, %struct.LexState* %57, i64 0, i32 2
  %59 = load i32, i32* %58, align 4, !tbaa !95
  %60 = tail call fastcc i32 @luaK_code(%struct.FuncState* %fs, i32 %55, i32 %59) #1
  br label %luaK_nil.exit

; <label>:61                                      ; preds = %0
  %62 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %e, i64 0, i32 1
  %63 = bitcast %union.SemInfo* %62 to i32*
  %64 = load i32, i32* %63, align 4, !tbaa !103
  %65 = shl i32 %reg, 6
  %66 = shl i32 %64, 14
  %67 = or i32 %65, %66
  %68 = or i32 %67, 1
  %69 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 3
  %70 = load %struct.LexState*, %struct.LexState** %69, align 8, !tbaa !94
  %71 = getelementptr inbounds %struct.LexState, %struct.LexState* %70, i64 0, i32 2
  %72 = load i32, i32* %71, align 4, !tbaa !95
  %73 = tail call fastcc i32 @luaK_code(%struct.FuncState* %fs, i32 %68, i32 %72) #1
  br label %luaK_nil.exit

; <label>:74                                      ; preds = %0
  %75 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %e, i64 0, i32 1, i32 0
  %76 = bitcast double* %75 to i64*
  %77 = load i64, i64* %76, align 8, !tbaa !36
  %78 = bitcast %struct.lua_TValue* %o.i to i8*
  call void @llvm.lifetime.start(i64 16, i8* %78) #1
  %79 = bitcast %struct.lua_TValue* %o.i to i64*
  store i64 %77, i64* %79, align 8, !tbaa !36
  %80 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %o.i, i64 0, i32 1
  store i32 3, i32* %80, align 8, !tbaa !10
  %81 = call fastcc i32 @addk(%struct.FuncState* %fs, %struct.lua_TValue* nonnull %o.i, %struct.lua_TValue* nonnull %o.i) #1
  call void @llvm.lifetime.end(i64 16, i8* %78) #1
  %82 = shl i32 %reg, 6
  %83 = shl i32 %81, 14
  %84 = or i32 %82, %83
  %85 = or i32 %84, 1
  %86 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 3
  %87 = load %struct.LexState*, %struct.LexState** %86, align 8, !tbaa !94
  %88 = getelementptr inbounds %struct.LexState, %struct.LexState* %87, i64 0, i32 2
  %89 = load i32, i32* %88, align 4, !tbaa !95
  %90 = call fastcc i32 @luaK_code(%struct.FuncState* %fs, i32 %85, i32 %89) #1
  br label %luaK_nil.exit

; <label>:91                                      ; preds = %0
  %92 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %e, i64 0, i32 1
  %93 = bitcast %union.SemInfo* %92 to i32*
  %94 = load i32, i32* %93, align 4, !tbaa !103
  %95 = sext i32 %94 to i64
  %96 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 0
  %97 = load %struct.Proto*, %struct.Proto** %96, align 8, !tbaa !92
  %98 = getelementptr inbounds %struct.Proto, %struct.Proto* %97, i64 0, i32 4
  %99 = load i32*, i32** %98, align 8, !tbaa !93
  %100 = getelementptr inbounds i32, i32* %99, i64 %95
  %101 = load i32, i32* %100, align 4, !tbaa !38
  %102 = and i32 %101, -16321
  %103 = shl i32 %reg, 6
  %104 = and i32 %103, 16320
  %105 = or i32 %102, %104
  store i32 %105, i32* %100, align 4, !tbaa !38
  br label %luaK_nil.exit

; <label>:106                                     ; preds = %0
  %107 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %e, i64 0, i32 1
  %108 = bitcast %union.SemInfo* %107 to i32*
  %109 = load i32, i32* %108, align 4, !tbaa !103
  %110 = icmp eq i32 %109, %reg
  br i1 %110, label %luaK_nil.exit, label %111

; <label>:111                                     ; preds = %106
  %112 = shl i32 %reg, 6
  %113 = shl i32 %109, 23
  %114 = or i32 %113, %112
  %115 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 3
  %116 = load %struct.LexState*, %struct.LexState** %115, align 8, !tbaa !94
  %117 = getelementptr inbounds %struct.LexState, %struct.LexState* %116, i64 0, i32 2
  %118 = load i32, i32* %117, align 4, !tbaa !95
  %119 = tail call fastcc i32 @luaK_code(%struct.FuncState* %fs, i32 %114, i32 %118) #1
  br label %luaK_nil.exit

luaK_nil.exit:                                    ; preds = %39, %.critedge.i, %34, %11, %106, %111, %91, %74, %61, %49
  %120 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %e, i64 0, i32 1
  %121 = bitcast %union.SemInfo* %120 to i32*
  store i32 %reg, i32* %121, align 4, !tbaa !103
  store i32 12, i32* %1, align 4, !tbaa !101
  br label %122

; <label>:122                                     ; preds = %0, %luaK_nil.exit
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @codearith(%struct.FuncState* %fs, i32 %op, %struct.expdesc* nocapture %e1, %struct.expdesc* nocapture %e2) #0 {
  %1 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %e1, i64 0, i32 0
  %2 = load i32, i32* %1, align 4, !tbaa !101
  %3 = icmp eq i32 %2, 5
  br i1 %3, label %4, label %50

; <label>:4                                       ; preds = %0
  %5 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %e1, i64 0, i32 2
  %6 = load i32, i32* %5, align 4, !tbaa !106
  %7 = icmp eq i32 %6, -1
  br i1 %7, label %isnumeral.exit.i, label %50

isnumeral.exit.i:                                 ; preds = %4
  %8 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %e1, i64 0, i32 3
  %9 = load i32, i32* %8, align 4, !tbaa !107
  %10 = icmp eq i32 %9, -1
  br i1 %10, label %11, label %50

; <label>:11                                      ; preds = %isnumeral.exit.i
  %12 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %e2, i64 0, i32 0
  %13 = load i32, i32* %12, align 4, !tbaa !101
  %14 = icmp eq i32 %13, 5
  br i1 %14, label %15, label %50

; <label>:15                                      ; preds = %11
  %16 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %e2, i64 0, i32 2
  %17 = load i32, i32* %16, align 4, !tbaa !106
  %18 = icmp eq i32 %17, -1
  br i1 %18, label %isnumeral.exit1.i, label %50

isnumeral.exit1.i:                                ; preds = %15
  %19 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %e2, i64 0, i32 3
  %20 = load i32, i32* %19, align 4, !tbaa !107
  %21 = icmp eq i32 %20, -1
  br i1 %21, label %22, label %50

; <label>:22                                      ; preds = %isnumeral.exit1.i
  %23 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %e1, i64 0, i32 1, i32 0
  %24 = load double, double* %23, align 8, !tbaa !36
  %25 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %e2, i64 0, i32 1, i32 0
  %26 = load double, double* %25, align 8, !tbaa !36
  switch i32 %op, label %constfolding.exit [
    i32 12, label %27
    i32 13, label %29
    i32 14, label %31
    i32 15, label %33
    i32 16, label %37
    i32 17, label %44
    i32 18, label %46
    i32 20, label %.thread5
  ]

; <label>:27                                      ; preds = %22
  %28 = fadd double %24, %26
  br label %48

; <label>:29                                      ; preds = %22
  %30 = fsub double %24, %26
  br label %48

; <label>:31                                      ; preds = %22
  %32 = fmul double %24, %26
  br label %48

; <label>:33                                      ; preds = %22
  %34 = fcmp oeq double %26, 0.000000e+00
  br i1 %34, label %.thread, label %35

; <label>:35                                      ; preds = %33
  %36 = fdiv double %24, %26
  br label %48

; <label>:37                                      ; preds = %22
  %38 = fcmp oeq double %26, 0.000000e+00
  br i1 %38, label %.thread, label %39

; <label>:39                                      ; preds = %37
  %40 = fdiv double %24, %26
  %41 = tail call double @floor(double %40) #12
  %42 = fmul double %26, %41
  %43 = fsub double %24, %42
  br label %48

; <label>:44                                      ; preds = %22
  %45 = tail call double @pow(double %24, double %26) #1
  br label %48

; <label>:46                                      ; preds = %22
  %47 = fsub double -0.000000e+00, %24
  br label %48

; <label>:48                                      ; preds = %46, %44, %39, %35, %31, %29, %27
  %r.0.i = phi double [ %47, %46 ], [ %45, %44 ], [ %43, %39 ], [ %36, %35 ], [ %32, %31 ], [ %30, %29 ], [ %28, %27 ]
  %49 = fcmp ord double %r.0.i, 0.000000e+00
  br i1 %49, label %constfolding.exit, label %50

constfolding.exit:                                ; preds = %22, %48
  %r.02.i = phi double [ %r.0.i, %48 ], [ 0.000000e+00, %22 ]
  store double %r.02.i, double* %23, align 8, !tbaa !36
  br label %138

; <label>:50                                      ; preds = %isnumeral.exit1.i, %isnumeral.exit.i, %48, %4, %0, %15, %11
  switch i32 %op, label %.thread [
    i32 20, label %.thread5
    i32 18, label %.thread5
  ]

.thread:                                          ; preds = %37, %33, %50
  %51 = tail call i32 @luaK_exp2RK(%struct.FuncState* %fs, %struct.expdesc* %e2)
  br label %.thread5

.thread5:                                         ; preds = %22, %50, %50, %.thread
  %52 = phi i32 [ %51, %.thread ], [ 0, %50 ], [ 0, %50 ], [ 0, %22 ]
  %53 = tail call i32 @luaK_exp2RK(%struct.FuncState* %fs, %struct.expdesc* %e1)
  %54 = icmp sgt i32 %53, %52
  br i1 %54, label %55, label %91

; <label>:55                                      ; preds = %.thread5
  %56 = load i32, i32* %1, align 4, !tbaa !101
  %57 = icmp eq i32 %56, 12
  br i1 %57, label %58, label %freeexp.exit

; <label>:58                                      ; preds = %55
  %59 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %e1, i64 0, i32 1
  %60 = bitcast %union.SemInfo* %59 to i32*
  %61 = load i32, i32* %60, align 4, !tbaa !103
  %62 = and i32 %61, 256
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %freeexp.exit

; <label>:64                                      ; preds = %58
  %65 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 13
  %66 = load i8, i8* %65, align 1, !tbaa !91
  %67 = zext i8 %66 to i32
  %68 = icmp sgt i32 %67, %61
  br i1 %68, label %freeexp.exit, label %69

; <label>:69                                      ; preds = %64
  %70 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 9
  %71 = load i32, i32* %70, align 4, !tbaa !99
  %72 = add nsw i32 %71, -1
  store i32 %72, i32* %70, align 4, !tbaa !99
  br label %freeexp.exit

freeexp.exit:                                     ; preds = %55, %58, %64, %69
  %73 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %e2, i64 0, i32 0
  %74 = load i32, i32* %73, align 4, !tbaa !101
  %75 = icmp eq i32 %74, 12
  br i1 %75, label %76, label %freeexp.exit2

; <label>:76                                      ; preds = %freeexp.exit
  %77 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %e2, i64 0, i32 1
  %78 = bitcast %union.SemInfo* %77 to i32*
  %79 = load i32, i32* %78, align 4, !tbaa !103
  %80 = and i32 %79, 256
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %freeexp.exit2

; <label>:82                                      ; preds = %76
  %83 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 13
  %84 = load i8, i8* %83, align 1, !tbaa !91
  %85 = zext i8 %84 to i32
  %86 = icmp sgt i32 %85, %79
  br i1 %86, label %freeexp.exit2, label %87

; <label>:87                                      ; preds = %82
  %88 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 9
  %89 = load i32, i32* %88, align 4, !tbaa !99
  %90 = add nsw i32 %89, -1
  store i32 %90, i32* %88, align 4, !tbaa !99
  br label %freeexp.exit2

; <label>:91                                      ; preds = %.thread5
  %92 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %e2, i64 0, i32 0
  %93 = load i32, i32* %92, align 4, !tbaa !101
  %94 = icmp eq i32 %93, 12
  br i1 %94, label %95, label %freeexp.exit3

; <label>:95                                      ; preds = %91
  %96 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %e2, i64 0, i32 1
  %97 = bitcast %union.SemInfo* %96 to i32*
  %98 = load i32, i32* %97, align 4, !tbaa !103
  %99 = and i32 %98, 256
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %freeexp.exit3

; <label>:101                                     ; preds = %95
  %102 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 13
  %103 = load i8, i8* %102, align 1, !tbaa !91
  %104 = zext i8 %103 to i32
  %105 = icmp sgt i32 %104, %98
  br i1 %105, label %freeexp.exit3, label %106

; <label>:106                                     ; preds = %101
  %107 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 9
  %108 = load i32, i32* %107, align 4, !tbaa !99
  %109 = add nsw i32 %108, -1
  store i32 %109, i32* %107, align 4, !tbaa !99
  br label %freeexp.exit3

freeexp.exit3:                                    ; preds = %91, %95, %101, %106
  %110 = load i32, i32* %1, align 4, !tbaa !101
  %111 = icmp eq i32 %110, 12
  br i1 %111, label %112, label %freeexp.exit2

; <label>:112                                     ; preds = %freeexp.exit3
  %113 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %e1, i64 0, i32 1
  %114 = bitcast %union.SemInfo* %113 to i32*
  %115 = load i32, i32* %114, align 4, !tbaa !103
  %116 = and i32 %115, 256
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %freeexp.exit2

; <label>:118                                     ; preds = %112
  %119 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 13
  %120 = load i8, i8* %119, align 1, !tbaa !91
  %121 = zext i8 %120 to i32
  %122 = icmp sgt i32 %121, %115
  br i1 %122, label %freeexp.exit2, label %123

; <label>:123                                     ; preds = %118
  %124 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 9
  %125 = load i32, i32* %124, align 4, !tbaa !99
  %126 = add nsw i32 %125, -1
  store i32 %126, i32* %124, align 4, !tbaa !99
  br label %freeexp.exit2

freeexp.exit2:                                    ; preds = %123, %118, %112, %freeexp.exit3, %87, %82, %76, %freeexp.exit
  %127 = shl i32 %53, 23
  %128 = shl i32 %52, 14
  %129 = or i32 %128, %op
  %130 = or i32 %129, %127
  %131 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %fs, i64 0, i32 3
  %132 = load %struct.LexState*, %struct.LexState** %131, align 8, !tbaa !94
  %133 = getelementptr inbounds %struct.LexState, %struct.LexState* %132, i64 0, i32 2
  %134 = load i32, i32* %133, align 4, !tbaa !95
  %135 = tail call fastcc i32 @luaK_code(%struct.FuncState* %fs, i32 %130, i32 %134) #1
  %136 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %e1, i64 0, i32 1
  %137 = bitcast %union.SemInfo* %136 to i32*
  store i32 %135, i32* %137, align 4, !tbaa !103
  store i32 11, i32* %1, align 4, !tbaa !101
  br label %138

; <label>:138                                     ; preds = %constfolding.exit, %freeexp.exit2
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @luaopen_debug(%struct.lua_State* %L) #0 {
  tail call void @luaL_register(%struct.lua_State* %L, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.79, i64 0, i64 0), %struct.luaL_Reg* getelementptr inbounds ([15 x %struct.luaL_Reg], [15 x %struct.luaL_Reg]* @dblib, i64 0, i64 0)) #1
  ret i32 1
}

; Function Attrs: nounwind
declare i8* @fgets(i8*, i32, %struct._IO_FILE* nocapture) #5

; Function Attrs: nounwind
declare i64 @fwrite(i8* nocapture, i64, i64, %struct._IO_FILE* nocapture) #1

; Function Attrs: nounwind uwtable
define internal i32 @db_debug(%struct.lua_State* %L) #0 {
  %buffer = alloca [250 x i8], align 16
  %1 = getelementptr inbounds [250 x i8], [250 x i8]* %buffer, i64 0, i64 0
  call void @llvm.lifetime.start(i64 250, i8* %1) #1
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !25
  %3 = call i64 @fwrite(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.14.128, i64 0, i64 0), i64 11, i64 1, %struct._IO_FILE* %2) #14
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !tbaa !25
  %5 = call i8* @fgets(i8* %1, i32 250, %struct._IO_FILE* %4) #1
  %6 = icmp eq i8* %5, null
  br i1 %6, label %._crit_edge, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %0
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %.critedge
  %7 = call i32 @strcmp(i8* %1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15.129, i64 0, i64 0)) #1
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %._crit_edge.loopexit, label %9

; <label>:9                                       ; preds = %.lr.ph
  %10 = call i64 @strlen(i8* %1) #11
  %11 = call i32 @luaL_loadbuffer(%struct.lua_State* %L, i8* %1, i64 %10, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.16.130, i64 0, i64 0)) #1
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %16

; <label>:13                                      ; preds = %9
  %14 = call i32 @lua_pcall(%struct.lua_State* %L, i32 0, i32 0, i32 0) #1
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %.critedge, label %16

; <label>:16                                      ; preds = %13, %9
  %17 = call i8* @lua_tolstring(%struct.lua_State* %L, i32 -1, i64* null) #1
  %18 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !25
  %19 = call i32 @fputs(i8* %17, %struct._IO_FILE* %18) #13
  %20 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !25
  %fputc = call i32 @fputc(i32 10, %struct._IO_FILE* %20) #14
  br label %.critedge

.critedge:                                        ; preds = %13, %16
  call void @lua_settop(%struct.lua_State* %L, i32 0) #1
  call void @llvm.lifetime.end(i64 250, i8* %1) #1
  call void @llvm.lifetime.start(i64 250, i8* %1) #1
  %21 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !25
  %22 = call i64 @fwrite(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.14.128, i64 0, i64 0), i64 11, i64 1, %struct._IO_FILE* %21) #14
  %23 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !tbaa !25
  %24 = call i8* @fgets(i8* %1, i32 250, %struct._IO_FILE* %23) #1
  %25 = icmp eq i8* %24, null
  br i1 %25, label %._crit_edge.loopexit, label %.lr.ph

._crit_edge.loopexit:                             ; preds = %.critedge, %.lr.ph
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %0
  call void @llvm.lifetime.end(i64 250, i8* %1) #1
  ret i32 0
}

; Function Attrs: nounwind uwtable
define internal i32 @db_getfenv(%struct.lua_State* %L) #0 {
  tail call void @lua_getfenv(%struct.lua_State* %L, i32 1) #1
  ret i32 1
}

; Function Attrs: nounwind uwtable
define internal i32 @db_gethook(%struct.lua_State* %L) #0 {
  %buff = alloca [5 x i8], align 1
  %1 = tail call i32 @lua_type(%struct.lua_State* %L, i32 1) #1
  %2 = icmp eq i32 %1, 8
  br i1 %2, label %3, label %getthread.exit

; <label>:3                                       ; preds = %0
  %4 = tail call %struct.lua_State* @lua_tothread(%struct.lua_State* %L, i32 1) #1
  br label %getthread.exit

getthread.exit:                                   ; preds = %0, %3
  %.0.i = phi %struct.lua_State* [ %4, %3 ], [ %L, %0 ]
  %5 = getelementptr inbounds [5 x i8], [5 x i8]* %buff, i64 0, i64 0
  call void @llvm.lifetime.start(i64 5, i8* %5) #1
  %6 = tail call i32 @lua_gethookmask(%struct.lua_State* %.0.i) #1
  %7 = tail call void (%struct.lua_State*, %struct.lua_Debug*)* @lua_gethook(%struct.lua_State* %.0.i) #1
  %8 = icmp ne void (%struct.lua_State*, %struct.lua_Debug*)* %7, null
  %9 = icmp ne void (%struct.lua_State*, %struct.lua_Debug*)* %7, @hookf
  %or.cond = and i1 %8, %9
  br i1 %or.cond, label %10, label %11

; <label>:10                                      ; preds = %getthread.exit
  tail call void @lua_pushlstring(%struct.lua_State* %L, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.18.127, i64 0, i64 0), i64 13) #1
  br label %13

; <label>:11                                      ; preds = %getthread.exit
  tail call fastcc void @gethooktable(%struct.lua_State* %L)
  %12 = bitcast %struct.lua_State* %.0.i to i8*
  tail call void @lua_pushlightuserdata(%struct.lua_State* %L, i8* %12) #1
  tail call void @lua_rawget(%struct.lua_State* %L, i32 -2) #1
  tail call void @lua_remove(%struct.lua_State* %L, i32 -2) #1
  br label %13

; <label>:13                                      ; preds = %11, %10
  %14 = and i32 %6, 1
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %17, label %16

; <label>:16                                      ; preds = %13
  store i8 99, i8* %5, align 1, !tbaa !76
  br label %17

; <label>:17                                      ; preds = %16, %13
  %i.0.i = phi i32 [ 1, %16 ], [ 0, %13 ]
  %18 = and i32 %6, 2
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %24, label %20

; <label>:20                                      ; preds = %17
  %21 = add nuw nsw i32 %i.0.i, 1
  %22 = zext i32 %i.0.i to i64
  %23 = getelementptr inbounds [5 x i8], [5 x i8]* %buff, i64 0, i64 %22
  store i8 114, i8* %23, align 1, !tbaa !76
  br label %24

; <label>:24                                      ; preds = %20, %17
  %i.1.i = phi i32 [ %21, %20 ], [ %i.0.i, %17 ]
  %25 = and i32 %6, 4
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %unmakemask.exit, label %27

; <label>:27                                      ; preds = %24
  %28 = add nsw i32 %i.1.i, 1
  %29 = sext i32 %i.1.i to i64
  %30 = getelementptr inbounds [5 x i8], [5 x i8]* %buff, i64 0, i64 %29
  store i8 108, i8* %30, align 1, !tbaa !76
  br label %unmakemask.exit

unmakemask.exit:                                  ; preds = %24, %27
  %i.2.i = phi i32 [ %28, %27 ], [ %i.1.i, %24 ]
  %31 = sext i32 %i.2.i to i64
  %32 = getelementptr inbounds [5 x i8], [5 x i8]* %buff, i64 0, i64 %31
  store i8 0, i8* %32, align 1, !tbaa !76
  call void @lua_pushstring(%struct.lua_State* %L, i8* %5) #1
  %33 = call i32 @lua_gethookcount(%struct.lua_State* %.0.i) #1
  %34 = sext i32 %33 to i64
  call void @lua_pushinteger(%struct.lua_State* %L, i64 %34) #1
  call void @llvm.lifetime.end(i64 5, i8* %5) #1
  ret i32 3
}

; Function Attrs: nounwind uwtable
define internal i32 @db_getinfo(%struct.lua_State* %L) #0 {
  %ar = alloca %struct.lua_Debug, align 8
  %1 = bitcast %struct.lua_Debug* %ar to i8*
  call void @llvm.lifetime.start(i64 120, i8* %1) #1
  %2 = tail call i32 @lua_type(%struct.lua_State* %L, i32 1) #1
  %3 = icmp eq i32 %2, 8
  br i1 %3, label %4, label %getthread.exit

; <label>:4                                       ; preds = %0
  %5 = tail call %struct.lua_State* @lua_tothread(%struct.lua_State* %L, i32 1) #1
  br label %getthread.exit

getthread.exit:                                   ; preds = %0, %4
  %arg.0 = phi i32 [ 1, %4 ], [ 0, %0 ]
  %.0.i = phi %struct.lua_State* [ %5, %4 ], [ %L, %0 ]
  %6 = or i32 %arg.0, 2
  %7 = tail call i8* @luaL_optlstring(%struct.lua_State* %L, i32 %6, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.24.112, i64 0, i64 0), i64* null) #1
  %8 = add nuw nsw i32 %arg.0, 1
  %9 = tail call i32 @lua_isnumber(%struct.lua_State* %L, i32 %8) #1
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %17, label %11

; <label>:11                                      ; preds = %getthread.exit
  %12 = tail call i64 @lua_tointeger(%struct.lua_State* %L, i32 %8) #1
  %13 = trunc i64 %12 to i32
  %14 = call i32 @lua_getstack(%struct.lua_State* %.0.i, i32 %13, %struct.lua_Debug* nonnull %ar) #1
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %25

; <label>:16                                      ; preds = %11
  call void @lua_pushnil(%struct.lua_State* %L) #1
  br label %81

; <label>:17                                      ; preds = %getthread.exit
  %18 = tail call i32 @lua_type(%struct.lua_State* %L, i32 %8) #1
  %19 = icmp eq i32 %18, 6
  br i1 %19, label %20, label %23

; <label>:20                                      ; preds = %17
  %21 = tail call i8* (%struct.lua_State*, i8*, ...) @lua_pushfstring(%struct.lua_State* %L, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.25.113, i64 0, i64 0), i8* %7) #1
  %22 = tail call i8* @lua_tolstring(%struct.lua_State* %L, i32 -1, i64* null) #1
  tail call void @lua_pushvalue(%struct.lua_State* %L, i32 %8) #1
  tail call void @lua_xmove(%struct.lua_State* %L, %struct.lua_State* %.0.i, i32 1) #1
  br label %25

; <label>:23                                      ; preds = %17
  %24 = tail call i32 @luaL_argerror(%struct.lua_State* %L, i32 %8, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.26.114, i64 0, i64 0)) #1
  br label %81

; <label>:25                                      ; preds = %11, %20
  %options.0 = phi i8* [ %7, %11 ], [ %22, %20 ]
  %26 = call i32 @lua_getinfo(%struct.lua_State* %.0.i, i8* %options.0, %struct.lua_Debug* nonnull %ar) #1
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %30

; <label>:28                                      ; preds = %25
  %29 = call i32 @luaL_argerror(%struct.lua_State* %L, i32 %6, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.27.115, i64 0, i64 0)) #1
  br label %81

; <label>:30                                      ; preds = %25
  call void @lua_createtable(%struct.lua_State* %L, i32 0, i32 2) #1
  %31 = call i8* @strchr(i8* %options.0, i32 83) #1
  %32 = icmp eq i8* %31, null
  br i1 %32, label %45, label %33

; <label>:33                                      ; preds = %30
  %34 = getelementptr inbounds %struct.lua_Debug, %struct.lua_Debug* %ar, i64 0, i32 4
  %35 = load i8*, i8** %34, align 8, !tbaa !118
  call void @lua_pushstring(%struct.lua_State* %L, i8* %35) #1
  call void @lua_setfield(%struct.lua_State* %L, i32 -2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.28.116, i64 0, i64 0)) #1
  %36 = getelementptr inbounds %struct.lua_Debug, %struct.lua_Debug* %ar, i64 0, i32 9, i64 0
  call void @lua_pushstring(%struct.lua_State* %L, i8* %36) #1
  call void @lua_setfield(%struct.lua_State* %L, i32 -2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.29.117, i64 0, i64 0)) #1
  %37 = getelementptr inbounds %struct.lua_Debug, %struct.lua_Debug* %ar, i64 0, i32 7
  %38 = load i32, i32* %37, align 8, !tbaa !119
  %39 = sext i32 %38 to i64
  call void @lua_pushinteger(%struct.lua_State* %L, i64 %39) #1
  call void @lua_setfield(%struct.lua_State* %L, i32 -2, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.30.118, i64 0, i64 0)) #1
  %40 = getelementptr inbounds %struct.lua_Debug, %struct.lua_Debug* %ar, i64 0, i32 8
  %41 = load i32, i32* %40, align 4, !tbaa !120
  %42 = sext i32 %41 to i64
  call void @lua_pushinteger(%struct.lua_State* %L, i64 %42) #1
  call void @lua_setfield(%struct.lua_State* %L, i32 -2, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.31.119, i64 0, i64 0)) #1
  %43 = getelementptr inbounds %struct.lua_Debug, %struct.lua_Debug* %ar, i64 0, i32 3
  %44 = load i8*, i8** %43, align 8, !tbaa !121
  call void @lua_pushstring(%struct.lua_State* %L, i8* %44) #1
  call void @lua_setfield(%struct.lua_State* %L, i32 -2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.32.120, i64 0, i64 0)) #1
  br label %45

; <label>:45                                      ; preds = %30, %33
  %46 = call i8* @strchr(i8* %options.0, i32 108) #1
  %47 = icmp eq i8* %46, null
  br i1 %47, label %52, label %48

; <label>:48                                      ; preds = %45
  %49 = getelementptr inbounds %struct.lua_Debug, %struct.lua_Debug* %ar, i64 0, i32 5
  %50 = load i32, i32* %49, align 8, !tbaa !72
  %51 = sext i32 %50 to i64
  call void @lua_pushinteger(%struct.lua_State* %L, i64 %51) #1
  call void @lua_setfield(%struct.lua_State* %L, i32 -2, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.33.121, i64 0, i64 0)) #1
  br label %52

; <label>:52                                      ; preds = %45, %48
  %53 = call i8* @strchr(i8* %options.0, i32 117) #1
  %54 = icmp eq i8* %53, null
  br i1 %54, label %59, label %55

; <label>:55                                      ; preds = %52
  %56 = getelementptr inbounds %struct.lua_Debug, %struct.lua_Debug* %ar, i64 0, i32 6
  %57 = load i32, i32* %56, align 4, !tbaa !122
  %58 = sext i32 %57 to i64
  call void @lua_pushinteger(%struct.lua_State* %L, i64 %58) #1
  call void @lua_setfield(%struct.lua_State* %L, i32 -2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.34.122, i64 0, i64 0)) #1
  br label %59

; <label>:59                                      ; preds = %52, %55
  %60 = call i8* @strchr(i8* %options.0, i32 110) #1
  %61 = icmp eq i8* %60, null
  br i1 %61, label %67, label %62

; <label>:62                                      ; preds = %59
  %63 = getelementptr inbounds %struct.lua_Debug, %struct.lua_Debug* %ar, i64 0, i32 1
  %64 = load i8*, i8** %63, align 8, !tbaa !71
  call void @lua_pushstring(%struct.lua_State* %L, i8* %64) #1
  call void @lua_setfield(%struct.lua_State* %L, i32 -2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.35.123, i64 0, i64 0)) #1
  %65 = getelementptr inbounds %struct.lua_Debug, %struct.lua_Debug* %ar, i64 0, i32 2
  %66 = load i8*, i8** %65, align 8, !tbaa !69
  call void @lua_pushstring(%struct.lua_State* %L, i8* %66) #1
  call void @lua_setfield(%struct.lua_State* %L, i32 -2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.36.124, i64 0, i64 0)) #1
  br label %67

; <label>:67                                      ; preds = %59, %62
  %68 = call i8* @strchr(i8* %options.0, i32 76) #1
  %69 = icmp eq i8* %68, null
  br i1 %69, label %74, label %70

; <label>:70                                      ; preds = %67
  %71 = icmp eq %struct.lua_State* %.0.i, %L
  br i1 %71, label %72, label %73

; <label>:72                                      ; preds = %70
  call void @lua_pushvalue(%struct.lua_State* %L, i32 -2) #1
  call void @lua_remove(%struct.lua_State* %L, i32 -3) #1
  br label %treatstackoption.exit

; <label>:73                                      ; preds = %70
  call void @lua_xmove(%struct.lua_State* %.0.i, %struct.lua_State* %L, i32 1) #1
  br label %treatstackoption.exit

treatstackoption.exit:                            ; preds = %72, %73
  call void @lua_setfield(%struct.lua_State* %L, i32 -2, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.37.125, i64 0, i64 0)) #1
  br label %74

; <label>:74                                      ; preds = %67, %treatstackoption.exit
  %75 = call i8* @strchr(i8* %options.0, i32 102) #1
  %76 = icmp eq i8* %75, null
  br i1 %76, label %81, label %77

; <label>:77                                      ; preds = %74
  %78 = icmp eq %struct.lua_State* %.0.i, %L
  br i1 %78, label %79, label %80

; <label>:79                                      ; preds = %77
  call void @lua_pushvalue(%struct.lua_State* %L, i32 -2) #1
  call void @lua_remove(%struct.lua_State* %L, i32 -3) #1
  br label %treatstackoption.exit1

; <label>:80                                      ; preds = %77
  call void @lua_xmove(%struct.lua_State* %.0.i, %struct.lua_State* %L, i32 1) #1
  br label %treatstackoption.exit1

treatstackoption.exit1:                           ; preds = %79, %80
  call void @lua_setfield(%struct.lua_State* %L, i32 -2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.38.126, i64 0, i64 0)) #1
  br label %81

; <label>:81                                      ; preds = %treatstackoption.exit1, %74, %28, %23, %16
  %.0 = phi i32 [ %29, %28 ], [ 1, %16 ], [ %24, %23 ], [ 1, %74 ], [ 1, %treatstackoption.exit1 ]
  call void @llvm.lifetime.end(i64 120, i8* %1) #1
  ret i32 %.0
}

; Function Attrs: nounwind uwtable
define internal i32 @db_getlocal(%struct.lua_State* %L) #0 {
  %ar = alloca %struct.lua_Debug, align 8
  %1 = tail call i32 @lua_type(%struct.lua_State* %L, i32 1) #1
  %2 = icmp eq i32 %1, 8
  br i1 %2, label %3, label %getthread.exit

; <label>:3                                       ; preds = %0
  %4 = tail call %struct.lua_State* @lua_tothread(%struct.lua_State* %L, i32 1) #1
  br label %getthread.exit

getthread.exit:                                   ; preds = %0, %3
  %arg.0 = phi i32 [ 1, %3 ], [ 0, %0 ]
  %.0.i = phi %struct.lua_State* [ %4, %3 ], [ %L, %0 ]
  %5 = bitcast %struct.lua_Debug* %ar to i8*
  call void @llvm.lifetime.start(i64 120, i8* %5) #1
  %6 = add nuw nsw i32 %arg.0, 1
  %7 = tail call i64 @luaL_checkinteger(%struct.lua_State* %L, i32 %6) #1
  %8 = trunc i64 %7 to i32
  %9 = call i32 @lua_getstack(%struct.lua_State* %.0.i, i32 %8, %struct.lua_Debug* nonnull %ar) #1
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %13

; <label>:11                                      ; preds = %getthread.exit
  %12 = call i32 @luaL_argerror(%struct.lua_State* %L, i32 %6, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.39.105, i64 0, i64 0)) #1
  br label %21

; <label>:13                                      ; preds = %getthread.exit
  %14 = or i32 %arg.0, 2
  %15 = call i64 @luaL_checkinteger(%struct.lua_State* %L, i32 %14) #1
  %16 = trunc i64 %15 to i32
  %17 = call i8* @lua_getlocal(%struct.lua_State* %.0.i, %struct.lua_Debug* nonnull %ar, i32 %16) #1
  %18 = icmp eq i8* %17, null
  br i1 %18, label %20, label %19

; <label>:19                                      ; preds = %13
  call void @lua_xmove(%struct.lua_State* %.0.i, %struct.lua_State* %L, i32 1) #1
  call void @lua_pushstring(%struct.lua_State* %L, i8* %17) #1
  call void @lua_pushvalue(%struct.lua_State* %L, i32 -2) #1
  br label %21

; <label>:20                                      ; preds = %13
  call void @lua_pushnil(%struct.lua_State* %L) #1
  br label %21

; <label>:21                                      ; preds = %20, %19, %11
  %.0 = phi i32 [ 2, %19 ], [ 1, %20 ], [ %12, %11 ]
  call void @llvm.lifetime.end(i64 120, i8* %5) #1
  ret i32 %.0
}

; Function Attrs: nounwind uwtable
define internal i32 @db_getregistry(%struct.lua_State* %L) #0 {
  tail call void @lua_pushvalue(%struct.lua_State* %L, i32 -10000) #1
  ret i32 1
}

; Function Attrs: nounwind uwtable
define internal i32 @db_getmetatable(%struct.lua_State* %L) #0 {
  tail call void @luaL_checkany(%struct.lua_State* %L, i32 1) #1
  %1 = tail call i32 @lua_getmetatable(%struct.lua_State* %L, i32 1) #1
  %2 = icmp eq i32 %1, 0
  br i1 %2, label %3, label %4

; <label>:3                                       ; preds = %0
  tail call void @lua_pushnil(%struct.lua_State* %L) #1
  br label %4

; <label>:4                                       ; preds = %0, %3
  ret i32 1
}

; Function Attrs: nounwind uwtable
define internal i32 @db_getupvalue(%struct.lua_State* %L) #0 {
  %1 = tail call i64 @luaL_checkinteger(%struct.lua_State* %L, i32 2) #1
  tail call void @luaL_checktype(%struct.lua_State* %L, i32 1, i32 6) #1
  %2 = tail call i32 @lua_iscfunction(%struct.lua_State* %L, i32 1) #1
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %4, label %auxupvalue.exit

; <label>:4                                       ; preds = %0
  %5 = trunc i64 %1 to i32
  %6 = tail call i8* @lua_getupvalue(%struct.lua_State* %L, i32 1, i32 %5) #1
  %7 = icmp eq i8* %6, null
  br i1 %7, label %auxupvalue.exit, label %8

; <label>:8                                       ; preds = %4
  tail call void @lua_pushstring(%struct.lua_State* %L, i8* %6) #1
  tail call void @lua_insert(%struct.lua_State* %L, i32 -2) #1
  br label %auxupvalue.exit

auxupvalue.exit:                                  ; preds = %0, %4, %8
  %.0.i = phi i32 [ 2, %8 ], [ 0, %0 ], [ 0, %4 ]
  ret i32 %.0.i
}

; Function Attrs: nounwind uwtable
define internal i32 @db_setfenv(%struct.lua_State* %L) #0 {
  tail call void @luaL_checktype(%struct.lua_State* %L, i32 2, i32 5) #1
  tail call void @lua_settop(%struct.lua_State* %L, i32 2) #1
  %1 = tail call i32 @lua_setfenv(%struct.lua_State* %L, i32 1) #1
  %2 = icmp eq i32 %1, 0
  br i1 %2, label %3, label %5

; <label>:3                                       ; preds = %0
  %4 = tail call i32 (%struct.lua_State*, i8*, ...) @luaL_error(%struct.lua_State* %L, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.40.111, i64 0, i64 0)) #1
  br label %5

; <label>:5                                       ; preds = %3, %0
  ret i32 1
}

; Function Attrs: nounwind uwtable
define internal i32 @db_sethook(%struct.lua_State* %L) #0 {
  %1 = tail call i32 @lua_type(%struct.lua_State* %L, i32 1) #1
  %2 = icmp eq i32 %1, 8
  br i1 %2, label %3, label %getthread.exit

; <label>:3                                       ; preds = %0
  %4 = tail call %struct.lua_State* @lua_tothread(%struct.lua_State* %L, i32 1) #1
  br label %getthread.exit

getthread.exit:                                   ; preds = %0, %3
  %arg.0 = phi i32 [ 1, %3 ], [ 0, %0 ]
  %.0.i = phi %struct.lua_State* [ %4, %3 ], [ %L, %0 ]
  %5 = add nuw nsw i32 %arg.0, 1
  %6 = tail call i32 @lua_type(%struct.lua_State* %L, i32 %5) #1
  %7 = icmp slt i32 %6, 1
  br i1 %7, label %8, label %9

; <label>:8                                       ; preds = %getthread.exit
  tail call void @lua_settop(%struct.lua_State* %L, i32 %5) #1
  br label %24

; <label>:9                                       ; preds = %getthread.exit
  %10 = or i32 %arg.0, 2
  %11 = tail call i8* @luaL_checklstring(%struct.lua_State* %L, i32 %10, i64* null) #1
  tail call void @luaL_checktype(%struct.lua_State* %L, i32 %5, i32 6) #1
  %12 = add nuw nsw i32 %arg.0, 3
  %13 = tail call i64 @luaL_optinteger(%struct.lua_State* %L, i32 %12, i64 0) #1
  %14 = trunc i64 %13 to i32
  %15 = tail call i8* @strchr(i8* %11, i32 99) #1
  %not..i = icmp ne i8* %15, null
  %..i = zext i1 %not..i to i32
  %16 = tail call i8* @strchr(i8* %11, i32 114) #1
  %17 = icmp eq i8* %16, null
  %18 = or i32 %..i, 2
  %mask.1.i = select i1 %17, i32 %..i, i32 %18
  %19 = tail call i8* @strchr(i8* %11, i32 108) #1
  %20 = icmp eq i8* %19, null
  %21 = or i32 %mask.1.i, 4
  %mask.1..i = select i1 %20, i32 %mask.1.i, i32 %21
  %22 = icmp sgt i32 %14, 0
  %23 = or i32 %mask.1..i, 8
  %mask.3.i = select i1 %22, i32 %23, i32 %mask.1..i
  br label %24

; <label>:24                                      ; preds = %9, %8
  %func.0 = phi void (%struct.lua_State*, %struct.lua_Debug*)* [ null, %8 ], [ @hookf, %9 ]
  %count.0 = phi i32 [ 0, %8 ], [ %14, %9 ]
  %mask.0 = phi i32 [ 0, %8 ], [ %mask.3.i, %9 ]
  tail call fastcc void @gethooktable(%struct.lua_State* %L)
  %25 = bitcast %struct.lua_State* %.0.i to i8*
  tail call void @lua_pushlightuserdata(%struct.lua_State* %L, i8* %25) #1
  tail call void @lua_pushvalue(%struct.lua_State* %L, i32 %5) #1
  tail call void @lua_rawset(%struct.lua_State* %L, i32 -3) #1
  tail call void @lua_settop(%struct.lua_State* %L, i32 -2) #1
  %26 = tail call i32 @lua_sethook(%struct.lua_State* %.0.i, void (%struct.lua_State*, %struct.lua_Debug*)* %func.0, i32 %mask.0, i32 %count.0) #1
  ret i32 0
}

; Function Attrs: nounwind uwtable
define internal i32 @db_setlocal(%struct.lua_State* %L) #0 {
  %ar = alloca %struct.lua_Debug, align 8
  %1 = tail call i32 @lua_type(%struct.lua_State* %L, i32 1) #1
  %2 = icmp eq i32 %1, 8
  br i1 %2, label %3, label %getthread.exit

; <label>:3                                       ; preds = %0
  %4 = tail call %struct.lua_State* @lua_tothread(%struct.lua_State* %L, i32 1) #1
  br label %getthread.exit

getthread.exit:                                   ; preds = %0, %3
  %arg.0 = phi i32 [ 1, %3 ], [ 0, %0 ]
  %.0.i = phi %struct.lua_State* [ %4, %3 ], [ %L, %0 ]
  %5 = bitcast %struct.lua_Debug* %ar to i8*
  call void @llvm.lifetime.start(i64 120, i8* %5) #1
  %6 = add nuw nsw i32 %arg.0, 1
  %7 = tail call i64 @luaL_checkinteger(%struct.lua_State* %L, i32 %6) #1
  %8 = trunc i64 %7 to i32
  %9 = call i32 @lua_getstack(%struct.lua_State* %.0.i, i32 %8, %struct.lua_Debug* nonnull %ar) #1
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %13

; <label>:11                                      ; preds = %getthread.exit
  %12 = call i32 @luaL_argerror(%struct.lua_State* %L, i32 %6, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.39.105, i64 0, i64 0)) #1
  br label %19

; <label>:13                                      ; preds = %getthread.exit
  %14 = add nuw nsw i32 %arg.0, 3
  call void @luaL_checkany(%struct.lua_State* %L, i32 %14) #1
  call void @lua_settop(%struct.lua_State* %L, i32 %14) #1
  call void @lua_xmove(%struct.lua_State* %L, %struct.lua_State* %.0.i, i32 1) #1
  %15 = or i32 %arg.0, 2
  %16 = call i64 @luaL_checkinteger(%struct.lua_State* %L, i32 %15) #1
  %17 = trunc i64 %16 to i32
  %18 = call i8* @lua_setlocal(%struct.lua_State* %.0.i, %struct.lua_Debug* nonnull %ar, i32 %17) #1
  call void @lua_pushstring(%struct.lua_State* %L, i8* %18) #1
  br label %19

; <label>:19                                      ; preds = %13, %11
  %.0 = phi i32 [ 1, %13 ], [ %12, %11 ]
  call void @llvm.lifetime.end(i64 120, i8* %5) #1
  ret i32 %.0
}

; Function Attrs: nounwind uwtable
define internal i32 @db_setmetatable(%struct.lua_State* %L) #0 {
  %1 = tail call i32 @lua_type(%struct.lua_State* %L, i32 2) #1
  switch i32 %1, label %2 [
    i32 5, label %4
    i32 0, label %4
  ]

; <label>:2                                       ; preds = %0
  %3 = tail call i32 @luaL_argerror(%struct.lua_State* %L, i32 2, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.41.104, i64 0, i64 0)) #1
  br label %4

; <label>:4                                       ; preds = %0, %0, %2
  tail call void @lua_settop(%struct.lua_State* %L, i32 2) #1
  %5 = tail call i32 @lua_setmetatable(%struct.lua_State* %L, i32 1) #1
  tail call void @lua_pushboolean(%struct.lua_State* %L, i32 %5) #1
  ret i32 1
}

; Function Attrs: nounwind uwtable
define internal i32 @db_setupvalue(%struct.lua_State* %L) #0 {
  tail call void @luaL_checkany(%struct.lua_State* %L, i32 3) #1
  %1 = tail call i64 @luaL_checkinteger(%struct.lua_State* %L, i32 2) #1
  tail call void @luaL_checktype(%struct.lua_State* %L, i32 1, i32 6) #1
  %2 = tail call i32 @lua_iscfunction(%struct.lua_State* %L, i32 1) #1
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %4, label %auxupvalue.exit

; <label>:4                                       ; preds = %0
  %5 = trunc i64 %1 to i32
  %6 = tail call i8* @lua_setupvalue(%struct.lua_State* %L, i32 1, i32 %5) #1
  %7 = icmp eq i8* %6, null
  br i1 %7, label %auxupvalue.exit, label %8

; <label>:8                                       ; preds = %4
  tail call void @lua_pushstring(%struct.lua_State* %L, i8* %6) #1
  tail call void @lua_insert(%struct.lua_State* %L, i32 -1) #1
  br label %auxupvalue.exit

auxupvalue.exit:                                  ; preds = %0, %4, %8
  %.0.i = phi i32 [ 1, %8 ], [ 0, %0 ], [ 0, %4 ]
  ret i32 %.0.i
}

; Function Attrs: nounwind uwtable
define internal i32 @db_errorfb(%struct.lua_State* %L) #0 {
  %ar = alloca %struct.lua_Debug, align 8
  %1 = tail call i32 @lua_type(%struct.lua_State* %L, i32 1) #1
  %2 = icmp eq i32 %1, 8
  br i1 %2, label %3, label %getthread.exit

; <label>:3                                       ; preds = %0
  %4 = tail call %struct.lua_State* @lua_tothread(%struct.lua_State* %L, i32 1) #1
  br label %getthread.exit

getthread.exit:                                   ; preds = %0, %3
  %arg.0 = phi i32 [ 1, %3 ], [ 0, %0 ]
  %.0.i = phi %struct.lua_State* [ %4, %3 ], [ %L, %0 ]
  %5 = bitcast %struct.lua_Debug* %ar to i8*
  call void @llvm.lifetime.start(i64 120, i8* %5) #1
  %6 = or i32 %arg.0, 2
  %7 = tail call i32 @lua_isnumber(%struct.lua_State* %L, i32 %6) #1
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %12, label %9

; <label>:9                                       ; preds = %getthread.exit
  %10 = tail call i64 @lua_tointeger(%struct.lua_State* %L, i32 %6) #1
  %11 = trunc i64 %10 to i32
  tail call void @lua_settop(%struct.lua_State* %L, i32 -2) #1
  br label %15

; <label>:12                                      ; preds = %getthread.exit
  %13 = icmp eq %struct.lua_State* %.0.i, %L
  %14 = zext i1 %13 to i32
  br label %15

; <label>:15                                      ; preds = %12, %9
  %level.0 = phi i32 [ %11, %9 ], [ %14, %12 ]
  %16 = tail call i32 @lua_gettop(%struct.lua_State* %L) #1
  %17 = icmp eq i32 %16, %arg.0
  br i1 %17, label %18, label %19

; <label>:18                                      ; preds = %15
  tail call void @lua_pushlstring(%struct.lua_State* %L, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.42.93, i64 0, i64 0), i64 0) #1
  br label %24

; <label>:19                                      ; preds = %15
  %20 = add nuw nsw i32 %arg.0, 1
  %21 = tail call i32 @lua_isstring(%struct.lua_State* %L, i32 %20) #1
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %74, label %23

; <label>:23                                      ; preds = %19
  tail call void @lua_pushlstring(%struct.lua_State* %L, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.17.94, i64 0, i64 0), i64 1) #1
  br label %24

; <label>:24                                      ; preds = %23, %18
  tail call void @lua_pushlstring(%struct.lua_State* %L, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.43.95, i64 0, i64 0), i64 16) #1
  %25 = getelementptr inbounds %struct.lua_Debug, %struct.lua_Debug* %ar, i64 0, i32 9, i64 0
  %26 = getelementptr inbounds %struct.lua_Debug, %struct.lua_Debug* %ar, i64 0, i32 5
  %27 = getelementptr inbounds %struct.lua_Debug, %struct.lua_Debug* %ar, i64 0, i32 2
  %28 = getelementptr inbounds %struct.lua_Debug, %struct.lua_Debug* %ar, i64 0, i32 3
  %29 = getelementptr inbounds %struct.lua_Debug, %struct.lua_Debug* %ar, i64 0, i32 7
  %30 = getelementptr inbounds %struct.lua_Debug, %struct.lua_Debug* %ar, i64 0, i32 1
  br label %.outer

.outer.loopexit:                                  ; preds = %42
  %level.2.lcssa = phi i32 [ %level.2, %42 ]
  br label %.outer.backedge

.outer:                                           ; preds = %.outer.backedge, %24
  %level.1.ph = phi i32 [ %level.0, %24 ], [ %level.1.ph.be, %.outer.backedge ]
  %firstpart.0.ph = phi i32 [ 1, %24 ], [ %firstpart.0.ph.be, %.outer.backedge ]
  %31 = icmp sgt i32 %level.1.ph, 11
  %32 = add nsw i32 %level.1.ph, 11
  br i1 %31, label %.outer.split.us.preheader, label %.outer..outer.split_crit_edge

.outer.split.us.preheader:                        ; preds = %.outer
  br label %.outer.split.us

.outer..outer.split_crit_edge:                    ; preds = %.outer
  %33 = call i32 @lua_getstack(%struct.lua_State* %.0.i, i32 %level.1.ph, %struct.lua_Debug* nonnull %ar) #1
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %.us-lcssa.us.loopexit15, label %.us-lcssa6.us

.outer.split.us:                                  ; preds = %.outer.split.us.preheader, %39
  %firstpart.0.us = phi i32 [ 0, %39 ], [ %firstpart.0.ph, %.outer.split.us.preheader ]
  %35 = call i32 @lua_getstack(%struct.lua_State* %.0.i, i32 %level.1.ph, %struct.lua_Debug* nonnull %ar) #1
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %.us-lcssa.us.loopexit, label %37

; <label>:37                                      ; preds = %.outer.split.us
  %38 = icmp eq i32 %firstpart.0.us, 0
  br i1 %38, label %.us-lcssa6.us.loopexit, label %39

; <label>:39                                      ; preds = %37
  %40 = call i32 @lua_getstack(%struct.lua_State* %.0.i, i32 %32, %struct.lua_Debug* nonnull %ar) #1
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %.outer.split.us, label %.us-lcssa7.us

.us-lcssa7.us:                                    ; preds = %39
  call void @lua_pushlstring(%struct.lua_State* %L, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.44.96, i64 0, i64 0), i64 5) #1
  br label %42

; <label>:42                                      ; preds = %42, %.us-lcssa7.us
  %level.2.in = phi i32 [ %level.1.ph, %.us-lcssa7.us ], [ %level.2, %42 ]
  %level.2 = add nsw i32 %level.2.in, 1
  %43 = add nsw i32 %level.2.in, 11
  %44 = call i32 @lua_getstack(%struct.lua_State* %.0.i, i32 %43, %struct.lua_Debug* nonnull %ar) #1
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %.outer.loopexit, label %42

.us-lcssa6.us.loopexit:                           ; preds = %37
  br label %.us-lcssa6.us

.us-lcssa6.us:                                    ; preds = %.us-lcssa6.us.loopexit, %.outer..outer.split_crit_edge
  %firstpart.0.lcssa2 = phi i32 [ %firstpart.0.ph, %.outer..outer.split_crit_edge ], [ 0, %.us-lcssa6.us.loopexit ]
  %46 = add nsw i32 %level.1.ph, 1
  call void @lua_pushlstring(%struct.lua_State* %L, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.45.97, i64 0, i64 0), i64 2) #1
  %47 = call i32 @lua_getinfo(%struct.lua_State* %.0.i, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.46.98, i64 0, i64 0), %struct.lua_Debug* nonnull %ar) #1
  %48 = call i8* (%struct.lua_State*, i8*, ...) @lua_pushfstring(%struct.lua_State* %L, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.47.99, i64 0, i64 0), i8* %25) #1
  %49 = load i32, i32* %26, align 8, !tbaa !72
  %50 = icmp sgt i32 %49, 0
  br i1 %50, label %51, label %53

; <label>:51                                      ; preds = %.us-lcssa6.us
  %52 = call i8* (%struct.lua_State*, i8*, ...) @lua_pushfstring(%struct.lua_State* %L, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.48.100, i64 0, i64 0), i32 %49) #1
  br label %53

; <label>:53                                      ; preds = %51, %.us-lcssa6.us
  %54 = load i8*, i8** %27, align 8, !tbaa !69
  %55 = load i8, i8* %54, align 1, !tbaa !76
  %56 = icmp eq i8 %55, 0
  br i1 %56, label %60, label %57

; <label>:57                                      ; preds = %53
  %58 = load i8*, i8** %30, align 8, !tbaa !71
  %59 = call i8* (%struct.lua_State*, i8*, ...) @lua_pushfstring(%struct.lua_State* %L, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.49.101, i64 0, i64 0), i8* %58) #1
  br label %69

; <label>:60                                      ; preds = %53
  %61 = load i8*, i8** %28, align 8, !tbaa !121
  %62 = load i8, i8* %61, align 1, !tbaa !76
  switch i8 %62, label %66 [
    i8 109, label %63
    i8 67, label %65
    i8 116, label %65
  ]

; <label>:63                                      ; preds = %60
  %64 = call i8* (%struct.lua_State*, i8*, ...) @lua_pushfstring(%struct.lua_State* %L, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.50.102, i64 0, i64 0)) #1
  br label %69

; <label>:65                                      ; preds = %60, %60
  call void @lua_pushlstring(%struct.lua_State* %L, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.51.103, i64 0, i64 0), i64 2) #1
  br label %69

; <label>:66                                      ; preds = %60
  %67 = load i32, i32* %29, align 8, !tbaa !119
  %68 = call i8* (%struct.lua_State*, i8*, ...) @lua_pushfstring(%struct.lua_State* %L, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.52, i64 0, i64 0), i8* %25, i32 %67) #1
  br label %69

; <label>:69                                      ; preds = %63, %66, %65, %57
  %70 = call i32 @lua_gettop(%struct.lua_State* %L) #1
  %71 = sub nsw i32 %70, %arg.0
  call void @lua_concat(%struct.lua_State* %L, i32 %71) #1
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %69, %.outer.loopexit
  %level.1.ph.be = phi i32 [ %46, %69 ], [ %level.2.lcssa, %.outer.loopexit ]
  %firstpart.0.ph.be = phi i32 [ %firstpart.0.lcssa2, %69 ], [ 0, %.outer.loopexit ]
  br label %.outer

.us-lcssa.us.loopexit:                            ; preds = %.outer.split.us
  br label %.us-lcssa.us

.us-lcssa.us.loopexit15:                          ; preds = %.outer..outer.split_crit_edge
  br label %.us-lcssa.us

.us-lcssa.us:                                     ; preds = %.us-lcssa.us.loopexit15, %.us-lcssa.us.loopexit
  %72 = call i32 @lua_gettop(%struct.lua_State* %L) #1
  %73 = sub nsw i32 %72, %arg.0
  call void @lua_concat(%struct.lua_State* %L, i32 %73) #1
  br label %74

; <label>:74                                      ; preds = %19, %.us-lcssa.us
  call void @llvm.lifetime.end(i64 120, i8* %5) #1
  ret i32 1
}

; Function Attrs: nounwind uwtable
define internal void @hookf(%struct.lua_State* %L, %struct.lua_Debug* nocapture readonly %ar) #0 {
  tail call void @lua_pushlightuserdata(%struct.lua_State* %L, i8* nonnull @KEY_HOOK) #1
  tail call void @lua_rawget(%struct.lua_State* %L, i32 -10000) #1
  %1 = bitcast %struct.lua_State* %L to i8*
  tail call void @lua_pushlightuserdata(%struct.lua_State* %L, i8* %1) #1
  tail call void @lua_rawget(%struct.lua_State* %L, i32 -2) #1
  %2 = tail call i32 @lua_type(%struct.lua_State* %L, i32 -1) #1
  %3 = icmp eq i32 %2, 6
  br i1 %3, label %4, label %17

; <label>:4                                       ; preds = %0
  %5 = getelementptr inbounds %struct.lua_Debug, %struct.lua_Debug* %ar, i64 0, i32 0
  %6 = load i32, i32* %5, align 4, !tbaa !123
  %7 = sext i32 %6 to i64
  %8 = getelementptr inbounds [5 x i8*], [5 x i8*]* @hookf.hooknames, i64 0, i64 %7
  %9 = load i8*, i8** %8, align 8, !tbaa !25
  tail call void @lua_pushstring(%struct.lua_State* %L, i8* %9) #1
  %10 = getelementptr inbounds %struct.lua_Debug, %struct.lua_Debug* %ar, i64 0, i32 5
  %11 = load i32, i32* %10, align 4, !tbaa !72
  %12 = icmp sgt i32 %11, -1
  br i1 %12, label %13, label %15

; <label>:13                                      ; preds = %4
  %14 = sext i32 %11 to i64
  tail call void @lua_pushinteger(%struct.lua_State* %L, i64 %14) #1
  br label %16

; <label>:15                                      ; preds = %4
  tail call void @lua_pushnil(%struct.lua_State* %L) #1
  br label %16

; <label>:16                                      ; preds = %15, %13
  tail call void @lua_call(%struct.lua_State* %L, i32 2, i32 0) #1
  br label %17

; <label>:17                                      ; preds = %16, %0
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @gethooktable(%struct.lua_State* %L) #0 {
  tail call void @lua_pushlightuserdata(%struct.lua_State* %L, i8* nonnull @KEY_HOOK) #1
  tail call void @lua_rawget(%struct.lua_State* %L, i32 -10000) #1
  %1 = tail call i32 @lua_type(%struct.lua_State* %L, i32 -1) #1
  %2 = icmp eq i32 %1, 5
  br i1 %2, label %4, label %3

; <label>:3                                       ; preds = %0
  tail call void @lua_settop(%struct.lua_State* %L, i32 -2) #1
  tail call void @lua_createtable(%struct.lua_State* %L, i32 0, i32 1) #1
  tail call void @lua_pushlightuserdata(%struct.lua_State* %L, i8* nonnull @KEY_HOOK) #1
  tail call void @lua_pushvalue(%struct.lua_State* %L, i32 -2) #1
  tail call void @lua_rawset(%struct.lua_State* %L, i32 -10000) #1
  br label %4

; <label>:4                                       ; preds = %3, %0
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @lua_sethook(%struct.lua_State* nocapture %L, void (%struct.lua_State*, %struct.lua_Debug*)* %func, i32 %mask, i32 %count) #0 {
  %1 = icmp eq void (%struct.lua_State*, %struct.lua_Debug*)* %func, null
  %2 = icmp eq i32 %mask, 0
  %or.cond = or i1 %1, %2
  %.func = select i1 %or.cond, void (%struct.lua_State*, %struct.lua_Debug*)* null, void (%struct.lua_State*, %struct.lua_Debug*)* %func
  %3 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 21
  store void (%struct.lua_State*, %struct.lua_Debug*)* %.func, void (%struct.lua_State*, %struct.lua_Debug*)** %3, align 8, !tbaa !124
  %4 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 19
  store i32 %count, i32* %4, align 4, !tbaa !125
  %5 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 20
  store i32 %count, i32* %5, align 4, !tbaa !126
  %6 = trunc i32 %mask to i8
  %7 = select i1 %or.cond, i8 0, i8 %6
  %8 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 17
  store i8 %7, i8* %8, align 1, !tbaa !127
  ret i32 1
}

; Function Attrs: nounwind readonly uwtable
define void (%struct.lua_State*, %struct.lua_Debug*)* @lua_gethook(%struct.lua_State* nocapture readonly %L) #2 {
  %1 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 21
  %2 = load void (%struct.lua_State*, %struct.lua_Debug*)*, void (%struct.lua_State*, %struct.lua_Debug*)** %1, align 8, !tbaa !124
  ret void (%struct.lua_State*, %struct.lua_Debug*)* %2
}

; Function Attrs: nounwind readonly uwtable
define i32 @lua_gethookmask(%struct.lua_State* nocapture readonly %L) #2 {
  %1 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 17
  %2 = load i8, i8* %1, align 1, !tbaa !127
  %3 = zext i8 %2 to i32
  ret i32 %3
}

; Function Attrs: nounwind readonly uwtable
define i32 @lua_gethookcount(%struct.lua_State* nocapture readonly %L) #2 {
  %1 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 19
  %2 = load i32, i32* %1, align 4, !tbaa !125
  ret i32 %2
}

; Function Attrs: nounwind uwtable
define i32 @lua_getstack(%struct.lua_State* nocapture readonly %L, i32 %level, %struct.lua_Debug* nocapture %ar) #0 {
  %1 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 7
  %2 = load %struct.CallInfo*, %struct.CallInfo** %1, align 8, !tbaa !13
  %3 = icmp sgt i32 %level, 0
  br i1 %3, label %.lr.ph, label %.critedge

.lr.ph:                                           ; preds = %0
  %4 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 12
  %5 = load %struct.CallInfo*, %struct.CallInfo** %4, align 8, !tbaa !32
  br label %6

; <label>:6                                       ; preds = %.lr.ph, %21
  %ci.02 = phi %struct.CallInfo* [ %2, %.lr.ph ], [ %22, %21 ]
  %.01 = phi i32 [ %level, %.lr.ph ], [ %.1, %21 ]
  %7 = icmp ugt %struct.CallInfo* %ci.02, %5
  br i1 %7, label %8, label %.thread.loopexit

; <label>:8                                       ; preds = %6
  %9 = add nsw i32 %.01, -1
  %10 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %ci.02, i64 0, i32 1
  %11 = bitcast %struct.lua_TValue** %10 to %struct.CClosure***
  %12 = load %struct.CClosure**, %struct.CClosure*** %11, align 8, !tbaa !28
  %13 = load %struct.CClosure*, %struct.CClosure** %12, align 8, !tbaa !25
  %14 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %13, i64 0, i32 3
  %15 = load i8, i8* %14, align 1, !tbaa !35
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %17, label %21

; <label>:17                                      ; preds = %8
  %18 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %ci.02, i64 0, i32 5
  %19 = load i32, i32* %18, align 4, !tbaa !128
  %20 = sub nsw i32 %9, %19
  br label %21

; <label>:21                                      ; preds = %8, %17
  %.1 = phi i32 [ %9, %8 ], [ %20, %17 ]
  %22 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %ci.02, i64 -1
  %23 = icmp sgt i32 %.1, 0
  br i1 %23, label %6, label %.critedge.loopexit

.critedge.loopexit:                               ; preds = %21
  %.lcssa = phi %struct.CallInfo* [ %22, %21 ]
  %.1.lcssa = phi i32 [ %.1, %21 ]
  br label %.critedge

.critedge:                                        ; preds = %.critedge.loopexit, %0
  %ci.0.lcssa = phi %struct.CallInfo* [ %2, %0 ], [ %.lcssa, %.critedge.loopexit ]
  %.0.lcssa = phi i32 [ %level, %0 ], [ %.1.lcssa, %.critedge.loopexit ]
  %24 = icmp eq i32 %.0.lcssa, 0
  br i1 %24, label %25, label %36

; <label>:25                                      ; preds = %.critedge
  %26 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 12
  %27 = load %struct.CallInfo*, %struct.CallInfo** %26, align 8, !tbaa !32
  %28 = icmp ugt %struct.CallInfo* %ci.0.lcssa, %27
  br i1 %28, label %29, label %.thread

; <label>:29                                      ; preds = %25
  %30 = ptrtoint %struct.CallInfo* %ci.0.lcssa to i64
  %31 = ptrtoint %struct.CallInfo* %27 to i64
  %32 = sub i64 %30, %31
  %33 = sdiv exact i64 %32, 40
  %34 = trunc i64 %33 to i32
  %35 = getelementptr inbounds %struct.lua_Debug, %struct.lua_Debug* %ar, i64 0, i32 10
  store i32 %34, i32* %35, align 4, !tbaa !129
  br label %.thread

; <label>:36                                      ; preds = %.critedge
  %37 = getelementptr inbounds %struct.lua_Debug, %struct.lua_Debug* %ar, i64 0, i32 10
  store i32 0, i32* %37, align 4, !tbaa !129
  br label %.thread

.thread.loopexit:                                 ; preds = %6
  br label %.thread

.thread:                                          ; preds = %.thread.loopexit, %25, %36, %29
  %status.0 = phi i32 [ 1, %29 ], [ 1, %36 ], [ 0, %25 ], [ 0, %.thread.loopexit ]
  ret i32 %status.0
}

; Function Attrs: nounwind uwtable
define i8* @lua_getlocal(%struct.lua_State* %L, %struct.lua_Debug* nocapture readonly %ar, i32 %n) #0 {
  %1 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 12
  %2 = load %struct.CallInfo*, %struct.CallInfo** %1, align 8, !tbaa !32
  %3 = getelementptr inbounds %struct.lua_Debug, %struct.lua_Debug* %ar, i64 0, i32 10
  %4 = load i32, i32* %3, align 4, !tbaa !129
  %5 = sext i32 %4 to i64
  %6 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %2, i64 %5
  %ci.idx.i = getelementptr %struct.CallInfo, %struct.CallInfo* %2, i64 %5, i32 1
  %ci.idx.val.i = load %struct.lua_TValue*, %struct.lua_TValue** %ci.idx.i, align 8, !tbaa !28
  %7 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %ci.idx.val.i, i64 0, i32 1
  %8 = load i32, i32* %7, align 4, !tbaa !10
  %9 = icmp eq i32 %8, 6
  br i1 %9, label %10, label %getluaproto.exit.thread.i

; <label>:10                                      ; preds = %0
  %11 = bitcast %struct.lua_TValue* %ci.idx.val.i to %union.Closure**
  %12 = load %union.Closure*, %union.Closure** %11, align 8, !tbaa !25
  %13 = getelementptr inbounds %union.Closure, %union.Closure* %12, i64 0, i32 0, i32 3
  %14 = load i8, i8* %13, align 1, !tbaa !35
  %15 = icmp eq i8 %14, 0
  %16 = bitcast %union.Closure* %12 to %struct.LClosure*
  br i1 %15, label %getluaproto.exit.i, label %getluaproto.exit.thread.i

getluaproto.exit.i:                               ; preds = %10
  %17 = getelementptr inbounds %union.Closure, %union.Closure* %12, i64 0, i32 0, i32 7
  %18 = bitcast i32 (%struct.lua_State*)** %17 to %struct.Proto**
  %19 = load %struct.Proto*, %struct.Proto** %18, align 8, !tbaa !57
  %20 = icmp eq %struct.Proto* %19, null
  br i1 %20, label %getluaproto.exit.thread.i, label %21

; <label>:21                                      ; preds = %getluaproto.exit.i
  %22 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 7
  %23 = load %struct.CallInfo*, %struct.CallInfo** %22, align 8, !tbaa !13
  %24 = icmp eq %struct.CallInfo* %23, %6
  br i1 %24, label %25, label %._crit_edge.i.i

._crit_edge.i.i:                                  ; preds = %21
  %.phi.trans.insert.i.i = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %2, i64 %5, i32 3
  %.phi.trans.insert1.i.i = bitcast i32** %.phi.trans.insert.i.i to i64*
  %.pre.i.i = load i64, i64* %.phi.trans.insert1.i.i, align 8, !tbaa !130
  br label %currentpc.exit.i

; <label>:25                                      ; preds = %21
  %26 = bitcast %struct.lua_TValue* %ci.idx.val.i to %struct.LClosure**
  %27 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 8
  %28 = bitcast i32** %27 to i64*
  %29 = load i64, i64* %28, align 8, !tbaa !131
  %30 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %2, i64 %5, i32 3
  %31 = bitcast i32** %30 to i64*
  store i64 %29, i64* %31, align 8, !tbaa !130
  %.pre.i = load %struct.LClosure*, %struct.LClosure** %26, align 8, !tbaa !25
  br label %currentpc.exit.i

currentpc.exit.i:                                 ; preds = %._crit_edge.i.i, %25
  %32 = phi %struct.LClosure* [ %16, %._crit_edge.i.i ], [ %.pre.i, %25 ]
  %33 = phi i64 [ %.pre.i.i, %._crit_edge.i.i ], [ %29, %25 ]
  %34 = getelementptr inbounds %struct.LClosure, %struct.LClosure* %32, i64 0, i32 7
  %35 = load %struct.Proto*, %struct.Proto** %34, align 8, !tbaa !57
  %36 = getelementptr inbounds %struct.Proto, %struct.Proto* %35, i64 0, i32 4
  %37 = bitcast i32** %36 to i64*
  %38 = load i64, i64* %37, align 8, !tbaa !93
  %39 = sub i64 %33, %38
  %40 = lshr exact i64 %39, 2
  %41 = trunc i64 %40 to i32
  %42 = add nsw i32 %41, -1
  %43 = tail call i8* bitcast (i8* (%struct.Proto.120*, i32, i32)* @luaF_getlocalname to i8* (%struct.Proto*, i32, i32)*)(%struct.Proto* %19, i32 %n, i32 %42) #1
  %44 = icmp eq i8* %43, null
  br i1 %44, label %getluaproto.exit.thread.i, label %currentpc.exit.i.select.unfold_crit_edge

currentpc.exit.i.select.unfold_crit_edge:         ; preds = %currentpc.exit.i
  %.phi.trans.insert = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %6, i64 0, i32 0
  %.pre = load %struct.lua_TValue*, %struct.lua_TValue** %.phi.trans.insert, align 8, !tbaa !132
  br label %select.unfold

getluaproto.exit.thread.i:                        ; preds = %currentpc.exit.i, %getluaproto.exit.i, %10, %0
  %45 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 7
  %46 = load %struct.CallInfo*, %struct.CallInfo** %45, align 8, !tbaa !13
  %47 = icmp eq %struct.CallInfo* %46, %6
  %48 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %49 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %6, i64 1, i32 1
  %.in.i = select i1 %47, %struct.lua_TValue** %48, %struct.lua_TValue** %49
  %50 = bitcast %struct.lua_TValue** %.in.i to i64*
  %51 = load i64, i64* %50, align 8
  %52 = bitcast %struct.CallInfo* %6 to i64*
  %53 = load i64, i64* %52, align 8, !tbaa !132
  %54 = sub i64 %51, %53
  %55 = ashr exact i64 %54, 4
  %56 = sext i32 %n to i64
  %57 = icmp sge i64 %55, %56
  %58 = icmp sgt i32 %n, 0
  %or.cond.i = and i1 %58, %57
  br i1 %or.cond.i, label %getluaproto.exit.thread.i.select.unfold_crit_edge, label %findlocal.exit.thread3

getluaproto.exit.thread.i.select.unfold_crit_edge: ; preds = %getluaproto.exit.thread.i
  %59 = inttoptr i64 %53 to %struct.lua_TValue*
  br label %select.unfold

select.unfold:                                    ; preds = %getluaproto.exit.thread.i.select.unfold_crit_edge, %currentpc.exit.i.select.unfold_crit_edge
  %60 = phi %struct.lua_TValue* [ %.pre, %currentpc.exit.i.select.unfold_crit_edge ], [ %59, %getluaproto.exit.thread.i.select.unfold_crit_edge ]
  %.1.i.ph = phi i8* [ %43, %currentpc.exit.i.select.unfold_crit_edge ], [ getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6.151, i64 0, i64 0), %getluaproto.exit.thread.i.select.unfold_crit_edge ]
  %61 = add nsw i32 %n, -1
  %62 = sext i32 %61 to i64
  %63 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %60, i64 %62
  tail call void @luaA_pushobject(%struct.lua_State* %L, %struct.lua_TValue* %63) #1
  br label %findlocal.exit.thread3

findlocal.exit.thread3:                           ; preds = %getluaproto.exit.thread.i, %select.unfold
  %.1.i2 = phi i8* [ %.1.i.ph, %select.unfold ], [ null, %getluaproto.exit.thread.i ]
  ret i8* %.1.i2
}

; Function Attrs: nounwind uwtable
define i8* @lua_setlocal(%struct.lua_State* nocapture %L, %struct.lua_Debug* nocapture readonly %ar, i32 %n) #0 {
  %1 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 12
  %2 = load %struct.CallInfo*, %struct.CallInfo** %1, align 8, !tbaa !32
  %3 = getelementptr inbounds %struct.lua_Debug, %struct.lua_Debug* %ar, i64 0, i32 10
  %4 = load i32, i32* %3, align 4, !tbaa !129
  %5 = sext i32 %4 to i64
  %6 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %2, i64 %5
  %ci.idx.i = getelementptr %struct.CallInfo, %struct.CallInfo* %2, i64 %5, i32 1
  %ci.idx.val.i = load %struct.lua_TValue*, %struct.lua_TValue** %ci.idx.i, align 8, !tbaa !28
  %7 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %ci.idx.val.i, i64 0, i32 1
  %8 = load i32, i32* %7, align 4, !tbaa !10
  %9 = icmp eq i32 %8, 6
  br i1 %9, label %10, label %getluaproto.exit.thread.i

; <label>:10                                      ; preds = %0
  %11 = bitcast %struct.lua_TValue* %ci.idx.val.i to %union.Closure**
  %12 = load %union.Closure*, %union.Closure** %11, align 8, !tbaa !25
  %13 = getelementptr inbounds %union.Closure, %union.Closure* %12, i64 0, i32 0, i32 3
  %14 = load i8, i8* %13, align 1, !tbaa !35
  %15 = icmp eq i8 %14, 0
  %16 = bitcast %union.Closure* %12 to %struct.LClosure*
  br i1 %15, label %getluaproto.exit.i, label %getluaproto.exit.thread.i

getluaproto.exit.i:                               ; preds = %10
  %17 = getelementptr inbounds %union.Closure, %union.Closure* %12, i64 0, i32 0, i32 7
  %18 = bitcast i32 (%struct.lua_State*)** %17 to %struct.Proto**
  %19 = load %struct.Proto*, %struct.Proto** %18, align 8, !tbaa !57
  %20 = icmp eq %struct.Proto* %19, null
  br i1 %20, label %getluaproto.exit.thread.i, label %21

; <label>:21                                      ; preds = %getluaproto.exit.i
  %22 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 7
  %23 = load %struct.CallInfo*, %struct.CallInfo** %22, align 8, !tbaa !13
  %24 = icmp eq %struct.CallInfo* %23, %6
  br i1 %24, label %25, label %._crit_edge.i.i

._crit_edge.i.i:                                  ; preds = %21
  %.phi.trans.insert.i.i = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %2, i64 %5, i32 3
  %.phi.trans.insert1.i.i = bitcast i32** %.phi.trans.insert.i.i to i64*
  %.pre.i.i = load i64, i64* %.phi.trans.insert1.i.i, align 8, !tbaa !130
  br label %currentpc.exit.i

; <label>:25                                      ; preds = %21
  %26 = bitcast %struct.lua_TValue* %ci.idx.val.i to %struct.LClosure**
  %27 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 8
  %28 = bitcast i32** %27 to i64*
  %29 = load i64, i64* %28, align 8, !tbaa !131
  %30 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %2, i64 %5, i32 3
  %31 = bitcast i32** %30 to i64*
  store i64 %29, i64* %31, align 8, !tbaa !130
  %.pre.i = load %struct.LClosure*, %struct.LClosure** %26, align 8, !tbaa !25
  br label %currentpc.exit.i

currentpc.exit.i:                                 ; preds = %._crit_edge.i.i, %25
  %32 = phi %struct.LClosure* [ %16, %._crit_edge.i.i ], [ %.pre.i, %25 ]
  %33 = phi i64 [ %.pre.i.i, %._crit_edge.i.i ], [ %29, %25 ]
  %34 = getelementptr inbounds %struct.LClosure, %struct.LClosure* %32, i64 0, i32 7
  %35 = load %struct.Proto*, %struct.Proto** %34, align 8, !tbaa !57
  %36 = getelementptr inbounds %struct.Proto, %struct.Proto* %35, i64 0, i32 4
  %37 = bitcast i32** %36 to i64*
  %38 = load i64, i64* %37, align 8, !tbaa !93
  %39 = sub i64 %33, %38
  %40 = lshr exact i64 %39, 2
  %41 = trunc i64 %40 to i32
  %42 = add nsw i32 %41, -1
  %43 = tail call i8* bitcast (i8* (%struct.Proto.120*, i32, i32)* @luaF_getlocalname to i8* (%struct.Proto*, i32, i32)*)(%struct.Proto* %19, i32 %n, i32 %42) #1
  %44 = icmp eq i8* %43, null
  br i1 %44, label %getluaproto.exit.thread.i, label %currentpc.exit.i.select.unfold_crit_edge

currentpc.exit.i.select.unfold_crit_edge:         ; preds = %currentpc.exit.i
  %.phi.trans.insert = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %6, i64 0, i32 0
  %.pre = load %struct.lua_TValue*, %struct.lua_TValue** %.phi.trans.insert, align 8, !tbaa !132
  %.pre4 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  br label %select.unfold

getluaproto.exit.thread.i:                        ; preds = %currentpc.exit.i, %getluaproto.exit.i, %10, %0
  %45 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 7
  %46 = load %struct.CallInfo*, %struct.CallInfo** %45, align 8, !tbaa !13
  %47 = icmp eq %struct.CallInfo* %46, %6
  %48 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %49 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %6, i64 1, i32 1
  %.in.i = select i1 %47, %struct.lua_TValue** %48, %struct.lua_TValue** %49
  %50 = bitcast %struct.lua_TValue** %.in.i to i64*
  %51 = load i64, i64* %50, align 8
  %52 = bitcast %struct.CallInfo* %6 to i64*
  %53 = load i64, i64* %52, align 8, !tbaa !132
  %54 = sub i64 %51, %53
  %55 = ashr exact i64 %54, 4
  %56 = sext i32 %n to i64
  %57 = icmp sge i64 %55, %56
  %58 = icmp sgt i32 %n, 0
  %or.cond.i = and i1 %58, %57
  br i1 %or.cond.i, label %getluaproto.exit.thread.i.select.unfold_crit_edge, label %findlocal.exit.thread3

getluaproto.exit.thread.i.select.unfold_crit_edge: ; preds = %getluaproto.exit.thread.i
  %59 = inttoptr i64 %53 to %struct.lua_TValue*
  br label %select.unfold

select.unfold:                                    ; preds = %getluaproto.exit.thread.i.select.unfold_crit_edge, %currentpc.exit.i.select.unfold_crit_edge
  %.pre-phi = phi %struct.lua_TValue** [ %.pre4, %currentpc.exit.i.select.unfold_crit_edge ], [ %48, %getluaproto.exit.thread.i.select.unfold_crit_edge ]
  %60 = phi %struct.lua_TValue* [ %.pre, %currentpc.exit.i.select.unfold_crit_edge ], [ %59, %getluaproto.exit.thread.i.select.unfold_crit_edge ]
  %.1.i.ph = phi i8* [ %43, %currentpc.exit.i.select.unfold_crit_edge ], [ getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6.151, i64 0, i64 0), %getluaproto.exit.thread.i.select.unfold_crit_edge ]
  %61 = load %struct.lua_TValue*, %struct.lua_TValue** %.pre-phi, align 8, !tbaa !1
  %62 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %61, i64 -1
  %63 = add nsw i32 %n, -1
  %64 = sext i32 %63 to i64
  %65 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %60, i64 %64
  %66 = bitcast %struct.lua_TValue* %62 to i64*
  %67 = bitcast %struct.lua_TValue* %65 to i64*
  %68 = load i64, i64* %66, align 8
  store i64 %68, i64* %67, align 8
  %69 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %61, i64 -1, i32 1
  %70 = load i32, i32* %69, align 4, !tbaa !10
  %71 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %60, i64 %64, i32 1
  store i32 %70, i32* %71, align 4, !tbaa !10
  br label %findlocal.exit.thread3

findlocal.exit.thread3:                           ; preds = %getluaproto.exit.thread.i, %select.unfold
  %.pre-phi5 = phi %struct.lua_TValue** [ %48, %getluaproto.exit.thread.i ], [ %.pre-phi, %select.unfold ]
  %.1.i2 = phi i8* [ null, %getluaproto.exit.thread.i ], [ %.1.i.ph, %select.unfold ]
  %72 = load %struct.lua_TValue*, %struct.lua_TValue** %.pre-phi5, align 8, !tbaa !1
  %73 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %72, i64 -1
  store %struct.lua_TValue* %73, %struct.lua_TValue** %.pre-phi5, align 8, !tbaa !1
  ret i8* %.1.i2
}

; Function Attrs: nounwind uwtable
define i32 @lua_getinfo(%struct.lua_State* %L, i8* readonly %what, %struct.lua_Debug* %ar) #0 {
  %1 = load i8, i8* %what, align 1, !tbaa !76
  %2 = icmp eq i8 %1, 62
  br i1 %2, label %3, label %11

; <label>:3                                       ; preds = %0
  %4 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %5 = load %struct.lua_TValue*, %struct.lua_TValue** %4, align 8, !tbaa !1
  %6 = getelementptr inbounds i8, i8* %what, i64 1
  %7 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %5, i64 -1, i32 0, i32 0
  %8 = bitcast %union.GCObject** %7 to %union.Closure**
  %9 = load %union.Closure*, %union.Closure** %8, align 8, !tbaa !25
  %10 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %5, i64 -1
  store %struct.lua_TValue* %10, %struct.lua_TValue** %4, align 8, !tbaa !1
  br label %24

; <label>:11                                      ; preds = %0
  %12 = getelementptr inbounds %struct.lua_Debug, %struct.lua_Debug* %ar, i64 0, i32 10
  %13 = load i32, i32* %12, align 4, !tbaa !129
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %.thread, label %15

; <label>:15                                      ; preds = %11
  %16 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 12
  %17 = load %struct.CallInfo*, %struct.CallInfo** %16, align 8, !tbaa !32
  %18 = sext i32 %13 to i64
  %19 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %17, i64 %18
  %20 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %17, i64 %18, i32 1
  %21 = bitcast %struct.lua_TValue** %20 to %union.Closure***
  %22 = load %union.Closure**, %union.Closure*** %21, align 8, !tbaa !28
  %23 = load %union.Closure*, %union.Closure** %22, align 8, !tbaa !25
  br label %24

; <label>:24                                      ; preds = %15, %3
  %ci.0 = phi %struct.CallInfo* [ null, %3 ], [ %19, %15 ]
  %f.0 = phi %union.Closure* [ %9, %3 ], [ %23, %15 ]
  %.0 = phi i8* [ %6, %3 ], [ %what, %15 ]
  %25 = icmp eq %union.Closure* %f.0, null
  br i1 %25, label %.thread, label %.preheader.i

.preheader.i:                                     ; preds = %24
  %26 = load i8, i8* %.0, align 1, !tbaa !76
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %auxgetinfo.exit, label %.lr.ph.i

.lr.ph.i:                                         ; preds = %.preheader.i
  %28 = getelementptr inbounds %union.Closure, %union.Closure* %f.0, i64 0, i32 0, i32 3
  %29 = getelementptr inbounds %union.Closure, %union.Closure* %f.0, i64 0, i32 0, i32 7
  %30 = bitcast i32 (%struct.lua_State*)** %29 to %struct.Proto**
  %31 = getelementptr inbounds %struct.lua_Debug, %struct.lua_Debug* %ar, i64 0, i32 4
  %32 = bitcast i8** %31 to %union.TString**
  %33 = getelementptr inbounds %struct.lua_Debug, %struct.lua_Debug* %ar, i64 0, i32 7
  %34 = getelementptr inbounds %struct.lua_Debug, %struct.lua_Debug* %ar, i64 0, i32 8
  %35 = getelementptr inbounds %struct.lua_Debug, %struct.lua_Debug* %ar, i64 0, i32 3
  %36 = getelementptr inbounds %struct.lua_Debug, %struct.lua_Debug* %ar, i64 0, i32 9, i64 0
  %37 = icmp eq %struct.CallInfo* %ci.0, null
  %38 = getelementptr inbounds %struct.lua_Debug, %struct.lua_Debug* %ar, i64 0, i32 5
  %39 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %ci.0, i64 0, i32 1
  %40 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 7
  %41 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 8
  %42 = bitcast i32** %41 to i64*
  %43 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %ci.0, i64 0, i32 3
  %44 = bitcast i32** %43 to i64*
  %45 = getelementptr inbounds %union.Closure, %union.Closure* %f.0, i64 0, i32 0, i32 4
  %46 = getelementptr inbounds %struct.lua_Debug, %struct.lua_Debug* %ar, i64 0, i32 6
  %47 = getelementptr inbounds %struct.lua_Debug, %struct.lua_Debug* %ar, i64 0, i32 2
  %48 = getelementptr inbounds %struct.lua_Debug, %struct.lua_Debug* %ar, i64 0, i32 1
  %49 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %ci.0, i64 0, i32 5
  %50 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %ci.0, i64 -1, i32 1
  %51 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %ci.0, i64 -1
  %52 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %ci.0, i64 -1, i32 3
  %53 = bitcast i32** %52 to i64*
  %54 = bitcast i8** %48 to <2 x i8*>*
  br label %64

.thread:                                          ; preds = %11, %24
  %.05 = phi i8* [ %.0, %24 ], [ %what, %11 ]
  %55 = getelementptr inbounds %struct.lua_Debug, %struct.lua_Debug* %ar, i64 0, i32 1
  %56 = bitcast i8** %55 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.7.152, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.7.152, i64 0, i64 0)>, <2 x i8*>* %56, align 8, !tbaa !25
  %57 = getelementptr inbounds %struct.lua_Debug, %struct.lua_Debug* %ar, i64 0, i32 3
  %58 = getelementptr inbounds %struct.lua_Debug, %struct.lua_Debug* %ar, i64 0, i32 5
  store i32 -1, i32* %58, align 4, !tbaa !72
  %59 = getelementptr inbounds %struct.lua_Debug, %struct.lua_Debug* %ar, i64 0, i32 7
  store i32 -1, i32* %59, align 4, !tbaa !119
  %60 = getelementptr inbounds %struct.lua_Debug, %struct.lua_Debug* %ar, i64 0, i32 8
  store i32 -1, i32* %60, align 4, !tbaa !120
  %61 = bitcast i8** %57 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.8.153, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.9.154, i64 0, i64 0)>, <2 x i8*>* %61, align 8, !tbaa !25
  %62 = getelementptr inbounds %struct.lua_Debug, %struct.lua_Debug* %ar, i64 0, i32 9, i64 0
  tail call void @luaO_chunkid(i8* %62, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.9.154, i64 0, i64 0), i64 60) #1
  %63 = getelementptr inbounds %struct.lua_Debug, %struct.lua_Debug* %ar, i64 0, i32 6
  store i32 0, i32* %63, align 4, !tbaa !122
  br label %auxgetinfo.exit

; <label>:64                                      ; preds = %179, %.lr.ph.i
  %65 = phi i8 [ %26, %.lr.ph.i ], [ %181, %179 ]
  %status.011.i = phi i32 [ 1, %.lr.ph.i ], [ %status.1.i, %179 ]
  %.0110.i = phi i8* [ %.0, %.lr.ph.i ], [ %180, %179 ]
  %66 = sext i8 %65 to i32
  switch i32 %66, label %178 [
    i32 83, label %67
    i32 108, label %84
    i32 117, label %124
    i32 110, label %127
    i32 76, label %179
    i32 102, label %179
  ]

; <label>:67                                      ; preds = %64
  %68 = load i8, i8* %28, align 1, !tbaa !35
  %69 = icmp eq i8 %68, 0
  br i1 %69, label %71, label %70

; <label>:70                                      ; preds = %67
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.10.155, i64 0, i64 0), i8** %31, align 8, !tbaa !118
  br label %funcinfo.exit.i

; <label>:71                                      ; preds = %67
  %72 = load %struct.Proto*, %struct.Proto** %30, align 8, !tbaa !57
  %73 = getelementptr inbounds %struct.Proto, %struct.Proto* %72, i64 0, i32 9
  %74 = load %union.TString*, %union.TString** %73, align 8, !tbaa !133
  %75 = getelementptr inbounds %union.TString, %union.TString* %74, i64 1
  store %union.TString* %75, %union.TString** %32, align 8, !tbaa !118
  %76 = getelementptr inbounds %struct.Proto, %struct.Proto* %72, i64 0, i32 16
  %77 = load i32, i32* %76, align 4, !tbaa !38
  %78 = getelementptr inbounds %struct.Proto, %struct.Proto* %72, i64 0, i32 17
  %79 = load i32, i32* %78, align 4, !tbaa !134
  %80 = icmp eq i32 %77, 0
  %81 = select i1 %80, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.12.156, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.13.157, i64 0, i64 0)
  %82 = bitcast %union.TString* %75 to i8*
  br label %funcinfo.exit.i

funcinfo.exit.i:                                  ; preds = %71, %70
  %83 = phi i8* [ %82, %71 ], [ getelementptr inbounds ([5 x i8], [5 x i8]* @.str.10.155, i64 0, i64 0), %70 ]
  %.sink2.i.i = phi i32 [ %77, %71 ], [ -1, %70 ]
  %.sink1.i.i = phi i32 [ %79, %71 ], [ -1, %70 ]
  %.sink.i.i = phi i8* [ %81, %71 ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11.158, i64 0, i64 0), %70 ]
  store i32 %.sink2.i.i, i32* %33, align 4
  store i32 %.sink1.i.i, i32* %34, align 4
  store i8* %.sink.i.i, i8** %35, align 8
  tail call void @luaO_chunkid(i8* %36, i8* %83, i64 60) #1
  br label %179

; <label>:84                                      ; preds = %64
  br i1 %37, label %currentline.exit.i, label %85

; <label>:85                                      ; preds = %84
  %86 = load %struct.lua_TValue*, %struct.lua_TValue** %39, align 8, !tbaa !28
  %87 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %86, i64 0, i32 1
  %88 = load i32, i32* %87, align 4, !tbaa !10
  %89 = icmp eq i32 %88, 6
  %90 = bitcast %struct.lua_TValue* %86 to %struct.LClosure**
  br i1 %89, label %91, label %currentline.exit.i

; <label>:91                                      ; preds = %85
  %92 = bitcast %struct.lua_TValue* %86 to %struct.CClosure**
  %93 = load %struct.CClosure*, %struct.CClosure** %92, align 8, !tbaa !25
  %94 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %93, i64 0, i32 3
  %95 = load i8, i8* %94, align 1, !tbaa !35
  %96 = icmp eq i8 %95, 0
  %97 = bitcast %struct.CClosure* %93 to %struct.LClosure*
  br i1 %96, label %98, label %currentline.exit.i

; <label>:98                                      ; preds = %91
  %99 = load %struct.CallInfo*, %struct.CallInfo** %40, align 8, !tbaa !13
  %100 = icmp eq %struct.CallInfo* %99, %ci.0
  br i1 %100, label %101, label %._crit_edge.i.i.i

._crit_edge.i.i.i:                                ; preds = %98
  %.pre.i.i.i = load i64, i64* %44, align 8, !tbaa !130
  br label %currentpc.exit.i.i

; <label>:101                                     ; preds = %98
  %102 = load i64, i64* %42, align 8, !tbaa !131
  store i64 %102, i64* %44, align 8, !tbaa !130
  %.pre.i.i = load %struct.LClosure*, %struct.LClosure** %90, align 8, !tbaa !25
  br label %currentpc.exit.i.i

currentpc.exit.i.i:                               ; preds = %101, %._crit_edge.i.i.i
  %103 = phi %struct.LClosure* [ %97, %._crit_edge.i.i.i ], [ %.pre.i.i, %101 ]
  %104 = phi i64 [ %.pre.i.i.i, %._crit_edge.i.i.i ], [ %102, %101 ]
  %105 = getelementptr inbounds %struct.LClosure, %struct.LClosure* %103, i64 0, i32 7
  %106 = load %struct.Proto*, %struct.Proto** %105, align 8, !tbaa !57
  %107 = getelementptr inbounds %struct.Proto, %struct.Proto* %106, i64 0, i32 4
  %108 = bitcast i32** %107 to i64*
  %109 = load i64, i64* %108, align 8, !tbaa !93
  %110 = sub i64 %104, %109
  %111 = lshr exact i64 %110, 2
  %112 = trunc i64 %111 to i32
  %113 = icmp slt i32 %112, 1
  br i1 %113, label %currentline.exit.i, label %114

; <label>:114                                     ; preds = %currentpc.exit.i.i
  %115 = getelementptr inbounds %struct.Proto, %struct.Proto* %106, i64 0, i32 6
  %116 = load i32*, i32** %115, align 8, !tbaa !111
  %117 = icmp eq i32* %116, null
  br i1 %117, label %currentline.exit.i, label %118

; <label>:118                                     ; preds = %114
  %119 = shl i64 %110, 30
  %sext.i.i = add i64 %119, -4294967296
  %120 = ashr exact i64 %sext.i.i, 32
  %121 = getelementptr inbounds i32, i32* %116, i64 %120
  %122 = load i32, i32* %121, align 4, !tbaa !38
  br label %currentline.exit.i

currentline.exit.i:                               ; preds = %118, %114, %currentpc.exit.i.i, %91, %85, %84
  %123 = phi i32 [ -1, %84 ], [ -1, %currentpc.exit.i.i ], [ %122, %118 ], [ 0, %114 ], [ -1, %91 ], [ -1, %85 ]
  store i32 %123, i32* %38, align 4, !tbaa !72
  br label %179

; <label>:124                                     ; preds = %64
  %125 = load i8, i8* %45, align 1, !tbaa !31
  %126 = zext i8 %125 to i32
  store i32 %126, i32* %46, align 4, !tbaa !122
  br label %179

; <label>:127                                     ; preds = %64
  br i1 %37, label %getfuncname.exit.thread.i, label %128

; <label>:128                                     ; preds = %127
  %129 = load %struct.lua_TValue*, %struct.lua_TValue** %39, align 8, !tbaa !28
  %130 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %129, i64 0, i32 1
  %131 = load i32, i32* %130, align 4, !tbaa !10
  %132 = icmp eq i32 %131, 6
  br i1 %132, label %133, label %142

; <label>:133                                     ; preds = %128
  %134 = bitcast %struct.lua_TValue* %129 to %struct.CClosure**
  %135 = load %struct.CClosure*, %struct.CClosure** %134, align 8, !tbaa !25
  %136 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %135, i64 0, i32 3
  %137 = load i8, i8* %136, align 1, !tbaa !35
  %138 = icmp eq i8 %137, 0
  br i1 %138, label %139, label %142

; <label>:139                                     ; preds = %133
  %140 = load i32, i32* %49, align 4, !tbaa !128
  %141 = icmp sgt i32 %140, 0
  br i1 %141, label %getfuncname.exit.thread.i, label %142

; <label>:142                                     ; preds = %139, %133, %128
  %143 = load %struct.lua_TValue*, %struct.lua_TValue** %50, align 8, !tbaa !28
  %144 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %143, i64 0, i32 1
  %145 = load i32, i32* %144, align 4, !tbaa !10
  %146 = icmp eq i32 %145, 6
  %147 = bitcast %struct.lua_TValue* %143 to %struct.LClosure**
  br i1 %146, label %148, label %getfuncname.exit.thread.i

; <label>:148                                     ; preds = %142
  %149 = bitcast %struct.lua_TValue* %143 to %struct.CClosure**
  %150 = load %struct.CClosure*, %struct.CClosure** %149, align 8, !tbaa !25
  %151 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %150, i64 0, i32 3
  %152 = load i8, i8* %151, align 1, !tbaa !35
  %153 = icmp eq i8 %152, 0
  %154 = bitcast %struct.CClosure* %150 to %struct.LClosure*
  br i1 %153, label %155, label %getfuncname.exit.thread.i

; <label>:155                                     ; preds = %148
  %156 = load %struct.CallInfo*, %struct.CallInfo** %40, align 8, !tbaa !13
  %157 = icmp eq %struct.CallInfo* %156, %51
  br i1 %157, label %158, label %._crit_edge.i.i.5.i

._crit_edge.i.i.5.i:                              ; preds = %155
  %.pre.i.i.4.i = load i64, i64* %53, align 8, !tbaa !130
  br label %currentpc.exit.i.8.i

; <label>:158                                     ; preds = %155
  %159 = load i64, i64* %42, align 8, !tbaa !131
  store i64 %159, i64* %53, align 8, !tbaa !130
  %.pre.i.6.i = load %struct.LClosure*, %struct.LClosure** %147, align 8, !tbaa !25
  br label %currentpc.exit.i.8.i

currentpc.exit.i.8.i:                             ; preds = %158, %._crit_edge.i.i.5.i
  %160 = phi %struct.LClosure* [ %154, %._crit_edge.i.i.5.i ], [ %.pre.i.6.i, %158 ]
  %161 = phi i64 [ %.pre.i.i.4.i, %._crit_edge.i.i.5.i ], [ %159, %158 ]
  %162 = getelementptr inbounds %struct.LClosure, %struct.LClosure* %160, i64 0, i32 7
  %163 = load %struct.Proto*, %struct.Proto** %162, align 8, !tbaa !57
  %164 = getelementptr inbounds %struct.Proto, %struct.Proto* %163, i64 0, i32 4
  %165 = bitcast i32** %164 to i64*
  %166 = load i64, i64* %165, align 8, !tbaa !93
  %167 = sub i64 %161, %166
  %168 = shl i64 %167, 30
  %sext.i.7.i = add i64 %168, -4294967296
  %phitmp.i.i = ashr exact i64 %sext.i.7.i, 32
  %169 = inttoptr i64 %166 to i32*
  %170 = getelementptr inbounds i32, i32* %169, i64 %phitmp.i.i
  %171 = load i32, i32* %170, align 4, !tbaa !38
  %172 = and i32 %171, 63
  switch i32 %172, label %getfuncname.exit.thread.i [
    i32 28, label %getfuncname.exit.i
    i32 29, label %getfuncname.exit.i
    i32 33, label %getfuncname.exit.i
  ]

getfuncname.exit.thread.i:                        ; preds = %currentpc.exit.i.8.i, %148, %142, %139, %127
  store i8* null, i8** %47, align 8, !tbaa !69
  br label %177

getfuncname.exit.i:                               ; preds = %currentpc.exit.i.8.i, %currentpc.exit.i.8.i, %currentpc.exit.i.8.i
  %173 = lshr i32 %171, 6
  %174 = and i32 %173, 255
  %175 = tail call fastcc i8* @getobjname(%struct.lua_State* %L, %struct.CallInfo* %51, i32 %174, i8** %48) #1
  store i8* %175, i8** %47, align 8, !tbaa !69
  %176 = icmp eq i8* %175, null
  br i1 %176, label %177, label %179

; <label>:177                                     ; preds = %getfuncname.exit.i, %getfuncname.exit.thread.i
  store <2 x i8*> <i8* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.7.152, i64 0, i64 0)>, <2 x i8*>* %54, align 8, !tbaa !25
  br label %179

; <label>:178                                     ; preds = %64
  br label %179

; <label>:179                                     ; preds = %178, %177, %getfuncname.exit.i, %124, %currentline.exit.i, %funcinfo.exit.i, %64, %64
  %status.1.i = phi i32 [ 0, %178 ], [ %status.011.i, %64 ], [ %status.011.i, %64 ], [ %status.011.i, %177 ], [ %status.011.i, %getfuncname.exit.i ], [ %status.011.i, %124 ], [ %status.011.i, %currentline.exit.i ], [ %status.011.i, %funcinfo.exit.i ]
  %180 = getelementptr inbounds i8, i8* %.0110.i, i64 1
  %181 = load i8, i8* %180, align 1, !tbaa !76
  %182 = icmp eq i8 %181, 0
  br i1 %182, label %auxgetinfo.exit.loopexit, label %64

auxgetinfo.exit.loopexit:                         ; preds = %179
  %status.1.i.lcssa = phi i32 [ %status.1.i, %179 ]
  br label %auxgetinfo.exit

auxgetinfo.exit:                                  ; preds = %auxgetinfo.exit.loopexit, %.preheader.i, %.thread
  %183 = phi i1 [ true, %.thread ], [ false, %.preheader.i ], [ false, %auxgetinfo.exit.loopexit ]
  %.04 = phi i8* [ %.05, %.thread ], [ %.0, %.preheader.i ], [ %.0, %auxgetinfo.exit.loopexit ]
  %f.02 = phi %union.Closure* [ null, %.thread ], [ %f.0, %.preheader.i ], [ %f.0, %auxgetinfo.exit.loopexit ]
  %.0.i = phi i32 [ 1, %.thread ], [ 1, %.preheader.i ], [ %status.1.i.lcssa, %auxgetinfo.exit.loopexit ]
  %184 = tail call i8* @strchr(i8* %.04, i32 102) #1
  %185 = icmp eq i8* %184, null
  br i1 %185, label %205, label %186

; <label>:186                                     ; preds = %auxgetinfo.exit
  %187 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %188 = load %struct.lua_TValue*, %struct.lua_TValue** %187, align 8, !tbaa !1
  br i1 %183, label %191, label %189

; <label>:189                                     ; preds = %186
  %190 = bitcast %struct.lua_TValue* %188 to %union.Closure**
  store %union.Closure* %f.02, %union.Closure** %190, align 8, !tbaa !25
  br label %191

; <label>:191                                     ; preds = %186, %189
  %.sink = phi i32 [ 6, %189 ], [ 0, %186 ]
  %192 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %188, i64 0, i32 1
  store i32 %.sink, i32* %192, align 4
  %193 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 9
  %194 = bitcast %struct.lua_TValue** %193 to i64*
  %195 = load i64, i64* %194, align 8, !tbaa !12
  %196 = bitcast %struct.lua_TValue** %187 to i64*
  %197 = load i64, i64* %196, align 8, !tbaa !1
  %198 = sub i64 %195, %197
  %199 = icmp slt i64 %198, 17
  %200 = inttoptr i64 %197 to %struct.lua_TValue*
  br i1 %199, label %201, label %202

; <label>:201                                     ; preds = %191
  tail call void @luaD_growstack(%struct.lua_State* %L, i32 1) #1
  %.pre = load %struct.lua_TValue*, %struct.lua_TValue** %187, align 8, !tbaa !1
  br label %202

; <label>:202                                     ; preds = %191, %201
  %203 = phi %struct.lua_TValue* [ %200, %191 ], [ %.pre, %201 ]
  %204 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %203, i64 1
  store %struct.lua_TValue* %204, %struct.lua_TValue** %187, align 8, !tbaa !1
  br label %205

; <label>:205                                     ; preds = %auxgetinfo.exit, %202
  %206 = tail call i8* @strchr(i8* %.04, i32 76) #1
  %207 = icmp eq i8* %206, null
  br i1 %207, label %254, label %208

; <label>:208                                     ; preds = %205
  br i1 %183, label %213, label %209

; <label>:209                                     ; preds = %208
  %210 = getelementptr inbounds %union.Closure, %union.Closure* %f.02, i64 0, i32 0, i32 3
  %211 = load i8, i8* %210, align 1, !tbaa !35
  %212 = icmp eq i8 %211, 0
  br i1 %212, label %218, label %213

; <label>:213                                     ; preds = %209, %208
  %214 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %215 = load %struct.lua_TValue*, %struct.lua_TValue** %214, align 8, !tbaa !1
  %216 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %215, i64 0, i32 1
  store i32 0, i32* %216, align 4, !tbaa !10
  %217 = ptrtoint %struct.lua_TValue* %215 to i64
  br label %243

; <label>:218                                     ; preds = %209
  %219 = tail call %struct.Table* @luaH_new(%struct.lua_State* %L, i32 0, i32 0) #1
  %220 = getelementptr inbounds %union.Closure, %union.Closure* %f.02, i64 0, i32 0, i32 7
  %221 = bitcast i32 (%struct.lua_State*)** %220 to %struct.Proto**
  %222 = load %struct.Proto*, %struct.Proto** %221, align 8, !tbaa !57
  %223 = getelementptr inbounds %struct.Proto, %struct.Proto* %222, i64 0, i32 6
  %224 = load i32*, i32** %223, align 8, !tbaa !111
  %225 = getelementptr inbounds %struct.Proto, %struct.Proto* %222, i64 0, i32 13
  %226 = load i32, i32* %225, align 4, !tbaa !114
  %227 = icmp sgt i32 %226, 0
  br i1 %227, label %.lr.ph.i.1.preheader, label %._crit_edge.i

.lr.ph.i.1.preheader:                             ; preds = %218
  br label %.lr.ph.i.1

.lr.ph.i.1:                                       ; preds = %.lr.ph.i.1.preheader, %.lr.ph.i.1
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i, %.lr.ph.i.1 ], [ 0, %.lr.ph.i.1.preheader ]
  %228 = getelementptr inbounds i32, i32* %224, i64 %indvars.iv.i
  %229 = load i32, i32* %228, align 4, !tbaa !38
  %230 = tail call %struct.lua_TValue* @luaH_setnum(%struct.lua_State* %L, %struct.Table* %219, i32 %229) #1
  %231 = bitcast %struct.lua_TValue* %230 to i32*
  store i32 1, i32* %231, align 4, !tbaa !38
  %232 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %230, i64 0, i32 1
  store i32 1, i32* %232, align 4, !tbaa !10
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %233 = load %struct.Proto*, %struct.Proto** %221, align 8, !tbaa !57
  %234 = getelementptr inbounds %struct.Proto, %struct.Proto* %233, i64 0, i32 13
  %235 = load i32, i32* %234, align 4, !tbaa !114
  %236 = sext i32 %235 to i64
  %237 = icmp slt i64 %indvars.iv.next.i, %236
  br i1 %237, label %.lr.ph.i.1, label %._crit_edge.i.loopexit

._crit_edge.i.loopexit:                           ; preds = %.lr.ph.i.1
  br label %._crit_edge.i

._crit_edge.i:                                    ; preds = %._crit_edge.i.loopexit, %218
  %238 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %239 = load %struct.lua_TValue*, %struct.lua_TValue** %238, align 8, !tbaa !1
  %240 = bitcast %struct.lua_TValue* %239 to %struct.Table**
  store %struct.Table* %219, %struct.Table** %240, align 8, !tbaa !25
  %241 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %239, i64 0, i32 1
  store i32 5, i32* %241, align 4, !tbaa !10
  %.phi.trans.insert3.i = bitcast %struct.lua_TValue** %238 to i64*
  %.pre.i = load i64, i64* %.phi.trans.insert3.i, align 8, !tbaa !1
  %242 = inttoptr i64 %.pre.i to %struct.lua_TValue*
  br label %243

; <label>:243                                     ; preds = %._crit_edge.i, %213
  %.pre-phi.i = phi %struct.lua_TValue** [ %238, %._crit_edge.i ], [ %214, %213 ]
  %244 = phi %struct.lua_TValue* [ %242, %._crit_edge.i ], [ %215, %213 ]
  %245 = phi i64 [ %.pre.i, %._crit_edge.i ], [ %217, %213 ]
  %246 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 9
  %247 = bitcast %struct.lua_TValue** %246 to i64*
  %248 = load i64, i64* %247, align 8, !tbaa !12
  %249 = sub i64 %248, %245
  %250 = icmp slt i64 %249, 17
  br i1 %250, label %251, label %collectvalidlines.exit

; <label>:251                                     ; preds = %243
  tail call void @luaD_growstack(%struct.lua_State* %L, i32 1) #1
  %.pre4.i = load %struct.lua_TValue*, %struct.lua_TValue** %.pre-phi.i, align 8, !tbaa !1
  br label %collectvalidlines.exit

collectvalidlines.exit:                           ; preds = %243, %251
  %252 = phi %struct.lua_TValue* [ %244, %243 ], [ %.pre4.i, %251 ]
  %253 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %252, i64 1
  store %struct.lua_TValue* %253, %struct.lua_TValue** %.pre-phi.i, align 8, !tbaa !1
  br label %254

; <label>:254                                     ; preds = %205, %collectvalidlines.exit
  ret i32 %.0.i
}

; Function Attrs: nounwind readnone uwtable
define hidden i32 @luaG_checkopenop(i32 %i) #3 {
  %1 = and i32 %i, 63
  switch i32 %1, label %4 [
    i32 28, label %2
    i32 29, label %2
    i32 30, label %2
    i32 34, label %2
  ]

; <label>:2                                       ; preds = %0, %0, %0, %0
  %3 = icmp ult i32 %i, 8388608
  %. = zext i1 %3 to i32
  br label %4

; <label>:4                                       ; preds = %0, %2
  %.0 = phi i32 [ %., %2 ], [ 0, %0 ]
  ret i32 %.0
}

; Function Attrs: nounwind readonly uwtable
define hidden i32 @luaG_checkcode(%struct.Proto* readonly %pt) #2 {
  %1 = getelementptr inbounds %struct.Proto, %struct.Proto* %pt, i64 0, i32 12
  %2 = load i32, i32* %1, align 4, !tbaa !112
  %3 = tail call fastcc i32 @symbexec(%struct.Proto* %pt, i32 %2, i32 255)
  %4 = icmp ne i32 %3, 0
  %5 = zext i1 %4 to i32
  ret i32 %5
}

; Function Attrs: nounwind uwtable
define hidden void @luaG_typeerror(%struct.lua_State* %L, %struct.lua_TValue* %o, i8* %op) #0 {
  %name = alloca i8*, align 8
  %1 = bitcast i8** %name to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1) #1
  store i8* null, i8** %name, align 8, !tbaa !25
  %2 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %o, i64 0, i32 1
  %3 = load i32, i32* %2, align 4, !tbaa !10
  %4 = sext i32 %3 to i64
  %5 = getelementptr inbounds [0 x i8*], [0 x i8*]* bitcast ([11 x i8*]* @luaT_typenames to [0 x i8*]*), i64 0, i64 %4
  %6 = load i8*, i8** %5, align 8, !tbaa !25
  %7 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 7
  %8 = load %struct.CallInfo*, %struct.CallInfo** %7, align 8, !tbaa !13
  %9 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %8, i64 0, i32 0
  %10 = load %struct.lua_TValue*, %struct.lua_TValue** %9, align 8, !tbaa !132
  %11 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %8, i64 0, i32 2
  %12 = load %struct.lua_TValue*, %struct.lua_TValue** %11, align 8, !tbaa !14
  %13 = icmp ult %struct.lua_TValue* %10, %12
  br i1 %13, label %.lr.ph.i.preheader, label %.thread

.lr.ph.i.preheader:                               ; preds = %0
  br label %.lr.ph.i

; <label>:14                                      ; preds = %.lr.ph.i
  %15 = icmp ult %struct.lua_TValue* %17, %12
  br i1 %15, label %.lr.ph.i, label %.thread.loopexit

.lr.ph.i:                                         ; preds = %.lr.ph.i.preheader, %14
  %p.01.i = phi %struct.lua_TValue* [ %17, %14 ], [ %10, %.lr.ph.i.preheader ]
  %16 = icmp eq %struct.lua_TValue* %p.01.i, %o
  %17 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %p.01.i, i64 1
  br i1 %16, label %18, label %14

; <label>:18                                      ; preds = %.lr.ph.i
  %19 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 5
  %20 = bitcast %struct.lua_TValue** %19 to i64*
  %21 = load i64, i64* %20, align 8, !tbaa !11
  %22 = ptrtoint %struct.lua_TValue* %o to i64
  %23 = sub i64 %22, %21
  %24 = lshr exact i64 %23, 4
  %25 = trunc i64 %24 to i32
  %26 = call fastcc i8* @getobjname(%struct.lua_State* %L, %struct.CallInfo* %8, i32 %25, i8** nonnull %name)
  %27 = icmp eq i8* %26, null
  br i1 %27, label %.thread, label %28

; <label>:28                                      ; preds = %18
  %29 = load i8*, i8** %name, align 8, !tbaa !25
  tail call void (%struct.lua_State*, i8*, ...) @luaG_runerror(%struct.lua_State* %L, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.159, i64 0, i64 0), i8* %op, i8* %26, i8* %29, i8* %6)
  br label %30

.thread.loopexit:                                 ; preds = %14
  br label %.thread

.thread:                                          ; preds = %.thread.loopexit, %0, %18
  tail call void (%struct.lua_State*, i8*, ...) @luaG_runerror(%struct.lua_State* %L, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.1.160, i64 0, i64 0), i8* %op, i8* %6)
  br label %30

; <label>:30                                      ; preds = %.thread, %28
  call void @llvm.lifetime.end(i64 8, i8* %1) #1
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @luaG_runerror(%struct.lua_State* %L, i8* %fmt, ...) #0 {
  %buff.i = alloca [60 x i8], align 16
  %argp = alloca [1 x %struct.__va_list_tag], align 16
  %1 = bitcast [1 x %struct.__va_list_tag]* %argp to i8*
  call void @llvm.lifetime.start(i64 24, i8* %1) #1
  %2 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %argp, i64 0, i64 0
  call void @llvm.va_start(i8* %1)
  %3 = call i8* bitcast (i8* (%struct.lua_State.215*, i8*, %struct.__va_list_tag*)* @luaO_pushvfstring to i8* (%struct.lua_State*, i8*, %struct.__va_list_tag*)*)(%struct.lua_State* %L, i8* %fmt, %struct.__va_list_tag* %2) #1
  %4 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 7
  %5 = load %struct.CallInfo*, %struct.CallInfo** %4, align 8, !tbaa !13
  %6 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %5, i64 0, i32 1
  %7 = load %struct.lua_TValue*, %struct.lua_TValue** %6, align 8, !tbaa !28
  %8 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %7, i64 0, i32 1
  %9 = load i32, i32* %8, align 4, !tbaa !10
  %10 = icmp eq i32 %9, 6
  br i1 %10, label %11, label %addinfo.exit

; <label>:11                                      ; preds = %0
  %12 = bitcast %struct.lua_TValue* %7 to %struct.CClosure**
  %13 = load %struct.CClosure*, %struct.CClosure** %12, align 8, !tbaa !25
  %14 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %13, i64 0, i32 3
  %15 = load i8, i8* %14, align 1, !tbaa !35
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %currentpc.exit.i.i, label %addinfo.exit

currentpc.exit.i.i:                               ; preds = %11
  %17 = getelementptr inbounds [60 x i8], [60 x i8]* %buff.i, i64 0, i64 0
  call void @llvm.lifetime.start(i64 60, i8* %17) #1
  %18 = bitcast %struct.lua_TValue* %7 to %struct.LClosure**
  %19 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 8
  %20 = bitcast i32** %19 to i64*
  %21 = load i64, i64* %20, align 8, !tbaa !131
  %22 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %5, i64 0, i32 3
  %23 = bitcast i32** %22 to i64*
  store i64 %21, i64* %23, align 8, !tbaa !130
  %.pre.i.i = load %struct.LClosure*, %struct.LClosure** %18, align 8, !tbaa !25
  %24 = getelementptr inbounds %struct.LClosure, %struct.LClosure* %.pre.i.i, i64 0, i32 7
  %25 = load %struct.Proto*, %struct.Proto** %24, align 8, !tbaa !57
  %26 = getelementptr inbounds %struct.Proto, %struct.Proto* %25, i64 0, i32 4
  %27 = bitcast i32** %26 to i64*
  %28 = load i64, i64* %27, align 8, !tbaa !93
  %29 = sub i64 %21, %28
  %30 = lshr exact i64 %29, 2
  %31 = trunc i64 %30 to i32
  %32 = icmp slt i32 %31, 1
  br i1 %32, label %currentline.exit.i, label %33

; <label>:33                                      ; preds = %currentpc.exit.i.i
  %34 = getelementptr inbounds %struct.Proto, %struct.Proto* %25, i64 0, i32 6
  %35 = load i32*, i32** %34, align 8, !tbaa !111
  %36 = icmp eq i32* %35, null
  br i1 %36, label %currentline.exit.i, label %37

; <label>:37                                      ; preds = %33
  %38 = shl i64 %29, 30
  %sext.i.i = add i64 %38, -4294967296
  %39 = ashr exact i64 %sext.i.i, 32
  %40 = getelementptr inbounds i32, i32* %35, i64 %39
  %41 = load i32, i32* %40, align 4, !tbaa !38
  br label %currentline.exit.i

currentline.exit.i:                               ; preds = %37, %33, %currentpc.exit.i.i
  %.0.i.i = phi i32 [ -1, %currentpc.exit.i.i ], [ %41, %37 ], [ 0, %33 ]
  %42 = getelementptr inbounds %struct.LClosure, %struct.LClosure* %.pre.i.i, i64 0, i32 7
  %43 = load %struct.Proto*, %struct.Proto** %42, align 8, !tbaa !57
  %44 = getelementptr inbounds %struct.Proto, %struct.Proto* %43, i64 0, i32 9
  %45 = load %union.TString*, %union.TString** %44, align 8, !tbaa !133
  %46 = getelementptr inbounds %union.TString, %union.TString* %45, i64 1
  %47 = bitcast %union.TString* %46 to i8*
  call void @luaO_chunkid(i8* %17, i8* %47, i64 60) #1
  %48 = call i8* (%struct.lua_State*, i8*, ...) bitcast (i8* (%struct.lua_State.215*, i8*, ...)* @luaO_pushfstring to i8* (%struct.lua_State*, i8*, ...)*)(%struct.lua_State* %L, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.20.161, i64 0, i64 0), i8* %17, i32 %.0.i.i, i8* %3) #1
  call void @llvm.lifetime.end(i64 60, i8* %17) #1
  br label %addinfo.exit

addinfo.exit:                                     ; preds = %0, %11, %currentline.exit.i
  call void @llvm.va_end(i8* %1)
  call void @luaG_errormsg(%struct.lua_State* %L)
  call void @llvm.lifetime.end(i64 24, i8* %1) #1
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @luaG_concaterror(%struct.lua_State* %L, %struct.lua_TValue* %p1, %struct.lua_TValue* %p2) #0 {
  %name.i = alloca i8*, align 8
  %1 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %p1, i64 0, i32 1
  %2 = load i32, i32* %1, align 4, !tbaa !10
  %.off = add i32 %2, -3
  %switch = icmp ult i32 %.off, 2
  %p2.p1 = select i1 %switch, %struct.lua_TValue* %p2, %struct.lua_TValue* %p1
  %3 = bitcast i8** %name.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3) #1
  store i8* null, i8** %name.i, align 8, !tbaa !25
  %4 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %p2.p1, i64 0, i32 1
  %5 = load i32, i32* %4, align 4, !tbaa !10
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds [0 x i8*], [0 x i8*]* bitcast ([11 x i8*]* @luaT_typenames to [0 x i8*]*), i64 0, i64 %6
  %8 = load i8*, i8** %7, align 8, !tbaa !25
  %9 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 7
  %10 = load %struct.CallInfo*, %struct.CallInfo** %9, align 8, !tbaa !13
  %11 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %10, i64 0, i32 0
  %12 = load %struct.lua_TValue*, %struct.lua_TValue** %11, align 8, !tbaa !132
  %13 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %10, i64 0, i32 2
  %14 = load %struct.lua_TValue*, %struct.lua_TValue** %13, align 8, !tbaa !14
  %15 = icmp ult %struct.lua_TValue* %12, %14
  br i1 %15, label %.lr.ph.i.i.preheader, label %.thread.i

.lr.ph.i.i.preheader:                             ; preds = %0
  br label %.lr.ph.i.i

; <label>:16                                      ; preds = %.lr.ph.i.i
  %17 = icmp ult %struct.lua_TValue* %19, %14
  br i1 %17, label %.lr.ph.i.i, label %.thread.i.loopexit

.lr.ph.i.i:                                       ; preds = %.lr.ph.i.i.preheader, %16
  %p.01.i.i = phi %struct.lua_TValue* [ %19, %16 ], [ %12, %.lr.ph.i.i.preheader ]
  %18 = icmp eq %struct.lua_TValue* %p.01.i.i, %p2.p1
  %19 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %p.01.i.i, i64 1
  br i1 %18, label %20, label %16

; <label>:20                                      ; preds = %.lr.ph.i.i
  %21 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 5
  %22 = bitcast %struct.lua_TValue** %21 to i64*
  %23 = load i64, i64* %22, align 8, !tbaa !11
  %24 = ptrtoint %struct.lua_TValue* %p2.p1 to i64
  %25 = sub i64 %24, %23
  %26 = lshr exact i64 %25, 4
  %27 = trunc i64 %26 to i32
  %28 = call fastcc i8* @getobjname(%struct.lua_State* %L, %struct.CallInfo* %10, i32 %27, i8** nonnull %name.i) #1
  %29 = icmp eq i8* %28, null
  br i1 %29, label %.thread.i, label %30

; <label>:30                                      ; preds = %20
  %31 = load i8*, i8** %name.i, align 8, !tbaa !25
  tail call void (%struct.lua_State*, i8*, ...) @luaG_runerror(%struct.lua_State* %L, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.159, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2.162, i64 0, i64 0), i8* %28, i8* %31, i8* %8) #1
  br label %luaG_typeerror.exit

.thread.i.loopexit:                               ; preds = %16
  br label %.thread.i

.thread.i:                                        ; preds = %.thread.i.loopexit, %20, %0
  tail call void (%struct.lua_State*, i8*, ...) @luaG_runerror(%struct.lua_State* %L, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.1.160, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2.162, i64 0, i64 0), i8* %8) #1
  br label %luaG_typeerror.exit

luaG_typeerror.exit:                              ; preds = %30, %.thread.i
  call void @llvm.lifetime.end(i64 8, i8* %3) #1
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @luaG_aritherror(%struct.lua_State* %L, %struct.lua_TValue* %p1, %struct.lua_TValue* %p2) #0 {
  %name.i = alloca i8*, align 8
  %temp = alloca %struct.lua_TValue, align 8
  %1 = bitcast %struct.lua_TValue* %temp to i8*
  call void @llvm.lifetime.start(i64 16, i8* %1) #1
  %2 = call %struct.lua_TValue* bitcast (%struct.lua_TValue.218* (%struct.lua_TValue.218*, %struct.lua_TValue.218*)* @luaV_tonumber to %struct.lua_TValue* (%struct.lua_TValue*, %struct.lua_TValue*)*)(%struct.lua_TValue* %p1, %struct.lua_TValue* nonnull %temp) #1
  %3 = icmp eq %struct.lua_TValue* %2, null
  %p1.p2 = select i1 %3, %struct.lua_TValue* %p1, %struct.lua_TValue* %p2
  %4 = bitcast i8** %name.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4) #1
  store i8* null, i8** %name.i, align 8, !tbaa !25
  %5 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %p1.p2, i64 0, i32 1
  %6 = load i32, i32* %5, align 4, !tbaa !10
  %7 = sext i32 %6 to i64
  %8 = getelementptr inbounds [0 x i8*], [0 x i8*]* bitcast ([11 x i8*]* @luaT_typenames to [0 x i8*]*), i64 0, i64 %7
  %9 = load i8*, i8** %8, align 8, !tbaa !25
  %10 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 7
  %11 = load %struct.CallInfo*, %struct.CallInfo** %10, align 8, !tbaa !13
  %12 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %11, i64 0, i32 0
  %13 = load %struct.lua_TValue*, %struct.lua_TValue** %12, align 8, !tbaa !132
  %14 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %11, i64 0, i32 2
  %15 = load %struct.lua_TValue*, %struct.lua_TValue** %14, align 8, !tbaa !14
  %16 = icmp ult %struct.lua_TValue* %13, %15
  br i1 %16, label %.lr.ph.i.i.preheader, label %.thread.i

.lr.ph.i.i.preheader:                             ; preds = %0
  br label %.lr.ph.i.i

; <label>:17                                      ; preds = %.lr.ph.i.i
  %18 = icmp ult %struct.lua_TValue* %20, %15
  br i1 %18, label %.lr.ph.i.i, label %.thread.i.loopexit

.lr.ph.i.i:                                       ; preds = %.lr.ph.i.i.preheader, %17
  %p.01.i.i = phi %struct.lua_TValue* [ %20, %17 ], [ %13, %.lr.ph.i.i.preheader ]
  %19 = icmp eq %struct.lua_TValue* %p.01.i.i, %p1.p2
  %20 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %p.01.i.i, i64 1
  br i1 %19, label %21, label %17

; <label>:21                                      ; preds = %.lr.ph.i.i
  %22 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 5
  %23 = bitcast %struct.lua_TValue** %22 to i64*
  %24 = load i64, i64* %23, align 8, !tbaa !11
  %25 = ptrtoint %struct.lua_TValue* %p1.p2 to i64
  %26 = sub i64 %25, %24
  %27 = lshr exact i64 %26, 4
  %28 = trunc i64 %27 to i32
  %29 = call fastcc i8* @getobjname(%struct.lua_State* %L, %struct.CallInfo* %11, i32 %28, i8** nonnull %name.i) #1
  %30 = icmp eq i8* %29, null
  br i1 %30, label %.thread.i, label %31

; <label>:31                                      ; preds = %21
  %32 = load i8*, i8** %name.i, align 8, !tbaa !25
  call void (%struct.lua_State*, i8*, ...) @luaG_runerror(%struct.lua_State* %L, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.159, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.3.163, i64 0, i64 0), i8* %29, i8* %32, i8* %9) #1
  br label %luaG_typeerror.exit

.thread.i.loopexit:                               ; preds = %17
  br label %.thread.i

.thread.i:                                        ; preds = %.thread.i.loopexit, %21, %0
  call void (%struct.lua_State*, i8*, ...) @luaG_runerror(%struct.lua_State* %L, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.1.160, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.3.163, i64 0, i64 0), i8* %9) #1
  br label %luaG_typeerror.exit

luaG_typeerror.exit:                              ; preds = %31, %.thread.i
  call void @llvm.lifetime.end(i64 8, i8* %4) #1
  call void @llvm.lifetime.end(i64 16, i8* %1) #1
  ret void
}

; Function Attrs: nounwind uwtable
define hidden i32 @luaG_ordererror(%struct.lua_State* %L, %struct.lua_TValue* nocapture readonly %p1, %struct.lua_TValue* nocapture readonly %p2) #0 {
  %1 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %p1, i64 0, i32 1
  %2 = load i32, i32* %1, align 4, !tbaa !10
  %3 = sext i32 %2 to i64
  %4 = getelementptr inbounds [0 x i8*], [0 x i8*]* bitcast ([11 x i8*]* @luaT_typenames to [0 x i8*]*), i64 0, i64 %3
  %5 = load i8*, i8** %4, align 8, !tbaa !25
  %6 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %p2, i64 0, i32 1
  %7 = load i32, i32* %6, align 4, !tbaa !10
  %8 = sext i32 %7 to i64
  %9 = getelementptr inbounds [0 x i8*], [0 x i8*]* bitcast ([11 x i8*]* @luaT_typenames to [0 x i8*]*), i64 0, i64 %8
  %10 = load i8*, i8** %9, align 8, !tbaa !25
  %11 = getelementptr inbounds i8, i8* %5, i64 2
  %12 = load i8, i8* %11, align 1, !tbaa !76
  %13 = getelementptr inbounds i8, i8* %10, i64 2
  %14 = load i8, i8* %13, align 1, !tbaa !76
  %15 = icmp eq i8 %12, %14
  br i1 %15, label %16, label %17

; <label>:16                                      ; preds = %0
  tail call void (%struct.lua_State*, i8*, ...) @luaG_runerror(%struct.lua_State* %L, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.4.164, i64 0, i64 0), i8* %5)
  br label %18

; <label>:17                                      ; preds = %0
  tail call void (%struct.lua_State*, i8*, ...) @luaG_runerror(%struct.lua_State* %L, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.5.165, i64 0, i64 0), i8* %5, i8* %10)
  br label %18

; <label>:18                                      ; preds = %17, %16
  ret i32 0
}

; Function Attrs: nounwind uwtable
define hidden void @luaG_errormsg(%struct.lua_State* %L) #0 {
  %1 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 27
  %2 = load i64, i64* %1, align 8, !tbaa !135
  %3 = icmp eq i64 %2, 0
  br i1 %3, label %44, label %4

; <label>:4                                       ; preds = %0
  %5 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 10
  %6 = bitcast %struct.lua_TValue** %5 to i8**
  %7 = load i8*, i8** %6, align 8, !tbaa !50
  %8 = getelementptr inbounds i8, i8* %7, i64 %2
  %9 = getelementptr inbounds i8, i8* %8, i64 8
  %10 = bitcast i8* %9 to i32*
  %11 = load i32, i32* %10, align 4, !tbaa !10
  %12 = icmp eq i32 %11, 6
  br i1 %12, label %14, label %13

; <label>:13                                      ; preds = %4
  tail call void @luaD_throw(%struct.lua_State* %L, i32 5) #1
  br label %14

; <label>:14                                      ; preds = %13, %4
  %15 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %16 = load %struct.lua_TValue*, %struct.lua_TValue** %15, align 8, !tbaa !1
  %17 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %16, i64 -1
  %18 = bitcast %struct.lua_TValue* %17 to i64*
  %19 = bitcast %struct.lua_TValue* %16 to i64*
  %20 = load i64, i64* %18, align 8
  store i64 %20, i64* %19, align 8
  %21 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %16, i64 -1, i32 1
  %22 = load i32, i32* %21, align 4, !tbaa !10
  %23 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %16, i64 0, i32 1
  store i32 %22, i32* %23, align 4, !tbaa !10
  %24 = load %struct.lua_TValue*, %struct.lua_TValue** %15, align 8, !tbaa !1
  %25 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %24, i64 -1
  %26 = bitcast i8* %8 to i64*
  %27 = bitcast %struct.lua_TValue* %25 to i64*
  %28 = load i64, i64* %26, align 8
  store i64 %28, i64* %27, align 8
  %29 = load i32, i32* %10, align 4, !tbaa !10
  %30 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %24, i64 -1, i32 1
  store i32 %29, i32* %30, align 4, !tbaa !10
  %31 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 9
  %32 = bitcast %struct.lua_TValue** %31 to i64*
  %33 = load i64, i64* %32, align 8, !tbaa !12
  %34 = bitcast %struct.lua_TValue** %15 to i64*
  %35 = load i64, i64* %34, align 8, !tbaa !1
  %36 = sub i64 %33, %35
  %37 = icmp slt i64 %36, 17
  %38 = inttoptr i64 %35 to %struct.lua_TValue*
  br i1 %37, label %39, label %40

; <label>:39                                      ; preds = %14
  tail call void @luaD_growstack(%struct.lua_State* %L, i32 1) #1
  %.pre = load %struct.lua_TValue*, %struct.lua_TValue** %15, align 8, !tbaa !1
  br label %40

; <label>:40                                      ; preds = %14, %39
  %41 = phi %struct.lua_TValue* [ %38, %14 ], [ %.pre, %39 ]
  %42 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %41, i64 1
  store %struct.lua_TValue* %42, %struct.lua_TValue** %15, align 8, !tbaa !1
  %43 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %41, i64 -1
  tail call void @luaD_call(%struct.lua_State* %L, %struct.lua_TValue* %43, i32 1) #1
  br label %44

; <label>:44                                      ; preds = %0, %40
  tail call void @luaD_throw(%struct.lua_State* %L, i32 2) #1
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc i8* @getobjname(%struct.lua_State* nocapture readonly %L, %struct.CallInfo* %ci, i32 %stackpos, i8** nocapture %name) #0 {
  %1 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %ci, i64 0, i32 1
  %2 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 7
  %3 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 8
  %4 = bitcast i32** %3 to i64*
  %5 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %ci, i64 0, i32 3
  %6 = bitcast i32** %5 to i64*
  br label %tailrecurse

tailrecurse:                                      ; preds = %59, %0
  %stackpos.tr = phi i32 [ %stackpos, %0 ], [ %62, %59 ]
  %7 = load %struct.lua_TValue*, %struct.lua_TValue** %1, align 8, !tbaa !28
  %8 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %7, i64 0, i32 1
  %9 = load i32, i32* %8, align 4, !tbaa !10
  %10 = icmp eq i32 %9, 6
  br i1 %10, label %11, label %.thread9.loopexit

; <label>:11                                      ; preds = %tailrecurse
  %12 = bitcast %struct.lua_TValue* %7 to %union.Closure**
  %13 = load %union.Closure*, %union.Closure** %12, align 8, !tbaa !25
  %14 = getelementptr inbounds %union.Closure, %union.Closure* %13, i64 0, i32 0, i32 3
  %15 = load i8, i8* %14, align 1, !tbaa !35
  %16 = icmp eq i8 %15, 0
  %17 = bitcast %union.Closure* %13 to %struct.LClosure*
  br i1 %16, label %18, label %.thread9.loopexit

; <label>:18                                      ; preds = %11
  %19 = getelementptr inbounds %union.Closure, %union.Closure* %13, i64 0, i32 0, i32 7
  %20 = bitcast i32 (%struct.lua_State*)** %19 to %struct.Proto**
  %21 = load %struct.Proto*, %struct.Proto** %20, align 8, !tbaa !57
  %22 = bitcast %struct.lua_TValue* %7 to %struct.LClosure**
  %23 = getelementptr inbounds %union.Closure, %union.Closure* %13, i64 0, i32 0, i32 3
  %24 = load i8, i8* %23, align 1, !tbaa !35
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %26, label %currentpc.exit

; <label>:26                                      ; preds = %18
  %27 = load %struct.CallInfo*, %struct.CallInfo** %2, align 8, !tbaa !13
  %28 = icmp eq %struct.CallInfo* %27, %ci
  br i1 %28, label %29, label %._crit_edge.i

._crit_edge.i:                                    ; preds = %26
  %.pre.i = load i64, i64* %6, align 8, !tbaa !130
  br label %31

; <label>:29                                      ; preds = %26
  %30 = load i64, i64* %4, align 8, !tbaa !131
  store i64 %30, i64* %6, align 8, !tbaa !130
  %.pre = load %struct.LClosure*, %struct.LClosure** %22, align 8, !tbaa !25
  br label %31

; <label>:31                                      ; preds = %29, %._crit_edge.i
  %32 = phi %struct.LClosure* [ %17, %._crit_edge.i ], [ %.pre, %29 ]
  %33 = phi i64 [ %.pre.i, %._crit_edge.i ], [ %30, %29 ]
  %34 = getelementptr inbounds %struct.LClosure, %struct.LClosure* %32, i64 0, i32 7
  %35 = load %struct.Proto*, %struct.Proto** %34, align 8, !tbaa !57
  %36 = getelementptr inbounds %struct.Proto, %struct.Proto* %35, i64 0, i32 4
  %37 = bitcast i32** %36 to i64*
  %38 = load i64, i64* %37, align 8, !tbaa !93
  %39 = sub i64 %33, %38
  %40 = lshr exact i64 %39, 2
  %41 = trunc i64 %40 to i32
  %42 = add nsw i32 %41, -1
  br label %currentpc.exit

currentpc.exit:                                   ; preds = %18, %31
  %.0.i = phi i32 [ %42, %31 ], [ -1, %18 ]
  %43 = add nsw i32 %stackpos.tr, 1
  %44 = tail call i8* bitcast (i8* (%struct.Proto.120*, i32, i32)* @luaF_getlocalname to i8* (%struct.Proto*, i32, i32)*)(%struct.Proto* %21, i32 %43, i32 %.0.i) #1
  store i8* %44, i8** %name, align 8, !tbaa !25
  %45 = icmp eq i8* %44, null
  br i1 %45, label %46, label %.thread9.loopexit

; <label>:46                                      ; preds = %currentpc.exit
  %47 = tail call fastcc i32 @symbexec(%struct.Proto* %21, i32 %.0.i, i32 %stackpos.tr)
  %48 = and i32 %47, 63
  switch i32 %48, label %.thread9.loopexit [
    i32 5, label %49
    i32 0, label %59
    i32 6, label %64
    i32 4, label %82
    i32 11, label %95
  ]

; <label>:49                                      ; preds = %46
  %.lcssa52 = phi i32 [ %47, %46 ]
  %.lcssa = phi %struct.Proto* [ %21, %46 ]
  %50 = lshr i32 %.lcssa52, 14
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds %struct.Proto, %struct.Proto* %.lcssa, i64 0, i32 3
  %53 = load %struct.lua_TValue*, %struct.lua_TValue** %52, align 8, !tbaa !116
  %54 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %53, i64 %51, i32 0, i32 0
  %55 = bitcast %union.GCObject** %54 to %union.TString**
  %56 = load %union.TString*, %union.TString** %55, align 8, !tbaa !25
  %57 = getelementptr inbounds %union.TString, %union.TString* %56, i64 1
  %58 = bitcast i8** %name to %union.TString**
  store %union.TString* %57, %union.TString** %58, align 8, !tbaa !25
  br label %.thread9

; <label>:59                                      ; preds = %46
  %60 = lshr i32 %47, 6
  %61 = and i32 %60, 255
  %62 = lshr i32 %47, 23
  %63 = icmp ult i32 %62, %61
  br i1 %63, label %tailrecurse, label %.thread9.loopexit

; <label>:64                                      ; preds = %46
  %.lcssa53 = phi i32 [ %47, %46 ]
  %.lcssa49 = phi %struct.Proto* [ %21, %46 ]
  %65 = lshr i32 %.lcssa53, 14
  %66 = and i32 %65, 256
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %kname.exit7, label %68

; <label>:68                                      ; preds = %64
  %69 = and i32 %65, 255
  %70 = zext i32 %69 to i64
  %71 = getelementptr inbounds %struct.Proto, %struct.Proto* %.lcssa49, i64 0, i32 3
  %72 = load %struct.lua_TValue*, %struct.lua_TValue** %71, align 8, !tbaa !116
  %73 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %72, i64 %70, i32 1
  %74 = load i32, i32* %73, align 4, !tbaa !10
  %75 = icmp eq i32 %74, 4
  br i1 %75, label %76, label %kname.exit7

; <label>:76                                      ; preds = %68
  %77 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %72, i64 %70, i32 0, i32 0
  %78 = bitcast %union.GCObject** %77 to %union.TString**
  %79 = load %union.TString*, %union.TString** %78, align 8, !tbaa !25
  %80 = getelementptr inbounds %union.TString, %union.TString* %79, i64 1
  %81 = bitcast %union.TString* %80 to i8*
  br label %kname.exit7

kname.exit7:                                      ; preds = %64, %68, %76
  %.0.i.6 = phi i8* [ %81, %76 ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.17.166, i64 0, i64 0), %64 ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.17.166, i64 0, i64 0), %68 ]
  store i8* %.0.i.6, i8** %name, align 8, !tbaa !25
  br label %.thread9

; <label>:82                                      ; preds = %46
  %.lcssa54 = phi i32 [ %47, %46 ]
  %.lcssa50 = phi %struct.Proto* [ %21, %46 ]
  %83 = getelementptr inbounds %struct.Proto, %struct.Proto* %.lcssa50, i64 0, i32 8
  %84 = load %union.TString**, %union.TString*** %83, align 8, !tbaa !68
  %85 = icmp eq %union.TString** %84, null
  br i1 %85, label %93, label %86

; <label>:86                                      ; preds = %82
  %87 = lshr i32 %.lcssa54, 23
  %88 = zext i32 %87 to i64
  %89 = getelementptr inbounds %union.TString*, %union.TString** %84, i64 %88
  %90 = load %union.TString*, %union.TString** %89, align 8, !tbaa !25
  %91 = getelementptr inbounds %union.TString, %union.TString* %90, i64 1
  %92 = bitcast %union.TString* %91 to i8*
  br label %93

; <label>:93                                      ; preds = %82, %86
  %94 = phi i8* [ %92, %86 ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.17.166, i64 0, i64 0), %82 ]
  store i8* %94, i8** %name, align 8, !tbaa !25
  br label %.thread9

; <label>:95                                      ; preds = %46
  %.lcssa55 = phi i32 [ %47, %46 ]
  %.lcssa51 = phi %struct.Proto* [ %21, %46 ]
  %96 = lshr i32 %.lcssa55, 14
  %97 = and i32 %96, 256
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %kname.exit, label %99

; <label>:99                                      ; preds = %95
  %100 = and i32 %96, 255
  %101 = zext i32 %100 to i64
  %102 = getelementptr inbounds %struct.Proto, %struct.Proto* %.lcssa51, i64 0, i32 3
  %103 = load %struct.lua_TValue*, %struct.lua_TValue** %102, align 8, !tbaa !116
  %104 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %103, i64 %101, i32 1
  %105 = load i32, i32* %104, align 4, !tbaa !10
  %106 = icmp eq i32 %105, 4
  br i1 %106, label %107, label %kname.exit

; <label>:107                                     ; preds = %99
  %108 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %103, i64 %101, i32 0, i32 0
  %109 = bitcast %union.GCObject** %108 to %union.TString**
  %110 = load %union.TString*, %union.TString** %109, align 8, !tbaa !25
  %111 = getelementptr inbounds %union.TString, %union.TString* %110, i64 1
  %112 = bitcast %union.TString* %111 to i8*
  br label %kname.exit

kname.exit:                                       ; preds = %95, %99, %107
  %.0.i.5 = phi i8* [ %112, %107 ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.17.166, i64 0, i64 0), %95 ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.17.166, i64 0, i64 0), %99 ]
  store i8* %.0.i.5, i8** %name, align 8, !tbaa !25
  br label %.thread9

.thread9.loopexit:                                ; preds = %11, %tailrecurse, %currentpc.exit, %46, %59
  %.3.ph = phi i8* [ null, %11 ], [ null, %tailrecurse ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.14.167, i64 0, i64 0), %currentpc.exit ], [ null, %46 ], [ null, %59 ]
  br label %.thread9

.thread9:                                         ; preds = %.thread9.loopexit, %49, %kname.exit7, %93, %kname.exit
  %.3 = phi i8* [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.15.168, i64 0, i64 0), %49 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.16.169, i64 0, i64 0), %kname.exit7 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.18.170, i64 0, i64 0), %93 ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.19.171, i64 0, i64 0), %kname.exit ], [ %.3.ph, %.thread9.loopexit ]
  ret i8* %.3
}

; Function Attrs: nounwind readonly uwtable
define internal fastcc i32 @symbexec(%struct.Proto* %pt, i32 %lastpc, i32 %reg) #2 {
  %1 = getelementptr inbounds %struct.Proto, %struct.Proto* %pt, i64 0, i32 12
  %2 = load i32, i32* %1, align 4, !tbaa !112
  %3 = getelementptr inbounds %struct.Proto, %struct.Proto* %pt, i64 0, i32 22
  %4 = load i8, i8* %3, align 1, !tbaa !100
  %5 = icmp ult i8 %4, -5
  br i1 %5, label %6, label %precheck.exit.thread

; <label>:6                                       ; preds = %0
  %7 = zext i8 %4 to i32
  %8 = getelementptr inbounds %struct.Proto, %struct.Proto* %pt, i64 0, i32 20
  %9 = load i8, i8* %8, align 1, !tbaa !136
  %10 = zext i8 %9 to i32
  %11 = getelementptr inbounds %struct.Proto, %struct.Proto* %pt, i64 0, i32 21
  %12 = load i8, i8* %11, align 1, !tbaa !137
  %13 = zext i8 %12 to i32
  %14 = and i32 %13, 1
  %15 = add nuw nsw i32 %14, %10
  %16 = icmp ugt i32 %15, %7
  %17 = and i32 %13, 5
  %18 = icmp eq i32 %17, 4
  %or.cond.i = or i1 %18, %16
  br i1 %or.cond.i, label %precheck.exit.thread, label %19

; <label>:19                                      ; preds = %6
  %20 = getelementptr inbounds %struct.Proto, %struct.Proto* %pt, i64 0, i32 10
  %21 = load i32, i32* %20, align 4, !tbaa !65
  %22 = getelementptr inbounds %struct.Proto, %struct.Proto* %pt, i64 0, i32 19
  %23 = load i8, i8* %22, align 1, !tbaa !138
  %24 = zext i8 %23 to i32
  %25 = icmp sgt i32 %21, %24
  br i1 %25, label %precheck.exit.thread, label %26

; <label>:26                                      ; preds = %19
  %27 = getelementptr inbounds %struct.Proto, %struct.Proto* %pt, i64 0, i32 13
  %28 = load i32, i32* %27, align 4, !tbaa !114
  %29 = icmp eq i32 %28, %2
  %30 = icmp eq i32 %28, 0
  %or.cond1.i = or i1 %30, %29
  %31 = icmp sgt i32 %2, 0
  %or.cond2.i = and i1 %31, %or.cond1.i
  br i1 %or.cond2.i, label %precheck.exit, label %precheck.exit.thread

precheck.exit:                                    ; preds = %26
  %32 = add nsw i32 %2, -1
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds %struct.Proto, %struct.Proto* %pt, i64 0, i32 4
  %35 = load i32*, i32** %34, align 8, !tbaa !93
  %36 = getelementptr inbounds i32, i32* %35, i64 %33
  %37 = load i32, i32* %36, align 4, !tbaa !38
  %38 = and i32 %37, 63
  %39 = icmp eq i32 %38, 30
  br i1 %39, label %40, label %precheck.exit.thread

; <label>:40                                      ; preds = %precheck.exit
  %41 = icmp sgt i32 %lastpc, 0
  br i1 %41, label %.lr.ph66, label %precheck.exit.thread

.lr.ph66:                                         ; preds = %40
  %42 = getelementptr inbounds %struct.Proto, %struct.Proto* %pt, i64 0, i32 3
  %notlhs = icmp eq i32 %reg, 255
  %43 = getelementptr inbounds %struct.Proto, %struct.Proto* %pt, i64 0, i32 14
  %44 = getelementptr inbounds %struct.Proto, %struct.Proto* %pt, i64 0, i32 5
  %45 = getelementptr inbounds %struct.Proto, %struct.Proto* %pt, i64 0, i32 11
  %46 = and i8 %12, 6
  %47 = icmp eq i8 %46, 2
  br label %48

; <label>:48                                      ; preds = %.lr.ph66, %.thread47
  %pc.063 = phi i32 [ 0, %.lr.ph66 ], [ %263, %.thread47 ]
  %last.062 = phi i32 [ %32, %.lr.ph66 ], [ %last.349, %.thread47 ]
  %49 = sext i32 %pc.063 to i64
  %50 = getelementptr inbounds i32, i32* %35, i64 %49
  %51 = load i32, i32* %50, align 4, !tbaa !38
  %52 = and i32 %51, 63
  %53 = lshr i32 %51, 6
  %54 = and i32 %53, 255
  %55 = icmp ult i32 %52, 38
  %56 = icmp ult i32 %54, %7
  %or.cond = and i1 %55, %56
  br i1 %or.cond, label %57, label %precheck.exit.thread.loopexit84

; <label>:57                                      ; preds = %48
  %58 = zext i32 %52 to i64
  %59 = getelementptr inbounds [38 x i8], [38 x i8]* @luaP_opmodes, i64 0, i64 %58
  %60 = load i8, i8* %59, align 1, !tbaa !76
  %61 = zext i8 %60 to i32
  %62 = and i32 %61, 3
  switch i32 %62, label %checkArgMode.exit [
    i32 0, label %63
    i32 1, label %97
    i32 2, label %104
  ]

; <label>:63                                      ; preds = %57
  %64 = lshr i32 %51, 23
  %65 = lshr i32 %51, 14
  %66 = and i32 %65, 511
  %67 = lshr i32 %61, 4
  %68 = and i32 %67, 3
  switch i32 %68, label %checkArgMode.exit37 [
    i32 0, label %69
    i32 3, label %73
    i32 2, label %71
  ]

; <label>:69                                      ; preds = %63
  %70 = icmp eq i32 %64, 0
  br i1 %70, label %checkArgMode.exit37, label %precheck.exit.thread.loopexit84

; <label>:71                                      ; preds = %63
  %72 = icmp ugt i32 %7, %64
  br i1 %72, label %checkArgMode.exit37, label %precheck.exit.thread.loopexit84

; <label>:73                                      ; preds = %63
  %74 = and i32 %64, 256
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %80, label %76

; <label>:76                                      ; preds = %73
  %77 = and i32 %64, 255
  %78 = load i32, i32* %45, align 4, !tbaa !115
  %79 = icmp slt i32 %77, %78
  br i1 %79, label %checkArgMode.exit37, label %precheck.exit.thread.loopexit84

; <label>:80                                      ; preds = %73
  %81 = icmp ugt i32 %7, %64
  br i1 %81, label %checkArgMode.exit37, label %precheck.exit.thread.loopexit84

checkArgMode.exit37:                              ; preds = %80, %76, %71, %69, %63
  %82 = lshr i32 %61, 2
  %83 = and i32 %82, 3
  switch i32 %83, label %checkArgMode.exit [
    i32 0, label %84
    i32 3, label %88
    i32 2, label %86
  ]

; <label>:84                                      ; preds = %checkArgMode.exit37
  %85 = icmp eq i32 %66, 0
  br i1 %85, label %checkArgMode.exit, label %precheck.exit.thread.loopexit84

; <label>:86                                      ; preds = %checkArgMode.exit37
  %87 = icmp ugt i32 %7, %66
  br i1 %87, label %checkArgMode.exit, label %precheck.exit.thread.loopexit84

; <label>:88                                      ; preds = %checkArgMode.exit37
  %89 = and i32 %65, 256
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %95, label %91

; <label>:91                                      ; preds = %88
  %92 = and i32 %65, 255
  %93 = load i32, i32* %45, align 4, !tbaa !115
  %94 = icmp slt i32 %92, %93
  br i1 %94, label %checkArgMode.exit, label %precheck.exit.thread.loopexit84

; <label>:95                                      ; preds = %88
  %96 = icmp ugt i32 %7, %66
  br i1 %96, label %checkArgMode.exit, label %precheck.exit.thread.loopexit84

; <label>:97                                      ; preds = %57
  %98 = lshr i32 %51, 14
  %99 = and i32 %61, 48
  %100 = icmp eq i32 %99, 48
  br i1 %100, label %101, label %checkArgMode.exit

; <label>:101                                     ; preds = %97
  %102 = load i32, i32* %45, align 4, !tbaa !115
  %103 = icmp slt i32 %98, %102
  br i1 %103, label %checkArgMode.exit, label %precheck.exit.thread.loopexit84

; <label>:104                                     ; preds = %57
  %105 = lshr i32 %51, 14
  %106 = add nsw i32 %105, -131071
  %107 = and i32 %61, 48
  %108 = icmp eq i32 %107, 32
  br i1 %108, label %109, label %checkArgMode.exit

; <label>:109                                     ; preds = %104
  %110 = add nsw i32 %pc.063, 1
  %111 = add nsw i32 %110, %106
  %112 = icmp sgt i32 %111, -1
  %113 = icmp slt i32 %111, %2
  %or.cond75 = and i1 %112, %113
  br i1 %or.cond75, label %114, label %precheck.exit.thread.loopexit84

; <label>:114                                     ; preds = %109
  %115 = icmp sgt i32 %111, 0
  br i1 %115, label %.lr.ph, label %checkArgMode.exit

.lr.ph:                                           ; preds = %114
  %116 = add i32 %106, %pc.063
  %117 = sext i32 %111 to i64
  br label %118

; <label>:118                                     ; preds = %.lr.ph, %.critedge
  %indvars.iv = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next, %.critedge ]
  %119 = trunc i64 %indvars.iv to i32
  %120 = sub i32 %116, %119
  %121 = sext i32 %120 to i64
  %122 = getelementptr inbounds i32, i32* %35, i64 %121
  %123 = load i32, i32* %122, align 4, !tbaa !38
  %124 = and i32 %123, 8372287
  %125 = icmp eq i32 %124, 34
  br i1 %125, label %.critedge, label %._crit_edge.loopexit

.critedge:                                        ; preds = %118
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %126 = icmp slt i64 %indvars.iv.next, %117
  br i1 %126, label %118, label %._crit_edge.57

._crit_edge.57:                                   ; preds = %.critedge
  %indvars.iv.next.lcssa = phi i64 [ %indvars.iv.next, %.critedge ]
  %127 = trunc i64 %indvars.iv.next.lcssa to i32
  br label %._crit_edge

._crit_edge.loopexit:                             ; preds = %118
  %.lcssa = phi i32 [ %119, %118 ]
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %._crit_edge.57
  %j.0.lcssa = phi i32 [ %127, %._crit_edge.57 ], [ %.lcssa, %._crit_edge.loopexit ]
  %128 = and i32 %j.0.lcssa, 1
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %checkArgMode.exit, label %precheck.exit.thread.loopexit84

checkArgMode.exit:                                ; preds = %95, %91, %86, %84, %104, %97, %101, %114, %._crit_edge, %checkArgMode.exit37, %57
  %c.0 = phi i32 [ %66, %checkArgMode.exit37 ], [ 0, %57 ], [ %66, %95 ], [ %66, %91 ], [ %66, %86 ], [ 0, %84 ], [ 0, %97 ], [ 0, %101 ], [ 0, %104 ], [ 0, %114 ], [ 0, %._crit_edge ]
  %b.0 = phi i32 [ %64, %checkArgMode.exit37 ], [ 0, %57 ], [ %64, %95 ], [ %64, %91 ], [ %64, %86 ], [ %64, %84 ], [ %98, %97 ], [ %98, %101 ], [ %106, %104 ], [ %106, %114 ], [ %106, %._crit_edge ]
  %130 = and i8 %60, 64
  %131 = icmp ne i8 %130, 0
  %132 = icmp eq i32 %54, %reg
  %or.cond20 = and i1 %132, %131
  %last.1 = select i1 %or.cond20, i32 %pc.063, i32 %last.062
  %133 = icmp slt i8 %60, 0
  br i1 %133, label %134, label %144

; <label>:134                                     ; preds = %checkArgMode.exit
  %135 = add nsw i32 %pc.063, 2
  %136 = icmp slt i32 %135, %2
  br i1 %136, label %137, label %precheck.exit.thread.loopexit84

; <label>:137                                     ; preds = %134
  %138 = add nsw i32 %pc.063, 1
  %139 = sext i32 %138 to i64
  %140 = getelementptr inbounds i32, i32* %35, i64 %139
  %141 = load i32, i32* %140, align 4, !tbaa !38
  %142 = and i32 %141, 63
  %143 = icmp eq i32 %142, 22
  br i1 %143, label %144, label %precheck.exit.thread.loopexit84

; <label>:144                                     ; preds = %137, %checkArgMode.exit
  switch i32 %52, label %.thread47 [
    i32 2, label %145
    i32 3, label %157
    i32 4, label %160
    i32 8, label %160
    i32 5, label %162
    i32 7, label %162
    i32 11, label %168
    i32 21, label %173
    i32 33, label %175
    i32 31, label %183
    i32 32, label %183
    i32 22, label %186
    i32 28, label %191
    i32 29, label %191
    i32 30, label %211
    i32 34, label %217
    i32 36, label %226
    i32 37, label %249
  ]

; <label>:145                                     ; preds = %144
  %146 = icmp eq i32 %c.0, 1
  br i1 %146, label %147, label %.thread47

; <label>:147                                     ; preds = %145
  %148 = add nsw i32 %pc.063, 2
  %149 = icmp slt i32 %148, %2
  br i1 %149, label %150, label %precheck.exit.thread.loopexit84

; <label>:150                                     ; preds = %147
  %151 = add nsw i32 %pc.063, 1
  %152 = sext i32 %151 to i64
  %153 = getelementptr inbounds i32, i32* %35, i64 %152
  %154 = load i32, i32* %153, align 4, !tbaa !38
  %155 = and i32 %154, 8372287
  %156 = icmp eq i32 %155, 34
  br i1 %156, label %precheck.exit.thread.loopexit84, label %.thread47

; <label>:157                                     ; preds = %144
  %158 = icmp sgt i32 %54, %reg
  %159 = icmp slt i32 %b.0, %reg
  %or.cond23 = or i1 %158, %159
  %last.1.pc.030 = select i1 %or.cond23, i32 %last.1, i32 %pc.063
  br label %.thread47

; <label>:160                                     ; preds = %144, %144
  %161 = icmp slt i32 %b.0, %24
  br i1 %161, label %.thread47, label %precheck.exit.thread.loopexit84

; <label>:162                                     ; preds = %144, %144
  %163 = sext i32 %b.0 to i64
  %164 = load %struct.lua_TValue*, %struct.lua_TValue** %42, align 8, !tbaa !116
  %165 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %164, i64 %163, i32 1
  %166 = load i32, i32* %165, align 4, !tbaa !10
  %167 = icmp eq i32 %166, 4
  br i1 %167, label %.thread47, label %precheck.exit.thread.loopexit84

; <label>:168                                     ; preds = %144
  %169 = add nuw nsw i32 %54, 1
  %170 = icmp ult i32 %169, %7
  br i1 %170, label %171, label %precheck.exit.thread.loopexit84

; <label>:171                                     ; preds = %168
  %172 = icmp eq i32 %169, %reg
  %pc.0.last.1 = select i1 %172, i32 %pc.063, i32 %last.1
  br label %.thread47

; <label>:173                                     ; preds = %144
  %174 = icmp slt i32 %b.0, %c.0
  br i1 %174, label %.thread47, label %precheck.exit.thread.loopexit84

; <label>:175                                     ; preds = %144
  %176 = icmp eq i32 %c.0, 0
  br i1 %176, label %precheck.exit.thread.loopexit84, label %177

; <label>:177                                     ; preds = %175
  %178 = add nuw nsw i32 %54, 2
  %179 = add nuw nsw i32 %c.0, %178
  %180 = icmp ult i32 %179, %7
  br i1 %180, label %181, label %precheck.exit.thread.loopexit84

; <label>:181                                     ; preds = %177
  %182 = icmp sgt i32 %178, %reg
  %last.1.pc.0 = select i1 %182, i32 %last.1, i32 %pc.063
  br label %.thread47

; <label>:183                                     ; preds = %144, %144
  %184 = add nuw nsw i32 %54, 3
  %185 = icmp ult i32 %184, %7
  br i1 %185, label %186, label %precheck.exit.thread.loopexit84

; <label>:186                                     ; preds = %183, %144
  %187 = add nsw i32 %pc.063, 1
  %188 = add nsw i32 %187, %b.0
  %notrhs = icmp sge i32 %pc.063, %188
  %or.cond24.not = or i1 %notlhs, %notrhs
  %189 = icmp sgt i32 %188, %lastpc
  %or.cond25 = or i1 %189, %or.cond24.not
  %190 = select i1 %or.cond25, i32 0, i32 %b.0
  %pc.1 = add nsw i32 %190, %pc.063
  br label %.thread47

; <label>:191                                     ; preds = %144, %144
  %192 = icmp ne i32 %b.0, 0
  %193 = add nsw i32 %b.0, %54
  %194 = icmp sgt i32 %193, %7
  %or.cond77 = and i1 %192, %194
  br i1 %or.cond77, label %precheck.exit.thread.loopexit84, label %195

; <label>:195                                     ; preds = %191
  %196 = add nsw i32 %c.0, -1
  %197 = icmp eq i32 %c.0, 0
  br i1 %197, label %198, label %205

; <label>:198                                     ; preds = %195
  %199 = add nsw i32 %pc.063, 1
  %200 = sext i32 %199 to i64
  %201 = getelementptr inbounds i32, i32* %35, i64 %200
  %202 = load i32, i32* %201, align 4, !tbaa !38
  %203 = and i32 %202, 63
  switch i32 %203, label %precheck.exit.thread.loopexit84 [
    i32 28, label %luaG_checkopenop.exit34
    i32 29, label %luaG_checkopenop.exit34
    i32 30, label %luaG_checkopenop.exit34
    i32 34, label %luaG_checkopenop.exit34
  ]

luaG_checkopenop.exit34:                          ; preds = %198, %198, %198, %198
  %204 = icmp ult i32 %202, 8388608
  br i1 %204, label %209, label %precheck.exit.thread.loopexit84

; <label>:205                                     ; preds = %195
  %206 = icmp ne i32 %196, 0
  %207 = add nsw i32 %196, %54
  %208 = icmp sgt i32 %207, %7
  %or.cond79 = and i1 %206, %208
  br i1 %or.cond79, label %precheck.exit.thread.loopexit84, label %209

; <label>:209                                     ; preds = %205, %luaG_checkopenop.exit34
  %210 = icmp sgt i32 %54, %reg
  %last.1.pc.026 = select i1 %210, i32 %last.1, i32 %pc.063
  br label %.thread47

; <label>:211                                     ; preds = %144
  %212 = icmp sgt i32 %b.0, 1
  br i1 %212, label %213, label %.thread47

; <label>:213                                     ; preds = %211
  %214 = add nsw i32 %54, -1
  %215 = add i32 %214, %b.0
  %216 = icmp sgt i32 %215, %7
  br i1 %216, label %precheck.exit.thread.loopexit84, label %.thread47

; <label>:217                                     ; preds = %144
  %218 = icmp slt i32 %b.0, 1
  %219 = add nsw i32 %b.0, %54
  %220 = icmp slt i32 %219, %7
  %or.cond81 = or i1 %218, %220
  br i1 %or.cond81, label %221, label %precheck.exit.thread.loopexit84

; <label>:221                                     ; preds = %217
  %222 = icmp eq i32 %c.0, 0
  br i1 %222, label %223, label %.thread47

; <label>:223                                     ; preds = %221
  %224 = add nsw i32 %pc.063, 1
  %225 = icmp slt i32 %224, %32
  br i1 %225, label %.thread47, label %precheck.exit.thread.loopexit84

; <label>:226                                     ; preds = %144
  %227 = load i32, i32* %43, align 4, !tbaa !139
  %228 = icmp slt i32 %b.0, %227
  br i1 %228, label %229, label %precheck.exit.thread.loopexit84

; <label>:229                                     ; preds = %226
  %230 = sext i32 %b.0 to i64
  %231 = load %struct.Proto**, %struct.Proto*** %44, align 8, !tbaa !140
  %232 = getelementptr inbounds %struct.Proto*, %struct.Proto** %231, i64 %230
  %233 = load %struct.Proto*, %struct.Proto** %232, align 8, !tbaa !25
  %234 = getelementptr inbounds %struct.Proto, %struct.Proto* %233, i64 0, i32 19
  %235 = load i8, i8* %234, align 1, !tbaa !138
  %236 = zext i8 %235 to i32
  %237 = add nsw i32 %236, %pc.063
  %238 = icmp slt i32 %237, %2
  br i1 %238, label %.preheader, label %precheck.exit.thread.loopexit84

.preheader:                                       ; preds = %229
  %239 = icmp eq i8 %235, 0
  br i1 %239, label %._crit_edge.61, label %.lr.ph60

.lr.ph60:                                         ; preds = %.preheader
  %240 = zext i8 %235 to i64
  br label %243

; <label>:241                                     ; preds = %243
  %indvars.iv.next71 = add nuw nsw i64 %indvars.iv70, 1
  %242 = icmp slt i64 %indvars.iv70, %240
  br i1 %242, label %243, label %._crit_edge.61.loopexit

; <label>:243                                     ; preds = %241, %.lr.ph60
  %indvars.iv70 = phi i64 [ %indvars.iv.next71, %241 ], [ 1, %.lr.ph60 ]
  %244 = add nsw i64 %indvars.iv70, %49
  %245 = getelementptr inbounds i32, i32* %35, i64 %244
  %246 = load i32, i32* %245, align 4, !tbaa !38
  %247 = and i32 %246, 59
  %248 = icmp eq i32 %247, 0
  br i1 %248, label %241, label %precheck.exit.thread.loopexit

._crit_edge.61.loopexit:                          ; preds = %241
  br label %._crit_edge.61

._crit_edge.61:                                   ; preds = %._crit_edge.61.loopexit, %.preheader
  %pc.0. = select i1 %notlhs, i32 %pc.063, i32 %237
  br label %.thread47

; <label>:249                                     ; preds = %144
  br i1 %47, label %250, label %precheck.exit.thread.loopexit84

; <label>:250                                     ; preds = %249
  %251 = icmp eq i32 %b.0, 0
  br i1 %251, label %252, label %259

; <label>:252                                     ; preds = %250
  %253 = add nsw i32 %pc.063, 1
  %254 = sext i32 %253 to i64
  %255 = getelementptr inbounds i32, i32* %35, i64 %254
  %256 = load i32, i32* %255, align 4, !tbaa !38
  %257 = and i32 %256, 63
  switch i32 %257, label %precheck.exit.thread.loopexit84 [
    i32 28, label %luaG_checkopenop.exit
    i32 29, label %luaG_checkopenop.exit
    i32 30, label %luaG_checkopenop.exit
    i32 34, label %luaG_checkopenop.exit
  ]

luaG_checkopenop.exit:                            ; preds = %252, %252, %252, %252
  %258 = icmp ult i32 %256, 8388608
  br i1 %258, label %259, label %precheck.exit.thread.loopexit84

; <label>:259                                     ; preds = %luaG_checkopenop.exit, %250
  %260 = add nsw i32 %54, -1
  %261 = add i32 %260, %b.0
  %262 = icmp sgt i32 %261, %7
  br i1 %262, label %precheck.exit.thread.loopexit84, label %.thread47

.thread47:                                        ; preds = %._crit_edge.61, %157, %209, %181, %171, %186, %150, %213, %259, %144, %221, %223, %211, %173, %162, %160, %145
  %pc.550 = phi i32 [ %pc.063, %144 ], [ %pc.063, %259 ], [ %pc.0., %._crit_edge.61 ], [ %224, %223 ], [ %pc.063, %221 ], [ %pc.063, %213 ], [ %pc.063, %211 ], [ %pc.063, %173 ], [ %pc.063, %162 ], [ %pc.063, %160 ], [ %pc.063, %150 ], [ %pc.063, %145 ], [ %pc.063, %171 ], [ %pc.063, %181 ], [ %pc.1, %186 ], [ %pc.063, %209 ], [ %pc.063, %157 ]
  %last.349 = phi i32 [ %last.1, %144 ], [ %last.1, %259 ], [ %last.1, %._crit_edge.61 ], [ %last.1, %223 ], [ %last.1, %221 ], [ %last.1, %213 ], [ %last.1, %211 ], [ %last.1, %173 ], [ %last.1, %162 ], [ %last.1, %160 ], [ %last.1, %150 ], [ %last.1, %145 ], [ %pc.0.last.1, %171 ], [ %last.1.pc.0, %181 ], [ %last.1, %186 ], [ %last.1.pc.026, %209 ], [ %last.1.pc.030, %157 ]
  %263 = add nsw i32 %pc.550, 1
  %264 = icmp slt i32 %263, %lastpc
  br i1 %264, label %48, label %._crit_edge.67

._crit_edge.67:                                   ; preds = %.thread47
  %last.349.lcssa = phi i32 [ %last.349, %.thread47 ]
  %.phi.trans.insert = sext i32 %last.349.lcssa to i64
  %.phi.trans.insert72 = getelementptr inbounds i32, i32* %35, i64 %.phi.trans.insert
  %.pre = load i32, i32* %.phi.trans.insert72, align 4, !tbaa !38
  br label %precheck.exit.thread

precheck.exit.thread.loopexit:                    ; preds = %243
  br label %precheck.exit.thread

precheck.exit.thread.loopexit84:                  ; preds = %217, %205, %191, %48, %101, %134, %137, %147, %150, %160, %162, %168, %173, %175, %177, %183, %213, %223, %249, %259, %69, %71, %80, %76, %84, %86, %95, %91, %109, %198, %252, %229, %226, %._crit_edge, %luaG_checkopenop.exit, %luaG_checkopenop.exit34
  br label %precheck.exit.thread

precheck.exit.thread:                             ; preds = %precheck.exit.thread.loopexit84, %precheck.exit.thread.loopexit, %40, %._crit_edge.67, %precheck.exit, %0, %6, %19, %26
  %.10 = phi i32 [ 0, %precheck.exit ], [ 0, %26 ], [ 0, %19 ], [ 0, %6 ], [ 0, %0 ], [ %.pre, %._crit_edge.67 ], [ %37, %40 ], [ 0, %precheck.exit.thread.loopexit ], [ 0, %precheck.exit.thread.loopexit84 ]
  ret i32 %.10
}

; Function Attrs: nounwind uwtable
define hidden void @luaD_seterrorobj(%struct.lua_State* %L, i32 %errcode, %struct.lua_TValue* %oldtop) #0 {
  switch i32 %errcode, label %19 [
    i32 4, label %1
    i32 5, label %5
    i32 3, label %9
    i32 2, label %9
  ]

; <label>:1                                       ; preds = %0
  %2 = tail call %union.TString* @luaS_newlstr(%struct.lua_State* %L, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.186, i64 0, i64 0), i64 17) #1
  %3 = bitcast %struct.lua_TValue* %oldtop to %union.TString**
  store %union.TString* %2, %union.TString** %3, align 8, !tbaa !25
  %4 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %oldtop, i64 0, i32 1
  store i32 4, i32* %4, align 4, !tbaa !10
  br label %19

; <label>:5                                       ; preds = %0
  %6 = tail call %union.TString* @luaS_newlstr(%struct.lua_State* %L, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.1.187, i64 0, i64 0), i64 23) #1
  %7 = bitcast %struct.lua_TValue* %oldtop to %union.TString**
  store %union.TString* %6, %union.TString** %7, align 8, !tbaa !25
  %8 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %oldtop, i64 0, i32 1
  store i32 4, i32* %8, align 4, !tbaa !10
  br label %19

; <label>:9                                       ; preds = %0, %0
  %10 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %11 = load %struct.lua_TValue*, %struct.lua_TValue** %10, align 8, !tbaa !1
  %12 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %11, i64 -1
  %13 = bitcast %struct.lua_TValue* %12 to i64*
  %14 = bitcast %struct.lua_TValue* %oldtop to i64*
  %15 = load i64, i64* %13, align 8
  store i64 %15, i64* %14, align 8
  %16 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %11, i64 -1, i32 1
  %17 = load i32, i32* %16, align 4, !tbaa !10
  %18 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %oldtop, i64 0, i32 1
  store i32 %17, i32* %18, align 4, !tbaa !10
  br label %19

; <label>:19                                      ; preds = %0, %9, %5, %1
  %20 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %oldtop, i64 1
  %21 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  store %struct.lua_TValue* %20, %struct.lua_TValue** %21, align 8, !tbaa !1
  ret void
}

; Function Attrs: noreturn nounwind uwtable
define hidden void @luaD_throw(%struct.lua_State* %L, i32 %errcode) #8 {
  %1 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 26
  %2 = load %struct.lua_longjmp*, %struct.lua_longjmp** %1, align 8, !tbaa !141
  %3 = icmp eq %struct.lua_longjmp* %2, null
  br i1 %3, label %8, label %4

; <label>:4                                       ; preds = %0
  %5 = getelementptr inbounds %struct.lua_longjmp, %struct.lua_longjmp* %2, i64 0, i32 2
  store volatile i32 %errcode, i32* %5, align 4, !tbaa !142
  %6 = load %struct.lua_longjmp*, %struct.lua_longjmp** %1, align 8, !tbaa !141
  %7 = getelementptr inbounds %struct.lua_longjmp, %struct.lua_longjmp* %6, i64 0, i32 1, i64 0
  tail call void @_longjmp(%struct.__jmp_buf_tag* %7, i32 1) #15
  unreachable

; <label>:8                                       ; preds = %0
  %9 = trunc i32 %errcode to i8
  %10 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 3
  store i8 %9, i8* %10, align 1, !tbaa !59
  %11 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 6
  %12 = load %struct.global_State*, %struct.global_State** %11, align 8, !tbaa !17
  %13 = getelementptr inbounds %struct.global_State, %struct.global_State* %12, i64 0, i32 19
  %14 = load i32 (%struct.lua_State*)*, i32 (%struct.lua_State*)** %13, align 8, !tbaa !18
  %15 = icmp eq i32 (%struct.lua_State*)* %14, null
  br i1 %15, label %80, label %16

; <label>:16                                      ; preds = %8
  %17 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 12
  %18 = load %struct.CallInfo*, %struct.CallInfo** %17, align 8, !tbaa !32
  %19 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 7
  store %struct.CallInfo* %18, %struct.CallInfo** %19, align 8, !tbaa !13
  %20 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %18, i64 0, i32 0
  %21 = load %struct.lua_TValue*, %struct.lua_TValue** %20, align 8, !tbaa !132
  %22 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 5
  store %struct.lua_TValue* %21, %struct.lua_TValue** %22, align 8, !tbaa !11
  tail call void bitcast (void (%struct.lua_State.115*, %struct.lua_TValue.101*)* @luaF_close to void (%struct.lua_State*, %struct.lua_TValue*)*)(%struct.lua_State* %L, %struct.lua_TValue* %21) #1
  %23 = load %struct.lua_TValue*, %struct.lua_TValue** %22, align 8, !tbaa !11
  switch i32 %errcode, label %luaD_seterrorobj.exit.i [
    i32 4, label %24
    i32 5, label %28
    i32 3, label %32
    i32 2, label %32
  ]

; <label>:24                                      ; preds = %16
  %25 = tail call %union.TString* @luaS_newlstr(%struct.lua_State* %L, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.186, i64 0, i64 0), i64 17) #1
  %26 = bitcast %struct.lua_TValue* %23 to %union.TString**
  store %union.TString* %25, %union.TString** %26, align 8, !tbaa !25
  %27 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %23, i64 0, i32 1
  store i32 4, i32* %27, align 4, !tbaa !10
  br label %luaD_seterrorobj.exit.i

; <label>:28                                      ; preds = %16
  %29 = tail call %union.TString* @luaS_newlstr(%struct.lua_State* %L, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.1.187, i64 0, i64 0), i64 23) #1
  %30 = bitcast %struct.lua_TValue* %23 to %union.TString**
  store %union.TString* %29, %union.TString** %30, align 8, !tbaa !25
  %31 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %23, i64 0, i32 1
  store i32 4, i32* %31, align 4, !tbaa !10
  br label %luaD_seterrorobj.exit.i

; <label>:32                                      ; preds = %16, %16
  %33 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %34 = load %struct.lua_TValue*, %struct.lua_TValue** %33, align 8, !tbaa !1
  %35 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %34, i64 -1
  %36 = bitcast %struct.lua_TValue* %35 to i64*
  %37 = bitcast %struct.lua_TValue* %23 to i64*
  %38 = load i64, i64* %36, align 8
  store i64 %38, i64* %37, align 8
  %39 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %34, i64 -1, i32 1
  %40 = load i32, i32* %39, align 4, !tbaa !10
  %41 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %23, i64 0, i32 1
  store i32 %40, i32* %41, align 4, !tbaa !10
  br label %luaD_seterrorobj.exit.i

luaD_seterrorobj.exit.i:                          ; preds = %32, %28, %24, %16
  %42 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %23, i64 1
  %43 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  store %struct.lua_TValue* %42, %struct.lua_TValue** %43, align 8, !tbaa !1
  %44 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 16
  %45 = load i16, i16* %44, align 2, !tbaa !144
  %46 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 15
  store i16 %45, i16* %46, align 2, !tbaa !16
  %47 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 18
  store i8 1, i8* %47, align 1, !tbaa !145
  %48 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 14
  %49 = load i32, i32* %48, align 4, !tbaa !146
  %50 = icmp sgt i32 %49, 20000
  br i1 %50, label %51, label %resetstack.exit

; <label>:51                                      ; preds = %luaD_seterrorobj.exit.i
  %52 = bitcast %struct.CallInfo** %19 to i64*
  %53 = load i64, i64* %52, align 8, !tbaa !13
  %54 = bitcast %struct.CallInfo** %17 to i64*
  %55 = load i64, i64* %54, align 8, !tbaa !32
  %56 = sub i64 %53, %55
  %57 = sdiv exact i64 %56, 40
  %58 = trunc i64 %57 to i32
  %59 = add nsw i32 %58, 1
  %60 = icmp slt i32 %59, 20000
  br i1 %60, label %61, label %resetstack.exit

; <label>:61                                      ; preds = %51
  %62 = inttoptr i64 %55 to i8*
  %63 = sext i32 %49 to i64
  %64 = mul nsw i64 %63, 40
  %65 = tail call i8* @luaM_realloc_(%struct.lua_State* %L, i8* %62, i64 %64, i64 800000) #1
  %66 = bitcast %struct.CallInfo** %17 to i8**
  store i8* %65, i8** %66, align 8, !tbaa !32
  store i32 20000, i32* %48, align 4, !tbaa !146
  %67 = load i64, i64* %52, align 8, !tbaa !13
  %68 = sub i64 %67, %55
  %69 = sdiv exact i64 %68, 40
  %70 = bitcast i8* %65 to %struct.CallInfo*
  %71 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %70, i64 %69
  store %struct.CallInfo* %71, %struct.CallInfo** %19, align 8, !tbaa !13
  %72 = getelementptr inbounds i8, i8* %65, i64 799960
  %73 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 11
  %74 = bitcast %struct.CallInfo** %73 to i8**
  store i8* %72, i8** %74, align 8, !tbaa !147
  br label %resetstack.exit

resetstack.exit:                                  ; preds = %luaD_seterrorobj.exit.i, %51, %61
  %75 = bitcast %struct.lua_longjmp** %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* %75, i8 0, i64 16, i32 8, i1 false) #1
  %76 = load %struct.global_State*, %struct.global_State** %11, align 8, !tbaa !17
  %77 = getelementptr inbounds %struct.global_State, %struct.global_State* %76, i64 0, i32 19
  %78 = load i32 (%struct.lua_State*)*, i32 (%struct.lua_State*)** %77, align 8, !tbaa !18
  %79 = tail call i32 %78(%struct.lua_State* %L) #1
  br label %80

; <label>:80                                      ; preds = %8, %resetstack.exit
  tail call void @exit(i32 1) #15
  unreachable
}

; Function Attrs: noreturn nounwind
declare void @_longjmp(%struct.__jmp_buf_tag*, i32) #9

; Function Attrs: noreturn nounwind
declare void @exit(i32) #9

; Function Attrs: nounwind uwtable
define hidden i32 @luaD_rawrunprotected(%struct.lua_State* %L, void (%struct.lua_State*, i8*)* nocapture %f, i8* %ud) #0 {
  %lj = alloca %struct.lua_longjmp, align 8
  %1 = bitcast %struct.lua_longjmp* %lj to i8*
  call void @llvm.lifetime.start(i64 216, i8* %1) #1
  %2 = getelementptr inbounds %struct.lua_longjmp, %struct.lua_longjmp* %lj, i64 0, i32 2
  store volatile i32 0, i32* %2, align 8, !tbaa !142
  %3 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 26
  %4 = bitcast %struct.lua_longjmp** %3 to i64*
  %5 = load i64, i64* %4, align 8, !tbaa !141
  %6 = bitcast %struct.lua_longjmp* %lj to i64*
  store i64 %5, i64* %6, align 8, !tbaa !148
  store %struct.lua_longjmp* %lj, %struct.lua_longjmp** %3, align 8, !tbaa !141
  %7 = getelementptr inbounds %struct.lua_longjmp, %struct.lua_longjmp* %lj, i64 0, i32 1, i64 0
  %8 = call i32 @_setjmp(%struct.__jmp_buf_tag* %7) #16
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %11

; <label>:10                                      ; preds = %0
  call void %f(%struct.lua_State* %L, i8* %ud) #1
  br label %11

; <label>:11                                      ; preds = %10, %0
  %12 = load i64, i64* %6, align 8, !tbaa !148
  store i64 %12, i64* %4, align 8, !tbaa !141
  %13 = load volatile i32, i32* %2, align 8, !tbaa !142
  call void @llvm.lifetime.end(i64 216, i8* %1) #1
  ret i32 %13
}

; Function Attrs: nounwind returns_twice
declare i32 @_setjmp(%struct.__jmp_buf_tag*) #10

; Function Attrs: nounwind uwtable
define hidden void @luaD_reallocstack(%struct.lua_State* %L, i32 %newsize) #0 {
  %1 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 10
  %2 = load %struct.lua_TValue*, %struct.lua_TValue** %1, align 8, !tbaa !50
  %3 = add nsw i32 %newsize, 6
  %4 = add nsw i32 %newsize, 7
  %5 = icmp sgt i32 %4, -1
  br i1 %5, label %6, label %15

; <label>:6                                       ; preds = %0
  %7 = bitcast %struct.lua_TValue* %2 to i8*
  %8 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 13
  %9 = load i32, i32* %8, align 4, !tbaa !149
  %10 = sext i32 %9 to i64
  %11 = shl nsw i64 %10, 4
  %12 = sext i32 %3 to i64
  %13 = shl nsw i64 %12, 4
  %14 = tail call i8* @luaM_realloc_(%struct.lua_State* %L, i8* %7, i64 %11, i64 %13) #1
  br label %17

; <label>:15                                      ; preds = %0
  %16 = tail call i8* @luaM_toobig(%struct.lua_State* %L) #1
  %.pre = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 13
  br label %17

; <label>:17                                      ; preds = %15, %6
  %.pre-phi = phi i32* [ %.pre, %15 ], [ %8, %6 ]
  %18 = phi i8* [ %16, %15 ], [ %14, %6 ]
  %19 = bitcast %struct.lua_TValue** %1 to i8**
  store i8* %18, i8** %19, align 8, !tbaa !50
  store i32 %3, i32* %.pre-phi, align 4, !tbaa !149
  %.cast = bitcast i8* %18 to %struct.lua_TValue*
  %20 = sext i32 %newsize to i64
  %21 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %.cast, i64 %20
  %22 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 9
  store %struct.lua_TValue* %21, %struct.lua_TValue** %22, align 8, !tbaa !12
  %23 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %24 = bitcast %struct.lua_TValue** %23 to i64*
  %25 = load i64, i64* %24, align 8, !tbaa !1
  %26 = ptrtoint %struct.lua_TValue* %2 to i64
  %27 = sub i64 %25, %26
  %28 = ashr exact i64 %27, 4
  %29 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %.cast, i64 %28
  store %struct.lua_TValue* %29, %struct.lua_TValue** %23, align 8, !tbaa !1
  %30 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 24
  %up.0.2.i = load %union.GCObject*, %union.GCObject** %30, align 8
  %31 = icmp eq %union.GCObject* %up.0.2.i, null
  br i1 %31, label %._crit_edge.6.i, label %.lr.ph5.i.preheader

.lr.ph5.i.preheader:                              ; preds = %17
  br label %.lr.ph5.i

.lr.ph5.i:                                        ; preds = %.lr.ph5.i.preheader, %.lr.ph5.i
  %up.03.i = phi %union.GCObject* [ %up.0.i, %.lr.ph5.i ], [ %up.0.2.i, %.lr.ph5.i.preheader ]
  %32 = getelementptr inbounds %union.GCObject, %union.GCObject* %up.03.i, i64 0, i32 0, i32 4
  %33 = bitcast %struct.lua_TValue** %32 to i64*
  %34 = load i64, i64* %33, align 8, !tbaa !67
  %35 = sub i64 %34, %26
  %36 = ashr exact i64 %35, 4
  %37 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %.cast, i64 %36
  store %struct.lua_TValue* %37, %struct.lua_TValue** %32, align 8, !tbaa !67
  %38 = getelementptr inbounds %union.GCObject, %union.GCObject* %up.03.i, i64 0, i32 0, i32 0
  %up.0.i = load %union.GCObject*, %union.GCObject** %38, align 8
  %39 = icmp eq %union.GCObject* %up.0.i, null
  br i1 %39, label %._crit_edge.6.i.loopexit, label %.lr.ph5.i

._crit_edge.6.i.loopexit:                         ; preds = %.lr.ph5.i
  br label %._crit_edge.6.i

._crit_edge.6.i:                                  ; preds = %._crit_edge.6.i.loopexit, %17
  %40 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 12
  %41 = load %struct.CallInfo*, %struct.CallInfo** %40, align 8, !tbaa !32
  %42 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 7
  %43 = load %struct.CallInfo*, %struct.CallInfo** %42, align 8, !tbaa !13
  %44 = icmp ugt %struct.CallInfo* %41, %43
  br i1 %44, label %correctstack.exit, label %.lr.ph.i.preheader

.lr.ph.i.preheader:                               ; preds = %._crit_edge.6.i
  br label %.lr.ph.i

.lr.ph.i:                                         ; preds = %.lr.ph.i.preheader, %.lr.ph.i
  %ci.01.i = phi %struct.CallInfo* [ %63, %.lr.ph.i ], [ %41, %.lr.ph.i.preheader ]
  %45 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %ci.01.i, i64 0, i32 2
  %46 = bitcast %struct.lua_TValue** %45 to i64*
  %47 = load i64, i64* %46, align 8, !tbaa !14
  %48 = sub i64 %47, %26
  %49 = ashr exact i64 %48, 4
  %50 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %.cast, i64 %49
  store %struct.lua_TValue* %50, %struct.lua_TValue** %45, align 8, !tbaa !14
  %51 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %ci.01.i, i64 0, i32 0
  %52 = bitcast %struct.CallInfo* %ci.01.i to i64*
  %53 = load i64, i64* %52, align 8, !tbaa !132
  %54 = sub i64 %53, %26
  %55 = ashr exact i64 %54, 4
  %56 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %.cast, i64 %55
  store %struct.lua_TValue* %56, %struct.lua_TValue** %51, align 8, !tbaa !132
  %57 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %ci.01.i, i64 0, i32 1
  %58 = bitcast %struct.lua_TValue** %57 to i64*
  %59 = load i64, i64* %58, align 8, !tbaa !28
  %60 = sub i64 %59, %26
  %61 = ashr exact i64 %60, 4
  %62 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %.cast, i64 %61
  store %struct.lua_TValue* %62, %struct.lua_TValue** %57, align 8, !tbaa !28
  %63 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %ci.01.i, i64 1
  %64 = icmp ugt %struct.CallInfo* %63, %43
  br i1 %64, label %correctstack.exit.loopexit, label %.lr.ph.i

correctstack.exit.loopexit:                       ; preds = %.lr.ph.i
  br label %correctstack.exit

correctstack.exit:                                ; preds = %correctstack.exit.loopexit, %._crit_edge.6.i
  %65 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 5
  %66 = bitcast %struct.lua_TValue** %65 to i64*
  %67 = load i64, i64* %66, align 8, !tbaa !11
  %68 = sub i64 %67, %26
  %69 = ashr exact i64 %68, 4
  %70 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %.cast, i64 %69
  store %struct.lua_TValue* %70, %struct.lua_TValue** %65, align 8, !tbaa !11
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @luaD_reallocCI(%struct.lua_State* %L, i32 %newsize) #0 {
  %1 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 12
  %2 = load %struct.CallInfo*, %struct.CallInfo** %1, align 8, !tbaa !32
  %3 = icmp sgt i32 %newsize, -2
  br i1 %3, label %4, label %13

; <label>:4                                       ; preds = %0
  %5 = bitcast %struct.CallInfo* %2 to i8*
  %6 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 14
  %7 = load i32, i32* %6, align 4, !tbaa !146
  %8 = sext i32 %7 to i64
  %9 = mul nsw i64 %8, 40
  %10 = sext i32 %newsize to i64
  %11 = mul nsw i64 %10, 40
  %12 = tail call i8* @luaM_realloc_(%struct.lua_State* %L, i8* %5, i64 %9, i64 %11) #1
  br label %15

; <label>:13                                      ; preds = %0
  %14 = tail call i8* @luaM_toobig(%struct.lua_State* %L) #1
  %.pre = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 14
  %.pre1 = sext i32 %newsize to i64
  br label %15

; <label>:15                                      ; preds = %13, %4
  %.pre-phi2 = phi i64 [ %.pre1, %13 ], [ %10, %4 ]
  %.pre-phi = phi i32* [ %.pre, %13 ], [ %6, %4 ]
  %16 = phi i8* [ %14, %13 ], [ %12, %4 ]
  %17 = bitcast %struct.CallInfo** %1 to i8**
  store i8* %16, i8** %17, align 8, !tbaa !32
  store i32 %newsize, i32* %.pre-phi, align 4, !tbaa !146
  %18 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 7
  %19 = bitcast %struct.CallInfo** %18 to i64*
  %20 = load i64, i64* %19, align 8, !tbaa !13
  %21 = ptrtoint %struct.CallInfo* %2 to i64
  %22 = sub i64 %20, %21
  %23 = sdiv exact i64 %22, 40
  %24 = bitcast i8* %16 to %struct.CallInfo*
  %25 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %24, i64 %23
  store %struct.CallInfo* %25, %struct.CallInfo** %18, align 8, !tbaa !13
  %26 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %24, i64 %.pre-phi2
  %27 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %26, i64 -1
  %28 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 11
  store %struct.CallInfo* %27, %struct.CallInfo** %28, align 8, !tbaa !147
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @luaD_growstack(%struct.lua_State* %L, i32 %n) #0 {
  %1 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 13
  %2 = load i32, i32* %1, align 4, !tbaa !149
  %3 = icmp slt i32 %2, %n
  br i1 %3, label %6, label %4

; <label>:4                                       ; preds = %0
  %5 = shl nsw i32 %2, 1
  tail call void @luaD_reallocstack(%struct.lua_State* %L, i32 %5)
  br label %8

; <label>:6                                       ; preds = %0
  %7 = add nsw i32 %2, %n
  tail call void @luaD_reallocstack(%struct.lua_State* %L, i32 %7)
  br label %8

; <label>:8                                       ; preds = %6, %4
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @luaD_callhook(%struct.lua_State* %L, i32 %event, i32 %line) #0 {
  %ar = alloca %struct.lua_Debug, align 8
  %1 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 21
  %2 = load void (%struct.lua_State*, %struct.lua_Debug*)*, void (%struct.lua_State*, %struct.lua_Debug*)** %1, align 8, !tbaa !124
  %3 = icmp eq void (%struct.lua_State*, %struct.lua_Debug*)* %2, null
  br i1 %3, label %61, label %4

; <label>:4                                       ; preds = %0
  %5 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 18
  %6 = load i8, i8* %5, align 1, !tbaa !145
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %61, label %8

; <label>:8                                       ; preds = %4
  %9 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %10 = bitcast %struct.lua_TValue** %9 to i64*
  %11 = load i64, i64* %10, align 8, !tbaa !1
  %12 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 10
  %13 = bitcast %struct.lua_TValue** %12 to i64*
  %14 = load i64, i64* %13, align 8, !tbaa !50
  %15 = sub i64 %11, %14
  %16 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 7
  %17 = load %struct.CallInfo*, %struct.CallInfo** %16, align 8, !tbaa !13
  %18 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %17, i64 0, i32 2
  %19 = bitcast %struct.lua_TValue** %18 to i64*
  %20 = load i64, i64* %19, align 8, !tbaa !14
  %21 = sub i64 %20, %14
  %22 = bitcast %struct.lua_Debug* %ar to i8*
  call void @llvm.lifetime.start(i64 120, i8* %22) #1
  %23 = getelementptr inbounds %struct.lua_Debug, %struct.lua_Debug* %ar, i64 0, i32 0
  store i32 %event, i32* %23, align 8, !tbaa !123
  %24 = getelementptr inbounds %struct.lua_Debug, %struct.lua_Debug* %ar, i64 0, i32 5
  store i32 %line, i32* %24, align 8, !tbaa !72
  %25 = icmp eq i32 %event, 4
  br i1 %25, label %34, label %26

; <label>:26                                      ; preds = %8
  %27 = ptrtoint %struct.CallInfo* %17 to i64
  %28 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 12
  %29 = bitcast %struct.CallInfo** %28 to i64*
  %30 = load i64, i64* %29, align 8, !tbaa !32
  %31 = sub i64 %27, %30
  %32 = sdiv exact i64 %31, 40
  %33 = trunc i64 %32 to i32
  br label %34

; <label>:34                                      ; preds = %8, %26
  %.sink = phi i32 [ %33, %26 ], [ 0, %8 ]
  %35 = getelementptr inbounds %struct.lua_Debug, %struct.lua_Debug* %ar, i64 0, i32 10
  store i32 %.sink, i32* %35, align 4
  %36 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 9
  %37 = bitcast %struct.lua_TValue** %36 to i64*
  %38 = load i64, i64* %37, align 8, !tbaa !12
  %39 = sub i64 %38, %11
  %40 = icmp slt i64 %39, 321
  br i1 %40, label %41, label %luaD_growstack.exit

; <label>:41                                      ; preds = %34
  %42 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 13
  %43 = load i32, i32* %42, align 4, !tbaa !149
  %44 = icmp slt i32 %43, 20
  br i1 %44, label %47, label %45

; <label>:45                                      ; preds = %41
  %46 = shl nsw i32 %43, 1
  tail call void @luaD_reallocstack(%struct.lua_State* %L, i32 %46) #1
  br label %luaD_growstack.exit

; <label>:47                                      ; preds = %41
  %48 = add nsw i32 %43, 20
  tail call void @luaD_reallocstack(%struct.lua_State* %L, i32 %48) #1
  br label %luaD_growstack.exit

luaD_growstack.exit:                              ; preds = %47, %45, %34
  %49 = load %struct.lua_TValue*, %struct.lua_TValue** %9, align 8, !tbaa !1
  %50 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %49, i64 20
  %51 = load %struct.CallInfo*, %struct.CallInfo** %16, align 8, !tbaa !13
  %52 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %51, i64 0, i32 2
  store %struct.lua_TValue* %50, %struct.lua_TValue** %52, align 8, !tbaa !14
  store i8 0, i8* %5, align 1, !tbaa !145
  call void %2(%struct.lua_State* %L, %struct.lua_Debug* nonnull %ar) #1
  store i8 1, i8* %5, align 1, !tbaa !145
  %53 = bitcast %struct.lua_TValue** %12 to i8**
  %54 = load i8*, i8** %53, align 8, !tbaa !50
  %55 = getelementptr inbounds i8, i8* %54, i64 %21
  %56 = load %struct.CallInfo*, %struct.CallInfo** %16, align 8, !tbaa !13
  %57 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %56, i64 0, i32 2
  %58 = bitcast %struct.lua_TValue** %57 to i8**
  store i8* %55, i8** %58, align 8, !tbaa !14
  %59 = getelementptr inbounds i8, i8* %54, i64 %15
  %60 = bitcast %struct.lua_TValue** %9 to i8**
  store i8* %59, i8** %60, align 8, !tbaa !1
  call void @llvm.lifetime.end(i64 120, i8* %22) #1
  br label %61

; <label>:61                                      ; preds = %4, %0, %luaD_growstack.exit
  ret void
}

; Function Attrs: nounwind uwtable
define hidden i32 @luaD_precall(%struct.lua_State* %L, %struct.lua_TValue* %func, i32 %nresults) #0 {
  %1 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %func, i64 0, i32 1
  %2 = load i32, i32* %1, align 4, !tbaa !10
  %3 = icmp eq i32 %2, 6
  br i1 %3, label %._crit_edge.24, label %4

._crit_edge.24:                                   ; preds = %0
  %.pre25 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 10
  %.pre26 = bitcast %struct.lua_TValue** %.pre25 to i64*
  br label %55

; <label>:4                                       ; preds = %0
  %5 = tail call %struct.lua_TValue* @luaT_gettmbyobj(%struct.lua_State* %L, %struct.lua_TValue* %func, i32 16) #1
  %6 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 10
  %7 = bitcast %struct.lua_TValue** %6 to i64*
  %8 = load i64, i64* %7, align 8, !tbaa !50
  %9 = ptrtoint %struct.lua_TValue* %func to i64
  %10 = sub i64 %9, %8
  %11 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %5, i64 0, i32 1
  %12 = load i32, i32* %11, align 4, !tbaa !10
  %13 = icmp eq i32 %12, 6
  br i1 %13, label %15, label %14

; <label>:14                                      ; preds = %4
  tail call void @luaG_typeerror(%struct.lua_State* %L, %struct.lua_TValue* %func, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5.188, i64 0, i64 0)) #1
  br label %15

; <label>:15                                      ; preds = %14, %4
  %16 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %17 = load %struct.lua_TValue*, %struct.lua_TValue** %16, align 8, !tbaa !1
  %18 = icmp ugt %struct.lua_TValue* %17, %func
  br i1 %18, label %.lr.ph.i.preheader, label %._crit_edge.4.i

.lr.ph.i.preheader:                               ; preds = %15
  br label %.lr.ph.i

._crit_edge.4.i:                                  ; preds = %15
  %19 = ptrtoint %struct.lua_TValue* %17 to i64
  br label %28

.lr.ph.i:                                         ; preds = %.lr.ph.i.preheader, %.lr.ph.i
  %p.03.i = phi %struct.lua_TValue* [ %20, %.lr.ph.i ], [ %17, %.lr.ph.i.preheader ]
  %20 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %p.03.i, i64 -1
  %21 = bitcast %struct.lua_TValue* %20 to i64*
  %22 = bitcast %struct.lua_TValue* %p.03.i to i64*
  %23 = load i64, i64* %21, align 8
  store i64 %23, i64* %22, align 8
  %24 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %p.03.i, i64 -1, i32 1
  %25 = load i32, i32* %24, align 4, !tbaa !10
  %26 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %p.03.i, i64 0, i32 1
  store i32 %25, i32* %26, align 4, !tbaa !10
  %27 = icmp ugt %struct.lua_TValue* %20, %func
  br i1 %27, label %.lr.ph.i, label %._crit_edge.i

._crit_edge.i:                                    ; preds = %.lr.ph.i
  %.phi.trans.insert.i = bitcast %struct.lua_TValue** %16 to i64*
  %.pre.i = load i64, i64* %.phi.trans.insert.i, align 8, !tbaa !1
  br label %28

; <label>:28                                      ; preds = %._crit_edge.i, %._crit_edge.4.i
  %29 = phi i64 [ %.pre.i, %._crit_edge.i ], [ %19, %._crit_edge.4.i ]
  %30 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 9
  %31 = bitcast %struct.lua_TValue** %30 to i64*
  %32 = load i64, i64* %31, align 8, !tbaa !12
  %33 = sub i64 %32, %29
  %34 = icmp slt i64 %33, 17
  br i1 %34, label %35, label %tryfuncTM.exit

; <label>:35                                      ; preds = %28
  %36 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 13
  %37 = load i32, i32* %36, align 4, !tbaa !149
  %38 = icmp slt i32 %37, 1
  br i1 %38, label %41, label %39

; <label>:39                                      ; preds = %35
  %40 = shl nsw i32 %37, 1
  tail call void @luaD_reallocstack(%struct.lua_State* %L, i32 %40) #1
  br label %tryfuncTM.exit

; <label>:41                                      ; preds = %35
  %42 = add nsw i32 %37, 1
  tail call void @luaD_reallocstack(%struct.lua_State* %L, i32 %42) #1
  br label %tryfuncTM.exit

tryfuncTM.exit:                                   ; preds = %28, %39, %41
  %43 = load %struct.lua_TValue*, %struct.lua_TValue** %16, align 8, !tbaa !1
  %44 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %43, i64 1
  store %struct.lua_TValue* %44, %struct.lua_TValue** %16, align 8, !tbaa !1
  %45 = bitcast %struct.lua_TValue** %6 to i8**
  %46 = load i8*, i8** %45, align 8, !tbaa !50
  %47 = getelementptr inbounds i8, i8* %46, i64 %10
  %48 = bitcast i8* %47 to %struct.lua_TValue*
  %49 = bitcast %struct.lua_TValue* %5 to i64*
  %50 = bitcast i8* %47 to i64*
  %51 = load i64, i64* %49, align 8
  store i64 %51, i64* %50, align 8
  %52 = load i32, i32* %11, align 4, !tbaa !10
  %53 = getelementptr inbounds i8, i8* %47, i64 8
  %54 = bitcast i8* %53 to i32*
  store i32 %52, i32* %54, align 4, !tbaa !10
  br label %55

; <label>:55                                      ; preds = %._crit_edge.24, %tryfuncTM.exit
  %.pre-phi27 = phi i64* [ %.pre26, %._crit_edge.24 ], [ %7, %tryfuncTM.exit ]
  %.pre-phi = phi %struct.lua_TValue** [ %.pre25, %._crit_edge.24 ], [ %6, %tryfuncTM.exit ]
  %.02 = phi %struct.lua_TValue* [ %func, %._crit_edge.24 ], [ %48, %tryfuncTM.exit ]
  %56 = load i64, i64* %.pre-phi27, align 8, !tbaa !50
  %57 = ptrtoint %struct.lua_TValue* %.02 to i64
  %58 = sub i64 %57, %56
  %59 = bitcast %struct.lua_TValue* %.02 to %struct.LClosure**
  %60 = load %struct.LClosure*, %struct.LClosure** %59, align 8, !tbaa !25
  %61 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 8
  %62 = bitcast i32** %61 to i64*
  %63 = load i64, i64* %62, align 8, !tbaa !131
  %64 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 7
  %65 = load %struct.CallInfo*, %struct.CallInfo** %64, align 8, !tbaa !13
  %66 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %65, i64 0, i32 3
  %67 = bitcast i32** %66 to i64*
  store i64 %63, i64* %67, align 8, !tbaa !130
  %68 = getelementptr inbounds %struct.LClosure, %struct.LClosure* %60, i64 0, i32 3
  %69 = load i8, i8* %68, align 1, !tbaa !150
  %70 = icmp eq i8 %69, 0
  br i1 %70, label %71, label %315

; <label>:71                                      ; preds = %55
  %72 = getelementptr inbounds %struct.LClosure, %struct.LClosure* %60, i64 0, i32 7
  %73 = load %struct.Proto*, %struct.Proto** %72, align 8, !tbaa !57
  %74 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 9
  %75 = bitcast %struct.lua_TValue** %74 to i64*
  %76 = load i64, i64* %75, align 8, !tbaa !12
  %77 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %78 = bitcast %struct.lua_TValue** %77 to i64*
  %79 = load i64, i64* %78, align 8, !tbaa !1
  %80 = sub i64 %76, %79
  %81 = getelementptr inbounds %struct.Proto, %struct.Proto* %73, i64 0, i32 22
  %82 = load i8, i8* %81, align 1, !tbaa !100
  %83 = zext i8 %82 to i32
  %84 = shl nuw nsw i32 %83, 4
  %85 = zext i32 %84 to i64
  %86 = icmp sgt i64 %80, %85
  br i1 %86, label %luaD_growstack.exit, label %87

; <label>:87                                      ; preds = %71
  %88 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 13
  %89 = load i32, i32* %88, align 4, !tbaa !149
  %90 = icmp slt i32 %89, %83
  br i1 %90, label %93, label %91

; <label>:91                                      ; preds = %87
  %92 = shl nsw i32 %89, 1
  tail call void @luaD_reallocstack(%struct.lua_State* %L, i32 %92) #1
  br label %luaD_growstack.exit

; <label>:93                                      ; preds = %87
  %94 = add nsw i32 %89, %83
  tail call void @luaD_reallocstack(%struct.lua_State* %L, i32 %94) #1
  br label %luaD_growstack.exit

luaD_growstack.exit:                              ; preds = %93, %91, %71
  %95 = bitcast %struct.lua_TValue** %.pre-phi to i8**
  %96 = load i8*, i8** %95, align 8, !tbaa !50
  %97 = getelementptr inbounds i8, i8* %96, i64 %58
  %98 = bitcast i8* %97 to %struct.lua_TValue*
  %99 = getelementptr inbounds %struct.Proto, %struct.Proto* %73, i64 0, i32 21
  %100 = load i8, i8* %99, align 1, !tbaa !137
  %101 = icmp eq i8 %100, 0
  br i1 %101, label %102, label %112

; <label>:102                                     ; preds = %luaD_growstack.exit
  %103 = getelementptr inbounds i8, i8* %97, i64 16
  %104 = bitcast i8* %103 to %struct.lua_TValue*
  %105 = load %struct.lua_TValue*, %struct.lua_TValue** %77, align 8, !tbaa !1
  %106 = getelementptr inbounds %struct.Proto, %struct.Proto* %73, i64 0, i32 20
  %107 = load i8, i8* %106, align 1, !tbaa !136
  %108 = zext i8 %107 to i64
  %109 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %104, i64 %108
  %110 = icmp ugt %struct.lua_TValue* %105, %109
  br i1 %110, label %111, label %237

; <label>:111                                     ; preds = %102
  store %struct.lua_TValue* %109, %struct.lua_TValue** %77, align 8, !tbaa !1
  br label %237

; <label>:112                                     ; preds = %luaD_growstack.exit
  %113 = load i64, i64* %78, align 8, !tbaa !1
  %114 = ptrtoint i8* %97 to i64
  %115 = sub i64 %113, %114
  %116 = lshr exact i64 %115, 4
  %117 = trunc i64 %116 to i32
  %118 = add nsw i32 %117, -1
  %119 = getelementptr inbounds %struct.Proto, %struct.Proto* %73, i64 0, i32 20
  %120 = load i8, i8* %119, align 1, !tbaa !136
  %121 = zext i8 %120 to i32
  %122 = icmp sgt i32 %121, %118
  %123 = inttoptr i64 %113 to %struct.lua_TValue*
  br i1 %122, label %.lr.ph11.i, label %153

.lr.ph11.i:                                       ; preds = %112
  %124 = add nsw i32 %121, -1
  %.neg = sub i32 1, %117
  %125 = add i32 %124, %.neg
  %126 = zext i32 %125 to i64
  %127 = zext i8 %120 to i32
  %128 = add nuw nsw i32 %127, 1
  %129 = sub i64 %113, %114
  %130 = lshr i64 %129, 4
  %131 = trunc i64 %130 to i32
  %132 = sub i32 %128, %131
  %133 = sub i32 %127, %131
  %xtraiter32 = and i32 %132, 7
  %lcmp.mod33 = icmp eq i32 %xtraiter32, 0
  br i1 %lcmp.mod33, label %.lr.ph11.i.split, label %.preheader

.preheader:                                       ; preds = %.lr.ph11.i
  br label %134

; <label>:134                                     ; preds = %.preheader, %134
  %135 = phi %struct.lua_TValue* [ %136, %134 ], [ %123, %.preheader ]
  %.09.i.prol = phi i32 [ %138, %134 ], [ %118, %.preheader ]
  %prol.iter34 = phi i32 [ %prol.iter34.sub, %134 ], [ %xtraiter32, %.preheader ]
  %136 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %135, i64 1
  %137 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %135, i64 0, i32 1
  store i32 0, i32* %137, align 4, !tbaa !10
  %138 = add nsw i32 %.09.i.prol, 1
  %prol.iter34.sub = add i32 %prol.iter34, -1
  %prol.iter34.cmp = icmp eq i32 %prol.iter34.sub, 0
  br i1 %prol.iter34.cmp, label %.lr.ph11.i.split.loopexit, label %134, !llvm.loop !151

.lr.ph11.i.split.loopexit:                        ; preds = %134
  %.lcssa36 = phi i32 [ %138, %134 ]
  %.lcssa35 = phi %struct.lua_TValue* [ %136, %134 ]
  br label %.lr.ph11.i.split

.lr.ph11.i.split:                                 ; preds = %.lr.ph11.i.split.loopexit, %.lr.ph11.i
  %.unr = phi %struct.lua_TValue* [ %123, %.lr.ph11.i ], [ %.lcssa35, %.lr.ph11.i.split.loopexit ]
  %.09.i.unr = phi i32 [ %118, %.lr.ph11.i ], [ %.lcssa36, %.lr.ph11.i.split.loopexit ]
  %139 = icmp ult i32 %133, 7
  br i1 %139, label %._crit_edge.12.i, label %.lr.ph11.i.split.split

.lr.ph11.i.split.split:                           ; preds = %.lr.ph11.i.split
  br label %140

; <label>:140                                     ; preds = %140, %.lr.ph11.i.split.split
  %141 = phi %struct.lua_TValue* [ %.unr, %.lr.ph11.i.split.split ], [ %149, %140 ]
  %.09.i = phi i32 [ %.09.i.unr, %.lr.ph11.i.split.split ], [ %151, %140 ]
  %142 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %141, i64 0, i32 1
  store i32 0, i32* %142, align 4, !tbaa !10
  %143 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %141, i64 1, i32 1
  store i32 0, i32* %143, align 4, !tbaa !10
  %144 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %141, i64 2, i32 1
  store i32 0, i32* %144, align 4, !tbaa !10
  %145 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %141, i64 3, i32 1
  store i32 0, i32* %145, align 4, !tbaa !10
  %146 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %141, i64 4, i32 1
  store i32 0, i32* %146, align 4, !tbaa !10
  %147 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %141, i64 5, i32 1
  store i32 0, i32* %147, align 4, !tbaa !10
  %148 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %141, i64 6, i32 1
  store i32 0, i32* %148, align 4, !tbaa !10
  %149 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %141, i64 8
  %150 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %141, i64 7, i32 1
  store i32 0, i32* %150, align 4, !tbaa !10
  %151 = add nsw i32 %.09.i, 8
  %exitcond18.i.7 = icmp eq i32 %151, %121
  br i1 %exitcond18.i.7, label %._crit_edge.12.i.unr-lcssa, label %140

._crit_edge.12.i.unr-lcssa:                       ; preds = %140
  br label %._crit_edge.12.i

._crit_edge.12.i:                                 ; preds = %.lr.ph11.i.split, %._crit_edge.12.i.unr-lcssa
  %152 = add nuw nsw i64 %126, 1
  %scevgep.i = getelementptr %struct.lua_TValue, %struct.lua_TValue* %123, i64 %152
  store %struct.lua_TValue* %scevgep.i, %struct.lua_TValue** %77, align 8, !tbaa !1
  br label %153

; <label>:153                                     ; preds = %._crit_edge.12.i, %112
  %154 = phi %struct.lua_TValue* [ %scevgep.i, %._crit_edge.12.i ], [ %123, %112 ]
  %.0.lcssa.i = phi i32 [ %121, %._crit_edge.12.i ], [ %118, %112 ]
  %155 = and i8 %100, 4
  %156 = icmp eq i8 %155, 0
  br i1 %156, label %189, label %157

; <label>:157                                     ; preds = %153
  %158 = sub i32 %.0.lcssa.i, %121
  %159 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 6
  %160 = load %struct.global_State*, %struct.global_State** %159, align 8, !tbaa !17
  %161 = getelementptr inbounds %struct.global_State, %struct.global_State* %160, i64 0, i32 14
  %162 = load i64, i64* %161, align 8, !tbaa !23
  %163 = getelementptr inbounds %struct.global_State, %struct.global_State* %160, i64 0, i32 13
  %164 = load i64, i64* %163, align 8, !tbaa !24
  %165 = icmp ult i64 %162, %164
  br i1 %165, label %167, label %166

; <label>:166                                     ; preds = %157
  tail call void @luaC_step(%struct.lua_State* %L) #1
  br label %167

; <label>:167                                     ; preds = %166, %157
  %168 = tail call %struct.Table* @luaH_new(%struct.lua_State* %L, i32 %158, i32 1) #1
  %169 = icmp sgt i32 %158, 0
  br i1 %169, label %.lr.ph7.i, label %._crit_edge.8.i

.lr.ph7.i:                                        ; preds = %167
  %170 = sext i32 %158 to i64
  %171 = sub nsw i64 0, %170
  br label %172

; <label>:172                                     ; preds = %172, %.lr.ph7.i
  %indvars.iv14.i = phi i64 [ 0, %.lr.ph7.i ], [ %indvars.iv.next15.i, %172 ]
  %173 = load %struct.lua_TValue*, %struct.lua_TValue** %77, align 8, !tbaa !1
  %174 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %173, i64 %171
  %175 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %174, i64 %indvars.iv14.i
  %indvars.iv.next15.i = add nuw nsw i64 %indvars.iv14.i, 1
  %176 = trunc i64 %indvars.iv.next15.i to i32
  %177 = tail call %struct.lua_TValue* @luaH_setnum(%struct.lua_State* %L, %struct.Table* %168, i32 %176) #1
  %178 = bitcast %struct.lua_TValue* %175 to i64*
  %179 = bitcast %struct.lua_TValue* %177 to i64*
  %180 = load i64, i64* %178, align 8
  store i64 %180, i64* %179, align 8
  %181 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %175, i64 0, i32 1
  %182 = load i32, i32* %181, align 4, !tbaa !10
  %183 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %177, i64 0, i32 1
  store i32 %182, i32* %183, align 4, !tbaa !10
  %exitcond20 = icmp eq i32 %176, %158
  br i1 %exitcond20, label %._crit_edge.8.i.loopexit, label %172

._crit_edge.8.i.loopexit:                         ; preds = %172
  br label %._crit_edge.8.i

._crit_edge.8.i:                                  ; preds = %._crit_edge.8.i.loopexit, %167
  %184 = tail call %union.TString* @luaS_newlstr(%struct.lua_State* %L, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6.189, i64 0, i64 0), i64 1) #1
  %185 = tail call %struct.lua_TValue* @luaH_setstr(%struct.lua_State* %L, %struct.Table* %168, %union.TString* %184) #1
  %186 = sitofp i32 %158 to double
  %187 = bitcast %struct.lua_TValue* %185 to double*
  store double %186, double* %187, align 8, !tbaa !36
  %188 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %185, i64 0, i32 1
  store i32 3, i32* %188, align 4, !tbaa !10
  %.pre22 = load %struct.lua_TValue*, %struct.lua_TValue** %77, align 8, !tbaa !1
  br label %189

; <label>:189                                     ; preds = %._crit_edge.8.i, %153
  %190 = phi %struct.lua_TValue* [ %.pre22, %._crit_edge.8.i ], [ %154, %153 ]
  %htab.0.i = phi %struct.Table* [ %168, %._crit_edge.8.i ], [ null, %153 ]
  %191 = sext i32 %.0.lcssa.i to i64
  %192 = sub nsw i64 0, %191
  %193 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %190, i64 %192
  %194 = icmp eq i8 %120, 0
  br i1 %194, label %._crit_edge.i.6, label %.lr.ph.i.4.preheader

.lr.ph.i.4.preheader:                             ; preds = %189
  %195 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %190, i64 1
  store %struct.lua_TValue* %195, %struct.lua_TValue** %77, align 8, !tbaa !1
  %196 = bitcast %struct.lua_TValue* %193 to i64*
  %197 = bitcast %struct.lua_TValue* %190 to i64*
  %198 = load i64, i64* %196, align 8
  store i64 %198, i64* %197, align 8
  %199 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %190, i64 %192, i32 1
  %200 = load i32, i32* %199, align 4, !tbaa !10
  %201 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %190, i64 0, i32 1
  store i32 %200, i32* %201, align 4, !tbaa !10
  store i32 0, i32* %199, align 4, !tbaa !10
  %exitcond.i.17 = icmp eq i8 %120, 1
  br i1 %exitcond.i.17, label %._crit_edge.i.6, label %._crit_edge.19.i.preheader

._crit_edge.19.i.preheader:                       ; preds = %.lr.ph.i.4.preheader
  %202 = and i8 %120, 1
  %lcmp.mod31 = icmp eq i8 %202, 0
  br i1 %lcmp.mod31, label %._crit_edge.19.i.prol, label %._crit_edge.19.i.preheader.split

._crit_edge.19.i.prol:                            ; preds = %._crit_edge.19.i.preheader
  %.pre.i.5.prol = load %struct.lua_TValue*, %struct.lua_TValue** %77, align 8, !tbaa !1
  %203 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %193, i64 1
  %204 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %.pre.i.5.prol, i64 1
  store %struct.lua_TValue* %204, %struct.lua_TValue** %77, align 8, !tbaa !1
  %205 = bitcast %struct.lua_TValue* %203 to i64*
  %206 = bitcast %struct.lua_TValue* %.pre.i.5.prol to i64*
  %207 = load i64, i64* %205, align 8
  store i64 %207, i64* %206, align 8
  %208 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %203, i64 0, i32 1
  %209 = load i32, i32* %208, align 4, !tbaa !10
  %210 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %.pre.i.5.prol, i64 0, i32 1
  store i32 %209, i32* %210, align 4, !tbaa !10
  store i32 0, i32* %208, align 4, !tbaa !10
  br label %._crit_edge.19.i.preheader.split

._crit_edge.19.i.preheader.split:                 ; preds = %._crit_edge.19.i.prol, %._crit_edge.19.i.preheader
  %indvars.iv.next.i18.unr = phi i64 [ 1, %._crit_edge.19.i.preheader ], [ 2, %._crit_edge.19.i.prol ]
  %211 = icmp eq i8 %120, 2
  br i1 %211, label %._crit_edge.i.6.loopexit, label %._crit_edge.19.i.preheader.split.split

._crit_edge.19.i.preheader.split.split:           ; preds = %._crit_edge.19.i.preheader.split
  br label %._crit_edge.19.i

._crit_edge.19.i:                                 ; preds = %._crit_edge.19.i, %._crit_edge.19.i.preheader.split.split
  %indvars.iv.next.i18 = phi i64 [ %indvars.iv.next.i18.unr, %._crit_edge.19.i.preheader.split.split ], [ %indvars.iv.next.i.1, %._crit_edge.19.i ]
  %.pre.i.5 = load %struct.lua_TValue*, %struct.lua_TValue** %77, align 8, !tbaa !1
  %212 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %193, i64 %indvars.iv.next.i18
  %213 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %.pre.i.5, i64 1
  store %struct.lua_TValue* %213, %struct.lua_TValue** %77, align 8, !tbaa !1
  %214 = bitcast %struct.lua_TValue* %212 to i64*
  %215 = bitcast %struct.lua_TValue* %.pre.i.5 to i64*
  %216 = load i64, i64* %214, align 8
  store i64 %216, i64* %215, align 8
  %217 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %212, i64 0, i32 1
  %218 = load i32, i32* %217, align 4, !tbaa !10
  %219 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %.pre.i.5, i64 0, i32 1
  store i32 %218, i32* %219, align 4, !tbaa !10
  store i32 0, i32* %217, align 4, !tbaa !10
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.next.i18, 1
  %.pre.i.5.1 = load %struct.lua_TValue*, %struct.lua_TValue** %77, align 8, !tbaa !1
  %220 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %193, i64 %indvars.iv.next.i
  %221 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %.pre.i.5.1, i64 1
  store %struct.lua_TValue* %221, %struct.lua_TValue** %77, align 8, !tbaa !1
  %222 = bitcast %struct.lua_TValue* %220 to i64*
  %223 = bitcast %struct.lua_TValue* %.pre.i.5.1 to i64*
  %224 = load i64, i64* %222, align 8
  store i64 %224, i64* %223, align 8
  %225 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %220, i64 0, i32 1
  %226 = load i32, i32* %225, align 4, !tbaa !10
  %227 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %.pre.i.5.1, i64 0, i32 1
  store i32 %226, i32* %227, align 4, !tbaa !10
  store i32 0, i32* %225, align 4, !tbaa !10
  %indvars.iv.next.i.1 = add nsw i64 %indvars.iv.next.i18, 2
  %lftr.wideiv.1 = trunc i64 %indvars.iv.next.i.1 to i32
  %exitcond.1 = icmp eq i32 %lftr.wideiv.1, %121
  br i1 %exitcond.1, label %._crit_edge.i.6.loopexit.unr-lcssa, label %._crit_edge.19.i

._crit_edge.i.6.loopexit.unr-lcssa:               ; preds = %._crit_edge.19.i
  br label %._crit_edge.i.6.loopexit

._crit_edge.i.6.loopexit:                         ; preds = %._crit_edge.19.i.preheader.split, %._crit_edge.i.6.loopexit.unr-lcssa
  br label %._crit_edge.i.6

._crit_edge.i.6:                                  ; preds = %._crit_edge.i.6.loopexit, %.lr.ph.i.4.preheader, %189
  %228 = icmp eq %struct.Table* %htab.0.i, null
  br i1 %228, label %adjust_varargs.exit, label %229

; <label>:229                                     ; preds = %._crit_edge.i.6
  %230 = load %struct.lua_TValue*, %struct.lua_TValue** %77, align 8, !tbaa !1
  %231 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %230, i64 1
  store %struct.lua_TValue* %231, %struct.lua_TValue** %77, align 8, !tbaa !1
  %232 = bitcast %struct.lua_TValue* %230 to %struct.Table**
  store %struct.Table* %htab.0.i, %struct.Table** %232, align 8, !tbaa !25
  %233 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %230, i64 0, i32 1
  store i32 5, i32* %233, align 4, !tbaa !10
  br label %adjust_varargs.exit

adjust_varargs.exit:                              ; preds = %._crit_edge.i.6, %229
  %234 = load i8*, i8** %95, align 8, !tbaa !50
  %235 = getelementptr inbounds i8, i8* %234, i64 %58
  %236 = bitcast i8* %235 to %struct.lua_TValue*
  br label %237

; <label>:237                                     ; preds = %102, %111, %adjust_varargs.exit
  %base.0 = phi %struct.lua_TValue* [ %190, %adjust_varargs.exit ], [ %104, %111 ], [ %104, %102 ]
  %.13 = phi %struct.lua_TValue* [ %236, %adjust_varargs.exit ], [ %98, %111 ], [ %98, %102 ]
  %238 = load %struct.CallInfo*, %struct.CallInfo** %64, align 8, !tbaa !13
  %239 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 11
  %240 = load %struct.CallInfo*, %struct.CallInfo** %239, align 8, !tbaa !147
  %241 = icmp eq %struct.CallInfo* %238, %240
  br i1 %241, label %242, label %growCI.exit

; <label>:242                                     ; preds = %237
  %243 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 14
  %244 = load i32, i32* %243, align 4, !tbaa !146
  %245 = icmp sgt i32 %244, 20000
  br i1 %245, label %246, label %247

; <label>:246                                     ; preds = %242
  tail call void @luaD_throw(%struct.lua_State* %L, i32 5) #1
  unreachable

; <label>:247                                     ; preds = %242
  %248 = shl nsw i32 %244, 1
  %249 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 12
  %250 = load %struct.CallInfo*, %struct.CallInfo** %249, align 8, !tbaa !32
  %251 = icmp sgt i32 %248, -2
  br i1 %251, label %252, label %259

; <label>:252                                     ; preds = %247
  %253 = bitcast %struct.CallInfo* %250 to i8*
  %254 = sext i32 %244 to i64
  %255 = mul nsw i64 %254, 40
  %256 = sext i32 %248 to i64
  %257 = mul nsw i64 %256, 40
  %258 = tail call i8* @luaM_realloc_(%struct.lua_State* %L, i8* %253, i64 %255, i64 %257) #1
  br label %luaD_reallocCI.exit

; <label>:259                                     ; preds = %247
  %260 = tail call i8* @luaM_toobig(%struct.lua_State* %L) #1
  %.pre1.i = sext i32 %248 to i64
  br label %luaD_reallocCI.exit

luaD_reallocCI.exit:                              ; preds = %252, %259
  %.pre-phi2.i = phi i64 [ %.pre1.i, %259 ], [ %256, %252 ]
  %261 = phi i8* [ %260, %259 ], [ %258, %252 ]
  %262 = bitcast %struct.CallInfo** %249 to i8**
  store i8* %261, i8** %262, align 8, !tbaa !32
  store i32 %248, i32* %243, align 4, !tbaa !146
  %263 = bitcast %struct.CallInfo** %64 to i64*
  %264 = load i64, i64* %263, align 8, !tbaa !13
  %265 = ptrtoint %struct.CallInfo* %250 to i64
  %266 = sub i64 %264, %265
  %267 = sdiv exact i64 %266, 40
  %268 = bitcast i8* %261 to %struct.CallInfo*
  %269 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %268, i64 %267
  store %struct.CallInfo* %269, %struct.CallInfo** %64, align 8, !tbaa !13
  %270 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %268, i64 %.pre-phi2.i
  %271 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %270, i64 -1
  store %struct.CallInfo* %271, %struct.CallInfo** %239, align 8, !tbaa !147
  %272 = icmp sgt i32 %248, 20000
  br i1 %272, label %273, label %growCI.exit

; <label>:273                                     ; preds = %luaD_reallocCI.exit
  tail call void (%struct.lua_State*, i8*, ...) @luaG_runerror(%struct.lua_State* %L, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.7.190, i64 0, i64 0)) #1
  %.pre23 = load %struct.CallInfo*, %struct.CallInfo** %64, align 8, !tbaa !13
  br label %growCI.exit

growCI.exit:                                      ; preds = %273, %luaD_reallocCI.exit, %237
  %.pn = phi %struct.CallInfo* [ %238, %237 ], [ %269, %luaD_reallocCI.exit ], [ %.pre23, %273 ]
  %storemerge.15 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %.pn, i64 1
  store %struct.CallInfo* %storemerge.15, %struct.CallInfo** %64, align 8, !tbaa !13
  %274 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %.pn, i64 1, i32 1
  store %struct.lua_TValue* %.13, %struct.lua_TValue** %274, align 8, !tbaa !28
  %275 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %.pn, i64 1, i32 0
  store %struct.lua_TValue* %base.0, %struct.lua_TValue** %275, align 8, !tbaa !132
  %276 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 5
  store %struct.lua_TValue* %base.0, %struct.lua_TValue** %276, align 8, !tbaa !11
  %277 = load i8, i8* %81, align 1, !tbaa !100
  %278 = zext i8 %277 to i64
  %279 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %base.0, i64 %278
  %280 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %.pn, i64 1, i32 2
  store %struct.lua_TValue* %279, %struct.lua_TValue** %280, align 8, !tbaa !14
  %281 = getelementptr inbounds %struct.Proto, %struct.Proto* %73, i64 0, i32 4
  %282 = bitcast i32** %281 to i64*
  %283 = load i64, i64* %282, align 8, !tbaa !93
  store i64 %283, i64* %62, align 8, !tbaa !131
  %284 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %.pn, i64 1, i32 5
  store i32 0, i32* %284, align 4, !tbaa !128
  %285 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %.pn, i64 1, i32 4
  store i32 %nresults, i32* %285, align 4, !tbaa !152
  %286 = load %struct.lua_TValue*, %struct.lua_TValue** %77, align 8, !tbaa !1
  %287 = icmp ult %struct.lua_TValue* %286, %279
  %288 = inttoptr i64 %283 to i32*
  br i1 %287, label %.lr.ph.preheader, label %._crit_edge

.lr.ph.preheader:                                 ; preds = %growCI.exit
  %289 = ptrtoint %struct.lua_TValue* %286 to i64
  %290 = zext i8 %277 to i64
  %scevgep = getelementptr %struct.lua_TValue, %struct.lua_TValue* %base.0, i64 %290, i32 0, i32 0
  %scevgep28 = bitcast %union.GCObject** %scevgep to i8*
  %291 = xor i64 %289, -1
  %uglygep = getelementptr i8, i8* %scevgep28, i64 %291
  %uglygep29 = ptrtoint i8* %uglygep to i64
  %292 = lshr i64 %uglygep29, 4
  %293 = add nuw nsw i64 %292, 1
  %xtraiter = and i64 %293, 7
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod, label %.lr.ph.preheader.split, label %.lr.ph.prol.preheader

.lr.ph.prol.preheader:                            ; preds = %.lr.ph.preheader
  br label %.lr.ph.prol

.lr.ph.prol:                                      ; preds = %.lr.ph.prol.preheader, %.lr.ph.prol
  %st.016.prol = phi %struct.lua_TValue* [ %295, %.lr.ph.prol ], [ %286, %.lr.ph.prol.preheader ]
  %prol.iter = phi i64 [ %prol.iter.sub, %.lr.ph.prol ], [ %xtraiter, %.lr.ph.prol.preheader ]
  %294 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %st.016.prol, i64 0, i32 1
  store i32 0, i32* %294, align 4, !tbaa !10
  %295 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %st.016.prol, i64 1
  %prol.iter.sub = add i64 %prol.iter, -1
  %prol.iter.cmp = icmp eq i64 %prol.iter.sub, 0
  br i1 %prol.iter.cmp, label %.lr.ph.preheader.split.loopexit, label %.lr.ph.prol, !llvm.loop !153

.lr.ph.preheader.split.loopexit:                  ; preds = %.lr.ph.prol
  %.lcssa = phi %struct.lua_TValue* [ %295, %.lr.ph.prol ]
  br label %.lr.ph.preheader.split

.lr.ph.preheader.split:                           ; preds = %.lr.ph.preheader.split.loopexit, %.lr.ph.preheader
  %st.016.unr = phi %struct.lua_TValue* [ %286, %.lr.ph.preheader ], [ %.lcssa, %.lr.ph.preheader.split.loopexit ]
  %296 = icmp ult i8* %uglygep, inttoptr (i64 112 to i8*)
  br i1 %296, label %._crit_edge.loopexit, label %.lr.ph.preheader.split.split

.lr.ph.preheader.split.split:                     ; preds = %.lr.ph.preheader.split
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph, %.lr.ph.preheader.split.split
  %st.016 = phi %struct.lua_TValue* [ %st.016.unr, %.lr.ph.preheader.split.split ], [ %305, %.lr.ph ]
  %297 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %st.016, i64 0, i32 1
  store i32 0, i32* %297, align 4, !tbaa !10
  %298 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %st.016, i64 1, i32 1
  store i32 0, i32* %298, align 4, !tbaa !10
  %299 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %st.016, i64 2, i32 1
  store i32 0, i32* %299, align 4, !tbaa !10
  %300 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %st.016, i64 3, i32 1
  store i32 0, i32* %300, align 4, !tbaa !10
  %301 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %st.016, i64 4, i32 1
  store i32 0, i32* %301, align 4, !tbaa !10
  %302 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %st.016, i64 5, i32 1
  store i32 0, i32* %302, align 4, !tbaa !10
  %303 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %st.016, i64 6, i32 1
  store i32 0, i32* %303, align 4, !tbaa !10
  %304 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %st.016, i64 7, i32 1
  store i32 0, i32* %304, align 4, !tbaa !10
  %305 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %st.016, i64 8
  %306 = icmp ult %struct.lua_TValue* %305, %279
  br i1 %306, label %.lr.ph, label %._crit_edge.loopexit.unr-lcssa

._crit_edge.loopexit.unr-lcssa:                   ; preds = %.lr.ph
  br label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %.lr.ph.preheader.split, %._crit_edge.loopexit.unr-lcssa
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %growCI.exit
  store %struct.lua_TValue* %279, %struct.lua_TValue** %77, align 8, !tbaa !1
  %307 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 17
  %308 = load i8, i8* %307, align 1, !tbaa !127
  %309 = and i8 %308, 1
  %310 = icmp eq i8 %309, 0
  br i1 %310, label %404, label %311

; <label>:311                                     ; preds = %._crit_edge
  %312 = getelementptr inbounds i32, i32* %288, i64 1
  store i32* %312, i32** %61, align 8, !tbaa !131
  tail call void @luaD_callhook(%struct.lua_State* %L, i32 0, i32 -1)
  %313 = load i32*, i32** %61, align 8, !tbaa !131
  %314 = getelementptr inbounds i32, i32* %313, i64 -1
  store i32* %314, i32** %61, align 8, !tbaa !131
  br label %404

; <label>:315                                     ; preds = %55
  %316 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 9
  %317 = bitcast %struct.lua_TValue** %316 to i64*
  %318 = load i64, i64* %317, align 8, !tbaa !12
  %319 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %320 = bitcast %struct.lua_TValue** %319 to i64*
  %321 = load i64, i64* %320, align 8, !tbaa !1
  %322 = sub i64 %318, %321
  %323 = icmp slt i64 %322, 321
  br i1 %323, label %324, label %luaD_growstack.exit7

; <label>:324                                     ; preds = %315
  %325 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 13
  %326 = load i32, i32* %325, align 4, !tbaa !149
  %327 = icmp slt i32 %326, 20
  br i1 %327, label %330, label %328

; <label>:328                                     ; preds = %324
  %329 = shl nsw i32 %326, 1
  tail call void @luaD_reallocstack(%struct.lua_State* %L, i32 %329) #1
  br label %luaD_growstack.exit7

; <label>:330                                     ; preds = %324
  %331 = add nsw i32 %326, 20
  tail call void @luaD_reallocstack(%struct.lua_State* %L, i32 %331) #1
  br label %luaD_growstack.exit7

luaD_growstack.exit7:                             ; preds = %330, %328, %315
  %332 = load %struct.CallInfo*, %struct.CallInfo** %64, align 8, !tbaa !13
  %333 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 11
  %334 = load %struct.CallInfo*, %struct.CallInfo** %333, align 8, !tbaa !147
  %335 = icmp eq %struct.CallInfo* %332, %334
  br i1 %335, label %336, label %growCI.exit8

; <label>:336                                     ; preds = %luaD_growstack.exit7
  %337 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 14
  %338 = load i32, i32* %337, align 4, !tbaa !146
  %339 = icmp sgt i32 %338, 20000
  br i1 %339, label %340, label %341

; <label>:340                                     ; preds = %336
  tail call void @luaD_throw(%struct.lua_State* %L, i32 5) #1
  unreachable

; <label>:341                                     ; preds = %336
  %342 = shl nsw i32 %338, 1
  %343 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 12
  %344 = load %struct.CallInfo*, %struct.CallInfo** %343, align 8, !tbaa !32
  %345 = icmp sgt i32 %342, -2
  br i1 %345, label %346, label %353

; <label>:346                                     ; preds = %341
  %347 = bitcast %struct.CallInfo* %344 to i8*
  %348 = sext i32 %338 to i64
  %349 = mul nsw i64 %348, 40
  %350 = sext i32 %342 to i64
  %351 = mul nsw i64 %350, 40
  %352 = tail call i8* @luaM_realloc_(%struct.lua_State* %L, i8* %347, i64 %349, i64 %351) #1
  br label %luaD_reallocCI.exit14

; <label>:353                                     ; preds = %341
  %354 = tail call i8* @luaM_toobig(%struct.lua_State* %L) #1
  %.pre1.i.11 = sext i32 %342 to i64
  br label %luaD_reallocCI.exit14

luaD_reallocCI.exit14:                            ; preds = %346, %353
  %.pre-phi2.i.12 = phi i64 [ %.pre1.i.11, %353 ], [ %350, %346 ]
  %355 = phi i8* [ %354, %353 ], [ %352, %346 ]
  %356 = bitcast %struct.CallInfo** %343 to i8**
  store i8* %355, i8** %356, align 8, !tbaa !32
  store i32 %342, i32* %337, align 4, !tbaa !146
  %357 = bitcast %struct.CallInfo** %64 to i64*
  %358 = load i64, i64* %357, align 8, !tbaa !13
  %359 = ptrtoint %struct.CallInfo* %344 to i64
  %360 = sub i64 %358, %359
  %361 = sdiv exact i64 %360, 40
  %362 = bitcast i8* %355 to %struct.CallInfo*
  %363 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %362, i64 %361
  store %struct.CallInfo* %363, %struct.CallInfo** %64, align 8, !tbaa !13
  %364 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %362, i64 %.pre-phi2.i.12
  %365 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %364, i64 -1
  store %struct.CallInfo* %365, %struct.CallInfo** %333, align 8, !tbaa !147
  %366 = icmp sgt i32 %342, 20000
  br i1 %366, label %367, label %growCI.exit8

; <label>:367                                     ; preds = %luaD_reallocCI.exit14
  tail call void (%struct.lua_State*, i8*, ...) @luaG_runerror(%struct.lua_State* %L, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.7.190, i64 0, i64 0)) #1
  %.pre = load %struct.CallInfo*, %struct.CallInfo** %64, align 8, !tbaa !13
  br label %growCI.exit8

growCI.exit8:                                     ; preds = %367, %luaD_reallocCI.exit14, %luaD_growstack.exit7
  %368 = phi %struct.CallInfo* [ %332, %luaD_growstack.exit7 ], [ %363, %luaD_reallocCI.exit14 ], [ %.pre, %367 ]
  %369 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %368, i64 1
  store %struct.CallInfo* %369, %struct.CallInfo** %64, align 8, !tbaa !13
  %370 = bitcast %struct.lua_TValue** %.pre-phi to i8**
  %371 = load i8*, i8** %370, align 8, !tbaa !50
  %372 = getelementptr inbounds i8, i8* %371, i64 %58
  %373 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %368, i64 1, i32 1
  %374 = bitcast %struct.lua_TValue** %373 to i8**
  store i8* %372, i8** %374, align 8, !tbaa !28
  %375 = getelementptr inbounds i8, i8* %372, i64 16
  %376 = bitcast %struct.CallInfo* %369 to i8**
  store i8* %375, i8** %376, align 8, !tbaa !132
  %377 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 5
  %378 = bitcast %struct.lua_TValue** %377 to i8**
  store i8* %375, i8** %378, align 8, !tbaa !11
  %379 = load %struct.lua_TValue*, %struct.lua_TValue** %319, align 8, !tbaa !1
  %380 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %379, i64 20
  %381 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %368, i64 1, i32 2
  store %struct.lua_TValue* %380, %struct.lua_TValue** %381, align 8, !tbaa !14
  %382 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %368, i64 1, i32 4
  store i32 %nresults, i32* %382, align 4, !tbaa !152
  %383 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 17
  %384 = load i8, i8* %383, align 1, !tbaa !127
  %385 = and i8 %384, 1
  %386 = icmp eq i8 %385, 0
  br i1 %386, label %388, label %387

; <label>:387                                     ; preds = %growCI.exit8
  tail call void @luaD_callhook(%struct.lua_State* %L, i32 0, i32 -1)
  %.pre21 = load %struct.CallInfo*, %struct.CallInfo** %64, align 8, !tbaa !13
  br label %388

; <label>:388                                     ; preds = %growCI.exit8, %387
  %389 = phi %struct.CallInfo* [ %369, %growCI.exit8 ], [ %.pre21, %387 ]
  %390 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %389, i64 0, i32 1
  %391 = bitcast %struct.lua_TValue** %390 to %struct.CClosure***
  %392 = load %struct.CClosure**, %struct.CClosure*** %391, align 8, !tbaa !28
  %393 = load %struct.CClosure*, %struct.CClosure** %392, align 8, !tbaa !25
  %394 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %393, i64 0, i32 7
  %395 = load i32 (%struct.lua_State*)*, i32 (%struct.lua_State*)** %394, align 8, !tbaa !44
  %396 = tail call i32 %395(%struct.lua_State* %L) #1
  %397 = icmp slt i32 %396, 0
  br i1 %397, label %404, label %398

; <label>:398                                     ; preds = %388
  %399 = load %struct.lua_TValue*, %struct.lua_TValue** %319, align 8, !tbaa !1
  %400 = sext i32 %396 to i64
  %401 = sub nsw i64 0, %400
  %402 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %399, i64 %401
  %403 = tail call i32 @luaD_poscall(%struct.lua_State* %L, %struct.lua_TValue* %402)
  br label %404

; <label>:404                                     ; preds = %398, %388, %311, %._crit_edge
  %.1 = phi i32 [ 0, %._crit_edge ], [ 0, %311 ], [ 1, %398 ], [ 2, %388 ]
  ret i32 %.1
}

; Function Attrs: nounwind uwtable
define hidden i32 @luaD_poscall(%struct.lua_State* %L, %struct.lua_TValue* %firstResult) #0 {
  %ar.i.i = alloca %struct.lua_Debug, align 8
  %1 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 17
  %2 = load i8, i8* %1, align 1, !tbaa !127
  %3 = and i8 %2, 2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %._crit_edge, label %5

._crit_edge:                                      ; preds = %0
  %.phi.trans.insert = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 7
  %.pre = load %struct.CallInfo*, %struct.CallInfo** %.phi.trans.insert, align 8, !tbaa !13
  br label %86

; <label>:5                                       ; preds = %0
  %6 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 10
  %7 = bitcast %struct.lua_TValue** %6 to i64*
  %8 = load i64, i64* %7, align 8, !tbaa !50
  %9 = ptrtoint %struct.lua_TValue* %firstResult to i64
  %10 = sub i64 %9, %8
  tail call void @luaD_callhook(%struct.lua_State* %L, i32 1, i32 -1) #1
  %11 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 7
  %12 = load %struct.CallInfo*, %struct.CallInfo** %11, align 8, !tbaa !13
  %13 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %12, i64 0, i32 1
  %14 = bitcast %struct.lua_TValue** %13 to %struct.CClosure***
  %15 = load %struct.CClosure**, %struct.CClosure*** %14, align 8, !tbaa !28
  %16 = load %struct.CClosure*, %struct.CClosure** %15, align 8, !tbaa !25
  %17 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %16, i64 0, i32 3
  %18 = load i8, i8* %17, align 1, !tbaa !35
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %luaD_callhook.exit.preheader.i, label %callrethooks.exit

luaD_callhook.exit.preheader.i:                   ; preds = %5
  %20 = load i8, i8* %1, align 1, !tbaa !127
  %21 = and i8 %20, 2
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %callrethooks.exit, label %.lr.ph.i

.lr.ph.i:                                         ; preds = %luaD_callhook.exit.preheader.i
  %23 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 21
  %24 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 18
  %25 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %26 = bitcast %struct.lua_TValue** %25 to i64*
  %27 = bitcast %struct.lua_Debug* %ar.i.i to i8*
  %28 = getelementptr inbounds %struct.lua_Debug, %struct.lua_Debug* %ar.i.i, i64 0, i32 0
  %29 = getelementptr inbounds %struct.lua_Debug, %struct.lua_Debug* %ar.i.i, i64 0, i32 5
  %30 = getelementptr inbounds %struct.lua_Debug, %struct.lua_Debug* %ar.i.i, i64 0, i32 10
  %31 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 9
  %32 = bitcast %struct.lua_TValue** %31 to i64*
  %33 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 13
  %34 = bitcast %struct.lua_TValue** %6 to i8**
  %35 = bitcast %struct.lua_TValue** %25 to i8**
  br label %36

; <label>:36                                      ; preds = %luaD_callhook.exit.backedge.i, %.lr.ph.i
  %37 = phi i8 [ %20, %.lr.ph.i ], [ %46, %luaD_callhook.exit.backedge.i ]
  %38 = phi %struct.CallInfo* [ %12, %.lr.ph.i ], [ %47, %luaD_callhook.exit.backedge.i ]
  %39 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %38, i64 0, i32 5
  %40 = load i32, i32* %39, align 4, !tbaa !128
  %41 = add nsw i32 %40, -1
  store i32 %41, i32* %39, align 4, !tbaa !128
  %42 = icmp eq i32 %40, 0
  br i1 %42, label %callrethooks.exit.loopexit, label %43

; <label>:43                                      ; preds = %36
  %44 = load void (%struct.lua_State*, %struct.lua_Debug*)*, void (%struct.lua_State*, %struct.lua_Debug*)** %23, align 8, !tbaa !124
  %45 = icmp eq void (%struct.lua_State*, %struct.lua_Debug*)* %44, null
  br i1 %45, label %luaD_callhook.exit.backedge.i, label %50

luaD_callhook.exit.backedge.i:                    ; preds = %luaD_growstack.exit.i.i, %50, %43
  %46 = phi i8 [ %37, %43 ], [ %37, %50 ], [ %.pre.i, %luaD_growstack.exit.i.i ]
  %47 = phi %struct.CallInfo* [ %38, %43 ], [ %38, %50 ], [ %77, %luaD_growstack.exit.i.i ]
  %48 = and i8 %46, 2
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %callrethooks.exit.loopexit, label %36

; <label>:50                                      ; preds = %43
  %51 = load i8, i8* %24, align 1, !tbaa !145
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %luaD_callhook.exit.backedge.i, label %53

; <label>:53                                      ; preds = %50
  %54 = load i64, i64* %26, align 8, !tbaa !1
  %55 = load i64, i64* %7, align 8, !tbaa !50
  %56 = sub i64 %54, %55
  %57 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %38, i64 0, i32 2
  %58 = bitcast %struct.lua_TValue** %57 to i64*
  %59 = load i64, i64* %58, align 8, !tbaa !14
  %60 = sub i64 %59, %55
  call void @llvm.lifetime.start(i64 120, i8* %27) #1
  store i32 4, i32* %28, align 8, !tbaa !123
  store i32 -1, i32* %29, align 8, !tbaa !72
  store i32 0, i32* %30, align 4
  %61 = load i64, i64* %32, align 8, !tbaa !12
  %62 = sub i64 %61, %54
  %63 = icmp slt i64 %62, 321
  br i1 %63, label %64, label %luaD_growstack.exit.i.i

; <label>:64                                      ; preds = %53
  %65 = load i32, i32* %33, align 4, !tbaa !149
  %66 = icmp slt i32 %65, 20
  br i1 %66, label %69, label %67

; <label>:67                                      ; preds = %64
  %68 = shl nsw i32 %65, 1
  call void @luaD_reallocstack(%struct.lua_State* %L, i32 %68) #1
  br label %luaD_growstack.exit.i.i

; <label>:69                                      ; preds = %64
  %70 = add nsw i32 %65, 20
  call void @luaD_reallocstack(%struct.lua_State* %L, i32 %70) #1
  br label %luaD_growstack.exit.i.i

luaD_growstack.exit.i.i:                          ; preds = %69, %67, %53
  %71 = load %struct.lua_TValue*, %struct.lua_TValue** %25, align 8, !tbaa !1
  %72 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %71, i64 20
  %73 = load %struct.CallInfo*, %struct.CallInfo** %11, align 8, !tbaa !13
  %74 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %73, i64 0, i32 2
  store %struct.lua_TValue* %72, %struct.lua_TValue** %74, align 8, !tbaa !14
  store i8 0, i8* %24, align 1, !tbaa !145
  call void %44(%struct.lua_State* %L, %struct.lua_Debug* nonnull %ar.i.i) #1
  store i8 1, i8* %24, align 1, !tbaa !145
  %75 = load i8*, i8** %34, align 8, !tbaa !50
  %76 = getelementptr inbounds i8, i8* %75, i64 %60
  %77 = load %struct.CallInfo*, %struct.CallInfo** %11, align 8, !tbaa !13
  %78 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %77, i64 0, i32 2
  %79 = bitcast %struct.lua_TValue** %78 to i8**
  store i8* %76, i8** %79, align 8, !tbaa !14
  %80 = getelementptr inbounds i8, i8* %75, i64 %56
  store i8* %80, i8** %35, align 8, !tbaa !1
  call void @llvm.lifetime.end(i64 120, i8* %27) #1
  %.pre.i = load i8, i8* %1, align 1, !tbaa !127
  br label %luaD_callhook.exit.backedge.i

callrethooks.exit.loopexit:                       ; preds = %luaD_callhook.exit.backedge.i, %36
  %.ph = phi %struct.CallInfo* [ %38, %36 ], [ %47, %luaD_callhook.exit.backedge.i ]
  br label %callrethooks.exit

callrethooks.exit:                                ; preds = %callrethooks.exit.loopexit, %5, %luaD_callhook.exit.preheader.i
  %81 = phi %struct.CallInfo* [ %12, %5 ], [ %12, %luaD_callhook.exit.preheader.i ], [ %.ph, %callrethooks.exit.loopexit ]
  %82 = bitcast %struct.lua_TValue** %6 to i8**
  %83 = load i8*, i8** %82, align 8, !tbaa !50
  %84 = getelementptr inbounds i8, i8* %83, i64 %10
  %85 = bitcast i8* %84 to %struct.lua_TValue*
  br label %86

; <label>:86                                      ; preds = %._crit_edge, %callrethooks.exit
  %.pre-phi = phi %struct.CallInfo** [ %.phi.trans.insert, %._crit_edge ], [ %11, %callrethooks.exit ]
  %87 = phi %struct.CallInfo* [ %.pre, %._crit_edge ], [ %81, %callrethooks.exit ]
  %.0 = phi %struct.lua_TValue* [ %firstResult, %._crit_edge ], [ %85, %callrethooks.exit ]
  %88 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %87, i64 -1
  store %struct.CallInfo* %88, %struct.CallInfo** %.pre-phi, align 8, !tbaa !13
  %89 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %87, i64 0, i32 1
  %90 = load %struct.lua_TValue*, %struct.lua_TValue** %89, align 8, !tbaa !28
  %91 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %87, i64 0, i32 4
  %92 = load i32, i32* %91, align 4, !tbaa !152
  %93 = bitcast %struct.CallInfo* %88 to i64*
  %94 = load i64, i64* %93, align 8, !tbaa !132
  %95 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 5
  %96 = bitcast %struct.lua_TValue** %95 to i64*
  store i64 %94, i64* %96, align 8, !tbaa !11
  %97 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %87, i64 -1, i32 3
  %98 = bitcast i32** %97 to i64*
  %99 = load i64, i64* %98, align 8, !tbaa !130
  %100 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 8
  %101 = bitcast i32** %100 to i64*
  store i64 %99, i64* %101, align 8, !tbaa !131
  %102 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %103 = icmp eq i32 %92, 0
  br i1 %103, label %.critedge._crit_edge, label %.lr.ph6.preheader

.lr.ph6.preheader:                                ; preds = %86
  br label %.lr.ph6

.critedge.preheader:                              ; preds = %.lr.ph6
  %i.03.lcssa = phi i32 [ %i.03, %.lr.ph6 ]
  %res.04.lcssa = phi %struct.lua_TValue* [ %res.04, %.lr.ph6 ]
  %104 = icmp sgt i32 %i.03.lcssa, 0
  br i1 %104, label %.critedge.preheader25, label %.critedge._crit_edge

.critedge.preheader25:                            ; preds = %.critedge.preheader
  br label %.critedge

.lr.ph6:                                          ; preds = %.lr.ph6.preheader, %107
  %.15 = phi %struct.lua_TValue* [ %108, %107 ], [ %.0, %.lr.ph6.preheader ]
  %res.04 = phi %struct.lua_TValue* [ %109, %107 ], [ %90, %.lr.ph6.preheader ]
  %i.03 = phi i32 [ %116, %107 ], [ %92, %.lr.ph6.preheader ]
  %105 = load %struct.lua_TValue*, %struct.lua_TValue** %102, align 8, !tbaa !1
  %106 = icmp ult %struct.lua_TValue* %.15, %105
  br i1 %106, label %107, label %.critedge.preheader

; <label>:107                                     ; preds = %.lr.ph6
  %108 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %.15, i64 1
  %109 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %res.04, i64 1
  %110 = bitcast %struct.lua_TValue* %.15 to i64*
  %111 = bitcast %struct.lua_TValue* %res.04 to i64*
  %112 = load i64, i64* %110, align 8
  store i64 %112, i64* %111, align 8
  %113 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %.15, i64 0, i32 1
  %114 = load i32, i32* %113, align 4, !tbaa !10
  %115 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %res.04, i64 0, i32 1
  store i32 %114, i32* %115, align 4, !tbaa !10
  %116 = add nsw i32 %i.03, -1
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %.critedge._crit_edge.loopexit26, label %.lr.ph6

.critedge:                                        ; preds = %.critedge.preheader25, %.critedge
  %res.12 = phi %struct.lua_TValue* [ %119, %.critedge ], [ %res.04.lcssa, %.critedge.preheader25 ]
  %i.11 = phi i32 [ %118, %.critedge ], [ %i.03.lcssa, %.critedge.preheader25 ]
  %118 = add nsw i32 %i.11, -1
  %119 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %res.12, i64 1
  %120 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %res.12, i64 0, i32 1
  store i32 0, i32* %120, align 4, !tbaa !10
  %121 = icmp sgt i32 %i.11, 1
  br i1 %121, label %.critedge, label %.critedge._crit_edge.loopexit

.critedge._crit_edge.loopexit:                    ; preds = %.critedge
  %.lcssa = phi %struct.lua_TValue* [ %119, %.critedge ]
  br label %.critedge._crit_edge

.critedge._crit_edge.loopexit26:                  ; preds = %107
  %.lcssa32 = phi %struct.lua_TValue* [ %109, %107 ]
  br label %.critedge._crit_edge

.critedge._crit_edge:                             ; preds = %.critedge._crit_edge.loopexit26, %.critedge._crit_edge.loopexit, %86, %.critedge.preheader
  %res.1.lcssa = phi %struct.lua_TValue* [ %res.04.lcssa, %.critedge.preheader ], [ %90, %86 ], [ %.lcssa, %.critedge._crit_edge.loopexit ], [ %.lcssa32, %.critedge._crit_edge.loopexit26 ]
  store %struct.lua_TValue* %res.1.lcssa, %struct.lua_TValue** %102, align 8, !tbaa !1
  %122 = add nsw i32 %92, 1
  ret i32 %122
}

; Function Attrs: nounwind uwtable
define hidden void @luaD_call(%struct.lua_State* %L, %struct.lua_TValue* %func, i32 %nResults) #0 {
  %1 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 15
  %2 = load i16, i16* %1, align 2, !tbaa !16
  %3 = add i16 %2, 1
  store i16 %3, i16* %1, align 2, !tbaa !16
  %4 = icmp ugt i16 %3, 199
  br i1 %4, label %5, label %11

; <label>:5                                       ; preds = %0
  %6 = icmp eq i16 %3, 200
  br i1 %6, label %7, label %8

; <label>:7                                       ; preds = %5
  tail call void (%struct.lua_State*, i8*, ...) @luaG_runerror(%struct.lua_State* %L, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2.191, i64 0, i64 0)) #1
  br label %11

; <label>:8                                       ; preds = %5
  %9 = icmp ugt i16 %3, 224
  br i1 %9, label %10, label %11

; <label>:10                                      ; preds = %8
  tail call void @luaD_throw(%struct.lua_State* %L, i32 5)
  unreachable

; <label>:11                                      ; preds = %7, %8, %0
  %12 = tail call i32 @luaD_precall(%struct.lua_State* %L, %struct.lua_TValue* %func, i32 %nResults)
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %15

; <label>:14                                      ; preds = %11
  tail call void bitcast (void (%struct.lua_State.215*, i32)* @luaV_execute to void (%struct.lua_State*, i32)*)(%struct.lua_State* %L, i32 1) #1
  br label %15

; <label>:15                                      ; preds = %14, %11
  %16 = load i16, i16* %1, align 2, !tbaa !16
  %17 = add i16 %16, -1
  store i16 %17, i16* %1, align 2, !tbaa !16
  %18 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 6
  %19 = load %struct.global_State*, %struct.global_State** %18, align 8, !tbaa !17
  %20 = getelementptr inbounds %struct.global_State, %struct.global_State* %19, i64 0, i32 14
  %21 = load i64, i64* %20, align 8, !tbaa !23
  %22 = getelementptr inbounds %struct.global_State, %struct.global_State* %19, i64 0, i32 13
  %23 = load i64, i64* %22, align 8, !tbaa !24
  %24 = icmp ult i64 %21, %23
  br i1 %24, label %26, label %25

; <label>:25                                      ; preds = %15
  tail call void @luaC_step(%struct.lua_State* %L) #1
  br label %26

; <label>:26                                      ; preds = %15, %25
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @lua_resume(%struct.lua_State* %L, i32 %nargs) #0 {
  %1 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 3
  %2 = load i8, i8* %1, align 1, !tbaa !59
  switch i8 %2, label %._crit_edge [
    i8 1, label %34
    i8 0, label %3
  ]

._crit_edge:                                      ; preds = %0
  %.phi.trans.insert = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 7
  %.pre = load %struct.CallInfo*, %struct.CallInfo** %.phi.trans.insert, align 8, !tbaa !13
  br label %9

; <label>:3                                       ; preds = %0
  %4 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 7
  %5 = load %struct.CallInfo*, %struct.CallInfo** %4, align 8, !tbaa !13
  %6 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 12
  %7 = load %struct.CallInfo*, %struct.CallInfo** %6, align 8, !tbaa !32
  %8 = icmp eq %struct.CallInfo* %5, %7
  br i1 %8, label %34, label %9

; <label>:9                                       ; preds = %._crit_edge, %3
  %10 = phi %struct.CallInfo* [ %.pre, %._crit_edge ], [ %5, %3 ]
  %11 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %10, i64 0, i32 0
  %12 = load %struct.lua_TValue*, %struct.lua_TValue** %11, align 8, !tbaa !132
  %13 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  store %struct.lua_TValue* %12, %struct.lua_TValue** %13, align 8, !tbaa !1
  %14 = tail call %union.TString* @luaS_newlstr(%struct.lua_State* %L, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.3.192, i64 0, i64 0), i64 37) #1
  %15 = bitcast %struct.lua_TValue* %12 to %union.TString**
  store %union.TString* %14, %union.TString** %15, align 8, !tbaa !25
  %16 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %12, i64 0, i32 1
  store i32 4, i32* %16, align 4, !tbaa !10
  %17 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 9
  %18 = bitcast %struct.lua_TValue** %17 to i64*
  %19 = load i64, i64* %18, align 8, !tbaa !12
  %20 = bitcast %struct.lua_TValue** %13 to i64*
  %21 = load i64, i64* %20, align 8, !tbaa !1
  %22 = sub i64 %19, %21
  %23 = icmp slt i64 %22, 17
  br i1 %23, label %24, label %resume_error.exit

; <label>:24                                      ; preds = %9
  %25 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 13
  %26 = load i32, i32* %25, align 4, !tbaa !149
  %27 = icmp slt i32 %26, 1
  br i1 %27, label %30, label %28

; <label>:28                                      ; preds = %24
  %29 = shl nsw i32 %26, 1
  tail call void @luaD_reallocstack(%struct.lua_State* %L, i32 %29) #1
  br label %resume_error.exit

; <label>:30                                      ; preds = %24
  %31 = add nsw i32 %26, 1
  tail call void @luaD_reallocstack(%struct.lua_State* %L, i32 %31) #1
  br label %resume_error.exit

resume_error.exit:                                ; preds = %9, %28, %30
  %32 = load %struct.lua_TValue*, %struct.lua_TValue** %13, align 8, !tbaa !1
  %33 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %32, i64 1
  store %struct.lua_TValue* %33, %struct.lua_TValue** %13, align 8, !tbaa !1
  br label %105

; <label>:34                                      ; preds = %0, %3
  %35 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 15
  %36 = load i16, i16* %35, align 2, !tbaa !16
  %37 = icmp ugt i16 %36, 199
  br i1 %37, label %38, label %64

; <label>:38                                      ; preds = %34
  %39 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 7
  %40 = load %struct.CallInfo*, %struct.CallInfo** %39, align 8, !tbaa !13
  %41 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %40, i64 0, i32 0
  %42 = load %struct.lua_TValue*, %struct.lua_TValue** %41, align 8, !tbaa !132
  %43 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  store %struct.lua_TValue* %42, %struct.lua_TValue** %43, align 8, !tbaa !1
  %44 = tail call %union.TString* @luaS_newlstr(%struct.lua_State* %L, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2.191, i64 0, i64 0), i64 16) #1
  %45 = bitcast %struct.lua_TValue* %42 to %union.TString**
  store %union.TString* %44, %union.TString** %45, align 8, !tbaa !25
  %46 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %42, i64 0, i32 1
  store i32 4, i32* %46, align 4, !tbaa !10
  %47 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 9
  %48 = bitcast %struct.lua_TValue** %47 to i64*
  %49 = load i64, i64* %48, align 8, !tbaa !12
  %50 = bitcast %struct.lua_TValue** %43 to i64*
  %51 = load i64, i64* %50, align 8, !tbaa !1
  %52 = sub i64 %49, %51
  %53 = icmp slt i64 %52, 17
  br i1 %53, label %54, label %resume_error.exit1

; <label>:54                                      ; preds = %38
  %55 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 13
  %56 = load i32, i32* %55, align 4, !tbaa !149
  %57 = icmp slt i32 %56, 1
  br i1 %57, label %60, label %58

; <label>:58                                      ; preds = %54
  %59 = shl nsw i32 %56, 1
  tail call void @luaD_reallocstack(%struct.lua_State* %L, i32 %59) #1
  br label %resume_error.exit1

; <label>:60                                      ; preds = %54
  %61 = add nsw i32 %56, 1
  tail call void @luaD_reallocstack(%struct.lua_State* %L, i32 %61) #1
  br label %resume_error.exit1

resume_error.exit1:                               ; preds = %38, %58, %60
  %62 = load %struct.lua_TValue*, %struct.lua_TValue** %43, align 8, !tbaa !1
  %63 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %62, i64 1
  store %struct.lua_TValue* %63, %struct.lua_TValue** %43, align 8, !tbaa !1
  br label %105

; <label>:64                                      ; preds = %34
  %65 = add i16 %36, 1
  store i16 %65, i16* %35, align 2, !tbaa !16
  %66 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 16
  store i16 %65, i16* %66, align 2, !tbaa !144
  %67 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %68 = load %struct.lua_TValue*, %struct.lua_TValue** %67, align 8, !tbaa !1
  %69 = sext i32 %nargs to i64
  %70 = sub nsw i64 0, %69
  %71 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %68, i64 %70
  %72 = bitcast %struct.lua_TValue* %71 to i8*
  %73 = tail call i32 @luaD_rawrunprotected(%struct.lua_State* %L, void (%struct.lua_State*, i8*)* nonnull @resume, i8* %72)
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %99, label %75

; <label>:75                                      ; preds = %64
  %76 = trunc i32 %73 to i8
  store i8 %76, i8* %1, align 1, !tbaa !59
  %77 = load %struct.lua_TValue*, %struct.lua_TValue** %67, align 8, !tbaa !1
  switch i32 %73, label %luaD_seterrorobj.exit [
    i32 4, label %78
    i32 5, label %82
    i32 3, label %86
    i32 2, label %86
  ]

; <label>:78                                      ; preds = %75
  %79 = tail call %union.TString* @luaS_newlstr(%struct.lua_State* %L, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.186, i64 0, i64 0), i64 17) #1
  %80 = bitcast %struct.lua_TValue* %77 to %union.TString**
  store %union.TString* %79, %union.TString** %80, align 8, !tbaa !25
  %81 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %77, i64 0, i32 1
  store i32 4, i32* %81, align 4, !tbaa !10
  br label %luaD_seterrorobj.exit

; <label>:82                                      ; preds = %75
  %83 = tail call %union.TString* @luaS_newlstr(%struct.lua_State* %L, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.1.187, i64 0, i64 0), i64 23) #1
  %84 = bitcast %struct.lua_TValue* %77 to %union.TString**
  store %union.TString* %83, %union.TString** %84, align 8, !tbaa !25
  %85 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %77, i64 0, i32 1
  store i32 4, i32* %85, align 4, !tbaa !10
  br label %luaD_seterrorobj.exit

; <label>:86                                      ; preds = %75, %75
  %87 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %77, i64 -1
  %88 = bitcast %struct.lua_TValue* %87 to i64*
  %89 = bitcast %struct.lua_TValue* %77 to i64*
  %90 = load i64, i64* %88, align 8
  store i64 %90, i64* %89, align 8
  %91 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %77, i64 -1, i32 1
  %92 = load i32, i32* %91, align 4, !tbaa !10
  %93 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %77, i64 0, i32 1
  store i32 %92, i32* %93, align 4, !tbaa !10
  br label %luaD_seterrorobj.exit

luaD_seterrorobj.exit:                            ; preds = %75, %78, %82, %86
  %94 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %77, i64 1
  store %struct.lua_TValue* %94, %struct.lua_TValue** %67, align 8, !tbaa !1
  %.cast = ptrtoint %struct.lua_TValue* %94 to i64
  %95 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 7
  %96 = load %struct.CallInfo*, %struct.CallInfo** %95, align 8, !tbaa !13
  %97 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %96, i64 0, i32 2
  %98 = bitcast %struct.lua_TValue** %97 to i64*
  store i64 %.cast, i64* %98, align 8, !tbaa !14
  br label %102

; <label>:99                                      ; preds = %64
  %100 = load i8, i8* %1, align 1, !tbaa !59
  %101 = zext i8 %100 to i32
  br label %102

; <label>:102                                     ; preds = %99, %luaD_seterrorobj.exit
  %status.0 = phi i32 [ %73, %luaD_seterrorobj.exit ], [ %101, %99 ]
  %103 = load i16, i16* %35, align 2, !tbaa !16
  %104 = add i16 %103, -1
  store i16 %104, i16* %35, align 2, !tbaa !16
  br label %105

; <label>:105                                     ; preds = %102, %resume_error.exit1, %resume_error.exit
  %.0 = phi i32 [ 2, %resume_error.exit ], [ 2, %resume_error.exit1 ], [ %status.0, %102 ]
  ret i32 %.0
}

; Function Attrs: nounwind uwtable
define i32 @lua_yield(%struct.lua_State* %L, i32 %nresults) #0 {
  %1 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 15
  %2 = load i16, i16* %1, align 2, !tbaa !16
  %3 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 16
  %4 = load i16, i16* %3, align 2, !tbaa !144
  %5 = icmp ugt i16 %2, %4
  br i1 %5, label %6, label %7

; <label>:6                                       ; preds = %0
  tail call void (%struct.lua_State*, i8*, ...) @luaG_runerror(%struct.lua_State* %L, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.4.193, i64 0, i64 0)) #1
  br label %7

; <label>:7                                       ; preds = %6, %0
  %8 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %9 = load %struct.lua_TValue*, %struct.lua_TValue** %8, align 8, !tbaa !1
  %10 = sext i32 %nresults to i64
  %11 = sub nsw i64 0, %10
  %12 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %9, i64 %11
  %13 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 5
  store %struct.lua_TValue* %12, %struct.lua_TValue** %13, align 8, !tbaa !11
  %14 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 3
  store i8 1, i8* %14, align 1, !tbaa !59
  ret i32 -1
}

; Function Attrs: nounwind uwtable
define hidden i32 @luaD_pcall(%struct.lua_State* %L, void (%struct.lua_State*, i8*)* nocapture %func, i8* %u, i64 %old_top, i64 %ef) #0 {
  %1 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 15
  %2 = load i16, i16* %1, align 2, !tbaa !16
  %3 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 7
  %4 = bitcast %struct.CallInfo** %3 to i64*
  %5 = load i64, i64* %4, align 8, !tbaa !13
  %6 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 12
  %7 = bitcast %struct.CallInfo** %6 to i64*
  %8 = load i64, i64* %7, align 8, !tbaa !32
  %9 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 18
  %10 = load i8, i8* %9, align 1, !tbaa !145
  %11 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 27
  %12 = load i64, i64* %11, align 8, !tbaa !135
  store i64 %ef, i64* %11, align 8, !tbaa !135
  %13 = tail call i32 @luaD_rawrunprotected(%struct.lua_State* %L, void (%struct.lua_State*, i8*)* %func, i8* %u)
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %restore_stack_limit.exit, label %15

; <label>:15                                      ; preds = %0
  %16 = sub i64 %5, %8
  %17 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 10
  %18 = bitcast %struct.lua_TValue** %17 to i8**
  %19 = load i8*, i8** %18, align 8, !tbaa !50
  %20 = getelementptr inbounds i8, i8* %19, i64 %old_top
  %21 = bitcast i8* %20 to %struct.lua_TValue*
  tail call void bitcast (void (%struct.lua_State.115*, %struct.lua_TValue.101*)* @luaF_close to void (%struct.lua_State*, %struct.lua_TValue*)*)(%struct.lua_State* %L, %struct.lua_TValue* %21) #1
  switch i32 %13, label %luaD_seterrorobj.exit [
    i32 4, label %22
    i32 5, label %27
    i32 3, label %32
    i32 2, label %32
  ]

; <label>:22                                      ; preds = %15
  %23 = tail call %union.TString* @luaS_newlstr(%struct.lua_State* %L, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.186, i64 0, i64 0), i64 17) #1
  %24 = bitcast i8* %20 to %union.TString**
  store %union.TString* %23, %union.TString** %24, align 8, !tbaa !25
  %25 = getelementptr inbounds i8, i8* %20, i64 8
  %26 = bitcast i8* %25 to i32*
  store i32 4, i32* %26, align 4, !tbaa !10
  br label %luaD_seterrorobj.exit

; <label>:27                                      ; preds = %15
  %28 = tail call %union.TString* @luaS_newlstr(%struct.lua_State* %L, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.1.187, i64 0, i64 0), i64 23) #1
  %29 = bitcast i8* %20 to %union.TString**
  store %union.TString* %28, %union.TString** %29, align 8, !tbaa !25
  %30 = getelementptr inbounds i8, i8* %20, i64 8
  %31 = bitcast i8* %30 to i32*
  store i32 4, i32* %31, align 4, !tbaa !10
  br label %luaD_seterrorobj.exit

; <label>:32                                      ; preds = %15, %15
  %33 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %34 = load %struct.lua_TValue*, %struct.lua_TValue** %33, align 8, !tbaa !1
  %35 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %34, i64 -1
  %36 = bitcast %struct.lua_TValue* %35 to i64*
  %37 = bitcast i8* %20 to i64*
  %38 = load i64, i64* %36, align 8
  store i64 %38, i64* %37, align 8
  %39 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %34, i64 -1, i32 1
  %40 = load i32, i32* %39, align 4, !tbaa !10
  %41 = getelementptr inbounds i8, i8* %20, i64 8
  %42 = bitcast i8* %41 to i32*
  store i32 %40, i32* %42, align 4, !tbaa !10
  br label %luaD_seterrorobj.exit

luaD_seterrorobj.exit:                            ; preds = %15, %22, %27, %32
  %43 = getelementptr inbounds i8, i8* %20, i64 16
  %44 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %45 = bitcast %struct.lua_TValue** %44 to i8**
  store i8* %43, i8** %45, align 8, !tbaa !1
  store i16 %2, i16* %1, align 2, !tbaa !16
  %46 = bitcast %struct.CallInfo** %6 to i8**
  %47 = load i8*, i8** %46, align 8, !tbaa !32
  %48 = getelementptr inbounds i8, i8* %47, i64 %16
  %49 = bitcast %struct.CallInfo** %3 to i8**
  store i8* %48, i8** %49, align 8, !tbaa !13
  %50 = bitcast i8* %48 to i64*
  %51 = load i64, i64* %50, align 8, !tbaa !132
  %52 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 5
  %53 = bitcast %struct.lua_TValue** %52 to i64*
  store i64 %51, i64* %53, align 8, !tbaa !11
  %54 = getelementptr inbounds i8, i8* %48, i64 24
  %55 = bitcast i8* %54 to i64*
  %56 = load i64, i64* %55, align 8, !tbaa !130
  %57 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 8
  %58 = bitcast i32** %57 to i64*
  store i64 %56, i64* %58, align 8, !tbaa !131
  store i8 %10, i8* %9, align 1, !tbaa !145
  %59 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 14
  %60 = load i32, i32* %59, align 4, !tbaa !146
  %61 = icmp sgt i32 %60, 20000
  %62 = ptrtoint i8* %47 to i64
  br i1 %61, label %63, label %restore_stack_limit.exit

; <label>:63                                      ; preds = %luaD_seterrorobj.exit
  %64 = sdiv exact i64 %16, 40
  %65 = trunc i64 %64 to i32
  %66 = add nsw i32 %65, 1
  %67 = icmp slt i32 %66, 20000
  br i1 %67, label %68, label %restore_stack_limit.exit

; <label>:68                                      ; preds = %63
  %69 = sext i32 %60 to i64
  %70 = mul nsw i64 %69, 40
  %71 = tail call i8* @luaM_realloc_(%struct.lua_State* %L, i8* %47, i64 %70, i64 800000) #1
  store i8* %71, i8** %46, align 8, !tbaa !32
  store i32 20000, i32* %59, align 4, !tbaa !146
  %72 = load i64, i64* %4, align 8, !tbaa !13
  %73 = sub i64 %72, %62
  %74 = sdiv exact i64 %73, 40
  %75 = bitcast i8* %71 to %struct.CallInfo*
  %76 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %75, i64 %74
  store %struct.CallInfo* %76, %struct.CallInfo** %3, align 8, !tbaa !13
  %77 = getelementptr inbounds i8, i8* %71, i64 799960
  %78 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 11
  %79 = bitcast %struct.CallInfo** %78 to i8**
  store i8* %77, i8** %79, align 8, !tbaa !147
  br label %restore_stack_limit.exit

restore_stack_limit.exit:                         ; preds = %68, %63, %luaD_seterrorobj.exit, %0
  store i64 %12, i64* %11, align 8, !tbaa !135
  ret i32 %13
}

; Function Attrs: nounwind uwtable
define hidden i32 @luaD_protectedparser(%struct.lua_State* %L, %struct.Zio* %z, i8* %name) #0 {
  %p = alloca %struct.SParser, align 8
  %1 = bitcast %struct.SParser* %p to i8*
  call void @llvm.lifetime.start(i64 40, i8* %1) #1
  %2 = getelementptr inbounds %struct.SParser, %struct.SParser* %p, i64 0, i32 0
  store %struct.Zio* %z, %struct.Zio** %2, align 8, !tbaa !154
  %3 = getelementptr inbounds %struct.SParser, %struct.SParser* %p, i64 0, i32 2
  store i8* %name, i8** %3, align 8, !tbaa !156
  %4 = getelementptr inbounds %struct.SParser, %struct.SParser* %p, i64 0, i32 1, i32 0
  store i8* null, i8** %4, align 8, !tbaa !157
  %5 = getelementptr inbounds %struct.SParser, %struct.SParser* %p, i64 0, i32 1, i32 2
  store i64 0, i64* %5, align 8, !tbaa !158
  %6 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %7 = bitcast %struct.lua_TValue** %6 to i64*
  %8 = load i64, i64* %7, align 8, !tbaa !1
  %9 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 10
  %10 = bitcast %struct.lua_TValue** %9 to i64*
  %11 = load i64, i64* %10, align 8, !tbaa !50
  %12 = sub i64 %8, %11
  %13 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 27
  %14 = load i64, i64* %13, align 8, !tbaa !135
  %15 = call i32 @luaD_pcall(%struct.lua_State* %L, void (%struct.lua_State*, i8*)* nonnull @f_parser, i8* %1, i64 %12, i64 %14)
  %16 = load i8*, i8** %4, align 8, !tbaa !157
  %17 = load i64, i64* %5, align 8, !tbaa !158
  %18 = call i8* @luaM_realloc_(%struct.lua_State* %L, i8* %16, i64 %17, i64 0) #1
  call void @llvm.lifetime.end(i64 40, i8* %1) #1
  ret i32 %15
}

; Function Attrs: nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture, i8, i64, i32, i1) #1

; Function Attrs: nounwind uwtable
define internal void @resume(%struct.lua_State* %L, i8* %ud) #0 {
  %1 = bitcast i8* %ud to %struct.lua_TValue*
  %2 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 7
  %3 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 3
  %4 = load i8, i8* %3, align 1, !tbaa !59
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %11

; <label>:6                                       ; preds = %0
  %7 = getelementptr inbounds i8, i8* %ud, i64 -16
  %8 = bitcast i8* %7 to %struct.lua_TValue*
  %9 = tail call i32 @luaD_precall(%struct.lua_State* %L, %struct.lua_TValue* %8, i32 -1)
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %35, label %44

; <label>:11                                      ; preds = %0
  %12 = load %struct.CallInfo*, %struct.CallInfo** %2, align 8, !tbaa !13
  store i8 0, i8* %3, align 1, !tbaa !59
  %13 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %12, i64 0, i32 1
  %14 = bitcast %struct.lua_TValue** %13 to %struct.CClosure***
  %15 = load %struct.CClosure**, %struct.CClosure*** %14, align 8, !tbaa !28
  %16 = load %struct.CClosure*, %struct.CClosure** %15, align 8, !tbaa !25
  %17 = getelementptr inbounds %struct.CClosure, %struct.CClosure* %16, i64 0, i32 3
  %18 = load i8, i8* %17, align 1, !tbaa !35
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %30, label %20

; <label>:20                                      ; preds = %11
  %21 = tail call i32 @luaD_poscall(%struct.lua_State* %L, %struct.lua_TValue* %1)
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %35, label %23

; <label>:23                                      ; preds = %20
  %24 = load %struct.CallInfo*, %struct.CallInfo** %2, align 8, !tbaa !13
  %25 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %24, i64 0, i32 2
  %26 = bitcast %struct.lua_TValue** %25 to i64*
  %27 = load i64, i64* %26, align 8, !tbaa !14
  %28 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %29 = bitcast %struct.lua_TValue** %28 to i64*
  store i64 %27, i64* %29, align 8, !tbaa !1
  br label %35

; <label>:30                                      ; preds = %11
  %31 = bitcast %struct.CallInfo* %12 to i64*
  %32 = load i64, i64* %31, align 8, !tbaa !132
  %33 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 5
  %34 = bitcast %struct.lua_TValue** %33 to i64*
  store i64 %32, i64* %34, align 8, !tbaa !11
  br label %35

; <label>:35                                      ; preds = %6, %20, %30, %23
  %36 = bitcast %struct.CallInfo** %2 to i64*
  %37 = load i64, i64* %36, align 8, !tbaa !13
  %38 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 12
  %39 = bitcast %struct.CallInfo** %38 to i64*
  %40 = load i64, i64* %39, align 8, !tbaa !32
  %41 = sub i64 %37, %40
  %42 = sdiv exact i64 %41, 40
  %43 = trunc i64 %42 to i32
  tail call void bitcast (void (%struct.lua_State.215*, i32)* @luaV_execute to void (%struct.lua_State*, i32)*)(%struct.lua_State* %L, i32 %43) #1
  br label %44

; <label>:44                                      ; preds = %6, %35
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @f_parser(%struct.lua_State* %L, i8* %ud) #0 {
  %1 = bitcast i8* %ud to %struct.Zio**
  %2 = load %struct.Zio*, %struct.Zio** %1, align 8, !tbaa !154
  %3 = tail call i32 @luaZ_lookahead(%struct.Zio* %2) #1
  %4 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 6
  %5 = load %struct.global_State*, %struct.global_State** %4, align 8, !tbaa !17
  %6 = getelementptr inbounds %struct.global_State, %struct.global_State* %5, i64 0, i32 14
  %7 = load i64, i64* %6, align 8, !tbaa !23
  %8 = getelementptr inbounds %struct.global_State, %struct.global_State* %5, i64 0, i32 13
  %9 = load i64, i64* %8, align 8, !tbaa !24
  %10 = icmp ult i64 %7, %9
  br i1 %10, label %12, label %11

; <label>:11                                      ; preds = %0
  tail call void @luaC_step(%struct.lua_State* %L) #1
  br label %12

; <label>:12                                      ; preds = %0, %11
  %13 = icmp eq i32 %3, 27
  %14 = select i1 %13, %struct.Proto* (%struct.lua_State*, %struct.Zio*, %struct.Mbuffer*, i8*)* bitcast (%struct.Proto.358* (%struct.lua_State.215*, %struct.Zio.359*, %struct.Mbuffer*, i8*)* @luaU_undump to %struct.Proto* (%struct.lua_State*, %struct.Zio*, %struct.Mbuffer*, i8*)*), %struct.Proto* (%struct.lua_State*, %struct.Zio*, %struct.Mbuffer*, i8*)* bitcast (%struct.Proto.120* (%struct.lua_State.115*, %struct.Zio.243*, %struct.Mbuffer*, i8*)* @luaY_parser to %struct.Proto* (%struct.lua_State*, %struct.Zio*, %struct.Mbuffer*, i8*)*)
  %15 = load %struct.Zio*, %struct.Zio** %1, align 8, !tbaa !154
  %16 = getelementptr inbounds i8, i8* %ud, i64 8
  %17 = bitcast i8* %16 to %struct.Mbuffer*
  %18 = getelementptr inbounds i8, i8* %ud, i64 32
  %19 = bitcast i8* %18 to i8**
  %20 = load i8*, i8** %19, align 8, !tbaa !156
  %21 = tail call %struct.Proto* %14(%struct.lua_State* %L, %struct.Zio* %15, %struct.Mbuffer* %17, i8* %20) #1
  %22 = getelementptr inbounds %struct.Proto, %struct.Proto* %21, i64 0, i32 19
  %23 = load i8, i8* %22, align 1, !tbaa !138
  %24 = zext i8 %23 to i32
  %25 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 22, i32 0, i32 0
  %26 = bitcast %union.GCObject** %25 to %struct.Table**
  %27 = load %struct.Table*, %struct.Table** %26, align 8, !tbaa !25
  %28 = tail call %union.Closure* bitcast (%union.Closure.118* (%struct.lua_State.115*, i32, %struct.Table.108*)* @luaF_newLclosure to %union.Closure* (%struct.lua_State*, i32, %struct.Table*)*)(%struct.lua_State* %L, i32 %24, %struct.Table* %27) #1
  %29 = getelementptr inbounds %union.Closure, %union.Closure* %28, i64 0, i32 0, i32 7
  %30 = bitcast i32 (%struct.lua_State*)** %29 to %struct.Proto**
  store %struct.Proto* %21, %struct.Proto** %30, align 8, !tbaa !57
  %31 = load i8, i8* %22, align 1, !tbaa !138
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %._crit_edge, label %.lr.ph

.lr.ph:                                           ; preds = %12
  %33 = getelementptr inbounds %union.Closure, %union.Closure* %28, i64 0, i32 0, i32 8
  %34 = bitcast [1 x %struct.lua_TValue]* %33 to [1 x %struct.UpVal*]*
  br label %35

; <label>:35                                      ; preds = %.lr.ph, %35
  %indvars.iv = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next, %35 ]
  %36 = tail call %struct.UpVal* bitcast (%struct.UpVal.105* (%struct.lua_State.115*)* @luaF_newupval to %struct.UpVal* (%struct.lua_State*)*)(%struct.lua_State* %L) #1
  %37 = getelementptr inbounds [1 x %struct.UpVal*], [1 x %struct.UpVal*]* %34, i64 0, i64 %indvars.iv
  store %struct.UpVal* %36, %struct.UpVal** %37, align 8, !tbaa !25
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %38 = load i8, i8* %22, align 1, !tbaa !138
  %39 = zext i8 %38 to i64
  %40 = icmp slt i64 %indvars.iv.next, %39
  br i1 %40, label %35, label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %35
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %12
  %41 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %42 = load %struct.lua_TValue*, %struct.lua_TValue** %41, align 8, !tbaa !1
  %43 = bitcast %struct.lua_TValue* %42 to %union.Closure**
  store %union.Closure* %28, %union.Closure** %43, align 8, !tbaa !25
  %44 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %42, i64 0, i32 1
  store i32 6, i32* %44, align 4, !tbaa !10
  %45 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 9
  %46 = bitcast %struct.lua_TValue** %45 to i64*
  %47 = load i64, i64* %46, align 8, !tbaa !12
  %48 = bitcast %struct.lua_TValue** %41 to i64*
  %49 = load i64, i64* %48, align 8, !tbaa !1
  %50 = sub i64 %47, %49
  %51 = icmp slt i64 %50, 17
  br i1 %51, label %52, label %luaD_growstack.exit

; <label>:52                                      ; preds = %._crit_edge
  %53 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 13
  %54 = load i32, i32* %53, align 4, !tbaa !149
  %55 = icmp slt i32 %54, 1
  br i1 %55, label %58, label %56

; <label>:56                                      ; preds = %52
  %57 = shl nsw i32 %54, 1
  tail call void @luaD_reallocstack(%struct.lua_State* %L, i32 %57) #1
  br label %luaD_growstack.exit

; <label>:58                                      ; preds = %52
  %59 = add nsw i32 %54, 1
  tail call void @luaD_reallocstack(%struct.lua_State* %L, i32 %59) #1
  br label %luaD_growstack.exit

luaD_growstack.exit:                              ; preds = %58, %56, %._crit_edge
  %60 = load %struct.lua_TValue*, %struct.lua_TValue** %41, align 8, !tbaa !1
  %61 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %60, i64 1
  store %struct.lua_TValue* %61, %struct.lua_TValue** %41, align 8, !tbaa !1
  ret void
}

; Function Attrs: nounwind uwtable
define hidden i32 @luaU_dump(%struct.lua_State* %L, %struct.Proto* nocapture readonly %f, i32 (%struct.lua_State*, i8*, i64, i8*)* %w, i8* %data, i32 %strip) #0 {
DumpHeader.exit:
  %h.i = alloca [12 x i8], align 1
  %D = alloca %struct.DumpState, align 8
  %0 = bitcast %struct.DumpState* %D to i8*
  call void @llvm.lifetime.start(i64 32, i8* %0) #1
  %1 = getelementptr inbounds %struct.DumpState, %struct.DumpState* %D, i64 0, i32 0
  store %struct.lua_State* %L, %struct.lua_State** %1, align 8, !tbaa !159
  %2 = getelementptr inbounds %struct.DumpState, %struct.DumpState* %D, i64 0, i32 1
  store i32 (%struct.lua_State*, i8*, i64, i8*)* %w, i32 (%struct.lua_State*, i8*, i64, i8*)** %2, align 8, !tbaa !161
  %3 = getelementptr inbounds %struct.DumpState, %struct.DumpState* %D, i64 0, i32 2
  store i8* %data, i8** %3, align 8, !tbaa !162
  %4 = getelementptr inbounds %struct.DumpState, %struct.DumpState* %D, i64 0, i32 3
  store i32 %strip, i32* %4, align 8, !tbaa !163
  %5 = getelementptr inbounds %struct.DumpState, %struct.DumpState* %D, i64 0, i32 4
  %6 = getelementptr inbounds [12 x i8], [12 x i8]* %h.i, i64 0, i64 0
  call void @llvm.lifetime.start(i64 12, i8* %6) #1
  call void @luaU_header(i8* %6) #1
  %7 = call i32 %w(%struct.lua_State* %L, i8* %6, i64 12, i8* %data) #1
  store i32 %7, i32* %5, align 4, !tbaa !164
  call void @llvm.lifetime.end(i64 12, i8* %6) #1
  call fastcc void @DumpFunction(%struct.Proto* %f, %union.TString* null, %struct.DumpState* nonnull %D)
  %8 = load i32, i32* %5, align 4, !tbaa !164
  call void @llvm.lifetime.end(i64 32, i8* %0) #1
  ret i32 %8
}

; Function Attrs: nounwind uwtable
define internal fastcc void @DumpFunction(%struct.Proto* nocapture readonly %f, %union.TString* readnone %p, %struct.DumpState* %D) #0 {
  %1 = alloca i32, align 4
  %size.i.i.16 = alloca i64, align 8
  %size1.i.i.17 = alloca i64, align 8
  %2 = alloca double, align 8
  %x.i.1.i = alloca i8, align 1
  %x.i.i = alloca i8, align 1
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %x.i.11 = alloca i8, align 1
  %x.i.8 = alloca i8, align 1
  %x.i.5 = alloca i8, align 1
  %x.i = alloca i8, align 1
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %size.i = alloca i64, align 8
  %size1.i = alloca i64, align 8
  %size.i.7.i = alloca i64, align 8
  %size1.i.8.i = alloca i64, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %size.i.i = alloca i64, align 8
  %size1.i.i = alloca i64, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = getelementptr inbounds %struct.Proto, %struct.Proto* %f, i64 0, i32 9
  %13 = load %union.TString*, %union.TString** %12, align 8, !tbaa !133
  %14 = icmp eq %union.TString* %13, %p
  br i1 %14, label %.thread, label %15

; <label>:15                                      ; preds = %0
  %16 = getelementptr inbounds %struct.DumpState, %struct.DumpState* %D, i64 0, i32 3
  %17 = load i32, i32* %16, align 4, !tbaa !163
  %18 = icmp ne i32 %17, 0
  %19 = icmp eq %union.TString* %13, null
  %or.cond = or i1 %19, %18
  br i1 %or.cond, label %.thread, label %33

.thread:                                          ; preds = %15, %0
  %20 = bitcast i64* %size.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %20) #1
  store i64 0, i64* %size.i, align 8, !tbaa !39
  %21 = getelementptr inbounds %struct.DumpState, %struct.DumpState* %D, i64 0, i32 4
  %22 = load i32, i32* %21, align 4, !tbaa !164
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %DumpBlock.exit.i

; <label>:24                                      ; preds = %.thread
  %25 = getelementptr inbounds %struct.DumpState, %struct.DumpState* %D, i64 0, i32 1
  %26 = load i32 (%struct.lua_State*, i8*, i64, i8*)*, i32 (%struct.lua_State*, i8*, i64, i8*)** %25, align 8, !tbaa !161
  %27 = getelementptr inbounds %struct.DumpState, %struct.DumpState* %D, i64 0, i32 0
  %28 = load %struct.lua_State*, %struct.lua_State** %27, align 8, !tbaa !159
  %29 = getelementptr inbounds %struct.DumpState, %struct.DumpState* %D, i64 0, i32 2
  %30 = load i8*, i8** %29, align 8, !tbaa !162
  %31 = call i32 %26(%struct.lua_State* %28, i8* %20, i64 8, i8* %30) #1
  store i32 %31, i32* %21, align 4, !tbaa !164
  br label %DumpBlock.exit.i

DumpBlock.exit.i:                                 ; preds = %24, %.thread
  %32 = phi i32 [ %31, %24 ], [ %22, %.thread ]
  call void @llvm.lifetime.end(i64 8, i8* %20) #1
  br label %DumpString.exit

; <label>:33                                      ; preds = %15
  %34 = getelementptr inbounds %union.TString, %union.TString* %13, i64 1
  %35 = bitcast %union.TString* %34 to i8*
  %36 = bitcast i64* %size1.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %36) #1
  %37 = getelementptr inbounds %union.TString, %union.TString* %13, i64 0, i32 0, i32 5
  %38 = load i64, i64* %37, align 8, !tbaa !40
  %39 = add i64 %38, 1
  store i64 %39, i64* %size1.i, align 8, !tbaa !39
  %40 = getelementptr inbounds %struct.DumpState, %struct.DumpState* %D, i64 0, i32 4
  %41 = load i32, i32* %40, align 4, !tbaa !164
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %DumpBlock.exit2.i, label %DumpBlock.exit3.i

DumpBlock.exit2.i:                                ; preds = %33
  %43 = getelementptr inbounds %struct.DumpState, %struct.DumpState* %D, i64 0, i32 1
  %44 = load i32 (%struct.lua_State*, i8*, i64, i8*)*, i32 (%struct.lua_State*, i8*, i64, i8*)** %43, align 8, !tbaa !161
  %45 = getelementptr inbounds %struct.DumpState, %struct.DumpState* %D, i64 0, i32 0
  %46 = load %struct.lua_State*, %struct.lua_State** %45, align 8, !tbaa !159
  %47 = getelementptr inbounds %struct.DumpState, %struct.DumpState* %D, i64 0, i32 2
  %48 = load i8*, i8** %47, align 8, !tbaa !162
  %49 = call i32 %44(%struct.lua_State* %46, i8* %36, i64 8, i8* %48) #1
  store i32 %49, i32* %40, align 4, !tbaa !164
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %DumpBlock.exit3.i

; <label>:51                                      ; preds = %DumpBlock.exit2.i
  %52 = load i64, i64* %size1.i, align 8, !tbaa !39
  %53 = load i32 (%struct.lua_State*, i8*, i64, i8*)*, i32 (%struct.lua_State*, i8*, i64, i8*)** %43, align 8, !tbaa !161
  %54 = load %struct.lua_State*, %struct.lua_State** %45, align 8, !tbaa !159
  %55 = load i8*, i8** %47, align 8, !tbaa !162
  %56 = call i32 %53(%struct.lua_State* %54, i8* %35, i64 %52, i8* %55) #1
  store i32 %56, i32* %40, align 4, !tbaa !164
  br label %DumpBlock.exit3.i

DumpBlock.exit3.i:                                ; preds = %51, %DumpBlock.exit2.i, %33
  %57 = phi i32 [ %56, %51 ], [ %49, %DumpBlock.exit2.i ], [ %41, %33 ]
  call void @llvm.lifetime.end(i64 8, i8* %36) #1
  br label %DumpString.exit

DumpString.exit:                                  ; preds = %DumpBlock.exit.i, %DumpBlock.exit3.i
  %.pre-phi = phi i32* [ %21, %DumpBlock.exit.i ], [ %40, %DumpBlock.exit3.i ]
  %58 = phi i32 [ %32, %DumpBlock.exit.i ], [ %57, %DumpBlock.exit3.i ]
  %59 = getelementptr inbounds %struct.Proto, %struct.Proto* %f, i64 0, i32 16
  %60 = load i32, i32* %59, align 4, !tbaa !165
  %61 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %61)
  store i32 %60, i32* %6, align 4, !tbaa !38
  %62 = icmp eq i32 %58, 0
  br i1 %62, label %63, label %DumpInt.exit

; <label>:63                                      ; preds = %DumpString.exit
  %64 = getelementptr inbounds %struct.DumpState, %struct.DumpState* %D, i64 0, i32 1
  %65 = load i32 (%struct.lua_State*, i8*, i64, i8*)*, i32 (%struct.lua_State*, i8*, i64, i8*)** %64, align 8, !tbaa !161
  %66 = getelementptr inbounds %struct.DumpState, %struct.DumpState* %D, i64 0, i32 0
  %67 = load %struct.lua_State*, %struct.lua_State** %66, align 8, !tbaa !159
  %68 = getelementptr inbounds %struct.DumpState, %struct.DumpState* %D, i64 0, i32 2
  %69 = load i8*, i8** %68, align 8, !tbaa !162
  %70 = call i32 %65(%struct.lua_State* %67, i8* %61, i64 4, i8* %69) #1
  store i32 %70, i32* %.pre-phi, align 4, !tbaa !164
  br label %DumpInt.exit

DumpInt.exit:                                     ; preds = %DumpString.exit, %63
  %71 = phi i32 [ %58, %DumpString.exit ], [ %70, %63 ]
  call void @llvm.lifetime.end(i64 4, i8* %61)
  %72 = getelementptr inbounds %struct.Proto, %struct.Proto* %f, i64 0, i32 17
  %73 = load i32, i32* %72, align 4, !tbaa !134
  %74 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %74)
  store i32 %73, i32* %5, align 4, !tbaa !38
  %75 = icmp eq i32 %71, 0
  br i1 %75, label %76, label %DumpInt.exit3

; <label>:76                                      ; preds = %DumpInt.exit
  %77 = getelementptr inbounds %struct.DumpState, %struct.DumpState* %D, i64 0, i32 1
  %78 = load i32 (%struct.lua_State*, i8*, i64, i8*)*, i32 (%struct.lua_State*, i8*, i64, i8*)** %77, align 8, !tbaa !161
  %79 = getelementptr inbounds %struct.DumpState, %struct.DumpState* %D, i64 0, i32 0
  %80 = load %struct.lua_State*, %struct.lua_State** %79, align 8, !tbaa !159
  %81 = getelementptr inbounds %struct.DumpState, %struct.DumpState* %D, i64 0, i32 2
  %82 = load i8*, i8** %81, align 8, !tbaa !162
  %83 = call i32 %78(%struct.lua_State* %80, i8* %74, i64 4, i8* %82) #1
  store i32 %83, i32* %.pre-phi, align 4, !tbaa !164
  br label %DumpInt.exit3

DumpInt.exit3:                                    ; preds = %DumpInt.exit, %76
  %84 = phi i32 [ %71, %DumpInt.exit ], [ %83, %76 ]
  call void @llvm.lifetime.end(i64 4, i8* %74)
  %85 = getelementptr inbounds %struct.Proto, %struct.Proto* %f, i64 0, i32 19
  %86 = load i8, i8* %85, align 1, !tbaa !138
  call void @llvm.lifetime.start(i64 1, i8* nonnull %x.i) #1
  store i8 %86, i8* %x.i, align 1, !tbaa !76
  %87 = icmp eq i32 %84, 0
  br i1 %87, label %88, label %DumpChar.exit

; <label>:88                                      ; preds = %DumpInt.exit3
  %89 = getelementptr inbounds %struct.DumpState, %struct.DumpState* %D, i64 0, i32 1
  %90 = load i32 (%struct.lua_State*, i8*, i64, i8*)*, i32 (%struct.lua_State*, i8*, i64, i8*)** %89, align 8, !tbaa !161
  %91 = getelementptr inbounds %struct.DumpState, %struct.DumpState* %D, i64 0, i32 0
  %92 = load %struct.lua_State*, %struct.lua_State** %91, align 8, !tbaa !159
  %93 = getelementptr inbounds %struct.DumpState, %struct.DumpState* %D, i64 0, i32 2
  %94 = load i8*, i8** %93, align 8, !tbaa !162
  %95 = call i32 %90(%struct.lua_State* %92, i8* nonnull %x.i, i64 1, i8* %94) #1
  store i32 %95, i32* %.pre-phi, align 4, !tbaa !164
  br label %DumpChar.exit

DumpChar.exit:                                    ; preds = %DumpInt.exit3, %88
  %96 = phi i32 [ %84, %DumpInt.exit3 ], [ %95, %88 ]
  call void @llvm.lifetime.end(i64 1, i8* nonnull %x.i) #1
  %97 = getelementptr inbounds %struct.Proto, %struct.Proto* %f, i64 0, i32 20
  %98 = load i8, i8* %97, align 1, !tbaa !136
  call void @llvm.lifetime.start(i64 1, i8* nonnull %x.i.5) #1
  store i8 %98, i8* %x.i.5, align 1, !tbaa !76
  %99 = icmp eq i32 %96, 0
  br i1 %99, label %100, label %DumpChar.exit7

; <label>:100                                     ; preds = %DumpChar.exit
  %101 = getelementptr inbounds %struct.DumpState, %struct.DumpState* %D, i64 0, i32 1
  %102 = load i32 (%struct.lua_State*, i8*, i64, i8*)*, i32 (%struct.lua_State*, i8*, i64, i8*)** %101, align 8, !tbaa !161
  %103 = getelementptr inbounds %struct.DumpState, %struct.DumpState* %D, i64 0, i32 0
  %104 = load %struct.lua_State*, %struct.lua_State** %103, align 8, !tbaa !159
  %105 = getelementptr inbounds %struct.DumpState, %struct.DumpState* %D, i64 0, i32 2
  %106 = load i8*, i8** %105, align 8, !tbaa !162
  %107 = call i32 %102(%struct.lua_State* %104, i8* nonnull %x.i.5, i64 1, i8* %106) #1
  store i32 %107, i32* %.pre-phi, align 4, !tbaa !164
  br label %DumpChar.exit7

DumpChar.exit7:                                   ; preds = %DumpChar.exit, %100
  %108 = phi i32 [ %96, %DumpChar.exit ], [ %107, %100 ]
  call void @llvm.lifetime.end(i64 1, i8* nonnull %x.i.5) #1
  %109 = getelementptr inbounds %struct.Proto, %struct.Proto* %f, i64 0, i32 21
  %110 = load i8, i8* %109, align 1, !tbaa !137
  call void @llvm.lifetime.start(i64 1, i8* nonnull %x.i.8) #1
  store i8 %110, i8* %x.i.8, align 1, !tbaa !76
  %111 = icmp eq i32 %108, 0
  br i1 %111, label %112, label %DumpChar.exit10

; <label>:112                                     ; preds = %DumpChar.exit7
  %113 = getelementptr inbounds %struct.DumpState, %struct.DumpState* %D, i64 0, i32 1
  %114 = load i32 (%struct.lua_State*, i8*, i64, i8*)*, i32 (%struct.lua_State*, i8*, i64, i8*)** %113, align 8, !tbaa !161
  %115 = getelementptr inbounds %struct.DumpState, %struct.DumpState* %D, i64 0, i32 0
  %116 = load %struct.lua_State*, %struct.lua_State** %115, align 8, !tbaa !159
  %117 = getelementptr inbounds %struct.DumpState, %struct.DumpState* %D, i64 0, i32 2
  %118 = load i8*, i8** %117, align 8, !tbaa !162
  %119 = call i32 %114(%struct.lua_State* %116, i8* nonnull %x.i.8, i64 1, i8* %118) #1
  store i32 %119, i32* %.pre-phi, align 4, !tbaa !164
  br label %DumpChar.exit10

DumpChar.exit10:                                  ; preds = %DumpChar.exit7, %112
  %120 = phi i32 [ %108, %DumpChar.exit7 ], [ %119, %112 ]
  call void @llvm.lifetime.end(i64 1, i8* nonnull %x.i.8) #1
  %121 = getelementptr inbounds %struct.Proto, %struct.Proto* %f, i64 0, i32 22
  %122 = load i8, i8* %121, align 1, !tbaa !100
  call void @llvm.lifetime.start(i64 1, i8* nonnull %x.i.11) #1
  store i8 %122, i8* %x.i.11, align 1, !tbaa !76
  %123 = icmp eq i32 %120, 0
  br i1 %123, label %124, label %DumpChar.exit13

; <label>:124                                     ; preds = %DumpChar.exit10
  %125 = getelementptr inbounds %struct.DumpState, %struct.DumpState* %D, i64 0, i32 1
  %126 = load i32 (%struct.lua_State*, i8*, i64, i8*)*, i32 (%struct.lua_State*, i8*, i64, i8*)** %125, align 8, !tbaa !161
  %127 = getelementptr inbounds %struct.DumpState, %struct.DumpState* %D, i64 0, i32 0
  %128 = load %struct.lua_State*, %struct.lua_State** %127, align 8, !tbaa !159
  %129 = getelementptr inbounds %struct.DumpState, %struct.DumpState* %D, i64 0, i32 2
  %130 = load i8*, i8** %129, align 8, !tbaa !162
  %131 = call i32 %126(%struct.lua_State* %128, i8* nonnull %x.i.11, i64 1, i8* %130) #1
  store i32 %131, i32* %.pre-phi, align 4, !tbaa !164
  br label %DumpChar.exit13

DumpChar.exit13:                                  ; preds = %DumpChar.exit10, %124
  %132 = phi i32 [ %120, %DumpChar.exit10 ], [ %131, %124 ]
  call void @llvm.lifetime.end(i64 1, i8* nonnull %x.i.11) #1
  %133 = getelementptr inbounds %struct.Proto, %struct.Proto* %f, i64 0, i32 4
  %134 = bitcast i32** %133 to i8**
  %135 = load i8*, i8** %134, align 8, !tbaa !93
  %136 = getelementptr inbounds %struct.Proto, %struct.Proto* %f, i64 0, i32 12
  %137 = load i32, i32* %136, align 4, !tbaa !112
  %138 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %138) #1
  store i32 %137, i32* %4, align 4, !tbaa !38
  %139 = icmp eq i32 %132, 0
  br i1 %139, label %DumpInt.exit.i.14, label %DumpInt.exit.thread.i

DumpInt.exit.thread.i:                            ; preds = %DumpChar.exit13
  call void @llvm.lifetime.end(i64 4, i8* %138) #1
  br label %DumpVector.exit.thread

DumpInt.exit.i.14:                                ; preds = %DumpChar.exit13
  %140 = getelementptr inbounds %struct.DumpState, %struct.DumpState* %D, i64 0, i32 1
  %141 = load i32 (%struct.lua_State*, i8*, i64, i8*)*, i32 (%struct.lua_State*, i8*, i64, i8*)** %140, align 8, !tbaa !161
  %142 = getelementptr inbounds %struct.DumpState, %struct.DumpState* %D, i64 0, i32 0
  %143 = load %struct.lua_State*, %struct.lua_State** %142, align 8, !tbaa !159
  %144 = getelementptr inbounds %struct.DumpState, %struct.DumpState* %D, i64 0, i32 2
  %145 = load i8*, i8** %144, align 8, !tbaa !162
  %146 = call i32 %141(%struct.lua_State* %143, i8* %138, i64 4, i8* %145) #1
  store i32 %146, i32* %.pre-phi, align 4, !tbaa !164
  call void @llvm.lifetime.end(i64 4, i8* %138) #1
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %DumpVector.exit, label %DumpVector.exit.thread

DumpVector.exit.thread:                           ; preds = %DumpInt.exit.thread.i, %DumpInt.exit.i.14
  %.ph = phi i32 [ %146, %DumpInt.exit.i.14 ], [ %132, %DumpInt.exit.thread.i ]
  %148 = getelementptr inbounds %struct.Proto, %struct.Proto* %f, i64 0, i32 11
  %149 = load i32, i32* %148, align 4, !tbaa !115
  %150 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %150) #1
  store i32 %149, i32* %3, align 4, !tbaa !38
  br label %DumpInt.exit.i.18

DumpVector.exit:                                  ; preds = %DumpInt.exit.i.14
  %151 = sext i32 %137 to i64
  %152 = shl nsw i64 %151, 2
  %153 = load i32 (%struct.lua_State*, i8*, i64, i8*)*, i32 (%struct.lua_State*, i8*, i64, i8*)** %140, align 8, !tbaa !161
  %154 = load %struct.lua_State*, %struct.lua_State** %142, align 8, !tbaa !159
  %155 = load i8*, i8** %144, align 8, !tbaa !162
  %156 = call i32 %153(%struct.lua_State* %154, i8* %135, i64 %152, i8* %155) #1
  store i32 %156, i32* %.pre-phi, align 4, !tbaa !164
  %157 = getelementptr inbounds %struct.Proto, %struct.Proto* %f, i64 0, i32 11
  %158 = load i32, i32* %157, align 4, !tbaa !115
  %159 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %159) #1
  store i32 %158, i32* %3, align 4, !tbaa !38
  %160 = icmp eq i32 %156, 0
  br i1 %160, label %161, label %DumpInt.exit.i.18

; <label>:161                                     ; preds = %DumpVector.exit
  %162 = getelementptr inbounds %struct.DumpState, %struct.DumpState* %D, i64 0, i32 1
  %163 = load i32 (%struct.lua_State*, i8*, i64, i8*)*, i32 (%struct.lua_State*, i8*, i64, i8*)** %162, align 8, !tbaa !161
  %164 = getelementptr inbounds %struct.DumpState, %struct.DumpState* %D, i64 0, i32 0
  %165 = load %struct.lua_State*, %struct.lua_State** %164, align 8, !tbaa !159
  %166 = getelementptr inbounds %struct.DumpState, %struct.DumpState* %D, i64 0, i32 2
  %167 = load i8*, i8** %166, align 8, !tbaa !162
  %168 = call i32 %163(%struct.lua_State* %165, i8* %159, i64 4, i8* %167) #1
  store i32 %168, i32* %.pre-phi, align 4, !tbaa !164
  br label %DumpInt.exit.i.18

DumpInt.exit.i.18:                                ; preds = %DumpVector.exit.thread, %161, %DumpVector.exit
  %169 = phi i8* [ %159, %161 ], [ %159, %DumpVector.exit ], [ %150, %DumpVector.exit.thread ]
  %170 = phi i32 [ %158, %161 ], [ %158, %DumpVector.exit ], [ %149, %DumpVector.exit.thread ]
  %171 = phi i32 [ %168, %161 ], [ %156, %DumpVector.exit ], [ %.ph, %DumpVector.exit.thread ]
  call void @llvm.lifetime.end(i64 4, i8* %169) #1
  %172 = icmp sgt i32 %170, 0
  br i1 %172, label %.lr.ph26, label %._crit_edge

.lr.ph26:                                         ; preds = %DumpInt.exit.i.18
  %173 = getelementptr inbounds %struct.Proto, %struct.Proto* %f, i64 0, i32 3
  %174 = getelementptr inbounds %struct.DumpState, %struct.DumpState* %D, i64 0, i32 1
  %175 = getelementptr inbounds %struct.DumpState, %struct.DumpState* %D, i64 0, i32 0
  %176 = getelementptr inbounds %struct.DumpState, %struct.DumpState* %D, i64 0, i32 2
  %177 = bitcast i64* %size.i.i.16 to i8*
  %178 = bitcast i64* %size1.i.i.17 to i8*
  %179 = bitcast double* %2 to i8*
  %180 = bitcast double* %2 to i64*
  br label %181

; <label>:181                                     ; preds = %DumpString.exit.i.22, %.lr.ph26
  %182 = phi i32 [ %171, %.lr.ph26 ], [ %248, %DumpString.exit.i.22 ]
  %indvars.iv31 = phi i64 [ 0, %.lr.ph26 ], [ %indvars.iv.next32, %DumpString.exit.i.22 ]
  %183 = load %struct.lua_TValue*, %struct.lua_TValue** %173, align 8, !tbaa !116
  %184 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %183, i64 %indvars.iv31
  %185 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %183, i64 %indvars.iv31, i32 1
  %186 = load i32, i32* %185, align 4, !tbaa !10
  call void @llvm.lifetime.start(i64 1, i8* nonnull %x.i.i) #1
  %187 = trunc i32 %186 to i8
  store i8 %187, i8* %x.i.i, align 1, !tbaa !76
  %188 = icmp eq i32 %182, 0
  br i1 %188, label %189, label %DumpChar.exit.i

; <label>:189                                     ; preds = %181
  %190 = load i32 (%struct.lua_State*, i8*, i64, i8*)*, i32 (%struct.lua_State*, i8*, i64, i8*)** %174, align 8, !tbaa !161
  %191 = load %struct.lua_State*, %struct.lua_State** %175, align 8, !tbaa !159
  %192 = load i8*, i8** %176, align 8, !tbaa !162
  %193 = call i32 %190(%struct.lua_State* %191, i8* nonnull %x.i.i, i64 1, i8* %192) #1
  store i32 %193, i32* %.pre-phi, align 4, !tbaa !164
  %.pre = load i32, i32* %185, align 4, !tbaa !10
  br label %DumpChar.exit.i

DumpChar.exit.i:                                  ; preds = %189, %181
  %194 = phi i32 [ %.pre, %189 ], [ %186, %181 ]
  %195 = phi i32 [ %193, %189 ], [ %182, %181 ]
  call void @llvm.lifetime.end(i64 1, i8* nonnull %x.i.i) #1
  switch i32 %194, label %DumpString.exit.i.22 [
    i32 4, label %217
    i32 1, label %196
    i32 3, label %207
  ]

; <label>:196                                     ; preds = %DumpChar.exit.i
  %197 = bitcast %struct.lua_TValue* %184 to i32*
  %198 = load i32, i32* %197, align 4, !tbaa !38
  call void @llvm.lifetime.start(i64 1, i8* nonnull %x.i.1.i) #1
  %199 = trunc i32 %198 to i8
  store i8 %199, i8* %x.i.1.i, align 1, !tbaa !76
  %200 = icmp eq i32 %195, 0
  br i1 %200, label %201, label %DumpChar.exit2.i

; <label>:201                                     ; preds = %196
  %202 = load i32 (%struct.lua_State*, i8*, i64, i8*)*, i32 (%struct.lua_State*, i8*, i64, i8*)** %174, align 8, !tbaa !161
  %203 = load %struct.lua_State*, %struct.lua_State** %175, align 8, !tbaa !159
  %204 = load i8*, i8** %176, align 8, !tbaa !162
  %205 = call i32 %202(%struct.lua_State* %203, i8* nonnull %x.i.1.i, i64 1, i8* %204) #1
  store i32 %205, i32* %.pre-phi, align 4, !tbaa !164
  br label %DumpChar.exit2.i

DumpChar.exit2.i:                                 ; preds = %201, %196
  %206 = phi i32 [ %205, %201 ], [ %195, %196 ]
  call void @llvm.lifetime.end(i64 1, i8* nonnull %x.i.1.i) #1
  br label %DumpString.exit.i.22

; <label>:207                                     ; preds = %DumpChar.exit.i
  %208 = bitcast %struct.lua_TValue* %184 to i64*
  %209 = load i64, i64* %208, align 8, !tbaa !36
  call void @llvm.lifetime.start(i64 8, i8* %179) #1
  store i64 %209, i64* %180, align 8, !tbaa !36
  %210 = icmp eq i32 %195, 0
  br i1 %210, label %211, label %DumpNumber.exit.i

; <label>:211                                     ; preds = %207
  %212 = load i32 (%struct.lua_State*, i8*, i64, i8*)*, i32 (%struct.lua_State*, i8*, i64, i8*)** %174, align 8, !tbaa !161
  %213 = load %struct.lua_State*, %struct.lua_State** %175, align 8, !tbaa !159
  %214 = load i8*, i8** %176, align 8, !tbaa !162
  %215 = call i32 %212(%struct.lua_State* %213, i8* %179, i64 8, i8* %214) #1
  store i32 %215, i32* %.pre-phi, align 4, !tbaa !164
  br label %DumpNumber.exit.i

DumpNumber.exit.i:                                ; preds = %211, %207
  %216 = phi i32 [ %215, %211 ], [ %195, %207 ]
  call void @llvm.lifetime.end(i64 8, i8* %179) #1
  br label %DumpString.exit.i.22

; <label>:217                                     ; preds = %DumpChar.exit.i
  %218 = bitcast %struct.lua_TValue* %184 to %union.TString**
  %219 = load %union.TString*, %union.TString** %218, align 8, !tbaa !25
  %220 = icmp eq %union.TString* %219, null
  br i1 %220, label %221, label %229

; <label>:221                                     ; preds = %217
  call void @llvm.lifetime.start(i64 8, i8* %177) #1
  store i64 0, i64* %size.i.i.16, align 8, !tbaa !39
  %222 = icmp eq i32 %195, 0
  br i1 %222, label %223, label %DumpBlock.exit.i.i.19

; <label>:223                                     ; preds = %221
  %224 = load i32 (%struct.lua_State*, i8*, i64, i8*)*, i32 (%struct.lua_State*, i8*, i64, i8*)** %174, align 8, !tbaa !161
  %225 = load %struct.lua_State*, %struct.lua_State** %175, align 8, !tbaa !159
  %226 = load i8*, i8** %176, align 8, !tbaa !162
  %227 = call i32 %224(%struct.lua_State* %225, i8* %177, i64 8, i8* %226) #1
  store i32 %227, i32* %.pre-phi, align 4, !tbaa !164
  br label %DumpBlock.exit.i.i.19

DumpBlock.exit.i.i.19:                            ; preds = %223, %221
  %228 = phi i32 [ %227, %223 ], [ %195, %221 ]
  call void @llvm.lifetime.end(i64 8, i8* %177) #1
  br label %DumpString.exit.i.22

; <label>:229                                     ; preds = %217
  %230 = getelementptr inbounds %union.TString, %union.TString* %219, i64 1
  %231 = bitcast %union.TString* %230 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %178) #1
  %232 = getelementptr inbounds %union.TString, %union.TString* %219, i64 0, i32 0, i32 5
  %233 = load i64, i64* %232, align 8, !tbaa !40
  %234 = add i64 %233, 1
  store i64 %234, i64* %size1.i.i.17, align 8, !tbaa !39
  %235 = icmp eq i32 %195, 0
  br i1 %235, label %DumpBlock.exit2.i.i.20, label %DumpBlock.exit3.i.i.21

DumpBlock.exit2.i.i.20:                           ; preds = %229
  %236 = load i32 (%struct.lua_State*, i8*, i64, i8*)*, i32 (%struct.lua_State*, i8*, i64, i8*)** %174, align 8, !tbaa !161
  %237 = load %struct.lua_State*, %struct.lua_State** %175, align 8, !tbaa !159
  %238 = load i8*, i8** %176, align 8, !tbaa !162
  %239 = call i32 %236(%struct.lua_State* %237, i8* %178, i64 8, i8* %238) #1
  store i32 %239, i32* %.pre-phi, align 4, !tbaa !164
  %240 = icmp eq i32 %239, 0
  br i1 %240, label %241, label %DumpBlock.exit3.i.i.21

; <label>:241                                     ; preds = %DumpBlock.exit2.i.i.20
  %242 = load i64, i64* %size1.i.i.17, align 8, !tbaa !39
  %243 = load i32 (%struct.lua_State*, i8*, i64, i8*)*, i32 (%struct.lua_State*, i8*, i64, i8*)** %174, align 8, !tbaa !161
  %244 = load %struct.lua_State*, %struct.lua_State** %175, align 8, !tbaa !159
  %245 = load i8*, i8** %176, align 8, !tbaa !162
  %246 = call i32 %243(%struct.lua_State* %244, i8* %231, i64 %242, i8* %245) #1
  store i32 %246, i32* %.pre-phi, align 4, !tbaa !164
  br label %DumpBlock.exit3.i.i.21

DumpBlock.exit3.i.i.21:                           ; preds = %241, %DumpBlock.exit2.i.i.20, %229
  %247 = phi i32 [ %246, %241 ], [ %239, %DumpBlock.exit2.i.i.20 ], [ %195, %229 ]
  call void @llvm.lifetime.end(i64 8, i8* %178) #1
  br label %DumpString.exit.i.22

DumpString.exit.i.22:                             ; preds = %DumpBlock.exit.i.i.19, %DumpBlock.exit3.i.i.21, %DumpNumber.exit.i, %DumpChar.exit2.i, %DumpChar.exit.i
  %248 = phi i32 [ %228, %DumpBlock.exit.i.i.19 ], [ %247, %DumpBlock.exit3.i.i.21 ], [ %216, %DumpNumber.exit.i ], [ %206, %DumpChar.exit2.i ], [ %195, %DumpChar.exit.i ]
  %indvars.iv.next32 = add nuw nsw i64 %indvars.iv31, 1
  %lftr.wideiv33 = trunc i64 %indvars.iv.next32 to i32
  %exitcond34 = icmp eq i32 %lftr.wideiv33, %170
  br i1 %exitcond34, label %._crit_edge.loopexit, label %181

._crit_edge.loopexit:                             ; preds = %DumpString.exit.i.22
  %.lcssa38 = phi i32 [ %248, %DumpString.exit.i.22 ]
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %DumpInt.exit.i.18
  %249 = phi i32 [ %171, %DumpInt.exit.i.18 ], [ %.lcssa38, %._crit_edge.loopexit ]
  %250 = getelementptr inbounds %struct.Proto, %struct.Proto* %f, i64 0, i32 14
  %251 = load i32, i32* %250, align 4, !tbaa !139
  %252 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %252) #1
  store i32 %251, i32* %1, align 4, !tbaa !38
  %253 = icmp eq i32 %249, 0
  br i1 %253, label %254, label %DumpInt.exit4.i.23

; <label>:254                                     ; preds = %._crit_edge
  %255 = getelementptr inbounds %struct.DumpState, %struct.DumpState* %D, i64 0, i32 1
  %256 = load i32 (%struct.lua_State*, i8*, i64, i8*)*, i32 (%struct.lua_State*, i8*, i64, i8*)** %255, align 8, !tbaa !161
  %257 = getelementptr inbounds %struct.DumpState, %struct.DumpState* %D, i64 0, i32 0
  %258 = load %struct.lua_State*, %struct.lua_State** %257, align 8, !tbaa !159
  %259 = getelementptr inbounds %struct.DumpState, %struct.DumpState* %D, i64 0, i32 2
  %260 = load i8*, i8** %259, align 8, !tbaa !162
  %261 = call i32 %256(%struct.lua_State* %258, i8* %252, i64 4, i8* %260) #1
  store i32 %261, i32* %.pre-phi, align 4, !tbaa !164
  br label %DumpInt.exit4.i.23

DumpInt.exit4.i.23:                               ; preds = %254, %._crit_edge
  call void @llvm.lifetime.end(i64 4, i8* %252) #1
  %262 = icmp sgt i32 %251, 0
  br i1 %262, label %.lr.ph, label %DumpConstants.exit

.lr.ph:                                           ; preds = %DumpInt.exit4.i.23
  %263 = getelementptr inbounds %struct.Proto, %struct.Proto* %f, i64 0, i32 5
  br label %264

; <label>:264                                     ; preds = %264, %.lr.ph
  %indvars.iv = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next, %264 ]
  %265 = load %struct.Proto**, %struct.Proto*** %263, align 8, !tbaa !140
  %266 = getelementptr inbounds %struct.Proto*, %struct.Proto** %265, i64 %indvars.iv
  %267 = load %struct.Proto*, %struct.Proto** %266, align 8, !tbaa !25
  %268 = load %union.TString*, %union.TString** %12, align 8, !tbaa !133
  call fastcc void @DumpFunction(%struct.Proto* %267, %union.TString* %268, %struct.DumpState* %D) #1
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %lftr.wideiv29 = trunc i64 %indvars.iv.next to i32
  %exitcond30 = icmp eq i32 %lftr.wideiv29, %251
  br i1 %exitcond30, label %DumpConstants.exit.loopexit, label %264

DumpConstants.exit.loopexit:                      ; preds = %264
  br label %DumpConstants.exit

DumpConstants.exit:                               ; preds = %DumpConstants.exit.loopexit, %DumpInt.exit4.i.23
  %269 = getelementptr inbounds %struct.DumpState, %struct.DumpState* %D, i64 0, i32 3
  %270 = load i32, i32* %269, align 4, !tbaa !163
  %271 = icmp eq i32 %270, 0
  br i1 %271, label %272, label %275

; <label>:272                                     ; preds = %DumpConstants.exit
  %273 = getelementptr inbounds %struct.Proto, %struct.Proto* %f, i64 0, i32 13
  %274 = load i32, i32* %273, align 4, !tbaa !114
  br label %275

; <label>:275                                     ; preds = %272, %DumpConstants.exit
  %276 = phi i32 [ %274, %272 ], [ 0, %DumpConstants.exit ]
  %277 = getelementptr inbounds %struct.Proto, %struct.Proto* %f, i64 0, i32 6
  %278 = bitcast i32** %277 to i8**
  %279 = load i8*, i8** %278, align 8, !tbaa !111
  %280 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %280) #1
  store i32 %276, i32* %11, align 4, !tbaa !38
  %281 = load i32, i32* %.pre-phi, align 4, !tbaa !164
  %282 = icmp eq i32 %281, 0
  br i1 %282, label %DumpInt.exit.i.i, label %DumpInt.exit.thread.i.i

DumpInt.exit.thread.i.i:                          ; preds = %275
  call void @llvm.lifetime.end(i64 4, i8* %280) #1
  br label %DumpVector.exit.i

DumpInt.exit.i.i:                                 ; preds = %275
  %283 = getelementptr inbounds %struct.DumpState, %struct.DumpState* %D, i64 0, i32 1
  %284 = load i32 (%struct.lua_State*, i8*, i64, i8*)*, i32 (%struct.lua_State*, i8*, i64, i8*)** %283, align 8, !tbaa !161
  %285 = getelementptr inbounds %struct.DumpState, %struct.DumpState* %D, i64 0, i32 0
  %286 = load %struct.lua_State*, %struct.lua_State** %285, align 8, !tbaa !159
  %287 = getelementptr inbounds %struct.DumpState, %struct.DumpState* %D, i64 0, i32 2
  %288 = load i8*, i8** %287, align 8, !tbaa !162
  %289 = call i32 %284(%struct.lua_State* %286, i8* %280, i64 4, i8* %288) #1
  store i32 %289, i32* %.pre-phi, align 4, !tbaa !164
  call void @llvm.lifetime.end(i64 4, i8* %280) #1
  %290 = icmp eq i32 %289, 0
  br i1 %290, label %291, label %DumpVector.exit.i

; <label>:291                                     ; preds = %DumpInt.exit.i.i
  %292 = sext i32 %276 to i64
  %293 = shl nsw i64 %292, 2
  %294 = load i32 (%struct.lua_State*, i8*, i64, i8*)*, i32 (%struct.lua_State*, i8*, i64, i8*)** %283, align 8, !tbaa !161
  %295 = load %struct.lua_State*, %struct.lua_State** %285, align 8, !tbaa !159
  %296 = load i8*, i8** %287, align 8, !tbaa !162
  %297 = call i32 %294(%struct.lua_State* %295, i8* %279, i64 %293, i8* %296) #1
  store i32 %297, i32* %.pre-phi, align 4, !tbaa !164
  br label %DumpVector.exit.i

DumpVector.exit.i:                                ; preds = %291, %DumpInt.exit.i.i, %DumpInt.exit.thread.i.i
  %298 = phi i32 [ %281, %DumpInt.exit.thread.i.i ], [ %289, %DumpInt.exit.i.i ], [ %297, %291 ]
  %299 = load i32, i32* %269, align 4, !tbaa !163
  %300 = icmp eq i32 %299, 0
  br i1 %300, label %301, label %304

; <label>:301                                     ; preds = %DumpVector.exit.i
  %302 = getelementptr inbounds %struct.Proto, %struct.Proto* %f, i64 0, i32 15
  %303 = load i32, i32* %302, align 4, !tbaa !166
  br label %304

; <label>:304                                     ; preds = %301, %DumpVector.exit.i
  %305 = phi i32 [ %303, %301 ], [ 0, %DumpVector.exit.i ]
  %306 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %306) #1
  store i32 %305, i32* %10, align 4, !tbaa !38
  %307 = icmp eq i32 %298, 0
  br i1 %307, label %308, label %DumpInt.exit.i

; <label>:308                                     ; preds = %304
  %309 = getelementptr inbounds %struct.DumpState, %struct.DumpState* %D, i64 0, i32 1
  %310 = load i32 (%struct.lua_State*, i8*, i64, i8*)*, i32 (%struct.lua_State*, i8*, i64, i8*)** %309, align 8, !tbaa !161
  %311 = getelementptr inbounds %struct.DumpState, %struct.DumpState* %D, i64 0, i32 0
  %312 = load %struct.lua_State*, %struct.lua_State** %311, align 8, !tbaa !159
  %313 = getelementptr inbounds %struct.DumpState, %struct.DumpState* %D, i64 0, i32 2
  %314 = load i8*, i8** %313, align 8, !tbaa !162
  %315 = call i32 %310(%struct.lua_State* %312, i8* %306, i64 4, i8* %314) #1
  store i32 %315, i32* %.pre-phi, align 4, !tbaa !164
  br label %DumpInt.exit.i

DumpInt.exit.i:                                   ; preds = %308, %304
  %316 = phi i32 [ %298, %304 ], [ %315, %308 ]
  call void @llvm.lifetime.end(i64 4, i8* %306) #1
  %317 = icmp sgt i32 %305, 0
  br i1 %317, label %.lr.ph15.i, label %._crit_edge.16.i

.lr.ph15.i:                                       ; preds = %DumpInt.exit.i
  %318 = getelementptr inbounds %struct.Proto, %struct.Proto* %f, i64 0, i32 7
  %319 = bitcast i64* %size.i.i to i8*
  %320 = getelementptr inbounds %struct.DumpState, %struct.DumpState* %D, i64 0, i32 1
  %321 = getelementptr inbounds %struct.DumpState, %struct.DumpState* %D, i64 0, i32 0
  %322 = getelementptr inbounds %struct.DumpState, %struct.DumpState* %D, i64 0, i32 2
  %323 = bitcast i32* %9 to i8*
  %324 = bitcast i32* %8 to i8*
  %325 = bitcast i64* %size1.i.i to i8*
  br label %326

; <label>:326                                     ; preds = %DumpInt.exit4.i, %.lr.ph15.i
  %327 = phi i32 [ %316, %.lr.ph15.i ], [ %379, %DumpInt.exit4.i ]
  %indvars.iv17.i = phi i64 [ 0, %.lr.ph15.i ], [ %indvars.iv.next18.i, %DumpInt.exit4.i ]
  %328 = load %struct.LocVar*, %struct.LocVar** %318, align 8, !tbaa !167
  %329 = getelementptr inbounds %struct.LocVar, %struct.LocVar* %328, i64 %indvars.iv17.i, i32 0
  %330 = load %union.TString*, %union.TString** %329, align 8, !tbaa !168
  %331 = icmp eq %union.TString* %330, null
  br i1 %331, label %332, label %340

; <label>:332                                     ; preds = %326
  call void @llvm.lifetime.start(i64 8, i8* %319) #1
  store i64 0, i64* %size.i.i, align 8, !tbaa !39
  %333 = icmp eq i32 %327, 0
  br i1 %333, label %334, label %DumpBlock.exit.i.i

; <label>:334                                     ; preds = %332
  %335 = load i32 (%struct.lua_State*, i8*, i64, i8*)*, i32 (%struct.lua_State*, i8*, i64, i8*)** %320, align 8, !tbaa !161
  %336 = load %struct.lua_State*, %struct.lua_State** %321, align 8, !tbaa !159
  %337 = load i8*, i8** %322, align 8, !tbaa !162
  %338 = call i32 %335(%struct.lua_State* %336, i8* %319, i64 8, i8* %337) #1
  store i32 %338, i32* %.pre-phi, align 4, !tbaa !164
  br label %DumpBlock.exit.i.i

DumpBlock.exit.i.i:                               ; preds = %334, %332
  %339 = phi i32 [ %338, %334 ], [ %327, %332 ]
  call void @llvm.lifetime.end(i64 8, i8* %319) #1
  br label %DumpString.exit.i

; <label>:340                                     ; preds = %326
  %341 = getelementptr inbounds %union.TString, %union.TString* %330, i64 1
  %342 = bitcast %union.TString* %341 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %325) #1
  %343 = getelementptr inbounds %union.TString, %union.TString* %330, i64 0, i32 0, i32 5
  %344 = load i64, i64* %343, align 8, !tbaa !40
  %345 = add i64 %344, 1
  store i64 %345, i64* %size1.i.i, align 8, !tbaa !39
  %346 = icmp eq i32 %327, 0
  br i1 %346, label %DumpBlock.exit2.i.i, label %DumpBlock.exit3.i.i

DumpBlock.exit2.i.i:                              ; preds = %340
  %347 = load i32 (%struct.lua_State*, i8*, i64, i8*)*, i32 (%struct.lua_State*, i8*, i64, i8*)** %320, align 8, !tbaa !161
  %348 = load %struct.lua_State*, %struct.lua_State** %321, align 8, !tbaa !159
  %349 = load i8*, i8** %322, align 8, !tbaa !162
  %350 = call i32 %347(%struct.lua_State* %348, i8* %325, i64 8, i8* %349) #1
  store i32 %350, i32* %.pre-phi, align 4, !tbaa !164
  %351 = icmp eq i32 %350, 0
  br i1 %351, label %352, label %DumpBlock.exit3.i.i

; <label>:352                                     ; preds = %DumpBlock.exit2.i.i
  %353 = load i64, i64* %size1.i.i, align 8, !tbaa !39
  %354 = load i32 (%struct.lua_State*, i8*, i64, i8*)*, i32 (%struct.lua_State*, i8*, i64, i8*)** %320, align 8, !tbaa !161
  %355 = load %struct.lua_State*, %struct.lua_State** %321, align 8, !tbaa !159
  %356 = load i8*, i8** %322, align 8, !tbaa !162
  %357 = call i32 %354(%struct.lua_State* %355, i8* %342, i64 %353, i8* %356) #1
  store i32 %357, i32* %.pre-phi, align 4, !tbaa !164
  br label %DumpBlock.exit3.i.i

DumpBlock.exit3.i.i:                              ; preds = %352, %DumpBlock.exit2.i.i, %340
  %358 = phi i32 [ %357, %352 ], [ %350, %DumpBlock.exit2.i.i ], [ %327, %340 ]
  call void @llvm.lifetime.end(i64 8, i8* %325) #1
  br label %DumpString.exit.i

DumpString.exit.i:                                ; preds = %DumpBlock.exit3.i.i, %DumpBlock.exit.i.i
  %359 = phi i32 [ %339, %DumpBlock.exit.i.i ], [ %358, %DumpBlock.exit3.i.i ]
  %360 = load %struct.LocVar*, %struct.LocVar** %318, align 8, !tbaa !167
  %361 = getelementptr inbounds %struct.LocVar, %struct.LocVar* %360, i64 %indvars.iv17.i, i32 1
  %362 = load i32, i32* %361, align 4, !tbaa !170
  call void @llvm.lifetime.start(i64 4, i8* %323) #1
  store i32 %362, i32* %9, align 4, !tbaa !38
  %363 = icmp eq i32 %359, 0
  br i1 %363, label %364, label %DumpInt.exit2.i

; <label>:364                                     ; preds = %DumpString.exit.i
  %365 = load i32 (%struct.lua_State*, i8*, i64, i8*)*, i32 (%struct.lua_State*, i8*, i64, i8*)** %320, align 8, !tbaa !161
  %366 = load %struct.lua_State*, %struct.lua_State** %321, align 8, !tbaa !159
  %367 = load i8*, i8** %322, align 8, !tbaa !162
  %368 = call i32 %365(%struct.lua_State* %366, i8* %323, i64 4, i8* %367) #1
  store i32 %368, i32* %.pre-phi, align 4, !tbaa !164
  %.pre.i = load %struct.LocVar*, %struct.LocVar** %318, align 8, !tbaa !167
  br label %DumpInt.exit2.i

DumpInt.exit2.i:                                  ; preds = %364, %DumpString.exit.i
  %369 = phi i32 [ %359, %DumpString.exit.i ], [ %368, %364 ]
  %370 = phi %struct.LocVar* [ %360, %DumpString.exit.i ], [ %.pre.i, %364 ]
  call void @llvm.lifetime.end(i64 4, i8* %323) #1
  %371 = getelementptr inbounds %struct.LocVar, %struct.LocVar* %370, i64 %indvars.iv17.i, i32 2
  %372 = load i32, i32* %371, align 4, !tbaa !171
  call void @llvm.lifetime.start(i64 4, i8* %324) #1
  store i32 %372, i32* %8, align 4, !tbaa !38
  %373 = icmp eq i32 %369, 0
  br i1 %373, label %374, label %DumpInt.exit4.i

; <label>:374                                     ; preds = %DumpInt.exit2.i
  %375 = load i32 (%struct.lua_State*, i8*, i64, i8*)*, i32 (%struct.lua_State*, i8*, i64, i8*)** %320, align 8, !tbaa !161
  %376 = load %struct.lua_State*, %struct.lua_State** %321, align 8, !tbaa !159
  %377 = load i8*, i8** %322, align 8, !tbaa !162
  %378 = call i32 %375(%struct.lua_State* %376, i8* %324, i64 4, i8* %377) #1
  store i32 %378, i32* %.pre-phi, align 4, !tbaa !164
  br label %DumpInt.exit4.i

DumpInt.exit4.i:                                  ; preds = %374, %DumpInt.exit2.i
  %379 = phi i32 [ %369, %DumpInt.exit2.i ], [ %378, %374 ]
  call void @llvm.lifetime.end(i64 4, i8* %324) #1
  %indvars.iv.next18.i = add nuw nsw i64 %indvars.iv17.i, 1
  %lftr.wideiv27 = trunc i64 %indvars.iv.next18.i to i32
  %exitcond28 = icmp eq i32 %lftr.wideiv27, %305
  br i1 %exitcond28, label %._crit_edge.16.i.loopexit, label %326

._crit_edge.16.i.loopexit:                        ; preds = %DumpInt.exit4.i
  %.lcssa = phi i32 [ %379, %DumpInt.exit4.i ]
  br label %._crit_edge.16.i

._crit_edge.16.i:                                 ; preds = %._crit_edge.16.i.loopexit, %DumpInt.exit.i
  %380 = phi i32 [ %316, %DumpInt.exit.i ], [ %.lcssa, %._crit_edge.16.i.loopexit ]
  %381 = load i32, i32* %269, align 4, !tbaa !163
  %382 = icmp eq i32 %381, 0
  br i1 %382, label %383, label %386

; <label>:383                                     ; preds = %._crit_edge.16.i
  %384 = getelementptr inbounds %struct.Proto, %struct.Proto* %f, i64 0, i32 10
  %385 = load i32, i32* %384, align 4, !tbaa !65
  br label %386

; <label>:386                                     ; preds = %383, %._crit_edge.16.i
  %387 = phi i32 [ %385, %383 ], [ 0, %._crit_edge.16.i ]
  %388 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %388) #1
  store i32 %387, i32* %7, align 4, !tbaa !38
  %389 = icmp eq i32 %380, 0
  br i1 %389, label %390, label %DumpInt.exit6.i

; <label>:390                                     ; preds = %386
  %391 = getelementptr inbounds %struct.DumpState, %struct.DumpState* %D, i64 0, i32 1
  %392 = load i32 (%struct.lua_State*, i8*, i64, i8*)*, i32 (%struct.lua_State*, i8*, i64, i8*)** %391, align 8, !tbaa !161
  %393 = getelementptr inbounds %struct.DumpState, %struct.DumpState* %D, i64 0, i32 0
  %394 = load %struct.lua_State*, %struct.lua_State** %393, align 8, !tbaa !159
  %395 = getelementptr inbounds %struct.DumpState, %struct.DumpState* %D, i64 0, i32 2
  %396 = load i8*, i8** %395, align 8, !tbaa !162
  %397 = call i32 %392(%struct.lua_State* %394, i8* %388, i64 4, i8* %396) #1
  store i32 %397, i32* %.pre-phi, align 4, !tbaa !164
  br label %DumpInt.exit6.i

DumpInt.exit6.i:                                  ; preds = %390, %386
  %398 = phi i32 [ %380, %386 ], [ %397, %390 ]
  call void @llvm.lifetime.end(i64 4, i8* %388) #1
  %399 = icmp sgt i32 %387, 0
  br i1 %399, label %.lr.ph.i, label %DumpDebug.exit

.lr.ph.i:                                         ; preds = %DumpInt.exit6.i
  %400 = getelementptr inbounds %struct.Proto, %struct.Proto* %f, i64 0, i32 8
  %401 = bitcast i64* %size.i.7.i to i8*
  %402 = getelementptr inbounds %struct.DumpState, %struct.DumpState* %D, i64 0, i32 1
  %403 = getelementptr inbounds %struct.DumpState, %struct.DumpState* %D, i64 0, i32 0
  %404 = getelementptr inbounds %struct.DumpState, %struct.DumpState* %D, i64 0, i32 2
  %405 = bitcast i64* %size1.i.8.i to i8*
  br label %406

; <label>:406                                     ; preds = %DumpString.exit12.i, %.lr.ph.i
  %407 = phi i32 [ %398, %.lr.ph.i ], [ %439, %DumpString.exit12.i ]
  %indvars.iv.i = phi i64 [ 0, %.lr.ph.i ], [ %indvars.iv.next.i, %DumpString.exit12.i ]
  %408 = load %union.TString**, %union.TString*** %400, align 8, !tbaa !68
  %409 = getelementptr inbounds %union.TString*, %union.TString** %408, i64 %indvars.iv.i
  %410 = load %union.TString*, %union.TString** %409, align 8, !tbaa !25
  %411 = icmp eq %union.TString* %410, null
  br i1 %411, label %412, label %420

; <label>:412                                     ; preds = %406
  call void @llvm.lifetime.start(i64 8, i8* %401) #1
  store i64 0, i64* %size.i.7.i, align 8, !tbaa !39
  %413 = icmp eq i32 %407, 0
  br i1 %413, label %414, label %DumpBlock.exit.i.9.i

; <label>:414                                     ; preds = %412
  %415 = load i32 (%struct.lua_State*, i8*, i64, i8*)*, i32 (%struct.lua_State*, i8*, i64, i8*)** %402, align 8, !tbaa !161
  %416 = load %struct.lua_State*, %struct.lua_State** %403, align 8, !tbaa !159
  %417 = load i8*, i8** %404, align 8, !tbaa !162
  %418 = call i32 %415(%struct.lua_State* %416, i8* %401, i64 8, i8* %417) #1
  store i32 %418, i32* %.pre-phi, align 4, !tbaa !164
  br label %DumpBlock.exit.i.9.i

DumpBlock.exit.i.9.i:                             ; preds = %414, %412
  %419 = phi i32 [ %418, %414 ], [ %407, %412 ]
  call void @llvm.lifetime.end(i64 8, i8* %401) #1
  br label %DumpString.exit12.i

; <label>:420                                     ; preds = %406
  %421 = getelementptr inbounds %union.TString, %union.TString* %410, i64 1
  %422 = bitcast %union.TString* %421 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %405) #1
  %423 = getelementptr inbounds %union.TString, %union.TString* %410, i64 0, i32 0, i32 5
  %424 = load i64, i64* %423, align 8, !tbaa !40
  %425 = add i64 %424, 1
  store i64 %425, i64* %size1.i.8.i, align 8, !tbaa !39
  %426 = icmp eq i32 %407, 0
  br i1 %426, label %DumpBlock.exit2.i.10.i, label %DumpBlock.exit3.i.11.i

DumpBlock.exit2.i.10.i:                           ; preds = %420
  %427 = load i32 (%struct.lua_State*, i8*, i64, i8*)*, i32 (%struct.lua_State*, i8*, i64, i8*)** %402, align 8, !tbaa !161
  %428 = load %struct.lua_State*, %struct.lua_State** %403, align 8, !tbaa !159
  %429 = load i8*, i8** %404, align 8, !tbaa !162
  %430 = call i32 %427(%struct.lua_State* %428, i8* %405, i64 8, i8* %429) #1
  store i32 %430, i32* %.pre-phi, align 4, !tbaa !164
  %431 = icmp eq i32 %430, 0
  br i1 %431, label %432, label %DumpBlock.exit3.i.11.i

; <label>:432                                     ; preds = %DumpBlock.exit2.i.10.i
  %433 = load i64, i64* %size1.i.8.i, align 8, !tbaa !39
  %434 = load i32 (%struct.lua_State*, i8*, i64, i8*)*, i32 (%struct.lua_State*, i8*, i64, i8*)** %402, align 8, !tbaa !161
  %435 = load %struct.lua_State*, %struct.lua_State** %403, align 8, !tbaa !159
  %436 = load i8*, i8** %404, align 8, !tbaa !162
  %437 = call i32 %434(%struct.lua_State* %435, i8* %422, i64 %433, i8* %436) #1
  store i32 %437, i32* %.pre-phi, align 4, !tbaa !164
  br label %DumpBlock.exit3.i.11.i

DumpBlock.exit3.i.11.i:                           ; preds = %432, %DumpBlock.exit2.i.10.i, %420
  %438 = phi i32 [ %437, %432 ], [ %430, %DumpBlock.exit2.i.10.i ], [ %407, %420 ]
  call void @llvm.lifetime.end(i64 8, i8* %405) #1
  br label %DumpString.exit12.i

DumpString.exit12.i:                              ; preds = %DumpBlock.exit3.i.11.i, %DumpBlock.exit.i.9.i
  %439 = phi i32 [ %419, %DumpBlock.exit.i.9.i ], [ %438, %DumpBlock.exit3.i.11.i ]
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next.i to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %387
  br i1 %exitcond, label %DumpDebug.exit.loopexit, label %406

DumpDebug.exit.loopexit:                          ; preds = %DumpString.exit12.i
  br label %DumpDebug.exit

DumpDebug.exit:                                   ; preds = %DumpDebug.exit.loopexit, %DumpInt.exit6.i
  ret void
}

; Function Attrs: nounwind uwtable
define hidden %union.Closure.118* @luaF_newCclosure(%struct.lua_State.115* %L, i32 %nelems, %struct.Table.108* %e) #0 {
  %1 = shl i32 %nelems, 4
  %2 = add i32 %1, 40
  %3 = sext i32 %2 to i64
  %4 = tail call i8* bitcast (i8* (%struct.lua_State*, i8*, i64, i64)* @luaM_realloc_ to i8* (%struct.lua_State.115*, i8*, i64, i64)*)(%struct.lua_State.115* %L, i8* null, i64 0, i64 %3) #1
  %5 = bitcast i8* %4 to %union.Closure.118*
  %6 = bitcast i8* %4 to %union.GCObject.116*
  tail call void bitcast (void (%struct.lua_State*, %union.GCObject*, i8)* @luaC_link to void (%struct.lua_State.115*, %union.GCObject.116*, i8)*)(%struct.lua_State.115* %L, %union.GCObject.116* %6, i8 zeroext 6) #1
  %7 = getelementptr inbounds i8, i8* %4, i64 10
  store i8 1, i8* %7, align 1, !tbaa !35
  %8 = getelementptr inbounds i8, i8* %4, i64 24
  %9 = bitcast i8* %8 to %struct.Table.108**
  store %struct.Table.108* %e, %struct.Table.108** %9, align 8, !tbaa !29
  %10 = trunc i32 %nelems to i8
  %11 = getelementptr inbounds i8, i8* %4, i64 11
  store i8 %10, i8* %11, align 1, !tbaa !31
  ret %union.Closure.118* %5
}

; Function Attrs: nounwind uwtable
define hidden %union.Closure.118* @luaF_newLclosure(%struct.lua_State.115* %L, i32 %nelems, %struct.Table.108* %e) #0 {
  %1 = shl i32 %nelems, 3
  %2 = add i32 %1, 40
  %3 = sext i32 %2 to i64
  %4 = tail call i8* bitcast (i8* (%struct.lua_State*, i8*, i64, i64)* @luaM_realloc_ to i8* (%struct.lua_State.115*, i8*, i64, i64)*)(%struct.lua_State.115* %L, i8* null, i64 0, i64 %3) #1
  %5 = bitcast i8* %4 to %union.Closure.118*
  %6 = bitcast i8* %4 to %union.GCObject.116*
  tail call void bitcast (void (%struct.lua_State*, %union.GCObject*, i8)* @luaC_link to void (%struct.lua_State.115*, %union.GCObject.116*, i8)*)(%struct.lua_State.115* %L, %union.GCObject.116* %6, i8 zeroext 6) #1
  %7 = getelementptr inbounds i8, i8* %4, i64 10
  store i8 0, i8* %7, align 1, !tbaa !150
  %8 = getelementptr inbounds i8, i8* %4, i64 24
  %9 = bitcast i8* %8 to %struct.Table.108**
  store %struct.Table.108* %e, %struct.Table.108** %9, align 8, !tbaa !172
  %10 = trunc i32 %nelems to i8
  %11 = getelementptr inbounds i8, i8* %4, i64 11
  store i8 %10, i8* %11, align 1, !tbaa !173
  %12 = icmp eq i32 %nelems, 0
  br i1 %12, label %._crit_edge, label %.lr.ph

.lr.ph:                                           ; preds = %0
  %13 = getelementptr inbounds i8, i8* %4, i64 40
  %14 = bitcast i8* %13 to [1 x %struct.UpVal.105*]*
  %n.vec = and i32 %nelems, -4
  %cmp.zero = icmp eq i32 %n.vec, 0
  %ind.end = sub i32 %nelems, %n.vec
  br i1 %cmp.zero, label %middle.block, label %vector.body.preheader

vector.body.preheader:                            ; preds = %.lr.ph
  %15 = add i32 %nelems, -4
  %16 = lshr i32 %15, 2
  %17 = and i32 %16, 1
  %lcmp.mod = icmp eq i32 %17, 0
  br i1 %lcmp.mod, label %vector.body.prol, label %vector.body.preheader.split

vector.body.prol:                                 ; preds = %vector.body.preheader
  %18 = add i32 %nelems, -1
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds [1 x %struct.UpVal.105*], [1 x %struct.UpVal.105*]* %14, i64 0, i64 %19
  %21 = getelementptr %struct.UpVal.105*, %struct.UpVal.105** %20, i64 -1
  %22 = bitcast %struct.UpVal.105** %21 to <2 x %struct.UpVal.105*>*
  store <2 x %struct.UpVal.105*> zeroinitializer, <2 x %struct.UpVal.105*>* %22, align 8, !tbaa !25
  %23 = getelementptr %struct.UpVal.105*, %struct.UpVal.105** %20, i64 -3
  %24 = bitcast %struct.UpVal.105** %23 to <2 x %struct.UpVal.105*>*
  store <2 x %struct.UpVal.105*> zeroinitializer, <2 x %struct.UpVal.105*>* %24, align 8, !tbaa !25
  br label %vector.body.preheader.split

vector.body.preheader.split:                      ; preds = %vector.body.prol, %vector.body.preheader
  %index.unr = phi i32 [ 0, %vector.body.preheader ], [ 4, %vector.body.prol ]
  %25 = icmp eq i32 %16, 0
  br i1 %25, label %middle.block.loopexit, label %vector.body.preheader.split.split

vector.body.preheader.split.split:                ; preds = %vector.body.preheader.split
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.body.preheader.split.split
  %index = phi i32 [ %index.unr, %vector.body.preheader.split.split ], [ %index.next.1, %vector.body ]
  %offset.idx = sub i32 %nelems, %index
  %26 = add i32 %offset.idx, -1
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds [1 x %struct.UpVal.105*], [1 x %struct.UpVal.105*]* %14, i64 0, i64 %27
  %29 = getelementptr %struct.UpVal.105*, %struct.UpVal.105** %28, i64 -1
  %30 = bitcast %struct.UpVal.105** %29 to <2 x %struct.UpVal.105*>*
  store <2 x %struct.UpVal.105*> zeroinitializer, <2 x %struct.UpVal.105*>* %30, align 8, !tbaa !25
  %31 = getelementptr %struct.UpVal.105*, %struct.UpVal.105** %28, i64 -3
  %32 = bitcast %struct.UpVal.105** %31 to <2 x %struct.UpVal.105*>*
  store <2 x %struct.UpVal.105*> zeroinitializer, <2 x %struct.UpVal.105*>* %32, align 8, !tbaa !25
  %index.next = add i32 %index, 4
  %offset.idx.1 = sub i32 %nelems, %index.next
  %33 = add i32 %offset.idx.1, -1
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds [1 x %struct.UpVal.105*], [1 x %struct.UpVal.105*]* %14, i64 0, i64 %34
  %36 = getelementptr %struct.UpVal.105*, %struct.UpVal.105** %35, i64 -1
  %37 = bitcast %struct.UpVal.105** %36 to <2 x %struct.UpVal.105*>*
  store <2 x %struct.UpVal.105*> zeroinitializer, <2 x %struct.UpVal.105*>* %37, align 8, !tbaa !25
  %38 = getelementptr %struct.UpVal.105*, %struct.UpVal.105** %35, i64 -3
  %39 = bitcast %struct.UpVal.105** %38 to <2 x %struct.UpVal.105*>*
  store <2 x %struct.UpVal.105*> zeroinitializer, <2 x %struct.UpVal.105*>* %39, align 8, !tbaa !25
  %index.next.1 = add i32 %index, 8
  %40 = icmp eq i32 %index.next.1, %n.vec
  br i1 %40, label %middle.block.loopexit.unr-lcssa, label %vector.body, !llvm.loop !174

middle.block.loopexit.unr-lcssa:                  ; preds = %vector.body
  br label %middle.block.loopexit

middle.block.loopexit:                            ; preds = %vector.body.preheader.split, %middle.block.loopexit.unr-lcssa
  br label %middle.block

middle.block:                                     ; preds = %middle.block.loopexit, %.lr.ph
  %resume.val = phi i32 [ %nelems, %.lr.ph ], [ %ind.end, %middle.block.loopexit ]
  %new.indc.resume.val = phi i32 [ 0, %.lr.ph ], [ %n.vec, %middle.block.loopexit ]
  %cmp.n = icmp eq i32 %new.indc.resume.val, %nelems
  br i1 %cmp.n, label %._crit_edge, label %scalar.ph.preheader

scalar.ph.preheader:                              ; preds = %middle.block
  br label %scalar.ph

scalar.ph:                                        ; preds = %scalar.ph.preheader, %scalar.ph
  %.in = phi i32 [ %41, %scalar.ph ], [ %resume.val, %scalar.ph.preheader ]
  %41 = add nsw i32 %.in, -1
  %42 = sext i32 %41 to i64
  %43 = getelementptr inbounds [1 x %struct.UpVal.105*], [1 x %struct.UpVal.105*]* %14, i64 0, i64 %42
  store %struct.UpVal.105* null, %struct.UpVal.105** %43, align 8, !tbaa !25
  %44 = icmp eq i32 %41, 0
  br i1 %44, label %._crit_edge.loopexit, label %scalar.ph, !llvm.loop !177

._crit_edge.loopexit:                             ; preds = %scalar.ph
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %middle.block, %0
  ret %union.Closure.118* %5
}

; Function Attrs: nounwind uwtable
define hidden %struct.UpVal.105* @luaF_newupval(%struct.lua_State.115* %L) #0 {
  %1 = tail call i8* bitcast (i8* (%struct.lua_State*, i8*, i64, i64)* @luaM_realloc_ to i8* (%struct.lua_State.115*, i8*, i64, i64)*)(%struct.lua_State.115* %L, i8* null, i64 0, i64 40) #1
  %2 = bitcast i8* %1 to %struct.UpVal.105*
  %3 = bitcast i8* %1 to %union.GCObject.116*
  tail call void bitcast (void (%struct.lua_State*, %union.GCObject*, i8)* @luaC_link to void (%struct.lua_State.115*, %union.GCObject.116*, i8)*)(%struct.lua_State.115* %L, %union.GCObject.116* %3, i8 zeroext 10) #1
  %4 = getelementptr inbounds i8, i8* %1, i64 24
  %5 = getelementptr inbounds i8, i8* %1, i64 16
  %6 = bitcast i8* %5 to i8**
  store i8* %4, i8** %6, align 8, !tbaa !67
  %7 = getelementptr inbounds i8, i8* %1, i64 32
  %8 = bitcast i8* %7 to i32*
  store i32 0, i32* %8, align 4, !tbaa !10
  ret %struct.UpVal.105* %2
}

; Function Attrs: nounwind uwtable
define hidden %struct.UpVal.105* @luaF_findupval(%struct.lua_State.115* %L, %struct.lua_TValue.101* %level) #0 {
  %1 = getelementptr inbounds %struct.lua_State.115, %struct.lua_State.115* %L, i64 0, i32 6
  %2 = load %struct.global_State.111*, %struct.global_State.111** %1, align 8, !tbaa !17
  %3 = getelementptr inbounds %struct.lua_State.115, %struct.lua_State.115* %L, i64 0, i32 24
  %4 = load %union.GCObject.116*, %union.GCObject.116** %3, align 8, !tbaa !25
  %5 = icmp eq %union.GCObject.116* %4, null
  br i1 %5, label %.critedge, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %0
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %26
  %6 = phi %union.GCObject.116* [ %28, %26 ], [ %4, %.lr.ph.preheader ]
  %pp.03 = phi %union.GCObject.116** [ %27, %26 ], [ %3, %.lr.ph.preheader ]
  %7 = getelementptr inbounds %union.GCObject.116, %union.GCObject.116* %6, i64 0, i32 0, i32 4
  %8 = load %struct.lua_TValue.101*, %struct.lua_TValue.101** %7, align 8, !tbaa !67
  %9 = icmp ult %struct.lua_TValue.101* %8, %level
  br i1 %9, label %.critedge.loopexit, label %10

; <label>:10                                      ; preds = %.lr.ph
  %11 = icmp eq %struct.lua_TValue.101* %8, %level
  br i1 %11, label %12, label %26

; <label>:12                                      ; preds = %10
  %.lcssa14 = phi %union.GCObject.116* [ %6, %10 ]
  %13 = bitcast %union.GCObject.116* %.lcssa14 to %struct.UpVal.105*
  %14 = getelementptr inbounds %union.GCObject.116, %union.GCObject.116* %.lcssa14, i64 0, i32 0, i32 2
  %15 = load i8, i8* %14, align 1, !tbaa !33
  %16 = zext i8 %15 to i32
  %17 = getelementptr inbounds %struct.global_State.111, %struct.global_State.111* %2, i64 0, i32 3
  %18 = load i8, i8* %17, align 1, !tbaa !179
  %19 = zext i8 %18 to i32
  %20 = xor i32 %19, 3
  %21 = and i32 %16, 3
  %22 = and i32 %21, %20
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %54, label %24

; <label>:24                                      ; preds = %12
  %25 = xor i8 %15, 3
  store i8 %25, i8* %14, align 1, !tbaa !33
  br label %54

; <label>:26                                      ; preds = %10
  %27 = getelementptr inbounds %union.GCObject.116, %union.GCObject.116* %6, i64 0, i32 0, i32 0
  %28 = load %union.GCObject.116*, %union.GCObject.116** %27, align 8, !tbaa !25
  %29 = icmp eq %union.GCObject.116* %28, null
  br i1 %29, label %.critedge.loopexit, label %.lr.ph

.critedge.loopexit:                               ; preds = %.lr.ph, %26
  %pp.0.lcssa.ph = phi %union.GCObject.116** [ %27, %26 ], [ %pp.03, %.lr.ph ]
  br label %.critedge

.critedge:                                        ; preds = %.critedge.loopexit, %0
  %pp.0.lcssa = phi %union.GCObject.116** [ %3, %0 ], [ %pp.0.lcssa.ph, %.critedge.loopexit ]
  %30 = tail call i8* bitcast (i8* (%struct.lua_State*, i8*, i64, i64)* @luaM_realloc_ to i8* (%struct.lua_State.115*, i8*, i64, i64)*)(%struct.lua_State.115* %L, i8* null, i64 0, i64 40) #1
  %31 = bitcast i8* %30 to %struct.UpVal.105*
  %32 = getelementptr inbounds i8, i8* %30, i64 8
  store i8 10, i8* %32, align 1, !tbaa !180
  %33 = getelementptr inbounds %struct.global_State.111, %struct.global_State.111* %2, i64 0, i32 3
  %34 = load i8, i8* %33, align 1, !tbaa !179
  %35 = and i8 %34, 3
  %36 = getelementptr inbounds i8, i8* %30, i64 9
  store i8 %35, i8* %36, align 1, !tbaa !181
  %37 = getelementptr inbounds i8, i8* %30, i64 16
  %38 = bitcast i8* %37 to %struct.lua_TValue.101**
  store %struct.lua_TValue.101* %level, %struct.lua_TValue.101** %38, align 8, !tbaa !67
  %39 = bitcast %union.GCObject.116** %pp.0.lcssa to i64*
  %40 = load i64, i64* %39, align 8, !tbaa !25
  %41 = bitcast i8* %30 to i64*
  store i64 %40, i64* %41, align 8, !tbaa !182
  %42 = bitcast %union.GCObject.116** %pp.0.lcssa to i8**
  store i8* %30, i8** %42, align 8, !tbaa !25
  %43 = getelementptr inbounds %struct.global_State.111, %struct.global_State.111* %2, i64 0, i32 22
  %44 = getelementptr inbounds i8, i8* %30, i64 24
  %45 = bitcast i8* %44 to %struct.UpVal.105**
  store %struct.UpVal.105* %43, %struct.UpVal.105** %45, align 8, !tbaa !183
  %46 = getelementptr inbounds %struct.global_State.111, %struct.global_State.111* %2, i64 0, i32 22, i32 4, i32 0, i32 1
  %47 = bitcast i32* %46 to %struct.UpVal.105**
  %48 = load %struct.UpVal.105*, %struct.UpVal.105** %47, align 8, !tbaa !185
  %49 = getelementptr inbounds i8, i8* %30, i64 32
  %50 = bitcast i8* %49 to %struct.UpVal.105**
  store %struct.UpVal.105* %48, %struct.UpVal.105** %50, align 8, !tbaa !185
  %51 = getelementptr inbounds %struct.UpVal.105, %struct.UpVal.105* %48, i64 0, i32 4
  %52 = bitcast %union.anon.104* %51 to i8**
  store i8* %30, i8** %52, align 8, !tbaa !183
  %53 = bitcast i32* %46 to i8**
  store i8* %30, i8** %53, align 8, !tbaa !185
  br label %54

; <label>:54                                      ; preds = %24, %12, %.critedge
  %.0 = phi %struct.UpVal.105* [ %31, %.critedge ], [ %13, %12 ], [ %13, %24 ]
  ret %struct.UpVal.105* %.0
}

; Function Attrs: nounwind uwtable
define hidden void @luaF_freeupval(%struct.lua_State.115* %L, %struct.UpVal.105* %uv) #0 {
  %1 = getelementptr inbounds %struct.UpVal.105, %struct.UpVal.105* %uv, i64 0, i32 3
  %2 = load %struct.lua_TValue.101*, %struct.lua_TValue.101** %1, align 8, !tbaa !67
  %3 = getelementptr inbounds %struct.UpVal.105, %struct.UpVal.105* %uv, i64 0, i32 4, i32 0
  %4 = icmp eq %struct.lua_TValue.101* %2, %3
  br i1 %4, label %19, label %5

; <label>:5                                       ; preds = %0
  %6 = getelementptr inbounds %struct.UpVal.105, %struct.UpVal.105* %uv, i64 0, i32 4
  %7 = bitcast %union.anon.104* %6 to %struct.UpVal.105**
  %8 = bitcast %union.anon.104* %6 to i64*
  %9 = load i64, i64* %8, align 8, !tbaa !183
  %10 = getelementptr inbounds %struct.UpVal.105, %struct.UpVal.105* %uv, i64 0, i32 4, i32 0, i32 1
  %11 = bitcast i32* %10 to %struct.UpVal.105**
  %12 = load %struct.UpVal.105*, %struct.UpVal.105** %11, align 8, !tbaa !185
  %13 = getelementptr inbounds %struct.UpVal.105, %struct.UpVal.105* %12, i64 0, i32 4
  %14 = bitcast %union.anon.104* %13 to i64*
  store i64 %9, i64* %14, align 8, !tbaa !183
  %15 = ptrtoint %struct.UpVal.105* %12 to i64
  %16 = load %struct.UpVal.105*, %struct.UpVal.105** %7, align 8, !tbaa !183
  %17 = getelementptr inbounds %struct.UpVal.105, %struct.UpVal.105* %16, i64 0, i32 4, i32 0, i32 1
  %18 = bitcast i32* %17 to i64*
  store i64 %15, i64* %18, align 8, !tbaa !185
  br label %19

; <label>:19                                      ; preds = %0, %5
  %20 = bitcast %struct.UpVal.105* %uv to i8*
  %21 = tail call i8* bitcast (i8* (%struct.lua_State*, i8*, i64, i64)* @luaM_realloc_ to i8* (%struct.lua_State.115*, i8*, i64, i64)*)(%struct.lua_State.115* %L, i8* %20, i64 40, i64 0) #1
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @luaF_close(%struct.lua_State.115* %L, %struct.lua_TValue.101* readnone %level) #0 {
  %1 = getelementptr inbounds %struct.lua_State.115, %struct.lua_State.115* %L, i64 0, i32 24
  %2 = load %union.GCObject.116*, %union.GCObject.116** %1, align 8, !tbaa !186
  %3 = icmp eq %union.GCObject.116* %2, null
  br i1 %3, label %.critedge, label %.lr.ph

.lr.ph:                                           ; preds = %0
  %4 = getelementptr inbounds %struct.lua_State.115, %struct.lua_State.115* %L, i64 0, i32 6
  %5 = load %struct.global_State.111*, %struct.global_State.111** %4, align 8, !tbaa !17
  %6 = bitcast %union.GCObject.116** %1 to i64*
  %7 = getelementptr inbounds %struct.global_State.111, %struct.global_State.111* %5, i64 0, i32 3
  br label %8

; <label>:8                                       ; preds = %.lr.ph, %.backedge
  %9 = phi %union.GCObject.116* [ %2, %.lr.ph ], [ %65, %.backedge ]
  %10 = bitcast %union.GCObject.116* %9 to %struct.UpVal.105*
  %11 = getelementptr inbounds %union.GCObject.116, %union.GCObject.116* %9, i64 0, i32 0, i32 4
  %12 = load %struct.lua_TValue.101*, %struct.lua_TValue.101** %11, align 8, !tbaa !67
  %13 = icmp ult %struct.lua_TValue.101* %12, %level
  br i1 %13, label %.critedge.loopexit, label %14

; <label>:14                                      ; preds = %8
  %15 = bitcast %union.GCObject.116* %9 to i64*
  %16 = load i64, i64* %15, align 8, !tbaa !182
  store i64 %16, i64* %6, align 8, !tbaa !186
  %17 = getelementptr inbounds %union.GCObject.116, %union.GCObject.116* %9, i64 0, i32 0, i32 2
  %18 = load i8, i8* %17, align 1, !tbaa !33
  %19 = zext i8 %18 to i32
  %20 = load i8, i8* %7, align 1, !tbaa !179
  %21 = zext i8 %20 to i32
  %22 = xor i32 %21, 3
  %23 = and i32 %19, 3
  %24 = and i32 %23, %22
  %25 = icmp eq i32 %24, 0
  %26 = getelementptr inbounds %union.GCObject.116, %union.GCObject.116* %9, i64 0, i32 0, i32 5
  br i1 %25, label %45, label %27

; <label>:27                                      ; preds = %14
  %28 = bitcast %struct.lua_TValue.101** %26 to %struct.lua_TValue.101*
  %29 = icmp eq %struct.lua_TValue.101* %12, %28
  br i1 %29, label %luaF_freeupval.exit, label %30

; <label>:30                                      ; preds = %27
  %31 = bitcast %struct.lua_TValue.101** %26 to %struct.UpVal.105**
  %32 = bitcast %struct.lua_TValue.101** %26 to i64*
  %33 = load i64, i64* %32, align 8, !tbaa !183
  %34 = getelementptr inbounds %union.GCObject.116, %union.GCObject.116* %9, i64 0, i32 0, i32 6
  %35 = bitcast %struct.global_State.111** %34 to %struct.UpVal.105**
  %36 = load %struct.UpVal.105*, %struct.UpVal.105** %35, align 8, !tbaa !185
  %37 = getelementptr inbounds %struct.UpVal.105, %struct.UpVal.105* %36, i64 0, i32 4
  %38 = bitcast %union.anon.104* %37 to i64*
  store i64 %33, i64* %38, align 8, !tbaa !183
  %39 = ptrtoint %struct.UpVal.105* %36 to i64
  %40 = load %struct.UpVal.105*, %struct.UpVal.105** %31, align 8, !tbaa !183
  %41 = getelementptr inbounds %struct.UpVal.105, %struct.UpVal.105* %40, i64 0, i32 4, i32 0, i32 1
  %42 = bitcast i32* %41 to i64*
  store i64 %39, i64* %42, align 8, !tbaa !185
  br label %luaF_freeupval.exit

luaF_freeupval.exit:                              ; preds = %27, %30
  %43 = bitcast %union.GCObject.116* %9 to i8*
  %44 = tail call i8* bitcast (i8* (%struct.lua_State*, i8*, i64, i64)* @luaM_realloc_ to i8* (%struct.lua_State.115*, i8*, i64, i64)*)(%struct.lua_State.115* %L, i8* %43, i64 40, i64 0) #1
  br label %.backedge

; <label>:45                                      ; preds = %14
  %46 = bitcast %struct.lua_TValue.101** %26 to %struct.UpVal.105**
  %47 = bitcast %struct.lua_TValue.101** %26 to i64*
  %48 = load i64, i64* %47, align 8, !tbaa !183
  %49 = getelementptr inbounds %union.GCObject.116, %union.GCObject.116* %9, i64 0, i32 0, i32 6
  %50 = bitcast %struct.global_State.111** %49 to %struct.UpVal.105**
  %51 = load %struct.UpVal.105*, %struct.UpVal.105** %50, align 8, !tbaa !185
  %52 = getelementptr inbounds %struct.UpVal.105, %struct.UpVal.105* %51, i64 0, i32 4
  %53 = bitcast %union.anon.104* %52 to i64*
  store i64 %48, i64* %53, align 8, !tbaa !183
  %54 = ptrtoint %struct.UpVal.105* %51 to i64
  %55 = load %struct.UpVal.105*, %struct.UpVal.105** %46, align 8, !tbaa !183
  %56 = getelementptr inbounds %struct.UpVal.105, %struct.UpVal.105* %55, i64 0, i32 4, i32 0, i32 1
  %57 = bitcast i32* %56 to i64*
  store i64 %54, i64* %57, align 8, !tbaa !185
  %58 = bitcast %struct.lua_TValue.101* %12 to i64*
  %59 = load i64, i64* %58, align 8
  store i64 %59, i64* %47, align 8
  %60 = getelementptr inbounds %struct.lua_TValue.101, %struct.lua_TValue.101* %12, i64 0, i32 1
  %61 = load i32, i32* %60, align 4, !tbaa !10
  %62 = getelementptr inbounds %struct.lua_TValue.101*, %struct.lua_TValue.101** %26, i64 1
  %63 = bitcast %struct.lua_TValue.101** %62 to i32*
  store i32 %61, i32* %63, align 4, !tbaa !10
  %64 = bitcast %struct.lua_TValue.101** %11 to %struct.lua_TValue.101***
  store %struct.lua_TValue.101** %26, %struct.lua_TValue.101*** %64, align 8, !tbaa !67
  tail call void bitcast (void (%struct.lua_State*, %struct.UpVal*)* @luaC_linkupval to void (%struct.lua_State.115*, %struct.UpVal.105*)*)(%struct.lua_State.115* %L, %struct.UpVal.105* %10) #1
  br label %.backedge

.backedge:                                        ; preds = %45, %luaF_freeupval.exit
  %65 = load %union.GCObject.116*, %union.GCObject.116** %1, align 8, !tbaa !186
  %66 = icmp eq %union.GCObject.116* %65, null
  br i1 %66, label %.critedge.loopexit, label %8

.critedge.loopexit:                               ; preds = %8, %.backedge
  br label %.critedge

.critedge:                                        ; preds = %.critedge.loopexit, %0
  ret void
}

; Function Attrs: nounwind uwtable
define hidden %struct.Proto.120* @luaF_newproto(%struct.lua_State.115* %L) #0 {
  %1 = tail call i8* bitcast (i8* (%struct.lua_State*, i8*, i64, i64)* @luaM_realloc_ to i8* (%struct.lua_State.115*, i8*, i64, i64)*)(%struct.lua_State.115* %L, i8* null, i64 0, i64 120) #1
  %2 = bitcast i8* %1 to %struct.Proto.120*
  %3 = bitcast i8* %1 to %union.GCObject.116*
  tail call void bitcast (void (%struct.lua_State*, %union.GCObject*, i8)* @luaC_link to void (%struct.lua_State.115*, %union.GCObject.116*, i8)*)(%struct.lua_State.115* %L, %union.GCObject.116* %3, i8 zeroext 9) #1
  %4 = getelementptr inbounds i8, i8* %1, i64 16
  %5 = getelementptr inbounds i8, i8* %1, i64 112
  call void @llvm.memset.p0i8.i64(i8* %4, i8 0, i64 88, i32 8, i1 false)
  %6 = bitcast i8* %5 to i32*
  store i32 0, i32* %6, align 1
  ret %struct.Proto.120* %2
}

; Function Attrs: nounwind uwtable
define hidden void @luaF_freeproto(%struct.lua_State.115* %L, %struct.Proto.120* %f) #0 {
  %1 = getelementptr inbounds %struct.Proto.120, %struct.Proto.120* %f, i64 0, i32 4
  %2 = bitcast i32** %1 to i8**
  %3 = load i8*, i8** %2, align 8, !tbaa !93
  %4 = getelementptr inbounds %struct.Proto.120, %struct.Proto.120* %f, i64 0, i32 12
  %5 = load i32, i32* %4, align 4, !tbaa !112
  %6 = sext i32 %5 to i64
  %7 = shl nsw i64 %6, 2
  %8 = tail call i8* bitcast (i8* (%struct.lua_State*, i8*, i64, i64)* @luaM_realloc_ to i8* (%struct.lua_State.115*, i8*, i64, i64)*)(%struct.lua_State.115* %L, i8* %3, i64 %7, i64 0) #1
  %9 = getelementptr inbounds %struct.Proto.120, %struct.Proto.120* %f, i64 0, i32 5
  %10 = bitcast %struct.Proto.120*** %9 to i8**
  %11 = load i8*, i8** %10, align 8, !tbaa !140
  %12 = getelementptr inbounds %struct.Proto.120, %struct.Proto.120* %f, i64 0, i32 14
  %13 = load i32, i32* %12, align 4, !tbaa !139
  %14 = sext i32 %13 to i64
  %15 = shl nsw i64 %14, 3
  %16 = tail call i8* bitcast (i8* (%struct.lua_State*, i8*, i64, i64)* @luaM_realloc_ to i8* (%struct.lua_State.115*, i8*, i64, i64)*)(%struct.lua_State.115* %L, i8* %11, i64 %15, i64 0) #1
  %17 = getelementptr inbounds %struct.Proto.120, %struct.Proto.120* %f, i64 0, i32 3
  %18 = bitcast %struct.lua_TValue.101** %17 to i8**
  %19 = load i8*, i8** %18, align 8, !tbaa !116
  %20 = getelementptr inbounds %struct.Proto.120, %struct.Proto.120* %f, i64 0, i32 11
  %21 = load i32, i32* %20, align 4, !tbaa !115
  %22 = sext i32 %21 to i64
  %23 = shl nsw i64 %22, 4
  %24 = tail call i8* bitcast (i8* (%struct.lua_State*, i8*, i64, i64)* @luaM_realloc_ to i8* (%struct.lua_State.115*, i8*, i64, i64)*)(%struct.lua_State.115* %L, i8* %19, i64 %23, i64 0) #1
  %25 = getelementptr inbounds %struct.Proto.120, %struct.Proto.120* %f, i64 0, i32 6
  %26 = bitcast i32** %25 to i8**
  %27 = load i8*, i8** %26, align 8, !tbaa !111
  %28 = getelementptr inbounds %struct.Proto.120, %struct.Proto.120* %f, i64 0, i32 13
  %29 = load i32, i32* %28, align 4, !tbaa !114
  %30 = sext i32 %29 to i64
  %31 = shl nsw i64 %30, 2
  %32 = tail call i8* bitcast (i8* (%struct.lua_State*, i8*, i64, i64)* @luaM_realloc_ to i8* (%struct.lua_State.115*, i8*, i64, i64)*)(%struct.lua_State.115* %L, i8* %27, i64 %31, i64 0) #1
  %33 = getelementptr inbounds %struct.Proto.120, %struct.Proto.120* %f, i64 0, i32 7
  %34 = bitcast %struct.LocVar.119** %33 to i8**
  %35 = load i8*, i8** %34, align 8, !tbaa !167
  %36 = getelementptr inbounds %struct.Proto.120, %struct.Proto.120* %f, i64 0, i32 15
  %37 = load i32, i32* %36, align 4, !tbaa !166
  %38 = sext i32 %37 to i64
  %39 = shl nsw i64 %38, 4
  %40 = tail call i8* bitcast (i8* (%struct.lua_State*, i8*, i64, i64)* @luaM_realloc_ to i8* (%struct.lua_State.115*, i8*, i64, i64)*)(%struct.lua_State.115* %L, i8* %35, i64 %39, i64 0) #1
  %41 = getelementptr inbounds %struct.Proto.120, %struct.Proto.120* %f, i64 0, i32 8
  %42 = bitcast %union.TString.110*** %41 to i8**
  %43 = load i8*, i8** %42, align 8, !tbaa !68
  %44 = getelementptr inbounds %struct.Proto.120, %struct.Proto.120* %f, i64 0, i32 10
  %45 = load i32, i32* %44, align 4, !tbaa !65
  %46 = sext i32 %45 to i64
  %47 = shl nsw i64 %46, 3
  %48 = tail call i8* bitcast (i8* (%struct.lua_State*, i8*, i64, i64)* @luaM_realloc_ to i8* (%struct.lua_State.115*, i8*, i64, i64)*)(%struct.lua_State.115* %L, i8* %43, i64 %47, i64 0) #1
  %49 = bitcast %struct.Proto.120* %f to i8*
  %50 = tail call i8* bitcast (i8* (%struct.lua_State*, i8*, i64, i64)* @luaM_realloc_ to i8* (%struct.lua_State.115*, i8*, i64, i64)*)(%struct.lua_State.115* %L, i8* %49, i64 120, i64 0) #1
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @luaF_freeclosure(%struct.lua_State.115* %L, %union.Closure.118* %c) #0 {
  %1 = getelementptr inbounds %union.Closure.118, %union.Closure.118* %c, i64 0, i32 0, i32 3
  %2 = load i8, i8* %1, align 1, !tbaa !35
  %3 = icmp eq i8 %2, 0
  %4 = getelementptr inbounds %union.Closure.118, %union.Closure.118* %c, i64 0, i32 0, i32 4
  %5 = load i8, i8* %4, align 1, !tbaa !76
  %6 = zext i8 %5 to i32
  %.in.v = select i1 %3, i32 3, i32 4
  %.in = shl i32 %6, %.in.v
  %7 = add nuw nsw i32 %.in, 40
  %8 = bitcast %union.Closure.118* %c to i8*
  %9 = sext i32 %7 to i64
  %10 = tail call i8* bitcast (i8* (%struct.lua_State*, i8*, i64, i64)* @luaM_realloc_ to i8* (%struct.lua_State.115*, i8*, i64, i64)*)(%struct.lua_State.115* %L, i8* %8, i64 %9, i64 0) #1
  ret void
}

; Function Attrs: nounwind readonly uwtable
define hidden i8* @luaF_getlocalname(%struct.Proto.120* nocapture readonly %f, i32 %local_number, i32 %pc) #2 {
  %1 = getelementptr inbounds %struct.Proto.120, %struct.Proto.120* %f, i64 0, i32 15
  %2 = load i32, i32* %1, align 4, !tbaa !166
  %3 = icmp sgt i32 %2, 0
  br i1 %3, label %.lr.ph, label %.critedge

.lr.ph:                                           ; preds = %0
  %4 = getelementptr inbounds %struct.Proto.120, %struct.Proto.120* %f, i64 0, i32 7
  %5 = load %struct.LocVar.119*, %struct.LocVar.119** %4, align 8, !tbaa !167
  %6 = sext i32 %2 to i64
  br label %7

; <label>:7                                       ; preds = %.lr.ph, %23
  %indvars.iv = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next, %23 ]
  %.013 = phi i32 [ %local_number, %.lr.ph ], [ %.1, %23 ]
  %8 = getelementptr inbounds %struct.LocVar.119, %struct.LocVar.119* %5, i64 %indvars.iv, i32 1
  %9 = load i32, i32* %8, align 4, !tbaa !170
  %10 = icmp sgt i32 %9, %pc
  br i1 %10, label %.critedge.loopexit, label %11

; <label>:11                                      ; preds = %7
  %12 = getelementptr inbounds %struct.LocVar.119, %struct.LocVar.119* %5, i64 %indvars.iv, i32 2
  %13 = load i32, i32* %12, align 4, !tbaa !171
  %14 = icmp sgt i32 %13, %pc
  br i1 %14, label %15, label %23

; <label>:15                                      ; preds = %11
  %16 = add nsw i32 %.013, -1
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %23

; <label>:18                                      ; preds = %15
  %indvars.iv.lcssa11 = phi i64 [ %indvars.iv, %15 ]
  %19 = getelementptr inbounds %struct.LocVar.119, %struct.LocVar.119* %5, i64 %indvars.iv.lcssa11, i32 0
  %20 = load %union.TString.110*, %union.TString.110** %19, align 8, !tbaa !168
  %21 = getelementptr inbounds %union.TString.110, %union.TString.110* %20, i64 1
  %22 = bitcast %union.TString.110* %21 to i8*
  br label %.critedge

; <label>:23                                      ; preds = %11, %15
  %.1 = phi i32 [ %16, %15 ], [ %.013, %11 ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %24 = icmp slt i64 %indvars.iv.next, %6
  br i1 %24, label %7, label %.critedge.loopexit

.critedge.loopexit:                               ; preds = %23, %7
  br label %.critedge

.critedge:                                        ; preds = %.critedge.loopexit, %0, %18
  %.0 = phi i8* [ %22, %18 ], [ null, %0 ], [ null, %.critedge.loopexit ]
  ret i8* %.0
}

; Function Attrs: nounwind uwtable
define hidden i64 @luaC_separateudata(%struct.lua_State* nocapture readonly %L, i32 %all) #0 {
  %1 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 6
  %2 = load %struct.global_State*, %struct.global_State** %1, align 8, !tbaa !17
  %3 = getelementptr inbounds %struct.global_State, %struct.global_State* %2, i64 0, i32 21
  %4 = load %struct.lua_State*, %struct.lua_State** %3, align 8, !tbaa !45
  %5 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %4, i64 0, i32 0
  %6 = load %union.GCObject*, %union.GCObject** %5, align 8, !tbaa !25
  %7 = icmp eq %union.GCObject* %6, null
  br i1 %7, label %.outer._crit_edge, label %.lr.ph.lr.ph

.lr.ph.lr.ph:                                     ; preds = %0
  %8 = icmp eq i32 %all, 0
  %9 = getelementptr inbounds %struct.global_State, %struct.global_State* %2, i64 0, i32 11
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.lr.ph, %.outer.backedge
  %10 = phi %union.GCObject* [ %6, %.lr.ph.lr.ph ], [ %60, %.outer.backedge ]
  %deadmem.0.ph13 = phi i64 [ 0, %.lr.ph.lr.ph ], [ %deadmem.06, %.outer.backedge ]
  %p.0.ph12 = phi %union.GCObject** [ %5, %.lr.ph.lr.ph ], [ %p.0.ph.be, %.outer.backedge ]
  %11 = bitcast %union.GCObject** %p.0.ph12 to i64*
  br i1 %8, label %.lr.ph..lr.ph.split_crit_edge.preheader, label %.lr.ph.split.us.preheader

.lr.ph.split.us.preheader:                        ; preds = %.lr.ph
  br label %.lr.ph.split.us

.lr.ph..lr.ph.split_crit_edge.preheader:          ; preds = %.lr.ph
  br label %.lr.ph..lr.ph.split_crit_edge

.lr.ph.split.us:                                  ; preds = %.lr.ph.split.us.preheader, %.backedge.us
  %12 = phi %union.GCObject* [ %51, %.backedge.us ], [ %10, %.lr.ph.split.us.preheader ]
  %deadmem.010.us = phi i64 [ %38, %.backedge.us ], [ %deadmem.0.ph13, %.lr.ph.split.us.preheader ]
  %13 = getelementptr inbounds %union.GCObject, %union.GCObject* %12, i64 0, i32 0, i32 2
  %14 = load i8, i8* %13, align 1, !tbaa !33
  %15 = and i8 %14, 8
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %17, label %.outer.backedge.loopexit74

; <label>:17                                      ; preds = %.lr.ph.split.us
  %18 = getelementptr inbounds %union.GCObject, %union.GCObject* %12, i64 0, i32 0, i32 4
  %19 = bitcast %struct.lua_TValue** %18 to %struct.Table**
  %20 = load %struct.Table*, %struct.Table** %19, align 8, !tbaa !49
  %21 = icmp eq %struct.Table* %20, null
  br i1 %21, label %.thread.loopexit75, label %22

; <label>:22                                      ; preds = %17
  %23 = getelementptr inbounds %struct.Table, %struct.Table* %20, i64 0, i32 3
  %24 = load i8, i8* %23, align 1, !tbaa !187
  %25 = and i8 %24, 4
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %27, label %.thread.loopexit75

; <label>:27                                      ; preds = %22
  %28 = load %struct.global_State*, %struct.global_State** %1, align 8, !tbaa !17
  %29 = getelementptr inbounds %struct.global_State, %struct.global_State* %28, i64 0, i32 24, i64 2
  %30 = load %union.TString*, %union.TString** %29, align 8, !tbaa !25
  %31 = tail call %struct.lua_TValue* @luaT_gettm(%struct.Table* %20, i32 2, %union.TString* %30) #1
  %32 = icmp eq %struct.lua_TValue* %31, null
  br i1 %32, label %.thread.loopexit75, label %33

; <label>:33                                      ; preds = %27
  %34 = getelementptr inbounds %union.GCObject, %union.GCObject* %12, i64 0, i32 0, i32 6
  %35 = bitcast %struct.global_State** %34 to i64*
  %36 = load i64, i64* %35, align 8, !tbaa !42
  %37 = add i64 %deadmem.010.us, 40
  %38 = add i64 %37, %36
  %39 = load i8, i8* %13, align 1, !tbaa !188
  %40 = or i8 %39, 8
  store i8 %40, i8* %13, align 1, !tbaa !188
  %41 = bitcast %union.GCObject* %12 to i64*
  %42 = load i64, i64* %41, align 8, !tbaa !189
  store i64 %42, i64* %11, align 8, !tbaa !25
  %43 = load %union.GCObject*, %union.GCObject** %9, align 8, !tbaa !190
  %44 = icmp eq %union.GCObject* %43, null
  br i1 %44, label %49, label %45

; <label>:45                                      ; preds = %33
  %46 = bitcast %union.GCObject* %43 to i64*
  %47 = load i64, i64* %46, align 8, !tbaa !189
  store i64 %47, i64* %41, align 8, !tbaa !189
  %48 = getelementptr inbounds %union.GCObject, %union.GCObject* %43, i64 0, i32 0, i32 0
  store %union.GCObject* %12, %union.GCObject** %48, align 8, !tbaa !189
  br label %.backedge.us

; <label>:49                                      ; preds = %33
  %50 = getelementptr inbounds %union.GCObject, %union.GCObject* %12, i64 0, i32 0, i32 0
  store %union.GCObject* %12, %union.GCObject** %50, align 8, !tbaa !189
  br label %.backedge.us

.backedge.us:                                     ; preds = %49, %45
  store %union.GCObject* %12, %union.GCObject** %9, align 8, !tbaa !190
  %51 = load %union.GCObject*, %union.GCObject** %p.0.ph12, align 8, !tbaa !25
  %52 = icmp eq %union.GCObject* %51, null
  br i1 %52, label %.outer._crit_edge.loopexit76, label %.lr.ph.split.us

.lr.ph..lr.ph.split_crit_edge:                    ; preds = %.lr.ph..lr.ph.split_crit_edge.preheader, %.backedge
  %53 = phi %union.GCObject* [ %98, %.backedge ], [ %10, %.lr.ph..lr.ph.split_crit_edge.preheader ]
  %deadmem.010 = phi i64 [ %85, %.backedge ], [ %deadmem.0.ph13, %.lr.ph..lr.ph.split_crit_edge.preheader ]
  %54 = getelementptr inbounds %union.GCObject, %union.GCObject* %53, i64 0, i32 0, i32 2
  %55 = load i8, i8* %54, align 1, !tbaa !33
  %56 = and i8 %55, 3
  %57 = icmp ne i8 %56, 0
  %58 = and i8 %55, 8
  %59 = icmp eq i8 %58, 0
  %or.cond3 = and i1 %59, %57
  br i1 %or.cond3, label %62, label %.outer.backedge.loopexit

.outer.backedge.loopexit:                         ; preds = %.lr.ph..lr.ph.split_crit_edge
  %deadmem.010.lcssa = phi i64 [ %deadmem.010, %.lr.ph..lr.ph.split_crit_edge ]
  %.lcssa103 = phi %union.GCObject* [ %53, %.lr.ph..lr.ph.split_crit_edge ]
  br label %.outer.backedge

.outer.backedge.loopexit74:                       ; preds = %.lr.ph.split.us
  %deadmem.010.us.lcssa = phi i64 [ %deadmem.010.us, %.lr.ph.split.us ]
  %.lcssa = phi %union.GCObject* [ %12, %.lr.ph.split.us ]
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %.outer.backedge.loopexit74, %.outer.backedge.loopexit, %.thread
  %deadmem.06 = phi i64 [ %deadmem.0.lcssa5, %.thread ], [ %deadmem.010.lcssa, %.outer.backedge.loopexit ], [ %deadmem.010.us.lcssa, %.outer.backedge.loopexit74 ]
  %.lcssa8.pn = phi %union.GCObject* [ %.lcssa8, %.thread ], [ %.lcssa103, %.outer.backedge.loopexit ], [ %.lcssa, %.outer.backedge.loopexit74 ]
  %p.0.ph.be = getelementptr inbounds %union.GCObject, %union.GCObject* %.lcssa8.pn, i64 0, i32 0, i32 0
  %60 = load %union.GCObject*, %union.GCObject** %p.0.ph.be, align 8, !tbaa !25
  %61 = icmp eq %union.GCObject* %60, null
  br i1 %61, label %.outer._crit_edge.loopexit77, label %.lr.ph

; <label>:62                                      ; preds = %.lr.ph..lr.ph.split_crit_edge
  %63 = getelementptr inbounds %union.GCObject, %union.GCObject* %53, i64 0, i32 0, i32 4
  %64 = bitcast %struct.lua_TValue** %63 to %struct.Table**
  %65 = load %struct.Table*, %struct.Table** %64, align 8, !tbaa !49
  %66 = icmp eq %struct.Table* %65, null
  br i1 %66, label %.thread.loopexit, label %67

; <label>:67                                      ; preds = %62
  %68 = getelementptr inbounds %struct.Table, %struct.Table* %65, i64 0, i32 3
  %69 = load i8, i8* %68, align 1, !tbaa !187
  %70 = and i8 %69, 4
  %71 = icmp eq i8 %70, 0
  br i1 %71, label %72, label %.thread.loopexit

; <label>:72                                      ; preds = %67
  %73 = load %struct.global_State*, %struct.global_State** %1, align 8, !tbaa !17
  %74 = getelementptr inbounds %struct.global_State, %struct.global_State* %73, i64 0, i32 24, i64 2
  %75 = load %union.TString*, %union.TString** %74, align 8, !tbaa !25
  %76 = tail call %struct.lua_TValue* @luaT_gettm(%struct.Table* %65, i32 2, %union.TString* %75) #1
  %77 = icmp eq %struct.lua_TValue* %76, null
  br i1 %77, label %.thread.loopexit, label %80

.thread.loopexit:                                 ; preds = %72, %62, %67
  %.lcssa109 = phi i8* [ %54, %72 ], [ %54, %62 ], [ %54, %67 ]
  %deadmem.010.lcssa106 = phi i64 [ %deadmem.010, %72 ], [ %deadmem.010, %62 ], [ %deadmem.010, %67 ]
  %.lcssa104 = phi %union.GCObject* [ %53, %72 ], [ %53, %62 ], [ %53, %67 ]
  br label %.thread

.thread.loopexit75:                               ; preds = %27, %22, %17
  %.lcssa100 = phi i8* [ %13, %27 ], [ %13, %22 ], [ %13, %17 ]
  %deadmem.010.us.lcssa97 = phi i64 [ %deadmem.010.us, %27 ], [ %deadmem.010.us, %22 ], [ %deadmem.010.us, %17 ]
  %.lcssa95 = phi %union.GCObject* [ %12, %27 ], [ %12, %22 ], [ %12, %17 ]
  br label %.thread

.thread:                                          ; preds = %.thread.loopexit75, %.thread.loopexit
  %.lcssa9 = phi i8* [ %.lcssa109, %.thread.loopexit ], [ %.lcssa100, %.thread.loopexit75 ]
  %.lcssa8 = phi %union.GCObject* [ %.lcssa104, %.thread.loopexit ], [ %.lcssa95, %.thread.loopexit75 ]
  %deadmem.0.lcssa5 = phi i64 [ %deadmem.010.lcssa106, %.thread.loopexit ], [ %deadmem.010.us.lcssa97, %.thread.loopexit75 ]
  %78 = load i8, i8* %.lcssa9, align 1, !tbaa !188
  %79 = or i8 %78, 8
  store i8 %79, i8* %.lcssa9, align 1, !tbaa !188
  br label %.outer.backedge

; <label>:80                                      ; preds = %72
  %81 = getelementptr inbounds %union.GCObject, %union.GCObject* %53, i64 0, i32 0, i32 6
  %82 = bitcast %struct.global_State** %81 to i64*
  %83 = load i64, i64* %82, align 8, !tbaa !42
  %84 = add i64 %deadmem.010, 40
  %85 = add i64 %84, %83
  %86 = load i8, i8* %54, align 1, !tbaa !188
  %87 = or i8 %86, 8
  store i8 %87, i8* %54, align 1, !tbaa !188
  %88 = bitcast %union.GCObject* %53 to i64*
  %89 = load i64, i64* %88, align 8, !tbaa !189
  store i64 %89, i64* %11, align 8, !tbaa !25
  %90 = load %union.GCObject*, %union.GCObject** %9, align 8, !tbaa !190
  %91 = icmp eq %union.GCObject* %90, null
  br i1 %91, label %92, label %94

; <label>:92                                      ; preds = %80
  %93 = getelementptr inbounds %union.GCObject, %union.GCObject* %53, i64 0, i32 0, i32 0
  store %union.GCObject* %53, %union.GCObject** %93, align 8, !tbaa !189
  br label %.backedge

; <label>:94                                      ; preds = %80
  %95 = bitcast %union.GCObject* %90 to i64*
  %96 = load i64, i64* %95, align 8, !tbaa !189
  store i64 %96, i64* %88, align 8, !tbaa !189
  %97 = getelementptr inbounds %union.GCObject, %union.GCObject* %90, i64 0, i32 0, i32 0
  store %union.GCObject* %53, %union.GCObject** %97, align 8, !tbaa !189
  br label %.backedge

.backedge:                                        ; preds = %94, %92
  store %union.GCObject* %53, %union.GCObject** %9, align 8, !tbaa !190
  %98 = load %union.GCObject*, %union.GCObject** %p.0.ph12, align 8, !tbaa !25
  %99 = icmp eq %union.GCObject* %98, null
  br i1 %99, label %.outer._crit_edge.loopexit, label %.lr.ph..lr.ph.split_crit_edge

.outer._crit_edge.loopexit:                       ; preds = %.backedge
  %.lcssa111 = phi i64 [ %85, %.backedge ]
  br label %.outer._crit_edge

.outer._crit_edge.loopexit76:                     ; preds = %.backedge.us
  %.lcssa102 = phi i64 [ %38, %.backedge.us ]
  br label %.outer._crit_edge

.outer._crit_edge.loopexit77:                     ; preds = %.outer.backedge
  %deadmem.06.lcssa = phi i64 [ %deadmem.06, %.outer.backedge ]
  br label %.outer._crit_edge

.outer._crit_edge:                                ; preds = %.outer._crit_edge.loopexit77, %.outer._crit_edge.loopexit76, %.outer._crit_edge.loopexit, %0
  %deadmem.0.lcssa = phi i64 [ 0, %0 ], [ %.lcssa111, %.outer._crit_edge.loopexit ], [ %.lcssa102, %.outer._crit_edge.loopexit76 ], [ %deadmem.06.lcssa, %.outer._crit_edge.loopexit77 ]
  ret i64 %deadmem.0.lcssa
}

; Function Attrs: nounwind uwtable
define hidden void @luaC_callGCTM(%struct.lua_State* %L) #0 {
  %1 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 6
  %2 = load %struct.global_State*, %struct.global_State** %1, align 8, !tbaa !17
  %3 = getelementptr inbounds %struct.global_State, %struct.global_State* %2, i64 0, i32 11
  %4 = load %union.GCObject*, %union.GCObject** %3, align 8, !tbaa !190
  %5 = icmp eq %union.GCObject* %4, null
  br i1 %5, label %._crit_edge, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %0
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %.lr.ph
  tail call fastcc void @GCTM(%struct.lua_State* %L)
  %6 = load %struct.global_State*, %struct.global_State** %1, align 8, !tbaa !17
  %7 = getelementptr inbounds %struct.global_State, %struct.global_State* %6, i64 0, i32 11
  %8 = load %union.GCObject*, %union.GCObject** %7, align 8, !tbaa !190
  %9 = icmp eq %union.GCObject* %8, null
  br i1 %9, label %._crit_edge.loopexit, label %.lr.ph

._crit_edge.loopexit:                             ; preds = %.lr.ph
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %0
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @luaC_freeall(%struct.lua_State* %L) #0 {
  %1 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 6
  %2 = load %struct.global_State*, %struct.global_State** %1, align 8, !tbaa !17
  %3 = getelementptr inbounds %struct.global_State, %struct.global_State* %2, i64 0, i32 3
  store i8 67, i8* %3, align 1, !tbaa !179
  %4 = getelementptr inbounds %struct.global_State, %struct.global_State* %2, i64 0, i32 6
  %5 = tail call fastcc %union.GCObject** @sweeplist(%struct.lua_State* %L, %union.GCObject** %4, i64 -3)
  %6 = getelementptr inbounds %struct.global_State, %struct.global_State* %2, i64 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !tbaa !191
  %8 = icmp sgt i32 %7, 0
  br i1 %8, label %.lr.ph, label %._crit_edge

.lr.ph:                                           ; preds = %0
  %9 = getelementptr inbounds %struct.global_State, %struct.global_State* %2, i64 0, i32 0, i32 0
  br label %10

; <label>:10                                      ; preds = %.lr.ph, %10
  %indvars.iv = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next, %10 ]
  %11 = load %union.GCObject**, %union.GCObject*** %9, align 8, !tbaa !192
  %12 = getelementptr inbounds %union.GCObject*, %union.GCObject** %11, i64 %indvars.iv
  %13 = tail call fastcc %union.GCObject** @sweeplist(%struct.lua_State* %L, %union.GCObject** %12, i64 -3)
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %14 = load i32, i32* %6, align 4, !tbaa !191
  %15 = sext i32 %14 to i64
  %16 = icmp slt i64 %indvars.iv.next, %15
  br i1 %16, label %10, label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %10
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %0
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @luaC_step(%struct.lua_State* %L) #0 {
  %1 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 6
  %2 = load %struct.global_State*, %struct.global_State** %1, align 8, !tbaa !17
  %3 = getelementptr inbounds %struct.global_State, %struct.global_State* %2, i64 0, i32 18
  %4 = load i32, i32* %3, align 4, !tbaa !62
  %5 = mul i32 %4, 10
  %6 = zext i32 %5 to i64
  %7 = icmp eq i32 %5, 0
  %. = select i1 %7, i64 9223372036854775806, i64 %6
  %8 = getelementptr inbounds %struct.global_State, %struct.global_State* %2, i64 0, i32 14
  %9 = load i64, i64* %8, align 8, !tbaa !23
  %10 = getelementptr inbounds %struct.global_State, %struct.global_State* %2, i64 0, i32 13
  %11 = load i64, i64* %10, align 8, !tbaa !24
  %12 = sub i64 %9, %11
  %13 = getelementptr inbounds %struct.global_State, %struct.global_State* %2, i64 0, i32 16
  %14 = load i64, i64* %13, align 8, !tbaa !193
  %15 = add i64 %12, %14
  store i64 %15, i64* %13, align 8, !tbaa !193
  %16 = getelementptr inbounds %struct.global_State, %struct.global_State* %2, i64 0, i32 4
  br label %17

; <label>:17                                      ; preds = %17, %0
  %lim.0 = phi i64 [ %., %0 ], [ %19, %17 ]
  %18 = tail call fastcc i64 @singlestep(%struct.lua_State* %L)
  %19 = sub nsw i64 %lim.0, %18
  %20 = load i8, i8* %16, align 1, !tbaa !60
  %21 = icmp ne i8 %20, 0
  %22 = icmp sgt i64 %19, 0
  %or.cond = and i1 %21, %22
  br i1 %or.cond, label %17, label %23

; <label>:23                                      ; preds = %17
  %.lcssa = phi i1 [ %21, %17 ]
  br i1 %.lcssa, label %24, label %33

; <label>:24                                      ; preds = %23
  %25 = load i64, i64* %13, align 8, !tbaa !193
  %26 = icmp ult i64 %25, 1024
  br i1 %26, label %27, label %30

; <label>:27                                      ; preds = %24
  %28 = load i64, i64* %8, align 8, !tbaa !23
  %29 = add i64 %28, 1024
  store i64 %29, i64* %10, align 8, !tbaa !24
  br label %41

; <label>:30                                      ; preds = %24
  %31 = add i64 %25, -1024
  store i64 %31, i64* %13, align 8, !tbaa !193
  %32 = load i64, i64* %8, align 8, !tbaa !23
  store i64 %32, i64* %10, align 8, !tbaa !24
  br label %41

; <label>:33                                      ; preds = %23
  %34 = getelementptr inbounds %struct.global_State, %struct.global_State* %2, i64 0, i32 15
  %35 = load i64, i64* %34, align 8, !tbaa !194
  %36 = udiv i64 %35, 100
  %37 = getelementptr inbounds %struct.global_State, %struct.global_State* %2, i64 0, i32 17
  %38 = load i32, i32* %37, align 4, !tbaa !61
  %39 = sext i32 %38 to i64
  %40 = mul i64 %39, %36
  store i64 %40, i64* %10, align 8, !tbaa !24
  br label %41

; <label>:41                                      ; preds = %27, %30, %33
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @luaC_fullgc(%struct.lua_State* %L) #0 {
  %1 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 6
  %2 = load %struct.global_State*, %struct.global_State** %1, align 8, !tbaa !17
  %3 = getelementptr inbounds %struct.global_State, %struct.global_State* %2, i64 0, i32 4
  %4 = load i8, i8* %3, align 1, !tbaa !60
  %5 = icmp ult i8 %4, 2
  br i1 %5, label %.preheader.thread, label %.preheader

.preheader.thread:                                ; preds = %0
  %6 = getelementptr inbounds %struct.global_State, %struct.global_State* %2, i64 0, i32 5
  store i32 0, i32* %6, align 4, !tbaa !195
  %7 = getelementptr inbounds %struct.global_State, %struct.global_State* %2, i64 0, i32 6
  %8 = getelementptr inbounds %struct.global_State, %struct.global_State* %2, i64 0, i32 7
  store %union.GCObject** %7, %union.GCObject*** %8, align 8, !tbaa !196
  %9 = getelementptr inbounds %struct.global_State, %struct.global_State* %2, i64 0, i32 8
  %10 = bitcast %union.GCObject** %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* %10, i8 0, i64 24, i32 8, i1 false)
  store i8 2, i8* %3, align 1, !tbaa !60
  br label %.lr.ph1.preheader

.preheader:                                       ; preds = %0
  %11 = icmp eq i8 %4, 4
  br i1 %11, label %._crit_edge.2, label %.lr.ph1.preheader

.lr.ph1.preheader:                                ; preds = %.preheader.thread, %.preheader
  br label %.lr.ph1

.lr.ph1:                                          ; preds = %.lr.ph1.preheader, %.lr.ph1
  %12 = tail call fastcc i64 @singlestep(%struct.lua_State* %L)
  %.pr = load i8, i8* %3, align 1, !tbaa !60
  %13 = icmp eq i8 %.pr, 4
  br i1 %13, label %._crit_edge.2.loopexit, label %.lr.ph1

._crit_edge.2.loopexit:                           ; preds = %.lr.ph1
  br label %._crit_edge.2

._crit_edge.2:                                    ; preds = %._crit_edge.2.loopexit, %.preheader
  tail call fastcc void @markroot(%struct.lua_State* %L)
  %14 = load i8, i8* %3, align 1, !tbaa !60
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %._crit_edge, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %._crit_edge.2
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %.lr.ph
  %16 = tail call fastcc i64 @singlestep(%struct.lua_State* %L)
  %17 = load i8, i8* %3, align 1, !tbaa !60
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %._crit_edge.loopexit, label %.lr.ph

._crit_edge.loopexit:                             ; preds = %.lr.ph
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %._crit_edge.2
  %19 = getelementptr inbounds %struct.global_State, %struct.global_State* %2, i64 0, i32 15
  %20 = load i64, i64* %19, align 8, !tbaa !194
  %21 = udiv i64 %20, 100
  %22 = getelementptr inbounds %struct.global_State, %struct.global_State* %2, i64 0, i32 17
  %23 = load i32, i32* %22, align 4, !tbaa !61
  %24 = sext i32 %23 to i64
  %25 = mul i64 %24, %21
  %26 = getelementptr inbounds %struct.global_State, %struct.global_State* %2, i64 0, i32 13
  store i64 %25, i64* %26, align 8, !tbaa !24
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @luaC_barrierf(%struct.lua_State* nocapture readonly %L, %union.GCObject* nocapture %o, %union.GCObject* %v) #0 {
  %1 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 6
  %2 = load %struct.global_State*, %struct.global_State** %1, align 8, !tbaa !17
  %3 = getelementptr inbounds %struct.global_State, %struct.global_State* %2, i64 0, i32 4
  %4 = load i8, i8* %3, align 1, !tbaa !60
  %5 = icmp eq i8 %4, 1
  br i1 %5, label %6, label %7

; <label>:6                                       ; preds = %0
  tail call fastcc void @reallymarkobject(%struct.global_State* %2, %union.GCObject* %v)
  br label %15

; <label>:7                                       ; preds = %0
  %8 = getelementptr inbounds %union.GCObject, %union.GCObject* %o, i64 0, i32 0, i32 2
  %9 = load i8, i8* %8, align 1, !tbaa !33
  %10 = and i8 %9, -8
  %11 = getelementptr inbounds %struct.global_State, %struct.global_State* %2, i64 0, i32 3
  %12 = load i8, i8* %11, align 1, !tbaa !179
  %13 = and i8 %12, 3
  %14 = or i8 %13, %10
  store i8 %14, i8* %8, align 1, !tbaa !33
  br label %15

; <label>:15                                      ; preds = %7, %6
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @luaC_barrierback(%struct.lua_State* nocapture readonly %L, %struct.Table* %t) #0 {
  %1 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 6
  %2 = load %struct.global_State*, %struct.global_State** %1, align 8, !tbaa !17
  %3 = getelementptr inbounds %struct.Table, %struct.Table* %t, i64 0, i32 2
  %4 = load i8, i8* %3, align 1, !tbaa !33
  %5 = and i8 %4, -5
  store i8 %5, i8* %3, align 1, !tbaa !33
  %6 = getelementptr inbounds %struct.global_State, %struct.global_State* %2, i64 0, i32 9
  %7 = bitcast %union.GCObject** %6 to i64*
  %8 = load i64, i64* %7, align 8, !tbaa !197
  %9 = getelementptr inbounds %struct.Table, %struct.Table* %t, i64 0, i32 9
  %10 = bitcast %union.GCObject** %9 to i64*
  store i64 %8, i64* %10, align 8, !tbaa !198
  %11 = bitcast %union.GCObject** %6 to %struct.Table**
  store %struct.Table* %t, %struct.Table** %11, align 8, !tbaa !197
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @luaC_link(%struct.lua_State* nocapture readonly %L, %union.GCObject* %o, i8 zeroext %tt) #0 {
  %1 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 6
  %2 = load %struct.global_State*, %struct.global_State** %1, align 8, !tbaa !17
  %3 = getelementptr inbounds %struct.global_State, %struct.global_State* %2, i64 0, i32 6
  %4 = bitcast %union.GCObject** %3 to i64*
  %5 = load i64, i64* %4, align 8, !tbaa !199
  %6 = bitcast %union.GCObject* %o to i64*
  store i64 %5, i64* %6, align 8, !tbaa !189
  store %union.GCObject* %o, %union.GCObject** %3, align 8, !tbaa !199
  %7 = getelementptr inbounds %struct.global_State, %struct.global_State* %2, i64 0, i32 3
  %8 = load i8, i8* %7, align 1, !tbaa !179
  %9 = and i8 %8, 3
  %10 = getelementptr inbounds %union.GCObject, %union.GCObject* %o, i64 0, i32 0, i32 2
  store i8 %9, i8* %10, align 1, !tbaa !33
  %11 = getelementptr inbounds %union.GCObject, %union.GCObject* %o, i64 0, i32 0, i32 1
  store i8 %tt, i8* %11, align 1, !tbaa !200
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @luaC_linkupval(%struct.lua_State* nocapture readonly %L, %struct.UpVal* %uv) #0 {
  %1 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 6
  %2 = load %struct.global_State*, %struct.global_State** %1, align 8, !tbaa !17
  %3 = getelementptr inbounds %struct.global_State, %struct.global_State* %2, i64 0, i32 6
  %4 = bitcast %union.GCObject** %3 to i64*
  %5 = load i64, i64* %4, align 8, !tbaa !199
  %6 = bitcast %struct.UpVal* %uv to i64*
  store i64 %5, i64* %6, align 8, !tbaa !189
  %7 = bitcast %union.GCObject** %3 to %struct.UpVal**
  store %struct.UpVal* %uv, %struct.UpVal** %7, align 8, !tbaa !199
  %8 = getelementptr inbounds %struct.UpVal, %struct.UpVal* %uv, i64 0, i32 2
  %9 = load i8, i8* %8, align 1, !tbaa !33
  %10 = and i8 %9, 7
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %12, label %luaC_barrierf.exit

; <label>:12                                      ; preds = %0
  %13 = getelementptr inbounds %struct.global_State, %struct.global_State* %2, i64 0, i32 4
  %14 = load i8, i8* %13, align 1, !tbaa !60
  %15 = icmp eq i8 %14, 1
  br i1 %15, label %16, label %31

; <label>:16                                      ; preds = %12
  %17 = or i8 %9, 4
  store i8 %17, i8* %8, align 1, !tbaa !33
  %18 = getelementptr inbounds %struct.UpVal, %struct.UpVal* %uv, i64 0, i32 3
  %19 = load %struct.lua_TValue*, %struct.lua_TValue** %18, align 8, !tbaa !67
  %20 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %19, i64 0, i32 1
  %21 = load i32, i32* %20, align 4, !tbaa !10
  %22 = icmp sgt i32 %21, 3
  br i1 %22, label %23, label %luaC_barrierf.exit

; <label>:23                                      ; preds = %16
  %24 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %19, i64 0, i32 0, i32 0
  %25 = load %union.GCObject*, %union.GCObject** %24, align 8, !tbaa !25
  %26 = getelementptr inbounds %union.GCObject, %union.GCObject* %25, i64 0, i32 0, i32 2
  %27 = load i8, i8* %26, align 1, !tbaa !33
  %28 = and i8 %27, 3
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %luaC_barrierf.exit, label %30

; <label>:30                                      ; preds = %23
  tail call fastcc void @reallymarkobject(%struct.global_State* %2, %union.GCObject* %25) #1
  br label %luaC_barrierf.exit

; <label>:31                                      ; preds = %12
  %32 = and i8 %9, -8
  %33 = getelementptr inbounds %struct.global_State, %struct.global_State* %2, i64 0, i32 3
  %34 = load i8, i8* %33, align 1, !tbaa !179
  %35 = and i8 %34, 3
  %36 = or i8 %35, %32
  store i8 %36, i8* %8, align 1, !tbaa !33
  br label %luaC_barrierf.exit

luaC_barrierf.exit:                               ; preds = %30, %23, %0, %31, %16
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @GCTM(%struct.lua_State* %L) #0 {
  %1 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 6
  %2 = load %struct.global_State*, %struct.global_State** %1, align 8, !tbaa !17
  %3 = getelementptr inbounds %struct.global_State, %struct.global_State* %2, i64 0, i32 11
  %4 = load %union.GCObject*, %union.GCObject** %3, align 8, !tbaa !190
  %5 = getelementptr inbounds %union.GCObject, %union.GCObject* %4, i64 0, i32 0, i32 0
  %6 = load %union.GCObject*, %union.GCObject** %5, align 8, !tbaa !189
  %7 = icmp eq %union.GCObject* %6, %4
  br i1 %7, label %8, label %9

; <label>:8                                       ; preds = %0
  store %union.GCObject* null, %union.GCObject** %3, align 8, !tbaa !190
  %.pre = bitcast %union.GCObject* %6 to i64*
  br label %13

; <label>:9                                       ; preds = %0
  %10 = bitcast %union.GCObject* %6 to i64*
  %11 = load i64, i64* %10, align 8, !tbaa !201
  %12 = bitcast %union.GCObject* %4 to i64*
  store i64 %11, i64* %12, align 8, !tbaa !189
  br label %13

; <label>:13                                      ; preds = %9, %8
  %.pre-phi = phi i64* [ %10, %9 ], [ %.pre, %8 ]
  %14 = getelementptr inbounds %struct.global_State, %struct.global_State* %2, i64 0, i32 21
  %15 = bitcast %struct.lua_State** %14 to i64**
  %16 = load i64*, i64** %15, align 8, !tbaa !45
  %17 = load i64, i64* %16, align 8, !tbaa !202
  store i64 %17, i64* %.pre-phi, align 8, !tbaa !201
  %18 = bitcast i64* %16 to %union.GCObject**
  store %union.GCObject* %6, %union.GCObject** %18, align 8, !tbaa !202
  %19 = getelementptr inbounds %union.GCObject, %union.GCObject* %6, i64 0, i32 0, i32 2
  %20 = load i8, i8* %19, align 1, !tbaa !33
  %21 = and i8 %20, -8
  %22 = getelementptr inbounds %struct.global_State, %struct.global_State* %2, i64 0, i32 3
  %23 = load i8, i8* %22, align 1, !tbaa !179
  %24 = and i8 %23, 3
  %25 = or i8 %24, %21
  store i8 %25, i8* %19, align 1, !tbaa !33
  %26 = getelementptr inbounds %union.GCObject, %union.GCObject* %6, i64 0, i32 0, i32 4
  %27 = bitcast %struct.lua_TValue** %26 to %struct.Table**
  %28 = load %struct.Table*, %struct.Table** %27, align 8, !tbaa !49
  %29 = icmp eq %struct.Table* %28, null
  br i1 %29, label %.thread, label %30

; <label>:30                                      ; preds = %13
  %31 = getelementptr inbounds %struct.Table, %struct.Table* %28, i64 0, i32 3
  %32 = load i8, i8* %31, align 1, !tbaa !187
  %33 = and i8 %32, 4
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %35, label %.thread

; <label>:35                                      ; preds = %30
  %36 = getelementptr inbounds %struct.global_State, %struct.global_State* %2, i64 0, i32 24, i64 2
  %37 = load %union.TString*, %union.TString** %36, align 8, !tbaa !25
  %38 = tail call %struct.lua_TValue* @luaT_gettm(%struct.Table* %28, i32 2, %union.TString* %37) #1
  %39 = icmp eq %struct.lua_TValue* %38, null
  br i1 %39, label %.thread, label %40

; <label>:40                                      ; preds = %35
  %41 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 18
  %42 = load i8, i8* %41, align 1, !tbaa !145
  %43 = getelementptr inbounds %struct.global_State, %struct.global_State* %2, i64 0, i32 13
  %44 = load i64, i64* %43, align 8, !tbaa !24
  store i8 0, i8* %41, align 1, !tbaa !145
  %45 = getelementptr inbounds %struct.global_State, %struct.global_State* %2, i64 0, i32 14
  %46 = load i64, i64* %45, align 8, !tbaa !23
  %47 = shl i64 %46, 1
  store i64 %47, i64* %43, align 8, !tbaa !24
  %48 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %49 = load %struct.lua_TValue*, %struct.lua_TValue** %48, align 8, !tbaa !1
  %50 = bitcast %struct.lua_TValue* %38 to i64*
  %51 = bitcast %struct.lua_TValue* %49 to i64*
  %52 = load i64, i64* %50, align 8
  store i64 %52, i64* %51, align 8
  %53 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %38, i64 0, i32 1
  %54 = load i32, i32* %53, align 4, !tbaa !10
  %55 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %49, i64 0, i32 1
  store i32 %54, i32* %55, align 4, !tbaa !10
  %56 = load %struct.lua_TValue*, %struct.lua_TValue** %48, align 8, !tbaa !1
  %57 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %56, i64 1, i32 0, i32 0
  store %union.GCObject* %6, %union.GCObject** %57, align 8, !tbaa !25
  %58 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %56, i64 1, i32 1
  store i32 7, i32* %58, align 4, !tbaa !10
  %59 = load %struct.lua_TValue*, %struct.lua_TValue** %48, align 8, !tbaa !1
  %60 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %59, i64 2
  store %struct.lua_TValue* %60, %struct.lua_TValue** %48, align 8, !tbaa !1
  tail call void @luaD_call(%struct.lua_State* %L, %struct.lua_TValue* %59, i32 0) #1
  store i8 %42, i8* %41, align 1, !tbaa !145
  store i64 %44, i64* %43, align 8, !tbaa !24
  br label %.thread

.thread:                                          ; preds = %30, %13, %35, %40
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.GCObject** @sweeplist(%struct.lua_State* %L, %union.GCObject** %p, i64 %count) #0 {
  %1 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 6
  %2 = load %struct.global_State*, %struct.global_State** %1, align 8, !tbaa !17
  %3 = getelementptr inbounds %struct.global_State, %struct.global_State* %2, i64 0, i32 3
  %4 = load i8, i8* %3, align 1, !tbaa !179
  %5 = zext i8 %4 to i32
  %6 = xor i32 %5, 3
  %7 = load %union.GCObject*, %union.GCObject** %p, align 8, !tbaa !25
  %8 = icmp eq %union.GCObject* %7, null
  br i1 %8, label %.critedge, label %.lr.ph

.lr.ph:                                           ; preds = %0
  %9 = getelementptr inbounds %struct.global_State, %struct.global_State* %2, i64 0, i32 6
  %10 = bitcast %union.GCObject** %9 to i64*
  br label %11

; <label>:11                                      ; preds = %.lr.ph, %freeobj.exit.backedge
  %12 = phi %union.GCObject* [ %7, %.lr.ph ], [ %35, %freeobj.exit.backedge ]
  %.03 = phi %union.GCObject** [ %p, %.lr.ph ], [ %.0.be, %freeobj.exit.backedge ]
  %.012 = phi i64 [ %count, %.lr.ph ], [ %13, %freeobj.exit.backedge ]
  %13 = add i64 %.012, -1
  %14 = icmp eq i64 %.012, 0
  br i1 %14, label %.critedge.loopexit, label %15

; <label>:15                                      ; preds = %11
  %16 = getelementptr inbounds %union.GCObject, %union.GCObject* %12, i64 0, i32 0, i32 1
  %17 = load i8, i8* %16, align 1, !tbaa !200
  %18 = icmp eq i8 %17, 8
  br i1 %18, label %19, label %22

; <label>:19                                      ; preds = %15
  %20 = getelementptr inbounds %union.GCObject, %union.GCObject* %12, i64 0, i32 0, i32 24
  %21 = tail call fastcc %union.GCObject** @sweeplist(%struct.lua_State* %L, %union.GCObject** %20, i64 -3)
  br label %22

; <label>:22                                      ; preds = %19, %15
  %23 = getelementptr inbounds %union.GCObject, %union.GCObject* %12, i64 0, i32 0, i32 2
  %24 = load i8, i8* %23, align 1, !tbaa !33
  %25 = zext i8 %24 to i32
  %26 = xor i32 %25, 3
  %27 = and i32 %26, %6
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %37, label %29

; <label>:29                                      ; preds = %22
  %30 = and i8 %24, -8
  %31 = load i8, i8* %3, align 1, !tbaa !179
  %32 = and i8 %31, 3
  %33 = or i8 %32, %30
  store i8 %33, i8* %23, align 1, !tbaa !33
  %34 = getelementptr inbounds %union.GCObject, %union.GCObject* %12, i64 0, i32 0, i32 0
  br label %freeobj.exit.backedge

freeobj.exit.backedge:                            ; preds = %29, %45, %48, %50, %52, %54, %56, %58, %69
  %.0.be = phi %union.GCObject** [ %34, %29 ], [ %.03, %45 ], [ %.03, %48 ], [ %.03, %50 ], [ %.03, %52 ], [ %.03, %54 ], [ %.03, %56 ], [ %.03, %58 ], [ %.03, %69 ]
  %35 = load %union.GCObject*, %union.GCObject** %.0.be, align 8, !tbaa !25
  %36 = icmp eq %union.GCObject* %35, null
  br i1 %36, label %.critedge.loopexit, label %11

; <label>:37                                      ; preds = %22
  %38 = bitcast %union.GCObject* %12 to i64*
  %39 = load i64, i64* %38, align 8, !tbaa !189
  %40 = bitcast %union.GCObject** %.03 to i64*
  store i64 %39, i64* %40, align 8, !tbaa !25
  %41 = load %union.GCObject*, %union.GCObject** %9, align 8, !tbaa !199
  %42 = icmp eq %union.GCObject* %12, %41
  br i1 %42, label %43, label %45

; <label>:43                                      ; preds = %37
  %44 = load i64, i64* %38, align 8, !tbaa !189
  store i64 %44, i64* %10, align 8, !tbaa !199
  br label %45

; <label>:45                                      ; preds = %43, %37
  %46 = load i8, i8* %16, align 1, !tbaa !200
  %47 = zext i8 %46 to i32
  switch i32 %47, label %freeobj.exit.backedge [
    i32 9, label %48
    i32 6, label %50
    i32 10, label %52
    i32 5, label %54
    i32 8, label %56
    i32 4, label %58
    i32 7, label %69
  ]

; <label>:48                                      ; preds = %45
  %49 = bitcast %union.GCObject* %12 to %struct.Proto*
  tail call void bitcast (void (%struct.lua_State.115*, %struct.Proto.120*)* @luaF_freeproto to void (%struct.lua_State*, %struct.Proto*)*)(%struct.lua_State* %L, %struct.Proto* %49) #1
  br label %freeobj.exit.backedge

; <label>:50                                      ; preds = %45
  %51 = bitcast %union.GCObject* %12 to %union.Closure*
  tail call void bitcast (void (%struct.lua_State.115*, %union.Closure.118*)* @luaF_freeclosure to void (%struct.lua_State*, %union.Closure*)*)(%struct.lua_State* %L, %union.Closure* %51) #1
  br label %freeobj.exit.backedge

; <label>:52                                      ; preds = %45
  %53 = bitcast %union.GCObject* %12 to %struct.UpVal*
  tail call void bitcast (void (%struct.lua_State.115*, %struct.UpVal.105*)* @luaF_freeupval to void (%struct.lua_State*, %struct.UpVal*)*)(%struct.lua_State* %L, %struct.UpVal* %53) #1
  br label %freeobj.exit.backedge

; <label>:54                                      ; preds = %45
  %55 = bitcast %union.GCObject* %12 to %struct.Table*
  tail call void @luaH_free(%struct.lua_State* %L, %struct.Table* %55) #1
  br label %freeobj.exit.backedge

; <label>:56                                      ; preds = %45
  %57 = getelementptr inbounds %union.GCObject, %union.GCObject* %12, i64 0, i32 0
  tail call void @luaE_freethread(%struct.lua_State* %L, %struct.lua_State* %57) #1
  br label %freeobj.exit.backedge

; <label>:58                                      ; preds = %45
  %59 = load %struct.global_State*, %struct.global_State** %1, align 8, !tbaa !17
  %60 = getelementptr inbounds %struct.global_State, %struct.global_State* %59, i64 0, i32 0, i32 1
  %61 = load i32, i32* %60, align 4, !tbaa !203
  %62 = add i32 %61, -1
  store i32 %62, i32* %60, align 4, !tbaa !203
  %63 = bitcast %union.GCObject* %12 to i8*
  %64 = getelementptr inbounds %union.GCObject, %union.GCObject* %12, i64 0, i32 0, i32 4
  %65 = bitcast %struct.lua_TValue** %64 to i64*
  %66 = load i64, i64* %65, align 8, !tbaa !40
  %67 = add i64 %66, 25
  %68 = tail call i8* @luaM_realloc_(%struct.lua_State* %L, i8* %63, i64 %67, i64 0) #1
  br label %freeobj.exit.backedge

; <label>:69                                      ; preds = %45
  %70 = bitcast %union.GCObject* %12 to i8*
  %71 = getelementptr inbounds %union.GCObject, %union.GCObject* %12, i64 0, i32 0, i32 6
  %72 = bitcast %struct.global_State** %71 to i64*
  %73 = load i64, i64* %72, align 8, !tbaa !42
  %74 = add i64 %73, 40
  %75 = tail call i8* @luaM_realloc_(%struct.lua_State* %L, i8* %70, i64 %74, i64 0) #1
  br label %freeobj.exit.backedge

.critedge.loopexit:                               ; preds = %11, %freeobj.exit.backedge
  %.0.lcssa.ph = phi %union.GCObject** [ %.0.be, %freeobj.exit.backedge ], [ %.03, %11 ]
  br label %.critedge

.critedge:                                        ; preds = %.critedge.loopexit, %0
  %.0.lcssa = phi %union.GCObject** [ %p, %0 ], [ %.0.lcssa.ph, %.critedge.loopexit ]
  ret %union.GCObject** %.0.lcssa
}

; Function Attrs: nounwind uwtable
define internal fastcc i64 @singlestep(%struct.lua_State* %L) #0 {
  %1 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 6
  %2 = load %struct.global_State*, %struct.global_State** %1, align 8, !tbaa !17
  %3 = getelementptr inbounds %struct.global_State, %struct.global_State* %2, i64 0, i32 4
  %4 = load i8, i8* %3, align 1, !tbaa !60
  %5 = zext i8 %4 to i32
  switch i32 %5, label %255 [
    i32 0, label %6
    i32 1, label %7
    i32 2, label %179
    i32 3, label %201
    i32 4, label %243
  ]

; <label>:6                                       ; preds = %0
  tail call fastcc void @markroot(%struct.lua_State* %L)
  br label %255

; <label>:7                                       ; preds = %0
  %8 = getelementptr inbounds %struct.global_State, %struct.global_State* %2, i64 0, i32 8
  %9 = load %union.GCObject*, %union.GCObject** %8, align 8, !tbaa !204
  %10 = icmp eq %union.GCObject* %9, null
  br i1 %10, label %13, label %11

; <label>:11                                      ; preds = %7
  %12 = tail call fastcc i64 @propagatemark(%struct.global_State* %2)
  br label %255

; <label>:13                                      ; preds = %7
  %14 = getelementptr inbounds %struct.global_State, %struct.global_State* %2, i64 0, i32 22
  %15 = getelementptr inbounds %struct.global_State, %struct.global_State* %2, i64 0, i32 22, i32 4, i32 0, i32 1
  %uv.0.in.2.i.i = bitcast i32* %15 to %struct.UpVal**
  %uv.0.3.i.i = load %struct.UpVal*, %struct.UpVal** %uv.0.in.2.i.i, align 8
  %16 = icmp eq %struct.UpVal* %uv.0.3.i.i, %14
  br i1 %16, label %propagateall.exit.i, label %.lr.ph.i.i.preheader

.lr.ph.i.i.preheader:                             ; preds = %13
  br label %.lr.ph.i.i

.lr.ph.i.i:                                       ; preds = %.lr.ph.i.i.preheader, %35
  %uv.04.i.i = phi %struct.UpVal* [ %uv.0.i.i, %35 ], [ %uv.0.3.i.i, %.lr.ph.i.i.preheader ]
  %17 = getelementptr inbounds %struct.UpVal, %struct.UpVal* %uv.04.i.i, i64 0, i32 2
  %18 = load i8, i8* %17, align 1, !tbaa !33
  %19 = and i8 %18, 7
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %21, label %35

; <label>:21                                      ; preds = %.lr.ph.i.i
  %22 = getelementptr inbounds %struct.UpVal, %struct.UpVal* %uv.04.i.i, i64 0, i32 3
  %23 = load %struct.lua_TValue*, %struct.lua_TValue** %22, align 8, !tbaa !67
  %24 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %23, i64 0, i32 1
  %25 = load i32, i32* %24, align 4, !tbaa !10
  %26 = icmp sgt i32 %25, 3
  br i1 %26, label %27, label %35

; <label>:27                                      ; preds = %21
  %28 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %23, i64 0, i32 0, i32 0
  %29 = load %union.GCObject*, %union.GCObject** %28, align 8, !tbaa !25
  %30 = getelementptr inbounds %union.GCObject, %union.GCObject* %29, i64 0, i32 0, i32 2
  %31 = load i8, i8* %30, align 1, !tbaa !33
  %32 = and i8 %31, 3
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %35, label %34

; <label>:34                                      ; preds = %27
  tail call fastcc void @reallymarkobject(%struct.global_State* %2, %union.GCObject* %29) #1
  br label %35

; <label>:35                                      ; preds = %34, %27, %21, %.lr.ph.i.i
  %36 = getelementptr inbounds %struct.UpVal, %struct.UpVal* %uv.04.i.i, i64 0, i32 4, i32 0, i32 1
  %uv.0.in.i.i = bitcast i32* %36 to %struct.UpVal**
  %uv.0.i.i = load %struct.UpVal*, %struct.UpVal** %uv.0.in.i.i, align 8
  %37 = icmp eq %struct.UpVal* %uv.0.i.i, %14
  br i1 %37, label %remarkupvals.exit.i, label %.lr.ph.i.i

remarkupvals.exit.i:                              ; preds = %35
  %.pre = load %union.GCObject*, %union.GCObject** %8, align 8, !tbaa !204
  %38 = icmp eq %union.GCObject* %.pre, null
  br i1 %38, label %propagateall.exit.i, label %.lr.ph.i.1.i.preheader

.lr.ph.i.1.i.preheader:                           ; preds = %remarkupvals.exit.i
  br label %.lr.ph.i.1.i

.lr.ph.i.1.i:                                     ; preds = %.lr.ph.i.1.i.preheader, %.lr.ph.i.1.i
  %39 = tail call fastcc i64 @propagatemark(%struct.global_State* %2) #1
  %40 = load %union.GCObject*, %union.GCObject** %8, align 8, !tbaa !204
  %41 = icmp eq %union.GCObject* %40, null
  br i1 %41, label %propagateall.exit.i.loopexit, label %.lr.ph.i.1.i

propagateall.exit.i.loopexit:                     ; preds = %.lr.ph.i.1.i
  br label %propagateall.exit.i

propagateall.exit.i:                              ; preds = %propagateall.exit.i.loopexit, %13, %remarkupvals.exit.i
  %42 = getelementptr inbounds %struct.global_State, %struct.global_State* %2, i64 0, i32 10
  %43 = bitcast %union.GCObject** %42 to i64*
  %44 = load i64, i64* %43, align 8, !tbaa !205
  %45 = bitcast %union.GCObject** %8 to i64*
  store i64 %44, i64* %45, align 8, !tbaa !204
  store %union.GCObject* null, %union.GCObject** %42, align 8, !tbaa !205
  %46 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 2
  %47 = load i8, i8* %46, align 1, !tbaa !33
  %48 = and i8 %47, 3
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %52, label %50

; <label>:50                                      ; preds = %propagateall.exit.i
  %51 = bitcast %struct.lua_State* %L to %union.GCObject*
  tail call fastcc void @reallymarkobject(%struct.global_State* %2, %union.GCObject* %51) #1
  br label %52

; <label>:52                                      ; preds = %50, %propagateall.exit.i
  tail call fastcc void @markmt(%struct.global_State* %2) #1
  %53 = load %union.GCObject*, %union.GCObject** %8, align 8, !tbaa !204
  %54 = icmp eq %union.GCObject* %53, null
  br i1 %54, label %propagateall.exit5.i, label %.lr.ph.i.3.i.preheader

.lr.ph.i.3.i.preheader:                           ; preds = %52
  br label %.lr.ph.i.3.i

.lr.ph.i.3.i:                                     ; preds = %.lr.ph.i.3.i.preheader, %.lr.ph.i.3.i
  %55 = tail call fastcc i64 @propagatemark(%struct.global_State* %2) #1
  %56 = load %union.GCObject*, %union.GCObject** %8, align 8, !tbaa !204
  %57 = icmp eq %union.GCObject* %56, null
  br i1 %57, label %propagateall.exit5.i.loopexit, label %.lr.ph.i.3.i

propagateall.exit5.i.loopexit:                    ; preds = %.lr.ph.i.3.i
  br label %propagateall.exit5.i

propagateall.exit5.i:                             ; preds = %propagateall.exit5.i.loopexit, %52
  %58 = getelementptr inbounds %struct.global_State, %struct.global_State* %2, i64 0, i32 9
  %59 = bitcast %union.GCObject** %58 to i64*
  %60 = load i64, i64* %59, align 8, !tbaa !25
  store i64 %60, i64* %45, align 8, !tbaa !204
  store %union.GCObject* null, %union.GCObject** %58, align 8, !tbaa !197
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %propagateall.exit9.i, label %.lr.ph.i.7.i.preheader

.lr.ph.i.7.i.preheader:                           ; preds = %propagateall.exit5.i
  br label %.lr.ph.i.7.i

.lr.ph.i.7.i:                                     ; preds = %.lr.ph.i.7.i.preheader, %.lr.ph.i.7.i
  %62 = tail call fastcc i64 @propagatemark(%struct.global_State* %2) #1
  %63 = load %union.GCObject*, %union.GCObject** %8, align 8, !tbaa !204
  %64 = icmp eq %union.GCObject* %63, null
  br i1 %64, label %propagateall.exit9.i.loopexit, label %.lr.ph.i.7.i

propagateall.exit9.i.loopexit:                    ; preds = %.lr.ph.i.7.i
  br label %propagateall.exit9.i

propagateall.exit9.i:                             ; preds = %propagateall.exit9.i.loopexit, %propagateall.exit5.i
  %65 = tail call i64 @luaC_separateudata(%struct.lua_State* %L, i32 0) #1
  %66 = getelementptr inbounds %struct.global_State, %struct.global_State* %2, i64 0, i32 11
  %67 = load %union.GCObject*, %union.GCObject** %66, align 8, !tbaa !190
  %68 = icmp eq %union.GCObject* %67, null
  br i1 %68, label %marktmu.exit.i, label %.preheader.i.i

.preheader.i.i:                                   ; preds = %propagateall.exit9.i
  %69 = getelementptr inbounds %struct.global_State, %struct.global_State* %2, i64 0, i32 3
  br label %70

; <label>:70                                      ; preds = %70, %.preheader.i.i
  %u.0.i.i = phi %union.GCObject* [ %72, %70 ], [ %67, %.preheader.i.i ]
  %71 = getelementptr inbounds %union.GCObject, %union.GCObject* %u.0.i.i, i64 0, i32 0, i32 0
  %72 = load %union.GCObject*, %union.GCObject** %71, align 8, !tbaa !189
  %73 = getelementptr inbounds %union.GCObject, %union.GCObject* %72, i64 0, i32 0, i32 2
  %74 = load i8, i8* %73, align 1, !tbaa !33
  %75 = and i8 %74, -8
  %76 = load i8, i8* %69, align 1, !tbaa !179
  %77 = and i8 %76, 3
  %78 = or i8 %77, %75
  store i8 %78, i8* %73, align 1, !tbaa !33
  tail call fastcc void @reallymarkobject(%struct.global_State* %2, %union.GCObject* %72) #1
  %79 = load %union.GCObject*, %union.GCObject** %66, align 8, !tbaa !190
  %80 = icmp eq %union.GCObject* %72, %79
  br i1 %80, label %marktmu.exit.i.loopexit, label %70

marktmu.exit.i.loopexit:                          ; preds = %70
  br label %marktmu.exit.i

marktmu.exit.i:                                   ; preds = %marktmu.exit.i.loopexit, %propagateall.exit9.i
  %81 = load %union.GCObject*, %union.GCObject** %8, align 8, !tbaa !204
  %82 = icmp eq %union.GCObject* %81, null
  br i1 %82, label %propagateall.exit13.i, label %.lr.ph.i.11.i.preheader

.lr.ph.i.11.i.preheader:                          ; preds = %marktmu.exit.i
  br label %.lr.ph.i.11.i

.lr.ph.i.11.i:                                    ; preds = %.lr.ph.i.11.i.preheader, %.lr.ph.i.11.i
  %m.01.i.10.i = phi i64 [ %84, %.lr.ph.i.11.i ], [ 0, %.lr.ph.i.11.i.preheader ]
  %83 = tail call fastcc i64 @propagatemark(%struct.global_State* %2) #1
  %84 = add i64 %83, %m.01.i.10.i
  %85 = load %union.GCObject*, %union.GCObject** %8, align 8, !tbaa !204
  %86 = icmp eq %union.GCObject* %85, null
  br i1 %86, label %propagateall.exit13.i.loopexit, label %.lr.ph.i.11.i

propagateall.exit13.i.loopexit:                   ; preds = %.lr.ph.i.11.i
  %.lcssa = phi i64 [ %84, %.lr.ph.i.11.i ]
  br label %propagateall.exit13.i

propagateall.exit13.i:                            ; preds = %propagateall.exit13.i.loopexit, %marktmu.exit.i
  %m.0.lcssa.i.12.i = phi i64 [ 0, %marktmu.exit.i ], [ %.lcssa, %propagateall.exit13.i.loopexit ]
  %87 = load %union.GCObject*, %union.GCObject** %42, align 8, !tbaa !205
  %88 = icmp eq %union.GCObject* %87, null
  br i1 %88, label %atomic.exit, label %.lr.ph10.i.i.preheader

.lr.ph10.i.i.preheader:                           ; preds = %propagateall.exit13.i
  br label %.lr.ph10.i.i

.lr.ph10.i.i:                                     ; preds = %.lr.ph10.i.i.preheader, %164
  %.09.i.i = phi %union.GCObject* [ %167, %164 ], [ %87, %.lr.ph10.i.i.preheader ]
  %89 = bitcast %union.GCObject* %.09.i.i to %struct.Table*
  %90 = getelementptr inbounds %union.GCObject, %union.GCObject* %.09.i.i, i64 0, i32 0, i32 9
  %91 = bitcast %struct.lua_TValue** %90 to i32*
  %92 = load i32, i32* %91, align 4, !tbaa !206
  %93 = getelementptr inbounds %union.GCObject, %union.GCObject* %.09.i.i, i64 0, i32 0, i32 2
  %94 = load i8, i8* %93, align 1, !tbaa !207
  %95 = and i8 %94, 16
  %96 = icmp eq i8 %95, 0
  %97 = icmp eq i32 %92, 0
  %or.cond13.i.i = or i1 %97, %96
  br i1 %or.cond13.i.i, label %.loopexit.i.i, label %.lr.ph.i.14.i

.lr.ph.i.14.i:                                    ; preds = %.lr.ph10.i.i
  %98 = getelementptr inbounds %union.GCObject, %union.GCObject* %.09.i.i, i64 0, i32 0, i32 5
  %.pre.i.i = load %struct.lua_TValue*, %struct.lua_TValue** %98, align 8, !tbaa !208
  br label %99

; <label>:99                                      ; preds = %iscleared.exit.thread.backedge.i.i, %.lr.ph.i.14.i
  %.in.i.i = phi i32 [ %92, %.lr.ph.i.14.i ], [ %100, %iscleared.exit.thread.backedge.i.i ]
  %100 = add nsw i32 %.in.i.i, -1
  %101 = sext i32 %100 to i64
  %102 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %.pre.i.i, i64 %101, i32 1
  %103 = load i32, i32* %102, align 4, !tbaa !10
  %104 = icmp sgt i32 %103, 3
  br i1 %104, label %105, label %iscleared.exit.thread.backedge.i.i

; <label>:105                                     ; preds = %99
  %106 = icmp eq i32 %103, 4
  %107 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %.pre.i.i, i64 %101, i32 0, i32 0
  %108 = load %union.GCObject*, %union.GCObject** %107, align 8, !tbaa !25
  %109 = getelementptr inbounds %union.GCObject, %union.GCObject* %108, i64 0, i32 0, i32 2
  %110 = load i8, i8* %109, align 1, !tbaa !76
  br i1 %106, label %111, label %113

; <label>:111                                     ; preds = %105
  %112 = and i8 %110, -4
  store i8 %112, i8* %109, align 1, !tbaa !209
  br label %iscleared.exit.thread.backedge.i.i

; <label>:113                                     ; preds = %105
  %114 = and i8 %110, 3
  %115 = icmp eq i8 %114, 0
  br i1 %115, label %116, label %.critedge.i.i

; <label>:116                                     ; preds = %113
  %117 = icmp eq i32 %103, 7
  %118 = and i8 %110, 8
  %119 = icmp ne i8 %118, 0
  %or.cond.i.i = and i1 %117, %119
  br i1 %or.cond.i.i, label %.critedge.i.i, label %iscleared.exit.thread.backedge.i.i

.critedge.i.i:                                    ; preds = %116, %113
  store i32 0, i32* %102, align 4, !tbaa !10
  br label %iscleared.exit.thread.backedge.i.i

iscleared.exit.thread.backedge.i.i:               ; preds = %.critedge.i.i, %116, %111, %99
  %120 = icmp eq i32 %100, 0
  br i1 %120, label %.loopexit.i.i.loopexit, label %99

.loopexit.i.i.loopexit:                           ; preds = %iscleared.exit.thread.backedge.i.i
  br label %.loopexit.i.i

.loopexit.i.i:                                    ; preds = %.loopexit.i.i.loopexit, %.lr.ph10.i.i
  %121 = getelementptr inbounds %struct.Table, %struct.Table* %89, i64 0, i32 4
  %122 = load i8, i8* %121, align 1, !tbaa !210
  %123 = zext i8 %122 to i32
  %124 = shl i32 1, %123
  %125 = getelementptr inbounds %union.GCObject, %union.GCObject* %.09.i.i, i64 0, i32 0, i32 6
  %126 = bitcast %struct.global_State** %125 to %struct.Node**
  %.pre12.i.i = load %struct.Node*, %struct.Node** %126, align 8, !tbaa !211
  br label %127

; <label>:127                                     ; preds = %removeentry.exit.backedge.i.i, %.loopexit.i.i
  %.in.11.i.i = phi i32 [ %124, %.loopexit.i.i ], [ %128, %removeentry.exit.backedge.i.i ]
  %128 = add nsw i32 %.in.11.i.i, -1
  %129 = sext i32 %128 to i64
  %130 = getelementptr inbounds %struct.Node, %struct.Node* %.pre12.i.i, i64 %129, i32 0, i32 1
  %131 = load i32, i32* %130, align 4, !tbaa !10
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %removeentry.exit.backedge.i.i, label %134

removeentry.exit.backedge.i.i:                    ; preds = %163, %.critedge5.i.i, %159, %154, %iscleared.exit4.thread.i.i, %127
  %133 = icmp eq i32 %128, 0
  br i1 %133, label %164, label %127

; <label>:134                                     ; preds = %127
  %135 = getelementptr inbounds %struct.Node, %struct.Node* %.pre12.i.i, i64 %129, i32 1, i32 0, i32 1
  %136 = load i32, i32* %135, align 4, !tbaa !10
  %137 = icmp sgt i32 %136, 3
  br i1 %137, label %138, label %iscleared.exit4.thread.i.i

; <label>:138                                     ; preds = %134
  %139 = icmp eq i32 %136, 4
  %140 = getelementptr inbounds %struct.Node, %struct.Node* %.pre12.i.i, i64 %129, i32 1, i32 0, i32 0, i32 0
  %141 = load %union.GCObject*, %union.GCObject** %140, align 8, !tbaa !25
  %142 = getelementptr inbounds %union.GCObject, %union.GCObject* %141, i64 0, i32 0, i32 2
  %143 = load i8, i8* %142, align 1, !tbaa !76
  br i1 %139, label %144, label %iscleared.exit4.i.i

; <label>:144                                     ; preds = %138
  %145 = and i8 %143, -4
  store i8 %145, i8* %142, align 1, !tbaa !209
  br label %iscleared.exit4.thread.i.i

iscleared.exit4.i.i:                              ; preds = %138
  %146 = and i8 %143, 3
  %not..i.i = icmp eq i8 %146, 0
  br i1 %not..i.i, label %iscleared.exit4.thread.i.i, label %.critedge5.thread.i.i

.critedge5.thread.i.i:                            ; preds = %iscleared.exit4.i.i
  store i32 0, i32* %130, align 4, !tbaa !10
  br label %163

iscleared.exit4.thread.i.i:                       ; preds = %iscleared.exit4.i.i, %144, %134
  %147 = icmp sgt i32 %131, 3
  br i1 %147, label %148, label %removeentry.exit.backedge.i.i

; <label>:148                                     ; preds = %iscleared.exit4.thread.i.i
  %149 = icmp eq i32 %131, 4
  %150 = getelementptr inbounds %struct.Node, %struct.Node* %.pre12.i.i, i64 %129, i32 0, i32 0, i32 0
  %151 = load %union.GCObject*, %union.GCObject** %150, align 8, !tbaa !25
  %152 = getelementptr inbounds %union.GCObject, %union.GCObject* %151, i64 0, i32 0, i32 2
  %153 = load i8, i8* %152, align 1, !tbaa !76
  br i1 %149, label %154, label %156

; <label>:154                                     ; preds = %148
  %155 = and i8 %153, -4
  store i8 %155, i8* %152, align 1, !tbaa !209
  br label %removeentry.exit.backedge.i.i

; <label>:156                                     ; preds = %148
  %157 = and i8 %153, 3
  %158 = icmp eq i8 %157, 0
  br i1 %158, label %159, label %.critedge5.i.i

; <label>:159                                     ; preds = %156
  %160 = icmp eq i32 %131, 7
  %161 = and i8 %153, 8
  %162 = icmp ne i8 %161, 0
  %or.cond8.i.i = and i1 %160, %162
  br i1 %or.cond8.i.i, label %.critedge5.i.i, label %removeentry.exit.backedge.i.i

.critedge5.i.i:                                   ; preds = %159, %156
  store i32 0, i32* %130, align 4, !tbaa !10
  br i1 %137, label %163, label %removeentry.exit.backedge.i.i

; <label>:163                                     ; preds = %.critedge5.i.i, %.critedge5.thread.i.i
  store i32 11, i32* %135, align 4, !tbaa !212
  br label %removeentry.exit.backedge.i.i

; <label>:164                                     ; preds = %removeentry.exit.backedge.i.i
  %165 = getelementptr inbounds %union.GCObject, %union.GCObject* %.09.i.i, i64 0, i32 0, i32 8
  %166 = bitcast i32** %165 to %union.GCObject**
  %167 = load %union.GCObject*, %union.GCObject** %166, align 8, !tbaa !198
  %168 = icmp eq %union.GCObject* %167, null
  br i1 %168, label %atomic.exit.loopexit, label %.lr.ph10.i.i

atomic.exit.loopexit:                             ; preds = %164
  br label %atomic.exit

atomic.exit:                                      ; preds = %atomic.exit.loopexit, %propagateall.exit13.i
  %169 = getelementptr inbounds %struct.global_State, %struct.global_State* %2, i64 0, i32 3
  %170 = load i8, i8* %169, align 1, !tbaa !179
  %171 = xor i8 %170, 3
  store i8 %171, i8* %169, align 1, !tbaa !179
  %172 = getelementptr inbounds %struct.global_State, %struct.global_State* %2, i64 0, i32 5
  store i32 0, i32* %172, align 4, !tbaa !195
  %173 = getelementptr inbounds %struct.global_State, %struct.global_State* %2, i64 0, i32 6
  %174 = getelementptr inbounds %struct.global_State, %struct.global_State* %2, i64 0, i32 7
  store %union.GCObject** %173, %union.GCObject*** %174, align 8, !tbaa !196
  store i8 2, i8* %3, align 1, !tbaa !60
  %175 = getelementptr inbounds %struct.global_State, %struct.global_State* %2, i64 0, i32 14
  %176 = load i64, i64* %175, align 8, !tbaa !23
  %sum = add i64 %m.0.lcssa.i.12.i, %65
  %177 = sub i64 %176, %sum
  %178 = getelementptr inbounds %struct.global_State, %struct.global_State* %2, i64 0, i32 15
  store i64 %177, i64* %178, align 8, !tbaa !194
  br label %255

; <label>:179                                     ; preds = %0
  %180 = getelementptr inbounds %struct.global_State, %struct.global_State* %2, i64 0, i32 14
  %181 = load i64, i64* %180, align 8, !tbaa !23
  %182 = getelementptr inbounds %struct.global_State, %struct.global_State* %2, i64 0, i32 5
  %183 = load i32, i32* %182, align 4, !tbaa !195
  %184 = add nsw i32 %183, 1
  store i32 %184, i32* %182, align 4, !tbaa !195
  %185 = sext i32 %183 to i64
  %186 = getelementptr inbounds %struct.global_State, %struct.global_State* %2, i64 0, i32 0, i32 0
  %187 = load %union.GCObject**, %union.GCObject*** %186, align 8, !tbaa !192
  %188 = getelementptr inbounds %union.GCObject*, %union.GCObject** %187, i64 %185
  %189 = tail call fastcc %union.GCObject** @sweeplist(%struct.lua_State* %L, %union.GCObject** %188, i64 -3)
  %190 = load i32, i32* %182, align 4, !tbaa !195
  %191 = getelementptr inbounds %struct.global_State, %struct.global_State* %2, i64 0, i32 0, i32 2
  %192 = load i32, i32* %191, align 4, !tbaa !191
  %193 = icmp slt i32 %190, %192
  br i1 %193, label %195, label %194

; <label>:194                                     ; preds = %179
  store i8 3, i8* %3, align 1, !tbaa !60
  br label %195

; <label>:195                                     ; preds = %179, %194
  %196 = load i64, i64* %180, align 8, !tbaa !23
  %197 = getelementptr inbounds %struct.global_State, %struct.global_State* %2, i64 0, i32 15
  %198 = load i64, i64* %197, align 8, !tbaa !194
  %199 = sub i64 %196, %181
  %200 = add i64 %199, %198
  store i64 %200, i64* %197, align 8, !tbaa !194
  br label %255

; <label>:201                                     ; preds = %0
  %202 = getelementptr inbounds %struct.global_State, %struct.global_State* %2, i64 0, i32 14
  %203 = load i64, i64* %202, align 8, !tbaa !23
  %204 = getelementptr inbounds %struct.global_State, %struct.global_State* %2, i64 0, i32 7
  %205 = load %union.GCObject**, %union.GCObject*** %204, align 8, !tbaa !196
  %206 = tail call fastcc %union.GCObject** @sweeplist(%struct.lua_State* %L, %union.GCObject** %205, i64 40)
  store %union.GCObject** %206, %union.GCObject*** %204, align 8, !tbaa !196
  %207 = load %union.GCObject*, %union.GCObject** %206, align 8, !tbaa !25
  %208 = icmp eq %union.GCObject* %207, null
  br i1 %208, label %209, label %237

; <label>:209                                     ; preds = %201
  %210 = load %struct.global_State*, %struct.global_State** %1, align 8, !tbaa !17
  %211 = getelementptr inbounds %struct.global_State, %struct.global_State* %210, i64 0, i32 0, i32 1
  %212 = load i32, i32* %211, align 4, !tbaa !203
  %213 = getelementptr inbounds %struct.global_State, %struct.global_State* %210, i64 0, i32 0, i32 2
  %214 = load i32, i32* %213, align 4, !tbaa !191
  %215 = sdiv i32 %214, 4
  %216 = icmp ult i32 %212, %215
  %217 = icmp sgt i32 %214, 64
  %or.cond.i = and i1 %217, %216
  br i1 %or.cond.i, label %218, label %220

; <label>:218                                     ; preds = %209
  %219 = sdiv i32 %214, 2
  tail call void @luaS_resize(%struct.lua_State* %L, i32 %219) #1
  br label %220

; <label>:220                                     ; preds = %218, %209
  %221 = getelementptr inbounds %struct.global_State, %struct.global_State* %210, i64 0, i32 12
  %222 = getelementptr inbounds %struct.global_State, %struct.global_State* %210, i64 0, i32 12, i32 2
  %223 = load i64, i64* %222, align 8, !tbaa !158
  %224 = icmp ugt i64 %223, 64
  br i1 %224, label %225, label %checkSizes.exit

; <label>:225                                     ; preds = %220
  %226 = lshr i64 %223, 1
  %227 = add nuw i64 %226, 1
  %228 = icmp ult i64 %227, -2
  br i1 %228, label %229, label %233

; <label>:229                                     ; preds = %225
  %230 = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %221, i64 0, i32 0
  %231 = load i8*, i8** %230, align 8, !tbaa !157
  %232 = tail call i8* @luaM_realloc_(%struct.lua_State* %L, i8* %231, i64 %223, i64 %226) #1
  br label %235

; <label>:233                                     ; preds = %225
  %234 = tail call i8* @luaM_toobig(%struct.lua_State* %L) #1
  %.pre.i = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %221, i64 0, i32 0
  br label %235

; <label>:235                                     ; preds = %233, %229
  %.pre-phi.i = phi i8** [ %.pre.i, %233 ], [ %230, %229 ]
  %236 = phi i8* [ %234, %233 ], [ %232, %229 ]
  store i8* %236, i8** %.pre-phi.i, align 8, !tbaa !157
  store i64 %226, i64* %222, align 8, !tbaa !158
  br label %checkSizes.exit

checkSizes.exit:                                  ; preds = %220, %235
  store i8 4, i8* %3, align 1, !tbaa !60
  br label %237

; <label>:237                                     ; preds = %checkSizes.exit, %201
  %238 = load i64, i64* %202, align 8, !tbaa !23
  %239 = getelementptr inbounds %struct.global_State, %struct.global_State* %2, i64 0, i32 15
  %240 = load i64, i64* %239, align 8, !tbaa !194
  %241 = sub i64 %238, %203
  %242 = add i64 %241, %240
  store i64 %242, i64* %239, align 8, !tbaa !194
  br label %255

; <label>:243                                     ; preds = %0
  %244 = getelementptr inbounds %struct.global_State, %struct.global_State* %2, i64 0, i32 11
  %245 = load %union.GCObject*, %union.GCObject** %244, align 8, !tbaa !190
  %246 = icmp eq %union.GCObject* %245, null
  br i1 %246, label %253, label %247

; <label>:247                                     ; preds = %243
  tail call fastcc void @GCTM(%struct.lua_State* %L)
  %248 = getelementptr inbounds %struct.global_State, %struct.global_State* %2, i64 0, i32 15
  %249 = load i64, i64* %248, align 8, !tbaa !194
  %250 = icmp ugt i64 %249, 100
  br i1 %250, label %251, label %255

; <label>:251                                     ; preds = %247
  %252 = add i64 %249, -100
  store i64 %252, i64* %248, align 8, !tbaa !194
  br label %255

; <label>:253                                     ; preds = %243
  store i8 0, i8* %3, align 1, !tbaa !60
  %254 = getelementptr inbounds %struct.global_State, %struct.global_State* %2, i64 0, i32 16
  store i64 0, i64* %254, align 8, !tbaa !193
  br label %255

; <label>:255                                     ; preds = %0, %247, %251, %253, %237, %195, %atomic.exit, %11, %6
  %.0 = phi i64 [ 0, %253 ], [ 400, %237 ], [ 10, %195 ], [ %12, %11 ], [ 0, %atomic.exit ], [ 0, %6 ], [ 100, %251 ], [ 100, %247 ], [ 0, %0 ]
  ret i64 %.0
}

; Function Attrs: nounwind uwtable
define internal fastcc void @markroot(%struct.lua_State* nocapture readonly %L) #0 {
  %1 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 6
  %2 = load %struct.global_State*, %struct.global_State** %1, align 8, !tbaa !17
  %3 = getelementptr inbounds %struct.global_State, %struct.global_State* %2, i64 0, i32 8
  %4 = getelementptr inbounds %struct.global_State, %struct.global_State* %2, i64 0, i32 21
  %5 = bitcast %struct.lua_State** %4 to %union.GCObject**
  %6 = bitcast %union.GCObject** %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* %6, i8 0, i64 24, i32 8, i1 false)
  %7 = load %union.GCObject*, %union.GCObject** %5, align 8, !tbaa !45
  %8 = getelementptr inbounds %union.GCObject, %union.GCObject* %7, i64 0, i32 0, i32 2
  %9 = load i8, i8* %8, align 1, !tbaa !33
  %10 = and i8 %9, 3
  %11 = icmp eq i8 %10, 0
  %12 = getelementptr inbounds %union.GCObject, %union.GCObject* %7, i64 0, i32 0
  br i1 %11, label %14, label %13

; <label>:13                                      ; preds = %0
  tail call fastcc void @reallymarkobject(%struct.global_State* %2, %union.GCObject* %7)
  %.pre = load %struct.lua_State*, %struct.lua_State** %4, align 8, !tbaa !45
  br label %14

; <label>:14                                      ; preds = %0, %13
  %15 = phi %struct.lua_State* [ %12, %0 ], [ %.pre, %13 ]
  %16 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %15, i64 0, i32 22, i32 1
  %17 = load i32, i32* %16, align 4, !tbaa !10
  %18 = icmp sgt i32 %17, 3
  br i1 %18, label %19, label %27

; <label>:19                                      ; preds = %14
  %20 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %15, i64 0, i32 22, i32 0, i32 0
  %21 = load %union.GCObject*, %union.GCObject** %20, align 8, !tbaa !25
  %22 = getelementptr inbounds %union.GCObject, %union.GCObject* %21, i64 0, i32 0, i32 2
  %23 = load i8, i8* %22, align 1, !tbaa !33
  %24 = and i8 %23, 3
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %27, label %26

; <label>:26                                      ; preds = %19
  tail call fastcc void @reallymarkobject(%struct.global_State* %2, %union.GCObject* %21)
  br label %27

; <label>:27                                      ; preds = %19, %26, %14
  %28 = load %struct.global_State*, %struct.global_State** %1, align 8, !tbaa !17
  %29 = getelementptr inbounds %struct.global_State, %struct.global_State* %28, i64 0, i32 20, i32 1
  %30 = load i32, i32* %29, align 4, !tbaa !10
  %31 = icmp sgt i32 %30, 3
  br i1 %31, label %32, label %40

; <label>:32                                      ; preds = %27
  %33 = getelementptr inbounds %struct.global_State, %struct.global_State* %28, i64 0, i32 20, i32 0, i32 0
  %34 = load %union.GCObject*, %union.GCObject** %33, align 8, !tbaa !25
  %35 = getelementptr inbounds %union.GCObject, %union.GCObject* %34, i64 0, i32 0, i32 2
  %36 = load i8, i8* %35, align 1, !tbaa !33
  %37 = and i8 %36, 3
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %40, label %39

; <label>:39                                      ; preds = %32
  tail call fastcc void @reallymarkobject(%struct.global_State* %2, %union.GCObject* %34)
  br label %40

; <label>:40                                      ; preds = %32, %39, %27
  tail call fastcc void @markmt(%struct.global_State* %2)
  %41 = getelementptr inbounds %struct.global_State, %struct.global_State* %2, i64 0, i32 4
  store i8 1, i8* %41, align 1, !tbaa !60
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @reallymarkobject(%struct.global_State* %g, %union.GCObject* %o) #0 {
  %.phi.trans.insert = getelementptr inbounds %union.GCObject, %union.GCObject* %o, i64 0, i32 0, i32 2
  %.pre = load i8, i8* %.phi.trans.insert, align 1, !tbaa !33
  br label %tailrecurse

tailrecurse:                                      ; preds = %20, %0
  %1 = phi i8 [ %.pre, %0 ], [ %25, %20 ]
  %o.tr = phi %union.GCObject* [ %o, %0 ], [ %23, %20 ]
  %2 = getelementptr inbounds %union.GCObject, %union.GCObject* %o.tr, i64 0, i32 0, i32 2
  %3 = and i8 %1, -4
  store i8 %3, i8* %2, align 1, !tbaa !33
  %4 = getelementptr inbounds %union.GCObject, %union.GCObject* %o.tr, i64 0, i32 0, i32 1
  %5 = load i8, i8* %4, align 1, !tbaa !200
  %6 = zext i8 %5 to i32
  switch i32 %6, label %.loopexit.loopexit [
    i32 9, label %68
    i32 7, label %7
    i32 10, label %28
    i32 6, label %50
    i32 5, label %56
    i32 8, label %62
  ]

; <label>:7                                       ; preds = %tailrecurse
  %8 = getelementptr inbounds %union.GCObject, %union.GCObject* %o.tr, i64 0, i32 0, i32 4
  %9 = bitcast %struct.lua_TValue** %8 to %struct.Table**
  %10 = load %struct.Table*, %struct.Table** %9, align 8, !tbaa !49
  %11 = or i8 %3, 4
  store i8 %11, i8* %2, align 1, !tbaa !33
  %12 = icmp eq %struct.Table* %10, null
  br i1 %12, label %20, label %13

; <label>:13                                      ; preds = %7
  %14 = getelementptr inbounds %struct.Table, %struct.Table* %10, i64 0, i32 2
  %15 = load i8, i8* %14, align 1, !tbaa !33
  %16 = and i8 %15, 3
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %20, label %18

; <label>:18                                      ; preds = %13
  %19 = bitcast %struct.Table* %10 to %union.GCObject*
  tail call fastcc void @reallymarkobject(%struct.global_State* %g, %union.GCObject* %19)
  br label %20

; <label>:20                                      ; preds = %13, %7, %18
  %21 = getelementptr inbounds %union.GCObject, %union.GCObject* %o.tr, i64 0, i32 0, i32 5
  %22 = bitcast %struct.lua_TValue** %21 to %union.GCObject**
  %23 = load %union.GCObject*, %union.GCObject** %22, align 8, !tbaa !46
  %24 = getelementptr inbounds %union.GCObject, %union.GCObject* %23, i64 0, i32 0, i32 2
  %25 = load i8, i8* %24, align 1, !tbaa !33
  %26 = and i8 %25, 3
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %.loopexit.loopexit, label %tailrecurse

; <label>:28                                      ; preds = %tailrecurse
  %.lcssa58 = phi i8* [ %2, %tailrecurse ]
  %o.tr.lcssa53 = phi %union.GCObject* [ %o.tr, %tailrecurse ]
  %29 = getelementptr inbounds %union.GCObject, %union.GCObject* %o.tr.lcssa53, i64 0, i32 0, i32 4
  %30 = load %struct.lua_TValue*, %struct.lua_TValue** %29, align 8, !tbaa !67
  %31 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %30, i64 0, i32 1
  %32 = load i32, i32* %31, align 4, !tbaa !10
  %33 = icmp sgt i32 %32, 3
  br i1 %33, label %34, label %42

; <label>:34                                      ; preds = %28
  %35 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %30, i64 0, i32 0, i32 0
  %36 = load %union.GCObject*, %union.GCObject** %35, align 8, !tbaa !25
  %37 = getelementptr inbounds %union.GCObject, %union.GCObject* %36, i64 0, i32 0, i32 2
  %38 = load i8, i8* %37, align 1, !tbaa !33
  %39 = and i8 %38, 3
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %42, label %41

; <label>:41                                      ; preds = %34
  tail call fastcc void @reallymarkobject(%struct.global_State* %g, %union.GCObject* %36)
  %.pre21 = load %struct.lua_TValue*, %struct.lua_TValue** %29, align 8, !tbaa !67
  br label %42

; <label>:42                                      ; preds = %34, %41, %28
  %43 = phi %struct.lua_TValue* [ %30, %34 ], [ %.pre21, %41 ], [ %30, %28 ]
  %44 = getelementptr inbounds %union.GCObject, %union.GCObject* %o.tr.lcssa53, i64 0, i32 0, i32 5
  %45 = bitcast %struct.lua_TValue** %44 to %struct.lua_TValue*
  %46 = icmp eq %struct.lua_TValue* %43, %45
  br i1 %46, label %47, label %.loopexit

; <label>:47                                      ; preds = %42
  %48 = load i8, i8* %.lcssa58, align 1, !tbaa !33
  %49 = or i8 %48, 4
  store i8 %49, i8* %.lcssa58, align 1, !tbaa !33
  br label %.loopexit

; <label>:50                                      ; preds = %tailrecurse
  %o.tr.lcssa54 = phi %union.GCObject* [ %o.tr, %tailrecurse ]
  %51 = getelementptr inbounds %struct.global_State, %struct.global_State* %g, i64 0, i32 8
  %52 = bitcast %union.GCObject** %51 to i64*
  %53 = load i64, i64* %52, align 8, !tbaa !204
  %54 = getelementptr inbounds %union.GCObject, %union.GCObject* %o.tr.lcssa54, i64 0, i32 0, i32 4
  %55 = bitcast %struct.lua_TValue** %54 to i64*
  store i64 %53, i64* %55, align 8, !tbaa !214
  store %union.GCObject* %o.tr.lcssa54, %union.GCObject** %51, align 8, !tbaa !204
  br label %.loopexit

; <label>:56                                      ; preds = %tailrecurse
  %o.tr.lcssa55 = phi %union.GCObject* [ %o.tr, %tailrecurse ]
  %57 = getelementptr inbounds %struct.global_State, %struct.global_State* %g, i64 0, i32 8
  %58 = bitcast %union.GCObject** %57 to i64*
  %59 = load i64, i64* %58, align 8, !tbaa !204
  %60 = getelementptr inbounds %union.GCObject, %union.GCObject* %o.tr.lcssa55, i64 0, i32 0, i32 8
  %61 = bitcast i32** %60 to i64*
  store i64 %59, i64* %61, align 8, !tbaa !198
  store %union.GCObject* %o.tr.lcssa55, %union.GCObject** %57, align 8, !tbaa !204
  br label %.loopexit

; <label>:62                                      ; preds = %tailrecurse
  %o.tr.lcssa56 = phi %union.GCObject* [ %o.tr, %tailrecurse ]
  %63 = getelementptr inbounds %struct.global_State, %struct.global_State* %g, i64 0, i32 8
  %64 = bitcast %union.GCObject** %63 to i64*
  %65 = load i64, i64* %64, align 8, !tbaa !204
  %66 = getelementptr inbounds %union.GCObject, %union.GCObject* %o.tr.lcssa56, i64 0, i32 0, i32 25
  %67 = bitcast %union.GCObject** %66 to i64*
  store i64 %65, i64* %67, align 8, !tbaa !215
  store %union.GCObject* %o.tr.lcssa56, %union.GCObject** %63, align 8, !tbaa !204
  br label %.loopexit

; <label>:68                                      ; preds = %tailrecurse
  %o.tr.lcssa52 = phi %union.GCObject* [ %o.tr, %tailrecurse ]
  %69 = getelementptr inbounds %struct.global_State, %struct.global_State* %g, i64 0, i32 8
  %70 = bitcast %union.GCObject** %69 to i64*
  %71 = load i64, i64* %70, align 8, !tbaa !204
  %72 = getelementptr inbounds %union.GCObject, %union.GCObject* %o.tr.lcssa52, i64 0, i32 0, i32 19
  %73 = bitcast i32* %72 to i64*
  store i64 %71, i64* %73, align 8, !tbaa !216
  store %union.GCObject* %o.tr.lcssa52, %union.GCObject** %69, align 8, !tbaa !204
  br label %.loopexit

.loopexit.loopexit:                               ; preds = %tailrecurse, %20
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %42, %47, %68, %62, %56, %50
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @markmt(%struct.global_State* %g) #0 {
  %1 = getelementptr inbounds %struct.global_State, %struct.global_State* %g, i64 0, i32 23, i64 0
  %2 = load %struct.Table*, %struct.Table** %1, align 8, !tbaa !25
  %3 = icmp eq %struct.Table* %2, null
  br i1 %3, label %11, label %4

; <label>:4                                       ; preds = %0
  %5 = getelementptr inbounds %struct.Table, %struct.Table* %2, i64 0, i32 2
  %6 = load i8, i8* %5, align 1, !tbaa !33
  %7 = and i8 %6, 3
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %11, label %9

; <label>:9                                       ; preds = %4
  %10 = bitcast %struct.Table* %2 to %union.GCObject*
  tail call fastcc void @reallymarkobject(%struct.global_State* %g, %union.GCObject* %10)
  br label %11

; <label>:11                                      ; preds = %4, %0, %9
  %12 = getelementptr inbounds %struct.global_State, %struct.global_State* %g, i64 0, i32 23, i64 1
  %13 = load %struct.Table*, %struct.Table** %12, align 8, !tbaa !25
  %14 = icmp eq %struct.Table* %13, null
  br i1 %14, label %22, label %15

; <label>:15                                      ; preds = %11
  %16 = getelementptr inbounds %struct.Table, %struct.Table* %13, i64 0, i32 2
  %17 = load i8, i8* %16, align 1, !tbaa !33
  %18 = and i8 %17, 3
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %22, label %20

; <label>:20                                      ; preds = %15
  %21 = bitcast %struct.Table* %13 to %union.GCObject*
  tail call fastcc void @reallymarkobject(%struct.global_State* %g, %union.GCObject* %21)
  br label %22

; <label>:22                                      ; preds = %20, %15, %11
  %23 = getelementptr inbounds %struct.global_State, %struct.global_State* %g, i64 0, i32 23, i64 2
  %24 = load %struct.Table*, %struct.Table** %23, align 8, !tbaa !25
  %25 = icmp eq %struct.Table* %24, null
  br i1 %25, label %33, label %26

; <label>:26                                      ; preds = %22
  %27 = getelementptr inbounds %struct.Table, %struct.Table* %24, i64 0, i32 2
  %28 = load i8, i8* %27, align 1, !tbaa !33
  %29 = and i8 %28, 3
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %33, label %31

; <label>:31                                      ; preds = %26
  %32 = bitcast %struct.Table* %24 to %union.GCObject*
  tail call fastcc void @reallymarkobject(%struct.global_State* %g, %union.GCObject* %32)
  br label %33

; <label>:33                                      ; preds = %31, %26, %22
  %34 = getelementptr inbounds %struct.global_State, %struct.global_State* %g, i64 0, i32 23, i64 3
  %35 = load %struct.Table*, %struct.Table** %34, align 8, !tbaa !25
  %36 = icmp eq %struct.Table* %35, null
  br i1 %36, label %44, label %37

; <label>:37                                      ; preds = %33
  %38 = getelementptr inbounds %struct.Table, %struct.Table* %35, i64 0, i32 2
  %39 = load i8, i8* %38, align 1, !tbaa !33
  %40 = and i8 %39, 3
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %44, label %42

; <label>:42                                      ; preds = %37
  %43 = bitcast %struct.Table* %35 to %union.GCObject*
  tail call fastcc void @reallymarkobject(%struct.global_State* %g, %union.GCObject* %43)
  br label %44

; <label>:44                                      ; preds = %42, %37, %33
  %45 = getelementptr inbounds %struct.global_State, %struct.global_State* %g, i64 0, i32 23, i64 4
  %46 = load %struct.Table*, %struct.Table** %45, align 8, !tbaa !25
  %47 = icmp eq %struct.Table* %46, null
  br i1 %47, label %55, label %48

; <label>:48                                      ; preds = %44
  %49 = getelementptr inbounds %struct.Table, %struct.Table* %46, i64 0, i32 2
  %50 = load i8, i8* %49, align 1, !tbaa !33
  %51 = and i8 %50, 3
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %55, label %53

; <label>:53                                      ; preds = %48
  %54 = bitcast %struct.Table* %46 to %union.GCObject*
  tail call fastcc void @reallymarkobject(%struct.global_State* %g, %union.GCObject* %54)
  br label %55

; <label>:55                                      ; preds = %53, %48, %44
  %56 = getelementptr inbounds %struct.global_State, %struct.global_State* %g, i64 0, i32 23, i64 5
  %57 = load %struct.Table*, %struct.Table** %56, align 8, !tbaa !25
  %58 = icmp eq %struct.Table* %57, null
  br i1 %58, label %66, label %59

; <label>:59                                      ; preds = %55
  %60 = getelementptr inbounds %struct.Table, %struct.Table* %57, i64 0, i32 2
  %61 = load i8, i8* %60, align 1, !tbaa !33
  %62 = and i8 %61, 3
  %63 = icmp eq i8 %62, 0
  br i1 %63, label %66, label %64

; <label>:64                                      ; preds = %59
  %65 = bitcast %struct.Table* %57 to %union.GCObject*
  tail call fastcc void @reallymarkobject(%struct.global_State* %g, %union.GCObject* %65)
  br label %66

; <label>:66                                      ; preds = %64, %59, %55
  %67 = getelementptr inbounds %struct.global_State, %struct.global_State* %g, i64 0, i32 23, i64 6
  %68 = load %struct.Table*, %struct.Table** %67, align 8, !tbaa !25
  %69 = icmp eq %struct.Table* %68, null
  br i1 %69, label %77, label %70

; <label>:70                                      ; preds = %66
  %71 = getelementptr inbounds %struct.Table, %struct.Table* %68, i64 0, i32 2
  %72 = load i8, i8* %71, align 1, !tbaa !33
  %73 = and i8 %72, 3
  %74 = icmp eq i8 %73, 0
  br i1 %74, label %77, label %75

; <label>:75                                      ; preds = %70
  %76 = bitcast %struct.Table* %68 to %union.GCObject*
  tail call fastcc void @reallymarkobject(%struct.global_State* %g, %union.GCObject* %76)
  br label %77

; <label>:77                                      ; preds = %75, %70, %66
  %78 = getelementptr inbounds %struct.global_State, %struct.global_State* %g, i64 0, i32 23, i64 7
  %79 = load %struct.Table*, %struct.Table** %78, align 8, !tbaa !25
  %80 = icmp eq %struct.Table* %79, null
  br i1 %80, label %88, label %81

; <label>:81                                      ; preds = %77
  %82 = getelementptr inbounds %struct.Table, %struct.Table* %79, i64 0, i32 2
  %83 = load i8, i8* %82, align 1, !tbaa !33
  %84 = and i8 %83, 3
  %85 = icmp eq i8 %84, 0
  br i1 %85, label %88, label %86

; <label>:86                                      ; preds = %81
  %87 = bitcast %struct.Table* %79 to %union.GCObject*
  tail call fastcc void @reallymarkobject(%struct.global_State* %g, %union.GCObject* %87)
  br label %88

; <label>:88                                      ; preds = %86, %81, %77
  %89 = getelementptr inbounds %struct.global_State, %struct.global_State* %g, i64 0, i32 23, i64 8
  %90 = load %struct.Table*, %struct.Table** %89, align 8, !tbaa !25
  %91 = icmp eq %struct.Table* %90, null
  br i1 %91, label %99, label %92

; <label>:92                                      ; preds = %88
  %93 = getelementptr inbounds %struct.Table, %struct.Table* %90, i64 0, i32 2
  %94 = load i8, i8* %93, align 1, !tbaa !33
  %95 = and i8 %94, 3
  %96 = icmp eq i8 %95, 0
  br i1 %96, label %99, label %97

; <label>:97                                      ; preds = %92
  %98 = bitcast %struct.Table* %90 to %union.GCObject*
  tail call fastcc void @reallymarkobject(%struct.global_State* %g, %union.GCObject* %98)
  br label %99

; <label>:99                                      ; preds = %97, %92, %88
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc i64 @propagatemark(%struct.global_State* %g) #0 {
  %1 = getelementptr inbounds %struct.global_State, %struct.global_State* %g, i64 0, i32 8
  %2 = load %union.GCObject*, %union.GCObject** %1, align 8, !tbaa !204
  %3 = getelementptr inbounds %union.GCObject, %union.GCObject* %2, i64 0, i32 0, i32 2
  %4 = load i8, i8* %3, align 1, !tbaa !33
  %5 = or i8 %4, 4
  store i8 %5, i8* %3, align 1, !tbaa !33
  %6 = getelementptr inbounds %union.GCObject, %union.GCObject* %2, i64 0, i32 0, i32 1
  %7 = load i8, i8* %6, align 1, !tbaa !200
  %8 = zext i8 %7 to i32
  switch i32 %8, label %504 [
    i32 5, label %9
    i32 6, label %207
    i32 8, label %278
    i32 9, label %372
  ]

; <label>:9                                       ; preds = %0
  %10 = bitcast %union.GCObject* %2 to %struct.Table*
  %11 = getelementptr inbounds %union.GCObject, %union.GCObject* %2, i64 0, i32 0, i32 8
  %12 = bitcast i32** %11 to i64*
  %13 = load i64, i64* %12, align 8, !tbaa !198
  %14 = bitcast %union.GCObject** %1 to i64*
  store i64 %13, i64* %14, align 8, !tbaa !204
  %15 = getelementptr inbounds %union.GCObject, %union.GCObject* %2, i64 0, i32 0, i32 4
  %16 = bitcast %struct.lua_TValue** %15 to %struct.Table**
  %17 = load %struct.Table*, %struct.Table** %16, align 8, !tbaa !47
  %18 = icmp eq %struct.Table* %17, null
  br i1 %18, label %.thread10.i, label %19

; <label>:19                                      ; preds = %9
  %20 = getelementptr inbounds %struct.Table, %struct.Table* %17, i64 0, i32 2
  %21 = load i8, i8* %20, align 1, !tbaa !33
  %22 = and i8 %21, 3
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %.thread.i, label %24

; <label>:24                                      ; preds = %19
  %25 = bitcast %struct.Table* %17 to %union.GCObject*
  tail call fastcc void @reallymarkobject(%struct.global_State* %g, %union.GCObject* %25) #1
  %.pr.pre.i = load %struct.Table*, %struct.Table** %16, align 8, !tbaa !47
  %26 = icmp eq %struct.Table* %.pr.pre.i, null
  br i1 %26, label %.thread10.i, label %.thread.i

.thread.i:                                        ; preds = %24, %19
  %.pr27.i = phi %struct.Table* [ %.pr.pre.i, %24 ], [ %17, %19 ]
  %27 = getelementptr inbounds %struct.Table, %struct.Table* %.pr27.i, i64 0, i32 3
  %28 = load i8, i8* %27, align 1, !tbaa !187
  %29 = and i8 %28, 8
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %31, label %.thread10.i

; <label>:31                                      ; preds = %.thread.i
  %32 = getelementptr inbounds %struct.global_State, %struct.global_State* %g, i64 0, i32 24, i64 3
  %33 = load %union.TString*, %union.TString** %32, align 8, !tbaa !25
  %34 = tail call %struct.lua_TValue* @luaT_gettm(%struct.Table* %.pr27.i, i32 3, %union.TString* %33) #1
  %35 = icmp eq %struct.lua_TValue* %34, null
  br i1 %35, label %.thread10.i, label %36

; <label>:36                                      ; preds = %31
  %37 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %34, i64 0, i32 1
  %38 = load i32, i32* %37, align 4, !tbaa !10
  %39 = icmp eq i32 %38, 4
  br i1 %39, label %40, label %.thread10.i

; <label>:40                                      ; preds = %36
  %41 = bitcast %struct.lua_TValue* %34 to %union.TString**
  %42 = load %union.TString*, %union.TString** %41, align 8, !tbaa !25
  %43 = getelementptr inbounds %union.TString, %union.TString* %42, i64 1
  %44 = bitcast %union.TString* %43 to i8*
  %45 = tail call i8* @strchr(i8* %44, i32 107) #1
  %46 = icmp ne i8* %45, null
  %47 = zext i1 %46 to i32
  %48 = tail call i8* @strchr(i8* %44, i32 118) #1
  %49 = icmp ne i8* %48, null
  %50 = zext i1 %49 to i32
  %or.cond.i = or i1 %46, %49
  br i1 %or.cond.i, label %51, label %63

; <label>:51                                      ; preds = %40
  %52 = load i8, i8* %3, align 1, !tbaa !207
  %53 = and i8 %52, -25
  %54 = shl nuw nsw i32 %47, 3
  %55 = shl nuw nsw i32 %50, 4
  %56 = or i32 %55, %54
  %57 = zext i8 %53 to i32
  %58 = or i32 %56, %57
  %59 = trunc i32 %58 to i8
  store i8 %59, i8* %3, align 1, !tbaa !207
  %60 = getelementptr inbounds %struct.global_State, %struct.global_State* %g, i64 0, i32 10
  %61 = bitcast %union.GCObject** %60 to i64*
  %62 = load i64, i64* %61, align 8, !tbaa !205
  store i64 %62, i64* %12, align 8, !tbaa !198
  store %union.GCObject* %2, %union.GCObject** %60, align 8, !tbaa !205
  br label %63

; <label>:63                                      ; preds = %51, %40
  %or.cond3.i = and i1 %46, %49
  br i1 %or.cond3.i, label %.traversetable.exit.thread_crit_edge, label %64

.traversetable.exit.thread_crit_edge:             ; preds = %63
  %.pre28 = getelementptr inbounds %struct.Table, %struct.Table* %10, i64 0, i32 4
  br label %traversetable.exit.thread

; <label>:64                                      ; preds = %63
  br i1 %49, label %.loopexit.i, label %.thread10.i

.thread10.i:                                      ; preds = %64, %36, %31, %.thread.i, %24, %9
  %weakkey.0813.i = phi i32 [ %47, %64 ], [ 0, %9 ], [ 0, %.thread.i ], [ 0, %24 ], [ 0, %31 ], [ 0, %36 ]
  %65 = phi i1 [ %46, %64 ], [ false, %9 ], [ false, %.thread.i ], [ false, %24 ], [ false, %31 ], [ false, %36 ]
  %66 = getelementptr inbounds %union.GCObject, %union.GCObject* %2, i64 0, i32 0, i32 9
  %67 = bitcast %struct.lua_TValue** %66 to i32*
  %68 = load i32, i32* %67, align 4, !tbaa !206
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %.loopexit.i, label %.lr.ph.i

.lr.ph.i:                                         ; preds = %.thread10.i
  %70 = getelementptr inbounds %union.GCObject, %union.GCObject* %2, i64 0, i32 0, i32 5
  br label %71

; <label>:71                                      ; preds = %.backedge.i, %.lr.ph.i
  %.in.i = phi i32 [ %68, %.lr.ph.i ], [ %72, %.backedge.i ]
  %72 = add nsw i32 %.in.i, -1
  %73 = sext i32 %72 to i64
  %74 = load %struct.lua_TValue*, %struct.lua_TValue** %70, align 8, !tbaa !208
  %75 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %74, i64 %73, i32 1
  %76 = load i32, i32* %75, align 4, !tbaa !10
  %77 = icmp sgt i32 %76, 3
  br i1 %77, label %78, label %.backedge.i

; <label>:78                                      ; preds = %71
  %79 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %74, i64 %73, i32 0, i32 0
  %80 = load %union.GCObject*, %union.GCObject** %79, align 8, !tbaa !25
  %81 = getelementptr inbounds %union.GCObject, %union.GCObject* %80, i64 0, i32 0, i32 2
  %82 = load i8, i8* %81, align 1, !tbaa !33
  %83 = and i8 %82, 3
  %84 = icmp eq i8 %83, 0
  br i1 %84, label %.backedge.i, label %85

; <label>:85                                      ; preds = %78
  tail call fastcc void @reallymarkobject(%struct.global_State* %g, %union.GCObject* %80) #1
  br label %.backedge.i

.backedge.i:                                      ; preds = %85, %78, %71
  %86 = icmp eq i32 %72, 0
  br i1 %86, label %.loopexit.i.loopexit, label %71

.loopexit.i.loopexit:                             ; preds = %.backedge.i
  br label %.loopexit.i

.loopexit.i:                                      ; preds = %.loopexit.i.loopexit, %.thread10.i, %64
  %weakkey.0814.i = phi i32 [ %47, %64 ], [ %weakkey.0813.i, %.thread10.i ], [ %weakkey.0813.i, %.loopexit.i.loopexit ]
  %weakvalue.0912.i = phi i32 [ %50, %64 ], [ 0, %.thread10.i ], [ 0, %.loopexit.i.loopexit ]
  %87 = phi i1 [ %46, %64 ], [ %65, %.thread10.i ], [ %65, %.loopexit.i.loopexit ]
  %88 = phi i1 [ true, %64 ], [ false, %.thread10.i ], [ false, %.loopexit.i.loopexit ]
  %89 = getelementptr inbounds %struct.Table, %struct.Table* %10, i64 0, i32 4
  %90 = load i8, i8* %89, align 1, !tbaa !210
  %91 = zext i8 %90 to i32
  %92 = shl i32 1, %91
  %93 = getelementptr inbounds %union.GCObject, %union.GCObject* %2, i64 0, i32 0, i32 6
  %94 = bitcast %struct.global_State** %93 to %struct.Node**
  %95 = add i32 %92, -1
  %96 = sext i32 %95 to i64
  br i1 %87, label %.split.us.i.preheader, label %..split_crit_edge.i

.split.us.i.preheader:                            ; preds = %.loopexit.i
  br i1 %88, label %.split.us.i.preheader..split.us.i.preheader.split_crit_edge, label %.split.us.i.us.preheader

.split.us.i.us.preheader:                         ; preds = %.split.us.i.preheader
  br label %.split.us.i.us

.split.us.i.preheader..split.us.i.preheader.split_crit_edge: ; preds = %.split.us.i.preheader
  %.pre26 = load %struct.Node*, %struct.Node** %94, align 8, !tbaa !211
  %97 = icmp eq i8 %90, 0
  br i1 %97, label %.split.us.i.prol, label %.split.us.i.preheader..split.us.i.preheader.split_crit_edge.split

.split.us.i.prol:                                 ; preds = %.split.us.i.preheader..split.us.i.preheader.split_crit_edge
  %98 = getelementptr inbounds %struct.Node, %struct.Node* %.pre26, i64 %96, i32 0, i32 1
  %99 = load i32, i32* %98, align 4, !tbaa !10
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %removeentry.exit.backedge.us.i.prol

; <label>:101                                     ; preds = %.split.us.i.prol
  %102 = getelementptr inbounds %struct.Node, %struct.Node* %.pre26, i64 %96, i32 1, i32 0, i32 1
  %103 = load i32, i32* %102, align 4, !tbaa !212
  %104 = icmp sgt i32 %103, 3
  br i1 %104, label %105, label %removeentry.exit.backedge.us.i.prol

; <label>:105                                     ; preds = %101
  store i32 11, i32* %102, align 4, !tbaa !212
  br label %removeentry.exit.backedge.us.i.prol

removeentry.exit.backedge.us.i.prol:              ; preds = %105, %101, %.split.us.i.prol
  %indvars.iv.next19.i.prol = add nsw i64 %96, -1
  br label %.split.us.i.preheader..split.us.i.preheader.split_crit_edge.split

.split.us.i.preheader..split.us.i.preheader.split_crit_edge.split: ; preds = %removeentry.exit.backedge.us.i.prol, %.split.us.i.preheader..split.us.i.preheader.split_crit_edge
  %indvars.iv18.i.unr = phi i64 [ %96, %.split.us.i.preheader..split.us.i.preheader.split_crit_edge ], [ %indvars.iv.next19.i.prol, %removeentry.exit.backedge.us.i.prol ]
  %106 = icmp eq i8 %90, 0
  br i1 %106, label %traversetable.exit.loopexit, label %.split.us.i.preheader..split.us.i.preheader.split_crit_edge.split.split

.split.us.i.preheader..split.us.i.preheader.split_crit_edge.split.split: ; preds = %.split.us.i.preheader..split.us.i.preheader.split_crit_edge.split
  br label %.split.us.i

.split.us.i.us:                                   ; preds = %.split.us.i.us.preheader, %removeentry.exit.backedge.us.i.us
  %indvars.iv18.i.us = phi i64 [ %indvars.iv.next19.i.us, %removeentry.exit.backedge.us.i.us ], [ %96, %.split.us.i.us.preheader ]
  %107 = load %struct.Node*, %struct.Node** %94, align 8, !tbaa !211
  %108 = getelementptr inbounds %struct.Node, %struct.Node* %107, i64 %indvars.iv18.i.us, i32 0, i32 1
  %109 = load i32, i32* %108, align 4, !tbaa !10
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %121, label %111

; <label>:111                                     ; preds = %.split.us.i.us
  %112 = icmp sgt i32 %109, 3
  br i1 %112, label %113, label %removeentry.exit.backedge.us.i.us

; <label>:113                                     ; preds = %111
  %114 = getelementptr inbounds %struct.Node, %struct.Node* %107, i64 %indvars.iv18.i.us, i32 0, i32 0, i32 0
  %115 = load %union.GCObject*, %union.GCObject** %114, align 8, !tbaa !25
  %116 = getelementptr inbounds %union.GCObject, %union.GCObject* %115, i64 0, i32 0, i32 2
  %117 = load i8, i8* %116, align 1, !tbaa !33
  %118 = and i8 %117, 3
  %119 = icmp eq i8 %118, 0
  br i1 %119, label %removeentry.exit.backedge.us.i.us, label %120

; <label>:120                                     ; preds = %113
  tail call fastcc void @reallymarkobject(%struct.global_State* %g, %union.GCObject* %115) #1
  br label %removeentry.exit.backedge.us.i.us

; <label>:121                                     ; preds = %.split.us.i.us
  %122 = getelementptr inbounds %struct.Node, %struct.Node* %107, i64 %indvars.iv18.i.us, i32 1, i32 0, i32 1
  %123 = load i32, i32* %122, align 4, !tbaa !212
  %124 = icmp sgt i32 %123, 3
  br i1 %124, label %125, label %removeentry.exit.backedge.us.i.us

; <label>:125                                     ; preds = %121
  store i32 11, i32* %122, align 4, !tbaa !212
  br label %removeentry.exit.backedge.us.i.us

removeentry.exit.backedge.us.i.us:                ; preds = %125, %121, %120, %113, %111
  %126 = trunc i64 %indvars.iv18.i.us to i32
  %127 = icmp eq i32 %126, 0
  %indvars.iv.next19.i.us = add nsw i64 %indvars.iv18.i.us, -1
  br i1 %127, label %traversetable.exit.loopexit47, label %.split.us.i.us

..split_crit_edge.i:                              ; preds = %.loopexit.i
  br i1 %88, label %.split.split.us.i.preheader, label %.split..split.split_crit_edge.i.preheader

.split..split.split_crit_edge.i.preheader:        ; preds = %..split_crit_edge.i
  br label %.split..split.split_crit_edge.i

.split.split.us.i.preheader:                      ; preds = %..split_crit_edge.i
  br label %.split.split.us.i

.split.us.i:                                      ; preds = %removeentry.exit.backedge.us.i.1, %.split.us.i.preheader..split.us.i.preheader.split_crit_edge.split.split
  %indvars.iv18.i = phi i64 [ %indvars.iv18.i.unr, %.split.us.i.preheader..split.us.i.preheader.split_crit_edge.split.split ], [ %indvars.iv.next19.i.1, %removeentry.exit.backedge.us.i.1 ]
  %128 = getelementptr inbounds %struct.Node, %struct.Node* %.pre26, i64 %indvars.iv18.i, i32 0, i32 1
  %129 = load i32, i32* %128, align 4, !tbaa !10
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %131, label %removeentry.exit.backedge.us.i

; <label>:131                                     ; preds = %.split.us.i
  %132 = getelementptr inbounds %struct.Node, %struct.Node* %.pre26, i64 %indvars.iv18.i, i32 1, i32 0, i32 1
  %133 = load i32, i32* %132, align 4, !tbaa !212
  %134 = icmp sgt i32 %133, 3
  br i1 %134, label %135, label %removeentry.exit.backedge.us.i

; <label>:135                                     ; preds = %131
  store i32 11, i32* %132, align 4, !tbaa !212
  br label %removeentry.exit.backedge.us.i

removeentry.exit.backedge.us.i:                   ; preds = %.split.us.i, %135, %131
  %indvars.iv.next19.i = add nsw i64 %indvars.iv18.i, -1
  %136 = getelementptr inbounds %struct.Node, %struct.Node* %.pre26, i64 %indvars.iv.next19.i, i32 0, i32 1
  %137 = load i32, i32* %136, align 4, !tbaa !10
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %505, label %removeentry.exit.backedge.us.i.1

.split.split.us.i:                                ; preds = %.split.split.us.i.preheader, %removeentry.exit.backedge.us15.i
  %indvars.iv20.i = phi i64 [ %indvars.iv.next21.i, %removeentry.exit.backedge.us15.i ], [ %96, %.split.split.us.i.preheader ]
  %139 = load %struct.Node*, %struct.Node** %94, align 8, !tbaa !211
  %140 = getelementptr inbounds %struct.Node, %struct.Node* %139, i64 %indvars.iv20.i, i32 0, i32 1
  %141 = load i32, i32* %140, align 4, !tbaa !10
  %142 = icmp eq i32 %141, 0
  %143 = getelementptr inbounds %struct.Node, %struct.Node* %139, i64 %indvars.iv20.i, i32 1, i32 0, i32 1
  %144 = load i32, i32* %143, align 4, !tbaa !212
  %145 = icmp sgt i32 %144, 3
  br i1 %142, label %155, label %146

; <label>:146                                     ; preds = %.split.split.us.i
  br i1 %145, label %147, label %removeentry.exit.backedge.us15.i

; <label>:147                                     ; preds = %146
  %148 = getelementptr inbounds %struct.Node, %struct.Node* %139, i64 %indvars.iv20.i, i32 1, i32 0, i32 0, i32 0
  %149 = load %union.GCObject*, %union.GCObject** %148, align 8, !tbaa !25
  %150 = getelementptr inbounds %union.GCObject, %union.GCObject* %149, i64 0, i32 0, i32 2
  %151 = load i8, i8* %150, align 1, !tbaa !33
  %152 = and i8 %151, 3
  %153 = icmp eq i8 %152, 0
  br i1 %153, label %removeentry.exit.backedge.us15.i, label %154

; <label>:154                                     ; preds = %147
  tail call fastcc void @reallymarkobject(%struct.global_State* %g, %union.GCObject* %149) #1
  br label %removeentry.exit.backedge.us15.i

; <label>:155                                     ; preds = %.split.split.us.i
  br i1 %145, label %156, label %removeentry.exit.backedge.us15.i

; <label>:156                                     ; preds = %155
  store i32 11, i32* %143, align 4, !tbaa !212
  br label %removeentry.exit.backedge.us15.i

removeentry.exit.backedge.us15.i:                 ; preds = %156, %155, %154, %147, %146
  %157 = trunc i64 %indvars.iv20.i to i32
  %158 = icmp eq i32 %157, 0
  %indvars.iv.next21.i = add nsw i64 %indvars.iv20.i, -1
  br i1 %158, label %traversetable.exit.loopexit48, label %.split.split.us.i

.split..split.split_crit_edge.i:                  ; preds = %.split..split.split_crit_edge.i.preheader, %removeentry.exit.backedge.i
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i, %removeentry.exit.backedge.i ], [ %96, %.split..split.split_crit_edge.i.preheader ]
  %159 = load %struct.Node*, %struct.Node** %94, align 8, !tbaa !211
  %160 = getelementptr inbounds %struct.Node, %struct.Node* %159, i64 %indvars.iv.i, i32 0, i32 1
  %161 = load i32, i32* %160, align 4, !tbaa !10
  %162 = icmp eq i32 %161, 0
  %163 = getelementptr inbounds %struct.Node, %struct.Node* %159, i64 %indvars.iv.i, i32 1, i32 0, i32 1
  %164 = load i32, i32* %163, align 4, !tbaa !212
  %165 = icmp sgt i32 %164, 3
  br i1 %162, label %166, label %168

; <label>:166                                     ; preds = %.split..split.split_crit_edge.i
  br i1 %165, label %167, label %removeentry.exit.backedge.i

; <label>:167                                     ; preds = %166
  store i32 11, i32* %163, align 4, !tbaa !212
  br label %removeentry.exit.backedge.i

; <label>:168                                     ; preds = %.split..split.split_crit_edge.i
  br i1 %165, label %169, label %177

; <label>:169                                     ; preds = %168
  %170 = getelementptr inbounds %struct.Node, %struct.Node* %159, i64 %indvars.iv.i, i32 1, i32 0, i32 0, i32 0
  %171 = load %union.GCObject*, %union.GCObject** %170, align 8, !tbaa !25
  %172 = getelementptr inbounds %union.GCObject, %union.GCObject* %171, i64 0, i32 0, i32 2
  %173 = load i8, i8* %172, align 1, !tbaa !33
  %174 = and i8 %173, 3
  %175 = icmp eq i8 %174, 0
  br i1 %175, label %177, label %176

; <label>:176                                     ; preds = %169
  tail call fastcc void @reallymarkobject(%struct.global_State* %g, %union.GCObject* %171) #1
  %.pre = load i32, i32* %160, align 4, !tbaa !10
  br label %177

; <label>:177                                     ; preds = %176, %169, %168
  %178 = phi i32 [ %.pre, %176 ], [ %161, %169 ], [ %161, %168 ]
  %179 = icmp sgt i32 %178, 3
  br i1 %179, label %180, label %removeentry.exit.backedge.i

; <label>:180                                     ; preds = %177
  %181 = getelementptr inbounds %struct.Node, %struct.Node* %159, i64 %indvars.iv.i, i32 0, i32 0, i32 0
  %182 = load %union.GCObject*, %union.GCObject** %181, align 8, !tbaa !25
  %183 = getelementptr inbounds %union.GCObject, %union.GCObject* %182, i64 0, i32 0, i32 2
  %184 = load i8, i8* %183, align 1, !tbaa !33
  %185 = and i8 %184, 3
  %186 = icmp eq i8 %185, 0
  br i1 %186, label %removeentry.exit.backedge.i, label %189

removeentry.exit.backedge.i:                      ; preds = %189, %180, %177, %167, %166
  %187 = trunc i64 %indvars.iv.i to i32
  %188 = icmp eq i32 %187, 0
  %indvars.iv.next.i = add nsw i64 %indvars.iv.i, -1
  br i1 %188, label %traversetable.exit.loopexit49, label %.split..split.split_crit_edge.i

; <label>:189                                     ; preds = %180
  tail call fastcc void @reallymarkobject(%struct.global_State* %g, %union.GCObject* %182) #1
  br label %removeentry.exit.backedge.i

traversetable.exit.loopexit.unr-lcssa:            ; preds = %removeentry.exit.backedge.us.i.1
  br label %traversetable.exit.loopexit

traversetable.exit.loopexit:                      ; preds = %.split.us.i.preheader..split.us.i.preheader.split_crit_edge.split, %traversetable.exit.loopexit.unr-lcssa
  br label %traversetable.exit

traversetable.exit.loopexit47:                    ; preds = %removeentry.exit.backedge.us.i.us
  br label %traversetable.exit

traversetable.exit.loopexit48:                    ; preds = %removeentry.exit.backedge.us15.i
  br label %traversetable.exit

traversetable.exit.loopexit49:                    ; preds = %removeentry.exit.backedge.i
  br label %traversetable.exit

traversetable.exit:                               ; preds = %traversetable.exit.loopexit49, %traversetable.exit.loopexit48, %traversetable.exit.loopexit47, %traversetable.exit.loopexit
  %190 = or i32 %weakvalue.0912.i, %weakkey.0814.i
  %191 = icmp eq i32 %190, 0
  br i1 %191, label %194, label %traversetable.exit.thread

traversetable.exit.thread:                        ; preds = %.traversetable.exit.thread_crit_edge, %traversetable.exit
  %.pre27.pre-phi = phi i8* [ %.pre28, %.traversetable.exit.thread_crit_edge ], [ %89, %traversetable.exit ]
  %192 = load i8, i8* %3, align 1, !tbaa !33
  %193 = and i8 %192, -5
  store i8 %193, i8* %3, align 1, !tbaa !33
  br label %194

; <label>:194                                     ; preds = %traversetable.exit, %traversetable.exit.thread
  %.pre-phi = phi i8* [ %89, %traversetable.exit ], [ %.pre27.pre-phi, %traversetable.exit.thread ]
  %195 = getelementptr inbounds %union.GCObject, %union.GCObject* %2, i64 0, i32 0, i32 9
  %196 = bitcast %struct.lua_TValue** %195 to i32*
  %197 = load i32, i32* %196, align 4, !tbaa !206
  %198 = sext i32 %197 to i64
  %199 = shl nsw i64 %198, 4
  %200 = add nsw i64 %199, 64
  %201 = load i8, i8* %.pre-phi, align 1, !tbaa !210
  %202 = zext i8 %201 to i32
  %203 = shl i32 1, %202
  %204 = sext i32 %203 to i64
  %205 = mul nsw i64 %204, 40
  %206 = add i64 %200, %205
  br label %504

; <label>:207                                     ; preds = %0
  %208 = bitcast %union.GCObject* %2 to %union.Closure*
  %209 = getelementptr inbounds %union.GCObject, %union.GCObject* %2, i64 0, i32 0, i32 4
  %210 = bitcast %struct.lua_TValue** %209 to i64*
  %211 = load i64, i64* %210, align 8, !tbaa !214
  %212 = bitcast %union.GCObject** %1 to i64*
  store i64 %211, i64* %212, align 8, !tbaa !204
  %213 = getelementptr inbounds %union.GCObject, %union.GCObject* %2, i64 0, i32 0, i32 5
  %214 = bitcast %struct.lua_TValue** %213 to %union.GCObject**
  %215 = load %union.GCObject*, %union.GCObject** %214, align 8, !tbaa !29
  %216 = getelementptr inbounds %union.GCObject, %union.GCObject* %215, i64 0, i32 0, i32 2
  %217 = load i8, i8* %216, align 1, !tbaa !33
  %218 = and i8 %217, 3
  %219 = icmp eq i8 %218, 0
  br i1 %219, label %221, label %220

; <label>:220                                     ; preds = %207
  tail call fastcc void @reallymarkobject(%struct.global_State* %g, %union.GCObject* %215) #1
  br label %221

; <label>:221                                     ; preds = %220, %207
  %222 = getelementptr inbounds %union.GCObject, %union.GCObject* %2, i64 0, i32 0, i32 3
  %223 = load i8, i8* %222, align 1, !tbaa !35
  %224 = icmp eq i8 %223, 0
  br i1 %224, label %244, label %.preheader2.i

.preheader2.i:                                    ; preds = %221
  %225 = getelementptr inbounds %union.Closure, %union.Closure* %208, i64 0, i32 0, i32 4
  %226 = load i8, i8* %225, align 1, !tbaa !31
  %227 = icmp eq i8 %226, 0
  br i1 %227, label %traverseclosure.exit, label %.lr.ph6.i.preheader

.lr.ph6.i.preheader:                              ; preds = %.preheader2.i
  br label %.lr.ph6.i

.lr.ph6.i:                                        ; preds = %.lr.ph6.i.preheader, %240
  %228 = phi i8 [ %241, %240 ], [ %226, %.lr.ph6.i.preheader ]
  %indvars.iv7.i = phi i64 [ %indvars.iv.next8.i, %240 ], [ 0, %.lr.ph6.i.preheader ]
  %229 = getelementptr inbounds %union.Closure, %union.Closure* %208, i64 0, i32 0, i32 8, i64 %indvars.iv7.i, i32 1
  %230 = load i32, i32* %229, align 4, !tbaa !10
  %231 = icmp sgt i32 %230, 3
  br i1 %231, label %232, label %240

; <label>:232                                     ; preds = %.lr.ph6.i
  %233 = getelementptr inbounds %union.Closure, %union.Closure* %208, i64 0, i32 0, i32 8, i64 %indvars.iv7.i, i32 0, i32 0
  %234 = load %union.GCObject*, %union.GCObject** %233, align 8, !tbaa !25
  %235 = getelementptr inbounds %union.GCObject, %union.GCObject* %234, i64 0, i32 0, i32 2
  %236 = load i8, i8* %235, align 1, !tbaa !33
  %237 = and i8 %236, 3
  %238 = icmp eq i8 %237, 0
  br i1 %238, label %240, label %239

; <label>:239                                     ; preds = %232
  tail call fastcc void @reallymarkobject(%struct.global_State* %g, %union.GCObject* %234) #1
  %.pre.i = load i8, i8* %225, align 1, !tbaa !31
  br label %240

; <label>:240                                     ; preds = %239, %232, %.lr.ph6.i
  %241 = phi i8 [ %228, %232 ], [ %228, %.lr.ph6.i ], [ %.pre.i, %239 ]
  %indvars.iv.next8.i = add nuw nsw i64 %indvars.iv7.i, 1
  %242 = zext i8 %241 to i64
  %243 = icmp slt i64 %indvars.iv.next8.i, %242
  br i1 %243, label %.lr.ph6.i, label %traverseclosure.exit.loopexit50

; <label>:244                                     ; preds = %221
  %245 = getelementptr inbounds %union.GCObject, %union.GCObject* %2, i64 0, i32 0, i32 6
  %246 = bitcast %struct.global_State** %245 to %union.GCObject**
  %247 = load %union.GCObject*, %union.GCObject** %246, align 8, !tbaa !57
  %248 = getelementptr inbounds %union.GCObject, %union.GCObject* %247, i64 0, i32 0, i32 2
  %249 = load i8, i8* %248, align 1, !tbaa !33
  %250 = and i8 %249, 3
  %251 = icmp eq i8 %250, 0
  br i1 %251, label %.preheader.i, label %252

; <label>:252                                     ; preds = %244
  tail call fastcc void @reallymarkobject(%struct.global_State* %g, %union.GCObject* %247) #1
  br label %.preheader.i

.preheader.i:                                     ; preds = %252, %244
  %253 = getelementptr inbounds %union.Closure, %union.Closure* %208, i64 0, i32 0, i32 4
  %254 = load i8, i8* %253, align 1, !tbaa !173
  %255 = icmp eq i8 %254, 0
  br i1 %255, label %traverseclosure.exit, label %.lr.ph.i.1

.lr.ph.i.1:                                       ; preds = %.preheader.i
  %256 = getelementptr inbounds %union.GCObject, %union.GCObject* %2, i64 0, i32 0, i32 7
  %257 = bitcast %struct.CallInfo** %256 to [1 x %struct.UpVal*]*
  br label %258

; <label>:258                                     ; preds = %268, %.lr.ph.i.1
  %259 = phi i8 [ %254, %.lr.ph.i.1 ], [ %269, %268 ]
  %indvars.iv.i.2 = phi i64 [ 0, %.lr.ph.i.1 ], [ %indvars.iv.next.i.3, %268 ]
  %260 = getelementptr inbounds [1 x %struct.UpVal*], [1 x %struct.UpVal*]* %257, i64 0, i64 %indvars.iv.i.2
  %261 = bitcast %struct.UpVal** %260 to %union.GCObject**
  %262 = load %union.GCObject*, %union.GCObject** %261, align 8, !tbaa !25
  %263 = getelementptr inbounds %union.GCObject, %union.GCObject* %262, i64 0, i32 0, i32 2
  %264 = load i8, i8* %263, align 1, !tbaa !33
  %265 = and i8 %264, 3
  %266 = icmp eq i8 %265, 0
  br i1 %266, label %268, label %267

; <label>:267                                     ; preds = %258
  tail call fastcc void @reallymarkobject(%struct.global_State* %g, %union.GCObject* %262) #1
  %.pre9.i = load i8, i8* %253, align 1, !tbaa !173
  br label %268

; <label>:268                                     ; preds = %267, %258
  %269 = phi i8 [ %259, %258 ], [ %.pre9.i, %267 ]
  %indvars.iv.next.i.3 = add nuw nsw i64 %indvars.iv.i.2, 1
  %270 = zext i8 %269 to i64
  %271 = icmp slt i64 %indvars.iv.next.i.3, %270
  br i1 %271, label %258, label %traverseclosure.exit.loopexit

traverseclosure.exit.loopexit:                    ; preds = %268
  %.lcssa = phi i8 [ %269, %268 ]
  br label %traverseclosure.exit

traverseclosure.exit.loopexit50:                  ; preds = %240
  %.lcssa58 = phi i8 [ %241, %240 ]
  br label %traverseclosure.exit

traverseclosure.exit:                             ; preds = %traverseclosure.exit.loopexit50, %traverseclosure.exit.loopexit, %.preheader2.i, %.preheader.i
  %272 = phi i8 [ 0, %.preheader2.i ], [ 0, %.preheader.i ], [ %.lcssa, %traverseclosure.exit.loopexit ], [ %.lcssa58, %traverseclosure.exit.loopexit50 ]
  %273 = load i8, i8* %222, align 1, !tbaa !35
  %274 = icmp eq i8 %273, 0
  %275 = zext i8 %272 to i32
  %.in.v = select i1 %274, i32 3, i32 4
  %.in = shl i32 %275, %.in.v
  %276 = add nuw nsw i32 %.in, 40
  %277 = sext i32 %276 to i64
  br label %504

; <label>:278                                     ; preds = %0
  %279 = getelementptr inbounds %union.GCObject, %union.GCObject* %2, i64 0, i32 0
  %280 = getelementptr inbounds %union.GCObject, %union.GCObject* %2, i64 0, i32 0, i32 25
  %281 = bitcast %union.GCObject** %280 to i64*
  %282 = load i64, i64* %281, align 8, !tbaa !215
  %283 = bitcast %union.GCObject** %1 to i64*
  store i64 %282, i64* %283, align 8, !tbaa !204
  %284 = getelementptr inbounds %struct.global_State, %struct.global_State* %g, i64 0, i32 9
  %285 = bitcast %union.GCObject** %284 to i64*
  %286 = load i64, i64* %285, align 8, !tbaa !197
  store i64 %286, i64* %281, align 8, !tbaa !215
  store %union.GCObject* %2, %union.GCObject** %284, align 8, !tbaa !197
  %287 = and i8 %4, -5
  store i8 %287, i8* %3, align 1, !tbaa !33
  %288 = getelementptr inbounds %union.GCObject, %union.GCObject* %2, i64 0, i32 0, i32 22, i32 1
  %289 = load i32, i32* %288, align 4, !tbaa !10
  %290 = icmp sgt i32 %289, 3
  br i1 %290, label %291, label %299

; <label>:291                                     ; preds = %278
  %292 = getelementptr inbounds %union.GCObject, %union.GCObject* %2, i64 0, i32 0, i32 22, i32 0, i32 0
  %293 = load %union.GCObject*, %union.GCObject** %292, align 8, !tbaa !25
  %294 = getelementptr inbounds %union.GCObject, %union.GCObject* %293, i64 0, i32 0, i32 2
  %295 = load i8, i8* %294, align 1, !tbaa !33
  %296 = and i8 %295, 3
  %297 = icmp eq i8 %296, 0
  br i1 %297, label %299, label %298

; <label>:298                                     ; preds = %291
  tail call fastcc void @reallymarkobject(%struct.global_State* %g, %union.GCObject* %293) #1
  br label %299

; <label>:299                                     ; preds = %298, %291, %278
  %300 = getelementptr inbounds %union.GCObject, %union.GCObject* %2, i64 0, i32 0, i32 4
  %301 = load %struct.lua_TValue*, %struct.lua_TValue** %300, align 8, !tbaa !1
  %302 = getelementptr inbounds %union.GCObject, %union.GCObject* %2, i64 0, i32 0, i32 12
  %303 = load %struct.CallInfo*, %struct.CallInfo** %302, align 8, !tbaa !32
  %304 = getelementptr inbounds %union.GCObject, %union.GCObject* %2, i64 0, i32 0, i32 7
  %305 = load %struct.CallInfo*, %struct.CallInfo** %304, align 8, !tbaa !13
  %306 = icmp ugt %struct.CallInfo* %303, %305
  br i1 %306, label %._crit_edge.9.i, label %.lr.ph8.i.preheader

.lr.ph8.i.preheader:                              ; preds = %299
  br label %.lr.ph8.i

.lr.ph8.i:                                        ; preds = %.lr.ph8.i.preheader, %.lr.ph8.i
  %ci.06.i = phi %struct.CallInfo* [ %310, %.lr.ph8.i ], [ %303, %.lr.ph8.i.preheader ]
  %lim.05.i = phi %struct.lua_TValue* [ %.lim.0.i, %.lr.ph8.i ], [ %301, %.lr.ph8.i.preheader ]
  %307 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %ci.06.i, i64 0, i32 2
  %308 = load %struct.lua_TValue*, %struct.lua_TValue** %307, align 8, !tbaa !14
  %309 = icmp ult %struct.lua_TValue* %lim.05.i, %308
  %.lim.0.i = select i1 %309, %struct.lua_TValue* %308, %struct.lua_TValue* %lim.05.i
  %310 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %ci.06.i, i64 1
  %311 = icmp ugt %struct.CallInfo* %310, %305
  br i1 %311, label %._crit_edge.9.i.loopexit, label %.lr.ph8.i

._crit_edge.9.i.loopexit:                         ; preds = %.lr.ph8.i
  %.lim.0.i.lcssa = phi %struct.lua_TValue* [ %.lim.0.i, %.lr.ph8.i ]
  br label %._crit_edge.9.i

._crit_edge.9.i:                                  ; preds = %._crit_edge.9.i.loopexit, %299
  %lim.0.lcssa.i = phi %struct.lua_TValue* [ %301, %299 ], [ %.lim.0.i.lcssa, %._crit_edge.9.i.loopexit ]
  %312 = getelementptr inbounds %union.GCObject, %union.GCObject* %2, i64 0, i32 0, i32 10
  %313 = load %struct.lua_TValue*, %struct.lua_TValue** %312, align 8, !tbaa !50
  %314 = icmp ult %struct.lua_TValue* %313, %301
  br i1 %314, label %.lr.ph4.i.preheader, label %.preheader.i.5

.lr.ph4.i.preheader:                              ; preds = %._crit_edge.9.i
  br label %.lr.ph4.i

.preheader.i.5.loopexit:                          ; preds = %328
  %.lcssa59 = phi %struct.lua_TValue* [ %330, %328 ]
  br label %.preheader.i.5

.preheader.i.5:                                   ; preds = %.preheader.i.5.loopexit, %._crit_edge.9.i
  %o.0.lcssa.i = phi %struct.lua_TValue* [ %313, %._crit_edge.9.i ], [ %.lcssa59, %.preheader.i.5.loopexit ]
  %315 = icmp ugt %struct.lua_TValue* %o.0.lcssa.i, %lim.0.lcssa.i
  br i1 %315, label %._crit_edge.i, label %.lr.ph.i.7.preheader

.lr.ph.i.7.preheader:                             ; preds = %.preheader.i.5
  br label %.lr.ph.i.7

.lr.ph4.i:                                        ; preds = %.lr.ph4.i.preheader, %328
  %316 = phi %struct.lua_TValue* [ %329, %328 ], [ %301, %.lr.ph4.i.preheader ]
  %o.02.i = phi %struct.lua_TValue* [ %330, %328 ], [ %313, %.lr.ph4.i.preheader ]
  %317 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %o.02.i, i64 0, i32 1
  %318 = load i32, i32* %317, align 4, !tbaa !10
  %319 = icmp sgt i32 %318, 3
  br i1 %319, label %320, label %328

; <label>:320                                     ; preds = %.lr.ph4.i
  %321 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %o.02.i, i64 0, i32 0, i32 0
  %322 = load %union.GCObject*, %union.GCObject** %321, align 8, !tbaa !25
  %323 = getelementptr inbounds %union.GCObject, %union.GCObject* %322, i64 0, i32 0, i32 2
  %324 = load i8, i8* %323, align 1, !tbaa !33
  %325 = and i8 %324, 3
  %326 = icmp eq i8 %325, 0
  br i1 %326, label %328, label %327

; <label>:327                                     ; preds = %320
  tail call fastcc void @reallymarkobject(%struct.global_State* %g, %union.GCObject* %322) #1
  %.pre.i.6 = load %struct.lua_TValue*, %struct.lua_TValue** %300, align 8, !tbaa !1
  br label %328

; <label>:328                                     ; preds = %327, %320, %.lr.ph4.i
  %329 = phi %struct.lua_TValue* [ %316, %320 ], [ %316, %.lr.ph4.i ], [ %.pre.i.6, %327 ]
  %330 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %o.02.i, i64 1
  %331 = icmp ult %struct.lua_TValue* %330, %329
  br i1 %331, label %.lr.ph4.i, label %.preheader.i.5.loopexit

.lr.ph.i.7:                                       ; preds = %.lr.ph.i.7.preheader, %.lr.ph.i.7
  %o.11.i = phi %struct.lua_TValue* [ %333, %.lr.ph.i.7 ], [ %o.0.lcssa.i, %.lr.ph.i.7.preheader ]
  %332 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %o.11.i, i64 0, i32 1
  store i32 0, i32* %332, align 4, !tbaa !10
  %333 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %o.11.i, i64 1
  %334 = icmp ugt %struct.lua_TValue* %333, %lim.0.lcssa.i
  br i1 %334, label %._crit_edge.i.loopexit, label %.lr.ph.i.7

._crit_edge.i.loopexit:                           ; preds = %.lr.ph.i.7
  br label %._crit_edge.i

._crit_edge.i:                                    ; preds = %._crit_edge.i.loopexit, %.preheader.i.5
  %335 = bitcast %struct.lua_TValue** %312 to i64*
  %336 = load i64, i64* %335, align 8, !tbaa !50
  %337 = ptrtoint %struct.lua_TValue* %lim.0.lcssa.i to i64
  %338 = sub i64 %337, %336
  %339 = getelementptr inbounds %union.GCObject, %union.GCObject* %2, i64 0, i32 0, i32 14
  %340 = load i32, i32* %339, align 4, !tbaa !146
  %341 = icmp sgt i32 %340, 20000
  br i1 %341, label %._crit_edge.i.traversestack.exit_crit_edge, label %342

._crit_edge.i.traversestack.exit_crit_edge:       ; preds = %._crit_edge.i
  %.pre29 = getelementptr inbounds %union.GCObject, %union.GCObject* %2, i64 0, i32 0, i32 13
  br label %traversestack.exit

; <label>:342                                     ; preds = %._crit_edge.i
  %343 = bitcast %struct.CallInfo** %304 to i64*
  %344 = load i64, i64* %343, align 8, !tbaa !13
  %345 = bitcast %struct.CallInfo** %302 to i64*
  %346 = load i64, i64* %345, align 8, !tbaa !32
  %347 = sub i64 %344, %346
  %348 = sdiv exact i64 %347, 40
  %349 = trunc i64 %348 to i32
  %350 = shl nsw i32 %349, 2
  %351 = icmp slt i32 %350, %340
  %352 = icmp sgt i32 %340, 16
  %or.cond.i.i = and i1 %352, %351
  br i1 %or.cond.i.i, label %353, label %355

; <label>:353                                     ; preds = %342
  %354 = sdiv i32 %340, 2
  tail call void @luaD_reallocCI(%struct.lua_State* %279, i32 %354) #1
  br label %355

; <label>:355                                     ; preds = %353, %342
  %356 = lshr exact i64 %338, 2
  %.tr.i.i = trunc i64 %356 to i32
  %357 = and i32 %.tr.i.i, -4
  %358 = getelementptr inbounds %union.GCObject, %union.GCObject* %2, i64 0, i32 0, i32 13
  %359 = load i32, i32* %358, align 4, !tbaa !149
  %360 = icmp slt i32 %357, %359
  %361 = icmp sgt i32 %359, 90
  %or.cond1.i.i = and i1 %360, %361
  br i1 %or.cond1.i.i, label %362, label %traversestack.exit

; <label>:362                                     ; preds = %355
  %363 = sdiv i32 %359, 2
  tail call void @luaD_reallocstack(%struct.lua_State* %279, i32 %363) #1
  br label %traversestack.exit

traversestack.exit:                               ; preds = %._crit_edge.i.traversestack.exit_crit_edge, %355, %362
  %.pre-phi30 = phi i32* [ %.pre29, %._crit_edge.i.traversestack.exit_crit_edge ], [ %358, %355 ], [ %358, %362 ]
  %364 = load i32, i32* %.pre-phi30, align 4, !tbaa !149
  %365 = sext i32 %364 to i64
  %366 = shl nsw i64 %365, 4
  %367 = add nsw i64 %366, 184
  %368 = load i32, i32* %339, align 4, !tbaa !146
  %369 = sext i32 %368 to i64
  %370 = mul nsw i64 %369, 40
  %371 = add i64 %367, %370
  br label %504

; <label>:372                                     ; preds = %0
  %373 = bitcast %union.GCObject* %2 to %struct.Proto*
  %374 = getelementptr inbounds %union.GCObject, %union.GCObject* %2, i64 0, i32 0, i32 19
  %375 = bitcast i32* %374 to i64*
  %376 = load i64, i64* %375, align 8, !tbaa !216
  %377 = bitcast %union.GCObject** %1 to i64*
  store i64 %376, i64* %377, align 8, !tbaa !204
  %378 = getelementptr inbounds %union.GCObject, %union.GCObject* %2, i64 0, i32 0, i32 10
  %379 = bitcast %struct.lua_TValue** %378 to %union.TString**
  %380 = load %union.TString*, %union.TString** %379, align 8, !tbaa !133
  %381 = icmp eq %union.TString* %380, null
  br i1 %381, label %.preheader3.i, label %382

; <label>:382                                     ; preds = %372
  %383 = getelementptr inbounds %union.TString, %union.TString* %380, i64 0, i32 0, i32 2
  %384 = load i8, i8* %383, align 1, !tbaa !209
  %385 = and i8 %384, -4
  store i8 %385, i8* %383, align 1, !tbaa !209
  br label %.preheader3.i

.preheader3.i:                                    ; preds = %382, %372
  %386 = getelementptr inbounds %struct.Proto, %struct.Proto* %373, i64 0, i32 11
  %387 = load i32, i32* %386, align 4, !tbaa !115
  %388 = icmp sgt i32 %387, 0
  br i1 %388, label %.lr.ph10.i, label %.preheader2.i.8

.lr.ph10.i:                                       ; preds = %.preheader3.i
  %389 = getelementptr inbounds %union.GCObject, %union.GCObject* %2, i64 0, i32 0, i32 4
  br label %407

.preheader2.i.8.loopexit:                         ; preds = %421
  br label %.preheader2.i.8

.preheader2.i.8:                                  ; preds = %.preheader2.i.8.loopexit, %.preheader3.i
  %390 = getelementptr inbounds %union.GCObject, %union.GCObject* %2, i64 0, i32 0, i32 11
  %391 = bitcast %struct.CallInfo** %390 to i32*
  %392 = load i32, i32* %391, align 4, !tbaa !65
  %393 = icmp sgt i32 %392, 0
  br i1 %393, label %.lr.ph8.i.9, label %.preheader1.i

.lr.ph8.i.9:                                      ; preds = %.preheader2.i.8
  %394 = getelementptr inbounds %union.GCObject, %union.GCObject* %2, i64 0, i32 0, i32 9
  %395 = bitcast %struct.lua_TValue** %394 to %union.TString***
  %396 = load %union.TString**, %union.TString*** %395, align 8, !tbaa !68
  %397 = sext i32 %392 to i64
  %xtraiter56 = and i32 %392, 1
  %lcmp.mod57 = icmp eq i32 %xtraiter56, 0
  br i1 %lcmp.mod57, label %.lr.ph8.i.9.split, label %398

; <label>:398                                     ; preds = %.lr.ph8.i.9
  %399 = load %union.TString*, %union.TString** %396, align 8, !tbaa !25
  %400 = icmp eq %union.TString* %399, null
  br i1 %400, label %405, label %401

; <label>:401                                     ; preds = %398
  %402 = getelementptr inbounds %union.TString, %union.TString* %399, i64 0, i32 0, i32 2
  %403 = load i8, i8* %402, align 1, !tbaa !209
  %404 = and i8 %403, -4
  store i8 %404, i8* %402, align 1, !tbaa !209
  br label %405

; <label>:405                                     ; preds = %401, %398
  br label %.lr.ph8.i.9.split

.lr.ph8.i.9.split:                                ; preds = %.lr.ph8.i.9, %405
  %indvars.iv13.i.unr = phi i64 [ 0, %.lr.ph8.i.9 ], [ 1, %405 ]
  %406 = icmp eq i32 %392, 1
  br i1 %406, label %.preheader1.i.loopexit, label %.lr.ph8.i.9.split.split

.lr.ph8.i.9.split.split:                          ; preds = %.lr.ph8.i.9.split
  br label %430

; <label>:407                                     ; preds = %421, %.lr.ph10.i
  %408 = phi i32 [ %387, %.lr.ph10.i ], [ %422, %421 ]
  %indvars.iv15.i = phi i64 [ 0, %.lr.ph10.i ], [ %indvars.iv.next16.i, %421 ]
  %409 = load %struct.lua_TValue*, %struct.lua_TValue** %389, align 8, !tbaa !116
  %410 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %409, i64 %indvars.iv15.i, i32 1
  %411 = load i32, i32* %410, align 4, !tbaa !10
  %412 = icmp sgt i32 %411, 3
  br i1 %412, label %413, label %421

; <label>:413                                     ; preds = %407
  %414 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %409, i64 %indvars.iv15.i, i32 0, i32 0
  %415 = load %union.GCObject*, %union.GCObject** %414, align 8, !tbaa !25
  %416 = getelementptr inbounds %union.GCObject, %union.GCObject* %415, i64 0, i32 0, i32 2
  %417 = load i8, i8* %416, align 1, !tbaa !33
  %418 = and i8 %417, 3
  %419 = icmp eq i8 %418, 0
  br i1 %419, label %421, label %420

; <label>:420                                     ; preds = %413
  tail call fastcc void @reallymarkobject(%struct.global_State* %g, %union.GCObject* %415) #1
  %.pre.i.10 = load i32, i32* %386, align 4, !tbaa !115
  br label %421

; <label>:421                                     ; preds = %420, %413, %407
  %422 = phi i32 [ %408, %413 ], [ %408, %407 ], [ %.pre.i.10, %420 ]
  %indvars.iv.next16.i = add nuw nsw i64 %indvars.iv15.i, 1
  %423 = sext i32 %422 to i64
  %424 = icmp slt i64 %indvars.iv.next16.i, %423
  br i1 %424, label %407, label %.preheader2.i.8.loopexit

.preheader1.i.loopexit.unr-lcssa:                 ; preds = %521
  br label %.preheader1.i.loopexit

.preheader1.i.loopexit:                           ; preds = %.lr.ph8.i.9.split, %.preheader1.i.loopexit.unr-lcssa
  br label %.preheader1.i

.preheader1.i:                                    ; preds = %.preheader1.i.loopexit, %.preheader2.i.8
  %425 = getelementptr inbounds %union.GCObject, %union.GCObject* %2, i64 0, i32 0, i32 13
  %426 = load i32, i32* %425, align 4, !tbaa !139
  %427 = icmp sgt i32 %426, 0
  br i1 %427, label %.lr.ph6.i.11, label %.preheader.i.12

.lr.ph6.i.11:                                     ; preds = %.preheader1.i
  %428 = getelementptr inbounds %union.GCObject, %union.GCObject* %2, i64 0, i32 0, i32 6
  %429 = bitcast %struct.global_State** %428 to %struct.Proto***
  br label %460

; <label>:430                                     ; preds = %521, %.lr.ph8.i.9.split.split
  %indvars.iv13.i = phi i64 [ %indvars.iv13.i.unr, %.lr.ph8.i.9.split.split ], [ %indvars.iv.next14.i.1, %521 ]
  %431 = getelementptr inbounds %union.TString*, %union.TString** %396, i64 %indvars.iv13.i
  %432 = load %union.TString*, %union.TString** %431, align 8, !tbaa !25
  %433 = icmp eq %union.TString* %432, null
  br i1 %433, label %438, label %434

; <label>:434                                     ; preds = %430
  %435 = getelementptr inbounds %union.TString, %union.TString* %432, i64 0, i32 0, i32 2
  %436 = load i8, i8* %435, align 1, !tbaa !209
  %437 = and i8 %436, -4
  store i8 %437, i8* %435, align 1, !tbaa !209
  br label %438

; <label>:438                                     ; preds = %434, %430
  %indvars.iv.next14.i = add nuw nsw i64 %indvars.iv13.i, 1
  %439 = getelementptr inbounds %union.TString*, %union.TString** %396, i64 %indvars.iv.next14.i
  %440 = load %union.TString*, %union.TString** %439, align 8, !tbaa !25
  %441 = icmp eq %union.TString* %440, null
  br i1 %441, label %521, label %517

.preheader.i.12.loopexit:                         ; preds = %473
  %.lcssa60 = phi i32 [ %474, %473 ]
  br label %.preheader.i.12

.preheader.i.12:                                  ; preds = %.preheader.i.12.loopexit, %.preheader1.i
  %442 = phi i32 [ %426, %.preheader1.i ], [ %.lcssa60, %.preheader.i.12.loopexit ]
  %443 = getelementptr inbounds %union.GCObject, %union.GCObject* %2, i64 0, i32 0, i32 14
  %444 = load i32, i32* %443, align 4, !tbaa !166
  %445 = icmp sgt i32 %444, 0
  br i1 %445, label %.lr.ph.i.13, label %.preheader.i.12.traverseproto.exit_crit_edge

.preheader.i.12.traverseproto.exit_crit_edge:     ; preds = %.preheader.i.12
  %.pre31 = sext i32 %444 to i64
  br label %traverseproto.exit

.lr.ph.i.13:                                      ; preds = %.preheader.i.12
  %446 = getelementptr inbounds %union.GCObject, %union.GCObject* %2, i64 0, i32 0, i32 8
  %447 = bitcast i32** %446 to %struct.LocVar**
  %448 = load %struct.LocVar*, %struct.LocVar** %447, align 8, !tbaa !167
  %449 = sext i32 %444 to i64
  %xtraiter54 = and i32 %444, 1
  %lcmp.mod55 = icmp eq i32 %xtraiter54, 0
  br i1 %lcmp.mod55, label %.lr.ph.i.13.split, label %450

; <label>:450                                     ; preds = %.lr.ph.i.13
  %451 = getelementptr inbounds %struct.LocVar, %struct.LocVar* %448, i64 0, i32 0
  %452 = load %union.TString*, %union.TString** %451, align 8, !tbaa !168
  %453 = icmp eq %union.TString* %452, null
  br i1 %453, label %458, label %454

; <label>:454                                     ; preds = %450
  %455 = getelementptr inbounds %union.TString, %union.TString* %452, i64 0, i32 0, i32 2
  %456 = load i8, i8* %455, align 1, !tbaa !209
  %457 = and i8 %456, -4
  store i8 %457, i8* %455, align 1, !tbaa !209
  br label %458

; <label>:458                                     ; preds = %454, %450
  br label %.lr.ph.i.13.split

.lr.ph.i.13.split:                                ; preds = %.lr.ph.i.13, %458
  %indvars.iv.i.14.unr = phi i64 [ 0, %.lr.ph.i.13 ], [ 1, %458 ]
  %459 = icmp eq i32 %444, 1
  br i1 %459, label %traverseproto.exit.loopexit, label %.lr.ph.i.13.split.split

.lr.ph.i.13.split.split:                          ; preds = %.lr.ph.i.13.split
  br label %477

; <label>:460                                     ; preds = %473, %.lr.ph6.i.11
  %461 = phi i32 [ %426, %.lr.ph6.i.11 ], [ %474, %473 ]
  %indvars.iv11.i = phi i64 [ 0, %.lr.ph6.i.11 ], [ %indvars.iv.next12.i, %473 ]
  %462 = load %struct.Proto**, %struct.Proto*** %429, align 8, !tbaa !140
  %463 = getelementptr inbounds %struct.Proto*, %struct.Proto** %462, i64 %indvars.iv11.i
  %464 = load %struct.Proto*, %struct.Proto** %463, align 8, !tbaa !25
  %465 = icmp eq %struct.Proto* %464, null
  br i1 %465, label %473, label %466

; <label>:466                                     ; preds = %460
  %467 = getelementptr inbounds %struct.Proto, %struct.Proto* %464, i64 0, i32 2
  %468 = load i8, i8* %467, align 1, !tbaa !33
  %469 = and i8 %468, 3
  %470 = icmp eq i8 %469, 0
  br i1 %470, label %473, label %471

; <label>:471                                     ; preds = %466
  %472 = bitcast %struct.Proto* %464 to %union.GCObject*
  tail call fastcc void @reallymarkobject(%struct.global_State* %g, %union.GCObject* %472) #1
  %.pre17.i = load i32, i32* %425, align 4, !tbaa !139
  br label %473

; <label>:473                                     ; preds = %471, %466, %460
  %474 = phi i32 [ %461, %466 ], [ %461, %460 ], [ %.pre17.i, %471 ]
  %indvars.iv.next12.i = add nuw nsw i64 %indvars.iv11.i, 1
  %475 = sext i32 %474 to i64
  %476 = icmp slt i64 %indvars.iv.next12.i, %475
  br i1 %476, label %460, label %.preheader.i.12.loopexit

; <label>:477                                     ; preds = %516, %.lr.ph.i.13.split.split
  %indvars.iv.i.14 = phi i64 [ %indvars.iv.i.14.unr, %.lr.ph.i.13.split.split ], [ %indvars.iv.next.i.15.1, %516 ]
  %478 = getelementptr inbounds %struct.LocVar, %struct.LocVar* %448, i64 %indvars.iv.i.14, i32 0
  %479 = load %union.TString*, %union.TString** %478, align 8, !tbaa !168
  %480 = icmp eq %union.TString* %479, null
  br i1 %480, label %485, label %481

; <label>:481                                     ; preds = %477
  %482 = getelementptr inbounds %union.TString, %union.TString* %479, i64 0, i32 0, i32 2
  %483 = load i8, i8* %482, align 1, !tbaa !209
  %484 = and i8 %483, -4
  store i8 %484, i8* %482, align 1, !tbaa !209
  br label %485

; <label>:485                                     ; preds = %481, %477
  %indvars.iv.next.i.15 = add nuw nsw i64 %indvars.iv.i.14, 1
  %486 = getelementptr inbounds %struct.LocVar, %struct.LocVar* %448, i64 %indvars.iv.next.i.15, i32 0
  %487 = load %union.TString*, %union.TString** %486, align 8, !tbaa !168
  %488 = icmp eq %union.TString* %487, null
  br i1 %488, label %516, label %512

traverseproto.exit.loopexit.unr-lcssa:            ; preds = %516
  br label %traverseproto.exit.loopexit

traverseproto.exit.loopexit:                      ; preds = %.lr.ph.i.13.split, %traverseproto.exit.loopexit.unr-lcssa
  br label %traverseproto.exit

traverseproto.exit:                               ; preds = %traverseproto.exit.loopexit, %.preheader.i.12.traverseproto.exit_crit_edge
  %.pre-phi32 = phi i64 [ %.pre31, %.preheader.i.12.traverseproto.exit_crit_edge ], [ %449, %traverseproto.exit.loopexit ]
  %489 = getelementptr inbounds %union.GCObject, %union.GCObject* %2, i64 0, i32 0, i32 12
  %490 = bitcast %struct.CallInfo** %489 to i32*
  %491 = load i32, i32* %490, align 4, !tbaa !112
  %492 = sext i32 %491 to i64
  %493 = sext i32 %442 to i64
  %494 = load i32, i32* %386, align 4, !tbaa !115
  %495 = sext i32 %494 to i64
  %496 = getelementptr inbounds %struct.Proto, %struct.Proto* %373, i64 0, i32 13
  %497 = load i32, i32* %496, align 4, !tbaa !114
  %498 = sext i32 %497 to i64
  %499 = load i32, i32* %391, align 4, !tbaa !65
  %500 = sext i32 %499 to i64
  %tmp = add nsw i64 %.pre-phi32, %495
  %tmp17 = shl nsw i64 %tmp, 4
  %tmp18 = add nsw i64 %500, %493
  %tmp19 = shl nsw i64 %tmp18, 3
  %tmp20 = add nsw i64 %498, %492
  %tmp21 = shl nsw i64 %tmp20, 2
  %501 = add nsw i64 %tmp17, 120
  %502 = add nsw i64 %501, %tmp19
  %503 = add nsw i64 %502, %tmp21
  br label %504

; <label>:504                                     ; preds = %0, %traverseproto.exit, %traversestack.exit, %traverseclosure.exit, %194
  %.0 = phi i64 [ %503, %traverseproto.exit ], [ %371, %traversestack.exit ], [ %277, %traverseclosure.exit ], [ %206, %194 ], [ 0, %0 ]
  ret i64 %.0

; <label>:505                                     ; preds = %removeentry.exit.backedge.us.i
  %506 = getelementptr inbounds %struct.Node, %struct.Node* %.pre26, i64 %indvars.iv.next19.i, i32 1, i32 0, i32 1
  %507 = load i32, i32* %506, align 4, !tbaa !212
  %508 = icmp sgt i32 %507, 3
  br i1 %508, label %509, label %removeentry.exit.backedge.us.i.1

; <label>:509                                     ; preds = %505
  store i32 11, i32* %506, align 4, !tbaa !212
  br label %removeentry.exit.backedge.us.i.1

removeentry.exit.backedge.us.i.1:                 ; preds = %509, %505, %removeentry.exit.backedge.us.i
  %510 = trunc i64 %indvars.iv.next19.i to i32
  %511 = icmp eq i32 %510, 0
  %indvars.iv.next19.i.1 = add nsw i64 %indvars.iv18.i, -2
  br i1 %511, label %traversetable.exit.loopexit.unr-lcssa, label %.split.us.i

; <label>:512                                     ; preds = %485
  %513 = getelementptr inbounds %union.TString, %union.TString* %487, i64 0, i32 0, i32 2
  %514 = load i8, i8* %513, align 1, !tbaa !209
  %515 = and i8 %514, -4
  store i8 %515, i8* %513, align 1, !tbaa !209
  br label %516

; <label>:516                                     ; preds = %512, %485
  %indvars.iv.next.i.15.1 = add nsw i64 %indvars.iv.i.14, 2
  %exitcond.1 = icmp eq i64 %indvars.iv.next.i.15.1, %449
  br i1 %exitcond.1, label %traverseproto.exit.loopexit.unr-lcssa, label %477

; <label>:517                                     ; preds = %438
  %518 = getelementptr inbounds %union.TString, %union.TString* %440, i64 0, i32 0, i32 2
  %519 = load i8, i8* %518, align 1, !tbaa !209
  %520 = and i8 %519, -4
  store i8 %520, i8* %518, align 1, !tbaa !209
  br label %521

; <label>:521                                     ; preds = %517, %438
  %indvars.iv.next14.i.1 = add nsw i64 %indvars.iv13.i, 2
  %exitcond25.1 = icmp eq i64 %indvars.iv.next14.i.1, %397
  br i1 %exitcond25.1, label %.preheader1.i.loopexit.unr-lcssa, label %430
}

; Function Attrs: nounwind uwtable
define void @luaL_openlibs(%struct.lua_State* %L) #0 {
  tail call void @lua_pushcclosure(%struct.lua_State* %L, i32 (%struct.lua_State*)* nonnull @luaopen_base, i32 0) #1
  tail call void @lua_pushstring(%struct.lua_State* %L, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.218, i64 0, i64 0)) #1
  tail call void @lua_call(%struct.lua_State* %L, i32 1, i32 0) #1
  tail call void @lua_pushcclosure(%struct.lua_State* %L, i32 (%struct.lua_State*)* nonnull @luaopen_package, i32 0) #1
  tail call void @lua_pushstring(%struct.lua_State* %L, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.219, i64 0, i64 0)) #1
  tail call void @lua_call(%struct.lua_State* %L, i32 1, i32 0) #1
  tail call void @lua_pushcclosure(%struct.lua_State* %L, i32 (%struct.lua_State*)* nonnull @luaopen_table, i32 0) #1
  tail call void @lua_pushstring(%struct.lua_State* %L, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2.220, i64 0, i64 0)) #1
  tail call void @lua_call(%struct.lua_State* %L, i32 1, i32 0) #1
  tail call void @lua_pushcclosure(%struct.lua_State* %L, i32 (%struct.lua_State*)* nonnull @luaopen_io, i32 0) #1
  tail call void @lua_pushstring(%struct.lua_State* %L, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #1
  tail call void @lua_call(%struct.lua_State* %L, i32 1, i32 0) #1
  tail call void @lua_pushcclosure(%struct.lua_State* %L, i32 (%struct.lua_State*)* nonnull @luaopen_os, i32 0) #1
  tail call void @lua_pushstring(%struct.lua_State* %L, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4.222, i64 0, i64 0)) #1
  tail call void @lua_call(%struct.lua_State* %L, i32 1, i32 0) #1
  tail call void @lua_pushcclosure(%struct.lua_State* %L, i32 (%struct.lua_State*)* nonnull @luaopen_string, i32 0) #1
  tail call void @lua_pushstring(%struct.lua_State* %L, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.5.223, i64 0, i64 0)) #1
  tail call void @lua_call(%struct.lua_State* %L, i32 1, i32 0) #1
  tail call void @lua_pushcclosure(%struct.lua_State* %L, i32 (%struct.lua_State*)* nonnull @luaopen_math, i32 0) #1
  tail call void @lua_pushstring(%struct.lua_State* %L, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.224, i64 0, i64 0)) #1
  tail call void @lua_call(%struct.lua_State* %L, i32 1, i32 0) #1
  tail call void @lua_pushcclosure(%struct.lua_State* %L, i32 (%struct.lua_State*)* nonnull @luaopen_debug, i32 0) #1
  tail call void @lua_pushstring(%struct.lua_State* %L, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.7.225, i64 0, i64 0)) #1
  tail call void @lua_call(%struct.lua_State* %L, i32 1, i32 0) #1
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @luaopen_io(%struct.lua_State* %L) #0 {
  %1 = tail call i32 @luaL_newmetatable(%struct.lua_State* %L, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5.228, i64 0, i64 0)) #1
  tail call void @lua_pushvalue(%struct.lua_State* %L, i32 -1) #1
  tail call void @lua_setfield(%struct.lua_State* %L, i32 -2, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6.229, i64 0, i64 0)) #1
  tail call void @luaL_register(%struct.lua_State* %L, i8* null, %struct.luaL_Reg* getelementptr inbounds ([10 x %struct.luaL_Reg], [10 x %struct.luaL_Reg]* @flib, i64 0, i64 0)) #1
  tail call void @lua_createtable(%struct.lua_State* %L, i32 0, i32 1) #1
  tail call void @lua_pushcclosure(%struct.lua_State* %L, i32 (%struct.lua_State*)* nonnull @io_fclose, i32 0) #1
  tail call void @lua_setfield(%struct.lua_State* %L, i32 -2, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.17.230, i64 0, i64 0)) #1
  tail call void @lua_replace(%struct.lua_State* %L, i32 -10001) #1
  tail call void @luaL_register(%struct.lua_State* %L, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.231, i64 0, i64 0), %struct.luaL_Reg* getelementptr inbounds ([12 x %struct.luaL_Reg], [12 x %struct.luaL_Reg]* @iolib, i64 0, i64 0)) #1
  tail call void @lua_createtable(%struct.lua_State* %L, i32 0, i32 1) #1
  tail call void @lua_pushcclosure(%struct.lua_State* %L, i32 (%struct.lua_State*)* nonnull @io_noclose, i32 0) #1
  tail call void @lua_setfield(%struct.lua_State* %L, i32 -2, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.17.230, i64 0, i64 0)) #1
  %2 = load i64, i64* bitcast (%struct._IO_FILE** @stdin to i64*), align 8, !tbaa !25
  %3 = tail call i8* @lua_newuserdata(%struct.lua_State* %L, i64 8) #1
  %4 = bitcast i8* %3 to %struct._IO_FILE**
  store %struct._IO_FILE* null, %struct._IO_FILE** %4, align 8, !tbaa !25
  tail call void @lua_getfield(%struct.lua_State* %L, i32 -10000, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5.228, i64 0, i64 0)) #1
  %5 = tail call i32 @lua_setmetatable(%struct.lua_State* %L, i32 -2) #1
  %6 = bitcast i8* %3 to i64*
  store i64 %2, i64* %6, align 8, !tbaa !25
  tail call void @lua_pushvalue(%struct.lua_State* %L, i32 -1) #1
  tail call void @lua_rawseti(%struct.lua_State* %L, i32 -10001, i32 1) #1
  tail call void @lua_pushvalue(%struct.lua_State* %L, i32 -2) #1
  %7 = tail call i32 @lua_setfenv(%struct.lua_State* %L, i32 -2) #1
  tail call void @lua_setfield(%struct.lua_State* %L, i32 -3, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.232, i64 0, i64 0)) #1
  %8 = load i64, i64* bitcast (%struct._IO_FILE** @stdout to i64*), align 8, !tbaa !25
  %9 = tail call i8* @lua_newuserdata(%struct.lua_State* %L, i64 8) #1
  %10 = bitcast i8* %9 to %struct._IO_FILE**
  store %struct._IO_FILE* null, %struct._IO_FILE** %10, align 8, !tbaa !25
  tail call void @lua_getfield(%struct.lua_State* %L, i32 -10000, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5.228, i64 0, i64 0)) #1
  %11 = tail call i32 @lua_setmetatable(%struct.lua_State* %L, i32 -2) #1
  %12 = bitcast i8* %9 to i64*
  store i64 %8, i64* %12, align 8, !tbaa !25
  tail call void @lua_pushvalue(%struct.lua_State* %L, i32 -1) #1
  tail call void @lua_rawseti(%struct.lua_State* %L, i32 -10001, i32 2) #1
  tail call void @lua_pushvalue(%struct.lua_State* %L, i32 -2) #1
  %13 = tail call i32 @lua_setfenv(%struct.lua_State* %L, i32 -2) #1
  tail call void @lua_setfield(%struct.lua_State* %L, i32 -3, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2.233, i64 0, i64 0)) #1
  %14 = load i64, i64* bitcast (%struct._IO_FILE** @stderr to i64*), align 8, !tbaa !25
  %15 = tail call i8* @lua_newuserdata(%struct.lua_State* %L, i64 8) #1
  %16 = bitcast i8* %15 to %struct._IO_FILE**
  store %struct._IO_FILE* null, %struct._IO_FILE** %16, align 8, !tbaa !25
  tail call void @lua_getfield(%struct.lua_State* %L, i32 -10000, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5.228, i64 0, i64 0)) #1
  %17 = tail call i32 @lua_setmetatable(%struct.lua_State* %L, i32 -2) #1
  %18 = bitcast i8* %15 to i64*
  store i64 %14, i64* %18, align 8, !tbaa !25
  tail call void @lua_pushvalue(%struct.lua_State* %L, i32 -2) #1
  %19 = tail call i32 @lua_setfenv(%struct.lua_State* %L, i32 -2) #1
  tail call void @lua_setfield(%struct.lua_State* %L, i32 -3, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3.234, i64 0, i64 0)) #1
  tail call void @lua_settop(%struct.lua_State* %L, i32 -2) #1
  tail call void @lua_getfield(%struct.lua_State* %L, i32 -1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4.235, i64 0, i64 0)) #1
  tail call void @lua_createtable(%struct.lua_State* %L, i32 0, i32 1) #1
  tail call void @lua_pushcclosure(%struct.lua_State* %L, i32 (%struct.lua_State*)* nonnull @io_pclose, i32 0) #1
  tail call void @lua_setfield(%struct.lua_State* %L, i32 -2, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.17.230, i64 0, i64 0)) #1
  %20 = tail call i32 @lua_setfenv(%struct.lua_State* %L, i32 -2) #1
  tail call void @lua_settop(%struct.lua_State* %L, i32 -2) #1
  ret i32 1
}

; Function Attrs: nounwind
declare i32 @fflush(%struct._IO_FILE* nocapture) #5

; Function Attrs: nounwind
declare void @clearerr(%struct._IO_FILE* nocapture) #5

; Function Attrs: nounwind
declare i32 @fscanf(%struct._IO_FILE* nocapture, i8* nocapture readonly, ...) #5

; Function Attrs: nounwind
declare i32 @fseek(%struct._IO_FILE* nocapture, i64, i32) #5

; Function Attrs: nounwind
declare i64 @ftell(%struct._IO_FILE* nocapture) #5

; Function Attrs: nounwind
declare i32 @setvbuf(%struct._IO_FILE* nocapture, i8*, i32, i64) #5

; Function Attrs: nounwind
declare noalias %struct._IO_FILE* @popen(i8* nocapture readonly, i8* nocapture readonly) #5

; Function Attrs: nounwind
declare noalias %struct._IO_FILE* @tmpfile() #5

; Function Attrs: nounwind
declare i32 @pclose(%struct._IO_FILE* nocapture) #5

; Function Attrs: nounwind uwtable
define internal i32 @io_fclose(%struct.lua_State* %L) #0 {
  %1 = tail call i8* @luaL_checkudata(%struct.lua_State* %L, i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5.228, i64 0, i64 0)) #1
  %2 = bitcast i8* %1 to %struct._IO_FILE**
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %2, align 8, !tbaa !25
  %4 = tail call i32 @fclose(%struct._IO_FILE* %3) #1
  %5 = icmp eq i32 %4, 0
  store %struct._IO_FILE* null, %struct._IO_FILE** %2, align 8, !tbaa !25
  %6 = tail call i32* @__errno_location() #12
  %7 = load i32, i32* %6, align 4, !tbaa !38
  br i1 %5, label %8, label %9

; <label>:8                                       ; preds = %0
  tail call void @lua_pushboolean(%struct.lua_State* %L, i32 1) #1
  br label %pushresult.exit

; <label>:9                                       ; preds = %0
  tail call void @lua_pushnil(%struct.lua_State* %L) #1
  %10 = tail call i8* @strerror(i32 %7) #1
  %11 = tail call i8* (%struct.lua_State*, i8*, ...) @lua_pushfstring(%struct.lua_State* %L, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.19.236, i64 0, i64 0), i8* %10) #1
  %12 = sext i32 %7 to i64
  tail call void @lua_pushinteger(%struct.lua_State* %L, i64 %12) #1
  br label %pushresult.exit

pushresult.exit:                                  ; preds = %8, %9
  %.0.i = phi i32 [ 1, %8 ], [ 3, %9 ]
  ret i32 %.0.i
}

; Function Attrs: nounwind uwtable
define internal i32 @io_noclose(%struct.lua_State* %L) #0 {
  tail call void @lua_pushnil(%struct.lua_State* %L) #1
  tail call void @lua_pushlstring(%struct.lua_State* %L, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.44.237, i64 0, i64 0), i64 26) #1
  ret i32 2
}

; Function Attrs: nounwind uwtable
define internal i32 @io_pclose(%struct.lua_State* %L) #0 {
  %1 = tail call i8* @luaL_checkudata(%struct.lua_State* %L, i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5.228, i64 0, i64 0)) #1
  %2 = bitcast i8* %1 to %struct._IO_FILE**
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %2, align 8, !tbaa !25
  %4 = tail call i32 @pclose(%struct._IO_FILE* %3) #1
  %5 = icmp eq i32 %4, -1
  store %struct._IO_FILE* null, %struct._IO_FILE** %2, align 8, !tbaa !25
  %6 = tail call i32* @__errno_location() #12
  %7 = load i32, i32* %6, align 4, !tbaa !38
  br i1 %5, label %9, label %8

; <label>:8                                       ; preds = %0
  tail call void @lua_pushboolean(%struct.lua_State* %L, i32 1) #1
  br label %pushresult.exit

; <label>:9                                       ; preds = %0
  tail call void @lua_pushnil(%struct.lua_State* %L) #1
  %10 = tail call i8* @strerror(i32 %7) #1
  %11 = tail call i8* (%struct.lua_State*, i8*, ...) @lua_pushfstring(%struct.lua_State* %L, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.19.236, i64 0, i64 0), i8* %10) #1
  %12 = sext i32 %7 to i64
  tail call void @lua_pushinteger(%struct.lua_State* %L, i64 %12) #1
  br label %pushresult.exit

pushresult.exit:                                  ; preds = %8, %9
  %.0.i = phi i32 [ 1, %8 ], [ 3, %9 ]
  ret i32 %.0.i
}

; Function Attrs: nounwind uwtable
define internal i32 @io_close(%struct.lua_State* %L) #0 {
  %1 = tail call i32 @lua_type(%struct.lua_State* %L, i32 1) #1
  %2 = icmp eq i32 %1, -1
  br i1 %2, label %3, label %4

; <label>:3                                       ; preds = %0
  tail call void @lua_rawgeti(%struct.lua_State* %L, i32 -10001, i32 2) #1
  br label %4

; <label>:4                                       ; preds = %3, %0
  %5 = tail call i8* @luaL_checkudata(%struct.lua_State* %L, i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5.228, i64 0, i64 0)) #1
  %6 = bitcast i8* %5 to %struct._IO_FILE**
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** %6, align 8, !tbaa !25
  %8 = icmp eq %struct._IO_FILE* %7, null
  br i1 %8, label %9, label %tofile.exit

; <label>:9                                       ; preds = %4
  %10 = tail call i32 (%struct.lua_State*, i8*, ...) @luaL_error(%struct.lua_State* %L, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.16.259, i64 0, i64 0)) #1
  br label %tofile.exit

tofile.exit:                                      ; preds = %4, %9
  tail call void @lua_getfenv(%struct.lua_State* %L, i32 1) #1
  tail call void @lua_getfield(%struct.lua_State* %L, i32 -1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.17.230, i64 0, i64 0)) #1
  %11 = tail call i32 (%struct.lua_State*)* @lua_tocfunction(%struct.lua_State* %L, i32 -1) #1
  %12 = tail call i32 %11(%struct.lua_State* %L) #1
  ret i32 %12
}

; Function Attrs: nounwind uwtable
define internal i32 @io_flush(%struct.lua_State* %L) #0 {
  tail call void @lua_rawgeti(%struct.lua_State* %L, i32 -10001, i32 2) #1
  %1 = tail call i8* @lua_touserdata(%struct.lua_State* %L, i32 -1) #1
  %2 = bitcast i8* %1 to %struct._IO_FILE**
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %2, align 8, !tbaa !25
  %4 = icmp eq %struct._IO_FILE* %3, null
  br i1 %4, label %5, label %getiofile.exit

; <label>:5                                       ; preds = %0
  %6 = tail call i32 (%struct.lua_State*, i8*, ...) @luaL_error(%struct.lua_State* %L, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.39.248, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.36.243, i64 0, i64 0)) #1
  br label %getiofile.exit

getiofile.exit:                                   ; preds = %0, %5
  %7 = tail call i32 @fflush(%struct._IO_FILE* %3) #1
  %8 = icmp eq i32 %7, 0
  %9 = tail call i32* @__errno_location() #12
  %10 = load i32, i32* %9, align 4, !tbaa !38
  br i1 %8, label %11, label %12

; <label>:11                                      ; preds = %getiofile.exit
  tail call void @lua_pushboolean(%struct.lua_State* %L, i32 1) #1
  br label %pushresult.exit

; <label>:12                                      ; preds = %getiofile.exit
  tail call void @lua_pushnil(%struct.lua_State* %L) #1
  %13 = tail call i8* @strerror(i32 %10) #1
  %14 = tail call i8* (%struct.lua_State*, i8*, ...) @lua_pushfstring(%struct.lua_State* %L, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.19.236, i64 0, i64 0), i8* %13) #1
  %15 = sext i32 %10 to i64
  tail call void @lua_pushinteger(%struct.lua_State* %L, i64 %15) #1
  br label %pushresult.exit

pushresult.exit:                                  ; preds = %11, %12
  %.0.i = phi i32 [ 1, %11 ], [ 3, %12 ]
  ret i32 %.0.i
}

; Function Attrs: nounwind uwtable
define internal i32 @io_input(%struct.lua_State* %L) #0 {
  tail call fastcc void @g_iofile(%struct.lua_State* %L, i32 1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.40.256, i64 0, i64 0))
  ret i32 1
}

; Function Attrs: nounwind uwtable
define internal i32 @io_lines(%struct.lua_State* %L) #0 {
  %1 = tail call i32 @lua_type(%struct.lua_State* %L, i32 1) #1
  %2 = icmp slt i32 %1, 1
  br i1 %2, label %3, label %10

; <label>:3                                       ; preds = %0
  tail call void @lua_rawgeti(%struct.lua_State* %L, i32 -10001, i32 1) #1
  %4 = tail call i8* @luaL_checkudata(%struct.lua_State* %L, i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5.228, i64 0, i64 0)) #1
  %5 = bitcast i8* %4 to %struct._IO_FILE**
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8, !tbaa !25
  %7 = icmp eq %struct._IO_FILE* %6, null
  br i1 %7, label %8, label %f_lines.exit

; <label>:8                                       ; preds = %3
  %9 = tail call i32 (%struct.lua_State*, i8*, ...) @luaL_error(%struct.lua_State* %L, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.16.259, i64 0, i64 0)) #1
  br label %f_lines.exit

f_lines.exit:                                     ; preds = %3, %8
  tail call void @lua_pushvalue(%struct.lua_State* %L, i32 1) #1
  tail call void @lua_pushboolean(%struct.lua_State* %L, i32 0) #1
  tail call void @lua_pushcclosure(%struct.lua_State* %L, i32 (%struct.lua_State*)* nonnull @io_readline, i32 2) #1
  br label %26

; <label>:10                                      ; preds = %0
  %11 = tail call i8* @luaL_checklstring(%struct.lua_State* %L, i32 1, i64* null) #1
  %12 = tail call i8* @lua_newuserdata(%struct.lua_State* %L, i64 8) #1
  %13 = bitcast i8* %12 to %struct._IO_FILE**
  store %struct._IO_FILE* null, %struct._IO_FILE** %13, align 8, !tbaa !25
  tail call void @lua_getfield(%struct.lua_State* %L, i32 -10000, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5.228, i64 0, i64 0)) #1
  %14 = tail call i32 @lua_setmetatable(%struct.lua_State* %L, i32 -2) #1
  %15 = tail call %struct._IO_FILE* @fopen(i8* %11, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.40.256, i64 0, i64 0)) #1
  store %struct._IO_FILE* %15, %struct._IO_FILE** %13, align 8, !tbaa !25
  %16 = icmp eq %struct._IO_FILE* %15, null
  br i1 %16, label %17, label %24

; <label>:17                                      ; preds = %10
  %18 = tail call i32* @__errno_location() #12
  %19 = load i32, i32* %18, align 4, !tbaa !38
  %20 = tail call i8* @strerror(i32 %19) #1
  %21 = tail call i8* (%struct.lua_State*, i8*, ...) @lua_pushfstring(%struct.lua_State* %L, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.18.257, i64 0, i64 0), i8* %11, i8* %20) #1
  %22 = tail call i8* @lua_tolstring(%struct.lua_State* %L, i32 -1, i64* null) #1
  %23 = tail call i32 @luaL_argerror(%struct.lua_State* %L, i32 1, i8* %22) #1
  br label %24

; <label>:24                                      ; preds = %17, %10
  %25 = tail call i32 @lua_gettop(%struct.lua_State* %L) #1
  tail call void @lua_pushvalue(%struct.lua_State* %L, i32 %25) #1
  tail call void @lua_pushboolean(%struct.lua_State* %L, i32 1) #1
  tail call void @lua_pushcclosure(%struct.lua_State* %L, i32 (%struct.lua_State*)* nonnull @io_readline, i32 2) #1
  br label %26

; <label>:26                                      ; preds = %24, %f_lines.exit
  ret i32 1
}

; Function Attrs: nounwind uwtable
define internal i32 @io_open(%struct.lua_State* %L) #0 {
  %1 = tail call i8* @luaL_checklstring(%struct.lua_State* %L, i32 1, i64* null) #1
  %2 = tail call i8* @luaL_optlstring(%struct.lua_State* %L, i32 2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.40.256, i64 0, i64 0), i64* null) #1
  %3 = tail call i8* @lua_newuserdata(%struct.lua_State* %L, i64 8) #1
  %4 = bitcast i8* %3 to %struct._IO_FILE**
  store %struct._IO_FILE* null, %struct._IO_FILE** %4, align 8, !tbaa !25
  tail call void @lua_getfield(%struct.lua_State* %L, i32 -10000, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5.228, i64 0, i64 0)) #1
  %5 = tail call i32 @lua_setmetatable(%struct.lua_State* %L, i32 -2) #1
  %6 = tail call %struct._IO_FILE* @fopen(i8* %1, i8* %2) #1
  store %struct._IO_FILE* %6, %struct._IO_FILE** %4, align 8, !tbaa !25
  %7 = icmp eq %struct._IO_FILE* %6, null
  br i1 %7, label %8, label %18

; <label>:8                                       ; preds = %0
  %9 = tail call i32* @__errno_location() #12
  %10 = load i32, i32* %9, align 4, !tbaa !38
  tail call void @lua_pushnil(%struct.lua_State* %L) #1
  %11 = icmp eq i8* %1, null
  %12 = tail call i8* @strerror(i32 %10) #1
  br i1 %11, label %15, label %13

; <label>:13                                      ; preds = %8
  %14 = tail call i8* (%struct.lua_State*, i8*, ...) @lua_pushfstring(%struct.lua_State* %L, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.18.257, i64 0, i64 0), i8* %1, i8* %12) #1
  br label %pushresult.exit

; <label>:15                                      ; preds = %8
  %16 = tail call i8* (%struct.lua_State*, i8*, ...) @lua_pushfstring(%struct.lua_State* %L, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.19.236, i64 0, i64 0), i8* %12) #1
  br label %pushresult.exit

pushresult.exit:                                  ; preds = %13, %15
  %17 = sext i32 %10 to i64
  tail call void @lua_pushinteger(%struct.lua_State* %L, i64 %17) #1
  br label %18

; <label>:18                                      ; preds = %0, %pushresult.exit
  %19 = phi i32 [ 3, %pushresult.exit ], [ 1, %0 ]
  ret i32 %19
}

; Function Attrs: nounwind uwtable
define internal i32 @io_output(%struct.lua_State* %L) #0 {
  tail call fastcc void @g_iofile(%struct.lua_State* %L, i32 2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.41.258, i64 0, i64 0))
  ret i32 1
}

; Function Attrs: nounwind uwtable
define internal i32 @io_popen(%struct.lua_State* %L) #0 {
  %1 = tail call i8* @luaL_checklstring(%struct.lua_State* %L, i32 1, i64* null) #1
  %2 = tail call i8* @luaL_optlstring(%struct.lua_State* %L, i32 2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.40.256, i64 0, i64 0), i64* null) #1
  %3 = tail call i8* @lua_newuserdata(%struct.lua_State* %L, i64 8) #1
  %4 = bitcast i8* %3 to %struct._IO_FILE**
  store %struct._IO_FILE* null, %struct._IO_FILE** %4, align 8, !tbaa !25
  tail call void @lua_getfield(%struct.lua_State* %L, i32 -10000, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5.228, i64 0, i64 0)) #1
  %5 = tail call i32 @lua_setmetatable(%struct.lua_State* %L, i32 -2) #1
  %6 = tail call i32 @fflush(%struct._IO_FILE* null) #1
  %7 = tail call %struct._IO_FILE* @popen(i8* %1, i8* %2) #1
  store %struct._IO_FILE* %7, %struct._IO_FILE** %4, align 8, !tbaa !25
  %8 = icmp eq %struct._IO_FILE* %7, null
  br i1 %8, label %9, label %19

; <label>:9                                       ; preds = %0
  %10 = tail call i32* @__errno_location() #12
  %11 = load i32, i32* %10, align 4, !tbaa !38
  tail call void @lua_pushnil(%struct.lua_State* %L) #1
  %12 = icmp eq i8* %1, null
  %13 = tail call i8* @strerror(i32 %11) #1
  br i1 %12, label %16, label %14

; <label>:14                                      ; preds = %9
  %15 = tail call i8* (%struct.lua_State*, i8*, ...) @lua_pushfstring(%struct.lua_State* %L, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.18.257, i64 0, i64 0), i8* %1, i8* %13) #1
  br label %pushresult.exit

; <label>:16                                      ; preds = %9
  %17 = tail call i8* (%struct.lua_State*, i8*, ...) @lua_pushfstring(%struct.lua_State* %L, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.19.236, i64 0, i64 0), i8* %13) #1
  br label %pushresult.exit

pushresult.exit:                                  ; preds = %14, %16
  %18 = sext i32 %11 to i64
  tail call void @lua_pushinteger(%struct.lua_State* %L, i64 %18) #1
  br label %19

; <label>:19                                      ; preds = %0, %pushresult.exit
  %20 = phi i32 [ 3, %pushresult.exit ], [ 1, %0 ]
  ret i32 %20
}

; Function Attrs: nounwind uwtable
define internal i32 @io_read(%struct.lua_State* %L) #0 {
  tail call void @lua_rawgeti(%struct.lua_State* %L, i32 -10001, i32 1) #1
  %1 = tail call i8* @lua_touserdata(%struct.lua_State* %L, i32 -1) #1
  %2 = bitcast i8* %1 to %struct._IO_FILE**
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %2, align 8, !tbaa !25
  %4 = icmp eq %struct._IO_FILE* %3, null
  br i1 %4, label %5, label %getiofile.exit

; <label>:5                                       ; preds = %0
  %6 = tail call i32 (%struct.lua_State*, i8*, ...) @luaL_error(%struct.lua_State* %L, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.39.248, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.34.240, i64 0, i64 0)) #1
  br label %getiofile.exit

getiofile.exit:                                   ; preds = %0, %5
  %7 = tail call fastcc i32 @g_read(%struct.lua_State* %L, %struct._IO_FILE* %3, i32 1)
  ret i32 %7
}

; Function Attrs: nounwind uwtable
define internal i32 @io_tmpfile(%struct.lua_State* %L) #0 {
  %1 = tail call i8* @lua_newuserdata(%struct.lua_State* %L, i64 8) #1
  %2 = bitcast i8* %1 to %struct._IO_FILE**
  store %struct._IO_FILE* null, %struct._IO_FILE** %2, align 8, !tbaa !25
  tail call void @lua_getfield(%struct.lua_State* %L, i32 -10000, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5.228, i64 0, i64 0)) #1
  %3 = tail call i32 @lua_setmetatable(%struct.lua_State* %L, i32 -2) #1
  %4 = tail call %struct._IO_FILE* @tmpfile() #1
  store %struct._IO_FILE* %4, %struct._IO_FILE** %2, align 8, !tbaa !25
  %5 = icmp eq %struct._IO_FILE* %4, null
  br i1 %5, label %6, label %12

; <label>:6                                       ; preds = %0
  %7 = tail call i32* @__errno_location() #12
  %8 = load i32, i32* %7, align 4, !tbaa !38
  tail call void @lua_pushnil(%struct.lua_State* %L) #1
  %9 = tail call i8* @strerror(i32 %8) #1
  %10 = tail call i8* (%struct.lua_State*, i8*, ...) @lua_pushfstring(%struct.lua_State* %L, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.19.236, i64 0, i64 0), i8* %9) #1
  %11 = sext i32 %8 to i64
  tail call void @lua_pushinteger(%struct.lua_State* %L, i64 %11) #1
  br label %12

; <label>:12                                      ; preds = %0, %6
  %13 = phi i32 [ 3, %6 ], [ 1, %0 ]
  ret i32 %13
}

; Function Attrs: nounwind uwtable
define internal i32 @io_type(%struct.lua_State* %L) #0 {
  tail call void @luaL_checkany(%struct.lua_State* %L, i32 1) #1
  %1 = tail call i8* @lua_touserdata(%struct.lua_State* %L, i32 1) #1
  tail call void @lua_getfield(%struct.lua_State* %L, i32 -10000, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5.228, i64 0, i64 0)) #1
  %2 = icmp eq i8* %1, null
  br i1 %2, label %9, label %3

; <label>:3                                       ; preds = %0
  %4 = tail call i32 @lua_getmetatable(%struct.lua_State* %L, i32 1) #1
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %9, label %6

; <label>:6                                       ; preds = %3
  %7 = tail call i32 @lua_rawequal(%struct.lua_State* %L, i32 -2, i32 -1) #1
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %10

; <label>:9                                       ; preds = %6, %3, %0
  tail call void @lua_pushnil(%struct.lua_State* %L) #1
  br label %16

; <label>:10                                      ; preds = %6
  %11 = bitcast i8* %1 to %struct._IO_FILE**
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8, !tbaa !25
  %13 = icmp eq %struct._IO_FILE* %12, null
  br i1 %13, label %14, label %15

; <label>:14                                      ; preds = %10
  tail call void @lua_pushlstring(%struct.lua_State* %L, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.42.250, i64 0, i64 0), i64 11) #1
  br label %16

; <label>:15                                      ; preds = %10
  tail call void @lua_pushlstring(%struct.lua_State* %L, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.43.251, i64 0, i64 0), i64 4) #1
  br label %16

; <label>:16                                      ; preds = %14, %15, %9
  ret i32 1
}

; Function Attrs: nounwind uwtable
define internal i32 @io_write(%struct.lua_State* %L) #0 {
  tail call void @lua_rawgeti(%struct.lua_State* %L, i32 -10001, i32 2) #1
  %1 = tail call i8* @lua_touserdata(%struct.lua_State* %L, i32 -1) #1
  %2 = bitcast i8* %1 to %struct._IO_FILE**
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %2, align 8, !tbaa !25
  %4 = icmp eq %struct._IO_FILE* %3, null
  br i1 %4, label %5, label %getiofile.exit

; <label>:5                                       ; preds = %0
  %6 = tail call i32 (%struct.lua_State*, i8*, ...) @luaL_error(%struct.lua_State* %L, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.39.248, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.36.243, i64 0, i64 0)) #1
  br label %getiofile.exit

getiofile.exit:                                   ; preds = %0, %5
  %7 = tail call fastcc i32 @g_write(%struct.lua_State* %L, %struct._IO_FILE* %3, i32 1)
  ret i32 %7
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @g_write(%struct.lua_State* %L, %struct._IO_FILE* nocapture %f, i32 %arg) #0 {
  %l = alloca i64, align 8
  %1 = tail call i32 @lua_gettop(%struct.lua_State* %L) #1
  %nargs.0.1 = add nsw i32 %1, -1
  %2 = icmp eq i32 %nargs.0.1, 0
  br i1 %2, label %._crit_edge.thread, label %.lr.ph

.lr.ph:                                           ; preds = %0
  %3 = bitcast i64* %l to i8*
  br label %4

; <label>:4                                       ; preds = %.lr.ph, %27
  %nargs.04 = phi i32 [ %nargs.0.1, %.lr.ph ], [ %nargs.0, %27 ]
  %.03 = phi i32 [ %arg, %.lr.ph ], [ %28, %27 ]
  %status.02 = phi i32 [ 1, %.lr.ph ], [ %status.1, %27 ]
  %5 = call i32 @lua_type(%struct.lua_State* %L, i32 %.03) #1
  %6 = icmp eq i32 %5, 3
  br i1 %6, label %7, label %16

; <label>:7                                       ; preds = %4
  %8 = icmp eq i32 %status.02, 0
  br i1 %8, label %13, label %9

; <label>:9                                       ; preds = %7
  %10 = call double @lua_tonumber(%struct.lua_State* %L, i32 %.03) #1
  %11 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %f, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.31.249, i64 0, i64 0), double %10) #1
  %12 = icmp sgt i32 %11, 0
  br label %13

; <label>:13                                      ; preds = %7, %9
  %14 = phi i1 [ false, %7 ], [ %12, %9 ]
  %15 = zext i1 %14 to i32
  br label %27

; <label>:16                                      ; preds = %4
  call void @llvm.lifetime.start(i64 8, i8* %3) #1
  %17 = call i8* @luaL_checklstring(%struct.lua_State* %L, i32 %.03, i64* nonnull %l) #1
  %18 = icmp eq i32 %status.02, 0
  br i1 %18, label %24, label %19

; <label>:19                                      ; preds = %16
  %20 = load i64, i64* %l, align 8, !tbaa !39
  %21 = call i64 @fwrite(i8* %17, i64 1, i64 %20, %struct._IO_FILE* %f) #1
  %22 = load i64, i64* %l, align 8, !tbaa !39
  %23 = icmp eq i64 %21, %22
  br label %24

; <label>:24                                      ; preds = %16, %19
  %25 = phi i1 [ false, %16 ], [ %23, %19 ]
  %26 = zext i1 %25 to i32
  call void @llvm.lifetime.end(i64 8, i8* %3) #1
  br label %27

; <label>:27                                      ; preds = %13, %24
  %status.1 = phi i32 [ %15, %13 ], [ %26, %24 ]
  %28 = add nsw i32 %.03, 1
  %nargs.0 = add nsw i32 %nargs.04, -1
  %29 = icmp eq i32 %nargs.0, 0
  br i1 %29, label %._crit_edge, label %4

._crit_edge:                                      ; preds = %27
  %status.1.lcssa = phi i32 [ %status.1, %27 ]
  %30 = tail call i32* @__errno_location() #12
  %31 = load i32, i32* %30, align 4, !tbaa !38
  %32 = icmp eq i32 %status.1.lcssa, 0
  br i1 %32, label %33, label %._crit_edge.thread

._crit_edge.thread:                               ; preds = %0, %._crit_edge
  call void @lua_pushboolean(%struct.lua_State* %L, i32 1) #1
  br label %pushresult.exit

; <label>:33                                      ; preds = %._crit_edge
  call void @lua_pushnil(%struct.lua_State* %L) #1
  %34 = call i8* @strerror(i32 %31) #1
  %35 = call i8* (%struct.lua_State*, i8*, ...) @lua_pushfstring(%struct.lua_State* %L, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.19.236, i64 0, i64 0), i8* %34) #1
  %36 = sext i32 %31 to i64
  call void @lua_pushinteger(%struct.lua_State* %L, i64 %36) #1
  br label %pushresult.exit

pushresult.exit:                                  ; preds = %._crit_edge.thread, %33
  %.0.i = phi i32 [ 1, %._crit_edge.thread ], [ 3, %33 ]
  ret i32 %.0.i
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @g_read(%struct.lua_State* %L, %struct._IO_FILE* nocapture %f, i32 %first) #0 {
  %d.i = alloca double, align 8
  %1 = tail call i32 @lua_gettop(%struct.lua_State* %L) #1
  tail call void @clearerr(%struct._IO_FILE* %f) #1
  %2 = icmp eq i32 %1, 1
  br i1 %2, label %3, label %.lr.ph

; <label>:3                                       ; preds = %0
  %4 = tail call fastcc i32 @read_line(%struct.lua_State* %L, %struct._IO_FILE* %f)
  %5 = add nsw i32 %first, 1
  br label %.loopexit

.lr.ph:                                           ; preds = %0
  %6 = add nsw i32 %1, 19
  tail call void @luaL_checkstack(%struct.lua_State* %L, i32 %6, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.21.252, i64 0, i64 0)) #1
  %7 = add nsw i32 %1, -2
  %8 = bitcast double* %d.i to i8*
  br label %9

; <label>:9                                       ; preds = %.lr.ph, %.thread
  %10 = phi i32 [ %7, %.lr.ph ], [ %47, %.thread ]
  %n.05 = phi i32 [ %first, %.lr.ph ], [ %46, %.thread ]
  %11 = call i32 @lua_type(%struct.lua_State* %L, i32 %n.05) #1
  %12 = icmp eq i32 %11, 3
  br i1 %12, label %13, label %23

; <label>:13                                      ; preds = %9
  %14 = call i64 @lua_tointeger(%struct.lua_State* %L, i32 %n.05) #1
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %16, label %21

; <label>:16                                      ; preds = %13
  %17 = call i32 @_IO_getc(%struct._IO_FILE* %f) #1
  %18 = call i32 @ungetc(i32 %17, %struct._IO_FILE* %f) #1
  call void @lua_pushlstring(%struct.lua_State* %L, i8* null, i64 0) #1
  %19 = icmp ne i32 %17, -1
  %20 = zext i1 %19 to i32
  br label %.thread

; <label>:21                                      ; preds = %13
  %22 = call fastcc i32 @read_chars(%struct.lua_State* %L, %struct._IO_FILE* %f, i64 %14)
  br label %.thread

; <label>:23                                      ; preds = %9
  %24 = call i8* @lua_tolstring(%struct.lua_State* %L, i32 %n.05, i64* null) #1
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

; <label>:26                                      ; preds = %23
  %27 = load i8, i8* %24, align 1, !tbaa !76
  %28 = icmp eq i8 %27, 42
  br i1 %28, label %31, label %29

; <label>:29                                      ; preds = %23, %26
  %30 = call i32 @luaL_argerror(%struct.lua_State* %L, i32 %n.05, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.22.253, i64 0, i64 0)) #1
  br label %31

; <label>:31                                      ; preds = %29, %26
  %32 = getelementptr inbounds i8, i8* %24, i64 1
  %33 = load i8, i8* %32, align 1, !tbaa !76
  %34 = sext i8 %33 to i32
  switch i32 %34, label %44 [
    i32 110, label %35
    i32 108, label %40
    i32 97, label %42
  ]

; <label>:35                                      ; preds = %31
  call void @llvm.lifetime.start(i64 8, i8* %8) #1
  %36 = call i32 (%struct._IO_FILE*, i8*, ...) @fscanf(%struct._IO_FILE* %f, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.24.254, i64 0, i64 0), double* nonnull %d.i) #1
  %37 = icmp eq i32 %36, 1
  br i1 %37, label %38, label %read_number.exit

; <label>:38                                      ; preds = %35
  %39 = load double, double* %d.i, align 8, !tbaa !36
  call void @lua_pushnumber(%struct.lua_State* %L, double %39) #1
  br label %read_number.exit

read_number.exit:                                 ; preds = %35, %38
  %.0.i = phi i32 [ 1, %38 ], [ 0, %35 ]
  call void @llvm.lifetime.end(i64 8, i8* %8) #1
  br label %.thread

; <label>:40                                      ; preds = %31
  %41 = call fastcc i32 @read_line(%struct.lua_State* %L, %struct._IO_FILE* %f)
  br label %.thread

; <label>:42                                      ; preds = %31
  %43 = call fastcc i32 @read_chars(%struct.lua_State* %L, %struct._IO_FILE* %f, i64 -1)
  br label %.thread

; <label>:44                                      ; preds = %31
  %n.05.lcssa = phi i32 [ %n.05, %31 ]
  %45 = call i32 @luaL_argerror(%struct.lua_State* %L, i32 %n.05.lcssa, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.23.255, i64 0, i64 0)) #1
  br label %64

.thread:                                          ; preds = %read_number.exit, %40, %42, %16, %21
  %success.3 = phi i32 [ %20, %16 ], [ %22, %21 ], [ %.0.i, %read_number.exit ], [ %41, %40 ], [ 1, %42 ]
  %46 = add nsw i32 %n.05, 1
  %47 = add nsw i32 %10, -1
  %48 = icmp ne i32 %10, 0
  %49 = icmp ne i32 %success.3, 0
  %50 = and i1 %49, %48
  br i1 %50, label %9, label %.loopexit.loopexit

.loopexit.loopexit:                               ; preds = %.thread
  %.lcssa = phi i32 [ %46, %.thread ]
  %success.3.lcssa = phi i32 [ %success.3, %.thread ]
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %3
  %success.4 = phi i32 [ %4, %3 ], [ %success.3.lcssa, %.loopexit.loopexit ]
  %n.1 = phi i32 [ %5, %3 ], [ %.lcssa, %.loopexit.loopexit ]
  %51 = call i32 @ferror(%struct._IO_FILE* %f) #1
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %59, label %53

; <label>:53                                      ; preds = %.loopexit
  %54 = tail call i32* @__errno_location() #12
  %55 = load i32, i32* %54, align 4, !tbaa !38
  call void @lua_pushnil(%struct.lua_State* %L) #1
  %56 = call i8* @strerror(i32 %55) #1
  %57 = call i8* (%struct.lua_State*, i8*, ...) @lua_pushfstring(%struct.lua_State* %L, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.19.236, i64 0, i64 0), i8* %56) #1
  %58 = sext i32 %55 to i64
  call void @lua_pushinteger(%struct.lua_State* %L, i64 %58) #1
  br label %64

; <label>:59                                      ; preds = %.loopexit
  %60 = icmp eq i32 %success.4, 0
  br i1 %60, label %61, label %62

; <label>:61                                      ; preds = %59
  call void @lua_settop(%struct.lua_State* %L, i32 -2) #1
  call void @lua_pushnil(%struct.lua_State* %L) #1
  br label %62

; <label>:62                                      ; preds = %59, %61
  %63 = sub nsw i32 %n.1, %first
  br label %64

; <label>:64                                      ; preds = %44, %62, %53
  %.3 = phi i32 [ 3, %53 ], [ %63, %62 ], [ %45, %44 ]
  ret i32 %.3
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @read_line(%struct.lua_State* %L, %struct._IO_FILE* nocapture %f) #0 {
  %b = alloca %struct.luaL_Buffer, align 8
  %1 = bitcast %struct.luaL_Buffer* %b to i8*
  call void @llvm.lifetime.start(i64 8216, i8* %1) #1
  call void @luaL_buffinit(%struct.lua_State* %L, %struct.luaL_Buffer* nonnull %b) #1
  %2 = call i8* @luaL_prepbuffer(%struct.luaL_Buffer* nonnull %b) #1
  %3 = call i8* @fgets(i8* %2, i32 8192, %struct._IO_FILE* %f) #1
  %4 = icmp eq i8* %3, null
  br i1 %4, label %._crit_edge, label %.lr.ph

.lr.ph:                                           ; preds = %0
  %5 = getelementptr inbounds %struct.luaL_Buffer, %struct.luaL_Buffer* %b, i64 0, i32 0
  br label %9

._crit_edge.loopexit:                             ; preds = %21
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %0
  call void @luaL_pushresult(%struct.luaL_Buffer* nonnull %b) #1
  %6 = call i64 @lua_objlen(%struct.lua_State* %L, i32 -1) #1
  %7 = icmp ne i64 %6, 0
  %8 = zext i1 %7 to i32
  br label %27

; <label>:9                                       ; preds = %.lr.ph, %21
  %10 = phi i8* [ %2, %.lr.ph ], [ %24, %21 ]
  %11 = call i64 @strlen(i8* %10) #11
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %21, label %13

; <label>:13                                      ; preds = %9
  %14 = add i64 %11, -1
  %15 = getelementptr inbounds i8, i8* %10, i64 %14
  %16 = load i8, i8* %15, align 1, !tbaa !76
  %17 = icmp eq i8 %16, 10
  br i1 %17, label %18, label %21

; <label>:18                                      ; preds = %13
  %.lcssa = phi i64 [ %14, %13 ]
  %19 = load i8*, i8** %5, align 8, !tbaa !79
  %20 = getelementptr inbounds i8, i8* %19, i64 %.lcssa
  store i8* %20, i8** %5, align 8, !tbaa !79
  call void @luaL_pushresult(%struct.luaL_Buffer* nonnull %b) #1
  br label %27

; <label>:21                                      ; preds = %9, %13
  %22 = load i8*, i8** %5, align 8, !tbaa !79
  %23 = getelementptr inbounds i8, i8* %22, i64 %11
  store i8* %23, i8** %5, align 8, !tbaa !79
  %24 = call i8* @luaL_prepbuffer(%struct.luaL_Buffer* nonnull %b) #1
  %25 = call i8* @fgets(i8* %24, i32 8192, %struct._IO_FILE* %f) #1
  %26 = icmp eq i8* %25, null
  br i1 %26, label %._crit_edge.loopexit, label %9

; <label>:27                                      ; preds = %._crit_edge, %18
  %.1.ph = phi i32 [ 1, %18 ], [ %8, %._crit_edge ]
  call void @llvm.lifetime.end(i64 8216, i8* %1) #1
  ret i32 %.1.ph
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @read_chars(%struct.lua_State* %L, %struct._IO_FILE* nocapture %f, i64 %n) #0 {
  %b = alloca %struct.luaL_Buffer, align 8
  %1 = bitcast %struct.luaL_Buffer* %b to i8*
  call void @llvm.lifetime.start(i64 8216, i8* %1) #1
  call void @luaL_buffinit(%struct.lua_State* %L, %struct.luaL_Buffer* nonnull %b) #1
  %2 = getelementptr inbounds %struct.luaL_Buffer, %struct.luaL_Buffer* %b, i64 0, i32 0
  br label %3

; <label>:3                                       ; preds = %10, %0
  %rlen.0 = phi i64 [ 8192, %0 ], [ %.0.rlen.0, %10 ]
  %.0 = phi i64 [ %n, %0 ], [ %11, %10 ]
  %4 = call i8* @luaL_prepbuffer(%struct.luaL_Buffer* nonnull %b) #1
  %5 = icmp ugt i64 %rlen.0, %.0
  %.0.rlen.0 = select i1 %5, i64 %.0, i64 %rlen.0
  %6 = call i64 @fread(i8* %4, i64 1, i64 %.0.rlen.0, %struct._IO_FILE* %f) #1
  %7 = load i8*, i8** %2, align 8, !tbaa !79
  %8 = getelementptr inbounds i8, i8* %7, i64 %6
  store i8* %8, i8** %2, align 8, !tbaa !79
  %9 = icmp eq i64 %.0, %6
  br i1 %9, label %.critedge.thread, label %10

.critedge.thread:                                 ; preds = %3
  call void @luaL_pushresult(%struct.luaL_Buffer* nonnull %b) #1
  br label %16

; <label>:10                                      ; preds = %3
  %11 = sub i64 %.0, %6
  %12 = icmp eq i64 %6, %.0.rlen.0
  br i1 %12, label %3, label %13

; <label>:13                                      ; preds = %10
  call void @luaL_pushresult(%struct.luaL_Buffer* nonnull %b) #1
  %14 = call i64 @lua_objlen(%struct.lua_State* %L, i32 -1) #1
  %15 = icmp ne i64 %14, 0
  br label %16

; <label>:16                                      ; preds = %.critedge.thread, %13
  %17 = phi i1 [ %15, %13 ], [ true, %.critedge.thread ]
  %18 = zext i1 %17 to i32
  call void @llvm.lifetime.end(i64 8216, i8* %1) #1
  ret i32 %18
}

; Function Attrs: nounwind uwtable
define internal fastcc void @g_iofile(%struct.lua_State* %L, i32 %f, i8* nocapture readonly %mode) #0 {
  %1 = tail call i32 @lua_type(%struct.lua_State* %L, i32 1) #1
  %2 = icmp slt i32 %1, 1
  br i1 %2, label %27, label %3

; <label>:3                                       ; preds = %0
  %4 = tail call i8* @lua_tolstring(%struct.lua_State* %L, i32 1, i64* null) #1
  %5 = icmp eq i8* %4, null
  br i1 %5, label %19, label %6

; <label>:6                                       ; preds = %3
  %7 = tail call i8* @lua_newuserdata(%struct.lua_State* %L, i64 8) #1
  %8 = bitcast i8* %7 to %struct._IO_FILE**
  store %struct._IO_FILE* null, %struct._IO_FILE** %8, align 8, !tbaa !25
  tail call void @lua_getfield(%struct.lua_State* %L, i32 -10000, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5.228, i64 0, i64 0)) #1
  %9 = tail call i32 @lua_setmetatable(%struct.lua_State* %L, i32 -2) #1
  %10 = tail call %struct._IO_FILE* @fopen(i8* %4, i8* %mode) #1
  store %struct._IO_FILE* %10, %struct._IO_FILE** %8, align 8, !tbaa !25
  %11 = icmp eq %struct._IO_FILE* %10, null
  br i1 %11, label %12, label %26

; <label>:12                                      ; preds = %6
  %13 = tail call i32* @__errno_location() #12
  %14 = load i32, i32* %13, align 4, !tbaa !38
  %15 = tail call i8* @strerror(i32 %14) #1
  %16 = tail call i8* (%struct.lua_State*, i8*, ...) @lua_pushfstring(%struct.lua_State* %L, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.18.257, i64 0, i64 0), i8* %4, i8* %15) #1
  %17 = tail call i8* @lua_tolstring(%struct.lua_State* %L, i32 -1, i64* null) #1
  %18 = tail call i32 @luaL_argerror(%struct.lua_State* %L, i32 1, i8* %17) #1
  br label %26

; <label>:19                                      ; preds = %3
  %20 = tail call i8* @luaL_checkudata(%struct.lua_State* %L, i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5.228, i64 0, i64 0)) #1
  %21 = bitcast i8* %20 to %struct._IO_FILE**
  %22 = load %struct._IO_FILE*, %struct._IO_FILE** %21, align 8, !tbaa !25
  %23 = icmp eq %struct._IO_FILE* %22, null
  br i1 %23, label %24, label %tofile.exit

; <label>:24                                      ; preds = %19
  %25 = tail call i32 (%struct.lua_State*, i8*, ...) @luaL_error(%struct.lua_State* %L, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.16.259, i64 0, i64 0)) #1
  br label %tofile.exit

tofile.exit:                                      ; preds = %19, %24
  tail call void @lua_pushvalue(%struct.lua_State* %L, i32 1) #1
  br label %26

; <label>:26                                      ; preds = %6, %12, %tofile.exit
  tail call void @lua_rawseti(%struct.lua_State* %L, i32 -10001, i32 %f) #1
  br label %27

; <label>:27                                      ; preds = %26, %0
  tail call void @lua_rawgeti(%struct.lua_State* %L, i32 -10001, i32 %f) #1
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @io_readline(%struct.lua_State* %L) #0 {
  %1 = tail call i8* @lua_touserdata(%struct.lua_State* %L, i32 -10003) #1
  %2 = bitcast i8* %1 to %struct._IO_FILE**
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %2, align 8, !tbaa !25
  %4 = icmp eq %struct._IO_FILE* %3, null
  br i1 %4, label %5, label %7

; <label>:5                                       ; preds = %0
  %6 = tail call i32 (%struct.lua_State*, i8*, ...) @luaL_error(%struct.lua_State* %L, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.20.260, i64 0, i64 0)) #1
  br label %7

; <label>:7                                       ; preds = %5, %0
  %8 = tail call fastcc i32 @read_line(%struct.lua_State* %L, %struct._IO_FILE* %3)
  %9 = tail call i32 @ferror(%struct._IO_FILE* %3) #1
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %16, label %11

; <label>:11                                      ; preds = %7
  %12 = tail call i32* @__errno_location() #12
  %13 = load i32, i32* %12, align 4, !tbaa !38
  %14 = tail call i8* @strerror(i32 %13) #1
  %15 = tail call i32 (%struct.lua_State*, i8*, ...) @luaL_error(%struct.lua_State* %L, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.19.236, i64 0, i64 0), i8* %14) #1
  br label %24

; <label>:16                                      ; preds = %7
  %17 = icmp eq i32 %8, 0
  br i1 %17, label %18, label %24

; <label>:18                                      ; preds = %16
  %19 = tail call i32 @lua_toboolean(%struct.lua_State* %L, i32 -10004) #1
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %24, label %21

; <label>:21                                      ; preds = %18
  tail call void @lua_settop(%struct.lua_State* %L, i32 0) #1
  tail call void @lua_pushvalue(%struct.lua_State* %L, i32 -10003) #1
  tail call void @lua_getfenv(%struct.lua_State* %L, i32 1) #1
  tail call void @lua_getfield(%struct.lua_State* %L, i32 -1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.17.230, i64 0, i64 0)) #1
  %22 = tail call i32 (%struct.lua_State*)* @lua_tocfunction(%struct.lua_State* %L, i32 -1) #1
  %23 = tail call i32 %22(%struct.lua_State* %L) #1
  br label %24

; <label>:24                                      ; preds = %21, %18, %16, %11
  %.0 = phi i32 [ %15, %11 ], [ 1, %16 ], [ 0, %18 ], [ 0, %21 ]
  ret i32 %.0
}

; Function Attrs: nounwind uwtable
define internal i32 @f_flush(%struct.lua_State* %L) #0 {
  %1 = tail call i8* @luaL_checkudata(%struct.lua_State* %L, i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5.228, i64 0, i64 0)) #1
  %2 = bitcast i8* %1 to %struct._IO_FILE**
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %2, align 8, !tbaa !25
  %4 = icmp eq %struct._IO_FILE* %3, null
  br i1 %4, label %5, label %tofile.exit

; <label>:5                                       ; preds = %0
  %6 = tail call i32 (%struct.lua_State*, i8*, ...) @luaL_error(%struct.lua_State* %L, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.16.259, i64 0, i64 0)) #1
  %.pre.i = load %struct._IO_FILE*, %struct._IO_FILE** %2, align 8, !tbaa !25
  br label %tofile.exit

tofile.exit:                                      ; preds = %0, %5
  %7 = phi %struct._IO_FILE* [ %.pre.i, %5 ], [ %3, %0 ]
  %8 = tail call i32 @fflush(%struct._IO_FILE* %7) #1
  %9 = icmp eq i32 %8, 0
  %10 = tail call i32* @__errno_location() #12
  %11 = load i32, i32* %10, align 4, !tbaa !38
  br i1 %9, label %12, label %13

; <label>:12                                      ; preds = %tofile.exit
  tail call void @lua_pushboolean(%struct.lua_State* %L, i32 1) #1
  br label %pushresult.exit

; <label>:13                                      ; preds = %tofile.exit
  tail call void @lua_pushnil(%struct.lua_State* %L) #1
  %14 = tail call i8* @strerror(i32 %11) #1
  %15 = tail call i8* (%struct.lua_State*, i8*, ...) @lua_pushfstring(%struct.lua_State* %L, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.19.236, i64 0, i64 0), i8* %14) #1
  %16 = sext i32 %11 to i64
  tail call void @lua_pushinteger(%struct.lua_State* %L, i64 %16) #1
  br label %pushresult.exit

pushresult.exit:                                  ; preds = %12, %13
  %.0.i = phi i32 [ 1, %12 ], [ 3, %13 ]
  ret i32 %.0.i
}

; Function Attrs: nounwind uwtable
define internal i32 @f_lines(%struct.lua_State* %L) #0 {
  %1 = tail call i8* @luaL_checkudata(%struct.lua_State* %L, i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5.228, i64 0, i64 0)) #1
  %2 = bitcast i8* %1 to %struct._IO_FILE**
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %2, align 8, !tbaa !25
  %4 = icmp eq %struct._IO_FILE* %3, null
  br i1 %4, label %5, label %tofile.exit

; <label>:5                                       ; preds = %0
  %6 = tail call i32 (%struct.lua_State*, i8*, ...) @luaL_error(%struct.lua_State* %L, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.16.259, i64 0, i64 0)) #1
  br label %tofile.exit

tofile.exit:                                      ; preds = %0, %5
  tail call void @lua_pushvalue(%struct.lua_State* %L, i32 1) #1
  tail call void @lua_pushboolean(%struct.lua_State* %L, i32 0) #1
  tail call void @lua_pushcclosure(%struct.lua_State* %L, i32 (%struct.lua_State*)* nonnull @io_readline, i32 2) #1
  ret i32 1
}

; Function Attrs: nounwind uwtable
define internal i32 @f_read(%struct.lua_State* %L) #0 {
  %1 = tail call i8* @luaL_checkudata(%struct.lua_State* %L, i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5.228, i64 0, i64 0)) #1
  %2 = bitcast i8* %1 to %struct._IO_FILE**
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %2, align 8, !tbaa !25
  %4 = icmp eq %struct._IO_FILE* %3, null
  br i1 %4, label %5, label %tofile.exit

; <label>:5                                       ; preds = %0
  %6 = tail call i32 (%struct.lua_State*, i8*, ...) @luaL_error(%struct.lua_State* %L, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.16.259, i64 0, i64 0)) #1
  %.pre.i = load %struct._IO_FILE*, %struct._IO_FILE** %2, align 8, !tbaa !25
  br label %tofile.exit

tofile.exit:                                      ; preds = %0, %5
  %7 = phi %struct._IO_FILE* [ %.pre.i, %5 ], [ %3, %0 ]
  %8 = tail call fastcc i32 @g_read(%struct.lua_State* %L, %struct._IO_FILE* %7, i32 2)
  ret i32 %8
}

; Function Attrs: nounwind uwtable
define internal i32 @f_seek(%struct.lua_State* %L) #0 {
  %1 = tail call i8* @luaL_checkudata(%struct.lua_State* %L, i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5.228, i64 0, i64 0)) #1
  %2 = bitcast i8* %1 to %struct._IO_FILE**
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %2, align 8, !tbaa !25
  %4 = icmp eq %struct._IO_FILE* %3, null
  br i1 %4, label %5, label %tofile.exit

; <label>:5                                       ; preds = %0
  %6 = tail call i32 (%struct.lua_State*, i8*, ...) @luaL_error(%struct.lua_State* %L, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.16.259, i64 0, i64 0)) #1
  %.pre.i = load %struct._IO_FILE*, %struct._IO_FILE** %2, align 8, !tbaa !25
  br label %tofile.exit

tofile.exit:                                      ; preds = %0, %5
  %7 = phi %struct._IO_FILE* [ %.pre.i, %5 ], [ %3, %0 ]
  %8 = tail call i32 @luaL_checkoption(%struct.lua_State* %L, i32 2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.26.270, i64 0, i64 0), i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @f_seek.modenames, i64 0, i64 0)) #1
  %9 = tail call i64 @luaL_optinteger(%struct.lua_State* %L, i32 3, i64 0) #1
  %10 = sext i32 %8 to i64
  %11 = getelementptr inbounds [3 x i32], [3 x i32]* @f_seek.mode, i64 0, i64 %10
  %12 = load i32, i32* %11, align 4, !tbaa !38
  %13 = tail call i32 @fseek(%struct._IO_FILE* %7, i64 %9, i32 %12) #1
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %21, label %15

; <label>:15                                      ; preds = %tofile.exit
  %16 = tail call i32* @__errno_location() #12
  %17 = load i32, i32* %16, align 4, !tbaa !38
  tail call void @lua_pushnil(%struct.lua_State* %L) #1
  %18 = tail call i8* @strerror(i32 %17) #1
  %19 = tail call i8* (%struct.lua_State*, i8*, ...) @lua_pushfstring(%struct.lua_State* %L, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.19.236, i64 0, i64 0), i8* %18) #1
  %20 = sext i32 %17 to i64
  tail call void @lua_pushinteger(%struct.lua_State* %L, i64 %20) #1
  br label %23

; <label>:21                                      ; preds = %tofile.exit
  %22 = tail call i64 @ftell(%struct._IO_FILE* %7) #1
  tail call void @lua_pushinteger(%struct.lua_State* %L, i64 %22) #1
  br label %23

; <label>:23                                      ; preds = %21, %15
  %.0 = phi i32 [ 3, %15 ], [ 1, %21 ]
  ret i32 %.0
}

; Function Attrs: nounwind uwtable
define internal i32 @f_setvbuf(%struct.lua_State* %L) #0 {
  %1 = tail call i8* @luaL_checkudata(%struct.lua_State* %L, i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5.228, i64 0, i64 0)) #1
  %2 = bitcast i8* %1 to %struct._IO_FILE**
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %2, align 8, !tbaa !25
  %4 = icmp eq %struct._IO_FILE* %3, null
  br i1 %4, label %5, label %tofile.exit

; <label>:5                                       ; preds = %0
  %6 = tail call i32 (%struct.lua_State*, i8*, ...) @luaL_error(%struct.lua_State* %L, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.16.259, i64 0, i64 0)) #1
  %.pre.i = load %struct._IO_FILE*, %struct._IO_FILE** %2, align 8, !tbaa !25
  br label %tofile.exit

tofile.exit:                                      ; preds = %0, %5
  %7 = phi %struct._IO_FILE* [ %.pre.i, %5 ], [ %3, %0 ]
  %8 = tail call i32 @luaL_checkoption(%struct.lua_State* %L, i32 2, i8* null, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @f_setvbuf.modenames, i64 0, i64 0)) #1
  %9 = tail call i64 @luaL_optinteger(%struct.lua_State* %L, i32 3, i64 8192) #1
  %10 = sext i32 %8 to i64
  %11 = getelementptr inbounds [3 x i32], [3 x i32]* @f_setvbuf.mode, i64 0, i64 %10
  %12 = load i32, i32* %11, align 4, !tbaa !38
  %13 = tail call i32 @setvbuf(%struct._IO_FILE* %7, i8* null, i32 %12, i64 %9) #1
  %14 = icmp eq i32 %13, 0
  %15 = tail call i32* @__errno_location() #12
  %16 = load i32, i32* %15, align 4, !tbaa !38
  br i1 %14, label %17, label %18

; <label>:17                                      ; preds = %tofile.exit
  tail call void @lua_pushboolean(%struct.lua_State* %L, i32 1) #1
  br label %pushresult.exit

; <label>:18                                      ; preds = %tofile.exit
  tail call void @lua_pushnil(%struct.lua_State* %L) #1
  %19 = tail call i8* @strerror(i32 %16) #1
  %20 = tail call i8* (%struct.lua_State*, i8*, ...) @lua_pushfstring(%struct.lua_State* %L, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.19.236, i64 0, i64 0), i8* %19) #1
  %21 = sext i32 %16 to i64
  tail call void @lua_pushinteger(%struct.lua_State* %L, i64 %21) #1
  br label %pushresult.exit

pushresult.exit:                                  ; preds = %17, %18
  %.0.i = phi i32 [ 1, %17 ], [ 3, %18 ]
  ret i32 %.0.i
}

; Function Attrs: nounwind uwtable
define internal i32 @f_write(%struct.lua_State* %L) #0 {
  %1 = tail call i8* @luaL_checkudata(%struct.lua_State* %L, i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5.228, i64 0, i64 0)) #1
  %2 = bitcast i8* %1 to %struct._IO_FILE**
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %2, align 8, !tbaa !25
  %4 = icmp eq %struct._IO_FILE* %3, null
  br i1 %4, label %5, label %tofile.exit

; <label>:5                                       ; preds = %0
  %6 = tail call i32 (%struct.lua_State*, i8*, ...) @luaL_error(%struct.lua_State* %L, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.16.259, i64 0, i64 0)) #1
  %.pre.i = load %struct._IO_FILE*, %struct._IO_FILE** %2, align 8, !tbaa !25
  br label %tofile.exit

tofile.exit:                                      ; preds = %0, %5
  %7 = phi %struct._IO_FILE* [ %.pre.i, %5 ], [ %3, %0 ]
  %8 = tail call fastcc i32 @g_write(%struct.lua_State* %L, %struct._IO_FILE* %7, i32 2)
  ret i32 %8
}

; Function Attrs: nounwind uwtable
define internal i32 @io_gc(%struct.lua_State* %L) #0 {
  %1 = tail call i8* @luaL_checkudata(%struct.lua_State* %L, i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5.228, i64 0, i64 0)) #1
  %2 = bitcast i8* %1 to %struct._IO_FILE**
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %2, align 8, !tbaa !25
  %4 = icmp eq %struct._IO_FILE* %3, null
  br i1 %4, label %8, label %5

; <label>:5                                       ; preds = %0
  tail call void @lua_getfenv(%struct.lua_State* %L, i32 1) #1
  tail call void @lua_getfield(%struct.lua_State* %L, i32 -1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.17.230, i64 0, i64 0)) #1
  %6 = tail call i32 (%struct.lua_State*)* @lua_tocfunction(%struct.lua_State* %L, i32 -1) #1
  %7 = tail call i32 %6(%struct.lua_State* %L) #1
  br label %8

; <label>:8                                       ; preds = %0, %5
  ret i32 0
}

; Function Attrs: nounwind uwtable
define internal i32 @io_tostring(%struct.lua_State* %L) #0 {
  %1 = tail call i8* @luaL_checkudata(%struct.lua_State* %L, i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5.228, i64 0, i64 0)) #1
  %2 = bitcast i8* %1 to %struct._IO_FILE**
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %2, align 8, !tbaa !25
  %4 = icmp eq %struct._IO_FILE* %3, null
  br i1 %4, label %5, label %6

; <label>:5                                       ; preds = %0
  tail call void @lua_pushlstring(%struct.lua_State* %L, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.32.265, i64 0, i64 0), i64 13) #1
  br label %8

; <label>:6                                       ; preds = %0
  %7 = tail call i8* (%struct.lua_State*, i8*, ...) @lua_pushfstring(%struct.lua_State* %L, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.33.266, i64 0, i64 0), %struct._IO_FILE* %3) #1
  br label %8

; <label>:8                                       ; preds = %6, %5
  ret i32 1
}

; Function Attrs: nounwind uwtable
define hidden void @luaX_init(%struct.lua_State* %L) #0 {
  br label %1

; <label>:1                                       ; preds = %1, %0
  %indvars.iv = phi i64 [ 0, %0 ], [ %indvars.iv.next, %1 ]
  %2 = getelementptr inbounds [32 x i8*], [32 x i8*]* @luaX_tokens, i64 0, i64 %indvars.iv
  %3 = load i8*, i8** %2, align 8, !tbaa !25
  %4 = tail call i64 @strlen(i8* %3) #11
  %5 = tail call %union.TString* @luaS_newlstr(%struct.lua_State* %L, i8* %3, i64 %4) #1
  %6 = getelementptr inbounds %union.TString, %union.TString* %5, i64 0, i32 0, i32 2
  %7 = load i8, i8* %6, align 1, !tbaa !209
  %8 = or i8 %7, 32
  store i8 %8, i8* %6, align 1, !tbaa !209
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %9 = getelementptr inbounds %union.TString, %union.TString* %5, i64 0, i32 0, i32 3
  %10 = trunc i64 %indvars.iv.next to i8
  store i8 %10, i8* %9, align 1, !tbaa !217
  %exitcond = icmp eq i64 %indvars.iv.next, 21
  br i1 %exitcond, label %11, label %1

; <label>:11                                      ; preds = %1
  ret void
}

; Function Attrs: nounwind uwtable
define hidden i8* @luaX_token2str(%struct.LexState* nocapture readonly %ls, i32 %token) #0 {
  %1 = icmp slt i32 %token, 257
  br i1 %1, label %2, label %16

; <label>:2                                       ; preds = %0
  %3 = sext i32 %token to i64
  %4 = tail call i16** @__ctype_b_loc() #12
  %5 = load i16*, i16** %4, align 8, !tbaa !25
  %6 = getelementptr inbounds i16, i16* %5, i64 %3
  %7 = load i16, i16* %6, align 2, !tbaa !87
  %8 = and i16 %7, 2
  %9 = icmp eq i16 %8, 0
  %10 = getelementptr inbounds %struct.LexState, %struct.LexState* %ls, i64 0, i32 6
  %11 = load %struct.lua_State*, %struct.lua_State** %10, align 8, !tbaa !218
  br i1 %9, label %14, label %12

; <label>:12                                      ; preds = %2
  %13 = tail call i8* (%struct.lua_State*, i8*, ...) bitcast (i8* (%struct.lua_State.215*, i8*, ...)* @luaO_pushfstring to i8* (%struct.lua_State*, i8*, ...)*)(%struct.lua_State* %11, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.31.275, i64 0, i64 0), i32 %token) #1
  br label %21

; <label>:14                                      ; preds = %2
  %15 = tail call i8* (%struct.lua_State*, i8*, ...) bitcast (i8* (%struct.lua_State.215*, i8*, ...)* @luaO_pushfstring to i8* (%struct.lua_State*, i8*, ...)*)(%struct.lua_State* %11, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.32.276, i64 0, i64 0), i32 %token) #1
  br label %21

; <label>:16                                      ; preds = %0
  %17 = add nsw i32 %token, -257
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds [32 x i8*], [32 x i8*]* @luaX_tokens, i64 0, i64 %18
  %20 = load i8*, i8** %19, align 8, !tbaa !25
  br label %21

; <label>:21                                      ; preds = %12, %14, %16
  %.0 = phi i8* [ %20, %16 ], [ %13, %12 ], [ %15, %14 ]
  ret i8* %.0
}

; Function Attrs: nounwind uwtable
define hidden void @luaX_lexerror(%struct.LexState* nocapture readonly %ls, i8* %msg, i32 %token) #0 {
  %buff.i = alloca [80 x i8], align 16
  %buff = alloca [80 x i8], align 16
  %1 = getelementptr inbounds [80 x i8], [80 x i8]* %buff, i64 0, i64 0
  call void @llvm.lifetime.start(i64 80, i8* %1) #1
  %2 = getelementptr inbounds %struct.LexState, %struct.LexState* %ls, i64 0, i32 9
  %3 = load %union.TString*, %union.TString** %2, align 8, !tbaa !219
  %4 = getelementptr inbounds %union.TString, %union.TString* %3, i64 1
  %5 = bitcast %union.TString* %4 to i8*
  call void @luaO_chunkid(i8* %1, i8* %5, i64 80) #1
  %6 = getelementptr inbounds %struct.LexState, %struct.LexState* %ls, i64 0, i32 6
  %7 = load %struct.lua_State*, %struct.lua_State** %6, align 8, !tbaa !218
  %8 = getelementptr inbounds %struct.LexState, %struct.LexState* %ls, i64 0, i32 1
  %9 = load i32, i32* %8, align 4, !tbaa !220
  %10 = call i8* (%struct.lua_State*, i8*, ...) bitcast (i8* (%struct.lua_State.215*, i8*, ...)* @luaO_pushfstring to i8* (%struct.lua_State*, i8*, ...)*)(%struct.lua_State* %7, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.33.277, i64 0, i64 0), i8* %1, i32 %9, i8* %msg) #1
  %11 = icmp eq i32 %token, 0
  br i1 %11, label %74, label %12

; <label>:12                                      ; preds = %0
  %13 = load %struct.lua_State*, %struct.lua_State** %6, align 8, !tbaa !218
  %.off.i = add i32 %token, -284
  %switch.i = icmp ult i32 %.off.i, 3
  br i1 %switch.i, label %14, label %54

; <label>:14                                      ; preds = %12
  %15 = getelementptr inbounds %struct.LexState, %struct.LexState* %ls, i64 0, i32 8
  %16 = load %struct.Mbuffer*, %struct.Mbuffer** %15, align 8, !tbaa !221
  %17 = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %16, i64 0, i32 1
  %18 = load i64, i64* %17, align 8, !tbaa !222
  %19 = add i64 %18, 1
  %20 = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %16, i64 0, i32 2
  %21 = load i64, i64* %20, align 8, !tbaa !158
  %22 = icmp ugt i64 %19, %21
  br i1 %22, label %23, label %.save.exit.i_crit_edge

.save.exit.i_crit_edge:                           ; preds = %14
  %.phi.trans.insert = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %16, i64 0, i32 0
  %.pre3 = load i8*, i8** %.phi.trans.insert, align 8, !tbaa !157
  br label %save.exit.i

; <label>:23                                      ; preds = %14
  %24 = icmp ugt i64 %21, 9223372036854775805
  br i1 %24, label %25, label %34

; <label>:25                                      ; preds = %23
  %26 = getelementptr inbounds [80 x i8], [80 x i8]* %buff.i, i64 0, i64 0
  call void @llvm.lifetime.start(i64 80, i8* %26) #1
  %27 = load %union.TString*, %union.TString** %2, align 8, !tbaa !219
  %28 = getelementptr inbounds %union.TString, %union.TString* %27, i64 1
  %29 = bitcast %union.TString* %28 to i8*
  call void @luaO_chunkid(i8* %26, i8* %29, i64 80) #1
  %30 = load %struct.lua_State*, %struct.lua_State** %6, align 8, !tbaa !218
  %31 = load i32, i32* %8, align 4, !tbaa !220
  %32 = call i8* (%struct.lua_State*, i8*, ...) bitcast (i8* (%struct.lua_State.215*, i8*, ...)* @luaO_pushfstring to i8* (%struct.lua_State*, i8*, ...)*)(%struct.lua_State* %30, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.33.277, i64 0, i64 0), i8* %26, i32 %31, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.35.278, i64 0, i64 0)) #1
  %33 = load %struct.lua_State*, %struct.lua_State** %6, align 8, !tbaa !218
  call void @luaD_throw(%struct.lua_State* %33, i32 3) #1
  call void @llvm.lifetime.end(i64 80, i8* %26) #1
  %.pre = load i64, i64* %20, align 8, !tbaa !158
  %.pre1 = load %struct.lua_State*, %struct.lua_State** %6, align 8, !tbaa !218
  br label %34

; <label>:34                                      ; preds = %25, %23
  %35 = phi %struct.lua_State* [ %.pre1, %25 ], [ %13, %23 ]
  %36 = phi i64 [ %.pre, %25 ], [ %21, %23 ]
  %37 = shl i64 %36, 1
  %38 = icmp eq i64 %37, -2
  br i1 %38, label %43, label %39

; <label>:39                                      ; preds = %34
  %40 = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %16, i64 0, i32 0
  %41 = load i8*, i8** %40, align 8, !tbaa !157
  %42 = call i8* @luaM_realloc_(%struct.lua_State* %35, i8* %41, i64 %36, i64 %37) #1
  br label %45

; <label>:43                                      ; preds = %34
  %44 = call i8* @luaM_toobig(%struct.lua_State* %35) #1
  %.pre4 = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %16, i64 0, i32 0
  br label %45

; <label>:45                                      ; preds = %43, %39
  %.pre-phi = phi i8** [ %.pre4, %43 ], [ %40, %39 ]
  %46 = phi i8* [ %44, %43 ], [ %42, %39 ]
  store i8* %46, i8** %.pre-phi, align 8, !tbaa !157
  store i64 %37, i64* %20, align 8, !tbaa !158
  %.pre2 = load i64, i64* %17, align 8, !tbaa !222
  br label %save.exit.i

save.exit.i:                                      ; preds = %.save.exit.i_crit_edge, %45
  %47 = phi i8* [ %46, %45 ], [ %.pre3, %.save.exit.i_crit_edge ]
  %48 = phi i64 [ %.pre2, %45 ], [ %18, %.save.exit.i_crit_edge ]
  %49 = add i64 %48, 1
  store i64 %49, i64* %17, align 8, !tbaa !222
  %50 = getelementptr inbounds i8, i8* %47, i64 %48
  store i8 0, i8* %50, align 1, !tbaa !76
  %51 = load %struct.Mbuffer*, %struct.Mbuffer** %15, align 8, !tbaa !221
  %52 = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %51, i64 0, i32 0
  %53 = load i8*, i8** %52, align 8, !tbaa !157
  br label %txtToken.exit

; <label>:54                                      ; preds = %12
  %55 = icmp slt i32 %token, 257
  br i1 %55, label %56, label %68

; <label>:56                                      ; preds = %54
  %57 = sext i32 %token to i64
  %58 = tail call i16** @__ctype_b_loc() #12
  %59 = load i16*, i16** %58, align 8, !tbaa !25
  %60 = getelementptr inbounds i16, i16* %59, i64 %57
  %61 = load i16, i16* %60, align 2, !tbaa !87
  %62 = and i16 %61, 2
  %63 = icmp eq i16 %62, 0
  br i1 %63, label %66, label %64

; <label>:64                                      ; preds = %56
  %65 = call i8* (%struct.lua_State*, i8*, ...) bitcast (i8* (%struct.lua_State.215*, i8*, ...)* @luaO_pushfstring to i8* (%struct.lua_State*, i8*, ...)*)(%struct.lua_State* %13, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.31.275, i64 0, i64 0), i32 %token) #1
  br label %txtToken.exit

; <label>:66                                      ; preds = %56
  %67 = call i8* (%struct.lua_State*, i8*, ...) bitcast (i8* (%struct.lua_State.215*, i8*, ...)* @luaO_pushfstring to i8* (%struct.lua_State*, i8*, ...)*)(%struct.lua_State* %13, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.32.276, i64 0, i64 0), i32 %token) #1
  br label %txtToken.exit

; <label>:68                                      ; preds = %54
  %69 = add nsw i32 %token, -257
  %70 = sext i32 %69 to i64
  %71 = getelementptr inbounds [32 x i8*], [32 x i8*]* @luaX_tokens, i64 0, i64 %70
  %72 = load i8*, i8** %71, align 8, !tbaa !25
  br label %txtToken.exit

txtToken.exit:                                    ; preds = %64, %66, %68, %save.exit.i
  %.0.i = phi i8* [ %53, %save.exit.i ], [ %72, %68 ], [ %65, %64 ], [ %67, %66 ]
  %73 = call i8* (%struct.lua_State*, i8*, ...) bitcast (i8* (%struct.lua_State.215*, i8*, ...)* @luaO_pushfstring to i8* (%struct.lua_State*, i8*, ...)*)(%struct.lua_State* %13, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.34.279, i64 0, i64 0), i8* %10, i8* %.0.i) #1
  br label %74

; <label>:74                                      ; preds = %0, %txtToken.exit
  %75 = load %struct.lua_State*, %struct.lua_State** %6, align 8, !tbaa !218
  call void @luaD_throw(%struct.lua_State* %75, i32 3) #1
  call void @llvm.lifetime.end(i64 80, i8* %1) #1
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @luaX_syntaxerror(%struct.LexState* nocapture readonly %ls, i8* %msg) #0 {
  %1 = getelementptr inbounds %struct.LexState, %struct.LexState* %ls, i64 0, i32 3, i32 0
  %2 = load i32, i32* %1, align 4, !tbaa !223
  tail call void @luaX_lexerror(%struct.LexState* %ls, i8* %msg, i32 %2)
  ret void
}

; Function Attrs: nounwind uwtable
define hidden %union.TString* @luaX_newstring(%struct.LexState* nocapture readonly %ls, i8* %str, i64 %l) #0 {
  %1 = getelementptr inbounds %struct.LexState, %struct.LexState* %ls, i64 0, i32 6
  %2 = load %struct.lua_State*, %struct.lua_State** %1, align 8, !tbaa !218
  %3 = tail call %union.TString* @luaS_newlstr(%struct.lua_State* %2, i8* %str, i64 %l) #1
  %4 = getelementptr inbounds %struct.LexState, %struct.LexState* %ls, i64 0, i32 5
  %5 = load %struct.FuncState*, %struct.FuncState** %4, align 8, !tbaa !224
  %6 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %5, i64 0, i32 1
  %7 = load %struct.Table*, %struct.Table** %6, align 8, !tbaa !109
  %8 = tail call %struct.lua_TValue* @luaH_setstr(%struct.lua_State* %2, %struct.Table* %7, %union.TString* %3) #1
  %9 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %8, i64 0, i32 1
  %10 = load i32, i32* %9, align 4, !tbaa !10
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %14

; <label>:12                                      ; preds = %0
  %13 = bitcast %struct.lua_TValue* %8 to i32*
  store i32 1, i32* %13, align 4, !tbaa !38
  store i32 1, i32* %9, align 4, !tbaa !10
  br label %14

; <label>:14                                      ; preds = %12, %0
  ret %union.TString* %3
}

; Function Attrs: nounwind uwtable
define hidden void @luaX_setinput(%struct.lua_State* %L, %struct.LexState* nocapture %ls, %struct.Zio* %z, %union.TString* %source) #0 {
  %1 = getelementptr inbounds %struct.LexState, %struct.LexState* %ls, i64 0, i32 10
  store i8 46, i8* %1, align 1, !tbaa !225
  %2 = getelementptr inbounds %struct.LexState, %struct.LexState* %ls, i64 0, i32 6
  store %struct.lua_State* %L, %struct.lua_State** %2, align 8, !tbaa !218
  %3 = getelementptr inbounds %struct.LexState, %struct.LexState* %ls, i64 0, i32 4, i32 0
  store i32 287, i32* %3, align 4, !tbaa !226
  %4 = getelementptr inbounds %struct.LexState, %struct.LexState* %ls, i64 0, i32 7
  store %struct.Zio* %z, %struct.Zio** %4, align 8, !tbaa !227
  %5 = getelementptr inbounds %struct.LexState, %struct.LexState* %ls, i64 0, i32 5
  store %struct.FuncState* null, %struct.FuncState** %5, align 8, !tbaa !224
  %6 = getelementptr inbounds %struct.LexState, %struct.LexState* %ls, i64 0, i32 1
  store i32 1, i32* %6, align 4, !tbaa !220
  %7 = getelementptr inbounds %struct.LexState, %struct.LexState* %ls, i64 0, i32 2
  store i32 1, i32* %7, align 4, !tbaa !95
  %8 = getelementptr inbounds %struct.LexState, %struct.LexState* %ls, i64 0, i32 9
  store %union.TString* %source, %union.TString** %8, align 8, !tbaa !219
  %9 = getelementptr inbounds %struct.LexState, %struct.LexState* %ls, i64 0, i32 8
  %10 = load %struct.Mbuffer*, %struct.Mbuffer** %9, align 8, !tbaa !221
  %11 = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %10, i64 0, i32 0
  %12 = load i8*, i8** %11, align 8, !tbaa !157
  %13 = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %10, i64 0, i32 2
  %14 = load i64, i64* %13, align 8, !tbaa !158
  %15 = tail call i8* @luaM_realloc_(%struct.lua_State* %L, i8* %12, i64 %14, i64 32) #1
  %16 = load %struct.Mbuffer*, %struct.Mbuffer** %9, align 8, !tbaa !221
  %17 = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %16, i64 0, i32 0
  store i8* %15, i8** %17, align 8, !tbaa !157
  %18 = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %16, i64 0, i32 2
  store i64 32, i64* %18, align 8, !tbaa !158
  %19 = load %struct.Zio*, %struct.Zio** %4, align 8, !tbaa !227
  %20 = getelementptr inbounds %struct.Zio, %struct.Zio* %19, i64 0, i32 0
  %21 = load i64, i64* %20, align 8, !tbaa !228
  %22 = add i64 %21, -1
  store i64 %22, i64* %20, align 8, !tbaa !228
  %23 = icmp eq i64 %21, 0
  br i1 %23, label %30, label %24

; <label>:24                                      ; preds = %0
  %25 = getelementptr inbounds %struct.Zio, %struct.Zio* %19, i64 0, i32 1
  %26 = load i8*, i8** %25, align 8, !tbaa !230
  %27 = getelementptr inbounds i8, i8* %26, i64 1
  store i8* %27, i8** %25, align 8, !tbaa !230
  %28 = load i8, i8* %26, align 1, !tbaa !76
  %29 = zext i8 %28 to i32
  br label %32

; <label>:30                                      ; preds = %0
  %31 = tail call i32 @luaZ_fill(%struct.Zio* %19) #1
  br label %32

; <label>:32                                      ; preds = %30, %24
  %33 = phi i32 [ %29, %24 ], [ %31, %30 ]
  %34 = getelementptr inbounds %struct.LexState, %struct.LexState* %ls, i64 0, i32 0
  store i32 %33, i32* %34, align 4, !tbaa !231
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @luaX_next(%struct.LexState* %ls) #0 {
  %1 = getelementptr inbounds %struct.LexState, %struct.LexState* %ls, i64 0, i32 1
  %2 = load i32, i32* %1, align 4, !tbaa !220
  %3 = getelementptr inbounds %struct.LexState, %struct.LexState* %ls, i64 0, i32 2
  store i32 %2, i32* %3, align 4, !tbaa !95
  %4 = getelementptr inbounds %struct.LexState, %struct.LexState* %ls, i64 0, i32 4
  %5 = getelementptr inbounds %struct.Token, %struct.Token* %4, i64 0, i32 0
  %6 = load i32, i32* %5, align 4, !tbaa !226
  %7 = icmp eq i32 %6, 287
  br i1 %7, label %12, label %8

; <label>:8                                       ; preds = %0
  %9 = getelementptr inbounds %struct.LexState, %struct.LexState* %ls, i64 0, i32 3
  %10 = bitcast %struct.Token* %9 to i8*
  %11 = bitcast %struct.Token* %4 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %10, i8* %11, i64 16, i32 8, i1 false), !tbaa.struct !232
  store i32 287, i32* %5, align 4, !tbaa !226
  br label %16

; <label>:12                                      ; preds = %0
  %13 = getelementptr inbounds %struct.LexState, %struct.LexState* %ls, i64 0, i32 3, i32 1
  %14 = tail call fastcc i32 @llex(%struct.LexState* %ls, %union.SemInfo* %13)
  %15 = getelementptr inbounds %struct.LexState, %struct.LexState* %ls, i64 0, i32 3, i32 0
  store i32 %14, i32* %15, align 4, !tbaa !223
  br label %16

; <label>:16                                      ; preds = %12, %8
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @luaX_lookahead(%struct.LexState* %ls) #0 {
  %1 = getelementptr inbounds %struct.LexState, %struct.LexState* %ls, i64 0, i32 4, i32 1
  %2 = tail call fastcc i32 @llex(%struct.LexState* %ls, %union.SemInfo* %1)
  %3 = getelementptr inbounds %struct.LexState, %struct.LexState* %ls, i64 0, i32 4, i32 0
  store i32 %2, i32* %3, align 4, !tbaa !226
  ret void
}

; Function Attrs: nounwind
declare %struct.lconv* @localeconv() #5

; Function Attrs: nounwind readonly
declare i8* @memchr(i8*, i32, i64) #11

; Function Attrs: nounwind uwtable
define internal fastcc i32 @llex(%struct.LexState* %ls, %union.SemInfo* %seminfo) #0 {
  %buff.i.44 = alloca [80 x i8], align 16
  %buff.i.42 = alloca [80 x i8], align 16
  %buff.i.40 = alloca [80 x i8], align 16
  %buff.i = alloca [80 x i8], align 16
  %buff.i.55.i = alloca [80 x i8], align 16
  %buff.i.54.i = alloca [80 x i8], align 16
  %buff.i.53.i = alloca [80 x i8], align 16
  %buff.i.52.i = alloca [80 x i8], align 16
  %buff.i.51.i = alloca [80 x i8], align 16
  %buff.i.50.i = alloca [80 x i8], align 16
  %buff.i.49.i = alloca [80 x i8], align 16
  %buff.i.i = alloca [80 x i8], align 16
  %1 = getelementptr inbounds %struct.LexState, %struct.LexState* %ls, i64 0, i32 8
  %2 = load %struct.Mbuffer*, %struct.Mbuffer** %1, align 8, !tbaa !221
  %3 = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %2, i64 0, i32 1
  store i64 0, i64* %3, align 8, !tbaa !222
  %4 = getelementptr inbounds %struct.LexState, %struct.LexState* %ls, i64 0, i32 0
  %5 = getelementptr inbounds %struct.LexState, %struct.LexState* %ls, i64 0, i32 7
  br label %.critedgethread-pre-split

.critedgethread-pre-split.loopexit:               ; preds = %.preheader, %.preheader, %.preheader
  br label %.critedgethread-pre-split.backedge

.critedgethread-pre-split:                        ; preds = %.critedgethread-pre-split.backedge, %0
  %.pr87 = load i32, i32* %4, align 4, !tbaa !231
  br label %.critedge

.critedge:                                        ; preds = %.critedgethread-pre-split, %842
  %6 = phi i32 [ %.pr87, %.critedgethread-pre-split ], [ %843, %842 ]
  switch i32 %6, label %819 [
    i32 10, label %7
    i32 13, label %7
    i32 45, label %8
    i32 91, label %66
    i32 61, label %.loopexit.loopexit
    i32 60, label %105
    i32 62, label %138
    i32 126, label %171
    i32 34, label %204
    i32 39, label %204
    i32 46, label %640
    i32 -1, label %.thread.loopexit
  ]

; <label>:7                                       ; preds = %.critedge, %.critedge
  tail call fastcc void @inclinenumber(%struct.LexState* %ls)
  br label %.critedgethread-pre-split.backedge

; <label>:8                                       ; preds = %.critedge
  %9 = load %struct.Zio*, %struct.Zio** %5, align 8, !tbaa !227
  %10 = getelementptr inbounds %struct.Zio, %struct.Zio* %9, i64 0, i32 0
  %11 = load i64, i64* %10, align 8, !tbaa !228
  %12 = add i64 %11, -1
  store i64 %12, i64* %10, align 8, !tbaa !228
  %13 = icmp eq i64 %11, 0
  br i1 %13, label %20, label %14

; <label>:14                                      ; preds = %8
  %15 = getelementptr inbounds %struct.Zio, %struct.Zio* %9, i64 0, i32 1
  %16 = load i8*, i8** %15, align 8, !tbaa !230
  %17 = getelementptr inbounds i8, i8* %16, i64 1
  store i8* %17, i8** %15, align 8, !tbaa !230
  %18 = load i8, i8* %16, align 1, !tbaa !76
  %19 = zext i8 %18 to i32
  br label %22

; <label>:20                                      ; preds = %8
  %21 = tail call i32 @luaZ_fill(%struct.Zio* %9) #1
  br label %22

; <label>:22                                      ; preds = %20, %14
  %23 = phi i32 [ %19, %14 ], [ %21, %20 ]
  store i32 %23, i32* %4, align 4, !tbaa !231
  %24 = icmp eq i32 %23, 45
  br i1 %24, label %25, label %.thread.loopexit116

; <label>:25                                      ; preds = %22
  %26 = load %struct.Zio*, %struct.Zio** %5, align 8, !tbaa !227
  %27 = getelementptr inbounds %struct.Zio, %struct.Zio* %26, i64 0, i32 0
  %28 = load i64, i64* %27, align 8, !tbaa !228
  %29 = add i64 %28, -1
  store i64 %29, i64* %27, align 8, !tbaa !228
  %30 = icmp eq i64 %28, 0
  br i1 %30, label %37, label %31

; <label>:31                                      ; preds = %25
  %32 = getelementptr inbounds %struct.Zio, %struct.Zio* %26, i64 0, i32 1
  %33 = load i8*, i8** %32, align 8, !tbaa !230
  %34 = getelementptr inbounds i8, i8* %33, i64 1
  store i8* %34, i8** %32, align 8, !tbaa !230
  %35 = load i8, i8* %33, align 1, !tbaa !76
  %36 = zext i8 %35 to i32
  br label %39

; <label>:37                                      ; preds = %25
  %38 = tail call i32 @luaZ_fill(%struct.Zio* %26) #1
  br label %39

; <label>:39                                      ; preds = %37, %31
  %40 = phi i32 [ %36, %31 ], [ %38, %37 ]
  store i32 %40, i32* %4, align 4, !tbaa !231
  %41 = icmp eq i32 %40, 91
  br i1 %41, label %42, label %.preheader.preheader

; <label>:42                                      ; preds = %39
  %43 = tail call fastcc i32 @skip_sep(%struct.LexState* %ls)
  %44 = load %struct.Mbuffer*, %struct.Mbuffer** %1, align 8, !tbaa !221
  %45 = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %44, i64 0, i32 1
  store i64 0, i64* %45, align 8, !tbaa !222
  %46 = icmp sgt i32 %43, -1
  br i1 %46, label %.critedge.critedge, label %thread-pre-split

.critedge.critedge:                               ; preds = %42
  tail call fastcc void @read_long_string(%struct.LexState* %ls, %union.SemInfo* null, i32 %43)
  %47 = load %struct.Mbuffer*, %struct.Mbuffer** %1, align 8, !tbaa !221
  %48 = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %47, i64 0, i32 1
  store i64 0, i64* %48, align 8, !tbaa !222
  br label %.critedgethread-pre-split.backedge

.critedgethread-pre-split.backedge:               ; preds = %.critedge.critedge, %7, %.critedgethread-pre-split.loopexit
  br label %.critedgethread-pre-split

thread-pre-split:                                 ; preds = %42
  %.pr = load i32, i32* %4, align 4, !tbaa !231
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %39, %thread-pre-split
  %.ph = phi i32 [ %.pr, %thread-pre-split ], [ %40, %39 ]
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %64
  %49 = phi i32 [ %65, %64 ], [ %.ph, %.preheader.preheader ]
  switch i32 %49, label %50 [
    i32 10, label %.critedgethread-pre-split.loopexit
    i32 13, label %.critedgethread-pre-split.loopexit
    i32 -1, label %.critedgethread-pre-split.loopexit
  ]

; <label>:50                                      ; preds = %.preheader
  %51 = load %struct.Zio*, %struct.Zio** %5, align 8, !tbaa !227
  %52 = getelementptr inbounds %struct.Zio, %struct.Zio* %51, i64 0, i32 0
  %53 = load i64, i64* %52, align 8, !tbaa !228
  %54 = add i64 %53, -1
  store i64 %54, i64* %52, align 8, !tbaa !228
  %55 = icmp eq i64 %53, 0
  br i1 %55, label %62, label %56

; <label>:56                                      ; preds = %50
  %57 = getelementptr inbounds %struct.Zio, %struct.Zio* %51, i64 0, i32 1
  %58 = load i8*, i8** %57, align 8, !tbaa !230
  %59 = getelementptr inbounds i8, i8* %58, i64 1
  store i8* %59, i8** %57, align 8, !tbaa !230
  %60 = load i8, i8* %58, align 1, !tbaa !76
  %61 = zext i8 %60 to i32
  br label %64

; <label>:62                                      ; preds = %50
  %63 = tail call i32 @luaZ_fill(%struct.Zio* %51) #1
  br label %64

; <label>:64                                      ; preds = %62, %56
  %65 = phi i32 [ %61, %56 ], [ %63, %62 ]
  store i32 %65, i32* %4, align 4, !tbaa !231
  br label %.preheader

; <label>:66                                      ; preds = %.critedge
  %67 = tail call fastcc i32 @skip_sep(%struct.LexState* %ls)
  %68 = icmp sgt i32 %67, -1
  br i1 %68, label %69, label %70

; <label>:69                                      ; preds = %66
  tail call fastcc void @read_long_string(%struct.LexState* %ls, %union.SemInfo* %seminfo, i32 %67)
  br label %.thread

; <label>:70                                      ; preds = %66
  %71 = icmp eq i32 %67, -1
  br i1 %71, label %.thread, label %72

; <label>:72                                      ; preds = %70
  tail call void @luaX_lexerror(%struct.LexState* %ls, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.36.311, i64 0, i64 0), i32 286)
  br label %.loopexit

.loopexit.loopexit:                               ; preds = %.critedge
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %72
  %73 = load %struct.Zio*, %struct.Zio** %5, align 8, !tbaa !227
  %74 = getelementptr inbounds %struct.Zio, %struct.Zio* %73, i64 0, i32 0
  %75 = load i64, i64* %74, align 8, !tbaa !228
  %76 = add i64 %75, -1
  store i64 %76, i64* %74, align 8, !tbaa !228
  %77 = icmp eq i64 %75, 0
  br i1 %77, label %84, label %78

; <label>:78                                      ; preds = %.loopexit
  %79 = getelementptr inbounds %struct.Zio, %struct.Zio* %73, i64 0, i32 1
  %80 = load i8*, i8** %79, align 8, !tbaa !230
  %81 = getelementptr inbounds i8, i8* %80, i64 1
  store i8* %81, i8** %79, align 8, !tbaa !230
  %82 = load i8, i8* %80, align 1, !tbaa !76
  %83 = zext i8 %82 to i32
  br label %86

; <label>:84                                      ; preds = %.loopexit
  %85 = tail call i32 @luaZ_fill(%struct.Zio* %73) #1
  br label %86

; <label>:86                                      ; preds = %84, %78
  %87 = phi i32 [ %83, %78 ], [ %85, %84 ]
  store i32 %87, i32* %4, align 4, !tbaa !231
  %88 = icmp eq i32 %87, 61
  br i1 %88, label %89, label %.thread

; <label>:89                                      ; preds = %86
  %90 = load %struct.Zio*, %struct.Zio** %5, align 8, !tbaa !227
  %91 = getelementptr inbounds %struct.Zio, %struct.Zio* %90, i64 0, i32 0
  %92 = load i64, i64* %91, align 8, !tbaa !228
  %93 = add i64 %92, -1
  store i64 %93, i64* %91, align 8, !tbaa !228
  %94 = icmp eq i64 %92, 0
  br i1 %94, label %101, label %95

; <label>:95                                      ; preds = %89
  %96 = getelementptr inbounds %struct.Zio, %struct.Zio* %90, i64 0, i32 1
  %97 = load i8*, i8** %96, align 8, !tbaa !230
  %98 = getelementptr inbounds i8, i8* %97, i64 1
  store i8* %98, i8** %96, align 8, !tbaa !230
  %99 = load i8, i8* %97, align 1, !tbaa !76
  %100 = zext i8 %99 to i32
  br label %103

; <label>:101                                     ; preds = %89
  %102 = tail call i32 @luaZ_fill(%struct.Zio* %90) #1
  br label %103

; <label>:103                                     ; preds = %101, %95
  %104 = phi i32 [ %100, %95 ], [ %102, %101 ]
  store i32 %104, i32* %4, align 4, !tbaa !231
  br label %.thread

; <label>:105                                     ; preds = %.critedge
  %106 = load %struct.Zio*, %struct.Zio** %5, align 8, !tbaa !227
  %107 = getelementptr inbounds %struct.Zio, %struct.Zio* %106, i64 0, i32 0
  %108 = load i64, i64* %107, align 8, !tbaa !228
  %109 = add i64 %108, -1
  store i64 %109, i64* %107, align 8, !tbaa !228
  %110 = icmp eq i64 %108, 0
  br i1 %110, label %117, label %111

; <label>:111                                     ; preds = %105
  %112 = getelementptr inbounds %struct.Zio, %struct.Zio* %106, i64 0, i32 1
  %113 = load i8*, i8** %112, align 8, !tbaa !230
  %114 = getelementptr inbounds i8, i8* %113, i64 1
  store i8* %114, i8** %112, align 8, !tbaa !230
  %115 = load i8, i8* %113, align 1, !tbaa !76
  %116 = zext i8 %115 to i32
  br label %119

; <label>:117                                     ; preds = %105
  %118 = tail call i32 @luaZ_fill(%struct.Zio* %106) #1
  br label %119

; <label>:119                                     ; preds = %117, %111
  %120 = phi i32 [ %116, %111 ], [ %118, %117 ]
  store i32 %120, i32* %4, align 4, !tbaa !231
  %121 = icmp eq i32 %120, 61
  br i1 %121, label %122, label %.thread

; <label>:122                                     ; preds = %119
  %123 = load %struct.Zio*, %struct.Zio** %5, align 8, !tbaa !227
  %124 = getelementptr inbounds %struct.Zio, %struct.Zio* %123, i64 0, i32 0
  %125 = load i64, i64* %124, align 8, !tbaa !228
  %126 = add i64 %125, -1
  store i64 %126, i64* %124, align 8, !tbaa !228
  %127 = icmp eq i64 %125, 0
  br i1 %127, label %134, label %128

; <label>:128                                     ; preds = %122
  %129 = getelementptr inbounds %struct.Zio, %struct.Zio* %123, i64 0, i32 1
  %130 = load i8*, i8** %129, align 8, !tbaa !230
  %131 = getelementptr inbounds i8, i8* %130, i64 1
  store i8* %131, i8** %129, align 8, !tbaa !230
  %132 = load i8, i8* %130, align 1, !tbaa !76
  %133 = zext i8 %132 to i32
  br label %136

; <label>:134                                     ; preds = %122
  %135 = tail call i32 @luaZ_fill(%struct.Zio* %123) #1
  br label %136

; <label>:136                                     ; preds = %134, %128
  %137 = phi i32 [ %133, %128 ], [ %135, %134 ]
  store i32 %137, i32* %4, align 4, !tbaa !231
  br label %.thread

; <label>:138                                     ; preds = %.critedge
  %139 = load %struct.Zio*, %struct.Zio** %5, align 8, !tbaa !227
  %140 = getelementptr inbounds %struct.Zio, %struct.Zio* %139, i64 0, i32 0
  %141 = load i64, i64* %140, align 8, !tbaa !228
  %142 = add i64 %141, -1
  store i64 %142, i64* %140, align 8, !tbaa !228
  %143 = icmp eq i64 %141, 0
  br i1 %143, label %150, label %144

; <label>:144                                     ; preds = %138
  %145 = getelementptr inbounds %struct.Zio, %struct.Zio* %139, i64 0, i32 1
  %146 = load i8*, i8** %145, align 8, !tbaa !230
  %147 = getelementptr inbounds i8, i8* %146, i64 1
  store i8* %147, i8** %145, align 8, !tbaa !230
  %148 = load i8, i8* %146, align 1, !tbaa !76
  %149 = zext i8 %148 to i32
  br label %152

; <label>:150                                     ; preds = %138
  %151 = tail call i32 @luaZ_fill(%struct.Zio* %139) #1
  br label %152

; <label>:152                                     ; preds = %150, %144
  %153 = phi i32 [ %149, %144 ], [ %151, %150 ]
  store i32 %153, i32* %4, align 4, !tbaa !231
  %154 = icmp eq i32 %153, 61
  br i1 %154, label %155, label %.thread

; <label>:155                                     ; preds = %152
  %156 = load %struct.Zio*, %struct.Zio** %5, align 8, !tbaa !227
  %157 = getelementptr inbounds %struct.Zio, %struct.Zio* %156, i64 0, i32 0
  %158 = load i64, i64* %157, align 8, !tbaa !228
  %159 = add i64 %158, -1
  store i64 %159, i64* %157, align 8, !tbaa !228
  %160 = icmp eq i64 %158, 0
  br i1 %160, label %167, label %161

; <label>:161                                     ; preds = %155
  %162 = getelementptr inbounds %struct.Zio, %struct.Zio* %156, i64 0, i32 1
  %163 = load i8*, i8** %162, align 8, !tbaa !230
  %164 = getelementptr inbounds i8, i8* %163, i64 1
  store i8* %164, i8** %162, align 8, !tbaa !230
  %165 = load i8, i8* %163, align 1, !tbaa !76
  %166 = zext i8 %165 to i32
  br label %169

; <label>:167                                     ; preds = %155
  %168 = tail call i32 @luaZ_fill(%struct.Zio* %156) #1
  br label %169

; <label>:169                                     ; preds = %167, %161
  %170 = phi i32 [ %166, %161 ], [ %168, %167 ]
  store i32 %170, i32* %4, align 4, !tbaa !231
  br label %.thread

; <label>:171                                     ; preds = %.critedge
  %172 = load %struct.Zio*, %struct.Zio** %5, align 8, !tbaa !227
  %173 = getelementptr inbounds %struct.Zio, %struct.Zio* %172, i64 0, i32 0
  %174 = load i64, i64* %173, align 8, !tbaa !228
  %175 = add i64 %174, -1
  store i64 %175, i64* %173, align 8, !tbaa !228
  %176 = icmp eq i64 %174, 0
  br i1 %176, label %183, label %177

; <label>:177                                     ; preds = %171
  %178 = getelementptr inbounds %struct.Zio, %struct.Zio* %172, i64 0, i32 1
  %179 = load i8*, i8** %178, align 8, !tbaa !230
  %180 = getelementptr inbounds i8, i8* %179, i64 1
  store i8* %180, i8** %178, align 8, !tbaa !230
  %181 = load i8, i8* %179, align 1, !tbaa !76
  %182 = zext i8 %181 to i32
  br label %185

; <label>:183                                     ; preds = %171
  %184 = tail call i32 @luaZ_fill(%struct.Zio* %172) #1
  br label %185

; <label>:185                                     ; preds = %183, %177
  %186 = phi i32 [ %182, %177 ], [ %184, %183 ]
  store i32 %186, i32* %4, align 4, !tbaa !231
  %187 = icmp eq i32 %186, 61
  br i1 %187, label %188, label %.thread

; <label>:188                                     ; preds = %185
  %189 = load %struct.Zio*, %struct.Zio** %5, align 8, !tbaa !227
  %190 = getelementptr inbounds %struct.Zio, %struct.Zio* %189, i64 0, i32 0
  %191 = load i64, i64* %190, align 8, !tbaa !228
  %192 = add i64 %191, -1
  store i64 %192, i64* %190, align 8, !tbaa !228
  %193 = icmp eq i64 %191, 0
  br i1 %193, label %200, label %194

; <label>:194                                     ; preds = %188
  %195 = getelementptr inbounds %struct.Zio, %struct.Zio* %189, i64 0, i32 1
  %196 = load i8*, i8** %195, align 8, !tbaa !230
  %197 = getelementptr inbounds i8, i8* %196, i64 1
  store i8* %197, i8** %195, align 8, !tbaa !230
  %198 = load i8, i8* %196, align 1, !tbaa !76
  %199 = zext i8 %198 to i32
  br label %202

; <label>:200                                     ; preds = %188
  %201 = tail call i32 @luaZ_fill(%struct.Zio* %189) #1
  br label %202

; <label>:202                                     ; preds = %200, %194
  %203 = phi i32 [ %199, %194 ], [ %201, %200 ]
  store i32 %203, i32* %4, align 4, !tbaa !231
  br label %.thread

; <label>:204                                     ; preds = %.critedge, %.critedge
  %.lcssa137 = phi i32 [ %6, %.critedge ], [ %6, %.critedge ]
  %205 = load %struct.Mbuffer*, %struct.Mbuffer** %1, align 8, !tbaa !221
  %206 = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %205, i64 0, i32 1
  %207 = load i64, i64* %206, align 8, !tbaa !222
  %208 = add i64 %207, 1
  %209 = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %205, i64 0, i32 2
  %210 = load i64, i64* %209, align 8, !tbaa !158
  %211 = icmp ugt i64 %208, %210
  br i1 %211, label %212, label %._crit_edge.i.i

._crit_edge.i.i:                                  ; preds = %204
  %.phi.trans.insert.i.i = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %205, i64 0, i32 0
  %.pre2.i.i = load i8*, i8** %.phi.trans.insert.i.i, align 8, !tbaa !157
  br label %save.exit.i

; <label>:212                                     ; preds = %204
  %213 = icmp ugt i64 %210, 9223372036854775805
  br i1 %213, label %214, label %._crit_edge.58.i

._crit_edge.58.i:                                 ; preds = %212
  %.pre.i = getelementptr inbounds %struct.LexState, %struct.LexState* %ls, i64 0, i32 6
  br label %226

; <label>:214                                     ; preds = %212
  %215 = getelementptr inbounds [80 x i8], [80 x i8]* %buff.i.49.i, i64 0, i64 0
  call void @llvm.lifetime.start(i64 80, i8* %215) #1
  %216 = getelementptr inbounds %struct.LexState, %struct.LexState* %ls, i64 0, i32 9
  %217 = load %union.TString*, %union.TString** %216, align 8, !tbaa !219
  %218 = getelementptr inbounds %union.TString, %union.TString* %217, i64 1
  %219 = bitcast %union.TString* %218 to i8*
  call void @luaO_chunkid(i8* %215, i8* %219, i64 80) #1
  %220 = getelementptr inbounds %struct.LexState, %struct.LexState* %ls, i64 0, i32 6
  %221 = load %struct.lua_State*, %struct.lua_State** %220, align 8, !tbaa !218
  %222 = getelementptr inbounds %struct.LexState, %struct.LexState* %ls, i64 0, i32 1
  %223 = load i32, i32* %222, align 4, !tbaa !220
  %224 = call i8* (%struct.lua_State*, i8*, ...) bitcast (i8* (%struct.lua_State.215*, i8*, ...)* @luaO_pushfstring to i8* (%struct.lua_State*, i8*, ...)*)(%struct.lua_State* %221, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.33.277, i64 0, i64 0), i8* %215, i32 %223, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.35.278, i64 0, i64 0)) #1
  %225 = load %struct.lua_State*, %struct.lua_State** %220, align 8, !tbaa !218
  call void @luaD_throw(%struct.lua_State* %225, i32 3) #1
  call void @llvm.lifetime.end(i64 80, i8* %215) #1
  %.pre.i.i = load i64, i64* %209, align 8, !tbaa !158
  br label %226

; <label>:226                                     ; preds = %214, %._crit_edge.58.i
  %.pre-phi.i = phi %struct.lua_State** [ %.pre.i, %._crit_edge.58.i ], [ %220, %214 ]
  %227 = phi i64 [ %210, %._crit_edge.58.i ], [ %.pre.i.i, %214 ]
  %228 = shl i64 %227, 1
  %229 = icmp eq i64 %228, -2
  %230 = load %struct.lua_State*, %struct.lua_State** %.pre-phi.i, align 8, !tbaa !218
  br i1 %229, label %235, label %231

; <label>:231                                     ; preds = %226
  %232 = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %205, i64 0, i32 0
  %233 = load i8*, i8** %232, align 8, !tbaa !157
  %234 = call i8* @luaM_realloc_(%struct.lua_State* %230, i8* %233, i64 %227, i64 %228) #1
  br label %237

; <label>:235                                     ; preds = %226
  %236 = call i8* @luaM_toobig(%struct.lua_State* %230) #1
  %.pre3.i.i = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %205, i64 0, i32 0
  br label %237

; <label>:237                                     ; preds = %235, %231
  %.pre-phi.i.i = phi i8** [ %.pre3.i.i, %235 ], [ %232, %231 ]
  %238 = phi i8* [ %236, %235 ], [ %234, %231 ]
  store i8* %238, i8** %.pre-phi.i.i, align 8, !tbaa !157
  store i64 %228, i64* %209, align 8, !tbaa !158
  %.pre1.i.i = load i64, i64* %206, align 8, !tbaa !222
  br label %save.exit.i

save.exit.i:                                      ; preds = %237, %._crit_edge.i.i
  %239 = phi i8* [ %238, %237 ], [ %.pre2.i.i, %._crit_edge.i.i ]
  %240 = phi i64 [ %.pre1.i.i, %237 ], [ %207, %._crit_edge.i.i ]
  %241 = trunc i32 %.lcssa137 to i8
  %242 = add i64 %240, 1
  store i64 %242, i64* %206, align 8, !tbaa !222
  %243 = getelementptr inbounds i8, i8* %239, i64 %240
  store i8 %241, i8* %243, align 1, !tbaa !76
  %244 = load %struct.Zio*, %struct.Zio** %5, align 8, !tbaa !227
  %245 = getelementptr inbounds %struct.Zio, %struct.Zio* %244, i64 0, i32 0
  %246 = load i64, i64* %245, align 8, !tbaa !228
  %247 = add i64 %246, -1
  store i64 %247, i64* %245, align 8, !tbaa !228
  %248 = icmp eq i64 %246, 0
  br i1 %248, label %255, label %249

; <label>:249                                     ; preds = %save.exit.i
  %250 = getelementptr inbounds %struct.Zio, %struct.Zio* %244, i64 0, i32 1
  %251 = load i8*, i8** %250, align 8, !tbaa !230
  %252 = getelementptr inbounds i8, i8* %251, i64 1
  store i8* %252, i8** %250, align 8, !tbaa !230
  %253 = load i8, i8* %251, align 1, !tbaa !76
  %254 = zext i8 %253 to i32
  br label %257

; <label>:255                                     ; preds = %save.exit.i
  %256 = call i32 @luaZ_fill(%struct.Zio* %244) #1
  br label %257

; <label>:257                                     ; preds = %255, %249
  %258 = phi i32 [ %254, %249 ], [ %256, %255 ]
  store i32 %258, i32* %4, align 4, !tbaa !231
  %259 = icmp eq i32 %258, %.lcssa137
  br i1 %259, label %._crit_edge.i, label %.lr.ph.i

.lr.ph.i:                                         ; preds = %257
  %260 = getelementptr inbounds [80 x i8], [80 x i8]* %buff.i.54.i, i64 0, i64 0
  %261 = getelementptr inbounds %struct.LexState, %struct.LexState* %ls, i64 0, i32 9
  %262 = getelementptr inbounds %struct.LexState, %struct.LexState* %ls, i64 0, i32 6
  %263 = getelementptr inbounds %struct.LexState, %struct.LexState* %ls, i64 0, i32 1
  %264 = getelementptr inbounds [80 x i8], [80 x i8]* %buff.i.i, i64 0, i64 0
  %265 = getelementptr inbounds [80 x i8], [80 x i8]* %buff.i.51.i, i64 0, i64 0
  %266 = getelementptr inbounds [80 x i8], [80 x i8]* %buff.i.52.i, i64 0, i64 0
  %267 = getelementptr inbounds [80 x i8], [80 x i8]* %buff.i.53.i, i64 0, i64 0
  %268 = getelementptr inbounds [80 x i8], [80 x i8]* %buff.i.50.i, i64 0, i64 0
  br label %269

thread-pre-split.i:                               ; preds = %save.exit24.i, %save.exit8.i, %281, %271
  %.pr.i = load i32, i32* %4, align 4, !tbaa !231
  br label %.backedge.i

; <label>:269                                     ; preds = %.backedge.i, %.lr.ph.i
  %270 = phi i32 [ %258, %.lr.ph.i ], [ %.be.i, %.backedge.i ]
  switch i32 %270, label %514 [
    i32 -1, label %271
    i32 10, label %281
    i32 13, label %281
    i32 92, label %282
  ]

; <label>:271                                     ; preds = %269
  call void @llvm.lifetime.start(i64 80, i8* %264) #1
  %272 = load %union.TString*, %union.TString** %261, align 8, !tbaa !219
  %273 = getelementptr inbounds %union.TString, %union.TString* %272, i64 1
  %274 = bitcast %union.TString* %273 to i8*
  call void @luaO_chunkid(i8* %264, i8* %274, i64 80) #1
  %275 = load %struct.lua_State*, %struct.lua_State** %262, align 8, !tbaa !218
  %276 = load i32, i32* %263, align 4, !tbaa !220
  %277 = call i8* (%struct.lua_State*, i8*, ...) bitcast (i8* (%struct.lua_State.215*, i8*, ...)* @luaO_pushfstring to i8* (%struct.lua_State*, i8*, ...)*)(%struct.lua_State* %275, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.33.277, i64 0, i64 0), i8* %264, i32 %276, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.42.312, i64 0, i64 0)) #1
  %278 = load %struct.lua_State*, %struct.lua_State** %262, align 8, !tbaa !218
  %279 = call i8* (%struct.lua_State*, i8*, ...) bitcast (i8* (%struct.lua_State.215*, i8*, ...)* @luaO_pushfstring to i8* (%struct.lua_State*, i8*, ...)*)(%struct.lua_State* %278, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.34.279, i64 0, i64 0), i8* %277, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.30.310, i64 0, i64 0)) #1
  %280 = load %struct.lua_State*, %struct.lua_State** %262, align 8, !tbaa !218
  call void @luaD_throw(%struct.lua_State* %280, i32 3) #1
  call void @llvm.lifetime.end(i64 80, i8* %264) #1
  br label %thread-pre-split.i

; <label>:281                                     ; preds = %269, %269
  call void @luaX_lexerror(%struct.LexState* %ls, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.42.312, i64 0, i64 0), i32 286) #1
  br label %thread-pre-split.i

; <label>:282                                     ; preds = %269
  %283 = load %struct.Zio*, %struct.Zio** %5, align 8, !tbaa !227
  %284 = getelementptr inbounds %struct.Zio, %struct.Zio* %283, i64 0, i32 0
  %285 = load i64, i64* %284, align 8, !tbaa !228
  %286 = add i64 %285, -1
  store i64 %286, i64* %284, align 8, !tbaa !228
  %287 = icmp eq i64 %285, 0
  br i1 %287, label %294, label %288

; <label>:288                                     ; preds = %282
  %289 = getelementptr inbounds %struct.Zio, %struct.Zio* %283, i64 0, i32 1
  %290 = load i8*, i8** %289, align 8, !tbaa !230
  %291 = getelementptr inbounds i8, i8* %290, i64 1
  store i8* %291, i8** %289, align 8, !tbaa !230
  %292 = load i8, i8* %290, align 1, !tbaa !76
  %293 = zext i8 %292 to i32
  br label %296

; <label>:294                                     ; preds = %282
  %295 = call i32 @luaZ_fill(%struct.Zio* %283) #1
  br label %296

; <label>:296                                     ; preds = %294, %288
  %297 = phi i32 [ %293, %288 ], [ %295, %294 ]
  store i32 %297, i32* %4, align 4, !tbaa !231
  switch i32 %297, label %339 [
    i32 97, label %464
    i32 98, label %298
    i32 102, label %299
    i32 110, label %300
    i32 114, label %301
    i32 116, label %302
    i32 118, label %303
    i32 10, label %304
    i32 13, label %304
    i32 -1, label %.backedge.i
  ]

; <label>:298                                     ; preds = %296
  br label %464

; <label>:299                                     ; preds = %296
  br label %464

; <label>:300                                     ; preds = %296
  br label %464

; <label>:301                                     ; preds = %296
  br label %464

; <label>:302                                     ; preds = %296
  br label %464

; <label>:303                                     ; preds = %296
  br label %464

; <label>:304                                     ; preds = %296, %296
  %305 = load %struct.Mbuffer*, %struct.Mbuffer** %1, align 8, !tbaa !221
  %306 = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %305, i64 0, i32 1
  %307 = load i64, i64* %306, align 8, !tbaa !222
  %308 = add i64 %307, 1
  %309 = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %305, i64 0, i32 2
  %310 = load i64, i64* %309, align 8, !tbaa !158
  %311 = icmp ugt i64 %308, %310
  br i1 %311, label %312, label %._crit_edge.i.3.i

._crit_edge.i.3.i:                                ; preds = %304
  %.phi.trans.insert.i.1.i = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %305, i64 0, i32 0
  %.pre2.i.2.i = load i8*, i8** %.phi.trans.insert.i.1.i, align 8, !tbaa !157
  br label %save.exit8.i

; <label>:312                                     ; preds = %304
  %313 = icmp ugt i64 %310, 9223372036854775805
  br i1 %313, label %314, label %322

; <label>:314                                     ; preds = %312
  call void @llvm.lifetime.start(i64 80, i8* %268) #1
  %315 = load %union.TString*, %union.TString** %261, align 8, !tbaa !219
  %316 = getelementptr inbounds %union.TString, %union.TString* %315, i64 1
  %317 = bitcast %union.TString* %316 to i8*
  call void @luaO_chunkid(i8* %268, i8* %317, i64 80) #1
  %318 = load %struct.lua_State*, %struct.lua_State** %262, align 8, !tbaa !218
  %319 = load i32, i32* %263, align 4, !tbaa !220
  %320 = call i8* (%struct.lua_State*, i8*, ...) bitcast (i8* (%struct.lua_State.215*, i8*, ...)* @luaO_pushfstring to i8* (%struct.lua_State*, i8*, ...)*)(%struct.lua_State* %318, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.33.277, i64 0, i64 0), i8* %268, i32 %319, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.35.278, i64 0, i64 0)) #1
  %321 = load %struct.lua_State*, %struct.lua_State** %262, align 8, !tbaa !218
  call void @luaD_throw(%struct.lua_State* %321, i32 3) #1
  call void @llvm.lifetime.end(i64 80, i8* %268) #1
  %.pre.i.4.i = load i64, i64* %309, align 8, !tbaa !158
  br label %322

; <label>:322                                     ; preds = %314, %312
  %323 = phi i64 [ %.pre.i.4.i, %314 ], [ %310, %312 ]
  %324 = shl i64 %323, 1
  %325 = icmp eq i64 %324, -2
  %326 = load %struct.lua_State*, %struct.lua_State** %262, align 8, !tbaa !218
  br i1 %325, label %331, label %327

; <label>:327                                     ; preds = %322
  %328 = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %305, i64 0, i32 0
  %329 = load i8*, i8** %328, align 8, !tbaa !157
  %330 = call i8* @luaM_realloc_(%struct.lua_State* %326, i8* %329, i64 %323, i64 %324) #1
  br label %333

; <label>:331                                     ; preds = %322
  %332 = call i8* @luaM_toobig(%struct.lua_State* %326) #1
  %.pre3.i.5.i = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %305, i64 0, i32 0
  br label %333

; <label>:333                                     ; preds = %331, %327
  %.pre-phi.i.6.i = phi i8** [ %.pre3.i.5.i, %331 ], [ %328, %327 ]
  %334 = phi i8* [ %332, %331 ], [ %330, %327 ]
  store i8* %334, i8** %.pre-phi.i.6.i, align 8, !tbaa !157
  store i64 %324, i64* %309, align 8, !tbaa !158
  %.pre1.i.7.i = load i64, i64* %306, align 8, !tbaa !222
  br label %save.exit8.i

save.exit8.i:                                     ; preds = %333, %._crit_edge.i.3.i
  %335 = phi i8* [ %334, %333 ], [ %.pre2.i.2.i, %._crit_edge.i.3.i ]
  %336 = phi i64 [ %.pre1.i.7.i, %333 ], [ %307, %._crit_edge.i.3.i ]
  %337 = add i64 %336, 1
  store i64 %337, i64* %306, align 8, !tbaa !222
  %338 = getelementptr inbounds i8, i8* %335, i64 %336
  store i8 10, i8* %338, align 1, !tbaa !76
  call fastcc void @inclinenumber(%struct.LexState* %ls) #1
  br label %thread-pre-split.i

; <label>:339                                     ; preds = %296
  %340 = sext i32 %297 to i64
  %341 = tail call i16** @__ctype_b_loc() #12
  %342 = load i16*, i16** %341, align 8, !tbaa !25
  %343 = getelementptr inbounds i16, i16* %342, i64 %340
  %344 = load i16, i16* %343, align 2, !tbaa !87
  %345 = and i16 %344, 2048
  %346 = icmp eq i16 %345, 0
  br i1 %346, label %347, label %.preheader.i.preheader

.preheader.i.preheader:                           ; preds = %339
  br label %.preheader.i

; <label>:347                                     ; preds = %339
  %348 = load %struct.Mbuffer*, %struct.Mbuffer** %1, align 8, !tbaa !221
  %349 = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %348, i64 0, i32 1
  %350 = load i64, i64* %349, align 8, !tbaa !222
  %351 = add i64 %350, 1
  %352 = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %348, i64 0, i32 2
  %353 = load i64, i64* %352, align 8, !tbaa !158
  %354 = icmp ugt i64 %351, %353
  br i1 %354, label %355, label %._crit_edge.i.11.i

._crit_edge.i.11.i:                               ; preds = %347
  %.phi.trans.insert.i.9.i = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %348, i64 0, i32 0
  %.pre2.i.10.i = load i8*, i8** %.phi.trans.insert.i.9.i, align 8, !tbaa !157
  br label %save.exit16.i

; <label>:355                                     ; preds = %347
  %356 = icmp ugt i64 %353, 9223372036854775805
  br i1 %356, label %357, label %365

; <label>:357                                     ; preds = %355
  call void @llvm.lifetime.start(i64 80, i8* %265) #1
  %358 = load %union.TString*, %union.TString** %261, align 8, !tbaa !219
  %359 = getelementptr inbounds %union.TString, %union.TString* %358, i64 1
  %360 = bitcast %union.TString* %359 to i8*
  call void @luaO_chunkid(i8* %265, i8* %360, i64 80) #1
  %361 = load %struct.lua_State*, %struct.lua_State** %262, align 8, !tbaa !218
  %362 = load i32, i32* %263, align 4, !tbaa !220
  %363 = call i8* (%struct.lua_State*, i8*, ...) bitcast (i8* (%struct.lua_State.215*, i8*, ...)* @luaO_pushfstring to i8* (%struct.lua_State*, i8*, ...)*)(%struct.lua_State* %361, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.33.277, i64 0, i64 0), i8* %265, i32 %362, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.35.278, i64 0, i64 0)) #1
  %364 = load %struct.lua_State*, %struct.lua_State** %262, align 8, !tbaa !218
  call void @luaD_throw(%struct.lua_State* %364, i32 3) #1
  call void @llvm.lifetime.end(i64 80, i8* %265) #1
  %.pre.i.12.i = load i64, i64* %352, align 8, !tbaa !158
  br label %365

; <label>:365                                     ; preds = %357, %355
  %366 = phi i64 [ %.pre.i.12.i, %357 ], [ %353, %355 ]
  %367 = shl i64 %366, 1
  %368 = icmp eq i64 %367, -2
  %369 = load %struct.lua_State*, %struct.lua_State** %262, align 8, !tbaa !218
  br i1 %368, label %374, label %370

; <label>:370                                     ; preds = %365
  %371 = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %348, i64 0, i32 0
  %372 = load i8*, i8** %371, align 8, !tbaa !157
  %373 = call i8* @luaM_realloc_(%struct.lua_State* %369, i8* %372, i64 %366, i64 %367) #1
  br label %376

; <label>:374                                     ; preds = %365
  %375 = call i8* @luaM_toobig(%struct.lua_State* %369) #1
  %.pre3.i.13.i = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %348, i64 0, i32 0
  br label %376

; <label>:376                                     ; preds = %374, %370
  %.pre-phi.i.14.i = phi i8** [ %.pre3.i.13.i, %374 ], [ %371, %370 ]
  %377 = phi i8* [ %375, %374 ], [ %373, %370 ]
  store i8* %377, i8** %.pre-phi.i.14.i, align 8, !tbaa !157
  store i64 %367, i64* %352, align 8, !tbaa !158
  %.pre1.i.15.i = load i64, i64* %349, align 8, !tbaa !222
  br label %save.exit16.i

save.exit16.i:                                    ; preds = %376, %._crit_edge.i.11.i
  %378 = phi i8* [ %377, %376 ], [ %.pre2.i.10.i, %._crit_edge.i.11.i ]
  %379 = phi i64 [ %.pre1.i.15.i, %376 ], [ %350, %._crit_edge.i.11.i ]
  %380 = trunc i32 %297 to i8
  %381 = add i64 %379, 1
  store i64 %381, i64* %349, align 8, !tbaa !222
  %382 = getelementptr inbounds i8, i8* %378, i64 %379
  store i8 %380, i8* %382, align 1, !tbaa !76
  %383 = load %struct.Zio*, %struct.Zio** %5, align 8, !tbaa !227
  %384 = getelementptr inbounds %struct.Zio, %struct.Zio* %383, i64 0, i32 0
  %385 = load i64, i64* %384, align 8, !tbaa !228
  %386 = add i64 %385, -1
  store i64 %386, i64* %384, align 8, !tbaa !228
  %387 = icmp eq i64 %385, 0
  br i1 %387, label %394, label %388

; <label>:388                                     ; preds = %save.exit16.i
  %389 = getelementptr inbounds %struct.Zio, %struct.Zio* %383, i64 0, i32 1
  %390 = load i8*, i8** %389, align 8, !tbaa !230
  %391 = getelementptr inbounds i8, i8* %390, i64 1
  store i8* %391, i8** %389, align 8, !tbaa !230
  %392 = load i8, i8* %390, align 1, !tbaa !76
  %393 = zext i8 %392 to i32
  br label %396

; <label>:394                                     ; preds = %save.exit16.i
  %395 = call i32 @luaZ_fill(%struct.Zio* %383) #1
  br label %396

; <label>:396                                     ; preds = %394, %388
  %397 = phi i32 [ %393, %388 ], [ %395, %394 ]
  store i32 %397, i32* %4, align 4, !tbaa !231
  br label %.backedge.i

.preheader.i:                                     ; preds = %.preheader.i.preheader, %419
  %398 = phi i32 [ %416, %419 ], [ %297, %.preheader.i.preheader ]
  %c.0.i = phi i32 [ %401, %419 ], [ 0, %.preheader.i.preheader ]
  %i.0.i = phi i32 [ %417, %419 ], [ 0, %.preheader.i.preheader ]
  %399 = mul nsw i32 %c.0.i, 10
  %400 = add i32 %398, -48
  %401 = add i32 %400, %399
  %402 = load %struct.Zio*, %struct.Zio** %5, align 8, !tbaa !227
  %403 = getelementptr inbounds %struct.Zio, %struct.Zio* %402, i64 0, i32 0
  %404 = load i64, i64* %403, align 8, !tbaa !228
  %405 = add i64 %404, -1
  store i64 %405, i64* %403, align 8, !tbaa !228
  %406 = icmp eq i64 %404, 0
  br i1 %406, label %413, label %407

; <label>:407                                     ; preds = %.preheader.i
  %408 = getelementptr inbounds %struct.Zio, %struct.Zio* %402, i64 0, i32 1
  %409 = load i8*, i8** %408, align 8, !tbaa !230
  %410 = getelementptr inbounds i8, i8* %409, i64 1
  store i8* %410, i8** %408, align 8, !tbaa !230
  %411 = load i8, i8* %409, align 1, !tbaa !76
  %412 = zext i8 %411 to i32
  br label %415

; <label>:413                                     ; preds = %.preheader.i
  %414 = call i32 @luaZ_fill(%struct.Zio* %402) #1
  br label %415

; <label>:415                                     ; preds = %413, %407
  %416 = phi i32 [ %412, %407 ], [ %414, %413 ]
  store i32 %416, i32* %4, align 4, !tbaa !231
  %417 = add nuw nsw i32 %i.0.i, 1
  %418 = icmp slt i32 %417, 3
  br i1 %418, label %419, label %.critedge.i

; <label>:419                                     ; preds = %415
  %420 = sext i32 %416 to i64
  %421 = load i16*, i16** %341, align 8, !tbaa !25
  %422 = getelementptr inbounds i16, i16* %421, i64 %420
  %423 = load i16, i16* %422, align 2, !tbaa !87
  %424 = and i16 %423, 2048
  %425 = icmp eq i16 %424, 0
  br i1 %425, label %.critedge.i, label %.preheader.i

.critedge.i:                                      ; preds = %419, %415
  %.lcssa = phi i32 [ %401, %419 ], [ %401, %415 ]
  %426 = icmp sgt i32 %.lcssa, 255
  br i1 %426, label %427, label %428

; <label>:427                                     ; preds = %.critedge.i
  call void @luaX_lexerror(%struct.LexState* %ls, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.43.313, i64 0, i64 0), i32 286) #1
  br label %428

; <label>:428                                     ; preds = %427, %.critedge.i
  %429 = load %struct.Mbuffer*, %struct.Mbuffer** %1, align 8, !tbaa !221
  %430 = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %429, i64 0, i32 1
  %431 = load i64, i64* %430, align 8, !tbaa !222
  %432 = add i64 %431, 1
  %433 = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %429, i64 0, i32 2
  %434 = load i64, i64* %433, align 8, !tbaa !158
  %435 = icmp ugt i64 %432, %434
  br i1 %435, label %436, label %._crit_edge.i.19.i

._crit_edge.i.19.i:                               ; preds = %428
  %.phi.trans.insert.i.17.i = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %429, i64 0, i32 0
  %.pre2.i.18.i = load i8*, i8** %.phi.trans.insert.i.17.i, align 8, !tbaa !157
  br label %save.exit24.i

; <label>:436                                     ; preds = %428
  %437 = icmp ugt i64 %434, 9223372036854775805
  br i1 %437, label %438, label %446

; <label>:438                                     ; preds = %436
  call void @llvm.lifetime.start(i64 80, i8* %266) #1
  %439 = load %union.TString*, %union.TString** %261, align 8, !tbaa !219
  %440 = getelementptr inbounds %union.TString, %union.TString* %439, i64 1
  %441 = bitcast %union.TString* %440 to i8*
  call void @luaO_chunkid(i8* %266, i8* %441, i64 80) #1
  %442 = load %struct.lua_State*, %struct.lua_State** %262, align 8, !tbaa !218
  %443 = load i32, i32* %263, align 4, !tbaa !220
  %444 = call i8* (%struct.lua_State*, i8*, ...) bitcast (i8* (%struct.lua_State.215*, i8*, ...)* @luaO_pushfstring to i8* (%struct.lua_State*, i8*, ...)*)(%struct.lua_State* %442, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.33.277, i64 0, i64 0), i8* %266, i32 %443, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.35.278, i64 0, i64 0)) #1
  %445 = load %struct.lua_State*, %struct.lua_State** %262, align 8, !tbaa !218
  call void @luaD_throw(%struct.lua_State* %445, i32 3) #1
  call void @llvm.lifetime.end(i64 80, i8* %266) #1
  %.pre.i.20.i = load i64, i64* %433, align 8, !tbaa !158
  br label %446

; <label>:446                                     ; preds = %438, %436
  %447 = phi i64 [ %.pre.i.20.i, %438 ], [ %434, %436 ]
  %448 = shl i64 %447, 1
  %449 = icmp eq i64 %448, -2
  %450 = load %struct.lua_State*, %struct.lua_State** %262, align 8, !tbaa !218
  br i1 %449, label %455, label %451

; <label>:451                                     ; preds = %446
  %452 = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %429, i64 0, i32 0
  %453 = load i8*, i8** %452, align 8, !tbaa !157
  %454 = call i8* @luaM_realloc_(%struct.lua_State* %450, i8* %453, i64 %447, i64 %448) #1
  br label %457

; <label>:455                                     ; preds = %446
  %456 = call i8* @luaM_toobig(%struct.lua_State* %450) #1
  %.pre3.i.21.i = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %429, i64 0, i32 0
  br label %457

; <label>:457                                     ; preds = %455, %451
  %.pre-phi.i.22.i = phi i8** [ %.pre3.i.21.i, %455 ], [ %452, %451 ]
  %458 = phi i8* [ %456, %455 ], [ %454, %451 ]
  store i8* %458, i8** %.pre-phi.i.22.i, align 8, !tbaa !157
  store i64 %448, i64* %433, align 8, !tbaa !158
  %.pre1.i.23.i = load i64, i64* %430, align 8, !tbaa !222
  br label %save.exit24.i

save.exit24.i:                                    ; preds = %457, %._crit_edge.i.19.i
  %459 = phi i8* [ %458, %457 ], [ %.pre2.i.18.i, %._crit_edge.i.19.i ]
  %460 = phi i64 [ %.pre1.i.23.i, %457 ], [ %431, %._crit_edge.i.19.i ]
  %461 = trunc i32 %.lcssa to i8
  %462 = add i64 %460, 1
  store i64 %462, i64* %430, align 8, !tbaa !222
  %463 = getelementptr inbounds i8, i8* %459, i64 %460
  store i8 %461, i8* %463, align 1, !tbaa !76
  br label %thread-pre-split.i

; <label>:464                                     ; preds = %303, %302, %301, %300, %299, %298, %296
  %c.1.i = phi i8 [ 11, %303 ], [ 9, %302 ], [ 13, %301 ], [ 10, %300 ], [ 12, %299 ], [ 8, %298 ], [ 7, %296 ]
  %465 = load %struct.Mbuffer*, %struct.Mbuffer** %1, align 8, !tbaa !221
  %466 = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %465, i64 0, i32 1
  %467 = load i64, i64* %466, align 8, !tbaa !222
  %468 = add i64 %467, 1
  %469 = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %465, i64 0, i32 2
  %470 = load i64, i64* %469, align 8, !tbaa !158
  %471 = icmp ugt i64 %468, %470
  br i1 %471, label %472, label %._crit_edge.i.27.i

._crit_edge.i.27.i:                               ; preds = %464
  %.phi.trans.insert.i.25.i = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %465, i64 0, i32 0
  %.pre2.i.26.i = load i8*, i8** %.phi.trans.insert.i.25.i, align 8, !tbaa !157
  br label %save.exit32.i

; <label>:472                                     ; preds = %464
  %473 = icmp ugt i64 %470, 9223372036854775805
  br i1 %473, label %474, label %482

; <label>:474                                     ; preds = %472
  call void @llvm.lifetime.start(i64 80, i8* %267) #1
  %475 = load %union.TString*, %union.TString** %261, align 8, !tbaa !219
  %476 = getelementptr inbounds %union.TString, %union.TString* %475, i64 1
  %477 = bitcast %union.TString* %476 to i8*
  call void @luaO_chunkid(i8* %267, i8* %477, i64 80) #1
  %478 = load %struct.lua_State*, %struct.lua_State** %262, align 8, !tbaa !218
  %479 = load i32, i32* %263, align 4, !tbaa !220
  %480 = call i8* (%struct.lua_State*, i8*, ...) bitcast (i8* (%struct.lua_State.215*, i8*, ...)* @luaO_pushfstring to i8* (%struct.lua_State*, i8*, ...)*)(%struct.lua_State* %478, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.33.277, i64 0, i64 0), i8* %267, i32 %479, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.35.278, i64 0, i64 0)) #1
  %481 = load %struct.lua_State*, %struct.lua_State** %262, align 8, !tbaa !218
  call void @luaD_throw(%struct.lua_State* %481, i32 3) #1
  call void @llvm.lifetime.end(i64 80, i8* %267) #1
  %.pre.i.28.i = load i64, i64* %469, align 8, !tbaa !158
  br label %482

; <label>:482                                     ; preds = %474, %472
  %483 = phi i64 [ %.pre.i.28.i, %474 ], [ %470, %472 ]
  %484 = shl i64 %483, 1
  %485 = icmp eq i64 %484, -2
  %486 = load %struct.lua_State*, %struct.lua_State** %262, align 8, !tbaa !218
  br i1 %485, label %491, label %487

; <label>:487                                     ; preds = %482
  %488 = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %465, i64 0, i32 0
  %489 = load i8*, i8** %488, align 8, !tbaa !157
  %490 = call i8* @luaM_realloc_(%struct.lua_State* %486, i8* %489, i64 %483, i64 %484) #1
  br label %493

; <label>:491                                     ; preds = %482
  %492 = call i8* @luaM_toobig(%struct.lua_State* %486) #1
  %.pre3.i.29.i = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %465, i64 0, i32 0
  br label %493

; <label>:493                                     ; preds = %491, %487
  %.pre-phi.i.30.i = phi i8** [ %.pre3.i.29.i, %491 ], [ %488, %487 ]
  %494 = phi i8* [ %492, %491 ], [ %490, %487 ]
  store i8* %494, i8** %.pre-phi.i.30.i, align 8, !tbaa !157
  store i64 %484, i64* %469, align 8, !tbaa !158
  %.pre1.i.31.i = load i64, i64* %466, align 8, !tbaa !222
  br label %save.exit32.i

save.exit32.i:                                    ; preds = %493, %._crit_edge.i.27.i
  %495 = phi i8* [ %494, %493 ], [ %.pre2.i.26.i, %._crit_edge.i.27.i ]
  %496 = phi i64 [ %.pre1.i.31.i, %493 ], [ %467, %._crit_edge.i.27.i ]
  %497 = add i64 %496, 1
  store i64 %497, i64* %466, align 8, !tbaa !222
  %498 = getelementptr inbounds i8, i8* %495, i64 %496
  store i8 %c.1.i, i8* %498, align 1, !tbaa !76
  %499 = load %struct.Zio*, %struct.Zio** %5, align 8, !tbaa !227
  %500 = getelementptr inbounds %struct.Zio, %struct.Zio* %499, i64 0, i32 0
  %501 = load i64, i64* %500, align 8, !tbaa !228
  %502 = add i64 %501, -1
  store i64 %502, i64* %500, align 8, !tbaa !228
  %503 = icmp eq i64 %501, 0
  br i1 %503, label %510, label %504

; <label>:504                                     ; preds = %save.exit32.i
  %505 = getelementptr inbounds %struct.Zio, %struct.Zio* %499, i64 0, i32 1
  %506 = load i8*, i8** %505, align 8, !tbaa !230
  %507 = getelementptr inbounds i8, i8* %506, i64 1
  store i8* %507, i8** %505, align 8, !tbaa !230
  %508 = load i8, i8* %506, align 1, !tbaa !76
  %509 = zext i8 %508 to i32
  br label %512

; <label>:510                                     ; preds = %save.exit32.i
  %511 = call i32 @luaZ_fill(%struct.Zio* %499) #1
  br label %512

; <label>:512                                     ; preds = %510, %504
  %513 = phi i32 [ %509, %504 ], [ %511, %510 ]
  store i32 %513, i32* %4, align 4, !tbaa !231
  br label %.backedge.i

; <label>:514                                     ; preds = %269
  %515 = load %struct.Mbuffer*, %struct.Mbuffer** %1, align 8, !tbaa !221
  %516 = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %515, i64 0, i32 1
  %517 = load i64, i64* %516, align 8, !tbaa !222
  %518 = add i64 %517, 1
  %519 = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %515, i64 0, i32 2
  %520 = load i64, i64* %519, align 8, !tbaa !158
  %521 = icmp ugt i64 %518, %520
  br i1 %521, label %522, label %._crit_edge.i.35.i

._crit_edge.i.35.i:                               ; preds = %514
  %.phi.trans.insert.i.33.i = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %515, i64 0, i32 0
  %.pre2.i.34.i = load i8*, i8** %.phi.trans.insert.i.33.i, align 8, !tbaa !157
  br label %save.exit40.i

; <label>:522                                     ; preds = %514
  %523 = icmp ugt i64 %520, 9223372036854775805
  br i1 %523, label %524, label %532

; <label>:524                                     ; preds = %522
  call void @llvm.lifetime.start(i64 80, i8* %260) #1
  %525 = load %union.TString*, %union.TString** %261, align 8, !tbaa !219
  %526 = getelementptr inbounds %union.TString, %union.TString* %525, i64 1
  %527 = bitcast %union.TString* %526 to i8*
  call void @luaO_chunkid(i8* %260, i8* %527, i64 80) #1
  %528 = load %struct.lua_State*, %struct.lua_State** %262, align 8, !tbaa !218
  %529 = load i32, i32* %263, align 4, !tbaa !220
  %530 = call i8* (%struct.lua_State*, i8*, ...) bitcast (i8* (%struct.lua_State.215*, i8*, ...)* @luaO_pushfstring to i8* (%struct.lua_State*, i8*, ...)*)(%struct.lua_State* %528, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.33.277, i64 0, i64 0), i8* %260, i32 %529, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.35.278, i64 0, i64 0)) #1
  %531 = load %struct.lua_State*, %struct.lua_State** %262, align 8, !tbaa !218
  call void @luaD_throw(%struct.lua_State* %531, i32 3) #1
  call void @llvm.lifetime.end(i64 80, i8* %260) #1
  %.pre.i.36.i = load i64, i64* %519, align 8, !tbaa !158
  br label %532

; <label>:532                                     ; preds = %524, %522
  %533 = phi i64 [ %.pre.i.36.i, %524 ], [ %520, %522 ]
  %534 = shl i64 %533, 1
  %535 = icmp eq i64 %534, -2
  %536 = load %struct.lua_State*, %struct.lua_State** %262, align 8, !tbaa !218
  br i1 %535, label %541, label %537

; <label>:537                                     ; preds = %532
  %538 = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %515, i64 0, i32 0
  %539 = load i8*, i8** %538, align 8, !tbaa !157
  %540 = call i8* @luaM_realloc_(%struct.lua_State* %536, i8* %539, i64 %533, i64 %534) #1
  br label %543

; <label>:541                                     ; preds = %532
  %542 = call i8* @luaM_toobig(%struct.lua_State* %536) #1
  %.pre3.i.37.i = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %515, i64 0, i32 0
  br label %543

; <label>:543                                     ; preds = %541, %537
  %.pre-phi.i.38.i = phi i8** [ %.pre3.i.37.i, %541 ], [ %538, %537 ]
  %544 = phi i8* [ %542, %541 ], [ %540, %537 ]
  store i8* %544, i8** %.pre-phi.i.38.i, align 8, !tbaa !157
  store i64 %534, i64* %519, align 8, !tbaa !158
  %.pre1.i.39.i = load i64, i64* %516, align 8, !tbaa !222
  br label %save.exit40.i

save.exit40.i:                                    ; preds = %543, %._crit_edge.i.35.i
  %545 = phi i8* [ %544, %543 ], [ %.pre2.i.34.i, %._crit_edge.i.35.i ]
  %546 = phi i64 [ %.pre1.i.39.i, %543 ], [ %517, %._crit_edge.i.35.i ]
  %547 = trunc i32 %270 to i8
  %548 = add i64 %546, 1
  store i64 %548, i64* %516, align 8, !tbaa !222
  %549 = getelementptr inbounds i8, i8* %545, i64 %546
  store i8 %547, i8* %549, align 1, !tbaa !76
  %550 = load %struct.Zio*, %struct.Zio** %5, align 8, !tbaa !227
  %551 = getelementptr inbounds %struct.Zio, %struct.Zio* %550, i64 0, i32 0
  %552 = load i64, i64* %551, align 8, !tbaa !228
  %553 = add i64 %552, -1
  store i64 %553, i64* %551, align 8, !tbaa !228
  %554 = icmp eq i64 %552, 0
  br i1 %554, label %561, label %555

; <label>:555                                     ; preds = %save.exit40.i
  %556 = getelementptr inbounds %struct.Zio, %struct.Zio* %550, i64 0, i32 1
  %557 = load i8*, i8** %556, align 8, !tbaa !230
  %558 = getelementptr inbounds i8, i8* %557, i64 1
  store i8* %558, i8** %556, align 8, !tbaa !230
  %559 = load i8, i8* %557, align 1, !tbaa !76
  %560 = zext i8 %559 to i32
  br label %563

; <label>:561                                     ; preds = %save.exit40.i
  %562 = call i32 @luaZ_fill(%struct.Zio* %550) #1
  br label %563

; <label>:563                                     ; preds = %561, %555
  %564 = phi i32 [ %560, %555 ], [ %562, %561 ]
  store i32 %564, i32* %4, align 4, !tbaa !231
  br label %.backedge.i

.backedge.i:                                      ; preds = %563, %512, %396, %296, %thread-pre-split.i
  %.be.i = phi i32 [ %.pr.i, %thread-pre-split.i ], [ %513, %512 ], [ -1, %296 ], [ %397, %396 ], [ %564, %563 ]
  %565 = icmp eq i32 %.be.i, %.lcssa137
  br i1 %565, label %._crit_edge.i.loopexit, label %269

._crit_edge.i.loopexit:                           ; preds = %.backedge.i
  br label %._crit_edge.i

._crit_edge.i:                                    ; preds = %._crit_edge.i.loopexit, %257
  %566 = load %struct.Mbuffer*, %struct.Mbuffer** %1, align 8, !tbaa !221
  %567 = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %566, i64 0, i32 1
  %568 = load i64, i64* %567, align 8, !tbaa !222
  %569 = add i64 %568, 1
  %570 = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %566, i64 0, i32 2
  %571 = load i64, i64* %570, align 8, !tbaa !158
  %572 = icmp ugt i64 %569, %571
  br i1 %572, label %573, label %._crit_edge.i.43.i

._crit_edge.i.43.i:                               ; preds = %._crit_edge.i
  %.phi.trans.insert.i.41.i = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %566, i64 0, i32 0
  %.pre2.i.42.i = load i8*, i8** %.phi.trans.insert.i.41.i, align 8, !tbaa !157
  br label %save.exit48.i

; <label>:573                                     ; preds = %._crit_edge.i
  %574 = icmp ugt i64 %571, 9223372036854775805
  br i1 %574, label %575, label %._crit_edge.57.i

._crit_edge.57.i:                                 ; preds = %573
  %.pre59.i = getelementptr inbounds %struct.LexState, %struct.LexState* %ls, i64 0, i32 6
  br label %587

; <label>:575                                     ; preds = %573
  %576 = getelementptr inbounds [80 x i8], [80 x i8]* %buff.i.55.i, i64 0, i64 0
  call void @llvm.lifetime.start(i64 80, i8* %576) #1
  %577 = getelementptr inbounds %struct.LexState, %struct.LexState* %ls, i64 0, i32 9
  %578 = load %union.TString*, %union.TString** %577, align 8, !tbaa !219
  %579 = getelementptr inbounds %union.TString, %union.TString* %578, i64 1
  %580 = bitcast %union.TString* %579 to i8*
  call void @luaO_chunkid(i8* %576, i8* %580, i64 80) #1
  %581 = getelementptr inbounds %struct.LexState, %struct.LexState* %ls, i64 0, i32 6
  %582 = load %struct.lua_State*, %struct.lua_State** %581, align 8, !tbaa !218
  %583 = getelementptr inbounds %struct.LexState, %struct.LexState* %ls, i64 0, i32 1
  %584 = load i32, i32* %583, align 4, !tbaa !220
  %585 = call i8* (%struct.lua_State*, i8*, ...) bitcast (i8* (%struct.lua_State.215*, i8*, ...)* @luaO_pushfstring to i8* (%struct.lua_State*, i8*, ...)*)(%struct.lua_State* %582, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.33.277, i64 0, i64 0), i8* %576, i32 %584, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.35.278, i64 0, i64 0)) #1
  %586 = load %struct.lua_State*, %struct.lua_State** %581, align 8, !tbaa !218
  call void @luaD_throw(%struct.lua_State* %586, i32 3) #1
  call void @llvm.lifetime.end(i64 80, i8* %576) #1
  %.pre.i.44.i = load i64, i64* %570, align 8, !tbaa !158
  br label %587

; <label>:587                                     ; preds = %575, %._crit_edge.57.i
  %.pre-phi60.i = phi %struct.lua_State** [ %.pre59.i, %._crit_edge.57.i ], [ %581, %575 ]
  %588 = phi i64 [ %571, %._crit_edge.57.i ], [ %.pre.i.44.i, %575 ]
  %589 = shl i64 %588, 1
  %590 = icmp eq i64 %589, -2
  %591 = load %struct.lua_State*, %struct.lua_State** %.pre-phi60.i, align 8, !tbaa !218
  br i1 %590, label %596, label %592

; <label>:592                                     ; preds = %587
  %593 = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %566, i64 0, i32 0
  %594 = load i8*, i8** %593, align 8, !tbaa !157
  %595 = call i8* @luaM_realloc_(%struct.lua_State* %591, i8* %594, i64 %588, i64 %589) #1
  br label %598

; <label>:596                                     ; preds = %587
  %597 = call i8* @luaM_toobig(%struct.lua_State* %591) #1
  %.pre3.i.45.i = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %566, i64 0, i32 0
  br label %598

; <label>:598                                     ; preds = %596, %592
  %.pre-phi.i.46.i = phi i8** [ %.pre3.i.45.i, %596 ], [ %593, %592 ]
  %599 = phi i8* [ %597, %596 ], [ %595, %592 ]
  store i8* %599, i8** %.pre-phi.i.46.i, align 8, !tbaa !157
  store i64 %589, i64* %570, align 8, !tbaa !158
  %.pre1.i.47.i = load i64, i64* %567, align 8, !tbaa !222
  br label %save.exit48.i

save.exit48.i:                                    ; preds = %598, %._crit_edge.i.43.i
  %600 = phi i8* [ %599, %598 ], [ %.pre2.i.42.i, %._crit_edge.i.43.i ]
  %601 = phi i64 [ %.pre1.i.47.i, %598 ], [ %568, %._crit_edge.i.43.i ]
  %602 = add i64 %601, 1
  store i64 %602, i64* %567, align 8, !tbaa !222
  %603 = getelementptr inbounds i8, i8* %600, i64 %601
  store i8 %241, i8* %603, align 1, !tbaa !76
  %604 = load %struct.Zio*, %struct.Zio** %5, align 8, !tbaa !227
  %605 = getelementptr inbounds %struct.Zio, %struct.Zio* %604, i64 0, i32 0
  %606 = load i64, i64* %605, align 8, !tbaa !228
  %607 = add i64 %606, -1
  store i64 %607, i64* %605, align 8, !tbaa !228
  %608 = icmp eq i64 %606, 0
  br i1 %608, label %615, label %609

; <label>:609                                     ; preds = %save.exit48.i
  %610 = getelementptr inbounds %struct.Zio, %struct.Zio* %604, i64 0, i32 1
  %611 = load i8*, i8** %610, align 8, !tbaa !230
  %612 = getelementptr inbounds i8, i8* %611, i64 1
  store i8* %612, i8** %610, align 8, !tbaa !230
  %613 = load i8, i8* %611, align 1, !tbaa !76
  %614 = zext i8 %613 to i32
  br label %617

; <label>:615                                     ; preds = %save.exit48.i
  %616 = call i32 @luaZ_fill(%struct.Zio* %604) #1
  br label %617

; <label>:617                                     ; preds = %615, %609
  %618 = phi i32 [ %614, %609 ], [ %616, %615 ]
  store i32 %618, i32* %4, align 4, !tbaa !231
  %619 = load %struct.Mbuffer*, %struct.Mbuffer** %1, align 8, !tbaa !221
  %620 = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %619, i64 0, i32 0
  %621 = load i8*, i8** %620, align 8, !tbaa !157
  %622 = getelementptr inbounds i8, i8* %621, i64 1
  %623 = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %619, i64 0, i32 1
  %624 = load i64, i64* %623, align 8, !tbaa !222
  %625 = add i64 %624, -2
  %626 = getelementptr inbounds %struct.LexState, %struct.LexState* %ls, i64 0, i32 6
  %627 = load %struct.lua_State*, %struct.lua_State** %626, align 8, !tbaa !218
  %628 = call %union.TString* @luaS_newlstr(%struct.lua_State* %627, i8* %622, i64 %625) #1
  %629 = getelementptr inbounds %struct.LexState, %struct.LexState* %ls, i64 0, i32 5
  %630 = load %struct.FuncState*, %struct.FuncState** %629, align 8, !tbaa !224
  %631 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %630, i64 0, i32 1
  %632 = load %struct.Table*, %struct.Table** %631, align 8, !tbaa !109
  %633 = call %struct.lua_TValue* @luaH_setstr(%struct.lua_State* %627, %struct.Table* %632, %union.TString* %628) #1
  %634 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %633, i64 0, i32 1
  %635 = load i32, i32* %634, align 4, !tbaa !10
  %636 = icmp eq i32 %635, 0
  br i1 %636, label %637, label %read_string.exit

; <label>:637                                     ; preds = %617
  %638 = bitcast %struct.lua_TValue* %633 to i32*
  store i32 1, i32* %638, align 4, !tbaa !38
  store i32 1, i32* %634, align 4, !tbaa !10
  br label %read_string.exit

read_string.exit:                                 ; preds = %617, %637
  %639 = bitcast %union.SemInfo* %seminfo to %union.TString**
  store %union.TString* %628, %union.TString** %639, align 8, !tbaa !25
  br label %.thread

; <label>:640                                     ; preds = %.critedge
  %641 = load %struct.Mbuffer*, %struct.Mbuffer** %1, align 8, !tbaa !221
  %642 = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %641, i64 0, i32 1
  %643 = load i64, i64* %642, align 8, !tbaa !222
  %644 = add i64 %643, 1
  %645 = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %641, i64 0, i32 2
  %646 = load i64, i64* %645, align 8, !tbaa !158
  %647 = icmp ugt i64 %644, %646
  br i1 %647, label %648, label %._crit_edge.i.9

._crit_edge.i.9:                                  ; preds = %640
  %.phi.trans.insert.i = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %641, i64 0, i32 0
  %.pre2.i = load i8*, i8** %.phi.trans.insert.i, align 8, !tbaa !157
  br label %save.exit

; <label>:648                                     ; preds = %640
  %649 = icmp ugt i64 %646, 9223372036854775805
  br i1 %649, label %650, label %._crit_edge.82

._crit_edge.82:                                   ; preds = %648
  %.pre = getelementptr inbounds %struct.LexState, %struct.LexState* %ls, i64 0, i32 6
  br label %662

; <label>:650                                     ; preds = %648
  %651 = getelementptr inbounds [80 x i8], [80 x i8]* %buff.i, i64 0, i64 0
  call void @llvm.lifetime.start(i64 80, i8* %651) #1
  %652 = getelementptr inbounds %struct.LexState, %struct.LexState* %ls, i64 0, i32 9
  %653 = load %union.TString*, %union.TString** %652, align 8, !tbaa !219
  %654 = getelementptr inbounds %union.TString, %union.TString* %653, i64 1
  %655 = bitcast %union.TString* %654 to i8*
  call void @luaO_chunkid(i8* %651, i8* %655, i64 80) #1
  %656 = getelementptr inbounds %struct.LexState, %struct.LexState* %ls, i64 0, i32 6
  %657 = load %struct.lua_State*, %struct.lua_State** %656, align 8, !tbaa !218
  %658 = getelementptr inbounds %struct.LexState, %struct.LexState* %ls, i64 0, i32 1
  %659 = load i32, i32* %658, align 4, !tbaa !220
  %660 = call i8* (%struct.lua_State*, i8*, ...) bitcast (i8* (%struct.lua_State.215*, i8*, ...)* @luaO_pushfstring to i8* (%struct.lua_State*, i8*, ...)*)(%struct.lua_State* %657, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.33.277, i64 0, i64 0), i8* %651, i32 %659, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.35.278, i64 0, i64 0)) #1
  %661 = load %struct.lua_State*, %struct.lua_State** %656, align 8, !tbaa !218
  call void @luaD_throw(%struct.lua_State* %661, i32 3) #1
  call void @llvm.lifetime.end(i64 80, i8* %651) #1
  %.pre.i.10 = load i64, i64* %645, align 8, !tbaa !158
  br label %662

; <label>:662                                     ; preds = %._crit_edge.82, %650
  %.pre-phi = phi %struct.lua_State** [ %.pre, %._crit_edge.82 ], [ %656, %650 ]
  %663 = phi i64 [ %646, %._crit_edge.82 ], [ %.pre.i.10, %650 ]
  %664 = shl i64 %663, 1
  %665 = icmp eq i64 %664, -2
  %666 = load %struct.lua_State*, %struct.lua_State** %.pre-phi, align 8, !tbaa !218
  br i1 %665, label %671, label %667

; <label>:667                                     ; preds = %662
  %668 = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %641, i64 0, i32 0
  %669 = load i8*, i8** %668, align 8, !tbaa !157
  %670 = call i8* @luaM_realloc_(%struct.lua_State* %666, i8* %669, i64 %663, i64 %664) #1
  br label %673

; <label>:671                                     ; preds = %662
  %672 = call i8* @luaM_toobig(%struct.lua_State* %666) #1
  %.pre3.i = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %641, i64 0, i32 0
  br label %673

; <label>:673                                     ; preds = %671, %667
  %.pre-phi.i.11 = phi i8** [ %.pre3.i, %671 ], [ %668, %667 ]
  %674 = phi i8* [ %672, %671 ], [ %670, %667 ]
  store i8* %674, i8** %.pre-phi.i.11, align 8, !tbaa !157
  store i64 %664, i64* %645, align 8, !tbaa !158
  %.pre1.i = load i64, i64* %642, align 8, !tbaa !222
  br label %save.exit

save.exit:                                        ; preds = %._crit_edge.i.9, %673
  %675 = phi i8* [ %674, %673 ], [ %.pre2.i, %._crit_edge.i.9 ]
  %676 = phi i64 [ %.pre1.i, %673 ], [ %643, %._crit_edge.i.9 ]
  %677 = add i64 %676, 1
  store i64 %677, i64* %642, align 8, !tbaa !222
  %678 = getelementptr inbounds i8, i8* %675, i64 %676
  store i8 46, i8* %678, align 1, !tbaa !76
  %679 = load %struct.Zio*, %struct.Zio** %5, align 8, !tbaa !227
  %680 = getelementptr inbounds %struct.Zio, %struct.Zio* %679, i64 0, i32 0
  %681 = load i64, i64* %680, align 8, !tbaa !228
  %682 = add i64 %681, -1
  store i64 %682, i64* %680, align 8, !tbaa !228
  %683 = icmp eq i64 %681, 0
  br i1 %683, label %690, label %684

; <label>:684                                     ; preds = %save.exit
  %685 = getelementptr inbounds %struct.Zio, %struct.Zio* %679, i64 0, i32 1
  %686 = load i8*, i8** %685, align 8, !tbaa !230
  %687 = getelementptr inbounds i8, i8* %686, i64 1
  store i8* %687, i8** %685, align 8, !tbaa !230
  %688 = load i8, i8* %686, align 1, !tbaa !76
  %689 = zext i8 %688 to i32
  br label %692

; <label>:690                                     ; preds = %save.exit
  %691 = call i32 @luaZ_fill(%struct.Zio* %679) #1
  br label %692

; <label>:692                                     ; preds = %690, %684
  %693 = phi i32 [ %689, %684 ], [ %691, %690 ]
  store i32 %693, i32* %4, align 4, !tbaa !231
  %694 = zext i32 %693 to i64
  %memchr.bounds = icmp ult i32 %693, 64
  %695 = shl i64 1, %694
  %696 = and i64 %695, 70368744177665
  %memchr.bits = icmp ne i64 %696, 0
  %.demorgan = and i1 %memchr.bounds, %memchr.bits
  br i1 %.demorgan, label %697, label %810

; <label>:697                                     ; preds = %692
  %698 = load %struct.Mbuffer*, %struct.Mbuffer** %1, align 8, !tbaa !221
  %699 = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %698, i64 0, i32 1
  %700 = load i64, i64* %699, align 8, !tbaa !222
  %701 = add i64 %700, 1
  %702 = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %698, i64 0, i32 2
  %703 = load i64, i64* %702, align 8, !tbaa !158
  %704 = icmp ugt i64 %701, %703
  br i1 %704, label %705, label %._crit_edge.i.25

._crit_edge.i.25:                                 ; preds = %697
  %.phi.trans.insert.i.23 = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %698, i64 0, i32 0
  %.pre2.i.24 = load i8*, i8** %.phi.trans.insert.i.23, align 8, !tbaa !157
  br label %save.exit30

; <label>:705                                     ; preds = %697
  %706 = icmp ugt i64 %703, 9223372036854775805
  br i1 %706, label %707, label %._crit_edge.81

._crit_edge.81:                                   ; preds = %705
  %.pre83 = getelementptr inbounds %struct.LexState, %struct.LexState* %ls, i64 0, i32 6
  br label %719

; <label>:707                                     ; preds = %705
  %708 = getelementptr inbounds [80 x i8], [80 x i8]* %buff.i.42, i64 0, i64 0
  call void @llvm.lifetime.start(i64 80, i8* %708) #1
  %709 = getelementptr inbounds %struct.LexState, %struct.LexState* %ls, i64 0, i32 9
  %710 = load %union.TString*, %union.TString** %709, align 8, !tbaa !219
  %711 = getelementptr inbounds %union.TString, %union.TString* %710, i64 1
  %712 = bitcast %union.TString* %711 to i8*
  call void @luaO_chunkid(i8* %708, i8* %712, i64 80) #1
  %713 = getelementptr inbounds %struct.LexState, %struct.LexState* %ls, i64 0, i32 6
  %714 = load %struct.lua_State*, %struct.lua_State** %713, align 8, !tbaa !218
  %715 = getelementptr inbounds %struct.LexState, %struct.LexState* %ls, i64 0, i32 1
  %716 = load i32, i32* %715, align 4, !tbaa !220
  %717 = call i8* (%struct.lua_State*, i8*, ...) bitcast (i8* (%struct.lua_State.215*, i8*, ...)* @luaO_pushfstring to i8* (%struct.lua_State*, i8*, ...)*)(%struct.lua_State* %714, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.33.277, i64 0, i64 0), i8* %708, i32 %716, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.35.278, i64 0, i64 0)) #1
  %718 = load %struct.lua_State*, %struct.lua_State** %713, align 8, !tbaa !218
  call void @luaD_throw(%struct.lua_State* %718, i32 3) #1
  call void @llvm.lifetime.end(i64 80, i8* %708) #1
  %.pre.i.26 = load i64, i64* %702, align 8, !tbaa !158
  br label %719

; <label>:719                                     ; preds = %._crit_edge.81, %707
  %.pre-phi84 = phi %struct.lua_State** [ %.pre83, %._crit_edge.81 ], [ %713, %707 ]
  %720 = phi i64 [ %703, %._crit_edge.81 ], [ %.pre.i.26, %707 ]
  %721 = shl i64 %720, 1
  %722 = icmp eq i64 %721, -2
  %723 = load %struct.lua_State*, %struct.lua_State** %.pre-phi84, align 8, !tbaa !218
  br i1 %722, label %728, label %724

; <label>:724                                     ; preds = %719
  %725 = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %698, i64 0, i32 0
  %726 = load i8*, i8** %725, align 8, !tbaa !157
  %727 = call i8* @luaM_realloc_(%struct.lua_State* %723, i8* %726, i64 %720, i64 %721) #1
  br label %730

; <label>:728                                     ; preds = %719
  %729 = call i8* @luaM_toobig(%struct.lua_State* %723) #1
  %.pre3.i.27 = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %698, i64 0, i32 0
  br label %730

; <label>:730                                     ; preds = %728, %724
  %.pre-phi.i.28 = phi i8** [ %.pre3.i.27, %728 ], [ %725, %724 ]
  %731 = phi i8* [ %729, %728 ], [ %727, %724 ]
  store i8* %731, i8** %.pre-phi.i.28, align 8, !tbaa !157
  store i64 %721, i64* %702, align 8, !tbaa !158
  %.pre1.i.29 = load i64, i64* %699, align 8, !tbaa !222
  br label %save.exit30

save.exit30:                                      ; preds = %._crit_edge.i.25, %730
  %732 = phi i8* [ %731, %730 ], [ %.pre2.i.24, %._crit_edge.i.25 ]
  %733 = phi i64 [ %.pre1.i.29, %730 ], [ %700, %._crit_edge.i.25 ]
  %734 = trunc i32 %693 to i8
  %735 = add i64 %733, 1
  store i64 %735, i64* %699, align 8, !tbaa !222
  %736 = getelementptr inbounds i8, i8* %732, i64 %733
  store i8 %734, i8* %736, align 1, !tbaa !76
  %737 = load %struct.Zio*, %struct.Zio** %5, align 8, !tbaa !227
  %738 = getelementptr inbounds %struct.Zio, %struct.Zio* %737, i64 0, i32 0
  %739 = load i64, i64* %738, align 8, !tbaa !228
  %740 = add i64 %739, -1
  store i64 %740, i64* %738, align 8, !tbaa !228
  %741 = icmp eq i64 %739, 0
  br i1 %741, label %748, label %742

; <label>:742                                     ; preds = %save.exit30
  %743 = getelementptr inbounds %struct.Zio, %struct.Zio* %737, i64 0, i32 1
  %744 = load i8*, i8** %743, align 8, !tbaa !230
  %745 = getelementptr inbounds i8, i8* %744, i64 1
  store i8* %745, i8** %743, align 8, !tbaa !230
  %746 = load i8, i8* %744, align 1, !tbaa !76
  %747 = zext i8 %746 to i32
  br label %750

; <label>:748                                     ; preds = %save.exit30
  %749 = call i32 @luaZ_fill(%struct.Zio* %737) #1
  br label %750

; <label>:750                                     ; preds = %748, %742
  %751 = phi i32 [ %747, %742 ], [ %749, %748 ]
  store i32 %751, i32* %4, align 4, !tbaa !231
  %752 = zext i32 %751 to i64
  %memchr.bounds47 = icmp ult i32 %751, 64
  %753 = shl i64 1, %752
  %754 = and i64 %753, 70368744177665
  %memchr.bits48 = icmp ne i64 %754, 0
  %.demorgan49 = and i1 %memchr.bounds47, %memchr.bits48
  br i1 %.demorgan49, label %755, label %.thread

; <label>:755                                     ; preds = %750
  %756 = load %struct.Mbuffer*, %struct.Mbuffer** %1, align 8, !tbaa !221
  %757 = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %756, i64 0, i32 1
  %758 = load i64, i64* %757, align 8, !tbaa !222
  %759 = add i64 %758, 1
  %760 = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %756, i64 0, i32 2
  %761 = load i64, i64* %760, align 8, !tbaa !158
  %762 = icmp ugt i64 %759, %761
  br i1 %762, label %763, label %._crit_edge.i.33

._crit_edge.i.33:                                 ; preds = %755
  %.phi.trans.insert.i.31 = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %756, i64 0, i32 0
  %.pre2.i.32 = load i8*, i8** %.phi.trans.insert.i.31, align 8, !tbaa !157
  br label %save.exit38

; <label>:763                                     ; preds = %755
  %764 = icmp ugt i64 %761, 9223372036854775805
  br i1 %764, label %765, label %._crit_edge

._crit_edge:                                      ; preds = %763
  %.pre85 = getelementptr inbounds %struct.LexState, %struct.LexState* %ls, i64 0, i32 6
  br label %777

; <label>:765                                     ; preds = %763
  %766 = getelementptr inbounds [80 x i8], [80 x i8]* %buff.i.44, i64 0, i64 0
  call void @llvm.lifetime.start(i64 80, i8* %766) #1
  %767 = getelementptr inbounds %struct.LexState, %struct.LexState* %ls, i64 0, i32 9
  %768 = load %union.TString*, %union.TString** %767, align 8, !tbaa !219
  %769 = getelementptr inbounds %union.TString, %union.TString* %768, i64 1
  %770 = bitcast %union.TString* %769 to i8*
  call void @luaO_chunkid(i8* %766, i8* %770, i64 80) #1
  %771 = getelementptr inbounds %struct.LexState, %struct.LexState* %ls, i64 0, i32 6
  %772 = load %struct.lua_State*, %struct.lua_State** %771, align 8, !tbaa !218
  %773 = getelementptr inbounds %struct.LexState, %struct.LexState* %ls, i64 0, i32 1
  %774 = load i32, i32* %773, align 4, !tbaa !220
  %775 = call i8* (%struct.lua_State*, i8*, ...) bitcast (i8* (%struct.lua_State.215*, i8*, ...)* @luaO_pushfstring to i8* (%struct.lua_State*, i8*, ...)*)(%struct.lua_State* %772, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.33.277, i64 0, i64 0), i8* %766, i32 %774, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.35.278, i64 0, i64 0)) #1
  %776 = load %struct.lua_State*, %struct.lua_State** %771, align 8, !tbaa !218
  call void @luaD_throw(%struct.lua_State* %776, i32 3) #1
  call void @llvm.lifetime.end(i64 80, i8* %766) #1
  %.pre.i.34 = load i64, i64* %760, align 8, !tbaa !158
  br label %777

; <label>:777                                     ; preds = %._crit_edge, %765
  %.pre-phi86 = phi %struct.lua_State** [ %.pre85, %._crit_edge ], [ %771, %765 ]
  %778 = phi i64 [ %761, %._crit_edge ], [ %.pre.i.34, %765 ]
  %779 = shl i64 %778, 1
  %780 = icmp eq i64 %779, -2
  %781 = load %struct.lua_State*, %struct.lua_State** %.pre-phi86, align 8, !tbaa !218
  br i1 %780, label %786, label %782

; <label>:782                                     ; preds = %777
  %783 = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %756, i64 0, i32 0
  %784 = load i8*, i8** %783, align 8, !tbaa !157
  %785 = call i8* @luaM_realloc_(%struct.lua_State* %781, i8* %784, i64 %778, i64 %779) #1
  br label %788

; <label>:786                                     ; preds = %777
  %787 = call i8* @luaM_toobig(%struct.lua_State* %781) #1
  %.pre3.i.35 = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %756, i64 0, i32 0
  br label %788

; <label>:788                                     ; preds = %786, %782
  %.pre-phi.i.36 = phi i8** [ %.pre3.i.35, %786 ], [ %783, %782 ]
  %789 = phi i8* [ %787, %786 ], [ %785, %782 ]
  store i8* %789, i8** %.pre-phi.i.36, align 8, !tbaa !157
  store i64 %779, i64* %760, align 8, !tbaa !158
  %.pre1.i.37 = load i64, i64* %757, align 8, !tbaa !222
  br label %save.exit38

save.exit38:                                      ; preds = %._crit_edge.i.33, %788
  %790 = phi i8* [ %789, %788 ], [ %.pre2.i.32, %._crit_edge.i.33 ]
  %791 = phi i64 [ %.pre1.i.37, %788 ], [ %758, %._crit_edge.i.33 ]
  %792 = trunc i32 %751 to i8
  %793 = add i64 %791, 1
  store i64 %793, i64* %757, align 8, !tbaa !222
  %794 = getelementptr inbounds i8, i8* %790, i64 %791
  store i8 %792, i8* %794, align 1, !tbaa !76
  %795 = load %struct.Zio*, %struct.Zio** %5, align 8, !tbaa !227
  %796 = getelementptr inbounds %struct.Zio, %struct.Zio* %795, i64 0, i32 0
  %797 = load i64, i64* %796, align 8, !tbaa !228
  %798 = add i64 %797, -1
  store i64 %798, i64* %796, align 8, !tbaa !228
  %799 = icmp eq i64 %797, 0
  br i1 %799, label %806, label %800

; <label>:800                                     ; preds = %save.exit38
  %801 = getelementptr inbounds %struct.Zio, %struct.Zio* %795, i64 0, i32 1
  %802 = load i8*, i8** %801, align 8, !tbaa !230
  %803 = getelementptr inbounds i8, i8* %802, i64 1
  store i8* %803, i8** %801, align 8, !tbaa !230
  %804 = load i8, i8* %802, align 1, !tbaa !76
  %805 = zext i8 %804 to i32
  br label %808

; <label>:806                                     ; preds = %save.exit38
  %807 = call i32 @luaZ_fill(%struct.Zio* %795) #1
  br label %808

; <label>:808                                     ; preds = %806, %800
  %809 = phi i32 [ %805, %800 ], [ %807, %806 ]
  store i32 %809, i32* %4, align 4, !tbaa !231
  br label %.thread

; <label>:810                                     ; preds = %692
  %811 = sext i32 %693 to i64
  %812 = tail call i16** @__ctype_b_loc() #12
  %813 = load i16*, i16** %812, align 8, !tbaa !25
  %814 = getelementptr inbounds i16, i16* %813, i64 %811
  %815 = load i16, i16* %814, align 2, !tbaa !87
  %816 = and i16 %815, 2048
  %817 = icmp eq i16 %816, 0
  br i1 %817, label %.thread, label %818

; <label>:818                                     ; preds = %810
  call fastcc void @read_numeral(%struct.LexState* %ls, %union.SemInfo* %seminfo)
  br label %.thread

; <label>:819                                     ; preds = %.critedge
  %820 = sext i32 %6 to i64
  %821 = tail call i16** @__ctype_b_loc() #12
  %822 = load i16*, i16** %821, align 8, !tbaa !25
  %823 = getelementptr inbounds i16, i16* %822, i64 %820
  %824 = load i16, i16* %823, align 2, !tbaa !87
  %825 = zext i16 %824 to i32
  %826 = and i32 %825, 8192
  %827 = icmp eq i32 %826, 0
  br i1 %827, label %844, label %828

; <label>:828                                     ; preds = %819
  %829 = load %struct.Zio*, %struct.Zio** %5, align 8, !tbaa !227
  %830 = getelementptr inbounds %struct.Zio, %struct.Zio* %829, i64 0, i32 0
  %831 = load i64, i64* %830, align 8, !tbaa !228
  %832 = add i64 %831, -1
  store i64 %832, i64* %830, align 8, !tbaa !228
  %833 = icmp eq i64 %831, 0
  br i1 %833, label %840, label %834

; <label>:834                                     ; preds = %828
  %835 = getelementptr inbounds %struct.Zio, %struct.Zio* %829, i64 0, i32 1
  %836 = load i8*, i8** %835, align 8, !tbaa !230
  %837 = getelementptr inbounds i8, i8* %836, i64 1
  store i8* %837, i8** %835, align 8, !tbaa !230
  %838 = load i8, i8* %836, align 1, !tbaa !76
  %839 = zext i8 %838 to i32
  br label %842

; <label>:840                                     ; preds = %828
  %841 = tail call i32 @luaZ_fill(%struct.Zio* %829) #1
  br label %842

; <label>:842                                     ; preds = %840, %834
  %843 = phi i32 [ %839, %834 ], [ %841, %840 ]
  store i32 %843, i32* %4, align 4, !tbaa !231
  br label %.critedge

; <label>:844                                     ; preds = %819
  %.lcssa142 = phi i32 [ %825, %819 ]
  %.lcssa141 = phi i16** [ %821, %819 ]
  %.lcssa140 = phi i32 [ %6, %819 ]
  %845 = and i32 %.lcssa142, 2048
  %846 = icmp eq i32 %845, 0
  br i1 %846, label %848, label %847

; <label>:847                                     ; preds = %844
  tail call fastcc void @read_numeral(%struct.LexState* %ls, %union.SemInfo* %seminfo)
  br label %.thread

; <label>:848                                     ; preds = %844
  %849 = and i32 %.lcssa142, 1024
  %850 = icmp ne i32 %849, 0
  %851 = icmp eq i32 %.lcssa140, 95
  %or.cond = or i1 %851, %850
  br i1 %or.cond, label %.critedge5.preheader, label %940

.critedge5.preheader:                             ; preds = %848
  %852 = getelementptr inbounds [80 x i8], [80 x i8]* %buff.i.40, i64 0, i64 0
  %853 = getelementptr inbounds %struct.LexState, %struct.LexState* %ls, i64 0, i32 9
  %854 = getelementptr inbounds %struct.LexState, %struct.LexState* %ls, i64 0, i32 6
  %855 = getelementptr inbounds %struct.LexState, %struct.LexState* %ls, i64 0, i32 1
  br label %.critedge5

.critedge5:                                       ; preds = %.critedge5.preheader, %905
  %856 = phi i32 [ %.lcssa140, %.critedge5.preheader ], [ %906, %905 ]
  %857 = load %struct.Mbuffer*, %struct.Mbuffer** %1, align 8, !tbaa !221
  %858 = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %857, i64 0, i32 1
  %859 = load i64, i64* %858, align 8, !tbaa !222
  %860 = add i64 %859, 1
  %861 = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %857, i64 0, i32 2
  %862 = load i64, i64* %861, align 8, !tbaa !158
  %863 = icmp ugt i64 %860, %862
  br i1 %863, label %864, label %._crit_edge.i.16

._crit_edge.i.16:                                 ; preds = %.critedge5
  %.phi.trans.insert.i.14 = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %857, i64 0, i32 0
  %.pre2.i.15 = load i8*, i8** %.phi.trans.insert.i.14, align 8, !tbaa !157
  br label %save.exit21

; <label>:864                                     ; preds = %.critedge5
  %865 = icmp ugt i64 %862, 9223372036854775805
  br i1 %865, label %866, label %874

; <label>:866                                     ; preds = %864
  call void @llvm.lifetime.start(i64 80, i8* %852) #1
  %867 = load %union.TString*, %union.TString** %853, align 8, !tbaa !219
  %868 = getelementptr inbounds %union.TString, %union.TString* %867, i64 1
  %869 = bitcast %union.TString* %868 to i8*
  call void @luaO_chunkid(i8* %852, i8* %869, i64 80) #1
  %870 = load %struct.lua_State*, %struct.lua_State** %854, align 8, !tbaa !218
  %871 = load i32, i32* %855, align 4, !tbaa !220
  %872 = call i8* (%struct.lua_State*, i8*, ...) bitcast (i8* (%struct.lua_State.215*, i8*, ...)* @luaO_pushfstring to i8* (%struct.lua_State*, i8*, ...)*)(%struct.lua_State* %870, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.33.277, i64 0, i64 0), i8* %852, i32 %871, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.35.278, i64 0, i64 0)) #1
  %873 = load %struct.lua_State*, %struct.lua_State** %854, align 8, !tbaa !218
  call void @luaD_throw(%struct.lua_State* %873, i32 3) #1
  call void @llvm.lifetime.end(i64 80, i8* %852) #1
  %.pre.i.17 = load i64, i64* %861, align 8, !tbaa !158
  br label %874

; <label>:874                                     ; preds = %866, %864
  %875 = phi i64 [ %.pre.i.17, %866 ], [ %862, %864 ]
  %876 = shl i64 %875, 1
  %877 = icmp eq i64 %876, -2
  %878 = load %struct.lua_State*, %struct.lua_State** %854, align 8, !tbaa !218
  br i1 %877, label %883, label %879

; <label>:879                                     ; preds = %874
  %880 = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %857, i64 0, i32 0
  %881 = load i8*, i8** %880, align 8, !tbaa !157
  %882 = call i8* @luaM_realloc_(%struct.lua_State* %878, i8* %881, i64 %875, i64 %876) #1
  br label %885

; <label>:883                                     ; preds = %874
  %884 = call i8* @luaM_toobig(%struct.lua_State* %878) #1
  %.pre3.i.18 = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %857, i64 0, i32 0
  br label %885

; <label>:885                                     ; preds = %883, %879
  %.pre-phi.i.19 = phi i8** [ %.pre3.i.18, %883 ], [ %880, %879 ]
  %886 = phi i8* [ %884, %883 ], [ %882, %879 ]
  store i8* %886, i8** %.pre-phi.i.19, align 8, !tbaa !157
  store i64 %876, i64* %861, align 8, !tbaa !158
  %.pre1.i.20 = load i64, i64* %858, align 8, !tbaa !222
  br label %save.exit21

save.exit21:                                      ; preds = %._crit_edge.i.16, %885
  %887 = phi i8* [ %886, %885 ], [ %.pre2.i.15, %._crit_edge.i.16 ]
  %888 = phi i64 [ %.pre1.i.20, %885 ], [ %859, %._crit_edge.i.16 ]
  %889 = trunc i32 %856 to i8
  %890 = add i64 %888, 1
  store i64 %890, i64* %858, align 8, !tbaa !222
  %891 = getelementptr inbounds i8, i8* %887, i64 %888
  store i8 %889, i8* %891, align 1, !tbaa !76
  %892 = load %struct.Zio*, %struct.Zio** %5, align 8, !tbaa !227
  %893 = getelementptr inbounds %struct.Zio, %struct.Zio* %892, i64 0, i32 0
  %894 = load i64, i64* %893, align 8, !tbaa !228
  %895 = add i64 %894, -1
  store i64 %895, i64* %893, align 8, !tbaa !228
  %896 = icmp eq i64 %894, 0
  br i1 %896, label %903, label %897

; <label>:897                                     ; preds = %save.exit21
  %898 = getelementptr inbounds %struct.Zio, %struct.Zio* %892, i64 0, i32 1
  %899 = load i8*, i8** %898, align 8, !tbaa !230
  %900 = getelementptr inbounds i8, i8* %899, i64 1
  store i8* %900, i8** %898, align 8, !tbaa !230
  %901 = load i8, i8* %899, align 1, !tbaa !76
  %902 = zext i8 %901 to i32
  br label %905

; <label>:903                                     ; preds = %save.exit21
  %904 = call i32 @luaZ_fill(%struct.Zio* %892) #1
  br label %905

; <label>:905                                     ; preds = %903, %897
  %906 = phi i32 [ %902, %897 ], [ %904, %903 ]
  store i32 %906, i32* %4, align 4, !tbaa !231
  %907 = sext i32 %906 to i64
  %908 = load i16*, i16** %.lcssa141, align 8, !tbaa !25
  %909 = getelementptr inbounds i16, i16* %908, i64 %907
  %910 = load i16, i16* %909, align 2, !tbaa !87
  %911 = and i16 %910, 8
  %912 = icmp ne i16 %911, 0
  %913 = icmp eq i32 %906, 95
  %or.cond8 = or i1 %913, %912
  br i1 %or.cond8, label %.critedge5, label %914

; <label>:914                                     ; preds = %905
  %915 = load %struct.Mbuffer*, %struct.Mbuffer** %1, align 8, !tbaa !221
  %916 = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %915, i64 0, i32 0
  %917 = load i8*, i8** %916, align 8, !tbaa !157
  %918 = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %915, i64 0, i32 1
  %919 = load i64, i64* %918, align 8, !tbaa !222
  %920 = load %struct.lua_State*, %struct.lua_State** %854, align 8, !tbaa !218
  %921 = call %union.TString* @luaS_newlstr(%struct.lua_State* %920, i8* %917, i64 %919) #1
  %922 = getelementptr inbounds %struct.LexState, %struct.LexState* %ls, i64 0, i32 5
  %923 = load %struct.FuncState*, %struct.FuncState** %922, align 8, !tbaa !224
  %924 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %923, i64 0, i32 1
  %925 = load %struct.Table*, %struct.Table** %924, align 8, !tbaa !109
  %926 = call %struct.lua_TValue* @luaH_setstr(%struct.lua_State* %920, %struct.Table* %925, %union.TString* %921) #1
  %927 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %926, i64 0, i32 1
  %928 = load i32, i32* %927, align 4, !tbaa !10
  %929 = icmp eq i32 %928, 0
  br i1 %929, label %930, label %luaX_newstring.exit

; <label>:930                                     ; preds = %914
  %931 = bitcast %struct.lua_TValue* %926 to i32*
  store i32 1, i32* %931, align 4, !tbaa !38
  store i32 1, i32* %927, align 4, !tbaa !10
  br label %luaX_newstring.exit

luaX_newstring.exit:                              ; preds = %914, %930
  %932 = getelementptr inbounds %union.TString, %union.TString* %921, i64 0, i32 0, i32 3
  %933 = load i8, i8* %932, align 1, !tbaa !217
  %934 = icmp eq i8 %933, 0
  br i1 %934, label %938, label %935

; <label>:935                                     ; preds = %luaX_newstring.exit
  %936 = zext i8 %933 to i32
  %937 = or i32 %936, 256
  br label %.thread

; <label>:938                                     ; preds = %luaX_newstring.exit
  %939 = bitcast %union.SemInfo* %seminfo to %union.TString**
  store %union.TString* %921, %union.TString** %939, align 8, !tbaa !25
  br label %.thread

; <label>:940                                     ; preds = %848
  %941 = load %struct.Zio*, %struct.Zio** %5, align 8, !tbaa !227
  %942 = getelementptr inbounds %struct.Zio, %struct.Zio* %941, i64 0, i32 0
  %943 = load i64, i64* %942, align 8, !tbaa !228
  %944 = add i64 %943, -1
  store i64 %944, i64* %942, align 8, !tbaa !228
  %945 = icmp eq i64 %943, 0
  br i1 %945, label %952, label %946

; <label>:946                                     ; preds = %940
  %947 = getelementptr inbounds %struct.Zio, %struct.Zio* %941, i64 0, i32 1
  %948 = load i8*, i8** %947, align 8, !tbaa !230
  %949 = getelementptr inbounds i8, i8* %948, i64 1
  store i8* %949, i8** %947, align 8, !tbaa !230
  %950 = load i8, i8* %948, align 1, !tbaa !76
  %951 = zext i8 %950 to i32
  br label %954

; <label>:952                                     ; preds = %940
  %953 = tail call i32 @luaZ_fill(%struct.Zio* %941) #1
  br label %954

; <label>:954                                     ; preds = %952, %946
  %955 = phi i32 [ %951, %946 ], [ %953, %952 ]
  store i32 %955, i32* %4, align 4, !tbaa !231
  br label %.thread

.thread.loopexit:                                 ; preds = %.critedge
  br label %.thread

.thread.loopexit116:                              ; preds = %22
  br label %.thread

.thread:                                          ; preds = %.thread.loopexit116, %.thread.loopexit, %808, %750, %70, %69, %935, %938, %810, %185, %152, %119, %86, %954, %847, %818, %read_string.exit, %202, %169, %136, %103
  %.2 = phi i32 [ 284, %847 ], [ %.lcssa140, %954 ], [ 284, %818 ], [ 286, %read_string.exit ], [ 283, %202 ], [ 281, %169 ], [ 282, %136 ], [ 280, %103 ], [ 61, %86 ], [ 60, %119 ], [ 62, %152 ], [ 126, %185 ], [ 46, %810 ], [ %937, %935 ], [ 285, %938 ], [ 91, %70 ], [ 286, %69 ], [ 279, %808 ], [ 278, %750 ], [ 287, %.thread.loopexit ], [ 45, %.thread.loopexit116 ]
  ret i32 %.2
}

; Function Attrs: nounwind uwtable
define internal fastcc void @inclinenumber(%struct.LexState* nocapture %ls) #0 {
  %1 = getelementptr inbounds %struct.LexState, %struct.LexState* %ls, i64 0, i32 0
  %2 = load i32, i32* %1, align 4, !tbaa !231
  %3 = getelementptr inbounds %struct.LexState, %struct.LexState* %ls, i64 0, i32 7
  %4 = load %struct.Zio*, %struct.Zio** %3, align 8, !tbaa !227
  %5 = getelementptr inbounds %struct.Zio, %struct.Zio* %4, i64 0, i32 0
  %6 = load i64, i64* %5, align 8, !tbaa !228
  %7 = add i64 %6, -1
  store i64 %7, i64* %5, align 8, !tbaa !228
  %8 = icmp eq i64 %6, 0
  br i1 %8, label %15, label %9

; <label>:9                                       ; preds = %0
  %10 = getelementptr inbounds %struct.Zio, %struct.Zio* %4, i64 0, i32 1
  %11 = load i8*, i8** %10, align 8, !tbaa !230
  %12 = getelementptr inbounds i8, i8* %11, i64 1
  store i8* %12, i8** %10, align 8, !tbaa !230
  %13 = load i8, i8* %11, align 1, !tbaa !76
  %14 = zext i8 %13 to i32
  br label %17

; <label>:15                                      ; preds = %0
  %16 = tail call i32 @luaZ_fill(%struct.Zio* %4) #1
  br label %17

; <label>:17                                      ; preds = %15, %9
  %18 = phi i32 [ %14, %9 ], [ %16, %15 ]
  store i32 %18, i32* %1, align 4, !tbaa !231
  switch i32 %18, label %37 [
    i32 10, label %19
    i32 13, label %19
  ]

; <label>:19                                      ; preds = %17, %17
  %20 = icmp eq i32 %18, %2
  br i1 %20, label %37, label %21

; <label>:21                                      ; preds = %19
  %22 = load %struct.Zio*, %struct.Zio** %3, align 8, !tbaa !227
  %23 = getelementptr inbounds %struct.Zio, %struct.Zio* %22, i64 0, i32 0
  %24 = load i64, i64* %23, align 8, !tbaa !228
  %25 = add i64 %24, -1
  store i64 %25, i64* %23, align 8, !tbaa !228
  %26 = icmp eq i64 %24, 0
  br i1 %26, label %33, label %27

; <label>:27                                      ; preds = %21
  %28 = getelementptr inbounds %struct.Zio, %struct.Zio* %22, i64 0, i32 1
  %29 = load i8*, i8** %28, align 8, !tbaa !230
  %30 = getelementptr inbounds i8, i8* %29, i64 1
  store i8* %30, i8** %28, align 8, !tbaa !230
  %31 = load i8, i8* %29, align 1, !tbaa !76
  %32 = zext i8 %31 to i32
  br label %35

; <label>:33                                      ; preds = %21
  %34 = tail call i32 @luaZ_fill(%struct.Zio* %22) #1
  br label %35

; <label>:35                                      ; preds = %33, %27
  %36 = phi i32 [ %32, %27 ], [ %34, %33 ]
  store i32 %36, i32* %1, align 4, !tbaa !231
  br label %37

; <label>:37                                      ; preds = %17, %19, %35
  %38 = getelementptr inbounds %struct.LexState, %struct.LexState* %ls, i64 0, i32 1
  %39 = load i32, i32* %38, align 4, !tbaa !220
  %40 = add nsw i32 %39, 1
  store i32 %40, i32* %38, align 4, !tbaa !220
  %41 = icmp sgt i32 %39, 2147483643
  br i1 %41, label %42, label %45

; <label>:42                                      ; preds = %37
  %43 = getelementptr inbounds %struct.LexState, %struct.LexState* %ls, i64 0, i32 3, i32 0
  %44 = load i32, i32* %43, align 4, !tbaa !223
  tail call void @luaX_lexerror(%struct.LexState* %ls, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.38.319, i64 0, i64 0), i32 %44) #1
  br label %45

; <label>:45                                      ; preds = %42, %37
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @skip_sep(%struct.LexState* nocapture %ls) #0 {
  %buff.i.9 = alloca [80 x i8], align 16
  %buff.i = alloca [80 x i8], align 16
  %1 = getelementptr inbounds %struct.LexState, %struct.LexState* %ls, i64 0, i32 0
  %2 = load i32, i32* %1, align 4, !tbaa !231
  %3 = getelementptr inbounds %struct.LexState, %struct.LexState* %ls, i64 0, i32 8
  %4 = load %struct.Mbuffer*, %struct.Mbuffer** %3, align 8, !tbaa !221
  %5 = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %4, i64 0, i32 1
  %6 = load i64, i64* %5, align 8, !tbaa !222
  %7 = add i64 %6, 1
  %8 = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %4, i64 0, i32 2
  %9 = load i64, i64* %8, align 8, !tbaa !158
  %10 = icmp ugt i64 %7, %9
  br i1 %10, label %11, label %._crit_edge.i

._crit_edge.i:                                    ; preds = %0
  %.phi.trans.insert.i = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %4, i64 0, i32 0
  %.pre2.i = load i8*, i8** %.phi.trans.insert.i, align 8, !tbaa !157
  br label %save.exit

; <label>:11                                      ; preds = %0
  %12 = icmp ugt i64 %9, 9223372036854775805
  br i1 %12, label %13, label %._crit_edge.14

._crit_edge.14:                                   ; preds = %11
  %.pre = getelementptr inbounds %struct.LexState, %struct.LexState* %ls, i64 0, i32 6
  br label %25

; <label>:13                                      ; preds = %11
  %14 = getelementptr inbounds [80 x i8], [80 x i8]* %buff.i, i64 0, i64 0
  call void @llvm.lifetime.start(i64 80, i8* %14) #1
  %15 = getelementptr inbounds %struct.LexState, %struct.LexState* %ls, i64 0, i32 9
  %16 = load %union.TString*, %union.TString** %15, align 8, !tbaa !219
  %17 = getelementptr inbounds %union.TString, %union.TString* %16, i64 1
  %18 = bitcast %union.TString* %17 to i8*
  call void @luaO_chunkid(i8* %14, i8* %18, i64 80) #1
  %19 = getelementptr inbounds %struct.LexState, %struct.LexState* %ls, i64 0, i32 6
  %20 = load %struct.lua_State*, %struct.lua_State** %19, align 8, !tbaa !218
  %21 = getelementptr inbounds %struct.LexState, %struct.LexState* %ls, i64 0, i32 1
  %22 = load i32, i32* %21, align 4, !tbaa !220
  %23 = call i8* (%struct.lua_State*, i8*, ...) bitcast (i8* (%struct.lua_State.215*, i8*, ...)* @luaO_pushfstring to i8* (%struct.lua_State*, i8*, ...)*)(%struct.lua_State* %20, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.33.277, i64 0, i64 0), i8* %14, i32 %22, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.35.278, i64 0, i64 0)) #1
  %24 = load %struct.lua_State*, %struct.lua_State** %19, align 8, !tbaa !218
  call void @luaD_throw(%struct.lua_State* %24, i32 3) #1
  call void @llvm.lifetime.end(i64 80, i8* %14) #1
  %.pre.i = load i64, i64* %8, align 8, !tbaa !158
  br label %25

; <label>:25                                      ; preds = %._crit_edge.14, %13
  %.pre-phi = phi %struct.lua_State** [ %.pre, %._crit_edge.14 ], [ %19, %13 ]
  %26 = phi i64 [ %9, %._crit_edge.14 ], [ %.pre.i, %13 ]
  %27 = shl i64 %26, 1
  %28 = icmp eq i64 %27, -2
  %29 = load %struct.lua_State*, %struct.lua_State** %.pre-phi, align 8, !tbaa !218
  br i1 %28, label %34, label %30

; <label>:30                                      ; preds = %25
  %31 = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %4, i64 0, i32 0
  %32 = load i8*, i8** %31, align 8, !tbaa !157
  %33 = call i8* @luaM_realloc_(%struct.lua_State* %29, i8* %32, i64 %26, i64 %27) #1
  br label %36

; <label>:34                                      ; preds = %25
  %35 = call i8* @luaM_toobig(%struct.lua_State* %29) #1
  %.pre3.i = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %4, i64 0, i32 0
  br label %36

; <label>:36                                      ; preds = %34, %30
  %.pre-phi.i = phi i8** [ %.pre3.i, %34 ], [ %31, %30 ]
  %37 = phi i8* [ %35, %34 ], [ %33, %30 ]
  store i8* %37, i8** %.pre-phi.i, align 8, !tbaa !157
  store i64 %27, i64* %8, align 8, !tbaa !158
  %.pre1.i = load i64, i64* %5, align 8, !tbaa !222
  br label %save.exit

save.exit:                                        ; preds = %._crit_edge.i, %36
  %38 = phi i8* [ %37, %36 ], [ %.pre2.i, %._crit_edge.i ]
  %39 = phi i64 [ %.pre1.i, %36 ], [ %6, %._crit_edge.i ]
  %40 = trunc i32 %2 to i8
  %41 = add i64 %39, 1
  store i64 %41, i64* %5, align 8, !tbaa !222
  %42 = getelementptr inbounds i8, i8* %38, i64 %39
  store i8 %40, i8* %42, align 1, !tbaa !76
  %43 = getelementptr inbounds %struct.LexState, %struct.LexState* %ls, i64 0, i32 7
  %44 = load %struct.Zio*, %struct.Zio** %43, align 8, !tbaa !227
  %45 = getelementptr inbounds %struct.Zio, %struct.Zio* %44, i64 0, i32 0
  %46 = load i64, i64* %45, align 8, !tbaa !228
  %47 = add i64 %46, -1
  store i64 %47, i64* %45, align 8, !tbaa !228
  %48 = icmp eq i64 %46, 0
  br i1 %48, label %55, label %49

; <label>:49                                      ; preds = %save.exit
  %50 = getelementptr inbounds %struct.Zio, %struct.Zio* %44, i64 0, i32 1
  %51 = load i8*, i8** %50, align 8, !tbaa !230
  %52 = getelementptr inbounds i8, i8* %51, i64 1
  store i8* %52, i8** %50, align 8, !tbaa !230
  %53 = load i8, i8* %51, align 1, !tbaa !76
  %54 = zext i8 %53 to i32
  br label %57

; <label>:55                                      ; preds = %save.exit
  %56 = call i32 @luaZ_fill(%struct.Zio* %44) #1
  br label %57

; <label>:57                                      ; preds = %55, %49
  %58 = phi i32 [ %54, %49 ], [ %56, %55 ]
  store i32 %58, i32* %1, align 4, !tbaa !231
  %59 = icmp eq i32 %58, 61
  br i1 %59, label %.lr.ph, label %._crit_edge

.lr.ph:                                           ; preds = %57
  %60 = getelementptr inbounds [80 x i8], [80 x i8]* %buff.i.9, i64 0, i64 0
  %61 = getelementptr inbounds %struct.LexState, %struct.LexState* %ls, i64 0, i32 9
  %62 = getelementptr inbounds %struct.LexState, %struct.LexState* %ls, i64 0, i32 6
  %63 = getelementptr inbounds %struct.LexState, %struct.LexState* %ls, i64 0, i32 1
  br label %64

; <label>:64                                      ; preds = %.lr.ph, %112
  %count.010 = phi i32 [ 0, %.lr.ph ], [ %114, %112 ]
  %65 = load %struct.Mbuffer*, %struct.Mbuffer** %3, align 8, !tbaa !221
  %66 = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %65, i64 0, i32 1
  %67 = load i64, i64* %66, align 8, !tbaa !222
  %68 = add i64 %67, 1
  %69 = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %65, i64 0, i32 2
  %70 = load i64, i64* %69, align 8, !tbaa !158
  %71 = icmp ugt i64 %68, %70
  br i1 %71, label %72, label %._crit_edge.i.3

._crit_edge.i.3:                                  ; preds = %64
  %.phi.trans.insert.i.1 = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %65, i64 0, i32 0
  %.pre2.i.2 = load i8*, i8** %.phi.trans.insert.i.1, align 8, !tbaa !157
  br label %save.exit8

; <label>:72                                      ; preds = %64
  %73 = icmp ugt i64 %70, 9223372036854775805
  br i1 %73, label %74, label %82

; <label>:74                                      ; preds = %72
  call void @llvm.lifetime.start(i64 80, i8* %60) #1
  %75 = load %union.TString*, %union.TString** %61, align 8, !tbaa !219
  %76 = getelementptr inbounds %union.TString, %union.TString* %75, i64 1
  %77 = bitcast %union.TString* %76 to i8*
  call void @luaO_chunkid(i8* %60, i8* %77, i64 80) #1
  %78 = load %struct.lua_State*, %struct.lua_State** %62, align 8, !tbaa !218
  %79 = load i32, i32* %63, align 4, !tbaa !220
  %80 = call i8* (%struct.lua_State*, i8*, ...) bitcast (i8* (%struct.lua_State.215*, i8*, ...)* @luaO_pushfstring to i8* (%struct.lua_State*, i8*, ...)*)(%struct.lua_State* %78, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.33.277, i64 0, i64 0), i8* %60, i32 %79, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.35.278, i64 0, i64 0)) #1
  %81 = load %struct.lua_State*, %struct.lua_State** %62, align 8, !tbaa !218
  call void @luaD_throw(%struct.lua_State* %81, i32 3) #1
  call void @llvm.lifetime.end(i64 80, i8* %60) #1
  %.pre.i.4 = load i64, i64* %69, align 8, !tbaa !158
  br label %82

; <label>:82                                      ; preds = %74, %72
  %83 = phi i64 [ %.pre.i.4, %74 ], [ %70, %72 ]
  %84 = shl i64 %83, 1
  %85 = icmp eq i64 %84, -2
  %86 = load %struct.lua_State*, %struct.lua_State** %62, align 8, !tbaa !218
  br i1 %85, label %91, label %87

; <label>:87                                      ; preds = %82
  %88 = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %65, i64 0, i32 0
  %89 = load i8*, i8** %88, align 8, !tbaa !157
  %90 = call i8* @luaM_realloc_(%struct.lua_State* %86, i8* %89, i64 %83, i64 %84) #1
  br label %93

; <label>:91                                      ; preds = %82
  %92 = call i8* @luaM_toobig(%struct.lua_State* %86) #1
  %.pre3.i.5 = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %65, i64 0, i32 0
  br label %93

; <label>:93                                      ; preds = %91, %87
  %.pre-phi.i.6 = phi i8** [ %.pre3.i.5, %91 ], [ %88, %87 ]
  %94 = phi i8* [ %92, %91 ], [ %90, %87 ]
  store i8* %94, i8** %.pre-phi.i.6, align 8, !tbaa !157
  store i64 %84, i64* %69, align 8, !tbaa !158
  %.pre1.i.7 = load i64, i64* %66, align 8, !tbaa !222
  br label %save.exit8

save.exit8:                                       ; preds = %._crit_edge.i.3, %93
  %95 = phi i8* [ %94, %93 ], [ %.pre2.i.2, %._crit_edge.i.3 ]
  %96 = phi i64 [ %.pre1.i.7, %93 ], [ %67, %._crit_edge.i.3 ]
  %97 = add i64 %96, 1
  store i64 %97, i64* %66, align 8, !tbaa !222
  %98 = getelementptr inbounds i8, i8* %95, i64 %96
  store i8 61, i8* %98, align 1, !tbaa !76
  %99 = load %struct.Zio*, %struct.Zio** %43, align 8, !tbaa !227
  %100 = getelementptr inbounds %struct.Zio, %struct.Zio* %99, i64 0, i32 0
  %101 = load i64, i64* %100, align 8, !tbaa !228
  %102 = add i64 %101, -1
  store i64 %102, i64* %100, align 8, !tbaa !228
  %103 = icmp eq i64 %101, 0
  br i1 %103, label %110, label %104

; <label>:104                                     ; preds = %save.exit8
  %105 = getelementptr inbounds %struct.Zio, %struct.Zio* %99, i64 0, i32 1
  %106 = load i8*, i8** %105, align 8, !tbaa !230
  %107 = getelementptr inbounds i8, i8* %106, i64 1
  store i8* %107, i8** %105, align 8, !tbaa !230
  %108 = load i8, i8* %106, align 1, !tbaa !76
  %109 = zext i8 %108 to i32
  br label %112

; <label>:110                                     ; preds = %save.exit8
  %111 = call i32 @luaZ_fill(%struct.Zio* %99) #1
  br label %112

; <label>:112                                     ; preds = %110, %104
  %113 = phi i32 [ %109, %104 ], [ %111, %110 ]
  store i32 %113, i32* %1, align 4, !tbaa !231
  %114 = add nuw nsw i32 %count.010, 1
  %115 = icmp eq i32 %113, 61
  br i1 %115, label %64, label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %112
  %.lcssa22 = phi i32 [ %114, %112 ]
  %.lcssa21 = phi i32 [ %113, %112 ]
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %57
  %count.0.lcssa = phi i32 [ 0, %57 ], [ %.lcssa22, %._crit_edge.loopexit ]
  %.lcssa = phi i32 [ %58, %57 ], [ %.lcssa21, %._crit_edge.loopexit ]
  %not. = icmp ne i32 %.lcssa, %2
  %116 = sext i1 %not. to i32
  %117 = xor i32 %116, %count.0.lcssa
  ret i32 %117
}

; Function Attrs: nounwind uwtable
define internal fastcc void @read_long_string(%struct.LexState* %ls, %union.SemInfo* %seminfo, i32 %sep) #0 {
  %buff.i.37 = alloca [80 x i8], align 16
  %buff.i.36 = alloca [80 x i8], align 16
  %buff.i.35 = alloca [80 x i8], align 16
  %buff.i.34 = alloca [80 x i8], align 16
  %buff.i.33 = alloca [80 x i8], align 16
  %buff.i = alloca [80 x i8], align 16
  %1 = getelementptr inbounds %struct.LexState, %struct.LexState* %ls, i64 0, i32 0
  %2 = load i32, i32* %1, align 4, !tbaa !231
  %3 = getelementptr inbounds %struct.LexState, %struct.LexState* %ls, i64 0, i32 8
  %4 = load %struct.Mbuffer*, %struct.Mbuffer** %3, align 8, !tbaa !221
  %5 = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %4, i64 0, i32 1
  %6 = load i64, i64* %5, align 8, !tbaa !222
  %7 = add i64 %6, 1
  %8 = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %4, i64 0, i32 2
  %9 = load i64, i64* %8, align 8, !tbaa !158
  %10 = icmp ugt i64 %7, %9
  br i1 %10, label %11, label %._crit_edge.i

._crit_edge.i:                                    ; preds = %0
  %.phi.trans.insert.i = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %4, i64 0, i32 0
  %.pre2.i = load i8*, i8** %.phi.trans.insert.i, align 8, !tbaa !157
  br label %save.exit

; <label>:11                                      ; preds = %0
  %12 = icmp ugt i64 %9, 9223372036854775805
  br i1 %12, label %13, label %._crit_edge

._crit_edge:                                      ; preds = %11
  %.pre = getelementptr inbounds %struct.LexState, %struct.LexState* %ls, i64 0, i32 6
  br label %25

; <label>:13                                      ; preds = %11
  %14 = getelementptr inbounds [80 x i8], [80 x i8]* %buff.i.33, i64 0, i64 0
  call void @llvm.lifetime.start(i64 80, i8* %14) #1
  %15 = getelementptr inbounds %struct.LexState, %struct.LexState* %ls, i64 0, i32 9
  %16 = load %union.TString*, %union.TString** %15, align 8, !tbaa !219
  %17 = getelementptr inbounds %union.TString, %union.TString* %16, i64 1
  %18 = bitcast %union.TString* %17 to i8*
  call void @luaO_chunkid(i8* %14, i8* %18, i64 80) #1
  %19 = getelementptr inbounds %struct.LexState, %struct.LexState* %ls, i64 0, i32 6
  %20 = load %struct.lua_State*, %struct.lua_State** %19, align 8, !tbaa !218
  %21 = getelementptr inbounds %struct.LexState, %struct.LexState* %ls, i64 0, i32 1
  %22 = load i32, i32* %21, align 4, !tbaa !220
  %23 = call i8* (%struct.lua_State*, i8*, ...) bitcast (i8* (%struct.lua_State.215*, i8*, ...)* @luaO_pushfstring to i8* (%struct.lua_State*, i8*, ...)*)(%struct.lua_State* %20, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.33.277, i64 0, i64 0), i8* %14, i32 %22, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.35.278, i64 0, i64 0)) #1
  %24 = load %struct.lua_State*, %struct.lua_State** %19, align 8, !tbaa !218
  call void @luaD_throw(%struct.lua_State* %24, i32 3) #1
  call void @llvm.lifetime.end(i64 80, i8* %14) #1
  %.pre.i = load i64, i64* %8, align 8, !tbaa !158
  br label %25

; <label>:25                                      ; preds = %._crit_edge, %13
  %.pre-phi = phi %struct.lua_State** [ %.pre, %._crit_edge ], [ %19, %13 ]
  %26 = phi i64 [ %9, %._crit_edge ], [ %.pre.i, %13 ]
  %27 = shl i64 %26, 1
  %28 = icmp eq i64 %27, -2
  %29 = load %struct.lua_State*, %struct.lua_State** %.pre-phi, align 8, !tbaa !218
  br i1 %28, label %34, label %30

; <label>:30                                      ; preds = %25
  %31 = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %4, i64 0, i32 0
  %32 = load i8*, i8** %31, align 8, !tbaa !157
  %33 = call i8* @luaM_realloc_(%struct.lua_State* %29, i8* %32, i64 %26, i64 %27) #1
  br label %36

; <label>:34                                      ; preds = %25
  %35 = call i8* @luaM_toobig(%struct.lua_State* %29) #1
  %.pre3.i = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %4, i64 0, i32 0
  br label %36

; <label>:36                                      ; preds = %34, %30
  %.pre-phi.i = phi i8** [ %.pre3.i, %34 ], [ %31, %30 ]
  %37 = phi i8* [ %35, %34 ], [ %33, %30 ]
  store i8* %37, i8** %.pre-phi.i, align 8, !tbaa !157
  store i64 %27, i64* %8, align 8, !tbaa !158
  %.pre1.i = load i64, i64* %5, align 8, !tbaa !222
  br label %save.exit

save.exit:                                        ; preds = %._crit_edge.i, %36
  %38 = phi i8* [ %37, %36 ], [ %.pre2.i, %._crit_edge.i ]
  %39 = phi i64 [ %.pre1.i, %36 ], [ %6, %._crit_edge.i ]
  %40 = trunc i32 %2 to i8
  %41 = add i64 %39, 1
  store i64 %41, i64* %5, align 8, !tbaa !222
  %42 = getelementptr inbounds i8, i8* %38, i64 %39
  store i8 %40, i8* %42, align 1, !tbaa !76
  %43 = getelementptr inbounds %struct.LexState, %struct.LexState* %ls, i64 0, i32 7
  %44 = load %struct.Zio*, %struct.Zio** %43, align 8, !tbaa !227
  %45 = getelementptr inbounds %struct.Zio, %struct.Zio* %44, i64 0, i32 0
  %46 = load i64, i64* %45, align 8, !tbaa !228
  %47 = add i64 %46, -1
  store i64 %47, i64* %45, align 8, !tbaa !228
  %48 = icmp eq i64 %46, 0
  br i1 %48, label %55, label %49

; <label>:49                                      ; preds = %save.exit
  %50 = getelementptr inbounds %struct.Zio, %struct.Zio* %44, i64 0, i32 1
  %51 = load i8*, i8** %50, align 8, !tbaa !230
  %52 = getelementptr inbounds i8, i8* %51, i64 1
  store i8* %52, i8** %50, align 8, !tbaa !230
  %53 = load i8, i8* %51, align 1, !tbaa !76
  %54 = zext i8 %53 to i32
  br label %57

; <label>:55                                      ; preds = %save.exit
  %56 = call i32 @luaZ_fill(%struct.Zio* %44) #1
  br label %57

; <label>:57                                      ; preds = %55, %49
  %58 = phi i32 [ %54, %49 ], [ %56, %55 ]
  store i32 %58, i32* %1, align 4, !tbaa !231
  switch i32 %58, label %.preheader [
    i32 10, label %59
    i32 13, label %59
  ]

; <label>:59                                      ; preds = %57, %57
  call fastcc void @inclinenumber(%struct.LexState* %ls)
  br label %thread-pre-split

thread-pre-split.loopexit:                        ; preds = %.us-lcssa45.us
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %thread-pre-split.loopexit, %59, %241, %.us-lcssa46.us, %150, %.us-lcssa.us, %save.exit24
  %.pr = load i32, i32* %1, align 4, !tbaa !231
  br label %.preheader

.preheader:                                       ; preds = %57, %thread-pre-split
  %.ph = phi i32 [ %58, %57 ], [ %.pr, %thread-pre-split ]
  %60 = icmp eq %union.SemInfo* %seminfo, null
  %61 = getelementptr inbounds [80 x i8], [80 x i8]* %buff.i.37, i64 0, i64 0
  %62 = getelementptr inbounds %struct.LexState, %struct.LexState* %ls, i64 0, i32 9
  %63 = getelementptr inbounds %struct.LexState, %struct.LexState* %ls, i64 0, i32 6
  %64 = getelementptr inbounds %struct.LexState, %struct.LexState* %ls, i64 0, i32 1
  %65 = getelementptr inbounds [80 x i8], [80 x i8]* %buff.i.34, i64 0, i64 0
  %66 = icmp eq i32 %sep, 0
  br label %.outer

.outer:                                           ; preds = %.preheader, %148
  %.ph39 = phi i32 [ %.ph, %.preheader ], [ %149, %148 ]
  br i1 %60, label %.outer.split.us.preheader, label %.outer..outer.split_crit_edge.preheader

.outer..outer.split_crit_edge.preheader:          ; preds = %.outer
  br label %.outer..outer.split_crit_edge

.outer.split.us.preheader:                        ; preds = %.outer
  br label %.outer.split.us

.outer.split.us:                                  ; preds = %.outer.split.us.preheader, %.backedge.us
  %67 = phi i32 [ %82, %.backedge.us ], [ %.ph39, %.outer.split.us.preheader ]
  switch i32 %67, label %68 [
    i32 -1, label %.us-lcssa.us.loopexit
    i32 91, label %.us-lcssa45.us.loopexit
    i32 93, label %.us-lcssa46.us.loopexit
    i32 10, label %.us-lcssa47.us.loopexit
    i32 13, label %.us-lcssa47.us.loopexit
  ]

; <label>:68                                      ; preds = %.outer.split.us
  %69 = load %struct.Zio*, %struct.Zio** %43, align 8, !tbaa !227
  %70 = getelementptr inbounds %struct.Zio, %struct.Zio* %69, i64 0, i32 0
  %71 = load i64, i64* %70, align 8, !tbaa !228
  %72 = add i64 %71, -1
  store i64 %72, i64* %70, align 8, !tbaa !228
  %73 = icmp eq i64 %71, 0
  br i1 %73, label %80, label %74

; <label>:74                                      ; preds = %68
  %75 = getelementptr inbounds %struct.Zio, %struct.Zio* %69, i64 0, i32 1
  %76 = load i8*, i8** %75, align 8, !tbaa !230
  %77 = getelementptr inbounds i8, i8* %76, i64 1
  store i8* %77, i8** %75, align 8, !tbaa !230
  %78 = load i8, i8* %76, align 1, !tbaa !76
  %79 = zext i8 %78 to i32
  br label %.backedge.us

; <label>:80                                      ; preds = %68
  %81 = call i32 @luaZ_fill(%struct.Zio* %69) #1
  br label %.backedge.us

.backedge.us:                                     ; preds = %74, %80
  %82 = phi i32 [ %79, %74 ], [ %81, %80 ]
  store i32 %82, i32* %1, align 4, !tbaa !231
  br label %.outer.split.us

.outer..outer.split_crit_edge:                    ; preds = %.outer..outer.split_crit_edge.preheader, %.backedge
  %83 = phi i32 [ %293, %.backedge ], [ %.ph39, %.outer..outer.split_crit_edge.preheader ]
  switch i32 %83, label %244 [
    i32 -1, label %.us-lcssa.us.loopexit66
    i32 91, label %.us-lcssa45.us.loopexit67
    i32 93, label %.us-lcssa46.us.loopexit68
    i32 10, label %.us-lcssa47.us.loopexit69
    i32 13, label %.us-lcssa47.us.loopexit69
  ]

.us-lcssa.us.loopexit:                            ; preds = %.outer.split.us
  br label %.us-lcssa.us

.us-lcssa.us.loopexit66:                          ; preds = %.outer..outer.split_crit_edge
  br label %.us-lcssa.us

.us-lcssa.us:                                     ; preds = %.us-lcssa.us.loopexit66, %.us-lcssa.us.loopexit
  %84 = icmp ne %union.SemInfo* %seminfo, null
  %85 = select i1 %84, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.39.316, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.40.317, i64 0, i64 0)
  %86 = getelementptr inbounds [80 x i8], [80 x i8]* %buff.i, i64 0, i64 0
  call void @llvm.lifetime.start(i64 80, i8* %86) #1
  %87 = load %union.TString*, %union.TString** %62, align 8, !tbaa !219
  %88 = getelementptr inbounds %union.TString, %union.TString* %87, i64 1
  %89 = bitcast %union.TString* %88 to i8*
  call void @luaO_chunkid(i8* %86, i8* %89, i64 80) #1
  %90 = load %struct.lua_State*, %struct.lua_State** %63, align 8, !tbaa !218
  %91 = load i32, i32* %64, align 4, !tbaa !220
  %92 = call i8* (%struct.lua_State*, i8*, ...) bitcast (i8* (%struct.lua_State.215*, i8*, ...)* @luaO_pushfstring to i8* (%struct.lua_State*, i8*, ...)*)(%struct.lua_State* %90, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.33.277, i64 0, i64 0), i8* %86, i32 %91, i8* %85) #1
  %93 = load %struct.lua_State*, %struct.lua_State** %63, align 8, !tbaa !218
  %94 = call i8* (%struct.lua_State*, i8*, ...) bitcast (i8* (%struct.lua_State.215*, i8*, ...)* @luaO_pushfstring to i8* (%struct.lua_State*, i8*, ...)*)(%struct.lua_State* %93, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.34.279, i64 0, i64 0), i8* %92, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.30.310, i64 0, i64 0)) #1
  %95 = load %struct.lua_State*, %struct.lua_State** %63, align 8, !tbaa !218
  call void @luaD_throw(%struct.lua_State* %95, i32 3) #1
  call void @llvm.lifetime.end(i64 80, i8* %86) #1
  br label %thread-pre-split

.us-lcssa45.us.loopexit:                          ; preds = %.outer.split.us
  br label %.us-lcssa45.us

.us-lcssa45.us.loopexit67:                        ; preds = %.outer..outer.split_crit_edge
  br label %.us-lcssa45.us

.us-lcssa45.us:                                   ; preds = %.us-lcssa45.us.loopexit67, %.us-lcssa45.us.loopexit
  %96 = call fastcc i32 @skip_sep(%struct.LexState* %ls)
  %97 = icmp eq i32 %96, %sep
  br i1 %97, label %98, label %thread-pre-split.loopexit

; <label>:98                                      ; preds = %.us-lcssa45.us
  %99 = load i32, i32* %1, align 4, !tbaa !231
  %100 = load %struct.Mbuffer*, %struct.Mbuffer** %3, align 8, !tbaa !221
  %101 = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %100, i64 0, i32 1
  %102 = load i64, i64* %101, align 8, !tbaa !222
  %103 = add i64 %102, 1
  %104 = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %100, i64 0, i32 2
  %105 = load i64, i64* %104, align 8, !tbaa !158
  %106 = icmp ugt i64 %103, %105
  br i1 %106, label %107, label %._crit_edge.i.3

._crit_edge.i.3:                                  ; preds = %98
  %.phi.trans.insert.i.1 = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %100, i64 0, i32 0
  %.pre2.i.2 = load i8*, i8** %.phi.trans.insert.i.1, align 8, !tbaa !157
  br label %save.exit8

; <label>:107                                     ; preds = %98
  %108 = icmp ugt i64 %105, 9223372036854775805
  br i1 %108, label %109, label %117

; <label>:109                                     ; preds = %107
  call void @llvm.lifetime.start(i64 80, i8* %65) #1
  %110 = load %union.TString*, %union.TString** %62, align 8, !tbaa !219
  %111 = getelementptr inbounds %union.TString, %union.TString* %110, i64 1
  %112 = bitcast %union.TString* %111 to i8*
  call void @luaO_chunkid(i8* %65, i8* %112, i64 80) #1
  %113 = load %struct.lua_State*, %struct.lua_State** %63, align 8, !tbaa !218
  %114 = load i32, i32* %64, align 4, !tbaa !220
  %115 = call i8* (%struct.lua_State*, i8*, ...) bitcast (i8* (%struct.lua_State.215*, i8*, ...)* @luaO_pushfstring to i8* (%struct.lua_State*, i8*, ...)*)(%struct.lua_State* %113, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.33.277, i64 0, i64 0), i8* %65, i32 %114, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.35.278, i64 0, i64 0)) #1
  %116 = load %struct.lua_State*, %struct.lua_State** %63, align 8, !tbaa !218
  call void @luaD_throw(%struct.lua_State* %116, i32 3) #1
  call void @llvm.lifetime.end(i64 80, i8* %65) #1
  %.pre.i.4 = load i64, i64* %104, align 8, !tbaa !158
  br label %117

; <label>:117                                     ; preds = %109, %107
  %118 = phi i64 [ %.pre.i.4, %109 ], [ %105, %107 ]
  %119 = shl i64 %118, 1
  %120 = icmp eq i64 %119, -2
  %121 = load %struct.lua_State*, %struct.lua_State** %63, align 8, !tbaa !218
  br i1 %120, label %126, label %122

; <label>:122                                     ; preds = %117
  %123 = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %100, i64 0, i32 0
  %124 = load i8*, i8** %123, align 8, !tbaa !157
  %125 = call i8* @luaM_realloc_(%struct.lua_State* %121, i8* %124, i64 %118, i64 %119) #1
  br label %128

; <label>:126                                     ; preds = %117
  %127 = call i8* @luaM_toobig(%struct.lua_State* %121) #1
  %.pre3.i.5 = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %100, i64 0, i32 0
  br label %128

; <label>:128                                     ; preds = %126, %122
  %.pre-phi.i.6 = phi i8** [ %.pre3.i.5, %126 ], [ %123, %122 ]
  %129 = phi i8* [ %127, %126 ], [ %125, %122 ]
  store i8* %129, i8** %.pre-phi.i.6, align 8, !tbaa !157
  store i64 %119, i64* %104, align 8, !tbaa !158
  %.pre1.i.7 = load i64, i64* %101, align 8, !tbaa !222
  br label %save.exit8

save.exit8:                                       ; preds = %._crit_edge.i.3, %128
  %130 = phi i8* [ %129, %128 ], [ %.pre2.i.2, %._crit_edge.i.3 ]
  %131 = phi i64 [ %.pre1.i.7, %128 ], [ %102, %._crit_edge.i.3 ]
  %132 = trunc i32 %99 to i8
  %133 = add i64 %131, 1
  store i64 %133, i64* %101, align 8, !tbaa !222
  %134 = getelementptr inbounds i8, i8* %130, i64 %131
  store i8 %132, i8* %134, align 1, !tbaa !76
  %135 = load %struct.Zio*, %struct.Zio** %43, align 8, !tbaa !227
  %136 = getelementptr inbounds %struct.Zio, %struct.Zio* %135, i64 0, i32 0
  %137 = load i64, i64* %136, align 8, !tbaa !228
  %138 = add i64 %137, -1
  store i64 %138, i64* %136, align 8, !tbaa !228
  %139 = icmp eq i64 %137, 0
  br i1 %139, label %146, label %140

; <label>:140                                     ; preds = %save.exit8
  %141 = getelementptr inbounds %struct.Zio, %struct.Zio* %135, i64 0, i32 1
  %142 = load i8*, i8** %141, align 8, !tbaa !230
  %143 = getelementptr inbounds i8, i8* %142, i64 1
  store i8* %143, i8** %141, align 8, !tbaa !230
  %144 = load i8, i8* %142, align 1, !tbaa !76
  %145 = zext i8 %144 to i32
  br label %148

; <label>:146                                     ; preds = %save.exit8
  %147 = call i32 @luaZ_fill(%struct.Zio* %135) #1
  br label %148

; <label>:148                                     ; preds = %146, %140
  %149 = phi i32 [ %145, %140 ], [ %147, %146 ]
  store i32 %149, i32* %1, align 4, !tbaa !231
  br i1 %66, label %150, label %.outer

; <label>:150                                     ; preds = %148
  call void @luaX_lexerror(%struct.LexState* %ls, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.41.318, i64 0, i64 0), i32 91)
  br label %thread-pre-split

.us-lcssa46.us.loopexit:                          ; preds = %.outer.split.us
  br label %.us-lcssa46.us

.us-lcssa46.us.loopexit68:                        ; preds = %.outer..outer.split_crit_edge
  br label %.us-lcssa46.us

.us-lcssa46.us:                                   ; preds = %.us-lcssa46.us.loopexit68, %.us-lcssa46.us.loopexit
  %151 = call fastcc i32 @skip_sep(%struct.LexState* %ls)
  %152 = icmp eq i32 %151, %sep
  br i1 %152, label %153, label %thread-pre-split

; <label>:153                                     ; preds = %.us-lcssa46.us
  %154 = load i32, i32* %1, align 4, !tbaa !231
  %155 = load %struct.Mbuffer*, %struct.Mbuffer** %3, align 8, !tbaa !221
  %156 = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %155, i64 0, i32 1
  %157 = load i64, i64* %156, align 8, !tbaa !222
  %158 = add i64 %157, 1
  %159 = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %155, i64 0, i32 2
  %160 = load i64, i64* %159, align 8, !tbaa !158
  %161 = icmp ugt i64 %158, %160
  br i1 %161, label %162, label %._crit_edge.i.11

._crit_edge.i.11:                                 ; preds = %153
  %.phi.trans.insert.i.9 = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %155, i64 0, i32 0
  %.pre2.i.10 = load i8*, i8** %.phi.trans.insert.i.9, align 8, !tbaa !157
  br label %save.exit16

; <label>:162                                     ; preds = %153
  %163 = icmp ugt i64 %160, 9223372036854775805
  br i1 %163, label %164, label %173

; <label>:164                                     ; preds = %162
  %165 = getelementptr inbounds [80 x i8], [80 x i8]* %buff.i.35, i64 0, i64 0
  call void @llvm.lifetime.start(i64 80, i8* %165) #1
  %166 = load %union.TString*, %union.TString** %62, align 8, !tbaa !219
  %167 = getelementptr inbounds %union.TString, %union.TString* %166, i64 1
  %168 = bitcast %union.TString* %167 to i8*
  call void @luaO_chunkid(i8* %165, i8* %168, i64 80) #1
  %169 = load %struct.lua_State*, %struct.lua_State** %63, align 8, !tbaa !218
  %170 = load i32, i32* %64, align 4, !tbaa !220
  %171 = call i8* (%struct.lua_State*, i8*, ...) bitcast (i8* (%struct.lua_State.215*, i8*, ...)* @luaO_pushfstring to i8* (%struct.lua_State*, i8*, ...)*)(%struct.lua_State* %169, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.33.277, i64 0, i64 0), i8* %165, i32 %170, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.35.278, i64 0, i64 0)) #1
  %172 = load %struct.lua_State*, %struct.lua_State** %63, align 8, !tbaa !218
  call void @luaD_throw(%struct.lua_State* %172, i32 3) #1
  call void @llvm.lifetime.end(i64 80, i8* %165) #1
  %.pre.i.12 = load i64, i64* %159, align 8, !tbaa !158
  br label %173

; <label>:173                                     ; preds = %164, %162
  %174 = phi i64 [ %.pre.i.12, %164 ], [ %160, %162 ]
  %175 = shl i64 %174, 1
  %176 = icmp eq i64 %175, -2
  %177 = load %struct.lua_State*, %struct.lua_State** %63, align 8, !tbaa !218
  br i1 %176, label %182, label %178

; <label>:178                                     ; preds = %173
  %179 = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %155, i64 0, i32 0
  %180 = load i8*, i8** %179, align 8, !tbaa !157
  %181 = call i8* @luaM_realloc_(%struct.lua_State* %177, i8* %180, i64 %174, i64 %175) #1
  br label %184

; <label>:182                                     ; preds = %173
  %183 = call i8* @luaM_toobig(%struct.lua_State* %177) #1
  %.pre3.i.13 = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %155, i64 0, i32 0
  br label %184

; <label>:184                                     ; preds = %182, %178
  %.pre-phi.i.14 = phi i8** [ %.pre3.i.13, %182 ], [ %179, %178 ]
  %185 = phi i8* [ %183, %182 ], [ %181, %178 ]
  store i8* %185, i8** %.pre-phi.i.14, align 8, !tbaa !157
  store i64 %175, i64* %159, align 8, !tbaa !158
  %.pre1.i.15 = load i64, i64* %156, align 8, !tbaa !222
  br label %save.exit16

save.exit16:                                      ; preds = %._crit_edge.i.11, %184
  %186 = phi i8* [ %185, %184 ], [ %.pre2.i.10, %._crit_edge.i.11 ]
  %187 = phi i64 [ %.pre1.i.15, %184 ], [ %157, %._crit_edge.i.11 ]
  %188 = trunc i32 %154 to i8
  %189 = add i64 %187, 1
  store i64 %189, i64* %156, align 8, !tbaa !222
  %190 = getelementptr inbounds i8, i8* %186, i64 %187
  store i8 %188, i8* %190, align 1, !tbaa !76
  %191 = load %struct.Zio*, %struct.Zio** %43, align 8, !tbaa !227
  %192 = getelementptr inbounds %struct.Zio, %struct.Zio* %191, i64 0, i32 0
  %193 = load i64, i64* %192, align 8, !tbaa !228
  %194 = add i64 %193, -1
  store i64 %194, i64* %192, align 8, !tbaa !228
  %195 = icmp eq i64 %193, 0
  br i1 %195, label %202, label %196

; <label>:196                                     ; preds = %save.exit16
  %197 = getelementptr inbounds %struct.Zio, %struct.Zio* %191, i64 0, i32 1
  %198 = load i8*, i8** %197, align 8, !tbaa !230
  %199 = getelementptr inbounds i8, i8* %198, i64 1
  store i8* %199, i8** %197, align 8, !tbaa !230
  %200 = load i8, i8* %198, align 1, !tbaa !76
  %201 = zext i8 %200 to i32
  br label %204

; <label>:202                                     ; preds = %save.exit16
  %203 = call i32 @luaZ_fill(%struct.Zio* %191) #1
  br label %204

; <label>:204                                     ; preds = %202, %196
  %205 = phi i32 [ %201, %196 ], [ %203, %202 ]
  store i32 %205, i32* %1, align 4, !tbaa !231
  br i1 %60, label %319, label %294

.us-lcssa47.us.loopexit:                          ; preds = %.outer.split.us, %.outer.split.us
  br label %.us-lcssa47.us

.us-lcssa47.us.loopexit69:                        ; preds = %.outer..outer.split_crit_edge, %.outer..outer.split_crit_edge
  br label %.us-lcssa47.us

.us-lcssa47.us:                                   ; preds = %.us-lcssa47.us.loopexit69, %.us-lcssa47.us.loopexit
  %206 = load %struct.Mbuffer*, %struct.Mbuffer** %3, align 8, !tbaa !221
  %207 = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %206, i64 0, i32 1
  %208 = load i64, i64* %207, align 8, !tbaa !222
  %209 = add i64 %208, 1
  %210 = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %206, i64 0, i32 2
  %211 = load i64, i64* %210, align 8, !tbaa !158
  %212 = icmp ugt i64 %209, %211
  br i1 %212, label %213, label %._crit_edge.i.19

._crit_edge.i.19:                                 ; preds = %.us-lcssa47.us
  %.phi.trans.insert.i.17 = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %206, i64 0, i32 0
  %.pre2.i.18 = load i8*, i8** %.phi.trans.insert.i.17, align 8, !tbaa !157
  br label %save.exit24

; <label>:213                                     ; preds = %.us-lcssa47.us
  %214 = icmp ugt i64 %211, 9223372036854775805
  br i1 %214, label %215, label %224

; <label>:215                                     ; preds = %213
  %216 = getelementptr inbounds [80 x i8], [80 x i8]* %buff.i.36, i64 0, i64 0
  call void @llvm.lifetime.start(i64 80, i8* %216) #1
  %217 = load %union.TString*, %union.TString** %62, align 8, !tbaa !219
  %218 = getelementptr inbounds %union.TString, %union.TString* %217, i64 1
  %219 = bitcast %union.TString* %218 to i8*
  call void @luaO_chunkid(i8* %216, i8* %219, i64 80) #1
  %220 = load %struct.lua_State*, %struct.lua_State** %63, align 8, !tbaa !218
  %221 = load i32, i32* %64, align 4, !tbaa !220
  %222 = call i8* (%struct.lua_State*, i8*, ...) bitcast (i8* (%struct.lua_State.215*, i8*, ...)* @luaO_pushfstring to i8* (%struct.lua_State*, i8*, ...)*)(%struct.lua_State* %220, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.33.277, i64 0, i64 0), i8* %216, i32 %221, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.35.278, i64 0, i64 0)) #1
  %223 = load %struct.lua_State*, %struct.lua_State** %63, align 8, !tbaa !218
  call void @luaD_throw(%struct.lua_State* %223, i32 3) #1
  call void @llvm.lifetime.end(i64 80, i8* %216) #1
  %.pre.i.20 = load i64, i64* %210, align 8, !tbaa !158
  br label %224

; <label>:224                                     ; preds = %215, %213
  %225 = phi i64 [ %.pre.i.20, %215 ], [ %211, %213 ]
  %226 = shl i64 %225, 1
  %227 = icmp eq i64 %226, -2
  %228 = load %struct.lua_State*, %struct.lua_State** %63, align 8, !tbaa !218
  br i1 %227, label %233, label %229

; <label>:229                                     ; preds = %224
  %230 = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %206, i64 0, i32 0
  %231 = load i8*, i8** %230, align 8, !tbaa !157
  %232 = call i8* @luaM_realloc_(%struct.lua_State* %228, i8* %231, i64 %225, i64 %226) #1
  br label %235

; <label>:233                                     ; preds = %224
  %234 = call i8* @luaM_toobig(%struct.lua_State* %228) #1
  %.pre3.i.21 = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %206, i64 0, i32 0
  br label %235

; <label>:235                                     ; preds = %233, %229
  %.pre-phi.i.22 = phi i8** [ %.pre3.i.21, %233 ], [ %230, %229 ]
  %236 = phi i8* [ %234, %233 ], [ %232, %229 ]
  store i8* %236, i8** %.pre-phi.i.22, align 8, !tbaa !157
  store i64 %226, i64* %210, align 8, !tbaa !158
  %.pre1.i.23 = load i64, i64* %207, align 8, !tbaa !222
  br label %save.exit24

save.exit24:                                      ; preds = %._crit_edge.i.19, %235
  %237 = phi i8* [ %236, %235 ], [ %.pre2.i.18, %._crit_edge.i.19 ]
  %238 = phi i64 [ %.pre1.i.23, %235 ], [ %208, %._crit_edge.i.19 ]
  %239 = add i64 %238, 1
  store i64 %239, i64* %207, align 8, !tbaa !222
  %240 = getelementptr inbounds i8, i8* %237, i64 %238
  store i8 10, i8* %240, align 1, !tbaa !76
  call fastcc void @inclinenumber(%struct.LexState* %ls)
  br i1 %60, label %241, label %thread-pre-split

; <label>:241                                     ; preds = %save.exit24
  %242 = load %struct.Mbuffer*, %struct.Mbuffer** %3, align 8, !tbaa !221
  %243 = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %242, i64 0, i32 1
  store i64 0, i64* %243, align 8, !tbaa !222
  br label %thread-pre-split

; <label>:244                                     ; preds = %.outer..outer.split_crit_edge
  %245 = load %struct.Mbuffer*, %struct.Mbuffer** %3, align 8, !tbaa !221
  %246 = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %245, i64 0, i32 1
  %247 = load i64, i64* %246, align 8, !tbaa !222
  %248 = add i64 %247, 1
  %249 = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %245, i64 0, i32 2
  %250 = load i64, i64* %249, align 8, !tbaa !158
  %251 = icmp ugt i64 %248, %250
  br i1 %251, label %252, label %._crit_edge.i.27

._crit_edge.i.27:                                 ; preds = %244
  %.phi.trans.insert.i.25 = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %245, i64 0, i32 0
  %.pre2.i.26 = load i8*, i8** %.phi.trans.insert.i.25, align 8, !tbaa !157
  br label %save.exit32

; <label>:252                                     ; preds = %244
  %253 = icmp ugt i64 %250, 9223372036854775805
  br i1 %253, label %254, label %262

; <label>:254                                     ; preds = %252
  call void @llvm.lifetime.start(i64 80, i8* %61) #1
  %255 = load %union.TString*, %union.TString** %62, align 8, !tbaa !219
  %256 = getelementptr inbounds %union.TString, %union.TString* %255, i64 1
  %257 = bitcast %union.TString* %256 to i8*
  call void @luaO_chunkid(i8* %61, i8* %257, i64 80) #1
  %258 = load %struct.lua_State*, %struct.lua_State** %63, align 8, !tbaa !218
  %259 = load i32, i32* %64, align 4, !tbaa !220
  %260 = call i8* (%struct.lua_State*, i8*, ...) bitcast (i8* (%struct.lua_State.215*, i8*, ...)* @luaO_pushfstring to i8* (%struct.lua_State*, i8*, ...)*)(%struct.lua_State* %258, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.33.277, i64 0, i64 0), i8* %61, i32 %259, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.35.278, i64 0, i64 0)) #1
  %261 = load %struct.lua_State*, %struct.lua_State** %63, align 8, !tbaa !218
  call void @luaD_throw(%struct.lua_State* %261, i32 3) #1
  call void @llvm.lifetime.end(i64 80, i8* %61) #1
  %.pre.i.28 = load i64, i64* %249, align 8, !tbaa !158
  br label %262

; <label>:262                                     ; preds = %254, %252
  %263 = phi i64 [ %.pre.i.28, %254 ], [ %250, %252 ]
  %264 = shl i64 %263, 1
  %265 = icmp eq i64 %264, -2
  %266 = load %struct.lua_State*, %struct.lua_State** %63, align 8, !tbaa !218
  br i1 %265, label %271, label %267

; <label>:267                                     ; preds = %262
  %268 = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %245, i64 0, i32 0
  %269 = load i8*, i8** %268, align 8, !tbaa !157
  %270 = call i8* @luaM_realloc_(%struct.lua_State* %266, i8* %269, i64 %263, i64 %264) #1
  br label %273

; <label>:271                                     ; preds = %262
  %272 = call i8* @luaM_toobig(%struct.lua_State* %266) #1
  %.pre3.i.29 = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %245, i64 0, i32 0
  br label %273

; <label>:273                                     ; preds = %271, %267
  %.pre-phi.i.30 = phi i8** [ %.pre3.i.29, %271 ], [ %268, %267 ]
  %274 = phi i8* [ %272, %271 ], [ %270, %267 ]
  store i8* %274, i8** %.pre-phi.i.30, align 8, !tbaa !157
  store i64 %264, i64* %249, align 8, !tbaa !158
  %.pre1.i.31 = load i64, i64* %246, align 8, !tbaa !222
  br label %save.exit32

save.exit32:                                      ; preds = %._crit_edge.i.27, %273
  %275 = phi i8* [ %274, %273 ], [ %.pre2.i.26, %._crit_edge.i.27 ]
  %276 = phi i64 [ %.pre1.i.31, %273 ], [ %247, %._crit_edge.i.27 ]
  %277 = trunc i32 %83 to i8
  %278 = add i64 %276, 1
  store i64 %278, i64* %246, align 8, !tbaa !222
  %279 = getelementptr inbounds i8, i8* %275, i64 %276
  store i8 %277, i8* %279, align 1, !tbaa !76
  %280 = load %struct.Zio*, %struct.Zio** %43, align 8, !tbaa !227
  %281 = getelementptr inbounds %struct.Zio, %struct.Zio* %280, i64 0, i32 0
  %282 = load i64, i64* %281, align 8, !tbaa !228
  %283 = add i64 %282, -1
  store i64 %283, i64* %281, align 8, !tbaa !228
  %284 = icmp eq i64 %282, 0
  br i1 %284, label %291, label %285

; <label>:285                                     ; preds = %save.exit32
  %286 = getelementptr inbounds %struct.Zio, %struct.Zio* %280, i64 0, i32 1
  %287 = load i8*, i8** %286, align 8, !tbaa !230
  %288 = getelementptr inbounds i8, i8* %287, i64 1
  store i8* %288, i8** %286, align 8, !tbaa !230
  %289 = load i8, i8* %287, align 1, !tbaa !76
  %290 = zext i8 %289 to i32
  br label %.backedge

; <label>:291                                     ; preds = %save.exit32
  %292 = call i32 @luaZ_fill(%struct.Zio* %280) #1
  br label %.backedge

.backedge:                                        ; preds = %285, %291
  %293 = phi i32 [ %290, %285 ], [ %292, %291 ]
  store i32 %293, i32* %1, align 4, !tbaa !231
  br label %.outer..outer.split_crit_edge

; <label>:294                                     ; preds = %204
  %295 = load %struct.Mbuffer*, %struct.Mbuffer** %3, align 8, !tbaa !221
  %296 = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %295, i64 0, i32 0
  %297 = load i8*, i8** %296, align 8, !tbaa !157
  %298 = add nsw i32 %sep, 2
  %299 = sext i32 %298 to i64
  %300 = getelementptr inbounds i8, i8* %297, i64 %299
  %301 = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %295, i64 0, i32 1
  %302 = load i64, i64* %301, align 8, !tbaa !222
  %303 = shl nsw i32 %298, 1
  %304 = sext i32 %303 to i64
  %305 = sub i64 %302, %304
  %306 = load %struct.lua_State*, %struct.lua_State** %63, align 8, !tbaa !218
  %307 = call %union.TString* @luaS_newlstr(%struct.lua_State* %306, i8* %300, i64 %305) #1
  %308 = getelementptr inbounds %struct.LexState, %struct.LexState* %ls, i64 0, i32 5
  %309 = load %struct.FuncState*, %struct.FuncState** %308, align 8, !tbaa !224
  %310 = getelementptr inbounds %struct.FuncState, %struct.FuncState* %309, i64 0, i32 1
  %311 = load %struct.Table*, %struct.Table** %310, align 8, !tbaa !109
  %312 = call %struct.lua_TValue* @luaH_setstr(%struct.lua_State* %306, %struct.Table* %311, %union.TString* %307) #1
  %313 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %312, i64 0, i32 1
  %314 = load i32, i32* %313, align 4, !tbaa !10
  %315 = icmp eq i32 %314, 0
  br i1 %315, label %316, label %luaX_newstring.exit

; <label>:316                                     ; preds = %294
  %317 = bitcast %struct.lua_TValue* %312 to i32*
  store i32 1, i32* %317, align 4, !tbaa !38
  store i32 1, i32* %313, align 4, !tbaa !10
  br label %luaX_newstring.exit

luaX_newstring.exit:                              ; preds = %294, %316
  %318 = bitcast %union.SemInfo* %seminfo to %union.TString**
  store %union.TString* %307, %union.TString** %318, align 8, !tbaa !25
  br label %319

; <label>:319                                     ; preds = %204, %luaX_newstring.exit
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @read_numeral(%struct.LexState* %ls, %union.SemInfo* %seminfo) #0 {
  %buff.i.42 = alloca [80 x i8], align 16
  %buff.i.41 = alloca [80 x i8], align 16
  %buff.i.40 = alloca [80 x i8], align 16
  %buff.i.39 = alloca [80 x i8], align 16
  %buff.i = alloca [80 x i8], align 16
  %1 = getelementptr inbounds %struct.LexState, %struct.LexState* %ls, i64 0, i32 0
  %2 = getelementptr inbounds %struct.LexState, %struct.LexState* %ls, i64 0, i32 8
  %3 = getelementptr inbounds [80 x i8], [80 x i8]* %buff.i, i64 0, i64 0
  %4 = getelementptr inbounds %struct.LexState, %struct.LexState* %ls, i64 0, i32 9
  %5 = getelementptr inbounds %struct.LexState, %struct.LexState* %ls, i64 0, i32 6
  %6 = getelementptr inbounds %struct.LexState, %struct.LexState* %ls, i64 0, i32 1
  %7 = getelementptr inbounds %struct.LexState, %struct.LexState* %ls, i64 0, i32 7
  %8 = tail call i16** @__ctype_b_loc() #12
  %.pre = load i32, i32* %1, align 4, !tbaa !231
  br label %.critedge

.critedge:                                        ; preds = %58, %0
  %9 = phi i32 [ %59, %58 ], [ %.pre, %0 ]
  %10 = load %struct.Mbuffer*, %struct.Mbuffer** %2, align 8, !tbaa !221
  %11 = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %10, i64 0, i32 1
  %12 = load i64, i64* %11, align 8, !tbaa !222
  %13 = add i64 %12, 1
  %14 = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %10, i64 0, i32 2
  %15 = load i64, i64* %14, align 8, !tbaa !158
  %16 = icmp ugt i64 %13, %15
  br i1 %16, label %17, label %._crit_edge.i

._crit_edge.i:                                    ; preds = %.critedge
  %.phi.trans.insert.i = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %10, i64 0, i32 0
  %.pre2.i = load i8*, i8** %.phi.trans.insert.i, align 8, !tbaa !157
  br label %save.exit

; <label>:17                                      ; preds = %.critedge
  %18 = icmp ugt i64 %15, 9223372036854775805
  br i1 %18, label %19, label %27

; <label>:19                                      ; preds = %17
  call void @llvm.lifetime.start(i64 80, i8* %3) #1
  %20 = load %union.TString*, %union.TString** %4, align 8, !tbaa !219
  %21 = getelementptr inbounds %union.TString, %union.TString* %20, i64 1
  %22 = bitcast %union.TString* %21 to i8*
  call void @luaO_chunkid(i8* %3, i8* %22, i64 80) #1
  %23 = load %struct.lua_State*, %struct.lua_State** %5, align 8, !tbaa !218
  %24 = load i32, i32* %6, align 4, !tbaa !220
  %25 = call i8* (%struct.lua_State*, i8*, ...) bitcast (i8* (%struct.lua_State.215*, i8*, ...)* @luaO_pushfstring to i8* (%struct.lua_State*, i8*, ...)*)(%struct.lua_State* %23, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.33.277, i64 0, i64 0), i8* %3, i32 %24, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.35.278, i64 0, i64 0)) #1
  %26 = load %struct.lua_State*, %struct.lua_State** %5, align 8, !tbaa !218
  call void @luaD_throw(%struct.lua_State* %26, i32 3) #1
  call void @llvm.lifetime.end(i64 80, i8* %3) #1
  %.pre.i = load i64, i64* %14, align 8, !tbaa !158
  br label %27

; <label>:27                                      ; preds = %19, %17
  %28 = phi i64 [ %.pre.i, %19 ], [ %15, %17 ]
  %29 = shl i64 %28, 1
  %30 = icmp eq i64 %29, -2
  %31 = load %struct.lua_State*, %struct.lua_State** %5, align 8, !tbaa !218
  br i1 %30, label %36, label %32

; <label>:32                                      ; preds = %27
  %33 = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %10, i64 0, i32 0
  %34 = load i8*, i8** %33, align 8, !tbaa !157
  %35 = call i8* @luaM_realloc_(%struct.lua_State* %31, i8* %34, i64 %28, i64 %29) #1
  br label %38

; <label>:36                                      ; preds = %27
  %37 = call i8* @luaM_toobig(%struct.lua_State* %31) #1
  %.pre3.i = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %10, i64 0, i32 0
  br label %38

; <label>:38                                      ; preds = %36, %32
  %.pre-phi.i = phi i8** [ %.pre3.i, %36 ], [ %33, %32 ]
  %39 = phi i8* [ %37, %36 ], [ %35, %32 ]
  store i8* %39, i8** %.pre-phi.i, align 8, !tbaa !157
  store i64 %29, i64* %14, align 8, !tbaa !158
  %.pre1.i = load i64, i64* %11, align 8, !tbaa !222
  br label %save.exit

save.exit:                                        ; preds = %._crit_edge.i, %38
  %40 = phi i8* [ %39, %38 ], [ %.pre2.i, %._crit_edge.i ]
  %41 = phi i64 [ %.pre1.i, %38 ], [ %12, %._crit_edge.i ]
  %42 = trunc i32 %9 to i8
  %43 = add i64 %41, 1
  store i64 %43, i64* %11, align 8, !tbaa !222
  %44 = getelementptr inbounds i8, i8* %40, i64 %41
  store i8 %42, i8* %44, align 1, !tbaa !76
  %45 = load %struct.Zio*, %struct.Zio** %7, align 8, !tbaa !227
  %46 = getelementptr inbounds %struct.Zio, %struct.Zio* %45, i64 0, i32 0
  %47 = load i64, i64* %46, align 8, !tbaa !228
  %48 = add i64 %47, -1
  store i64 %48, i64* %46, align 8, !tbaa !228
  %49 = icmp eq i64 %47, 0
  br i1 %49, label %56, label %50

; <label>:50                                      ; preds = %save.exit
  %51 = getelementptr inbounds %struct.Zio, %struct.Zio* %45, i64 0, i32 1
  %52 = load i8*, i8** %51, align 8, !tbaa !230
  %53 = getelementptr inbounds i8, i8* %52, i64 1
  store i8* %53, i8** %51, align 8, !tbaa !230
  %54 = load i8, i8* %52, align 1, !tbaa !76
  %55 = zext i8 %54 to i32
  br label %58

; <label>:56                                      ; preds = %save.exit
  %57 = call i32 @luaZ_fill(%struct.Zio* %45) #1
  br label %58

; <label>:58                                      ; preds = %56, %50
  %59 = phi i32 [ %55, %50 ], [ %57, %56 ]
  store i32 %59, i32* %1, align 4, !tbaa !231
  %60 = sext i32 %59 to i64
  %61 = load i16*, i16** %8, align 8, !tbaa !25
  %62 = getelementptr inbounds i16, i16* %61, i64 %60
  %63 = load i16, i16* %62, align 2, !tbaa !87
  %64 = and i16 %63, 2048
  %65 = icmp ne i16 %64, 0
  %66 = icmp eq i32 %59, 46
  %or.cond = or i1 %66, %65
  br i1 %or.cond, label %.critedge, label %67

; <label>:67                                      ; preds = %58
  %.lcssa102 = phi i32 [ %59, %58 ]
  %memchr = call i8* @memchr(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.44.314, i64 0, i64 0), i32 %.lcssa102, i64 3)
  %68 = icmp eq i8* %memchr, null
  br i1 %68, label %check_next.exit3.preheader, label %69

; <label>:69                                      ; preds = %67
  %70 = load %struct.Mbuffer*, %struct.Mbuffer** %2, align 8, !tbaa !221
  %71 = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %70, i64 0, i32 1
  %72 = load i64, i64* %71, align 8, !tbaa !222
  %73 = add i64 %72, 1
  %74 = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %70, i64 0, i32 2
  %75 = load i64, i64* %74, align 8, !tbaa !158
  %76 = icmp ugt i64 %73, %75
  br i1 %76, label %77, label %._crit_edge.i.25

._crit_edge.i.25:                                 ; preds = %69
  %.phi.trans.insert.i.23 = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %70, i64 0, i32 0
  %.pre2.i.24 = load i8*, i8** %.phi.trans.insert.i.23, align 8, !tbaa !157
  br label %save.exit30

; <label>:77                                      ; preds = %69
  %78 = icmp ugt i64 %75, 9223372036854775805
  br i1 %78, label %79, label %88

; <label>:79                                      ; preds = %77
  %80 = getelementptr inbounds [80 x i8], [80 x i8]* %buff.i.41, i64 0, i64 0
  call void @llvm.lifetime.start(i64 80, i8* %80) #1
  %81 = load %union.TString*, %union.TString** %4, align 8, !tbaa !219
  %82 = getelementptr inbounds %union.TString, %union.TString* %81, i64 1
  %83 = bitcast %union.TString* %82 to i8*
  call void @luaO_chunkid(i8* %80, i8* %83, i64 80) #1
  %84 = load %struct.lua_State*, %struct.lua_State** %5, align 8, !tbaa !218
  %85 = load i32, i32* %6, align 4, !tbaa !220
  %86 = call i8* (%struct.lua_State*, i8*, ...) bitcast (i8* (%struct.lua_State.215*, i8*, ...)* @luaO_pushfstring to i8* (%struct.lua_State*, i8*, ...)*)(%struct.lua_State* %84, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.33.277, i64 0, i64 0), i8* %80, i32 %85, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.35.278, i64 0, i64 0)) #1
  %87 = load %struct.lua_State*, %struct.lua_State** %5, align 8, !tbaa !218
  call void @luaD_throw(%struct.lua_State* %87, i32 3) #1
  call void @llvm.lifetime.end(i64 80, i8* %80) #1
  %.pre.i.26 = load i64, i64* %74, align 8, !tbaa !158
  br label %88

; <label>:88                                      ; preds = %79, %77
  %89 = phi i64 [ %.pre.i.26, %79 ], [ %75, %77 ]
  %90 = shl i64 %89, 1
  %91 = icmp eq i64 %90, -2
  %92 = load %struct.lua_State*, %struct.lua_State** %5, align 8, !tbaa !218
  br i1 %91, label %97, label %93

; <label>:93                                      ; preds = %88
  %94 = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %70, i64 0, i32 0
  %95 = load i8*, i8** %94, align 8, !tbaa !157
  %96 = call i8* @luaM_realloc_(%struct.lua_State* %92, i8* %95, i64 %89, i64 %90) #1
  br label %99

; <label>:97                                      ; preds = %88
  %98 = call i8* @luaM_toobig(%struct.lua_State* %92) #1
  %.pre3.i.27 = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %70, i64 0, i32 0
  br label %99

; <label>:99                                      ; preds = %97, %93
  %.pre-phi.i.28 = phi i8** [ %.pre3.i.27, %97 ], [ %94, %93 ]
  %100 = phi i8* [ %98, %97 ], [ %96, %93 ]
  store i8* %100, i8** %.pre-phi.i.28, align 8, !tbaa !157
  store i64 %90, i64* %74, align 8, !tbaa !158
  %.pre1.i.29 = load i64, i64* %71, align 8, !tbaa !222
  br label %save.exit30

save.exit30:                                      ; preds = %._crit_edge.i.25, %99
  %101 = phi i8* [ %100, %99 ], [ %.pre2.i.24, %._crit_edge.i.25 ]
  %102 = phi i64 [ %.pre1.i.29, %99 ], [ %72, %._crit_edge.i.25 ]
  %103 = trunc i32 %.lcssa102 to i8
  %104 = add i64 %102, 1
  store i64 %104, i64* %71, align 8, !tbaa !222
  %105 = getelementptr inbounds i8, i8* %101, i64 %102
  store i8 %103, i8* %105, align 1, !tbaa !76
  %106 = load %struct.Zio*, %struct.Zio** %7, align 8, !tbaa !227
  %107 = getelementptr inbounds %struct.Zio, %struct.Zio* %106, i64 0, i32 0
  %108 = load i64, i64* %107, align 8, !tbaa !228
  %109 = add i64 %108, -1
  store i64 %109, i64* %107, align 8, !tbaa !228
  %110 = icmp eq i64 %108, 0
  br i1 %110, label %117, label %111

; <label>:111                                     ; preds = %save.exit30
  %112 = getelementptr inbounds %struct.Zio, %struct.Zio* %106, i64 0, i32 1
  %113 = load i8*, i8** %112, align 8, !tbaa !230
  %114 = getelementptr inbounds i8, i8* %113, i64 1
  store i8* %114, i8** %112, align 8, !tbaa !230
  %115 = load i8, i8* %113, align 1, !tbaa !76
  %116 = zext i8 %115 to i32
  br label %119

; <label>:117                                     ; preds = %save.exit30
  %118 = call i32 @luaZ_fill(%struct.Zio* %106) #1
  br label %119

; <label>:119                                     ; preds = %117, %111
  %120 = phi i32 [ %116, %111 ], [ %118, %117 ]
  store i32 %120, i32* %1, align 4, !tbaa !231
  %121 = zext i32 %120 to i64
  %memchr.bounds = icmp ult i32 %120, 64
  %122 = shl i64 1, %121
  %123 = and i64 %122, 43980465111041
  %memchr.bits = icmp ne i64 %123, 0
  %.demorgan = and i1 %memchr.bounds, %memchr.bits
  br i1 %.demorgan, label %124, label %check_next.exit3.preheader

; <label>:124                                     ; preds = %119
  %125 = load %struct.Mbuffer*, %struct.Mbuffer** %2, align 8, !tbaa !221
  %126 = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %125, i64 0, i32 1
  %127 = load i64, i64* %126, align 8, !tbaa !222
  %128 = add i64 %127, 1
  %129 = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %125, i64 0, i32 2
  %130 = load i64, i64* %129, align 8, !tbaa !158
  %131 = icmp ugt i64 %128, %130
  br i1 %131, label %132, label %._crit_edge.i.33

._crit_edge.i.33:                                 ; preds = %124
  %.phi.trans.insert.i.31 = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %125, i64 0, i32 0
  %.pre2.i.32 = load i8*, i8** %.phi.trans.insert.i.31, align 8, !tbaa !157
  br label %save.exit38

; <label>:132                                     ; preds = %124
  %133 = icmp ugt i64 %130, 9223372036854775805
  br i1 %133, label %134, label %143

; <label>:134                                     ; preds = %132
  %135 = getelementptr inbounds [80 x i8], [80 x i8]* %buff.i.42, i64 0, i64 0
  call void @llvm.lifetime.start(i64 80, i8* %135) #1
  %136 = load %union.TString*, %union.TString** %4, align 8, !tbaa !219
  %137 = getelementptr inbounds %union.TString, %union.TString* %136, i64 1
  %138 = bitcast %union.TString* %137 to i8*
  call void @luaO_chunkid(i8* %135, i8* %138, i64 80) #1
  %139 = load %struct.lua_State*, %struct.lua_State** %5, align 8, !tbaa !218
  %140 = load i32, i32* %6, align 4, !tbaa !220
  %141 = call i8* (%struct.lua_State*, i8*, ...) bitcast (i8* (%struct.lua_State.215*, i8*, ...)* @luaO_pushfstring to i8* (%struct.lua_State*, i8*, ...)*)(%struct.lua_State* %139, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.33.277, i64 0, i64 0), i8* %135, i32 %140, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.35.278, i64 0, i64 0)) #1
  %142 = load %struct.lua_State*, %struct.lua_State** %5, align 8, !tbaa !218
  call void @luaD_throw(%struct.lua_State* %142, i32 3) #1
  call void @llvm.lifetime.end(i64 80, i8* %135) #1
  %.pre.i.34 = load i64, i64* %129, align 8, !tbaa !158
  br label %143

; <label>:143                                     ; preds = %134, %132
  %144 = phi i64 [ %.pre.i.34, %134 ], [ %130, %132 ]
  %145 = shl i64 %144, 1
  %146 = icmp eq i64 %145, -2
  %147 = load %struct.lua_State*, %struct.lua_State** %5, align 8, !tbaa !218
  br i1 %146, label %152, label %148

; <label>:148                                     ; preds = %143
  %149 = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %125, i64 0, i32 0
  %150 = load i8*, i8** %149, align 8, !tbaa !157
  %151 = call i8* @luaM_realloc_(%struct.lua_State* %147, i8* %150, i64 %144, i64 %145) #1
  br label %154

; <label>:152                                     ; preds = %143
  %153 = call i8* @luaM_toobig(%struct.lua_State* %147) #1
  %.pre3.i.35 = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %125, i64 0, i32 0
  br label %154

; <label>:154                                     ; preds = %152, %148
  %.pre-phi.i.36 = phi i8** [ %.pre3.i.35, %152 ], [ %149, %148 ]
  %155 = phi i8* [ %153, %152 ], [ %151, %148 ]
  store i8* %155, i8** %.pre-phi.i.36, align 8, !tbaa !157
  store i64 %145, i64* %129, align 8, !tbaa !158
  %.pre1.i.37 = load i64, i64* %126, align 8, !tbaa !222
  br label %save.exit38

save.exit38:                                      ; preds = %._crit_edge.i.33, %154
  %156 = phi i8* [ %155, %154 ], [ %.pre2.i.32, %._crit_edge.i.33 ]
  %157 = phi i64 [ %.pre1.i.37, %154 ], [ %127, %._crit_edge.i.33 ]
  %158 = trunc i32 %120 to i8
  %159 = add i64 %157, 1
  store i64 %159, i64* %126, align 8, !tbaa !222
  %160 = getelementptr inbounds i8, i8* %156, i64 %157
  store i8 %158, i8* %160, align 1, !tbaa !76
  %161 = load %struct.Zio*, %struct.Zio** %7, align 8, !tbaa !227
  %162 = getelementptr inbounds %struct.Zio, %struct.Zio* %161, i64 0, i32 0
  %163 = load i64, i64* %162, align 8, !tbaa !228
  %164 = add i64 %163, -1
  store i64 %164, i64* %162, align 8, !tbaa !228
  %165 = icmp eq i64 %163, 0
  br i1 %165, label %172, label %166

; <label>:166                                     ; preds = %save.exit38
  %167 = getelementptr inbounds %struct.Zio, %struct.Zio* %161, i64 0, i32 1
  %168 = load i8*, i8** %167, align 8, !tbaa !230
  %169 = getelementptr inbounds i8, i8* %168, i64 1
  store i8* %169, i8** %167, align 8, !tbaa !230
  %170 = load i8, i8* %168, align 1, !tbaa !76
  %171 = zext i8 %170 to i32
  br label %174

; <label>:172                                     ; preds = %save.exit38
  %173 = call i32 @luaZ_fill(%struct.Zio* %161) #1
  br label %174

; <label>:174                                     ; preds = %172, %166
  %175 = phi i32 [ %171, %166 ], [ %173, %172 ]
  store i32 %175, i32* %1, align 4, !tbaa !231
  br label %check_next.exit3.preheader

check_next.exit3.preheader:                       ; preds = %174, %67, %119
  %176 = phi i32 [ %175, %174 ], [ %.lcssa102, %67 ], [ %120, %119 ]
  %177 = sext i32 %176 to i64
  %178 = load i16*, i16** %8, align 8, !tbaa !25
  %179 = getelementptr inbounds i16, i16* %178, i64 %177
  %180 = load i16, i16* %179, align 2, !tbaa !87
  %181 = and i16 %180, 8
  %182 = icmp eq i32 %176, 95
  %not..55 = icmp ne i16 %181, 0
  %..56 = or i1 %182, %not..55
  %183 = load %struct.Mbuffer*, %struct.Mbuffer** %2, align 8, !tbaa !221
  %184 = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %183, i64 0, i32 1
  %185 = load i64, i64* %184, align 8, !tbaa !222
  %186 = add i64 %185, 1
  %187 = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %183, i64 0, i32 2
  %188 = load i64, i64* %187, align 8, !tbaa !158
  %189 = icmp ugt i64 %186, %188
  br i1 %..56, label %.lr.ph, label %check_next.exit3._crit_edge

.lr.ph:                                           ; preds = %check_next.exit3.preheader
  %190 = getelementptr inbounds [80 x i8], [80 x i8]* %buff.i.39, i64 0, i64 0
  br label %191

; <label>:191                                     ; preds = %.lr.ph, %check_next.exit3
  %192 = phi i1 [ %189, %.lr.ph ], [ %253, %check_next.exit3 ]
  %193 = phi i64 [ %188, %.lr.ph ], [ %252, %check_next.exit3 ]
  %194 = phi i64* [ %187, %.lr.ph ], [ %251, %check_next.exit3 ]
  %195 = phi i64 [ %185, %.lr.ph ], [ %249, %check_next.exit3 ]
  %196 = phi i64* [ %184, %.lr.ph ], [ %248, %check_next.exit3 ]
  %197 = phi %struct.Mbuffer* [ %183, %.lr.ph ], [ %247, %check_next.exit3 ]
  %198 = phi i32 [ %176, %.lr.ph ], [ %240, %check_next.exit3 ]
  br i1 %192, label %199, label %._crit_edge.i.6

._crit_edge.i.6:                                  ; preds = %191
  %.phi.trans.insert.i.4 = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %197, i64 0, i32 0
  %.pre2.i.5 = load i8*, i8** %.phi.trans.insert.i.4, align 8, !tbaa !157
  br label %save.exit11

; <label>:199                                     ; preds = %191
  %200 = icmp ugt i64 %193, 9223372036854775805
  br i1 %200, label %201, label %209

; <label>:201                                     ; preds = %199
  call void @llvm.lifetime.start(i64 80, i8* %190) #1
  %202 = load %union.TString*, %union.TString** %4, align 8, !tbaa !219
  %203 = getelementptr inbounds %union.TString, %union.TString* %202, i64 1
  %204 = bitcast %union.TString* %203 to i8*
  call void @luaO_chunkid(i8* %190, i8* %204, i64 80) #1
  %205 = load %struct.lua_State*, %struct.lua_State** %5, align 8, !tbaa !218
  %206 = load i32, i32* %6, align 4, !tbaa !220
  %207 = call i8* (%struct.lua_State*, i8*, ...) bitcast (i8* (%struct.lua_State.215*, i8*, ...)* @luaO_pushfstring to i8* (%struct.lua_State*, i8*, ...)*)(%struct.lua_State* %205, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.33.277, i64 0, i64 0), i8* %190, i32 %206, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.35.278, i64 0, i64 0)) #1
  %208 = load %struct.lua_State*, %struct.lua_State** %5, align 8, !tbaa !218
  call void @luaD_throw(%struct.lua_State* %208, i32 3) #1
  call void @llvm.lifetime.end(i64 80, i8* %190) #1
  %.pre.i.7 = load i64, i64* %194, align 8, !tbaa !158
  br label %209

; <label>:209                                     ; preds = %201, %199
  %210 = phi i64 [ %.pre.i.7, %201 ], [ %193, %199 ]
  %211 = shl i64 %210, 1
  %212 = icmp eq i64 %211, -2
  %213 = load %struct.lua_State*, %struct.lua_State** %5, align 8, !tbaa !218
  br i1 %212, label %218, label %214

; <label>:214                                     ; preds = %209
  %215 = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %197, i64 0, i32 0
  %216 = load i8*, i8** %215, align 8, !tbaa !157
  %217 = call i8* @luaM_realloc_(%struct.lua_State* %213, i8* %216, i64 %210, i64 %211) #1
  br label %220

; <label>:218                                     ; preds = %209
  %219 = call i8* @luaM_toobig(%struct.lua_State* %213) #1
  %.pre3.i.8 = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %197, i64 0, i32 0
  br label %220

; <label>:220                                     ; preds = %218, %214
  %.pre-phi.i.9 = phi i8** [ %.pre3.i.8, %218 ], [ %215, %214 ]
  %221 = phi i8* [ %219, %218 ], [ %217, %214 ]
  store i8* %221, i8** %.pre-phi.i.9, align 8, !tbaa !157
  store i64 %211, i64* %194, align 8, !tbaa !158
  %.pre1.i.10 = load i64, i64* %196, align 8, !tbaa !222
  br label %save.exit11

save.exit11:                                      ; preds = %._crit_edge.i.6, %220
  %222 = phi i8* [ %221, %220 ], [ %.pre2.i.5, %._crit_edge.i.6 ]
  %223 = phi i64 [ %.pre1.i.10, %220 ], [ %195, %._crit_edge.i.6 ]
  %224 = trunc i32 %198 to i8
  %225 = add i64 %223, 1
  store i64 %225, i64* %196, align 8, !tbaa !222
  %226 = getelementptr inbounds i8, i8* %222, i64 %223
  store i8 %224, i8* %226, align 1, !tbaa !76
  %227 = load %struct.Zio*, %struct.Zio** %7, align 8, !tbaa !227
  %228 = getelementptr inbounds %struct.Zio, %struct.Zio* %227, i64 0, i32 0
  %229 = load i64, i64* %228, align 8, !tbaa !228
  %230 = add i64 %229, -1
  store i64 %230, i64* %228, align 8, !tbaa !228
  %231 = icmp eq i64 %229, 0
  br i1 %231, label %238, label %232

; <label>:232                                     ; preds = %save.exit11
  %233 = getelementptr inbounds %struct.Zio, %struct.Zio* %227, i64 0, i32 1
  %234 = load i8*, i8** %233, align 8, !tbaa !230
  %235 = getelementptr inbounds i8, i8* %234, i64 1
  store i8* %235, i8** %233, align 8, !tbaa !230
  %236 = load i8, i8* %234, align 1, !tbaa !76
  %237 = zext i8 %236 to i32
  br label %check_next.exit3

; <label>:238                                     ; preds = %save.exit11
  %239 = call i32 @luaZ_fill(%struct.Zio* %227) #1
  br label %check_next.exit3

check_next.exit3:                                 ; preds = %238, %232
  %240 = phi i32 [ %237, %232 ], [ %239, %238 ]
  store i32 %240, i32* %1, align 4, !tbaa !231
  %241 = sext i32 %240 to i64
  %242 = load i16*, i16** %8, align 8, !tbaa !25
  %243 = getelementptr inbounds i16, i16* %242, i64 %241
  %244 = load i16, i16* %243, align 2, !tbaa !87
  %245 = and i16 %244, 8
  %246 = icmp eq i32 %240, 95
  %not. = icmp ne i16 %245, 0
  %. = or i1 %246, %not.
  %247 = load %struct.Mbuffer*, %struct.Mbuffer** %2, align 8, !tbaa !221
  %248 = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %247, i64 0, i32 1
  %249 = load i64, i64* %248, align 8, !tbaa !222
  %250 = add i64 %249, 1
  %251 = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %247, i64 0, i32 2
  %252 = load i64, i64* %251, align 8, !tbaa !158
  %253 = icmp ugt i64 %250, %252
  br i1 %., label %191, label %check_next.exit3._crit_edge.loopexit

check_next.exit3._crit_edge.loopexit:             ; preds = %check_next.exit3
  %.lcssa101 = phi i1 [ %253, %check_next.exit3 ]
  %.lcssa100 = phi i64 [ %252, %check_next.exit3 ]
  %.lcssa99 = phi i64* [ %251, %check_next.exit3 ]
  %.lcssa98 = phi i64 [ %249, %check_next.exit3 ]
  %.lcssa97 = phi i64* [ %248, %check_next.exit3 ]
  %.lcssa96 = phi %struct.Mbuffer* [ %247, %check_next.exit3 ]
  br label %check_next.exit3._crit_edge

check_next.exit3._crit_edge:                      ; preds = %check_next.exit3._crit_edge.loopexit, %check_next.exit3.preheader
  %.lcssa49 = phi i1 [ %189, %check_next.exit3.preheader ], [ %.lcssa101, %check_next.exit3._crit_edge.loopexit ]
  %.lcssa48 = phi i64 [ %188, %check_next.exit3.preheader ], [ %.lcssa100, %check_next.exit3._crit_edge.loopexit ]
  %.lcssa47 = phi i64* [ %187, %check_next.exit3.preheader ], [ %.lcssa99, %check_next.exit3._crit_edge.loopexit ]
  %.lcssa46 = phi i64 [ %185, %check_next.exit3.preheader ], [ %.lcssa98, %check_next.exit3._crit_edge.loopexit ]
  %.lcssa45 = phi i64* [ %184, %check_next.exit3.preheader ], [ %.lcssa97, %check_next.exit3._crit_edge.loopexit ]
  %.lcssa = phi %struct.Mbuffer* [ %183, %check_next.exit3.preheader ], [ %.lcssa96, %check_next.exit3._crit_edge.loopexit ]
  br i1 %.lcssa49, label %254, label %._crit_edge.i.14

._crit_edge.i.14:                                 ; preds = %check_next.exit3._crit_edge
  %.phi.trans.insert.i.12 = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %.lcssa, i64 0, i32 0
  %.pre2.i.13 = load i8*, i8** %.phi.trans.insert.i.12, align 8, !tbaa !157
  br label %save.exit19

; <label>:254                                     ; preds = %check_next.exit3._crit_edge
  %255 = icmp ugt i64 %.lcssa48, 9223372036854775805
  br i1 %255, label %256, label %265

; <label>:256                                     ; preds = %254
  %257 = getelementptr inbounds [80 x i8], [80 x i8]* %buff.i.40, i64 0, i64 0
  call void @llvm.lifetime.start(i64 80, i8* %257) #1
  %258 = load %union.TString*, %union.TString** %4, align 8, !tbaa !219
  %259 = getelementptr inbounds %union.TString, %union.TString* %258, i64 1
  %260 = bitcast %union.TString* %259 to i8*
  call void @luaO_chunkid(i8* %257, i8* %260, i64 80) #1
  %261 = load %struct.lua_State*, %struct.lua_State** %5, align 8, !tbaa !218
  %262 = load i32, i32* %6, align 4, !tbaa !220
  %263 = call i8* (%struct.lua_State*, i8*, ...) bitcast (i8* (%struct.lua_State.215*, i8*, ...)* @luaO_pushfstring to i8* (%struct.lua_State*, i8*, ...)*)(%struct.lua_State* %261, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.33.277, i64 0, i64 0), i8* %257, i32 %262, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.35.278, i64 0, i64 0)) #1
  %264 = load %struct.lua_State*, %struct.lua_State** %5, align 8, !tbaa !218
  call void @luaD_throw(%struct.lua_State* %264, i32 3) #1
  call void @llvm.lifetime.end(i64 80, i8* %257) #1
  %.pre.i.15 = load i64, i64* %.lcssa47, align 8, !tbaa !158
  br label %265

; <label>:265                                     ; preds = %256, %254
  %266 = phi i64 [ %.pre.i.15, %256 ], [ %.lcssa48, %254 ]
  %267 = shl i64 %266, 1
  %268 = icmp eq i64 %267, -2
  %269 = load %struct.lua_State*, %struct.lua_State** %5, align 8, !tbaa !218
  br i1 %268, label %274, label %270

; <label>:270                                     ; preds = %265
  %271 = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %.lcssa, i64 0, i32 0
  %272 = load i8*, i8** %271, align 8, !tbaa !157
  %273 = call i8* @luaM_realloc_(%struct.lua_State* %269, i8* %272, i64 %266, i64 %267) #1
  br label %276

; <label>:274                                     ; preds = %265
  %275 = call i8* @luaM_toobig(%struct.lua_State* %269) #1
  %.pre3.i.16 = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %.lcssa, i64 0, i32 0
  br label %276

; <label>:276                                     ; preds = %274, %270
  %.pre-phi.i.17 = phi i8** [ %.pre3.i.16, %274 ], [ %271, %270 ]
  %277 = phi i8* [ %275, %274 ], [ %273, %270 ]
  store i8* %277, i8** %.pre-phi.i.17, align 8, !tbaa !157
  store i64 %267, i64* %.lcssa47, align 8, !tbaa !158
  %.pre1.i.18 = load i64, i64* %.lcssa45, align 8, !tbaa !222
  br label %save.exit19

save.exit19:                                      ; preds = %._crit_edge.i.14, %276
  %278 = phi i8* [ %277, %276 ], [ %.pre2.i.13, %._crit_edge.i.14 ]
  %279 = phi i64 [ %.pre1.i.18, %276 ], [ %.lcssa46, %._crit_edge.i.14 ]
  %280 = add i64 %279, 1
  store i64 %280, i64* %.lcssa45, align 8, !tbaa !222
  %281 = getelementptr inbounds i8, i8* %278, i64 %279
  store i8 0, i8* %281, align 1, !tbaa !76
  %282 = getelementptr inbounds %struct.LexState, %struct.LexState* %ls, i64 0, i32 10
  %283 = load i8, i8* %282, align 1, !tbaa !225
  %ls.idx.val = load %struct.Mbuffer*, %struct.Mbuffer** %2, align 8, !tbaa !221
  %ls.idx.val.idx = getelementptr %struct.Mbuffer, %struct.Mbuffer* %ls.idx.val, i64 0, i32 0
  %ls.idx.val.idx.val = load i8*, i8** %ls.idx.val.idx, align 8, !tbaa !157
  %ls.idx.val.idx1 = getelementptr %struct.Mbuffer, %struct.Mbuffer* %ls.idx.val, i64 0, i32 1
  %ls.idx.val.idx1.val = load i64, i64* %ls.idx.val.idx1, align 8, !tbaa !222
  %284 = icmp eq i64 %ls.idx.val.idx1.val, 0
  br i1 %284, label %buffreplace.exit, label %.lr.ph.i.preheader

.lr.ph.i.preheader:                               ; preds = %save.exit19
  %xtraiter94 = and i64 %ls.idx.val.idx1.val, 1
  %lcmp.mod95 = icmp eq i64 %xtraiter94, 0
  br i1 %lcmp.mod95, label %.lr.ph.i.preheader.split, label %.lr.ph.i.prol

.lr.ph.i.prol:                                    ; preds = %.lr.ph.i.preheader
  %285 = add i64 %ls.idx.val.idx1.val, -1
  %286 = getelementptr inbounds i8, i8* %ls.idx.val.idx.val, i64 %285
  %287 = load i8, i8* %286, align 1, !tbaa !76
  %288 = icmp eq i8 %287, 46
  br i1 %288, label %289, label %.backedge.i.prol

; <label>:289                                     ; preds = %.lr.ph.i.prol
  store i8 %283, i8* %286, align 1, !tbaa !76
  br label %.backedge.i.prol

.backedge.i.prol:                                 ; preds = %289, %.lr.ph.i.prol
  br label %.lr.ph.i.preheader.split

.lr.ph.i.preheader.split:                         ; preds = %.lr.ph.i.preheader, %.backedge.i.prol
  %.in.i.unr = phi i64 [ %ls.idx.val.idx1.val, %.lr.ph.i.preheader ], [ %285, %.backedge.i.prol ]
  %290 = icmp eq i64 %ls.idx.val.idx1.val, 1
  br i1 %290, label %buffreplace.exit.loopexit, label %.lr.ph.i.preheader.split.split

.lr.ph.i.preheader.split.split:                   ; preds = %.lr.ph.i.preheader.split
  br label %.lr.ph.i

.lr.ph.i:                                         ; preds = %.backedge.i.1, %.lr.ph.i.preheader.split.split
  %.in.i = phi i64 [ %.in.i.unr, %.lr.ph.i.preheader.split.split ], [ %296, %.backedge.i.1 ]
  %291 = add i64 %.in.i, -1
  %292 = getelementptr inbounds i8, i8* %ls.idx.val.idx.val, i64 %291
  %293 = load i8, i8* %292, align 1, !tbaa !76
  %294 = icmp eq i8 %293, 46
  br i1 %294, label %295, label %.backedge.i

; <label>:295                                     ; preds = %.lr.ph.i
  store i8 %283, i8* %292, align 1, !tbaa !76
  br label %.backedge.i

.backedge.i:                                      ; preds = %295, %.lr.ph.i
  %296 = add i64 %.in.i, -2
  %297 = getelementptr inbounds i8, i8* %ls.idx.val.idx.val, i64 %296
  %298 = load i8, i8* %297, align 1, !tbaa !76
  %299 = icmp eq i8 %298, 46
  br i1 %299, label %355, label %.backedge.i.1

buffreplace.exit.loopexit.unr-lcssa:              ; preds = %.backedge.i.1
  br label %buffreplace.exit.loopexit

buffreplace.exit.loopexit:                        ; preds = %.lr.ph.i.preheader.split, %buffreplace.exit.loopexit.unr-lcssa
  %.pre69 = load %struct.Mbuffer*, %struct.Mbuffer** %2, align 8, !tbaa !221
  %.phi.trans.insert = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %.pre69, i64 0, i32 0
  %.pre70 = load i8*, i8** %.phi.trans.insert, align 8, !tbaa !157
  br label %buffreplace.exit

buffreplace.exit:                                 ; preds = %buffreplace.exit.loopexit, %save.exit19
  %300 = phi i8* [ %.pre70, %buffreplace.exit.loopexit ], [ %ls.idx.val.idx.val, %save.exit19 ]
  %301 = getelementptr inbounds %union.SemInfo, %union.SemInfo* %seminfo, i64 0, i32 0
  %302 = call i32 @luaO_str2d(i8* %300, double* %301) #1
  %303 = icmp eq i32 %302, 0
  br i1 %303, label %304, label %trydecpoint.exit

; <label>:304                                     ; preds = %buffreplace.exit
  %305 = call %struct.lconv* @localeconv() #1
  %306 = load i8, i8* %282, align 1, !tbaa !225
  %307 = icmp eq %struct.lconv* %305, null
  br i1 %307, label %312, label %308

; <label>:308                                     ; preds = %304
  %309 = getelementptr inbounds %struct.lconv, %struct.lconv* %305, i64 0, i32 0
  %310 = load i8*, i8** %309, align 8, !tbaa !233
  %311 = load i8, i8* %310, align 1, !tbaa !76
  br label %312

; <label>:312                                     ; preds = %308, %304
  %313 = phi i8 [ %311, %308 ], [ 46, %304 ]
  store i8 %313, i8* %282, align 1, !tbaa !225
  %ls.idx1.val.i = load %struct.Mbuffer*, %struct.Mbuffer** %2, align 8, !tbaa !221
  %ls.idx1.val.idx.i = getelementptr %struct.Mbuffer, %struct.Mbuffer* %ls.idx1.val.i, i64 0, i32 0
  %ls.idx1.val.idx.val.i = load i8*, i8** %ls.idx1.val.idx.i, align 8, !tbaa !157
  %ls.idx1.val.idx2.i = getelementptr %struct.Mbuffer, %struct.Mbuffer* %ls.idx1.val.i, i64 0, i32 1
  %ls.idx1.val.idx2.val.i = load i64, i64* %ls.idx1.val.idx2.i, align 8, !tbaa !222
  %314 = icmp eq i64 %ls.idx1.val.idx2.val.i, 0
  br i1 %314, label %buffreplace.exit.i, label %.lr.ph.i.i.preheader

.lr.ph.i.i.preheader:                             ; preds = %312
  %xtraiter92 = and i64 %ls.idx1.val.idx2.val.i, 1
  %lcmp.mod93 = icmp eq i64 %xtraiter92, 0
  br i1 %lcmp.mod93, label %.lr.ph.i.i.preheader.split, label %.lr.ph.i.i.prol

.lr.ph.i.i.prol:                                  ; preds = %.lr.ph.i.i.preheader
  %315 = add i64 %ls.idx1.val.idx2.val.i, -1
  %316 = getelementptr inbounds i8, i8* %ls.idx1.val.idx.val.i, i64 %315
  %317 = load i8, i8* %316, align 1, !tbaa !76
  %318 = icmp eq i8 %317, %306
  br i1 %318, label %319, label %.backedge.i.i.prol

; <label>:319                                     ; preds = %.lr.ph.i.i.prol
  store i8 %313, i8* %316, align 1, !tbaa !76
  br label %.backedge.i.i.prol

.backedge.i.i.prol:                               ; preds = %319, %.lr.ph.i.i.prol
  br label %.lr.ph.i.i.preheader.split

.lr.ph.i.i.preheader.split:                       ; preds = %.lr.ph.i.i.preheader, %.backedge.i.i.prol
  %.in.i.i.unr = phi i64 [ %ls.idx1.val.idx2.val.i, %.lr.ph.i.i.preheader ], [ %315, %.backedge.i.i.prol ]
  %320 = icmp eq i64 %ls.idx1.val.idx2.val.i, 1
  br i1 %320, label %buffreplace.exit.loopexit.i, label %.lr.ph.i.i.preheader.split.split

.lr.ph.i.i.preheader.split.split:                 ; preds = %.lr.ph.i.i.preheader.split
  br label %.lr.ph.i.i

.lr.ph.i.i:                                       ; preds = %.backedge.i.i.1, %.lr.ph.i.i.preheader.split.split
  %.in.i.i = phi i64 [ %.in.i.i.unr, %.lr.ph.i.i.preheader.split.split ], [ %326, %.backedge.i.i.1 ]
  %321 = add i64 %.in.i.i, -1
  %322 = getelementptr inbounds i8, i8* %ls.idx1.val.idx.val.i, i64 %321
  %323 = load i8, i8* %322, align 1, !tbaa !76
  %324 = icmp eq i8 %323, %306
  br i1 %324, label %325, label %.backedge.i.i

; <label>:325                                     ; preds = %.lr.ph.i.i
  store i8 %313, i8* %322, align 1, !tbaa !76
  br label %.backedge.i.i

.backedge.i.i:                                    ; preds = %325, %.lr.ph.i.i
  %326 = add i64 %.in.i.i, -2
  %327 = getelementptr inbounds i8, i8* %ls.idx1.val.idx.val.i, i64 %326
  %328 = load i8, i8* %327, align 1, !tbaa !76
  %329 = icmp eq i8 %328, %306
  br i1 %329, label %353, label %.backedge.i.i.1

buffreplace.exit.loopexit.i.unr-lcssa:            ; preds = %.backedge.i.i.1
  br label %buffreplace.exit.loopexit.i

buffreplace.exit.loopexit.i:                      ; preds = %.lr.ph.i.i.preheader.split, %buffreplace.exit.loopexit.i.unr-lcssa
  %.pre.i.21 = load %struct.Mbuffer*, %struct.Mbuffer** %2, align 8, !tbaa !221
  %.phi.trans.insert.i.22 = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %.pre.i.21, i64 0, i32 0
  %.pre8.i = load i8*, i8** %.phi.trans.insert.i.22, align 8, !tbaa !157
  br label %buffreplace.exit.i

buffreplace.exit.i:                               ; preds = %buffreplace.exit.loopexit.i, %312
  %330 = phi i8* [ %.pre8.i, %buffreplace.exit.loopexit.i ], [ %ls.idx1.val.idx.val.i, %312 ]
  %331 = call i32 @luaO_str2d(i8* %330, double* %301) #1
  %332 = icmp eq i32 %331, 0
  br i1 %332, label %333, label %trydecpoint.exit

; <label>:333                                     ; preds = %buffreplace.exit.i
  %334 = load i8, i8* %282, align 1, !tbaa !225
  %ls.idx.val.i = load %struct.Mbuffer*, %struct.Mbuffer** %2, align 8, !tbaa !221
  %ls.idx.val.idx.i = getelementptr %struct.Mbuffer, %struct.Mbuffer* %ls.idx.val.i, i64 0, i32 0
  %ls.idx.val.idx.val.i = load i8*, i8** %ls.idx.val.idx.i, align 8, !tbaa !157
  %ls.idx.val.idx3.i = getelementptr %struct.Mbuffer, %struct.Mbuffer* %ls.idx.val.i, i64 0, i32 1
  %ls.idx.val.idx3.val.i = load i64, i64* %ls.idx.val.idx3.i, align 8, !tbaa !222
  %335 = icmp eq i64 %ls.idx.val.idx3.val.i, 0
  br i1 %335, label %buffreplace.exit7.i, label %.lr.ph.i.5.i.preheader

.lr.ph.i.5.i.preheader:                           ; preds = %333
  %xtraiter = and i64 %ls.idx.val.idx3.val.i, 1
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod, label %.lr.ph.i.5.i.preheader.split, label %.lr.ph.i.5.i.prol

.lr.ph.i.5.i.prol:                                ; preds = %.lr.ph.i.5.i.preheader
  %336 = add i64 %ls.idx.val.idx3.val.i, -1
  %337 = getelementptr inbounds i8, i8* %ls.idx.val.idx.val.i, i64 %336
  %338 = load i8, i8* %337, align 1, !tbaa !76
  %339 = icmp eq i8 %338, %334
  br i1 %339, label %340, label %.backedge.i.6.i.prol

; <label>:340                                     ; preds = %.lr.ph.i.5.i.prol
  store i8 46, i8* %337, align 1, !tbaa !76
  br label %.backedge.i.6.i.prol

.backedge.i.6.i.prol:                             ; preds = %340, %.lr.ph.i.5.i.prol
  br label %.lr.ph.i.5.i.preheader.split

.lr.ph.i.5.i.preheader.split:                     ; preds = %.lr.ph.i.5.i.preheader, %.backedge.i.6.i.prol
  %.in.i.4.i.unr = phi i64 [ %ls.idx.val.idx3.val.i, %.lr.ph.i.5.i.preheader ], [ %336, %.backedge.i.6.i.prol ]
  %341 = icmp eq i64 %ls.idx.val.idx3.val.i, 1
  br i1 %341, label %buffreplace.exit7.i.loopexit, label %.lr.ph.i.5.i.preheader.split.split

.lr.ph.i.5.i.preheader.split.split:               ; preds = %.lr.ph.i.5.i.preheader.split
  br label %.lr.ph.i.5.i

.lr.ph.i.5.i:                                     ; preds = %.backedge.i.6.i.1, %.lr.ph.i.5.i.preheader.split.split
  %.in.i.4.i = phi i64 [ %.in.i.4.i.unr, %.lr.ph.i.5.i.preheader.split.split ], [ %347, %.backedge.i.6.i.1 ]
  %342 = add i64 %.in.i.4.i, -1
  %343 = getelementptr inbounds i8, i8* %ls.idx.val.idx.val.i, i64 %342
  %344 = load i8, i8* %343, align 1, !tbaa !76
  %345 = icmp eq i8 %344, %334
  br i1 %345, label %346, label %.backedge.i.6.i

; <label>:346                                     ; preds = %.lr.ph.i.5.i
  store i8 46, i8* %343, align 1, !tbaa !76
  br label %.backedge.i.6.i

.backedge.i.6.i:                                  ; preds = %346, %.lr.ph.i.5.i
  %347 = add i64 %.in.i.4.i, -2
  %348 = getelementptr inbounds i8, i8* %ls.idx.val.idx.val.i, i64 %347
  %349 = load i8, i8* %348, align 1, !tbaa !76
  %350 = icmp eq i8 %349, %334
  br i1 %350, label %351, label %.backedge.i.6.i.1

buffreplace.exit7.i.loopexit.unr-lcssa:           ; preds = %.backedge.i.6.i.1
  br label %buffreplace.exit7.i.loopexit

buffreplace.exit7.i.loopexit:                     ; preds = %.lr.ph.i.5.i.preheader.split, %buffreplace.exit7.i.loopexit.unr-lcssa
  br label %buffreplace.exit7.i

buffreplace.exit7.i:                              ; preds = %buffreplace.exit7.i.loopexit, %333
  call void @luaX_lexerror(%struct.LexState* %ls, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.46.315, i64 0, i64 0), i32 284) #1
  br label %trydecpoint.exit

trydecpoint.exit:                                 ; preds = %buffreplace.exit7.i, %buffreplace.exit.i, %buffreplace.exit
  ret void

; <label>:351                                     ; preds = %.backedge.i.6.i
  store i8 46, i8* %348, align 1, !tbaa !76
  br label %.backedge.i.6.i.1

.backedge.i.6.i.1:                                ; preds = %351, %.backedge.i.6.i
  %352 = icmp eq i64 %347, 0
  br i1 %352, label %buffreplace.exit7.i.loopexit.unr-lcssa, label %.lr.ph.i.5.i

; <label>:353                                     ; preds = %.backedge.i.i
  store i8 %313, i8* %327, align 1, !tbaa !76
  br label %.backedge.i.i.1

.backedge.i.i.1:                                  ; preds = %353, %.backedge.i.i
  %354 = icmp eq i64 %326, 0
  br i1 %354, label %buffreplace.exit.loopexit.i.unr-lcssa, label %.lr.ph.i.i

; <label>:355                                     ; preds = %.backedge.i
  store i8 %283, i8* %297, align 1, !tbaa !76
  br label %.backedge.i.1

.backedge.i.1:                                    ; preds = %355, %.backedge.i
  %356 = icmp eq i64 %296, 0
  br i1 %356, label %buffreplace.exit.loopexit.unr-lcssa, label %.lr.ph.i
}

; Function Attrs: nounwind uwtable
define i32 @luaopen_math(%struct.lua_State* %L) #0 {
  tail call void @luaL_register(%struct.lua_State* %L, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.322, i64 0, i64 0), %struct.luaL_Reg* getelementptr inbounds ([29 x %struct.luaL_Reg], [29 x %struct.luaL_Reg]* @mathlib, i64 0, i64 0)) #1
  tail call void @lua_pushnumber(%struct.lua_State* %L, double 0x400921FB54442D18) #1
  tail call void @lua_setfield(%struct.lua_State* %L, i32 -2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1.323, i64 0, i64 0)) #1
  tail call void @lua_pushnumber(%struct.lua_State* %L, double 0x7FF0000000000000) #1
  tail call void @lua_setfield(%struct.lua_State* %L, i32 -2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2.324, i64 0, i64 0)) #1
  tail call void @lua_getfield(%struct.lua_State* %L, i32 -1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.325, i64 0, i64 0)) #1
  tail call void @lua_setfield(%struct.lua_State* %L, i32 -2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4.326, i64 0, i64 0)) #1
  ret i32 1
}

; Function Attrs: nounwind readnone
declare double @fabs(double) #7

; Function Attrs: nounwind
declare double @acos(double) #5

; Function Attrs: nounwind
declare double @asin(double) #5

; Function Attrs: nounwind
declare double @atan2(double, double) #5

; Function Attrs: nounwind
declare double @atan(double) #5

; Function Attrs: nounwind readnone
declare double @ceil(double) #7

; Function Attrs: nounwind
declare double @cosh(double) #5

; Function Attrs: nounwind
declare double @cos(double) #5

; Function Attrs: nounwind
declare double @exp(double) #5

; Function Attrs: nounwind
declare double @fmod(double, double) #5

; Function Attrs: nounwind
declare double @frexp(double, i32* nocapture) #5

; Function Attrs: nounwind
declare double @ldexp(double, i32) #5

; Function Attrs: nounwind
declare double @log10(double) #5

; Function Attrs: nounwind
declare double @log(double) #5

; Function Attrs: nounwind
declare double @modf(double, double* nocapture) #5

; Function Attrs: nounwind
declare i32 @rand() #5

; Function Attrs: nounwind
declare void @srand(i32) #5

; Function Attrs: nounwind
declare double @sinh(double) #5

; Function Attrs: nounwind
declare double @sin(double) #5

; Function Attrs: nounwind
declare double @sqrt(double) #5

; Function Attrs: nounwind
declare double @tanh(double) #5

; Function Attrs: nounwind
declare double @tan(double) #5

; Function Attrs: nounwind uwtable
define internal i32 @math_abs(%struct.lua_State* %L) #0 {
  %1 = tail call double @luaL_checknumber(%struct.lua_State* %L, i32 1) #1
  %2 = tail call double @fabs(double %1) #12
  tail call void @lua_pushnumber(%struct.lua_State* %L, double %2) #1
  ret i32 1
}

; Function Attrs: nounwind uwtable
define internal i32 @math_acos(%struct.lua_State* %L) #0 {
  %1 = tail call double @luaL_checknumber(%struct.lua_State* %L, i32 1) #1
  %2 = tail call double @acos(double %1) #1
  tail call void @lua_pushnumber(%struct.lua_State* %L, double %2) #1
  ret i32 1
}

; Function Attrs: nounwind uwtable
define internal i32 @math_asin(%struct.lua_State* %L) #0 {
  %1 = tail call double @luaL_checknumber(%struct.lua_State* %L, i32 1) #1
  %2 = tail call double @asin(double %1) #1
  tail call void @lua_pushnumber(%struct.lua_State* %L, double %2) #1
  ret i32 1
}

; Function Attrs: nounwind uwtable
define internal i32 @math_atan2(%struct.lua_State* %L) #0 {
  %1 = tail call double @luaL_checknumber(%struct.lua_State* %L, i32 1) #1
  %2 = tail call double @luaL_checknumber(%struct.lua_State* %L, i32 2) #1
  %3 = tail call double @atan2(double %1, double %2) #1
  tail call void @lua_pushnumber(%struct.lua_State* %L, double %3) #1
  ret i32 1
}

; Function Attrs: nounwind uwtable
define internal i32 @math_atan(%struct.lua_State* %L) #0 {
  %1 = tail call double @luaL_checknumber(%struct.lua_State* %L, i32 1) #1
  %2 = tail call double @atan(double %1) #1
  tail call void @lua_pushnumber(%struct.lua_State* %L, double %2) #1
  ret i32 1
}

; Function Attrs: nounwind uwtable
define internal i32 @math_ceil(%struct.lua_State* %L) #0 {
  %1 = tail call double @luaL_checknumber(%struct.lua_State* %L, i32 1) #1
  %2 = tail call double @ceil(double %1) #12
  tail call void @lua_pushnumber(%struct.lua_State* %L, double %2) #1
  ret i32 1
}

; Function Attrs: nounwind uwtable
define internal i32 @math_cosh(%struct.lua_State* %L) #0 {
  %1 = tail call double @luaL_checknumber(%struct.lua_State* %L, i32 1) #1
  %2 = tail call double @cosh(double %1) #1
  tail call void @lua_pushnumber(%struct.lua_State* %L, double %2) #1
  ret i32 1
}

; Function Attrs: nounwind uwtable
define internal i32 @math_cos(%struct.lua_State* %L) #0 {
  %1 = tail call double @luaL_checknumber(%struct.lua_State* %L, i32 1) #1
  %2 = tail call double @cos(double %1) #1
  tail call void @lua_pushnumber(%struct.lua_State* %L, double %2) #1
  ret i32 1
}

; Function Attrs: nounwind uwtable
define internal i32 @math_deg(%struct.lua_State* %L) #0 {
  %1 = tail call double @luaL_checknumber(%struct.lua_State* %L, i32 1) #1
  %2 = fdiv double %1, 0x3F91DF46A2529D39
  tail call void @lua_pushnumber(%struct.lua_State* %L, double %2) #1
  ret i32 1
}

; Function Attrs: nounwind uwtable
define internal i32 @math_exp(%struct.lua_State* %L) #0 {
  %1 = tail call double @luaL_checknumber(%struct.lua_State* %L, i32 1) #1
  %2 = tail call double @exp(double %1) #1
  tail call void @lua_pushnumber(%struct.lua_State* %L, double %2) #1
  ret i32 1
}

; Function Attrs: nounwind uwtable
define internal i32 @math_floor(%struct.lua_State* %L) #0 {
  %1 = tail call double @luaL_checknumber(%struct.lua_State* %L, i32 1) #1
  %2 = tail call double @floor(double %1) #12
  tail call void @lua_pushnumber(%struct.lua_State* %L, double %2) #1
  ret i32 1
}

; Function Attrs: nounwind uwtable
define internal i32 @math_fmod(%struct.lua_State* %L) #0 {
  %1 = tail call double @luaL_checknumber(%struct.lua_State* %L, i32 1) #1
  %2 = tail call double @luaL_checknumber(%struct.lua_State* %L, i32 2) #1
  %3 = tail call double @fmod(double %1, double %2) #1
  tail call void @lua_pushnumber(%struct.lua_State* %L, double %3) #1
  ret i32 1
}

; Function Attrs: nounwind uwtable
define internal i32 @math_frexp(%struct.lua_State* %L) #0 {
  %e = alloca i32, align 4
  %1 = bitcast i32* %e to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #1
  %2 = tail call double @luaL_checknumber(%struct.lua_State* %L, i32 1) #1
  %3 = call double @frexp(double %2, i32* nonnull %e) #1
  tail call void @lua_pushnumber(%struct.lua_State* %L, double %3) #1
  %4 = load i32, i32* %e, align 4, !tbaa !38
  %5 = sext i32 %4 to i64
  tail call void @lua_pushinteger(%struct.lua_State* %L, i64 %5) #1
  call void @llvm.lifetime.end(i64 4, i8* %1) #1
  ret i32 2
}

; Function Attrs: nounwind uwtable
define internal i32 @math_ldexp(%struct.lua_State* %L) #0 {
  %1 = tail call double @luaL_checknumber(%struct.lua_State* %L, i32 1) #1
  %2 = tail call i64 @luaL_checkinteger(%struct.lua_State* %L, i32 2) #1
  %3 = trunc i64 %2 to i32
  %4 = tail call double @ldexp(double %1, i32 %3) #1
  tail call void @lua_pushnumber(%struct.lua_State* %L, double %4) #1
  ret i32 1
}

; Function Attrs: nounwind uwtable
define internal i32 @math_log10(%struct.lua_State* %L) #0 {
  %1 = tail call double @luaL_checknumber(%struct.lua_State* %L, i32 1) #1
  %2 = tail call double @log10(double %1) #1
  tail call void @lua_pushnumber(%struct.lua_State* %L, double %2) #1
  ret i32 1
}

; Function Attrs: nounwind uwtable
define internal i32 @math_log(%struct.lua_State* %L) #0 {
  %1 = tail call double @luaL_checknumber(%struct.lua_State* %L, i32 1) #1
  %2 = tail call double @log(double %1) #1
  tail call void @lua_pushnumber(%struct.lua_State* %L, double %2) #1
  ret i32 1
}

; Function Attrs: nounwind uwtable
define internal i32 @math_max(%struct.lua_State* %L) #0 {
  %1 = tail call i32 @lua_gettop(%struct.lua_State* %L) #1
  %2 = tail call double @luaL_checknumber(%struct.lua_State* %L, i32 1) #1
  %3 = icmp slt i32 %1, 2
  br i1 %3, label %._crit_edge, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %0
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %.lr.ph
  %dmax.02 = phi double [ %dmax.1, %.lr.ph ], [ %2, %.lr.ph.preheader ]
  %i.01 = phi i32 [ %6, %.lr.ph ], [ 2, %.lr.ph.preheader ]
  %4 = tail call double @luaL_checknumber(%struct.lua_State* %L, i32 %i.01) #1
  %5 = fcmp ogt double %4, %dmax.02
  %dmax.1 = select i1 %5, double %4, double %dmax.02
  %6 = add nuw nsw i32 %i.01, 1
  %exitcond = icmp eq i32 %i.01, %1
  br i1 %exitcond, label %._crit_edge.loopexit, label %.lr.ph

._crit_edge.loopexit:                             ; preds = %.lr.ph
  %dmax.1.lcssa = phi double [ %dmax.1, %.lr.ph ]
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %0
  %dmax.0.lcssa = phi double [ %2, %0 ], [ %dmax.1.lcssa, %._crit_edge.loopexit ]
  tail call void @lua_pushnumber(%struct.lua_State* %L, double %dmax.0.lcssa) #1
  ret i32 1
}

; Function Attrs: nounwind uwtable
define internal i32 @math_min(%struct.lua_State* %L) #0 {
  %1 = tail call i32 @lua_gettop(%struct.lua_State* %L) #1
  %2 = tail call double @luaL_checknumber(%struct.lua_State* %L, i32 1) #1
  %3 = icmp slt i32 %1, 2
  br i1 %3, label %._crit_edge, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %0
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %.lr.ph
  %dmin.02 = phi double [ %dmin.1, %.lr.ph ], [ %2, %.lr.ph.preheader ]
  %i.01 = phi i32 [ %6, %.lr.ph ], [ 2, %.lr.ph.preheader ]
  %4 = tail call double @luaL_checknumber(%struct.lua_State* %L, i32 %i.01) #1
  %5 = fcmp olt double %4, %dmin.02
  %dmin.1 = select i1 %5, double %4, double %dmin.02
  %6 = add nuw nsw i32 %i.01, 1
  %exitcond = icmp eq i32 %i.01, %1
  br i1 %exitcond, label %._crit_edge.loopexit, label %.lr.ph

._crit_edge.loopexit:                             ; preds = %.lr.ph
  %dmin.1.lcssa = phi double [ %dmin.1, %.lr.ph ]
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %0
  %dmin.0.lcssa = phi double [ %2, %0 ], [ %dmin.1.lcssa, %._crit_edge.loopexit ]
  tail call void @lua_pushnumber(%struct.lua_State* %L, double %dmin.0.lcssa) #1
  ret i32 1
}

; Function Attrs: nounwind uwtable
define internal i32 @math_modf(%struct.lua_State* %L) #0 {
  %ip = alloca double, align 8
  %1 = bitcast double* %ip to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1) #1
  %2 = tail call double @luaL_checknumber(%struct.lua_State* %L, i32 1) #1
  %3 = call double @modf(double %2, double* nonnull %ip) #1
  %4 = load double, double* %ip, align 8, !tbaa !36
  tail call void @lua_pushnumber(%struct.lua_State* %L, double %4) #1
  tail call void @lua_pushnumber(%struct.lua_State* %L, double %3) #1
  call void @llvm.lifetime.end(i64 8, i8* %1) #1
  ret i32 2
}

; Function Attrs: nounwind uwtable
define internal i32 @math_pow(%struct.lua_State* %L) #0 {
  %1 = tail call double @luaL_checknumber(%struct.lua_State* %L, i32 1) #1
  %2 = tail call double @luaL_checknumber(%struct.lua_State* %L, i32 2) #1
  %3 = tail call double @pow(double %1, double %2) #1
  tail call void @lua_pushnumber(%struct.lua_State* %L, double %3) #1
  ret i32 1
}

; Function Attrs: nounwind uwtable
define internal i32 @math_rad(%struct.lua_State* %L) #0 {
  %1 = tail call double @luaL_checknumber(%struct.lua_State* %L, i32 1) #1
  %2 = fmul double %1, 0x3F91DF46A2529D39
  tail call void @lua_pushnumber(%struct.lua_State* %L, double %2) #1
  ret i32 1
}

; Function Attrs: nounwind uwtable
define internal i32 @math_random(%struct.lua_State* %L) #0 {
  %1 = tail call i32 @rand() #1
  %2 = srem i32 %1, 2147483647
  %3 = sitofp i32 %2 to double
  %4 = fdiv double %3, 0x41DFFFFFFFC00000
  %5 = tail call i32 @lua_gettop(%struct.lua_State* %L) #1
  switch i32 %5, label %34 [
    i32 0, label %6
    i32 1, label %7
    i32 2, label %18
  ]

; <label>:6                                       ; preds = %0
  tail call void @lua_pushnumber(%struct.lua_State* %L, double %4) #1
  br label %36

; <label>:7                                       ; preds = %0
  %8 = tail call i64 @luaL_checkinteger(%struct.lua_State* %L, i32 1) #1
  %9 = trunc i64 %8 to i32
  %10 = icmp sgt i32 %9, 0
  br i1 %10, label %13, label %11

; <label>:11                                      ; preds = %7
  %12 = tail call i32 @luaL_argerror(%struct.lua_State* %L, i32 1, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.32.354, i64 0, i64 0)) #1
  br label %13

; <label>:13                                      ; preds = %11, %7
  %14 = sitofp i32 %9 to double
  %15 = fmul double %4, %14
  %16 = tail call double @floor(double %15) #12
  %17 = fadd double %16, 1.000000e+00
  tail call void @lua_pushnumber(%struct.lua_State* %L, double %17) #1
  br label %36

; <label>:18                                      ; preds = %0
  %19 = tail call i64 @luaL_checkinteger(%struct.lua_State* %L, i32 1) #1
  %20 = trunc i64 %19 to i32
  %21 = tail call i64 @luaL_checkinteger(%struct.lua_State* %L, i32 2) #1
  %22 = trunc i64 %21 to i32
  %23 = icmp slt i32 %22, %20
  br i1 %23, label %24, label %26

; <label>:24                                      ; preds = %18
  %25 = tail call i32 @luaL_argerror(%struct.lua_State* %L, i32 2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.32.354, i64 0, i64 0)) #1
  br label %26

; <label>:26                                      ; preds = %18, %24
  %27 = sub i32 1, %20
  %28 = add i32 %27, %22
  %29 = sitofp i32 %28 to double
  %30 = fmul double %4, %29
  %31 = tail call double @floor(double %30) #12
  %32 = sitofp i32 %20 to double
  %33 = fadd double %32, %31
  tail call void @lua_pushnumber(%struct.lua_State* %L, double %33) #1
  br label %36

; <label>:34                                      ; preds = %0
  %35 = tail call i32 (%struct.lua_State*, i8*, ...) @luaL_error(%struct.lua_State* %L, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.33.355, i64 0, i64 0)) #1
  br label %36

; <label>:36                                      ; preds = %6, %13, %26, %34
  %.0 = phi i32 [ %35, %34 ], [ 1, %26 ], [ 1, %13 ], [ 1, %6 ]
  ret i32 %.0
}

; Function Attrs: nounwind uwtable
define internal i32 @math_randomseed(%struct.lua_State* %L) #0 {
  %1 = tail call i64 @luaL_checkinteger(%struct.lua_State* %L, i32 1) #1
  %2 = trunc i64 %1 to i32
  tail call void @srand(i32 %2) #1
  ret i32 0
}

; Function Attrs: nounwind uwtable
define internal i32 @math_sinh(%struct.lua_State* %L) #0 {
  %1 = tail call double @luaL_checknumber(%struct.lua_State* %L, i32 1) #1
  %2 = tail call double @sinh(double %1) #1
  tail call void @lua_pushnumber(%struct.lua_State* %L, double %2) #1
  ret i32 1
}

; Function Attrs: nounwind uwtable
define internal i32 @math_sin(%struct.lua_State* %L) #0 {
  %1 = tail call double @luaL_checknumber(%struct.lua_State* %L, i32 1) #1
  %2 = tail call double @sin(double %1) #1
  tail call void @lua_pushnumber(%struct.lua_State* %L, double %2) #1
  ret i32 1
}

; Function Attrs: nounwind uwtable
define internal i32 @math_sqrt(%struct.lua_State* %L) #0 {
  %1 = tail call double @luaL_checknumber(%struct.lua_State* %L, i32 1) #1
  %2 = tail call double @sqrt(double %1) #1
  tail call void @lua_pushnumber(%struct.lua_State* %L, double %2) #1
  ret i32 1
}

; Function Attrs: nounwind uwtable
define internal i32 @math_tanh(%struct.lua_State* %L) #0 {
  %1 = tail call double @luaL_checknumber(%struct.lua_State* %L, i32 1) #1
  %2 = tail call double @tanh(double %1) #1
  tail call void @lua_pushnumber(%struct.lua_State* %L, double %2) #1
  ret i32 1
}

; Function Attrs: nounwind uwtable
define internal i32 @math_tan(%struct.lua_State* %L) #0 {
  %1 = tail call double @luaL_checknumber(%struct.lua_State* %L, i32 1) #1
  %2 = tail call double @tan(double %1) #1
  tail call void @lua_pushnumber(%struct.lua_State* %L, double %2) #1
  ret i32 1
}

; Function Attrs: nounwind uwtable
define hidden i8* @luaM_growaux_(%struct.lua_State* %L, i8* %block, i32* nocapture %size, i64 %size_elems, i32 %limit, i8* %errormsg) #0 {
  %1 = load i32, i32* %size, align 4, !tbaa !38
  %2 = sdiv i32 %limit, 2
  %3 = icmp slt i32 %1, %2
  br i1 %3, label %7, label %4

; <label>:4                                       ; preds = %0
  %5 = icmp slt i32 %1, %limit
  br i1 %5, label %10, label %6

; <label>:6                                       ; preds = %4
  tail call void (%struct.lua_State*, i8*, ...) @luaG_runerror(%struct.lua_State* %L, i8* %errormsg) #1
  br label %10

; <label>:7                                       ; preds = %0
  %8 = shl nsw i32 %1, 1
  %9 = icmp slt i32 %8, 4
  %. = select i1 %9, i32 4, i32 %8
  br label %10

; <label>:10                                      ; preds = %6, %4, %7
  %newsize.0 = phi i32 [ %., %7 ], [ %limit, %4 ], [ %limit, %6 ]
  %11 = add nsw i32 %newsize.0, 1
  %12 = sext i32 %11 to i64
  %13 = udiv i64 -3, %size_elems
  %14 = icmp ugt i64 %12, %13
  br i1 %14, label %35, label %15

; <label>:15                                      ; preds = %10
  %16 = load i32, i32* %size, align 4, !tbaa !38
  %17 = sext i32 %16 to i64
  %18 = mul i64 %17, %size_elems
  %19 = sext i32 %newsize.0 to i64
  %20 = mul i64 %19, %size_elems
  %21 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 6
  %22 = load %struct.global_State*, %struct.global_State** %21, align 8, !tbaa !17
  %23 = getelementptr inbounds %struct.global_State, %struct.global_State* %22, i64 0, i32 1
  %24 = load i8* (i8*, i8*, i64, i64)*, i8* (i8*, i8*, i64, i64)** %23, align 8, !tbaa !64
  %25 = getelementptr inbounds %struct.global_State, %struct.global_State* %22, i64 0, i32 2
  %26 = load i8*, i8** %25, align 8, !tbaa !63
  %27 = tail call i8* %24(i8* %26, i8* %block, i64 %18, i64 %20) #1
  %28 = icmp eq i8* %27, null
  %29 = icmp ne i64 %20, 0
  %or.cond.i = and i1 %29, %28
  br i1 %or.cond.i, label %30, label %luaM_realloc_.exit

; <label>:30                                      ; preds = %15
  tail call void @luaD_throw(%struct.lua_State* %L, i32 4) #1
  br label %luaM_realloc_.exit

luaM_realloc_.exit:                               ; preds = %15, %30
  %31 = getelementptr inbounds %struct.global_State, %struct.global_State* %22, i64 0, i32 14
  %32 = load i64, i64* %31, align 8, !tbaa !23
  %33 = sub i64 %20, %18
  %34 = add i64 %33, %32
  store i64 %34, i64* %31, align 8, !tbaa !23
  br label %36

; <label>:35                                      ; preds = %10
  tail call void (%struct.lua_State*, i8*, ...) @luaG_runerror(%struct.lua_State* %L, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.362, i64 0, i64 0)) #1
  br label %36

; <label>:36                                      ; preds = %35, %luaM_realloc_.exit
  %37 = phi i8* [ %27, %luaM_realloc_.exit ], [ null, %35 ]
  store i32 %newsize.0, i32* %size, align 4, !tbaa !38
  ret i8* %37
}

; Function Attrs: nounwind uwtable
define hidden i8* @luaM_realloc_(%struct.lua_State* %L, i8* %block, i64 %osize, i64 %nsize) #0 {
  %1 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 6
  %2 = load %struct.global_State*, %struct.global_State** %1, align 8, !tbaa !17
  %3 = getelementptr inbounds %struct.global_State, %struct.global_State* %2, i64 0, i32 1
  %4 = load i8* (i8*, i8*, i64, i64)*, i8* (i8*, i8*, i64, i64)** %3, align 8, !tbaa !64
  %5 = getelementptr inbounds %struct.global_State, %struct.global_State* %2, i64 0, i32 2
  %6 = load i8*, i8** %5, align 8, !tbaa !63
  %7 = tail call i8* %4(i8* %6, i8* %block, i64 %osize, i64 %nsize) #1
  %8 = icmp eq i8* %7, null
  %9 = icmp ne i64 %nsize, 0
  %or.cond = and i1 %9, %8
  br i1 %or.cond, label %10, label %11

; <label>:10                                      ; preds = %0
  tail call void @luaD_throw(%struct.lua_State* %L, i32 4) #1
  br label %11

; <label>:11                                      ; preds = %10, %0
  %12 = getelementptr inbounds %struct.global_State, %struct.global_State* %2, i64 0, i32 14
  %13 = load i64, i64* %12, align 8, !tbaa !23
  %14 = sub i64 %nsize, %osize
  %15 = add i64 %14, %13
  store i64 %15, i64* %12, align 8, !tbaa !23
  ret i8* %7
}

; Function Attrs: nounwind uwtable
define hidden noalias i8* @luaM_toobig(%struct.lua_State* %L) #0 {
  tail call void (%struct.lua_State*, i8*, ...) @luaG_runerror(%struct.lua_State* %L, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.362, i64 0, i64 0)) #1
  ret i8* null
}

; Function Attrs: nounwind uwtable
define i32 @luaopen_package(%struct.lua_State* %L) #0 {
  %1 = tail call i32 @luaL_newmetatable(%struct.lua_State* %L, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.365, i64 0, i64 0)) #1
  tail call void @lua_pushcclosure(%struct.lua_State* %L, i32 (%struct.lua_State*)* nonnull @gctm, i32 0) #1
  tail call void @lua_setfield(%struct.lua_State* %L, i32 -2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.366, i64 0, i64 0)) #1
  tail call void @luaL_register(%struct.lua_State* %L, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2.367, i64 0, i64 0), %struct.luaL_Reg* getelementptr inbounds ([3 x %struct.luaL_Reg], [3 x %struct.luaL_Reg]* @pk_funcs, i64 0, i64 0)) #1
  tail call void @lua_pushvalue(%struct.lua_State* %L, i32 -1) #1
  tail call void @lua_replace(%struct.lua_State* %L, i32 -10001) #1
  tail call void @lua_createtable(%struct.lua_State* %L, i32 0, i32 4) #1
  tail call void @lua_pushcclosure(%struct.lua_State* %L, i32 (%struct.lua_State*)* nonnull @loader_preload, i32 0) #1
  tail call void @lua_rawseti(%struct.lua_State* %L, i32 -2, i32 1) #1
  tail call void @lua_pushcclosure(%struct.lua_State* %L, i32 (%struct.lua_State*)* nonnull @loader_Lua, i32 0) #1
  tail call void @lua_rawseti(%struct.lua_State* %L, i32 -2, i32 2) #1
  tail call void @lua_pushcclosure(%struct.lua_State* %L, i32 (%struct.lua_State*)* nonnull @loader_C, i32 0) #1
  tail call void @lua_rawseti(%struct.lua_State* %L, i32 -2, i32 3) #1
  tail call void @lua_pushcclosure(%struct.lua_State* %L, i32 (%struct.lua_State*)* nonnull @loader_Croot, i32 0) #1
  tail call void @lua_rawseti(%struct.lua_State* %L, i32 -2, i32 4) #1
  tail call void @lua_setfield(%struct.lua_State* %L, i32 -2, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3.368, i64 0, i64 0)) #1
  %2 = tail call i8* @getenv(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.369, i64 0, i64 0)) #1
  %3 = icmp eq i8* %2, null
  br i1 %3, label %4, label %5

; <label>:4                                       ; preds = %0
  tail call void @lua_pushstring(%struct.lua_State* %L, i8* getelementptr inbounds ([138 x i8], [138 x i8]* @.str.6.370, i64 0, i64 0)) #1
  br label %setpath.exit

; <label>:5                                       ; preds = %0
  %6 = tail call i8* @luaL_gsub(%struct.lua_State* %L, i8* %2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.38.371, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.39.372, i64 0, i64 0)) #1
  %7 = tail call i8* @luaL_gsub(%struct.lua_State* %L, i8* %6, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.40.373, i64 0, i64 0), i8* getelementptr inbounds ([138 x i8], [138 x i8]* @.str.6.370, i64 0, i64 0)) #1
  tail call void @lua_remove(%struct.lua_State* %L, i32 -2) #1
  br label %setpath.exit

setpath.exit:                                     ; preds = %4, %5
  tail call void @lua_setfield(%struct.lua_State* %L, i32 -2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4.374, i64 0, i64 0)) #1
  %8 = tail call i8* @getenv(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8.375, i64 0, i64 0)) #1
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %11

; <label>:10                                      ; preds = %setpath.exit
  tail call void @lua_pushstring(%struct.lua_State* %L, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.9.376, i64 0, i64 0)) #1
  br label %setpath.exit1

; <label>:11                                      ; preds = %setpath.exit
  %12 = tail call i8* @luaL_gsub(%struct.lua_State* %L, i8* %8, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.38.371, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.39.372, i64 0, i64 0)) #1
  %13 = tail call i8* @luaL_gsub(%struct.lua_State* %L, i8* %12, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.40.373, i64 0, i64 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.9.376, i64 0, i64 0)) #1
  tail call void @lua_remove(%struct.lua_State* %L, i32 -2) #1
  br label %setpath.exit1

setpath.exit1:                                    ; preds = %10, %11
  tail call void @lua_setfield(%struct.lua_State* %L, i32 -2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.7.377, i64 0, i64 0)) #1
  tail call void @lua_pushlstring(%struct.lua_State* %L, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.10.378, i64 0, i64 0), i64 9) #1
  tail call void @lua_setfield(%struct.lua_State* %L, i32 -2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.11.379, i64 0, i64 0)) #1
  %14 = tail call i8* @luaL_findtable(%struct.lua_State* %L, i32 -10000, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.12.380, i64 0, i64 0), i32 2) #1
  tail call void @lua_setfield(%struct.lua_State* %L, i32 -2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.13.381, i64 0, i64 0)) #1
  tail call void @lua_createtable(%struct.lua_State* %L, i32 0, i32 0) #1
  tail call void @lua_setfield(%struct.lua_State* %L, i32 -2, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.14.382, i64 0, i64 0)) #1
  tail call void @lua_pushvalue(%struct.lua_State* %L, i32 -10002) #1
  tail call void @luaL_register(%struct.lua_State* %L, i8* null, %struct.luaL_Reg* getelementptr inbounds ([3 x %struct.luaL_Reg], [3 x %struct.luaL_Reg]* @ll_funcs, i64 0, i64 0)) #1
  tail call void @lua_settop(%struct.lua_State* %L, i32 -2) #1
  ret i32 1
}

; Function Attrs: nounwind readonly
declare i8* @getenv(i8* nocapture) #4

; Function Attrs: nounwind readonly
declare i8* @strrchr(i8*, i32) #4

; Function Attrs: nounwind uwtable
define internal i32 @gctm(%struct.lua_State* %L) #0 {
  %1 = tail call i8* @luaL_checkudata(%struct.lua_State* %L, i32 1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.365, i64 0, i64 0)) #1
  %2 = bitcast i8* %1 to i8**
  store i8* null, i8** %2, align 8, !tbaa !25
  ret i32 0
}

; Function Attrs: nounwind uwtable
define internal i32 @loader_preload(%struct.lua_State* %L) #0 {
  %1 = tail call i8* @luaL_checklstring(%struct.lua_State* %L, i32 1, i64* null) #1
  tail call void @lua_getfield(%struct.lua_State* %L, i32 -10001, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.14.382, i64 0, i64 0)) #1
  %2 = tail call i32 @lua_type(%struct.lua_State* %L, i32 -1) #1
  %3 = icmp eq i32 %2, 5
  br i1 %3, label %6, label %4

; <label>:4                                       ; preds = %0
  %5 = tail call i32 (%struct.lua_State*, i8*, ...) @luaL_error(%struct.lua_State* %L, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.23.408, i64 0, i64 0)) #1
  br label %6

; <label>:6                                       ; preds = %4, %0
  tail call void @lua_getfield(%struct.lua_State* %L, i32 -1, i8* %1) #1
  %7 = tail call i32 @lua_type(%struct.lua_State* %L, i32 -1) #1
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %11

; <label>:9                                       ; preds = %6
  %10 = tail call i8* (%struct.lua_State*, i8*, ...) @lua_pushfstring(%struct.lua_State* %L, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.24.409, i64 0, i64 0), i8* %1) #1
  br label %11

; <label>:11                                      ; preds = %9, %6
  ret i32 1
}

; Function Attrs: nounwind uwtable
define internal i32 @loader_Lua(%struct.lua_State* %L) #0 {
  %1 = tail call i8* @luaL_checklstring(%struct.lua_State* %L, i32 1, i64* null) #1
  %2 = tail call fastcc i8* @findfile(%struct.lua_State* %L, i8* %1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4.374, i64 0, i64 0))
  %3 = icmp eq i8* %2, null
  br i1 %3, label %11, label %4

; <label>:4                                       ; preds = %0
  %5 = tail call i32 @luaL_loadfile(%struct.lua_State* %L, i8* %2) #1
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %11, label %7

; <label>:7                                       ; preds = %4
  %8 = tail call i8* @lua_tolstring(%struct.lua_State* %L, i32 1, i64* null) #1
  %9 = tail call i8* @lua_tolstring(%struct.lua_State* %L, i32 -1, i64* null) #1
  %10 = tail call i32 (%struct.lua_State*, i8*, ...) @luaL_error(%struct.lua_State* %L, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.33.398, i64 0, i64 0), i8* %8, i8* %2, i8* %9) #1
  br label %11

; <label>:11                                      ; preds = %7, %4, %0
  ret i32 1
}

; Function Attrs: nounwind uwtable
define internal i32 @loader_C(%struct.lua_State* %L) #0 {
  %1 = tail call i8* @luaL_checklstring(%struct.lua_State* %L, i32 1, i64* null) #1
  %2 = tail call fastcc i8* @findfile(%struct.lua_State* %L, i8* %1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.7.377, i64 0, i64 0))
  %3 = icmp eq i8* %2, null
  br i1 %3, label %16, label %4

; <label>:4                                       ; preds = %0
  %5 = tail call i8* @strchr(i8* %1, i32 45) #1
  %6 = icmp eq i8* %5, null
  %7 = getelementptr inbounds i8, i8* %5, i64 1
  %modname..i = select i1 %6, i8* %1, i8* %7
  %8 = tail call i8* @luaL_gsub(%struct.lua_State* %L, i8* %modname..i, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.25.395, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.35.396, i64 0, i64 0)) #1
  %9 = tail call i8* (%struct.lua_State*, i8*, ...) @lua_pushfstring(%struct.lua_State* %L, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.36.397, i64 0, i64 0), i8* %8) #1
  tail call void @lua_remove(%struct.lua_State* %L, i32 -2) #1
  %10 = tail call fastcc i32 @ll_loadfunc(%struct.lua_State* %L, i8* %2)
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %16, label %12

; <label>:12                                      ; preds = %4
  %13 = tail call i8* @lua_tolstring(%struct.lua_State* %L, i32 1, i64* null) #1
  %14 = tail call i8* @lua_tolstring(%struct.lua_State* %L, i32 -1, i64* null) #1
  %15 = tail call i32 (%struct.lua_State*, i8*, ...) @luaL_error(%struct.lua_State* %L, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.33.398, i64 0, i64 0), i8* %13, i8* %2, i8* %14) #1
  br label %16

; <label>:16                                      ; preds = %12, %4, %0
  ret i32 1
}

; Function Attrs: nounwind uwtable
define internal i32 @loader_Croot(%struct.lua_State* %L) #0 {
  %1 = tail call i8* @luaL_checklstring(%struct.lua_State* %L, i32 1, i64* null) #1
  %2 = tail call i8* @strchr(i8* %1, i32 46) #1
  %3 = icmp eq i8* %2, null
  br i1 %3, label %24, label %4

; <label>:4                                       ; preds = %0
  %5 = ptrtoint i8* %2 to i64
  %6 = ptrtoint i8* %1 to i64
  %7 = sub i64 %5, %6
  tail call void @lua_pushlstring(%struct.lua_State* %L, i8* %1, i64 %7) #1
  %8 = tail call i8* @lua_tolstring(%struct.lua_State* %L, i32 -1, i64* null) #1
  %9 = tail call fastcc i8* @findfile(%struct.lua_State* %L, i8* %8, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.7.377, i64 0, i64 0))
  %10 = icmp eq i8* %9, null
  br i1 %10, label %24, label %11

; <label>:11                                      ; preds = %4
  %12 = tail call i8* @strchr(i8* %1, i32 45) #1
  %13 = icmp eq i8* %12, null
  %14 = getelementptr inbounds i8, i8* %12, i64 1
  %modname..i = select i1 %13, i8* %1, i8* %14
  %15 = tail call i8* @luaL_gsub(%struct.lua_State* %L, i8* %modname..i, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.25.395, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.35.396, i64 0, i64 0)) #1
  %16 = tail call i8* (%struct.lua_State*, i8*, ...) @lua_pushfstring(%struct.lua_State* %L, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.36.397, i64 0, i64 0), i8* %15) #1
  tail call void @lua_remove(%struct.lua_State* %L, i32 -2) #1
  %17 = tail call fastcc i32 @ll_loadfunc(%struct.lua_State* %L, i8* %9)
  switch i32 %17, label %18 [
    i32 0, label %24
    i32 2, label %22
  ]

; <label>:18                                      ; preds = %11
  %19 = tail call i8* @lua_tolstring(%struct.lua_State* %L, i32 1, i64* null) #1
  %20 = tail call i8* @lua_tolstring(%struct.lua_State* %L, i32 -1, i64* null) #1
  %21 = tail call i32 (%struct.lua_State*, i8*, ...) @luaL_error(%struct.lua_State* %L, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.33.398, i64 0, i64 0), i8* %19, i8* %9, i8* %20) #1
  br label %22

; <label>:22                                      ; preds = %11, %18
  %23 = tail call i8* (%struct.lua_State*, i8*, ...) @lua_pushfstring(%struct.lua_State* %L, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.37.399, i64 0, i64 0), i8* %1, i8* %9) #1
  br label %24

; <label>:24                                      ; preds = %11, %4, %0, %22
  %.0 = phi i32 [ 1, %22 ], [ 0, %0 ], [ 1, %4 ], [ 1, %11 ]
  ret i32 %.0
}

; Function Attrs: nounwind uwtable
define internal i32 @ll_module(%struct.lua_State* %L) #0 {
  %ar.i = alloca %struct.lua_Debug, align 8
  %1 = tail call i8* @luaL_checklstring(%struct.lua_State* %L, i32 1, i64* null) #1
  %2 = tail call i32 @lua_gettop(%struct.lua_State* %L) #1
  %3 = add nsw i32 %2, 1
  tail call void @lua_getfield(%struct.lua_State* %L, i32 -10000, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.12.380, i64 0, i64 0)) #1
  tail call void @lua_getfield(%struct.lua_State* %L, i32 %3, i8* %1) #1
  %4 = tail call i32 @lua_type(%struct.lua_State* %L, i32 -1) #1
  %5 = icmp eq i32 %4, 5
  br i1 %5, label %12, label %6

; <label>:6                                       ; preds = %0
  tail call void @lua_settop(%struct.lua_State* %L, i32 -2) #1
  %7 = tail call i8* @luaL_findtable(%struct.lua_State* %L, i32 -10002, i8* %1, i32 1) #1
  %8 = icmp eq i8* %7, null
  br i1 %8, label %11, label %9

; <label>:9                                       ; preds = %6
  %10 = tail call i32 (%struct.lua_State*, i8*, ...) @luaL_error(%struct.lua_State* %L, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.43.389, i64 0, i64 0), i8* %1) #1
  br label %dooptions.exit

; <label>:11                                      ; preds = %6
  tail call void @lua_pushvalue(%struct.lua_State* %L, i32 -1) #1
  tail call void @lua_setfield(%struct.lua_State* %L, i32 %3, i8* %1) #1
  br label %12

; <label>:12                                      ; preds = %11, %0
  tail call void @lua_getfield(%struct.lua_State* %L, i32 -1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.44.390, i64 0, i64 0)) #1
  %13 = tail call i32 @lua_type(%struct.lua_State* %L, i32 -1) #1
  %14 = icmp eq i32 %13, 0
  tail call void @lua_settop(%struct.lua_State* %L, i32 -2) #1
  br i1 %14, label %15, label %22

; <label>:15                                      ; preds = %12
  tail call void @lua_pushvalue(%struct.lua_State* %L, i32 -1) #1
  tail call void @lua_setfield(%struct.lua_State* %L, i32 -2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.45.391, i64 0, i64 0)) #1
  tail call void @lua_pushstring(%struct.lua_State* %L, i8* %1) #1
  tail call void @lua_setfield(%struct.lua_State* %L, i32 -2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.44.390, i64 0, i64 0)) #1
  %16 = tail call i8* @strrchr(i8* %1, i32 46) #11
  %17 = icmp eq i8* %16, null
  %18 = getelementptr inbounds i8, i8* %16, i64 1
  %dot.0.i = select i1 %17, i8* %1, i8* %18
  %19 = ptrtoint i8* %dot.0.i to i64
  %20 = ptrtoint i8* %1 to i64
  %21 = sub i64 %19, %20
  tail call void @lua_pushlstring(%struct.lua_State* %L, i8* %1, i64 %21) #1
  tail call void @lua_setfield(%struct.lua_State* %L, i32 -2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.46.392, i64 0, i64 0)) #1
  br label %22

; <label>:22                                      ; preds = %12, %15
  tail call void @lua_pushvalue(%struct.lua_State* %L, i32 -1) #1
  %23 = bitcast %struct.lua_Debug* %ar.i to i8*
  call void @llvm.lifetime.start(i64 120, i8* %23) #1
  %24 = call i32 @lua_getstack(%struct.lua_State* %L, i32 1, %struct.lua_Debug* nonnull %ar.i) #1
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %32, label %26

; <label>:26                                      ; preds = %22
  %27 = call i32 @lua_getinfo(%struct.lua_State* %L, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.47.393, i64 0, i64 0), %struct.lua_Debug* nonnull %ar.i) #1
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %32, label %29

; <label>:29                                      ; preds = %26
  %30 = call i32 @lua_iscfunction(%struct.lua_State* %L, i32 -1) #1
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %setfenv.exit, label %32

; <label>:32                                      ; preds = %29, %26, %22
  %33 = call i32 (%struct.lua_State*, i8*, ...) @luaL_error(%struct.lua_State* %L, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.48.394, i64 0, i64 0)) #1
  br label %setfenv.exit

setfenv.exit:                                     ; preds = %29, %32
  call void @lua_pushvalue(%struct.lua_State* %L, i32 -2) #1
  %34 = call i32 @lua_setfenv(%struct.lua_State* %L, i32 -2) #1
  call void @lua_settop(%struct.lua_State* %L, i32 -2) #1
  call void @llvm.lifetime.end(i64 120, i8* %23) #1
  %35 = icmp slt i32 %2, 2
  br i1 %35, label %dooptions.exit, label %.lr.ph.i.preheader

.lr.ph.i.preheader:                               ; preds = %setfenv.exit
  br label %.lr.ph.i

.lr.ph.i:                                         ; preds = %.lr.ph.i.preheader, %.lr.ph.i
  %i.01.i = phi i32 [ %36, %.lr.ph.i ], [ 2, %.lr.ph.i.preheader ]
  call void @lua_pushvalue(%struct.lua_State* %L, i32 %i.01.i) #1
  call void @lua_pushvalue(%struct.lua_State* %L, i32 -2) #1
  call void @lua_call(%struct.lua_State* %L, i32 1, i32 0) #1
  %36 = add nuw nsw i32 %i.01.i, 1
  %exitcond.i = icmp eq i32 %i.01.i, %2
  br i1 %exitcond.i, label %dooptions.exit.loopexit, label %.lr.ph.i

dooptions.exit.loopexit:                          ; preds = %.lr.ph.i
  br label %dooptions.exit

dooptions.exit:                                   ; preds = %dooptions.exit.loopexit, %setfenv.exit, %9
  %.0 = phi i32 [ %10, %9 ], [ 0, %setfenv.exit ], [ 0, %dooptions.exit.loopexit ]
  ret i32 %.0
}

; Function Attrs: nounwind uwtable
define internal i32 @ll_require(%struct.lua_State* %L) #0 {
  %1 = tail call i8* @luaL_checklstring(%struct.lua_State* %L, i32 1, i64* null) #1
  tail call void @lua_settop(%struct.lua_State* %L, i32 1) #1
  tail call void @lua_getfield(%struct.lua_State* %L, i32 -10000, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.12.380, i64 0, i64 0)) #1
  tail call void @lua_getfield(%struct.lua_State* %L, i32 2, i8* %1) #1
  %2 = tail call i32 @lua_toboolean(%struct.lua_State* %L, i32 -1) #1
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %9, label %4

; <label>:4                                       ; preds = %0
  %5 = tail call i8* @lua_touserdata(%struct.lua_State* %L, i32 -1) #1
  %6 = icmp eq i8* %5, bitcast (i32* @sentinel_ to i8*)
  br i1 %6, label %7, label %39

; <label>:7                                       ; preds = %4
  %8 = tail call i32 (%struct.lua_State*, i8*, ...) @luaL_error(%struct.lua_State* %L, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.49.385, i64 0, i64 0), i8* %1) #1
  br label %39

; <label>:9                                       ; preds = %0
  tail call void @lua_getfield(%struct.lua_State* %L, i32 -10001, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3.368, i64 0, i64 0)) #1
  %10 = tail call i32 @lua_type(%struct.lua_State* %L, i32 -1) #1
  %11 = icmp eq i32 %10, 5
  br i1 %11, label %14, label %12

; <label>:12                                      ; preds = %9
  %13 = tail call i32 (%struct.lua_State*, i8*, ...) @luaL_error(%struct.lua_State* %L, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.50.386, i64 0, i64 0)) #1
  br label %14

; <label>:14                                      ; preds = %12, %9
  tail call void @lua_pushlstring(%struct.lua_State* %L, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.28.387, i64 0, i64 0), i64 0) #1
  br label %15

; <label>:15                                      ; preds = %29, %14
  %i.0 = phi i32 [ 1, %14 ], [ %30, %29 ]
  tail call void @lua_rawgeti(%struct.lua_State* %L, i32 -2, i32 %i.0) #1
  %16 = tail call i32 @lua_type(%struct.lua_State* %L, i32 -1) #1
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %21

; <label>:18                                      ; preds = %15
  %19 = tail call i8* @lua_tolstring(%struct.lua_State* %L, i32 -2, i64* null) #1
  %20 = tail call i32 (%struct.lua_State*, i8*, ...) @luaL_error(%struct.lua_State* %L, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.51.388, i64 0, i64 0), i8* %1, i8* %19) #1
  br label %21

; <label>:21                                      ; preds = %18, %15
  tail call void @lua_pushstring(%struct.lua_State* %L, i8* %1) #1
  tail call void @lua_call(%struct.lua_State* %L, i32 1, i32 1) #1
  %22 = tail call i32 @lua_type(%struct.lua_State* %L, i32 -1) #1
  %23 = icmp eq i32 %22, 6
  br i1 %23, label %31, label %24

; <label>:24                                      ; preds = %21
  %25 = tail call i32 @lua_isstring(%struct.lua_State* %L, i32 -1) #1
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %28, label %27

; <label>:27                                      ; preds = %24
  tail call void @lua_concat(%struct.lua_State* %L, i32 2) #1
  br label %29

; <label>:28                                      ; preds = %24
  tail call void @lua_settop(%struct.lua_State* %L, i32 -2) #1
  br label %29

; <label>:29                                      ; preds = %28, %27
  %30 = add nuw nsw i32 %i.0, 1
  br label %15

; <label>:31                                      ; preds = %21
  tail call void @lua_pushlightuserdata(%struct.lua_State* %L, i8* bitcast (i32* @sentinel_ to i8*)) #1
  tail call void @lua_setfield(%struct.lua_State* %L, i32 2, i8* %1) #1
  tail call void @lua_pushstring(%struct.lua_State* %L, i8* %1) #1
  tail call void @lua_call(%struct.lua_State* %L, i32 1, i32 1) #1
  %32 = tail call i32 @lua_type(%struct.lua_State* %L, i32 -1) #1
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %35, label %34

; <label>:34                                      ; preds = %31
  tail call void @lua_setfield(%struct.lua_State* %L, i32 2, i8* %1) #1
  br label %35

; <label>:35                                      ; preds = %34, %31
  tail call void @lua_getfield(%struct.lua_State* %L, i32 2, i8* %1) #1
  %36 = tail call i8* @lua_touserdata(%struct.lua_State* %L, i32 -1) #1
  %37 = icmp eq i8* %36, bitcast (i32* @sentinel_ to i8*)
  br i1 %37, label %38, label %39

; <label>:38                                      ; preds = %35
  tail call void @lua_pushboolean(%struct.lua_State* %L, i32 1) #1
  tail call void @lua_pushvalue(%struct.lua_State* %L, i32 -1) #1
  tail call void @lua_setfield(%struct.lua_State* %L, i32 2, i8* %1) #1
  br label %39

; <label>:39                                      ; preds = %35, %38, %4, %7
  ret i32 1
}

; Function Attrs: nounwind uwtable
define internal fastcc i8* @findfile(%struct.lua_State* %L, i8* %name, i8* %pname) #0 {
  %1 = tail call i8* @luaL_gsub(%struct.lua_State* %L, i8* %name, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.25.395, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.26.403, i64 0, i64 0)) #1
  tail call void @lua_getfield(%struct.lua_State* %L, i32 -10001, i8* %pname) #1
  %2 = tail call i8* @lua_tolstring(%struct.lua_State* %L, i32 -1, i64* null) #1
  %3 = icmp eq i8* %2, null
  br i1 %3, label %4, label %6

; <label>:4                                       ; preds = %0
  %5 = tail call i32 (%struct.lua_State*, i8*, ...) @luaL_error(%struct.lua_State* %L, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.27.404, i64 0, i64 0), i8* %pname) #1
  br label %6

; <label>:6                                       ; preds = %4, %0
  tail call void @lua_pushlstring(%struct.lua_State* %L, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.28.387, i64 0, i64 0), i64 0) #1
  br label %.backedge

.backedge:                                        ; preds = %.backedge.backedge, %6
  %.0.i = phi i8* [ %2, %6 ], [ %.0.i.be, %.backedge.backedge ]
  %7 = load i8, i8* %.0.i, align 1, !tbaa !76
  switch i8 %7, label %10 [
    i8 59, label %8
    i8 0, label %pushnexttemplate.exit.thread.loopexit
  ]

; <label>:8                                       ; preds = %.backedge
  %9 = getelementptr inbounds i8, i8* %.0.i, i64 1
  br label %.backedge.backedge

.backedge.backedge:                               ; preds = %8, %.thread
  %.0.i.be = phi i8* [ %9, %8 ], [ %l.0.i, %.thread ]
  br label %.backedge

; <label>:10                                      ; preds = %.backedge
  %11 = tail call i8* @strchr(i8* %.0.i, i32 59) #1
  %12 = icmp eq i8* %11, null
  br i1 %12, label %13, label %pushnexttemplate.exit

; <label>:13                                      ; preds = %10
  %14 = tail call i64 @strlen(i8* %.0.i) #11
  %15 = getelementptr inbounds i8, i8* %.0.i, i64 %14
  br label %pushnexttemplate.exit

pushnexttemplate.exit:                            ; preds = %10, %13
  %l.0.i = phi i8* [ %15, %13 ], [ %11, %10 ]
  %16 = ptrtoint i8* %l.0.i to i64
  %17 = ptrtoint i8* %.0.i to i64
  %18 = sub i64 %16, %17
  tail call void @lua_pushlstring(%struct.lua_State* %L, i8* %.0.i, i64 %18) #1
  %19 = icmp eq i8* %l.0.i, null
  br i1 %19, label %pushnexttemplate.exit.thread.loopexit, label %20

; <label>:20                                      ; preds = %pushnexttemplate.exit
  %21 = tail call i8* @lua_tolstring(%struct.lua_State* %L, i32 -1, i64* null) #1
  %22 = tail call i8* @luaL_gsub(%struct.lua_State* %L, i8* %21, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.29.405, i64 0, i64 0), i8* %1) #1
  tail call void @lua_remove(%struct.lua_State* %L, i32 -2) #1
  %23 = tail call %struct._IO_FILE* @fopen(i8* %22, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.32.406, i64 0, i64 0)) #1
  %24 = icmp eq %struct._IO_FILE* %23, null
  br i1 %24, label %.thread, label %26

.thread:                                          ; preds = %20
  %25 = tail call i8* (%struct.lua_State*, i8*, ...) @lua_pushfstring(%struct.lua_State* %L, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.30.407, i64 0, i64 0), i8* %22) #1
  tail call void @lua_remove(%struct.lua_State* %L, i32 -2) #1
  tail call void @lua_concat(%struct.lua_State* %L, i32 2) #1
  br label %.backedge.backedge

; <label>:26                                      ; preds = %20
  %.lcssa8 = phi %struct._IO_FILE* [ %23, %20 ]
  %.lcssa = phi i8* [ %22, %20 ]
  %27 = tail call i32 @fclose(%struct._IO_FILE* %.lcssa8) #1
  br label %pushnexttemplate.exit.thread

pushnexttemplate.exit.thread.loopexit:            ; preds = %pushnexttemplate.exit, %.backedge
  br label %pushnexttemplate.exit.thread

pushnexttemplate.exit.thread:                     ; preds = %pushnexttemplate.exit.thread.loopexit, %26
  %.2 = phi i8* [ %.lcssa, %26 ], [ null, %pushnexttemplate.exit.thread.loopexit ]
  ret i8* %.2
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @ll_loadfunc(%struct.lua_State* %L, i8* %path) #0 {
  %1 = tail call i8* (%struct.lua_State*, i8*, ...) @lua_pushfstring(%struct.lua_State* %L, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.19.400, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.20.401, i64 0, i64 0), i8* %path) #1
  tail call void @lua_gettable(%struct.lua_State* %L, i32 -10000) #1
  %2 = tail call i32 @lua_type(%struct.lua_State* %L, i32 -1) #1
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %7, label %4

; <label>:4                                       ; preds = %0
  %5 = tail call i8* @lua_touserdata(%struct.lua_State* %L, i32 -1) #1
  %6 = bitcast i8* %5 to i8**
  br label %ll_register.exit

; <label>:7                                       ; preds = %0
  tail call void @lua_settop(%struct.lua_State* %L, i32 -2) #1
  %8 = tail call i8* @lua_newuserdata(%struct.lua_State* %L, i64 8) #1
  %9 = bitcast i8* %8 to i8**
  store i8* null, i8** %9, align 8, !tbaa !25
  tail call void @lua_getfield(%struct.lua_State* %L, i32 -10000, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.365, i64 0, i64 0)) #1
  %10 = tail call i32 @lua_setmetatable(%struct.lua_State* %L, i32 -2) #1
  %11 = tail call i8* (%struct.lua_State*, i8*, ...) @lua_pushfstring(%struct.lua_State* %L, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.19.400, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.20.401, i64 0, i64 0), i8* %path) #1
  tail call void @lua_pushvalue(%struct.lua_State* %L, i32 -2) #1
  tail call void @lua_settable(%struct.lua_State* %L, i32 -10000) #1
  br label %ll_register.exit

ll_register.exit:                                 ; preds = %4, %7
  %plib.0.i = phi i8** [ %9, %7 ], [ %6, %4 ]
  %12 = load i8*, i8** %plib.0.i, align 8, !tbaa !25
  %13 = icmp eq i8* %12, null
  tail call void @lua_pushlstring(%struct.lua_State* %L, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.21.402, i64 0, i64 0), i64 58) #1
  br i1 %13, label %.thread, label %14

.thread:                                          ; preds = %ll_register.exit
  store i8* null, i8** %plib.0.i, align 8, !tbaa !25
  br label %14

; <label>:14                                      ; preds = %ll_register.exit, %.thread
  %.1 = phi i32 [ 1, %.thread ], [ 2, %ll_register.exit ]
  ret i32 %.1
}

; Function Attrs: nounwind uwtable
define internal i32 @ll_loadlib(%struct.lua_State* %L) #0 {
  %1 = tail call i8* @luaL_checklstring(%struct.lua_State* %L, i32 1, i64* null) #1
  %2 = tail call i8* @luaL_checklstring(%struct.lua_State* %L, i32 2, i64* null) #1
  %3 = tail call fastcc i32 @ll_loadfunc(%struct.lua_State* %L, i8* %1)
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %8, label %5

; <label>:5                                       ; preds = %0
  tail call void @lua_pushnil(%struct.lua_State* %L) #1
  tail call void @lua_insert(%struct.lua_State* %L, i32 -2) #1
  %6 = icmp eq i32 %3, 1
  %7 = select i1 %6, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.17.413, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.18.414, i64 0, i64 0)
  tail call void @lua_pushstring(%struct.lua_State* %L, i8* %7) #1
  br label %8

; <label>:8                                       ; preds = %0, %5
  %.0 = phi i32 [ 3, %5 ], [ 1, %0 ]
  ret i32 %.0
}

; Function Attrs: nounwind uwtable
define internal i32 @ll_seeall(%struct.lua_State* %L) #0 {
  tail call void @luaL_checktype(%struct.lua_State* %L, i32 1, i32 5) #1
  %1 = tail call i32 @lua_getmetatable(%struct.lua_State* %L, i32 1) #1
  %2 = icmp eq i32 %1, 0
  br i1 %2, label %3, label %5

; <label>:3                                       ; preds = %0
  tail call void @lua_createtable(%struct.lua_State* %L, i32 0, i32 1) #1
  tail call void @lua_pushvalue(%struct.lua_State* %L, i32 -1) #1
  %4 = tail call i32 @lua_setmetatable(%struct.lua_State* %L, i32 1) #1
  br label %5

; <label>:5                                       ; preds = %0, %3
  tail call void @lua_pushvalue(%struct.lua_State* %L, i32 -10002) #1
  tail call void @lua_setfield(%struct.lua_State* %L, i32 -2, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.22.412, i64 0, i64 0)) #1
  ret i32 0
}

; Function Attrs: nounwind readnone uwtable
define hidden i32 @luaO_int2fb(i32 %x) #3 {
  %1 = icmp ugt i32 %x, 15
  br i1 %1, label %.lr.ph.preheader, label %5

.lr.ph.preheader:                                 ; preds = %0
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %.lr.ph
  %e.03 = phi i32 [ %phitmp, %.lr.ph ], [ 1, %.lr.ph.preheader ]
  %.02 = phi i32 [ %3, %.lr.ph ], [ %x, %.lr.ph.preheader ]
  %2 = add i32 %.02, 1
  %3 = lshr i32 %2, 1
  %phitmp = add i32 %e.03, 1
  %4 = icmp ugt i32 %2, 31
  br i1 %4, label %.lr.ph, label %._crit_edge

._crit_edge:                                      ; preds = %.lr.ph
  %phitmp.lcssa = phi i32 [ %phitmp, %.lr.ph ]
  %.lcssa = phi i32 [ %3, %.lr.ph ]
  %phitmp5 = shl i32 %phitmp.lcssa, 3
  br label %5

; <label>:5                                       ; preds = %._crit_edge, %0
  %e.0.lcssa = phi i32 [ %phitmp5, %._crit_edge ], [ 8, %0 ]
  %.0.lcssa = phi i32 [ %.lcssa, %._crit_edge ], [ %x, %0 ]
  %6 = icmp ult i32 %.0.lcssa, 8
  %7 = add nsw i32 %.0.lcssa, -8
  %8 = or i32 %e.0.lcssa, %7
  %.01 = select i1 %6, i32 %.0.lcssa, i32 %8
  ret i32 %.01
}

; Function Attrs: nounwind readnone uwtable
define hidden i32 @luaO_fb2int(i32 %x) #3 {
  %1 = lshr i32 %x, 3
  %2 = and i32 %1, 31
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %9, label %4

; <label>:4                                       ; preds = %0
  %5 = and i32 %x, 7
  %6 = or i32 %5, 8
  %7 = add nsw i32 %2, -1
  %8 = shl i32 %6, %7
  br label %9

; <label>:9                                       ; preds = %0, %4
  %.0 = phi i32 [ %8, %4 ], [ %x, %0 ]
  ret i32 %.0
}

; Function Attrs: nounwind readnone uwtable
define hidden i32 @luaO_log2(i32 %x) #3 {
  %1 = icmp ugt i32 %x, 255
  br i1 %1, label %.lr.ph.preheader, label %._crit_edge

.lr.ph.preheader:                                 ; preds = %0
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %.lr.ph
  %l.02 = phi i32 [ %2, %.lr.ph ], [ -1, %.lr.ph.preheader ]
  %.01 = phi i32 [ %3, %.lr.ph ], [ %x, %.lr.ph.preheader ]
  %2 = add nsw i32 %l.02, 8
  %3 = lshr i32 %.01, 8
  %4 = icmp ugt i32 %.01, 65535
  br i1 %4, label %.lr.ph, label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %.lr.ph
  %.lcssa8 = phi i32 [ %3, %.lr.ph ]
  %.lcssa = phi i32 [ %2, %.lr.ph ]
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %0
  %l.0.lcssa = phi i32 [ -1, %0 ], [ %.lcssa, %._crit_edge.loopexit ]
  %.0.lcssa = phi i32 [ %x, %0 ], [ %.lcssa8, %._crit_edge.loopexit ]
  %5 = zext i32 %.0.lcssa to i64
  %6 = getelementptr inbounds [256 x i8], [256 x i8]* @luaO_log2.log_2, i64 0, i64 %5
  %7 = load i8, i8* %6, align 1, !tbaa !76
  %8 = zext i8 %7 to i32
  %9 = add nsw i32 %8, %l.0.lcssa
  ret i32 %9
}

; Function Attrs: nounwind readonly uwtable
define hidden i32 @luaO_rawequalObj(%struct.lua_TValue.218* nocapture readonly %t1, %struct.lua_TValue.218* nocapture readonly %t2) #2 {
  %1 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %t1, i64 0, i32 1
  %2 = load i32, i32* %1, align 4, !tbaa !10
  %3 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %t2, i64 0, i32 1
  %4 = load i32, i32* %3, align 4, !tbaa !10
  %5 = icmp eq i32 %2, %4
  br i1 %5, label %6, label %35

; <label>:6                                       ; preds = %0
  switch i32 %2, label %28 [
    i32 0, label %35
    i32 3, label %7
    i32 1, label %14
    i32 2, label %21
  ]

; <label>:7                                       ; preds = %6
  %8 = bitcast %struct.lua_TValue.218* %t1 to double*
  %9 = load double, double* %8, align 8, !tbaa !36
  %10 = bitcast %struct.lua_TValue.218* %t2 to double*
  %11 = load double, double* %10, align 8, !tbaa !36
  %12 = fcmp oeq double %9, %11
  %13 = zext i1 %12 to i32
  br label %35

; <label>:14                                      ; preds = %6
  %15 = bitcast %struct.lua_TValue.218* %t1 to i32*
  %16 = load i32, i32* %15, align 4, !tbaa !38
  %17 = bitcast %struct.lua_TValue.218* %t2 to i32*
  %18 = load i32, i32* %17, align 4, !tbaa !38
  %19 = icmp eq i32 %16, %18
  %20 = zext i1 %19 to i32
  br label %35

; <label>:21                                      ; preds = %6
  %22 = bitcast %struct.lua_TValue.218* %t1 to i8**
  %23 = load i8*, i8** %22, align 8, !tbaa !25
  %24 = bitcast %struct.lua_TValue.218* %t2 to i8**
  %25 = load i8*, i8** %24, align 8, !tbaa !25
  %26 = icmp eq i8* %23, %25
  %27 = zext i1 %26 to i32
  br label %35

; <label>:28                                      ; preds = %6
  %29 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %t1, i64 0, i32 0, i32 0
  %30 = load %union.GCObject.216*, %union.GCObject.216** %29, align 8, !tbaa !25
  %31 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %t2, i64 0, i32 0, i32 0
  %32 = load %union.GCObject.216*, %union.GCObject.216** %31, align 8, !tbaa !25
  %33 = icmp eq %union.GCObject.216* %30, %32
  %34 = zext i1 %33 to i32
  br label %35

; <label>:35                                      ; preds = %6, %0, %28, %21, %14, %7
  %.0 = phi i32 [ %34, %28 ], [ %27, %21 ], [ %20, %14 ], [ %13, %7 ], [ 0, %0 ], [ 1, %6 ]
  ret i32 %.0
}

; Function Attrs: nounwind uwtable
define hidden i32 @luaO_str2d(i8* %s, double* nocapture %result) #0 {
  %endptr = alloca i8*, align 8
  %1 = bitcast i8** %endptr to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1) #1
  %2 = call double @strtod(i8* %s, i8** nonnull %endptr) #1
  store double %2, double* %result, align 8, !tbaa !36
  %3 = load i8*, i8** %endptr, align 8, !tbaa !25
  %4 = icmp eq i8* %3, %s
  br i1 %4, label %31, label %5

; <label>:5                                       ; preds = %0
  %6 = load i8, i8* %3, align 1, !tbaa !76
  switch i8 %6, label %10 [
    i8 120, label %7
    i8 88, label %7
  ]

; <label>:7                                       ; preds = %5, %5
  %8 = call i64 @strtoul(i8* %s, i8** nonnull %endptr, i32 16) #1
  %9 = uitofp i64 %8 to double
  store double %9, double* %result, align 8, !tbaa !36
  %.pre = load i8*, i8** %endptr, align 8, !tbaa !25
  %.pre4 = load i8, i8* %.pre, align 1, !tbaa !76
  br label %10

; <label>:10                                      ; preds = %5, %7
  %11 = phi i8 [ %6, %5 ], [ %.pre4, %7 ]
  %12 = phi i8* [ %3, %5 ], [ %.pre, %7 ]
  %13 = icmp eq i8 %11, 0
  br i1 %13, label %31, label %.preheader

.preheader:                                       ; preds = %10
  %14 = zext i8 %11 to i64
  %15 = tail call i16** @__ctype_b_loc() #12
  %16 = load i16*, i16** %15, align 8, !tbaa !25
  %17 = getelementptr inbounds i16, i16* %16, i64 %14
  %18 = load i16, i16* %17, align 2, !tbaa !87
  %19 = and i16 %18, 8192
  %20 = icmp eq i16 %19, 0
  br i1 %20, label %29, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %.preheader
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %.lr.ph
  %21 = phi i8* [ %22, %.lr.ph ], [ %12, %.lr.ph.preheader ]
  %22 = getelementptr inbounds i8, i8* %21, i64 1
  %23 = load i8, i8* %22, align 1, !tbaa !76
  %24 = zext i8 %23 to i64
  %25 = getelementptr inbounds i16, i16* %16, i64 %24
  %26 = load i16, i16* %25, align 2, !tbaa !87
  %27 = and i16 %26, 8192
  %28 = icmp eq i16 %27, 0
  br i1 %28, label %._crit_edge, label %.lr.ph

._crit_edge:                                      ; preds = %.lr.ph
  %.lcssa12 = phi i8 [ %23, %.lr.ph ]
  %.lcssa11 = phi i8* [ %22, %.lr.ph ]
  store i8* %.lcssa11, i8** %endptr, align 8, !tbaa !25
  br label %29

; <label>:29                                      ; preds = %._crit_edge, %.preheader
  %.lcssa = phi i8 [ %.lcssa12, %._crit_edge ], [ %11, %.preheader ]
  %30 = icmp eq i8 %.lcssa, 0
  %. = zext i1 %30 to i32
  br label %31

; <label>:31                                      ; preds = %29, %10, %0
  %.0 = phi i32 [ 0, %0 ], [ 1, %10 ], [ %., %29 ]
  call void @llvm.lifetime.end(i64 8, i8* %1) #1
  ret i32 %.0
}

; Function Attrs: nounwind
declare double @strtod(i8* readonly, i8** nocapture) #5

; Function Attrs: nounwind uwtable
define hidden i8* @luaO_pushvfstring(%struct.lua_State.215* %L, i8* %fmt, %struct.__va_list_tag* nocapture %argp) #0 {
  %buff = alloca [2 x i8], align 1
  %buff3 = alloca [40 x i8], align 16
  %buff4 = alloca [3 x i8], align 1
  %1 = getelementptr inbounds %struct.lua_State.215, %struct.lua_State.215* %L, i64 0, i32 4
  %2 = load %struct.lua_TValue.218*, %struct.lua_TValue.218** %1, align 8, !tbaa !1
  %3 = tail call %union.TString.210* bitcast (%union.TString* (%struct.lua_State*, i8*, i64)* @luaS_newlstr to %union.TString.210* (%struct.lua_State.215*, i8*, i64)*)(%struct.lua_State.215* %L, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.427, i64 0, i64 0), i64 0) #1
  %4 = bitcast %struct.lua_TValue.218* %2 to %union.TString.210**
  store %union.TString.210* %3, %union.TString.210** %4, align 8, !tbaa !25
  %5 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %2, i64 0, i32 1
  store i32 4, i32* %5, align 4, !tbaa !10
  %6 = getelementptr inbounds %struct.lua_State.215, %struct.lua_State.215* %L, i64 0, i32 9
  %7 = bitcast %struct.lua_TValue.218** %6 to i64*
  %8 = load i64, i64* %7, align 8, !tbaa !12
  %9 = bitcast %struct.lua_TValue.218** %1 to i64*
  %10 = load i64, i64* %9, align 8, !tbaa !1
  %11 = sub i64 %8, %10
  %12 = icmp slt i64 %11, 17
  %13 = inttoptr i64 %10 to %struct.lua_TValue.218*
  br i1 %12, label %14, label %pushstr.exit

; <label>:14                                      ; preds = %0
  tail call void bitcast (void (%struct.lua_State*, i32)* @luaD_growstack to void (%struct.lua_State.215*, i32)*)(%struct.lua_State.215* %L, i32 1) #1
  %.pre.i = load %struct.lua_TValue.218*, %struct.lua_TValue.218** %1, align 8, !tbaa !1
  br label %pushstr.exit

pushstr.exit:                                     ; preds = %0, %14
  %15 = phi %struct.lua_TValue.218* [ %13, %0 ], [ %.pre.i, %14 ]
  %16 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %15, i64 1
  store %struct.lua_TValue.218* %16, %struct.lua_TValue.218** %1, align 8, !tbaa !1
  %17 = call i8* @strchr(i8* %fmt, i32 37) #1
  %18 = icmp eq i8* %17, null
  br i1 %18, label %._crit_edge, label %.lr.ph

.lr.ph:                                           ; preds = %pushstr.exit
  %19 = getelementptr inbounds [3 x i8], [3 x i8]* %buff4, i64 0, i64 0
  %20 = getelementptr inbounds [3 x i8], [3 x i8]* %buff4, i64 0, i64 1
  %21 = getelementptr inbounds [3 x i8], [3 x i8]* %buff4, i64 0, i64 2
  %22 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %argp, i64 0, i32 0
  %23 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %argp, i64 0, i32 3
  %24 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %argp, i64 0, i32 2
  %25 = getelementptr inbounds [2 x i8], [2 x i8]* %buff, i64 0, i64 0
  %26 = getelementptr inbounds [2 x i8], [2 x i8]* %buff, i64 0, i64 1
  %27 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %argp, i64 0, i32 1
  %28 = getelementptr inbounds [40 x i8], [40 x i8]* %buff3, i64 0, i64 0
  br label %29

; <label>:29                                      ; preds = %.lr.ph, %.thread
  %30 = phi %struct.lua_TValue.218* [ %16, %.lr.ph ], [ %211, %.thread ]
  %31 = phi i8* [ %17, %.lr.ph ], [ %214, %.thread ]
  %.023 = phi i8* [ %fmt, %.lr.ph ], [ %213, %.thread ]
  %n.022 = phi i32 [ 1, %.lr.ph ], [ %212, %.thread ]
  %32 = ptrtoint i8* %31 to i64
  %33 = ptrtoint i8* %.023 to i64
  %34 = sub i64 %32, %33
  %35 = call %union.TString.210* bitcast (%union.TString* (%struct.lua_State*, i8*, i64)* @luaS_newlstr to %union.TString.210* (%struct.lua_State.215*, i8*, i64)*)(%struct.lua_State.215* %L, i8* %.023, i64 %34) #1
  %36 = bitcast %struct.lua_TValue.218* %30 to %union.TString.210**
  store %union.TString.210* %35, %union.TString.210** %36, align 8, !tbaa !25
  %37 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %30, i64 0, i32 1
  store i32 4, i32* %37, align 4, !tbaa !10
  %38 = load i64, i64* %7, align 8, !tbaa !12
  %39 = load i64, i64* %9, align 8, !tbaa !1
  %40 = sub i64 %38, %39
  %41 = icmp slt i64 %40, 17
  %42 = inttoptr i64 %39 to %struct.lua_TValue.218*
  br i1 %41, label %43, label %44

; <label>:43                                      ; preds = %29
  call void bitcast (void (%struct.lua_State*, i32)* @luaD_growstack to void (%struct.lua_State.215*, i32)*)(%struct.lua_State.215* %L, i32 1) #1
  %.pre = load %struct.lua_TValue.218*, %struct.lua_TValue.218** %1, align 8, !tbaa !1
  br label %44

; <label>:44                                      ; preds = %29, %43
  %45 = phi %struct.lua_TValue.218* [ %42, %29 ], [ %.pre, %43 ]
  %46 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %45, i64 1
  store %struct.lua_TValue.218* %46, %struct.lua_TValue.218** %1, align 8, !tbaa !1
  %47 = getelementptr inbounds i8, i8* %31, i64 1
  %48 = load i8, i8* %47, align 1, !tbaa !76
  %49 = sext i8 %48 to i32
  switch i32 %49, label %197 [
    i32 115, label %50
    i32 99, label %78
    i32 100, label %106
    i32 102, label %132
    i32 112, label %157
    i32 37, label %185
  ]

; <label>:50                                      ; preds = %44
  %51 = load i32, i32* %22, align 4
  %52 = icmp ult i32 %51, 41
  br i1 %52, label %53, label %58

; <label>:53                                      ; preds = %50
  %54 = load i8*, i8** %23, align 8
  %55 = sext i32 %51 to i64
  %56 = getelementptr i8, i8* %54, i64 %55
  %57 = add i32 %51, 8
  store i32 %57, i32* %22, align 4
  br label %61

; <label>:58                                      ; preds = %50
  %59 = load i8*, i8** %24, align 8
  %60 = getelementptr i8, i8* %59, i64 8
  store i8* %60, i8** %24, align 8
  br label %61

; <label>:61                                      ; preds = %58, %53
  %.in.9 = phi i8* [ %56, %53 ], [ %59, %58 ]
  %62 = bitcast i8* %.in.9 to i8**
  %63 = load i8*, i8** %62, align 8
  %64 = icmp eq i8* %63, null
  %. = select i1 %64, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.428, i64 0, i64 0), i8* %63
  %65 = load %struct.lua_TValue.218*, %struct.lua_TValue.218** %1, align 8, !tbaa !1
  %66 = call i64 @strlen(i8* %.) #11
  %67 = call %union.TString.210* bitcast (%union.TString* (%struct.lua_State*, i8*, i64)* @luaS_newlstr to %union.TString.210* (%struct.lua_State.215*, i8*, i64)*)(%struct.lua_State.215* %L, i8* %., i64 %66) #1
  %68 = bitcast %struct.lua_TValue.218* %65 to %union.TString.210**
  store %union.TString.210* %67, %union.TString.210** %68, align 8, !tbaa !25
  %69 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %65, i64 0, i32 1
  store i32 4, i32* %69, align 4, !tbaa !10
  %70 = load i64, i64* %7, align 8, !tbaa !12
  %71 = load i64, i64* %9, align 8, !tbaa !1
  %72 = sub i64 %70, %71
  %73 = icmp slt i64 %72, 17
  %74 = inttoptr i64 %71 to %struct.lua_TValue.218*
  br i1 %73, label %75, label %pushstr.exit11

; <label>:75                                      ; preds = %61
  call void bitcast (void (%struct.lua_State*, i32)* @luaD_growstack to void (%struct.lua_State.215*, i32)*)(%struct.lua_State.215* %L, i32 1) #1
  %.pre.i.10 = load %struct.lua_TValue.218*, %struct.lua_TValue.218** %1, align 8, !tbaa !1
  br label %pushstr.exit11

pushstr.exit11:                                   ; preds = %61, %75
  %76 = phi %struct.lua_TValue.218* [ %74, %61 ], [ %.pre.i.10, %75 ]
  %77 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %76, i64 1
  store %struct.lua_TValue.218* %77, %struct.lua_TValue.218** %1, align 8, !tbaa !1
  br label %.thread

; <label>:78                                      ; preds = %44
  call void @llvm.lifetime.start(i64 2, i8* %25) #1
  %79 = load i32, i32* %22, align 4
  %80 = icmp ult i32 %79, 41
  br i1 %80, label %81, label %86

; <label>:81                                      ; preds = %78
  %82 = load i8*, i8** %23, align 8
  %83 = sext i32 %79 to i64
  %84 = getelementptr i8, i8* %82, i64 %83
  %85 = add i32 %79, 8
  store i32 %85, i32* %22, align 4
  br label %89

; <label>:86                                      ; preds = %78
  %87 = load i8*, i8** %24, align 8
  %88 = getelementptr i8, i8* %87, i64 8
  store i8* %88, i8** %24, align 8
  br label %89

; <label>:89                                      ; preds = %86, %81
  %.in.8 = phi i8* [ %84, %81 ], [ %87, %86 ]
  %90 = bitcast i8* %.in.8 to i32*
  %91 = load i32, i32* %90, align 4
  %92 = trunc i32 %91 to i8
  store i8 %92, i8* %25, align 1, !tbaa !76
  store i8 0, i8* %26, align 1, !tbaa !76
  %93 = load %struct.lua_TValue.218*, %struct.lua_TValue.218** %1, align 8, !tbaa !1
  %94 = call i64 @strlen(i8* %25) #11
  %95 = call %union.TString.210* bitcast (%union.TString* (%struct.lua_State*, i8*, i64)* @luaS_newlstr to %union.TString.210* (%struct.lua_State.215*, i8*, i64)*)(%struct.lua_State.215* %L, i8* %25, i64 %94) #1
  %96 = bitcast %struct.lua_TValue.218* %93 to %union.TString.210**
  store %union.TString.210* %95, %union.TString.210** %96, align 8, !tbaa !25
  %97 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %93, i64 0, i32 1
  store i32 4, i32* %97, align 4, !tbaa !10
  %98 = load i64, i64* %7, align 8, !tbaa !12
  %99 = load i64, i64* %9, align 8, !tbaa !1
  %100 = sub i64 %98, %99
  %101 = icmp slt i64 %100, 17
  %102 = inttoptr i64 %99 to %struct.lua_TValue.218*
  br i1 %101, label %103, label %pushstr.exit13

; <label>:103                                     ; preds = %89
  call void bitcast (void (%struct.lua_State*, i32)* @luaD_growstack to void (%struct.lua_State.215*, i32)*)(%struct.lua_State.215* %L, i32 1) #1
  %.pre.i.12 = load %struct.lua_TValue.218*, %struct.lua_TValue.218** %1, align 8, !tbaa !1
  br label %pushstr.exit13

pushstr.exit13:                                   ; preds = %89, %103
  %104 = phi %struct.lua_TValue.218* [ %102, %89 ], [ %.pre.i.12, %103 ]
  %105 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %104, i64 1
  store %struct.lua_TValue.218* %105, %struct.lua_TValue.218** %1, align 8, !tbaa !1
  call void @llvm.lifetime.end(i64 2, i8* %25) #1
  br label %.thread

; <label>:106                                     ; preds = %44
  %107 = load i32, i32* %22, align 4
  %108 = icmp ult i32 %107, 41
  br i1 %108, label %109, label %114

; <label>:109                                     ; preds = %106
  %110 = load i8*, i8** %23, align 8
  %111 = sext i32 %107 to i64
  %112 = getelementptr i8, i8* %110, i64 %111
  %113 = add i32 %107, 8
  store i32 %113, i32* %22, align 4
  br label %117

; <label>:114                                     ; preds = %106
  %115 = load i8*, i8** %24, align 8
  %116 = getelementptr i8, i8* %115, i64 8
  store i8* %116, i8** %24, align 8
  br label %117

; <label>:117                                     ; preds = %114, %109
  %.in.7 = phi i8* [ %112, %109 ], [ %115, %114 ]
  %118 = bitcast i8* %.in.7 to i32*
  %119 = load i32, i32* %118, align 4
  %120 = sitofp i32 %119 to double
  %121 = bitcast %struct.lua_TValue.218* %46 to double*
  store double %120, double* %121, align 8, !tbaa !36
  %122 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %45, i64 1, i32 1
  store i32 3, i32* %122, align 4, !tbaa !10
  %123 = load i64, i64* %7, align 8, !tbaa !12
  %124 = load i64, i64* %9, align 8, !tbaa !1
  %125 = sub i64 %123, %124
  %126 = icmp slt i64 %125, 17
  %127 = inttoptr i64 %124 to %struct.lua_TValue.218*
  br i1 %126, label %128, label %129

; <label>:128                                     ; preds = %117
  call void bitcast (void (%struct.lua_State*, i32)* @luaD_growstack to void (%struct.lua_State.215*, i32)*)(%struct.lua_State.215* %L, i32 1) #1
  %.pre30 = load %struct.lua_TValue.218*, %struct.lua_TValue.218** %1, align 8, !tbaa !1
  br label %129

; <label>:129                                     ; preds = %117, %128
  %130 = phi %struct.lua_TValue.218* [ %127, %117 ], [ %.pre30, %128 ]
  %131 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %130, i64 1
  store %struct.lua_TValue.218* %131, %struct.lua_TValue.218** %1, align 8, !tbaa !1
  br label %.thread

; <label>:132                                     ; preds = %44
  %133 = load i32, i32* %27, align 4
  %134 = icmp ult i32 %133, 161
  br i1 %134, label %135, label %140

; <label>:135                                     ; preds = %132
  %136 = load i8*, i8** %23, align 8
  %137 = sext i32 %133 to i64
  %138 = getelementptr i8, i8* %136, i64 %137
  %139 = add i32 %133, 16
  store i32 %139, i32* %27, align 4
  br label %143

; <label>:140                                     ; preds = %132
  %141 = load i8*, i8** %24, align 8
  %142 = getelementptr i8, i8* %141, i64 8
  store i8* %142, i8** %24, align 8
  br label %143

; <label>:143                                     ; preds = %140, %135
  %.in.6 = phi i8* [ %138, %135 ], [ %141, %140 ]
  %144 = bitcast i8* %.in.6 to i64*
  %145 = load i64, i64* %144, align 8
  %146 = bitcast %struct.lua_TValue.218* %46 to i64*
  store i64 %145, i64* %146, align 8, !tbaa !36
  %147 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %45, i64 1, i32 1
  store i32 3, i32* %147, align 4, !tbaa !10
  %148 = load i64, i64* %7, align 8, !tbaa !12
  %149 = load i64, i64* %9, align 8, !tbaa !1
  %150 = sub i64 %148, %149
  %151 = icmp slt i64 %150, 17
  %152 = inttoptr i64 %149 to %struct.lua_TValue.218*
  br i1 %151, label %153, label %154

; <label>:153                                     ; preds = %143
  call void bitcast (void (%struct.lua_State*, i32)* @luaD_growstack to void (%struct.lua_State.215*, i32)*)(%struct.lua_State.215* %L, i32 1) #1
  %.pre29 = load %struct.lua_TValue.218*, %struct.lua_TValue.218** %1, align 8, !tbaa !1
  br label %154

; <label>:154                                     ; preds = %143, %153
  %155 = phi %struct.lua_TValue.218* [ %152, %143 ], [ %.pre29, %153 ]
  %156 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %155, i64 1
  store %struct.lua_TValue.218* %156, %struct.lua_TValue.218** %1, align 8, !tbaa !1
  br label %.thread

; <label>:157                                     ; preds = %44
  call void @llvm.lifetime.start(i64 40, i8* %28) #1
  %158 = load i32, i32* %22, align 4
  %159 = icmp ult i32 %158, 41
  br i1 %159, label %160, label %165

; <label>:160                                     ; preds = %157
  %161 = load i8*, i8** %23, align 8
  %162 = sext i32 %158 to i64
  %163 = getelementptr i8, i8* %161, i64 %162
  %164 = add i32 %158, 8
  store i32 %164, i32* %22, align 4
  br label %168

; <label>:165                                     ; preds = %157
  %166 = load i8*, i8** %24, align 8
  %167 = getelementptr i8, i8* %166, i64 8
  store i8* %167, i8** %24, align 8
  br label %168

; <label>:168                                     ; preds = %165, %160
  %.in = phi i8* [ %163, %160 ], [ %166, %165 ]
  %169 = bitcast i8* %.in to i8**
  %170 = load i8*, i8** %169, align 8
  %171 = call i32 (i8*, i8*, ...) @sprintf(i8* %28, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2.429, i64 0, i64 0), i8* %170) #1
  %172 = load %struct.lua_TValue.218*, %struct.lua_TValue.218** %1, align 8, !tbaa !1
  %173 = call i64 @strlen(i8* %28) #11
  %174 = call %union.TString.210* bitcast (%union.TString* (%struct.lua_State*, i8*, i64)* @luaS_newlstr to %union.TString.210* (%struct.lua_State.215*, i8*, i64)*)(%struct.lua_State.215* %L, i8* %28, i64 %173) #1
  %175 = bitcast %struct.lua_TValue.218* %172 to %union.TString.210**
  store %union.TString.210* %174, %union.TString.210** %175, align 8, !tbaa !25
  %176 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %172, i64 0, i32 1
  store i32 4, i32* %176, align 4, !tbaa !10
  %177 = load i64, i64* %7, align 8, !tbaa !12
  %178 = load i64, i64* %9, align 8, !tbaa !1
  %179 = sub i64 %177, %178
  %180 = icmp slt i64 %179, 17
  %181 = inttoptr i64 %178 to %struct.lua_TValue.218*
  br i1 %180, label %182, label %pushstr.exit15

; <label>:182                                     ; preds = %168
  call void bitcast (void (%struct.lua_State*, i32)* @luaD_growstack to void (%struct.lua_State.215*, i32)*)(%struct.lua_State.215* %L, i32 1) #1
  %.pre.i.14 = load %struct.lua_TValue.218*, %struct.lua_TValue.218** %1, align 8, !tbaa !1
  br label %pushstr.exit15

pushstr.exit15:                                   ; preds = %168, %182
  %183 = phi %struct.lua_TValue.218* [ %181, %168 ], [ %.pre.i.14, %182 ]
  %184 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %183, i64 1
  store %struct.lua_TValue.218* %184, %struct.lua_TValue.218** %1, align 8, !tbaa !1
  call void @llvm.lifetime.end(i64 40, i8* %28) #1
  br label %.thread

; <label>:185                                     ; preds = %44
  %186 = call %union.TString.210* bitcast (%union.TString* (%struct.lua_State*, i8*, i64)* @luaS_newlstr to %union.TString.210* (%struct.lua_State.215*, i8*, i64)*)(%struct.lua_State.215* %L, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.430, i64 0, i64 0), i64 1) #1
  %187 = bitcast %struct.lua_TValue.218* %46 to %union.TString.210**
  store %union.TString.210* %186, %union.TString.210** %187, align 8, !tbaa !25
  %188 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %45, i64 1, i32 1
  store i32 4, i32* %188, align 4, !tbaa !10
  %189 = load i64, i64* %7, align 8, !tbaa !12
  %190 = load i64, i64* %9, align 8, !tbaa !1
  %191 = sub i64 %189, %190
  %192 = icmp slt i64 %191, 17
  %193 = inttoptr i64 %190 to %struct.lua_TValue.218*
  br i1 %192, label %194, label %pushstr.exit17

; <label>:194                                     ; preds = %185
  call void bitcast (void (%struct.lua_State*, i32)* @luaD_growstack to void (%struct.lua_State.215*, i32)*)(%struct.lua_State.215* %L, i32 1) #1
  %.pre.i.16 = load %struct.lua_TValue.218*, %struct.lua_TValue.218** %1, align 8, !tbaa !1
  br label %pushstr.exit17

pushstr.exit17:                                   ; preds = %185, %194
  %195 = phi %struct.lua_TValue.218* [ %193, %185 ], [ %.pre.i.16, %194 ]
  %196 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %195, i64 1
  store %struct.lua_TValue.218* %196, %struct.lua_TValue.218** %1, align 8, !tbaa !1
  br label %.thread

; <label>:197                                     ; preds = %44
  call void @llvm.lifetime.start(i64 3, i8* %19) #1
  store i8 37, i8* %19, align 1, !tbaa !76
  %198 = load i8, i8* %47, align 1, !tbaa !76
  store i8 %198, i8* %20, align 1, !tbaa !76
  store i8 0, i8* %21, align 1, !tbaa !76
  %199 = call i64 @strlen(i8* %19) #11
  %200 = call %union.TString.210* bitcast (%union.TString* (%struct.lua_State*, i8*, i64)* @luaS_newlstr to %union.TString.210* (%struct.lua_State.215*, i8*, i64)*)(%struct.lua_State.215* %L, i8* %19, i64 %199) #1
  %201 = bitcast %struct.lua_TValue.218* %46 to %union.TString.210**
  store %union.TString.210* %200, %union.TString.210** %201, align 8, !tbaa !25
  %202 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %45, i64 1, i32 1
  store i32 4, i32* %202, align 4, !tbaa !10
  %203 = load i64, i64* %7, align 8, !tbaa !12
  %204 = load i64, i64* %9, align 8, !tbaa !1
  %205 = sub i64 %203, %204
  %206 = icmp slt i64 %205, 17
  %207 = inttoptr i64 %204 to %struct.lua_TValue.218*
  br i1 %206, label %208, label %pushstr.exit19

; <label>:208                                     ; preds = %197
  call void bitcast (void (%struct.lua_State*, i32)* @luaD_growstack to void (%struct.lua_State.215*, i32)*)(%struct.lua_State.215* %L, i32 1) #1
  %.pre.i.18 = load %struct.lua_TValue.218*, %struct.lua_TValue.218** %1, align 8, !tbaa !1
  br label %pushstr.exit19

pushstr.exit19:                                   ; preds = %197, %208
  %209 = phi %struct.lua_TValue.218* [ %207, %197 ], [ %.pre.i.18, %208 ]
  %210 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %209, i64 1
  store %struct.lua_TValue.218* %210, %struct.lua_TValue.218** %1, align 8, !tbaa !1
  call void @llvm.lifetime.end(i64 3, i8* %19) #1
  br label %.thread

.thread:                                          ; preds = %pushstr.exit11, %pushstr.exit13, %129, %154, %pushstr.exit15, %pushstr.exit17, %pushstr.exit19
  %211 = phi %struct.lua_TValue.218* [ %77, %pushstr.exit11 ], [ %105, %pushstr.exit13 ], [ %131, %129 ], [ %156, %154 ], [ %184, %pushstr.exit15 ], [ %196, %pushstr.exit17 ], [ %210, %pushstr.exit19 ]
  %212 = add nuw nsw i32 %n.022, 2
  %213 = getelementptr inbounds i8, i8* %31, i64 2
  %214 = call i8* @strchr(i8* %213, i32 37) #1
  %215 = icmp eq i8* %214, null
  br i1 %215, label %._crit_edge.loopexit, label %29

._crit_edge.loopexit:                             ; preds = %.thread
  %.lcssa42 = phi i8* [ %213, %.thread ]
  %.lcssa41 = phi i32 [ %212, %.thread ]
  %.lcssa40 = phi %struct.lua_TValue.218* [ %211, %.thread ]
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %pushstr.exit
  %.lcssa = phi %struct.lua_TValue.218* [ %16, %pushstr.exit ], [ %.lcssa40, %._crit_edge.loopexit ]
  %.0.lcssa = phi i8* [ %fmt, %pushstr.exit ], [ %.lcssa42, %._crit_edge.loopexit ]
  %n.0.lcssa = phi i32 [ 1, %pushstr.exit ], [ %.lcssa41, %._crit_edge.loopexit ]
  %216 = call i64 @strlen(i8* %.0.lcssa) #11
  %217 = call %union.TString.210* bitcast (%union.TString* (%struct.lua_State*, i8*, i64)* @luaS_newlstr to %union.TString.210* (%struct.lua_State.215*, i8*, i64)*)(%struct.lua_State.215* %L, i8* %.0.lcssa, i64 %216) #1
  %218 = bitcast %struct.lua_TValue.218* %.lcssa to %union.TString.210**
  store %union.TString.210* %217, %union.TString.210** %218, align 8, !tbaa !25
  %219 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %.lcssa, i64 0, i32 1
  store i32 4, i32* %219, align 4, !tbaa !10
  %220 = load i64, i64* %7, align 8, !tbaa !12
  %221 = load i64, i64* %9, align 8, !tbaa !1
  %222 = sub i64 %220, %221
  %223 = icmp slt i64 %222, 17
  %224 = inttoptr i64 %221 to %struct.lua_TValue.218*
  br i1 %223, label %225, label %pushstr.exit21

; <label>:225                                     ; preds = %._crit_edge
  call void bitcast (void (%struct.lua_State*, i32)* @luaD_growstack to void (%struct.lua_State.215*, i32)*)(%struct.lua_State.215* %L, i32 1) #1
  %.pre.i.20 = load %struct.lua_TValue.218*, %struct.lua_TValue.218** %1, align 8, !tbaa !1
  br label %pushstr.exit21

pushstr.exit21:                                   ; preds = %._crit_edge, %225
  %226 = phi %struct.lua_TValue.218* [ %224, %._crit_edge ], [ %.pre.i.20, %225 ]
  %227 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %226, i64 1
  store %struct.lua_TValue.218* %227, %struct.lua_TValue.218** %1, align 8, !tbaa !1
  %228 = add nsw i32 %n.0.lcssa, 1
  %.cast = ptrtoint %struct.lua_TValue.218* %227 to i64
  %229 = getelementptr inbounds %struct.lua_State.215, %struct.lua_State.215* %L, i64 0, i32 5
  %230 = bitcast %struct.lua_TValue.218** %229 to i64*
  %231 = load i64, i64* %230, align 8, !tbaa !11
  %232 = sub i64 %.cast, %231
  %233 = lshr exact i64 %232, 4
  %234 = trunc i64 %233 to i32
  %235 = add nsw i32 %234, -1
  call void @luaV_concat(%struct.lua_State.215* %L, i32 %228, i32 %235) #1
  %236 = load %struct.lua_TValue.218*, %struct.lua_TValue.218** %1, align 8, !tbaa !1
  %237 = sext i32 %n.0.lcssa to i64
  %238 = sub nsw i64 0, %237
  %239 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %236, i64 %238
  store %struct.lua_TValue.218* %239, %struct.lua_TValue.218** %1, align 8, !tbaa !1
  %240 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %239, i64 -1
  %241 = bitcast %struct.lua_TValue.218* %240 to %union.TString.210**
  %242 = load %union.TString.210*, %union.TString.210** %241, align 8, !tbaa !25
  %243 = getelementptr inbounds %union.TString.210, %union.TString.210* %242, i64 1
  %244 = bitcast %union.TString.210* %243 to i8*
  ret i8* %244
}

; Function Attrs: nounwind
declare i32 @sprintf(i8* nocapture, i8* nocapture readonly, ...) #5

; Function Attrs: nounwind uwtable
define hidden i8* @luaO_pushfstring(%struct.lua_State.215* %L, i8* %fmt, ...) #0 {
  %argp = alloca [1 x %struct.__va_list_tag], align 16
  %1 = bitcast [1 x %struct.__va_list_tag]* %argp to i8*
  call void @llvm.lifetime.start(i64 24, i8* %1) #1
  %2 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %argp, i64 0, i64 0
  call void @llvm.va_start(i8* %1)
  %3 = call i8* @luaO_pushvfstring(%struct.lua_State.215* %L, i8* %fmt, %struct.__va_list_tag* %2)
  call void @llvm.va_end(i8* %1)
  call void @llvm.lifetime.end(i64 24, i8* %1) #1
  ret i8* %3
}

; Function Attrs: nounwind uwtable
define hidden void @luaO_chunkid(i8* %out, i8* nocapture readonly %source, i64 %bufflen) #0 {
  %1 = load i8, i8* %source, align 1, !tbaa !76
  switch i8 %1, label %switch.early.test.preheader [
    i8 61, label %2
    i8 64, label %7
    i8 0, label %__strcspn_c2.exit
  ]

switch.early.test.preheader:                      ; preds = %0
  br label %switch.early.test

; <label>:2                                       ; preds = %0
  %3 = getelementptr inbounds i8, i8* %source, i64 1
  %4 = tail call i8* @strncpy(i8* %out, i8* %3, i64 %bufflen) #1
  %5 = add i64 %bufflen, -1
  %6 = getelementptr inbounds i8, i8* %out, i64 %5
  store i8 0, i8* %6, align 1, !tbaa !76
  br label %32

; <label>:7                                       ; preds = %0
  %8 = getelementptr inbounds i8, i8* %source, i64 1
  %9 = add i64 %bufflen, -8
  %10 = tail call i64 @strlen(i8* %8) #11
  store i8 0, i8* %out, align 1
  %11 = icmp ugt i64 %10, %9
  br i1 %11, label %12, label %16

; <label>:12                                      ; preds = %7
  %13 = sub i64 %10, %9
  %14 = getelementptr inbounds i8, i8* %8, i64 %13
  %strlen3 = tail call i64 @strlen(i8* %out)
  %endptr4 = getelementptr i8, i8* %out, i64 %strlen3
  %15 = bitcast i8* %endptr4 to i32*
  store i32 3026478, i32* %15, align 1
  br label %16

; <label>:16                                      ; preds = %12, %7
  %.0 = phi i8* [ %14, %12 ], [ %8, %7 ]
  %17 = tail call i8* @strcat(i8* %out, i8* %.0) #1
  br label %32

switch.early.test:                                ; preds = %switch.early.test.preheader, %switch.early.test._crit_edge
  %__result.0.i6 = phi i64 [ %19, %switch.early.test._crit_edge ], [ 0, %switch.early.test.preheader ]
  %18 = phi i8 [ %.pre, %switch.early.test._crit_edge ], [ %1, %switch.early.test.preheader ]
  %19 = add i64 %__result.0.i6, 1
  %20 = sext i8 %18 to i32
  switch i32 %20, label %switch.early.test._crit_edge [
    i32 13, label %__strcspn_c2.exit.loopexit
    i32 10, label %__strcspn_c2.exit.loopexit
  ]

switch.early.test._crit_edge:                     ; preds = %switch.early.test
  %.phi.trans.insert = getelementptr inbounds i8, i8* %source, i64 %19
  %.pre = load i8, i8* %.phi.trans.insert, align 1, !tbaa !76
  %notlhs.i = icmp eq i8 %.pre, 0
  br i1 %notlhs.i, label %__strcspn_c2.exit.loopexit, label %switch.early.test

__strcspn_c2.exit.loopexit:                       ; preds = %switch.early.test._crit_edge, %switch.early.test, %switch.early.test
  %__result.0.i.lcssa.ph = phi i64 [ %__result.0.i6, %switch.early.test ], [ %__result.0.i6, %switch.early.test ], [ %19, %switch.early.test._crit_edge ]
  br label %__strcspn_c2.exit

__strcspn_c2.exit:                                ; preds = %__strcspn_c2.exit.loopexit, %0
  %__result.0.i.lcssa = phi i64 [ 0, %0 ], [ %__result.0.i.lcssa.ph, %__strcspn_c2.exit.loopexit ]
  %21 = add i64 %bufflen, -17
  %22 = icmp ugt i64 %__result.0.i.lcssa, %21
  %len.0 = select i1 %22, i64 %21, i64 %__result.0.i.lcssa
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %out, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.6.431, i64 0, i64 0), i64 10, i32 1, i1 false)
  %23 = getelementptr inbounds i8, i8* %source, i64 %len.0
  %24 = load i8, i8* %23, align 1, !tbaa !76
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %29, label %26

; <label>:26                                      ; preds = %__strcspn_c2.exit
  %27 = tail call i8* @strncat(i8* %out, i8* %source, i64 %len.0) #1
  %strlen1 = tail call i64 @strlen(i8* %out)
  %endptr2 = getelementptr i8, i8* %out, i64 %strlen1
  %28 = bitcast i8* %endptr2 to i32*
  store i32 3026478, i32* %28, align 1
  br label %31

; <label>:29                                      ; preds = %__strcspn_c2.exit
  %30 = tail call i8* @strcat(i8* %out, i8* %source) #1
  br label %31

; <label>:31                                      ; preds = %29, %26
  %strlen = tail call i64 @strlen(i8* %out)
  %endptr = getelementptr i8, i8* %out, i64 %strlen
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %endptr, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7.432, i64 0, i64 0), i64 3, i32 1, i1 false)
  br label %32

; <label>:32                                      ; preds = %16, %31, %2
  ret void
}

; Function Attrs: nounwind
declare i8* @strncpy(i8*, i8* nocapture readonly, i64) #5

; Function Attrs: nounwind
declare i8* @strcat(i8*, i8* nocapture readonly) #5

; Function Attrs: nounwind
declare i8* @strncat(i8*, i8* nocapture readonly, i64) #5

; Function Attrs: nounwind uwtable
define i32 @luaopen_os(%struct.lua_State* %L) #0 {
  tail call void @luaL_register(%struct.lua_State* %L, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.475, i64 0, i64 0), %struct.luaL_Reg* getelementptr inbounds ([12 x %struct.luaL_Reg], [12 x %struct.luaL_Reg]* @syslib, i64 0, i64 0)) #1
  ret i32 1
}

; Function Attrs: nounwind
declare i64 @clock() #5

; Function Attrs: nounwind
declare i64 @time(i64*) #5

; Function Attrs: nounwind
declare %struct.tm* @gmtime(i64*) #5

; Function Attrs: nounwind
declare %struct.tm* @localtime(i64*) #5

; Function Attrs: nounwind
declare i64 @strftime(i8*, i64, i8*, %struct.tm*) #5

; Function Attrs: nounwind readnone
declare double @difftime(i64, i64) #7

declare i32 @system(i8* nocapture readonly) #6

; Function Attrs: nounwind
declare i32 @remove(i8* nocapture readonly) #5

; Function Attrs: nounwind
declare i32 @rename(i8* nocapture readonly, i8* nocapture readonly) #5

; Function Attrs: nounwind
declare i8* @setlocale(i32, i8*) #5

; Function Attrs: nounwind
declare i64 @mktime(%struct.tm* nocapture) #5

declare i32 @mkstemp(i8*) #6

declare i32 @close(i32) #6

; Function Attrs: nounwind uwtable
define internal i32 @os_clock(%struct.lua_State* %L) #0 {
  %1 = tail call i64 @clock() #1
  %2 = sitofp i64 %1 to double
  %3 = fdiv double %2, 1.000000e+06
  tail call void @lua_pushnumber(%struct.lua_State* %L, double %3) #1
  ret i32 1
}

; Function Attrs: nounwind uwtable
define internal i32 @os_date(%struct.lua_State* %L) #0 {
  %t = alloca i64, align 8
  %cc = alloca [3 x i8], align 1
  %b = alloca %struct.luaL_Buffer, align 8
  %buff = alloca [200 x i8], align 16
  %1 = tail call i8* @luaL_optlstring(%struct.lua_State* %L, i32 1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12.503, i64 0, i64 0), i64* null) #1
  %2 = bitcast i64* %t to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2) #1
  %3 = tail call i32 @lua_type(%struct.lua_State* %L, i32 2) #1
  %4 = icmp slt i32 %3, 1
  br i1 %4, label %5, label %7

; <label>:5                                       ; preds = %0
  %6 = tail call i64 @time(i64* null) #1
  br label %10

; <label>:7                                       ; preds = %0
  %8 = tail call double @luaL_checknumber(%struct.lua_State* %L, i32 2) #1
  %9 = fptosi double %8 to i64
  br label %10

; <label>:10                                      ; preds = %7, %5
  %11 = phi i64 [ %6, %5 ], [ %9, %7 ]
  store i64 %11, i64* %t, align 8, !tbaa !39
  %12 = load i8, i8* %1, align 1, !tbaa !76
  %13 = icmp eq i8 %12, 33
  br i1 %13, label %14, label %17

; <label>:14                                      ; preds = %10
  %15 = call %struct.tm* @gmtime(i64* nonnull %t) #1
  %16 = getelementptr inbounds i8, i8* %1, i64 1
  br label %19

; <label>:17                                      ; preds = %10
  %18 = call %struct.tm* @localtime(i64* nonnull %t) #1
  br label %19

; <label>:19                                      ; preds = %17, %14
  %stm.0 = phi %struct.tm* [ %15, %14 ], [ %18, %17 ]
  %s.0 = phi i8* [ %16, %14 ], [ %1, %17 ]
  %20 = icmp eq %struct.tm* %stm.0, null
  br i1 %20, label %21, label %22

; <label>:21                                      ; preds = %19
  call void @lua_pushnil(%struct.lua_State* %L) #1
  br label %setboolfield.exit

; <label>:22                                      ; preds = %19
  %23 = load i8, i8* %s.0, align 1, !tbaa !76
  %24 = icmp eq i8 %23, 42
  br i1 %24, label %25, label %.thread

; <label>:25                                      ; preds = %22
  %26 = getelementptr inbounds i8, i8* %s.0, i64 1
  %27 = load i8, i8* %26, align 1, !tbaa !76
  %28 = icmp eq i8 %27, 116
  br i1 %28, label %29, label %.thread

; <label>:29                                      ; preds = %25
  %30 = getelementptr inbounds i8, i8* %s.0, i64 2
  %31 = load i8, i8* %30, align 1, !tbaa !76
  %phitmp = icmp eq i8 %31, 0
  br i1 %phitmp, label %32, label %.thread

; <label>:32                                      ; preds = %29
  call void @lua_createtable(%struct.lua_State* %L, i32 0, i32 9) #1
  %33 = getelementptr inbounds %struct.tm, %struct.tm* %stm.0, i64 0, i32 0
  %34 = load i32, i32* %33, align 4, !tbaa !235
  %35 = sext i32 %34 to i64
  call void @lua_pushinteger(%struct.lua_State* %L, i64 %35) #1
  call void @lua_setfield(%struct.lua_State* %L, i32 -2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14.489, i64 0, i64 0)) #1
  %36 = getelementptr inbounds %struct.tm, %struct.tm* %stm.0, i64 0, i32 1
  %37 = load i32, i32* %36, align 4, !tbaa !237
  %38 = sext i32 %37 to i64
  call void @lua_pushinteger(%struct.lua_State* %L, i64 %38) #1
  call void @lua_setfield(%struct.lua_State* %L, i32 -2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.15.490, i64 0, i64 0)) #1
  %39 = getelementptr inbounds %struct.tm, %struct.tm* %stm.0, i64 0, i32 2
  %40 = load i32, i32* %39, align 4, !tbaa !238
  %41 = sext i32 %40 to i64
  call void @lua_pushinteger(%struct.lua_State* %L, i64 %41) #1
  call void @lua_setfield(%struct.lua_State* %L, i32 -2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.16.491, i64 0, i64 0)) #1
  %42 = getelementptr inbounds %struct.tm, %struct.tm* %stm.0, i64 0, i32 3
  %43 = load i32, i32* %42, align 4, !tbaa !239
  %44 = sext i32 %43 to i64
  call void @lua_pushinteger(%struct.lua_State* %L, i64 %44) #1
  call void @lua_setfield(%struct.lua_State* %L, i32 -2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.17.492, i64 0, i64 0)) #1
  %45 = getelementptr inbounds %struct.tm, %struct.tm* %stm.0, i64 0, i32 4
  %46 = load i32, i32* %45, align 4, !tbaa !240
  %47 = add nsw i32 %46, 1
  %48 = sext i32 %47 to i64
  call void @lua_pushinteger(%struct.lua_State* %L, i64 %48) #1
  call void @lua_setfield(%struct.lua_State* %L, i32 -2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.18.494, i64 0, i64 0)) #1
  %49 = getelementptr inbounds %struct.tm, %struct.tm* %stm.0, i64 0, i32 5
  %50 = load i32, i32* %49, align 4, !tbaa !241
  %51 = add nsw i32 %50, 1900
  %52 = sext i32 %51 to i64
  call void @lua_pushinteger(%struct.lua_State* %L, i64 %52) #1
  call void @lua_setfield(%struct.lua_State* %L, i32 -2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.19.495, i64 0, i64 0)) #1
  %53 = getelementptr inbounds %struct.tm, %struct.tm* %stm.0, i64 0, i32 6
  %54 = load i32, i32* %53, align 4, !tbaa !242
  %55 = add nsw i32 %54, 1
  %56 = sext i32 %55 to i64
  call void @lua_pushinteger(%struct.lua_State* %L, i64 %56) #1
  call void @lua_setfield(%struct.lua_State* %L, i32 -2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.20.504, i64 0, i64 0)) #1
  %57 = getelementptr inbounds %struct.tm, %struct.tm* %stm.0, i64 0, i32 7
  %58 = load i32, i32* %57, align 4, !tbaa !243
  %59 = add nsw i32 %58, 1
  %60 = sext i32 %59 to i64
  call void @lua_pushinteger(%struct.lua_State* %L, i64 %60) #1
  call void @lua_setfield(%struct.lua_State* %L, i32 -2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.21.505, i64 0, i64 0)) #1
  %61 = getelementptr inbounds %struct.tm, %struct.tm* %stm.0, i64 0, i32 8
  %62 = load i32, i32* %61, align 4, !tbaa !244
  %63 = icmp slt i32 %62, 0
  br i1 %63, label %setboolfield.exit, label %64

; <label>:64                                      ; preds = %32
  call void @lua_pushboolean(%struct.lua_State* %L, i32 %62) #1
  call void @lua_setfield(%struct.lua_State* %L, i32 -2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.22.496, i64 0, i64 0)) #1
  br label %setboolfield.exit

.thread:                                          ; preds = %22, %25, %29
  %65 = getelementptr inbounds [3 x i8], [3 x i8]* %cc, i64 0, i64 0
  call void @llvm.lifetime.start(i64 3, i8* %65) #1
  %66 = bitcast %struct.luaL_Buffer* %b to i8*
  call void @llvm.lifetime.start(i64 8216, i8* %66) #1
  store i8 37, i8* %65, align 1, !tbaa !76
  %67 = getelementptr inbounds [3 x i8], [3 x i8]* %cc, i64 0, i64 2
  store i8 0, i8* %67, align 1, !tbaa !76
  call void @luaL_buffinit(%struct.lua_State* %L, %struct.luaL_Buffer* nonnull %b) #1
  %68 = getelementptr inbounds %struct.luaL_Buffer, %struct.luaL_Buffer* %b, i64 0, i32 0
  %69 = getelementptr inbounds %struct.luaL_Buffer, %struct.luaL_Buffer* %b, i64 0, i32 3, i64 8192
  %70 = getelementptr inbounds [200 x i8], [200 x i8]* %buff, i64 0, i64 0
  %71 = getelementptr inbounds [3 x i8], [3 x i8]* %cc, i64 0, i64 1
  br label %72

; <label>:72                                      ; preds = %89, %.thread
  %s.1 = phi i8* [ %s.0, %.thread ], [ %90, %89 ]
  %73 = load i8, i8* %s.1, align 1, !tbaa !76
  switch i8 %73, label %78 [
    i8 0, label %91
    i8 37, label %74
  ]

; <label>:74                                      ; preds = %72
  %75 = getelementptr inbounds i8, i8* %s.1, i64 1
  %76 = load i8, i8* %75, align 1, !tbaa !76
  %77 = icmp eq i8 %76, 0
  br i1 %77, label %78, label %87

; <label>:78                                      ; preds = %72, %74
  %79 = load i8*, i8** %68, align 8, !tbaa !79
  %80 = icmp ult i8* %79, %69
  br i1 %80, label %83, label %81

; <label>:81                                      ; preds = %78
  %82 = call i8* @luaL_prepbuffer(%struct.luaL_Buffer* nonnull %b) #1
  %.pre = load i8, i8* %s.1, align 1, !tbaa !76
  %.pre7 = load i8*, i8** %68, align 8, !tbaa !79
  br label %83

; <label>:83                                      ; preds = %81, %78
  %84 = phi i8* [ %.pre7, %81 ], [ %79, %78 ]
  %85 = phi i8 [ %.pre, %81 ], [ %73, %78 ]
  %86 = getelementptr inbounds i8, i8* %84, i64 1
  store i8* %86, i8** %68, align 8, !tbaa !79
  store i8 %85, i8* %84, align 1, !tbaa !76
  br label %89

; <label>:87                                      ; preds = %74
  call void @llvm.lifetime.start(i64 200, i8* %70) #1
  store i8 %76, i8* %71, align 1, !tbaa !76
  %88 = call i64 @strftime(i8* %70, i64 200, i8* %65, %struct.tm* %stm.0) #1
  call void @luaL_addlstring(%struct.luaL_Buffer* nonnull %b, i8* %70, i64 %88) #1
  call void @llvm.lifetime.end(i64 200, i8* %70) #1
  br label %89

; <label>:89                                      ; preds = %83, %87
  %s.2 = phi i8* [ %s.1, %83 ], [ %75, %87 ]
  %90 = getelementptr inbounds i8, i8* %s.2, i64 1
  br label %72

; <label>:91                                      ; preds = %72
  call void @luaL_pushresult(%struct.luaL_Buffer* nonnull %b) #1
  call void @llvm.lifetime.end(i64 8216, i8* %66) #1
  call void @llvm.lifetime.end(i64 3, i8* %65) #1
  br label %setboolfield.exit

setboolfield.exit:                                ; preds = %64, %32, %91, %21
  call void @llvm.lifetime.end(i64 8, i8* %2) #1
  ret i32 1
}

; Function Attrs: nounwind uwtable
define internal i32 @os_difftime(%struct.lua_State* %L) #0 {
  %1 = tail call double @luaL_checknumber(%struct.lua_State* %L, i32 1) #1
  %2 = fptosi double %1 to i64
  %3 = tail call double @luaL_optnumber(%struct.lua_State* %L, i32 2, double 0.000000e+00) #1
  %4 = fptosi double %3 to i64
  %5 = tail call double @difftime(i64 %2, i64 %4) #12
  tail call void @lua_pushnumber(%struct.lua_State* %L, double %5) #1
  ret i32 1
}

; Function Attrs: nounwind uwtable
define internal i32 @os_execute(%struct.lua_State* %L) #0 {
  %1 = tail call i8* @luaL_optlstring(%struct.lua_State* %L, i32 1, i8* null, i64* null) #1
  %2 = tail call i32 @system(i8* %1) #1
  %3 = sext i32 %2 to i64
  tail call void @lua_pushinteger(%struct.lua_State* %L, i64 %3) #1
  ret i32 1
}

; Function Attrs: noreturn nounwind uwtable
define internal i32 @os_exit(%struct.lua_State* %L) #8 {
  %1 = tail call i64 @luaL_optinteger(%struct.lua_State* %L, i32 1, i64 0) #1
  %2 = trunc i64 %1 to i32
  tail call void @exit(i32 %2) #15
  unreachable
}

; Function Attrs: nounwind uwtable
define internal i32 @os_getenv(%struct.lua_State* %L) #0 {
  %1 = tail call i8* @luaL_checklstring(%struct.lua_State* %L, i32 1, i64* null) #1
  %2 = tail call i8* @getenv(i8* %1) #1
  tail call void @lua_pushstring(%struct.lua_State* %L, i8* %2) #1
  ret i32 1
}

; Function Attrs: nounwind uwtable
define internal i32 @os_remove(%struct.lua_State* %L) #0 {
  %1 = tail call i8* @luaL_checklstring(%struct.lua_State* %L, i32 1, i64* null) #1
  %2 = tail call i32 @remove(i8* %1) #1
  %3 = icmp eq i32 %2, 0
  %4 = tail call i32* @__errno_location() #12
  %5 = load i32, i32* %4, align 4, !tbaa !38
  br i1 %3, label %6, label %7

; <label>:6                                       ; preds = %0
  tail call void @lua_pushboolean(%struct.lua_State* %L, i32 1) #1
  br label %os_pushresult.exit

; <label>:7                                       ; preds = %0
  tail call void @lua_pushnil(%struct.lua_State* %L) #1
  %8 = tail call i8* @strerror(i32 %5) #1
  %9 = tail call i8* (%struct.lua_State*, i8*, ...) @lua_pushfstring(%struct.lua_State* %L, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.23.502, i64 0, i64 0), i8* %1, i8* %8) #1
  %10 = sext i32 %5 to i64
  tail call void @lua_pushinteger(%struct.lua_State* %L, i64 %10) #1
  br label %os_pushresult.exit

os_pushresult.exit:                               ; preds = %6, %7
  %.0.i = phi i32 [ 1, %6 ], [ 3, %7 ]
  ret i32 %.0.i
}

; Function Attrs: nounwind uwtable
define internal i32 @os_rename(%struct.lua_State* %L) #0 {
  %1 = tail call i8* @luaL_checklstring(%struct.lua_State* %L, i32 1, i64* null) #1
  %2 = tail call i8* @luaL_checklstring(%struct.lua_State* %L, i32 2, i64* null) #1
  %3 = tail call i32 @rename(i8* %1, i8* %2) #1
  %4 = icmp eq i32 %3, 0
  %5 = tail call i32* @__errno_location() #12
  %6 = load i32, i32* %5, align 4, !tbaa !38
  br i1 %4, label %7, label %8

; <label>:7                                       ; preds = %0
  tail call void @lua_pushboolean(%struct.lua_State* %L, i32 1) #1
  br label %os_pushresult.exit

; <label>:8                                       ; preds = %0
  tail call void @lua_pushnil(%struct.lua_State* %L) #1
  %9 = tail call i8* @strerror(i32 %6) #1
  %10 = tail call i8* (%struct.lua_State*, i8*, ...) @lua_pushfstring(%struct.lua_State* %L, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.23.502, i64 0, i64 0), i8* %1, i8* %9) #1
  %11 = sext i32 %6 to i64
  tail call void @lua_pushinteger(%struct.lua_State* %L, i64 %11) #1
  br label %os_pushresult.exit

os_pushresult.exit:                               ; preds = %7, %8
  %.0.i = phi i32 [ 1, %7 ], [ 3, %8 ]
  ret i32 %.0.i
}

; Function Attrs: nounwind uwtable
define internal i32 @os_setlocale(%struct.lua_State* %L) #0 {
  %1 = tail call i8* @luaL_optlstring(%struct.lua_State* %L, i32 1, i8* null, i64* null) #1
  %2 = tail call i32 @luaL_checkoption(%struct.lua_State* %L, i32 2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.24.497, i64 0, i64 0), i8** getelementptr inbounds ([7 x i8*], [7 x i8*]* @os_setlocale.catnames, i64 0, i64 0)) #1
  %3 = sext i32 %2 to i64
  %4 = getelementptr inbounds [6 x i32], [6 x i32]* @os_setlocale.cat, i64 0, i64 %3
  %5 = load i32, i32* %4, align 4, !tbaa !38
  %6 = tail call i8* @setlocale(i32 %5, i8* %1) #1
  tail call void @lua_pushstring(%struct.lua_State* %L, i8* %6) #1
  ret i32 1
}

; Function Attrs: nounwind uwtable
define internal i32 @os_time(%struct.lua_State* %L) #0 {
  %ts = alloca %struct.tm, align 8
  %1 = tail call i32 @lua_type(%struct.lua_State* %L, i32 1) #1
  %2 = icmp slt i32 %1, 1
  br i1 %2, label %3, label %5

; <label>:3                                       ; preds = %0
  %4 = tail call i64 @time(i64* null) #1
  br label %58

; <label>:5                                       ; preds = %0
  %6 = bitcast %struct.tm* %ts to i8*
  call void @llvm.lifetime.start(i64 56, i8* %6) #1
  tail call void @luaL_checktype(%struct.lua_State* %L, i32 1, i32 5) #1
  tail call void @lua_settop(%struct.lua_State* %L, i32 1) #1
  tail call void @lua_getfield(%struct.lua_State* %L, i32 -1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14.489, i64 0, i64 0)) #1
  %7 = tail call i32 @lua_isnumber(%struct.lua_State* %L, i32 -1) #1
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %getfield.exit, label %9

; <label>:9                                       ; preds = %5
  %10 = tail call i64 @lua_tointeger(%struct.lua_State* %L, i32 -1) #1
  %11 = trunc i64 %10 to i32
  br label %getfield.exit

getfield.exit:                                    ; preds = %5, %9
  %res.0.i = phi i32 [ %11, %9 ], [ 0, %5 ]
  tail call void @lua_settop(%struct.lua_State* %L, i32 -2) #1
  %12 = getelementptr inbounds %struct.tm, %struct.tm* %ts, i64 0, i32 0
  store i32 %res.0.i, i32* %12, align 8, !tbaa !235
  tail call void @lua_getfield(%struct.lua_State* %L, i32 -1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.15.490, i64 0, i64 0)) #1
  %13 = tail call i32 @lua_isnumber(%struct.lua_State* %L, i32 -1) #1
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %getfield.exit2, label %15

; <label>:15                                      ; preds = %getfield.exit
  %16 = tail call i64 @lua_tointeger(%struct.lua_State* %L, i32 -1) #1
  %17 = trunc i64 %16 to i32
  br label %getfield.exit2

getfield.exit2:                                   ; preds = %getfield.exit, %15
  %res.0.i.1 = phi i32 [ %17, %15 ], [ 0, %getfield.exit ]
  tail call void @lua_settop(%struct.lua_State* %L, i32 -2) #1
  %18 = getelementptr inbounds %struct.tm, %struct.tm* %ts, i64 0, i32 1
  store i32 %res.0.i.1, i32* %18, align 4, !tbaa !237
  tail call void @lua_getfield(%struct.lua_State* %L, i32 -1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.16.491, i64 0, i64 0)) #1
  %19 = tail call i32 @lua_isnumber(%struct.lua_State* %L, i32 -1) #1
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %getfield.exit4, label %21

; <label>:21                                      ; preds = %getfield.exit2
  %22 = tail call i64 @lua_tointeger(%struct.lua_State* %L, i32 -1) #1
  %23 = trunc i64 %22 to i32
  br label %getfield.exit4

getfield.exit4:                                   ; preds = %getfield.exit2, %21
  %res.0.i.3 = phi i32 [ %23, %21 ], [ 12, %getfield.exit2 ]
  tail call void @lua_settop(%struct.lua_State* %L, i32 -2) #1
  %24 = getelementptr inbounds %struct.tm, %struct.tm* %ts, i64 0, i32 2
  store i32 %res.0.i.3, i32* %24, align 8, !tbaa !238
  tail call void @lua_getfield(%struct.lua_State* %L, i32 -1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.17.492, i64 0, i64 0)) #1
  %25 = tail call i32 @lua_isnumber(%struct.lua_State* %L, i32 -1) #1
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %30, label %27

; <label>:27                                      ; preds = %getfield.exit4
  %28 = tail call i64 @lua_tointeger(%struct.lua_State* %L, i32 -1) #1
  %29 = trunc i64 %28 to i32
  tail call void @lua_settop(%struct.lua_State* %L, i32 -2) #1
  br label %getfield.exit6

; <label>:30                                      ; preds = %getfield.exit4
  %31 = tail call i32 (%struct.lua_State*, i8*, ...) @luaL_error(%struct.lua_State* %L, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.29.493, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.17.492, i64 0, i64 0)) #1
  br label %getfield.exit6

getfield.exit6:                                   ; preds = %30, %27
  %.0.i = phi i32 [ %29, %27 ], [ %31, %30 ]
  %32 = getelementptr inbounds %struct.tm, %struct.tm* %ts, i64 0, i32 3
  store i32 %.0.i, i32* %32, align 4, !tbaa !239
  tail call void @lua_getfield(%struct.lua_State* %L, i32 -1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.18.494, i64 0, i64 0)) #1
  %33 = tail call i32 @lua_isnumber(%struct.lua_State* %L, i32 -1) #1
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %38, label %35

; <label>:35                                      ; preds = %getfield.exit6
  %36 = tail call i64 @lua_tointeger(%struct.lua_State* %L, i32 -1) #1
  %37 = trunc i64 %36 to i32
  tail call void @lua_settop(%struct.lua_State* %L, i32 -2) #1
  br label %getfield.exit9

; <label>:38                                      ; preds = %getfield.exit6
  %39 = tail call i32 (%struct.lua_State*, i8*, ...) @luaL_error(%struct.lua_State* %L, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.29.493, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.18.494, i64 0, i64 0)) #1
  br label %getfield.exit9

getfield.exit9:                                   ; preds = %38, %35
  %.0.i.8 = phi i32 [ %37, %35 ], [ %39, %38 ]
  %40 = add nsw i32 %.0.i.8, -1
  %41 = getelementptr inbounds %struct.tm, %struct.tm* %ts, i64 0, i32 4
  store i32 %40, i32* %41, align 8, !tbaa !240
  tail call void @lua_getfield(%struct.lua_State* %L, i32 -1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.19.495, i64 0, i64 0)) #1
  %42 = tail call i32 @lua_isnumber(%struct.lua_State* %L, i32 -1) #1
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %47, label %44

; <label>:44                                      ; preds = %getfield.exit9
  %45 = tail call i64 @lua_tointeger(%struct.lua_State* %L, i32 -1) #1
  %46 = trunc i64 %45 to i32
  tail call void @lua_settop(%struct.lua_State* %L, i32 -2) #1
  br label %getfield.exit12

; <label>:47                                      ; preds = %getfield.exit9
  %48 = tail call i32 (%struct.lua_State*, i8*, ...) @luaL_error(%struct.lua_State* %L, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.29.493, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.19.495, i64 0, i64 0)) #1
  br label %getfield.exit12

getfield.exit12:                                  ; preds = %47, %44
  %.0.i.11 = phi i32 [ %46, %44 ], [ %48, %47 ]
  %49 = add nsw i32 %.0.i.11, -1900
  %50 = getelementptr inbounds %struct.tm, %struct.tm* %ts, i64 0, i32 5
  store i32 %49, i32* %50, align 4, !tbaa !241
  tail call void @lua_getfield(%struct.lua_State* %L, i32 -1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.22.496, i64 0, i64 0)) #1
  %51 = tail call i32 @lua_type(%struct.lua_State* %L, i32 -1) #1
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %getboolfield.exit, label %53

; <label>:53                                      ; preds = %getfield.exit12
  %54 = tail call i32 @lua_toboolean(%struct.lua_State* %L, i32 -1) #1
  br label %getboolfield.exit

getboolfield.exit:                                ; preds = %getfield.exit12, %53
  %55 = phi i32 [ %54, %53 ], [ -1, %getfield.exit12 ]
  tail call void @lua_settop(%struct.lua_State* %L, i32 -2) #1
  %56 = getelementptr inbounds %struct.tm, %struct.tm* %ts, i64 0, i32 8
  store i32 %55, i32* %56, align 8, !tbaa !244
  %57 = call i64 @mktime(%struct.tm* nonnull %ts) #1
  call void @llvm.lifetime.end(i64 56, i8* %6) #1
  br label %58

; <label>:58                                      ; preds = %getboolfield.exit, %3
  %t.0 = phi i64 [ %4, %3 ], [ %57, %getboolfield.exit ]
  %59 = icmp eq i64 %t.0, -1
  br i1 %59, label %60, label %61

; <label>:60                                      ; preds = %58
  tail call void @lua_pushnil(%struct.lua_State* %L) #1
  br label %63

; <label>:61                                      ; preds = %58
  %62 = sitofp i64 %t.0 to double
  tail call void @lua_pushnumber(%struct.lua_State* %L, double %62) #1
  br label %63

; <label>:63                                      ; preds = %61, %60
  ret i32 1
}

; Function Attrs: nounwind uwtable
define internal i32 @os_tmpname(%struct.lua_State* %L) #0 {
  %buff = alloca [32 x i8], align 16
  %1 = getelementptr inbounds [32 x i8], [32 x i8]* %buff, i64 0, i64 0
  call void @llvm.lifetime.start(i64 32, i8* %1) #1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.30.487, i64 0, i64 0), i64 16, i32 1, i1 false)
  %2 = call i32 @mkstemp(i8* %1) #1
  %cond = icmp eq i32 %2, -1
  br i1 %cond, label %5, label %3

; <label>:3                                       ; preds = %0
  %4 = call i32 @close(i32 %2) #1
  call void @lua_pushstring(%struct.lua_State* %L, i8* %1) #1
  br label %7

; <label>:5                                       ; preds = %0
  %6 = call i32 (%struct.lua_State*, i8*, ...) @luaL_error(%struct.lua_State* %L, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.31.488, i64 0, i64 0)) #1
  br label %7

; <label>:7                                       ; preds = %3, %5
  %.0 = phi i32 [ %6, %5 ], [ 1, %3 ]
  call void @llvm.lifetime.end(i64 32, i8* %1) #1
  ret i32 %.0
}

; Function Attrs: nounwind uwtable
define hidden %struct.Proto.120* @luaY_parser(%struct.lua_State.115* %L, %struct.Zio.243* %z, %struct.Mbuffer* %buff, i8* %name) #0 {
  %lexstate = alloca %struct.LexState.249, align 8
  %funcstate = alloca %struct.FuncState.248, align 8
  %1 = bitcast %struct.LexState.249* %lexstate to i8*
  call void @llvm.lifetime.start(i64 96, i8* %1) #1
  %2 = bitcast %struct.FuncState.248* %funcstate to i8*
  call void @llvm.lifetime.start(i64 600, i8* %2) #1
  %3 = getelementptr inbounds %struct.LexState.249, %struct.LexState.249* %lexstate, i64 0, i32 8
  store %struct.Mbuffer* %buff, %struct.Mbuffer** %3, align 8, !tbaa !221
  %4 = tail call i64 @strlen(i8* %name) #11
  %5 = tail call %union.TString.110* bitcast (%union.TString* (%struct.lua_State*, i8*, i64)* @luaS_newlstr to %union.TString.110* (%struct.lua_State.115*, i8*, i64)*)(%struct.lua_State.115* %L, i8* %name, i64 %4) #1
  call void bitcast (void (%struct.lua_State*, %struct.LexState*, %struct.Zio*, %union.TString*)* @luaX_setinput to void (%struct.lua_State.115*, %struct.LexState.249*, %struct.Zio.243*, %union.TString.110*)*)(%struct.lua_State.115* %L, %struct.LexState.249* nonnull %lexstate, %struct.Zio.243* %z, %union.TString.110* %5) #1
  %6 = getelementptr inbounds %struct.LexState.249, %struct.LexState.249* %lexstate, i64 0, i32 6
  %7 = load %struct.lua_State.115*, %struct.lua_State.115** %6, align 8, !tbaa !218
  %8 = call %struct.Proto.120* @luaF_newproto(%struct.lua_State.115* %7) #1
  %9 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %funcstate, i64 0, i32 0
  store %struct.Proto.120* %8, %struct.Proto.120** %9, align 8, !tbaa !92
  %10 = getelementptr inbounds %struct.LexState.249, %struct.LexState.249* %lexstate, i64 0, i32 5
  %11 = bitcast %struct.FuncState.248** %10 to i64*
  %12 = load i64, i64* %11, align 8, !tbaa !224
  %13 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %funcstate, i64 0, i32 2
  %14 = bitcast %struct.FuncState.248** %13 to i64*
  store i64 %12, i64* %14, align 8, !tbaa !245
  %15 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %funcstate, i64 0, i32 3
  store %struct.LexState.249* %lexstate, %struct.LexState.249** %15, align 8, !tbaa !94
  %16 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %funcstate, i64 0, i32 4
  store %struct.lua_State.115* %7, %struct.lua_State.115** %16, align 8, !tbaa !113
  store %struct.FuncState.248* %funcstate, %struct.FuncState.248** %10, align 8, !tbaa !224
  %17 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %funcstate, i64 0, i32 6
  store i32 0, i32* %17, align 8, !tbaa !88
  %18 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %funcstate, i64 0, i32 7
  store i32 -1, i32* %18, align 4, !tbaa !90
  %19 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %funcstate, i64 0, i32 8
  store i32 -1, i32* %19, align 8, !tbaa !98
  %20 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %funcstate, i64 0, i32 9
  %21 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %funcstate, i64 0, i32 5
  store %struct.BlockCnt* null, %struct.BlockCnt** %21, align 8, !tbaa !246
  %22 = getelementptr inbounds %struct.LexState.249, %struct.LexState.249* %lexstate, i64 0, i32 9
  %23 = bitcast %union.TString.110** %22 to i64*
  %24 = bitcast i32* %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* %24, i8 0, i64 15, i32 4, i1 false) #1
  %25 = load i64, i64* %23, align 8, !tbaa !219
  %26 = getelementptr inbounds %struct.Proto.120, %struct.Proto.120* %8, i64 0, i32 9
  %27 = bitcast %union.TString.110** %26 to i64*
  store i64 %25, i64* %27, align 8, !tbaa !133
  %28 = getelementptr inbounds %struct.Proto.120, %struct.Proto.120* %8, i64 0, i32 22
  store i8 2, i8* %28, align 1, !tbaa !100
  %29 = call %struct.Table.108* bitcast (%struct.Table* (%struct.lua_State*, i32, i32)* @luaH_new to %struct.Table.108* (%struct.lua_State.115*, i32, i32)*)(%struct.lua_State.115* %7, i32 0, i32 0) #1
  %30 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %funcstate, i64 0, i32 1
  store %struct.Table.108* %29, %struct.Table.108** %30, align 8, !tbaa !109
  %31 = getelementptr inbounds %struct.lua_State.115, %struct.lua_State.115* %7, i64 0, i32 4
  %32 = load %struct.lua_TValue.101*, %struct.lua_TValue.101** %31, align 8, !tbaa !1
  %33 = bitcast %struct.lua_TValue.101* %32 to %struct.Table.108**
  store %struct.Table.108* %29, %struct.Table.108** %33, align 8, !tbaa !25
  %34 = getelementptr inbounds %struct.lua_TValue.101, %struct.lua_TValue.101* %32, i64 0, i32 1
  store i32 5, i32* %34, align 4, !tbaa !10
  %35 = getelementptr inbounds %struct.lua_State.115, %struct.lua_State.115* %7, i64 0, i32 9
  %36 = bitcast %struct.lua_TValue.101** %35 to i64*
  %37 = load i64, i64* %36, align 8, !tbaa !12
  %38 = bitcast %struct.lua_TValue.101** %31 to i64*
  %39 = load i64, i64* %38, align 8, !tbaa !1
  %40 = sub i64 %37, %39
  %41 = icmp slt i64 %40, 17
  %42 = inttoptr i64 %39 to %struct.lua_TValue.101*
  br i1 %41, label %43, label %44

; <label>:43                                      ; preds = %0
  call void bitcast (void (%struct.lua_State*, i32)* @luaD_growstack to void (%struct.lua_State.115*, i32)*)(%struct.lua_State.115* %7, i32 1) #1
  %.pre.i = load %struct.lua_TValue.101*, %struct.lua_TValue.101** %31, align 8, !tbaa !1
  br label %44

; <label>:44                                      ; preds = %43, %0
  %45 = phi %struct.lua_TValue.101* [ %42, %0 ], [ %.pre.i, %43 ]
  %46 = getelementptr inbounds %struct.lua_TValue.101, %struct.lua_TValue.101* %45, i64 1
  store %struct.lua_TValue.101* %46, %struct.lua_TValue.101** %31, align 8, !tbaa !1
  %47 = bitcast %struct.lua_TValue.101* %46 to %struct.Proto.120**
  store %struct.Proto.120* %8, %struct.Proto.120** %47, align 8, !tbaa !25
  %48 = getelementptr inbounds %struct.lua_TValue.101, %struct.lua_TValue.101* %45, i64 1, i32 1
  store i32 9, i32* %48, align 4, !tbaa !10
  %49 = load i64, i64* %36, align 8, !tbaa !12
  %50 = load i64, i64* %38, align 8, !tbaa !1
  %51 = sub i64 %49, %50
  %52 = icmp slt i64 %51, 17
  %53 = inttoptr i64 %50 to %struct.lua_TValue.101*
  br i1 %52, label %54, label %open_func.exit

; <label>:54                                      ; preds = %44
  call void bitcast (void (%struct.lua_State*, i32)* @luaD_growstack to void (%struct.lua_State.115*, i32)*)(%struct.lua_State.115* %7, i32 1) #1
  %.pre2.i = load %struct.lua_TValue.101*, %struct.lua_TValue.101** %31, align 8, !tbaa !1
  br label %open_func.exit

open_func.exit:                                   ; preds = %44, %54
  %55 = phi %struct.lua_TValue.101* [ %53, %44 ], [ %.pre2.i, %54 ]
  %56 = getelementptr inbounds %struct.lua_TValue.101, %struct.lua_TValue.101* %55, i64 1
  store %struct.lua_TValue.101* %56, %struct.lua_TValue.101** %31, align 8, !tbaa !1
  %57 = load %struct.Proto.120*, %struct.Proto.120** %9, align 8, !tbaa !92
  %58 = getelementptr inbounds %struct.Proto.120, %struct.Proto.120* %57, i64 0, i32 21
  store i8 2, i8* %58, align 1, !tbaa !137
  call void bitcast (void (%struct.LexState*)* @luaX_next to void (%struct.LexState.249*)*)(%struct.LexState.249* nonnull %lexstate) #1
  %59 = load %struct.lua_State.115*, %struct.lua_State.115** %6, align 8, !tbaa !218
  %60 = getelementptr inbounds %struct.lua_State.115, %struct.lua_State.115* %59, i64 0, i32 15
  %61 = load i16, i16* %60, align 2, !tbaa !16
  %62 = add i16 %61, 1
  store i16 %62, i16* %60, align 2, !tbaa !16
  %63 = icmp ugt i16 %62, 200
  br i1 %63, label %64, label %enterlevel.exit.preheader.i

; <label>:64                                      ; preds = %open_func.exit
  call void bitcast (void (%struct.LexState*, i8*, i32)* @luaX_lexerror to void (%struct.LexState.249*, i8*, i32)*)(%struct.LexState.249* nonnull %lexstate, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.1.508, i64 0, i64 0), i32 0) #1
  br label %enterlevel.exit.preheader.i

enterlevel.exit.preheader.i:                      ; preds = %64, %open_func.exit
  %65 = getelementptr inbounds %struct.LexState.249, %struct.LexState.249* %lexstate, i64 0, i32 3, i32 0
  br label %66

; <label>:66                                      ; preds = %testnext.exit.i, %enterlevel.exit.preheader.i
  %67 = load i32, i32* %65, align 8, !tbaa !223
  switch i32 %67, label %68 [
    i32 260, label %chunk.exit.loopexit
    i32 261, label %chunk.exit.loopexit
    i32 262, label %chunk.exit.loopexit
    i32 276, label %chunk.exit.loopexit
    i32 287, label %chunk.exit.loopexit
  ]

; <label>:68                                      ; preds = %66
  %69 = call fastcc i32 @statement(%struct.LexState.249* nonnull %lexstate) #1
  %70 = load i32, i32* %65, align 8, !tbaa !223
  %71 = icmp eq i32 %70, 59
  br i1 %71, label %72, label %testnext.exit.i

; <label>:72                                      ; preds = %68
  call void bitcast (void (%struct.LexState*)* @luaX_next to void (%struct.LexState.249*)*)(%struct.LexState.249* nonnull %lexstate) #1
  br label %testnext.exit.i

testnext.exit.i:                                  ; preds = %72, %68
  %73 = load %struct.FuncState.248*, %struct.FuncState.248** %10, align 8, !tbaa !224
  %74 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %73, i64 0, i32 13
  %75 = load i8, i8* %74, align 1, !tbaa !91
  %76 = zext i8 %75 to i32
  %77 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %73, i64 0, i32 9
  store i32 %76, i32* %77, align 4, !tbaa !99
  %78 = icmp eq i32 %69, 0
  br i1 %78, label %66, label %testnext.exit.i.chunk.exit_crit_edge

testnext.exit.i.chunk.exit_crit_edge:             ; preds = %testnext.exit.i
  %.pre = load i32, i32* %65, align 8, !tbaa !223
  br label %chunk.exit

chunk.exit.loopexit:                              ; preds = %66, %66, %66, %66, %66
  %.lcssa = phi i32 [ %67, %66 ], [ %67, %66 ], [ %67, %66 ], [ %67, %66 ], [ %67, %66 ]
  br label %chunk.exit

chunk.exit:                                       ; preds = %chunk.exit.loopexit, %testnext.exit.i.chunk.exit_crit_edge
  %79 = phi i32 [ %.pre, %testnext.exit.i.chunk.exit_crit_edge ], [ %.lcssa, %chunk.exit.loopexit ]
  %80 = load %struct.lua_State.115*, %struct.lua_State.115** %6, align 8, !tbaa !218
  %81 = getelementptr inbounds %struct.lua_State.115, %struct.lua_State.115* %80, i64 0, i32 15
  %82 = load i16, i16* %81, align 2, !tbaa !16
  %83 = add i16 %82, -1
  store i16 %83, i16* %81, align 2, !tbaa !16
  %84 = icmp eq i32 %79, 287
  br i1 %84, label %check.exit, label %85

; <label>:85                                      ; preds = %chunk.exit
  %86 = call i8* bitcast (i8* (%struct.LexState*, i32)* @luaX_token2str to i8* (%struct.LexState.249*, i32)*)(%struct.LexState.249* nonnull %lexstate, i32 287) #1
  %87 = call i8* (%struct.lua_State.115*, i8*, ...) bitcast (i8* (%struct.lua_State.215*, i8*, ...)* @luaO_pushfstring to i8* (%struct.lua_State.115*, i8*, ...)*)(%struct.lua_State.115* %80, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.509, i64 0, i64 0), i8* %86) #1
  call void bitcast (void (%struct.LexState*, i8*)* @luaX_syntaxerror to void (%struct.LexState.249*, i8*)*)(%struct.LexState.249* nonnull %lexstate, i8* %87) #1
  br label %check.exit

check.exit:                                       ; preds = %chunk.exit, %85
  call fastcc void @close_func(%struct.LexState.249* nonnull %lexstate)
  %88 = load %struct.Proto.120*, %struct.Proto.120** %9, align 8, !tbaa !92
  call void @llvm.lifetime.end(i64 600, i8* %2) #1
  call void @llvm.lifetime.end(i64 96, i8* %1) #1
  ret %struct.Proto.120* %88
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @statement(%struct.LexState.249* %ls) #0 {
  %e.i.52 = alloca %struct.expdesc, align 8
  %e.i.51 = alloca %struct.expdesc, align 8
  %e.i.50 = alloca %struct.expdesc, align 8
  %v.i.47 = alloca %struct.LHS_assign, align 8
  %e.i.41 = alloca %struct.expdesc, align 8
  %e.i = alloca %struct.expdesc, align 8
  %v.i.27 = alloca %struct.expdesc, align 8
  %b.i.28 = alloca %struct.expdesc, align 8
  %v.i = alloca %struct.expdesc, align 8
  %b.i = alloca %struct.expdesc, align 8
  %v.i.i.12 = alloca %struct.expdesc, align 8
  %bl1.i = alloca %struct.BlockCnt, align 8
  %bl2.i = alloca %struct.BlockCnt, align 8
  %e.i.i = alloca %struct.expdesc, align 8
  %bl.i.1 = alloca %struct.BlockCnt, align 8
  %v.i.i = alloca %struct.expdesc, align 8
  %bl.i = alloca %struct.BlockCnt, align 8
  %escapelist.i = alloca i32, align 4
  %1 = getelementptr inbounds %struct.LexState.249, %struct.LexState.249* %ls, i64 0, i32 1
  %2 = load i32, i32* %1, align 4, !tbaa !220
  %3 = getelementptr inbounds %struct.LexState.249, %struct.LexState.249* %ls, i64 0, i32 3, i32 0
  %4 = load i32, i32* %3, align 4, !tbaa !223
  switch i32 %4, label %733 [
    i32 266, label %5
    i32 277, label %19
    i32 259, label %101
    i32 264, label %102
    i32 272, label %270
    i32 265, label %503
    i32 268, label %529
    i32 273, label %665
    i32 258, label %710
  ]

; <label>:5                                       ; preds = %0
  %6 = getelementptr inbounds %struct.LexState.249, %struct.LexState.249* %ls, i64 0, i32 5
  %7 = load %struct.FuncState.248*, %struct.FuncState.248** %6, align 8, !tbaa !224
  %8 = bitcast i32* %escapelist.i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %8) #1
  store i32 -1, i32* %escapelist.i, align 4, !tbaa !38
  %9 = tail call fastcc i32 @test_then_block(%struct.LexState.249* %ls) #1
  br label %10

; <label>:10                                      ; preds = %12, %5
  %flist.0.i = phi i32 [ %9, %5 ], [ %14, %12 ]
  %11 = load i32, i32* %3, align 4, !tbaa !223
  switch i32 %11, label %17 [
    i32 261, label %12
    i32 260, label %15
  ]

; <label>:12                                      ; preds = %10
  %13 = call i32 bitcast (i32 (%struct.FuncState*)* @luaK_jump to i32 (%struct.FuncState.248*)*)(%struct.FuncState.248* %7) #1
  call void bitcast (void (%struct.FuncState*, i32*, i32)* @luaK_concat to void (%struct.FuncState.248*, i32*, i32)*)(%struct.FuncState.248* %7, i32* nonnull %escapelist.i, i32 %13) #1
  call void bitcast (void (%struct.FuncState*, i32)* @luaK_patchtohere to void (%struct.FuncState.248*, i32)*)(%struct.FuncState.248* %7, i32 %flist.0.i) #1
  %14 = call fastcc i32 @test_then_block(%struct.LexState.249* %ls) #1
  br label %10

; <label>:15                                      ; preds = %10
  %flist.0.i.lcssa138 = phi i32 [ %flist.0.i, %10 ]
  %16 = call i32 bitcast (i32 (%struct.FuncState*)* @luaK_jump to i32 (%struct.FuncState.248*)*)(%struct.FuncState.248* %7) #1
  call void bitcast (void (%struct.FuncState*, i32*, i32)* @luaK_concat to void (%struct.FuncState.248*, i32*, i32)*)(%struct.FuncState.248* %7, i32* nonnull %escapelist.i, i32 %16) #1
  call void bitcast (void (%struct.FuncState*, i32)* @luaK_patchtohere to void (%struct.FuncState.248*, i32)*)(%struct.FuncState.248* %7, i32 %flist.0.i.lcssa138) #1
  call void bitcast (void (%struct.LexState*)* @luaX_next to void (%struct.LexState.249*)*)(%struct.LexState.249* %ls) #1
  call fastcc void @block(%struct.LexState.249* %ls) #1
  br label %ifstat.exit

; <label>:17                                      ; preds = %10
  %flist.0.i.lcssa = phi i32 [ %flist.0.i, %10 ]
  call void bitcast (void (%struct.FuncState*, i32*, i32)* @luaK_concat to void (%struct.FuncState.248*, i32*, i32)*)(%struct.FuncState.248* %7, i32* nonnull %escapelist.i, i32 %flist.0.i.lcssa) #1
  br label %ifstat.exit

ifstat.exit:                                      ; preds = %15, %17
  %18 = load i32, i32* %escapelist.i, align 4, !tbaa !38
  call void bitcast (void (%struct.FuncState*, i32)* @luaK_patchtohere to void (%struct.FuncState.248*, i32)*)(%struct.FuncState.248* %7, i32 %18) #1
  call fastcc void @check_match(%struct.LexState.249* %ls, i32 262, i32 266, i32 %2) #1
  call void @llvm.lifetime.end(i64 4, i8* %8) #1
  br label %756

; <label>:19                                      ; preds = %0
  %20 = getelementptr inbounds %struct.LexState.249, %struct.LexState.249* %ls, i64 0, i32 5
  %21 = load %struct.FuncState.248*, %struct.FuncState.248** %20, align 8, !tbaa !224
  %22 = bitcast %struct.BlockCnt* %bl.i to i8*
  call void @llvm.lifetime.start(i64 16, i8* %22) #1
  tail call void bitcast (void (%struct.LexState*)* @luaX_next to void (%struct.LexState.249*)*)(%struct.LexState.249* %ls) #1
  %23 = tail call i32 bitcast (i32 (%struct.FuncState*)* @luaK_getlabel to i32 (%struct.FuncState.248*)*)(%struct.FuncState.248* %21) #1
  %24 = bitcast %struct.expdesc* %v.i.i to i8*
  call void @llvm.lifetime.start(i64 24, i8* %24) #1
  %25 = call fastcc i32 @subexpr(%struct.LexState.249* %ls, %struct.expdesc* nonnull %v.i.i, i32 0) #1
  %26 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %v.i.i, i64 0, i32 0
  %27 = load i32, i32* %26, align 8, !tbaa !101
  %28 = icmp eq i32 %27, 1
  br i1 %28, label %29, label %cond.exit.i

; <label>:29                                      ; preds = %19
  store i32 3, i32* %26, align 8, !tbaa !101
  br label %cond.exit.i

cond.exit.i:                                      ; preds = %29, %19
  %30 = load %struct.FuncState.248*, %struct.FuncState.248** %20, align 8, !tbaa !224
  call void bitcast (void (%struct.FuncState*, %struct.expdesc*)* @luaK_goiftrue to void (%struct.FuncState.248*, %struct.expdesc*)*)(%struct.FuncState.248* %30, %struct.expdesc* nonnull %v.i.i) #1
  %31 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %v.i.i, i64 0, i32 3
  %32 = load i32, i32* %31, align 4, !tbaa !107
  call void @llvm.lifetime.end(i64 24, i8* %24) #1
  %33 = getelementptr inbounds %struct.BlockCnt, %struct.BlockCnt* %bl.i, i64 0, i32 1
  store i32 -1, i32* %33, align 8, !tbaa !247
  %34 = getelementptr inbounds %struct.BlockCnt, %struct.BlockCnt* %bl.i, i64 0, i32 4
  store i8 1, i8* %34, align 2, !tbaa !249
  %35 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %21, i64 0, i32 13
  %36 = load i8, i8* %35, align 1, !tbaa !91
  %37 = getelementptr inbounds %struct.BlockCnt, %struct.BlockCnt* %bl.i, i64 0, i32 2
  store i8 %36, i8* %37, align 4, !tbaa !250
  %38 = getelementptr inbounds %struct.BlockCnt, %struct.BlockCnt* %bl.i, i64 0, i32 3
  store i8 0, i8* %38, align 1, !tbaa !251
  %39 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %21, i64 0, i32 5
  %40 = bitcast %struct.BlockCnt** %39 to i64*
  %41 = load i64, i64* %40, align 8, !tbaa !246
  %42 = bitcast %struct.BlockCnt* %bl.i to i64*
  store i64 %41, i64* %42, align 8, !tbaa !252
  store %struct.BlockCnt* %bl.i, %struct.BlockCnt** %39, align 8, !tbaa !246
  %43 = load i32, i32* %3, align 4, !tbaa !223
  %44 = icmp eq i32 %43, 259
  br i1 %44, label %checknext.exit.i, label %45

; <label>:45                                      ; preds = %cond.exit.i
  %46 = getelementptr inbounds %struct.LexState.249, %struct.LexState.249* %ls, i64 0, i32 6
  %47 = load %struct.lua_State.115*, %struct.lua_State.115** %46, align 8, !tbaa !218
  %48 = call i8* bitcast (i8* (%struct.LexState*, i32)* @luaX_token2str to i8* (%struct.LexState.249*, i32)*)(%struct.LexState.249* %ls, i32 259) #1
  %49 = call i8* (%struct.lua_State.115*, i8*, ...) bitcast (i8* (%struct.lua_State.215*, i8*, ...)* @luaO_pushfstring to i8* (%struct.lua_State.115*, i8*, ...)*)(%struct.lua_State.115* %47, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.509, i64 0, i64 0), i8* %48) #1
  call void bitcast (void (%struct.LexState*, i8*)* @luaX_syntaxerror to void (%struct.LexState.249*, i8*)*)(%struct.LexState.249* %ls, i8* %49) #1
  br label %checknext.exit.i

checknext.exit.i:                                 ; preds = %45, %cond.exit.i
  call void bitcast (void (%struct.LexState*)* @luaX_next to void (%struct.LexState.249*)*)(%struct.LexState.249* %ls) #1
  call fastcc void @block(%struct.LexState.249* %ls) #1
  %50 = call i32 bitcast (i32 (%struct.FuncState*)* @luaK_jump to i32 (%struct.FuncState.248*)*)(%struct.FuncState.248* %21) #1
  call void bitcast (void (%struct.FuncState*, i32, i32)* @luaK_patchlist to void (%struct.FuncState.248*, i32, i32)*)(%struct.FuncState.248* %21, i32 %50, i32 %23) #1
  call fastcc void @check_match(%struct.LexState.249* %ls, i32 262, i32 277, i32 %2) #1
  %51 = load %struct.BlockCnt*, %struct.BlockCnt** %39, align 8, !tbaa !246
  %52 = bitcast %struct.BlockCnt* %51 to i64*
  %53 = load i64, i64* %52, align 8, !tbaa !252
  store i64 %53, i64* %40, align 8, !tbaa !246
  %54 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %21, i64 0, i32 3
  %55 = load %struct.LexState.249*, %struct.LexState.249** %54, align 8, !tbaa !94
  %56 = getelementptr inbounds %struct.BlockCnt, %struct.BlockCnt* %51, i64 0, i32 2
  %57 = load i8, i8* %56, align 1, !tbaa !250
  %.idx.i.i = getelementptr %struct.LexState.249, %struct.LexState.249* %55, i64 0, i32 5
  %.idx.val.i.i = load %struct.FuncState.248*, %struct.FuncState.248** %.idx.i.i, align 8, !tbaa !224
  %58 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %.idx.val.i.i, i64 0, i32 13
  %59 = load i8, i8* %58, align 1, !tbaa !91
  %60 = icmp ugt i8 %59, %57
  br i1 %60, label %.lr.ph.i.i.i, label %removevars.exit.i.i

.lr.ph.i.i.i:                                     ; preds = %checknext.exit.i
  %61 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %.idx.val.i.i, i64 0, i32 6
  %62 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %.idx.val.i.i, i64 0, i32 0
  %.pre.i.i.i = load i32, i32* %61, align 4, !tbaa !88
  %.pre1.i.i.i = load %struct.Proto.120*, %struct.Proto.120** %62, align 8, !tbaa !92
  %.phi.trans.insert.i.i.i = getelementptr inbounds %struct.Proto.120, %struct.Proto.120* %.pre1.i.i.i, i64 0, i32 7
  %.pre2.i.i.i = load %struct.LocVar.119*, %struct.LocVar.119** %.phi.trans.insert.i.i.i, align 8, !tbaa !167
  %63 = zext i8 %59 to i64
  %64 = sub i8 %59, %57
  %65 = add i8 %59, -1
  %xtraiter = and i8 %64, 1
  %lcmp.mod = icmp eq i8 %xtraiter, 0
  br i1 %lcmp.mod, label %.lr.ph.i.i.i.split, label %66

; <label>:66                                      ; preds = %.lr.ph.i.i.i
  %67 = add i8 %59, -1
  store i8 %67, i8* %58, align 1, !tbaa !91
  %68 = zext i8 %67 to i64
  %69 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %.idx.val.i.i, i64 0, i32 15, i64 %68
  %70 = load i16, i16* %69, align 2, !tbaa !87
  %71 = zext i16 %70 to i64
  %72 = getelementptr inbounds %struct.LocVar.119, %struct.LocVar.119* %.pre2.i.i.i, i64 %71, i32 2
  store i32 %.pre.i.i.i, i32* %72, align 4, !tbaa !171
  %indvars.iv.next.i.i.prol = add nsw i64 %63, -1
  br label %.lr.ph.i.i.i.split

.lr.ph.i.i.i.split:                               ; preds = %.lr.ph.i.i.i, %66
  %indvars.iv.i.i.unr = phi i64 [ %63, %.lr.ph.i.i.i ], [ %indvars.iv.next.i.i.prol, %66 ]
  %73 = icmp eq i8 %65, %57
  br i1 %73, label %removevars.exit.i.i.loopexit, label %.lr.ph.i.i.i.split.split

.lr.ph.i.i.i.split.split:                         ; preds = %.lr.ph.i.i.i.split
  br label %74

; <label>:74                                      ; preds = %74, %.lr.ph.i.i.i.split.split
  %indvars.iv.i.i = phi i64 [ %indvars.iv.i.i.unr, %.lr.ph.i.i.i.split.split ], [ %indvars.iv.next.i.i.1, %74 ]
  %75 = trunc i64 %indvars.iv.i.i to i8
  %76 = add i8 %75, -1
  store i8 %76, i8* %58, align 1, !tbaa !91
  %77 = zext i8 %76 to i64
  %78 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %.idx.val.i.i, i64 0, i32 15, i64 %77
  %79 = load i16, i16* %78, align 2, !tbaa !87
  %80 = zext i16 %79 to i64
  %81 = getelementptr inbounds %struct.LocVar.119, %struct.LocVar.119* %.pre2.i.i.i, i64 %80, i32 2
  store i32 %.pre.i.i.i, i32* %81, align 4, !tbaa !171
  %indvars.iv.next.i.i = add i64 %indvars.iv.i.i, 255
  %82 = trunc i64 %indvars.iv.next.i.i to i8
  %83 = add i8 %82, -1
  store i8 %83, i8* %58, align 1, !tbaa !91
  %84 = zext i8 %83 to i64
  %85 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %.idx.val.i.i, i64 0, i32 15, i64 %84
  %86 = load i16, i16* %85, align 2, !tbaa !87
  %87 = zext i16 %86 to i64
  %88 = getelementptr inbounds %struct.LocVar.119, %struct.LocVar.119* %.pre2.i.i.i, i64 %87, i32 2
  store i32 %.pre.i.i.i, i32* %88, align 4, !tbaa !171
  %89 = icmp ugt i8 %83, %57
  %indvars.iv.next.i.i.1 = add nsw i64 %indvars.iv.i.i, -2
  br i1 %89, label %74, label %removevars.exit.i.i.loopexit.unr-lcssa

removevars.exit.i.i.loopexit.unr-lcssa:           ; preds = %74
  br label %removevars.exit.i.i.loopexit

removevars.exit.i.i.loopexit:                     ; preds = %.lr.ph.i.i.i.split, %removevars.exit.i.i.loopexit.unr-lcssa
  br label %removevars.exit.i.i

removevars.exit.i.i:                              ; preds = %removevars.exit.i.i.loopexit, %checknext.exit.i
  %90 = getelementptr inbounds %struct.BlockCnt, %struct.BlockCnt* %51, i64 0, i32 3
  %91 = load i8, i8* %90, align 1, !tbaa !251
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %whilestat.exit, label %93

; <label>:93                                      ; preds = %removevars.exit.i.i
  %94 = zext i8 %57 to i32
  %95 = call i32 bitcast (i32 (%struct.FuncState*, i32, i32, i32, i32)* @luaK_codeABC to i32 (%struct.FuncState.248*, i32, i32, i32, i32)*)(%struct.FuncState.248* %21, i32 35, i32 %94, i32 0, i32 0) #1
  br label %whilestat.exit

whilestat.exit:                                   ; preds = %removevars.exit.i.i, %93
  %96 = load i8, i8* %35, align 1, !tbaa !91
  %97 = zext i8 %96 to i32
  %98 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %21, i64 0, i32 9
  store i32 %97, i32* %98, align 4, !tbaa !99
  %99 = getelementptr inbounds %struct.BlockCnt, %struct.BlockCnt* %51, i64 0, i32 1
  %100 = load i32, i32* %99, align 4, !tbaa !247
  call void bitcast (void (%struct.FuncState*, i32)* @luaK_patchtohere to void (%struct.FuncState.248*, i32)*)(%struct.FuncState.248* %21, i32 %100) #1
  call void bitcast (void (%struct.FuncState*, i32)* @luaK_patchtohere to void (%struct.FuncState.248*, i32)*)(%struct.FuncState.248* %21, i32 %32) #1
  call void @llvm.lifetime.end(i64 16, i8* %22) #1
  br label %756

; <label>:101                                     ; preds = %0
  tail call void bitcast (void (%struct.LexState*)* @luaX_next to void (%struct.LexState.249*)*)(%struct.LexState.249* %ls) #1
  tail call fastcc void @block(%struct.LexState.249* %ls)
  tail call fastcc void @check_match(%struct.LexState.249* %ls, i32 262, i32 259, i32 %2)
  br label %756

; <label>:102                                     ; preds = %0
  %103 = getelementptr inbounds %struct.LexState.249, %struct.LexState.249* %ls, i64 0, i32 5
  %104 = load %struct.FuncState.248*, %struct.FuncState.248** %103, align 8, !tbaa !224
  %105 = bitcast %struct.BlockCnt* %bl.i.1 to i8*
  call void @llvm.lifetime.start(i64 16, i8* %105) #1
  %106 = getelementptr inbounds %struct.BlockCnt, %struct.BlockCnt* %bl.i.1, i64 0, i32 1
  store i32 -1, i32* %106, align 8, !tbaa !247
  %107 = getelementptr inbounds %struct.BlockCnt, %struct.BlockCnt* %bl.i.1, i64 0, i32 4
  store i8 1, i8* %107, align 2, !tbaa !249
  %108 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %104, i64 0, i32 13
  %109 = load i8, i8* %108, align 1, !tbaa !91
  %110 = getelementptr inbounds %struct.BlockCnt, %struct.BlockCnt* %bl.i.1, i64 0, i32 2
  store i8 %109, i8* %110, align 4, !tbaa !250
  %111 = getelementptr inbounds %struct.BlockCnt, %struct.BlockCnt* %bl.i.1, i64 0, i32 3
  store i8 0, i8* %111, align 1, !tbaa !251
  %112 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %104, i64 0, i32 5
  %113 = bitcast %struct.BlockCnt** %112 to i64*
  %114 = load i64, i64* %113, align 8, !tbaa !246
  %115 = bitcast %struct.BlockCnt* %bl.i.1 to i64*
  store i64 %114, i64* %115, align 8, !tbaa !252
  store %struct.BlockCnt* %bl.i.1, %struct.BlockCnt** %112, align 8, !tbaa !246
  call void bitcast (void (%struct.LexState*)* @luaX_next to void (%struct.LexState.249*)*)(%struct.LexState.249* %ls) #1
  %116 = load i32, i32* %3, align 4, !tbaa !223
  %117 = icmp eq i32 %116, 285
  br i1 %117, label %str_checkname.exit.i, label %118

; <label>:118                                     ; preds = %102
  %119 = getelementptr inbounds %struct.LexState.249, %struct.LexState.249* %ls, i64 0, i32 6
  %120 = load %struct.lua_State.115*, %struct.lua_State.115** %119, align 8, !tbaa !218
  %121 = call i8* bitcast (i8* (%struct.LexState*, i32)* @luaX_token2str to i8* (%struct.LexState.249*, i32)*)(%struct.LexState.249* %ls, i32 285) #1
  %122 = call i8* (%struct.lua_State.115*, i8*, ...) bitcast (i8* (%struct.lua_State.215*, i8*, ...)* @luaO_pushfstring to i8* (%struct.lua_State.115*, i8*, ...)*)(%struct.lua_State.115* %120, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.509, i64 0, i64 0), i8* %121) #1
  call void bitcast (void (%struct.LexState*, i8*)* @luaX_syntaxerror to void (%struct.LexState.249*, i8*)*)(%struct.LexState.249* %ls, i8* %122) #1
  br label %str_checkname.exit.i

str_checkname.exit.i:                             ; preds = %118, %102
  %123 = getelementptr inbounds %struct.LexState.249, %struct.LexState.249* %ls, i64 0, i32 3, i32 1
  %124 = bitcast %union.SemInfo* %123 to %union.TString.110**
  %125 = load %union.TString.110*, %union.TString.110** %124, align 8, !tbaa !25
  call void bitcast (void (%struct.LexState*)* @luaX_next to void (%struct.LexState.249*)*)(%struct.LexState.249* %ls) #1
  %126 = load i32, i32* %3, align 4, !tbaa !223
  switch i32 %126, label %218 [
    i32 61, label %127
    i32 44, label %164
    i32 267, label %164
  ]

; <label>:127                                     ; preds = %str_checkname.exit.i
  %128 = load %struct.FuncState.248*, %struct.FuncState.248** %103, align 8, !tbaa !224
  %129 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %128, i64 0, i32 9
  %130 = load i32, i32* %129, align 4, !tbaa !99
  %131 = call %union.TString.110* bitcast (%union.TString* (%struct.LexState*, i8*, i64)* @luaX_newstring to %union.TString.110* (%struct.LexState.249*, i8*, i64)*)(%struct.LexState.249* %ls, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.19.510, i64 0, i64 0), i64 11) #1
  call fastcc void @new_localvar(%struct.LexState.249* %ls, %union.TString.110* %131, i32 0) #1
  %132 = call %union.TString.110* bitcast (%union.TString* (%struct.LexState*, i8*, i64)* @luaX_newstring to %union.TString.110* (%struct.LexState.249*, i8*, i64)*)(%struct.LexState.249* %ls, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.20.511, i64 0, i64 0), i64 11) #1
  call fastcc void @new_localvar(%struct.LexState.249* %ls, %union.TString.110* %132, i32 1) #1
  %133 = call %union.TString.110* bitcast (%union.TString* (%struct.LexState*, i8*, i64)* @luaX_newstring to %union.TString.110* (%struct.LexState.249*, i8*, i64)*)(%struct.LexState.249* %ls, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.21.512, i64 0, i64 0), i64 10) #1
  call fastcc void @new_localvar(%struct.LexState.249* %ls, %union.TString.110* %133, i32 2) #1
  call fastcc void @new_localvar(%struct.LexState.249* %ls, %union.TString.110* %125, i32 3) #1
  %134 = load i32, i32* %3, align 4, !tbaa !223
  %135 = icmp eq i32 %134, 61
  br i1 %135, label %checknext.exit.i.1.i, label %136

; <label>:136                                     ; preds = %127
  %137 = getelementptr inbounds %struct.LexState.249, %struct.LexState.249* %ls, i64 0, i32 6
  %138 = load %struct.lua_State.115*, %struct.lua_State.115** %137, align 8, !tbaa !218
  %139 = call i8* bitcast (i8* (%struct.LexState*, i32)* @luaX_token2str to i8* (%struct.LexState.249*, i32)*)(%struct.LexState.249* %ls, i32 61) #1
  %140 = call i8* (%struct.lua_State.115*, i8*, ...) bitcast (i8* (%struct.lua_State.215*, i8*, ...)* @luaO_pushfstring to i8* (%struct.lua_State.115*, i8*, ...)*)(%struct.lua_State.115* %138, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.509, i64 0, i64 0), i8* %139) #1
  call void bitcast (void (%struct.LexState*, i8*)* @luaX_syntaxerror to void (%struct.LexState.249*, i8*)*)(%struct.LexState.249* %ls, i8* %140) #1
  br label %checknext.exit.i.1.i

checknext.exit.i.1.i:                             ; preds = %136, %127
  call void bitcast (void (%struct.LexState*)* @luaX_next to void (%struct.LexState.249*)*)(%struct.LexState.249* %ls) #1
  %141 = bitcast %struct.expdesc* %e.i.50 to i8*
  call void @llvm.lifetime.start(i64 24, i8* %141) #1
  %142 = call fastcc i32 @subexpr(%struct.LexState.249* %ls, %struct.expdesc* nonnull %e.i.50, i32 0) #1
  %143 = load %struct.FuncState.248*, %struct.FuncState.248** %103, align 8, !tbaa !224
  call void bitcast (void (%struct.FuncState*, %struct.expdesc*)* @luaK_exp2nextreg to void (%struct.FuncState.248*, %struct.expdesc*)*)(%struct.FuncState.248* %143, %struct.expdesc* nonnull %e.i.50) #1
  call void @llvm.lifetime.end(i64 24, i8* %141) #1
  %144 = load i32, i32* %3, align 4, !tbaa !223
  %145 = icmp eq i32 %144, 44
  br i1 %145, label %checknext.exit1.i.i, label %146

; <label>:146                                     ; preds = %checknext.exit.i.1.i
  %147 = getelementptr inbounds %struct.LexState.249, %struct.LexState.249* %ls, i64 0, i32 6
  %148 = load %struct.lua_State.115*, %struct.lua_State.115** %147, align 8, !tbaa !218
  %149 = call i8* bitcast (i8* (%struct.LexState*, i32)* @luaX_token2str to i8* (%struct.LexState.249*, i32)*)(%struct.LexState.249* %ls, i32 44) #1
  %150 = call i8* (%struct.lua_State.115*, i8*, ...) bitcast (i8* (%struct.lua_State.215*, i8*, ...)* @luaO_pushfstring to i8* (%struct.lua_State.115*, i8*, ...)*)(%struct.lua_State.115* %148, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.509, i64 0, i64 0), i8* %149) #1
  call void bitcast (void (%struct.LexState*, i8*)* @luaX_syntaxerror to void (%struct.LexState.249*, i8*)*)(%struct.LexState.249* %ls, i8* %150) #1
  br label %checknext.exit1.i.i

checknext.exit1.i.i:                              ; preds = %146, %checknext.exit.i.1.i
  call void bitcast (void (%struct.LexState*)* @luaX_next to void (%struct.LexState.249*)*)(%struct.LexState.249* %ls) #1
  %151 = bitcast %struct.expdesc* %e.i.51 to i8*
  call void @llvm.lifetime.start(i64 24, i8* %151) #1
  %152 = call fastcc i32 @subexpr(%struct.LexState.249* %ls, %struct.expdesc* nonnull %e.i.51, i32 0) #1
  %153 = load %struct.FuncState.248*, %struct.FuncState.248** %103, align 8, !tbaa !224
  call void bitcast (void (%struct.FuncState*, %struct.expdesc*)* @luaK_exp2nextreg to void (%struct.FuncState.248*, %struct.expdesc*)*)(%struct.FuncState.248* %153, %struct.expdesc* nonnull %e.i.51) #1
  call void @llvm.lifetime.end(i64 24, i8* %151) #1
  %154 = load i32, i32* %3, align 4, !tbaa !223
  %155 = icmp eq i32 %154, 44
  br i1 %155, label %156, label %160

; <label>:156                                     ; preds = %checknext.exit1.i.i
  call void bitcast (void (%struct.LexState*)* @luaX_next to void (%struct.LexState.249*)*)(%struct.LexState.249* %ls) #1
  %157 = bitcast %struct.expdesc* %e.i.52 to i8*
  call void @llvm.lifetime.start(i64 24, i8* %157) #1
  %158 = call fastcc i32 @subexpr(%struct.LexState.249* %ls, %struct.expdesc* nonnull %e.i.52, i32 0) #1
  %159 = load %struct.FuncState.248*, %struct.FuncState.248** %103, align 8, !tbaa !224
  call void bitcast (void (%struct.FuncState*, %struct.expdesc*)* @luaK_exp2nextreg to void (%struct.FuncState.248*, %struct.expdesc*)*)(%struct.FuncState.248* %159, %struct.expdesc* nonnull %e.i.52) #1
  call void @llvm.lifetime.end(i64 24, i8* %157) #1
  br label %fornum.exit.i

; <label>:160                                     ; preds = %checknext.exit1.i.i
  %161 = load i32, i32* %129, align 4, !tbaa !99
  %162 = call i32 bitcast (i32 (%struct.FuncState*, double)* @luaK_numberK to i32 (%struct.FuncState.248*, double)*)(%struct.FuncState.248* %128, double 1.000000e+00) #1
  %163 = call i32 bitcast (i32 (%struct.FuncState*, i32, i32, i32)* @luaK_codeABx to i32 (%struct.FuncState.248*, i32, i32, i32)*)(%struct.FuncState.248* %128, i32 1, i32 %161, i32 %162) #1
  call void bitcast (void (%struct.FuncState*, i32)* @luaK_reserveregs to void (%struct.FuncState.248*, i32)*)(%struct.FuncState.248* %128, i32 1) #1
  br label %fornum.exit.i

fornum.exit.i:                                    ; preds = %160, %156
  call fastcc void @forbody(%struct.LexState.249* %ls, i32 %130, i32 %2, i32 1, i32 1) #1
  br label %219

; <label>:164                                     ; preds = %str_checkname.exit.i, %str_checkname.exit.i
  %165 = load %struct.FuncState.248*, %struct.FuncState.248** %103, align 8, !tbaa !224
  %166 = bitcast %struct.expdesc* %e.i.i to i8*
  call void @llvm.lifetime.start(i64 24, i8* %166) #1
  %167 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %165, i64 0, i32 9
  %168 = load i32, i32* %167, align 4, !tbaa !99
  %169 = call %union.TString.110* bitcast (%union.TString* (%struct.LexState*, i8*, i64)* @luaX_newstring to %union.TString.110* (%struct.LexState.249*, i8*, i64)*)(%struct.LexState.249* %ls, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.22.513, i64 0, i64 0), i64 15) #1
  call fastcc void @new_localvar(%struct.LexState.249* %ls, %union.TString.110* %169, i32 0) #1
  %170 = call %union.TString.110* bitcast (%union.TString* (%struct.LexState*, i8*, i64)* @luaX_newstring to %union.TString.110* (%struct.LexState.249*, i8*, i64)*)(%struct.LexState.249* %ls, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.23.514, i64 0, i64 0), i64 11) #1
  call fastcc void @new_localvar(%struct.LexState.249* %ls, %union.TString.110* %170, i32 1) #1
  %171 = call %union.TString.110* bitcast (%union.TString* (%struct.LexState*, i8*, i64)* @luaX_newstring to %union.TString.110* (%struct.LexState.249*, i8*, i64)*)(%struct.LexState.249* %ls, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.24.515, i64 0, i64 0), i64 13) #1
  call fastcc void @new_localvar(%struct.LexState.249* %ls, %union.TString.110* %171, i32 2) #1
  call fastcc void @new_localvar(%struct.LexState.249* %ls, %union.TString.110* %125, i32 3) #1
  %172 = load i32, i32* %3, align 4, !tbaa !223
  %173 = icmp eq i32 %172, 44
  br i1 %173, label %.lr.ph64, label %186

.lr.ph64:                                         ; preds = %164
  %174 = getelementptr inbounds %struct.LexState.249, %struct.LexState.249* %ls, i64 0, i32 6
  br label %175

; <label>:175                                     ; preds = %.lr.ph64, %str_checkname.exit.i.i
  %nvars.0.i.i63 = phi i32 [ 4, %.lr.ph64 ], [ %183, %str_checkname.exit.i.i ]
  call void bitcast (void (%struct.LexState*)* @luaX_next to void (%struct.LexState.249*)*)(%struct.LexState.249* %ls) #1
  %176 = load i32, i32* %3, align 4, !tbaa !223
  %177 = icmp eq i32 %176, 285
  br i1 %177, label %str_checkname.exit.i.i, label %178

; <label>:178                                     ; preds = %175
  %179 = load %struct.lua_State.115*, %struct.lua_State.115** %174, align 8, !tbaa !218
  %180 = call i8* bitcast (i8* (%struct.LexState*, i32)* @luaX_token2str to i8* (%struct.LexState.249*, i32)*)(%struct.LexState.249* %ls, i32 285) #1
  %181 = call i8* (%struct.lua_State.115*, i8*, ...) bitcast (i8* (%struct.lua_State.215*, i8*, ...)* @luaO_pushfstring to i8* (%struct.lua_State.115*, i8*, ...)*)(%struct.lua_State.115* %179, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.509, i64 0, i64 0), i8* %180) #1
  call void bitcast (void (%struct.LexState*, i8*)* @luaX_syntaxerror to void (%struct.LexState.249*, i8*)*)(%struct.LexState.249* %ls, i8* %181) #1
  br label %str_checkname.exit.i.i

str_checkname.exit.i.i:                           ; preds = %178, %175
  %182 = load %union.TString.110*, %union.TString.110** %124, align 8, !tbaa !25
  call void bitcast (void (%struct.LexState*)* @luaX_next to void (%struct.LexState.249*)*)(%struct.LexState.249* %ls) #1
  %183 = add nuw nsw i32 %nvars.0.i.i63, 1
  call fastcc void @new_localvar(%struct.LexState.249* %ls, %union.TString.110* %182, i32 %nvars.0.i.i63) #1
  %184 = load i32, i32* %3, align 4, !tbaa !223
  %185 = icmp eq i32 %184, 44
  br i1 %185, label %175, label %._crit_edge

._crit_edge:                                      ; preds = %str_checkname.exit.i.i
  %.lcssa139 = phi i32 [ %184, %str_checkname.exit.i.i ]
  %nvars.0.i.i63.lcssa = phi i32 [ %nvars.0.i.i63, %str_checkname.exit.i.i ]
  %phitmp = add i32 %nvars.0.i.i63.lcssa, -2
  br label %186

; <label>:186                                     ; preds = %._crit_edge, %164
  %187 = phi i32 [ %.lcssa139, %._crit_edge ], [ %172, %164 ]
  %nvars.0.i.i.lcssa = phi i32 [ %phitmp, %._crit_edge ], [ 1, %164 ]
  %188 = icmp eq i32 %187, 267
  br i1 %188, label %checknext.exit.i.i, label %189

; <label>:189                                     ; preds = %186
  %190 = getelementptr inbounds %struct.LexState.249, %struct.LexState.249* %ls, i64 0, i32 6
  %191 = load %struct.lua_State.115*, %struct.lua_State.115** %190, align 8, !tbaa !218
  %192 = call i8* bitcast (i8* (%struct.LexState*, i32)* @luaX_token2str to i8* (%struct.LexState.249*, i32)*)(%struct.LexState.249* %ls, i32 267) #1
  %193 = call i8* (%struct.lua_State.115*, i8*, ...) bitcast (i8* (%struct.lua_State.215*, i8*, ...)* @luaO_pushfstring to i8* (%struct.lua_State.115*, i8*, ...)*)(%struct.lua_State.115* %191, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.509, i64 0, i64 0), i8* %192) #1
  call void bitcast (void (%struct.LexState*, i8*)* @luaX_syntaxerror to void (%struct.LexState.249*, i8*)*)(%struct.LexState.249* %ls, i8* %193) #1
  br label %checknext.exit.i.i

checknext.exit.i.i:                               ; preds = %189, %186
  call void bitcast (void (%struct.LexState*)* @luaX_next to void (%struct.LexState.249*)*)(%struct.LexState.249* %ls) #1
  %194 = load i32, i32* %1, align 4, !tbaa !220
  %195 = call fastcc i32 @subexpr(%struct.LexState.249* %ls, %struct.expdesc* nonnull %e.i.i, i32 0) #1
  %196 = load i32, i32* %3, align 4, !tbaa !223
  %197 = icmp eq i32 %196, 44
  br i1 %197, label %.lr.ph.preheader, label %explist1.exit

.lr.ph.preheader:                                 ; preds = %checknext.exit.i.i
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %.lr.ph
  %n.0.i62 = phi i32 [ %200, %.lr.ph ], [ 1, %.lr.ph.preheader ]
  call void bitcast (void (%struct.LexState*)* @luaX_next to void (%struct.LexState.249*)*)(%struct.LexState.249* %ls) #1
  %198 = load %struct.FuncState.248*, %struct.FuncState.248** %103, align 8, !tbaa !224
  call void bitcast (void (%struct.FuncState*, %struct.expdesc*)* @luaK_exp2nextreg to void (%struct.FuncState.248*, %struct.expdesc*)*)(%struct.FuncState.248* %198, %struct.expdesc* nonnull %e.i.i) #1
  %199 = call fastcc i32 @subexpr(%struct.LexState.249* %ls, %struct.expdesc* nonnull %e.i.i, i32 0) #1
  %200 = add nuw nsw i32 %n.0.i62, 1
  %201 = load i32, i32* %3, align 4, !tbaa !223
  %202 = icmp eq i32 %201, 44
  br i1 %202, label %.lr.ph, label %explist1.exit.loopexit

explist1.exit.loopexit:                           ; preds = %.lr.ph
  %.lcssa = phi i32 [ %200, %.lr.ph ]
  br label %explist1.exit

explist1.exit:                                    ; preds = %explist1.exit.loopexit, %checknext.exit.i.i
  %n.0.i.lcssa = phi i32 [ 1, %checknext.exit.i.i ], [ %.lcssa, %explist1.exit.loopexit ]
  %ls.idx.val.i.i = load %struct.FuncState.248*, %struct.FuncState.248** %103, align 8, !tbaa !224
  %203 = sub nsw i32 3, %n.0.i.lcssa
  %204 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %e.i.i, i64 0, i32 0
  %205 = load i32, i32* %204, align 8, !tbaa !101
  switch i32 %205, label %212 [
    i32 13, label %206
    i32 14, label %206
    i32 0, label %213
  ]

; <label>:206                                     ; preds = %explist1.exit, %explist1.exit
  %207 = add nsw i32 %203, 1
  %208 = icmp slt i32 %207, 0
  %..i.i.i = select i1 %208, i32 0, i32 %207
  call void bitcast (void (%struct.FuncState*, %struct.expdesc*, i32)* @luaK_setreturns to void (%struct.FuncState.248*, %struct.expdesc*, i32)*)(%struct.FuncState.248* %ls.idx.val.i.i, %struct.expdesc* nonnull %e.i.i, i32 %..i.i.i) #1
  %209 = icmp sgt i32 %..i.i.i, 1
  br i1 %209, label %210, label %forlist.exit.i

; <label>:210                                     ; preds = %206
  %211 = add nsw i32 %..i.i.i, -1
  call void bitcast (void (%struct.FuncState*, i32)* @luaK_reserveregs to void (%struct.FuncState.248*, i32)*)(%struct.FuncState.248* %ls.idx.val.i.i, i32 %211) #1
  br label %forlist.exit.i

; <label>:212                                     ; preds = %explist1.exit
  call void bitcast (void (%struct.FuncState*, %struct.expdesc*)* @luaK_exp2nextreg to void (%struct.FuncState.248*, %struct.expdesc*)*)(%struct.FuncState.248* %ls.idx.val.i.i, %struct.expdesc* nonnull %e.i.i) #1
  br label %213

; <label>:213                                     ; preds = %212, %explist1.exit
  %214 = icmp sgt i32 %203, 0
  br i1 %214, label %215, label %forlist.exit.i

; <label>:215                                     ; preds = %213
  %216 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %ls.idx.val.i.i, i64 0, i32 9
  %217 = load i32, i32* %216, align 4, !tbaa !99
  call void bitcast (void (%struct.FuncState*, i32)* @luaK_reserveregs to void (%struct.FuncState.248*, i32)*)(%struct.FuncState.248* %ls.idx.val.i.i, i32 %203) #1
  call void bitcast (void (%struct.FuncState*, i32, i32)* @luaK_nil to void (%struct.FuncState.248*, i32, i32)*)(%struct.FuncState.248* %ls.idx.val.i.i, i32 %217, i32 %203) #1
  br label %forlist.exit.i

forlist.exit.i:                                   ; preds = %215, %213, %210, %206
  call void bitcast (void (%struct.FuncState*, i32)* @luaK_checkstack to void (%struct.FuncState.248*, i32)*)(%struct.FuncState.248* %165, i32 3) #1
  call fastcc void @forbody(%struct.LexState.249* %ls, i32 %168, i32 %194, i32 %nvars.0.i.i.lcssa, i32 0) #1
  call void @llvm.lifetime.end(i64 24, i8* %166) #1
  br label %219

; <label>:218                                     ; preds = %str_checkname.exit.i
  call void bitcast (void (%struct.LexState*, i8*)* @luaX_syntaxerror to void (%struct.LexState.249*, i8*)*)(%struct.LexState.249* %ls, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.516, i64 0, i64 0)) #1
  br label %219

; <label>:219                                     ; preds = %218, %forlist.exit.i, %fornum.exit.i
  call fastcc void @check_match(%struct.LexState.249* %ls, i32 262, i32 264, i32 %2) #1
  %220 = load %struct.BlockCnt*, %struct.BlockCnt** %112, align 8, !tbaa !246
  %221 = bitcast %struct.BlockCnt* %220 to i64*
  %222 = load i64, i64* %221, align 8, !tbaa !252
  store i64 %222, i64* %113, align 8, !tbaa !246
  %223 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %104, i64 0, i32 3
  %224 = load %struct.LexState.249*, %struct.LexState.249** %223, align 8, !tbaa !94
  %225 = getelementptr inbounds %struct.BlockCnt, %struct.BlockCnt* %220, i64 0, i32 2
  %226 = load i8, i8* %225, align 1, !tbaa !250
  %.idx.i.i.2 = getelementptr %struct.LexState.249, %struct.LexState.249* %224, i64 0, i32 5
  %.idx.val.i.i.3 = load %struct.FuncState.248*, %struct.FuncState.248** %.idx.i.i.2, align 8, !tbaa !224
  %227 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %.idx.val.i.i.3, i64 0, i32 13
  %228 = load i8, i8* %227, align 1, !tbaa !91
  %229 = icmp ugt i8 %228, %226
  br i1 %229, label %.lr.ph.i.i.i.8, label %removevars.exit.i.i.11

.lr.ph.i.i.i.8:                                   ; preds = %219
  %230 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %.idx.val.i.i.3, i64 0, i32 6
  %231 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %.idx.val.i.i.3, i64 0, i32 0
  %.pre.i.i.i.4 = load i32, i32* %230, align 4, !tbaa !88
  %.pre1.i.i.i.5 = load %struct.Proto.120*, %struct.Proto.120** %231, align 8, !tbaa !92
  %.phi.trans.insert.i.i.i.6 = getelementptr inbounds %struct.Proto.120, %struct.Proto.120* %.pre1.i.i.i.5, i64 0, i32 7
  %.pre2.i.i.i.7 = load %struct.LocVar.119*, %struct.LocVar.119** %.phi.trans.insert.i.i.i.6, align 8, !tbaa !167
  %232 = zext i8 %228 to i64
  %233 = sub i8 %228, %226
  %234 = add i8 %228, -1
  %xtraiter128 = and i8 %233, 1
  %lcmp.mod129 = icmp eq i8 %xtraiter128, 0
  br i1 %lcmp.mod129, label %.lr.ph.i.i.i.8.split, label %235

; <label>:235                                     ; preds = %.lr.ph.i.i.i.8
  %236 = add i8 %228, -1
  store i8 %236, i8* %227, align 1, !tbaa !91
  %237 = zext i8 %236 to i64
  %238 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %.idx.val.i.i.3, i64 0, i32 15, i64 %237
  %239 = load i16, i16* %238, align 2, !tbaa !87
  %240 = zext i16 %239 to i64
  %241 = getelementptr inbounds %struct.LocVar.119, %struct.LocVar.119* %.pre2.i.i.i.7, i64 %240, i32 2
  store i32 %.pre.i.i.i.4, i32* %241, align 4, !tbaa !171
  %indvars.iv.next.i.i.10.prol = add nsw i64 %232, -1
  br label %.lr.ph.i.i.i.8.split

.lr.ph.i.i.i.8.split:                             ; preds = %.lr.ph.i.i.i.8, %235
  %indvars.iv.i.i.9.unr = phi i64 [ %232, %.lr.ph.i.i.i.8 ], [ %indvars.iv.next.i.i.10.prol, %235 ]
  %242 = icmp eq i8 %234, %226
  br i1 %242, label %removevars.exit.i.i.11.loopexit, label %.lr.ph.i.i.i.8.split.split

.lr.ph.i.i.i.8.split.split:                       ; preds = %.lr.ph.i.i.i.8.split
  br label %243

; <label>:243                                     ; preds = %243, %.lr.ph.i.i.i.8.split.split
  %indvars.iv.i.i.9 = phi i64 [ %indvars.iv.i.i.9.unr, %.lr.ph.i.i.i.8.split.split ], [ %indvars.iv.next.i.i.10.1, %243 ]
  %244 = trunc i64 %indvars.iv.i.i.9 to i8
  %245 = add i8 %244, -1
  store i8 %245, i8* %227, align 1, !tbaa !91
  %246 = zext i8 %245 to i64
  %247 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %.idx.val.i.i.3, i64 0, i32 15, i64 %246
  %248 = load i16, i16* %247, align 2, !tbaa !87
  %249 = zext i16 %248 to i64
  %250 = getelementptr inbounds %struct.LocVar.119, %struct.LocVar.119* %.pre2.i.i.i.7, i64 %249, i32 2
  store i32 %.pre.i.i.i.4, i32* %250, align 4, !tbaa !171
  %indvars.iv.next.i.i.10 = add i64 %indvars.iv.i.i.9, 255
  %251 = trunc i64 %indvars.iv.next.i.i.10 to i8
  %252 = add i8 %251, -1
  store i8 %252, i8* %227, align 1, !tbaa !91
  %253 = zext i8 %252 to i64
  %254 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %.idx.val.i.i.3, i64 0, i32 15, i64 %253
  %255 = load i16, i16* %254, align 2, !tbaa !87
  %256 = zext i16 %255 to i64
  %257 = getelementptr inbounds %struct.LocVar.119, %struct.LocVar.119* %.pre2.i.i.i.7, i64 %256, i32 2
  store i32 %.pre.i.i.i.4, i32* %257, align 4, !tbaa !171
  %258 = icmp ugt i8 %252, %226
  %indvars.iv.next.i.i.10.1 = add nsw i64 %indvars.iv.i.i.9, -2
  br i1 %258, label %243, label %removevars.exit.i.i.11.loopexit.unr-lcssa

removevars.exit.i.i.11.loopexit.unr-lcssa:        ; preds = %243
  br label %removevars.exit.i.i.11.loopexit

removevars.exit.i.i.11.loopexit:                  ; preds = %.lr.ph.i.i.i.8.split, %removevars.exit.i.i.11.loopexit.unr-lcssa
  br label %removevars.exit.i.i.11

removevars.exit.i.i.11:                           ; preds = %removevars.exit.i.i.11.loopexit, %219
  %259 = getelementptr inbounds %struct.BlockCnt, %struct.BlockCnt* %220, i64 0, i32 3
  %260 = load i8, i8* %259, align 1, !tbaa !251
  %261 = icmp eq i8 %260, 0
  br i1 %261, label %forstat.exit, label %262

; <label>:262                                     ; preds = %removevars.exit.i.i.11
  %263 = zext i8 %226 to i32
  %264 = call i32 bitcast (i32 (%struct.FuncState*, i32, i32, i32, i32)* @luaK_codeABC to i32 (%struct.FuncState.248*, i32, i32, i32, i32)*)(%struct.FuncState.248* %104, i32 35, i32 %263, i32 0, i32 0) #1
  br label %forstat.exit

forstat.exit:                                     ; preds = %removevars.exit.i.i.11, %262
  %265 = load i8, i8* %108, align 1, !tbaa !91
  %266 = zext i8 %265 to i32
  %267 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %104, i64 0, i32 9
  store i32 %266, i32* %267, align 4, !tbaa !99
  %268 = getelementptr inbounds %struct.BlockCnt, %struct.BlockCnt* %220, i64 0, i32 1
  %269 = load i32, i32* %268, align 4, !tbaa !247
  call void bitcast (void (%struct.FuncState*, i32)* @luaK_patchtohere to void (%struct.FuncState.248*, i32)*)(%struct.FuncState.248* %104, i32 %269) #1
  call void @llvm.lifetime.end(i64 16, i8* %105) #1
  br label %756

; <label>:270                                     ; preds = %0
  %271 = getelementptr inbounds %struct.LexState.249, %struct.LexState.249* %ls, i64 0, i32 5
  %272 = load %struct.FuncState.248*, %struct.FuncState.248** %271, align 8, !tbaa !224
  %273 = tail call i32 bitcast (i32 (%struct.FuncState*)* @luaK_getlabel to i32 (%struct.FuncState.248*)*)(%struct.FuncState.248* %272) #1
  %274 = bitcast %struct.BlockCnt* %bl1.i to i8*
  call void @llvm.lifetime.start(i64 16, i8* %274) #1
  %275 = bitcast %struct.BlockCnt* %bl2.i to i8*
  call void @llvm.lifetime.start(i64 16, i8* %275) #1
  %276 = getelementptr inbounds %struct.BlockCnt, %struct.BlockCnt* %bl1.i, i64 0, i32 1
  store i32 -1, i32* %276, align 8, !tbaa !247
  %277 = getelementptr inbounds %struct.BlockCnt, %struct.BlockCnt* %bl1.i, i64 0, i32 4
  store i8 1, i8* %277, align 2, !tbaa !249
  %278 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %272, i64 0, i32 13
  %279 = load i8, i8* %278, align 1, !tbaa !91
  %280 = getelementptr inbounds %struct.BlockCnt, %struct.BlockCnt* %bl1.i, i64 0, i32 2
  store i8 %279, i8* %280, align 4, !tbaa !250
  %281 = getelementptr inbounds %struct.BlockCnt, %struct.BlockCnt* %bl1.i, i64 0, i32 3
  store i8 0, i8* %281, align 1, !tbaa !251
  %282 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %272, i64 0, i32 5
  %283 = bitcast %struct.BlockCnt** %282 to i64*
  %284 = load i64, i64* %283, align 8, !tbaa !246
  %285 = bitcast %struct.BlockCnt* %bl1.i to i64*
  store i64 %284, i64* %285, align 8, !tbaa !252
  %286 = getelementptr inbounds %struct.BlockCnt, %struct.BlockCnt* %bl2.i, i64 0, i32 1
  store i32 -1, i32* %286, align 8, !tbaa !247
  %287 = getelementptr inbounds %struct.BlockCnt, %struct.BlockCnt* %bl2.i, i64 0, i32 4
  store i8 0, i8* %287, align 2, !tbaa !249
  %288 = getelementptr inbounds %struct.BlockCnt, %struct.BlockCnt* %bl2.i, i64 0, i32 2
  store i8 %279, i8* %288, align 4, !tbaa !250
  %289 = getelementptr inbounds %struct.BlockCnt, %struct.BlockCnt* %bl2.i, i64 0, i32 3
  store i8 0, i8* %289, align 1, !tbaa !251
  %290 = ptrtoint %struct.BlockCnt* %bl1.i to i64
  %291 = bitcast %struct.BlockCnt* %bl2.i to i64*
  store i64 %290, i64* %291, align 8, !tbaa !252
  store %struct.BlockCnt* %bl2.i, %struct.BlockCnt** %282, align 8, !tbaa !246
  call void bitcast (void (%struct.LexState*)* @luaX_next to void (%struct.LexState.249*)*)(%struct.LexState.249* %ls) #1
  %292 = getelementptr inbounds %struct.LexState.249, %struct.LexState.249* %ls, i64 0, i32 6
  %293 = load %struct.lua_State.115*, %struct.lua_State.115** %292, align 8, !tbaa !218
  %294 = getelementptr inbounds %struct.lua_State.115, %struct.lua_State.115* %293, i64 0, i32 15
  %295 = load i16, i16* %294, align 2, !tbaa !16
  %296 = add i16 %295, 1
  store i16 %296, i16* %294, align 2, !tbaa !16
  %297 = icmp ugt i16 %296, 200
  br i1 %297, label %298, label %enterlevel.exit.i.i.preheader.preheader

; <label>:298                                     ; preds = %270
  call void bitcast (void (%struct.LexState*, i8*, i32)* @luaX_lexerror to void (%struct.LexState.249*, i8*, i32)*)(%struct.LexState.249* %ls, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.1.508, i64 0, i64 0), i32 0) #1
  br label %enterlevel.exit.i.i.preheader.preheader

enterlevel.exit.i.i.preheader.preheader:          ; preds = %298, %270
  br label %enterlevel.exit.i.i.preheader

enterlevel.exit.i.i.preheader:                    ; preds = %enterlevel.exit.i.i.preheader.preheader, %testnext.exit.i.i.14
  %299 = load i32, i32* %3, align 4, !tbaa !223
  switch i32 %299, label %300 [
    i32 260, label %chunk.exit.i
    i32 261, label %chunk.exit.i
    i32 262, label %chunk.exit.i
    i32 276, label %chunk.exit.i
    i32 287, label %chunk.exit.i
  ]

; <label>:300                                     ; preds = %enterlevel.exit.i.i.preheader
  %301 = call fastcc i32 @statement(%struct.LexState.249* %ls) #1
  %302 = load i32, i32* %3, align 4, !tbaa !223
  %303 = icmp eq i32 %302, 59
  br i1 %303, label %304, label %testnext.exit.i.i.14

; <label>:304                                     ; preds = %300
  call void bitcast (void (%struct.LexState*)* @luaX_next to void (%struct.LexState.249*)*)(%struct.LexState.249* %ls) #1
  br label %testnext.exit.i.i.14

testnext.exit.i.i.14:                             ; preds = %304, %300
  %305 = load %struct.FuncState.248*, %struct.FuncState.248** %271, align 8, !tbaa !224
  %306 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %305, i64 0, i32 13
  %307 = load i8, i8* %306, align 1, !tbaa !91
  %308 = zext i8 %307 to i32
  %309 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %305, i64 0, i32 9
  store i32 %308, i32* %309, align 4, !tbaa !99
  %310 = icmp eq i32 %301, 0
  br i1 %310, label %enterlevel.exit.i.i.preheader, label %chunk.exit.i

chunk.exit.i:                                     ; preds = %enterlevel.exit.i.i.preheader, %enterlevel.exit.i.i.preheader, %enterlevel.exit.i.i.preheader, %enterlevel.exit.i.i.preheader, %enterlevel.exit.i.i.preheader, %testnext.exit.i.i.14
  %311 = load %struct.lua_State.115*, %struct.lua_State.115** %292, align 8, !tbaa !218
  %312 = getelementptr inbounds %struct.lua_State.115, %struct.lua_State.115* %311, i64 0, i32 15
  %313 = load i16, i16* %312, align 2, !tbaa !16
  %314 = add i16 %313, -1
  store i16 %314, i16* %312, align 2, !tbaa !16
  call fastcc void @check_match(%struct.LexState.249* %ls, i32 276, i32 272, i32 %2) #1
  %315 = bitcast %struct.expdesc* %v.i.i.12 to i8*
  call void @llvm.lifetime.start(i64 24, i8* %315) #1
  %316 = call fastcc i32 @subexpr(%struct.LexState.249* %ls, %struct.expdesc* nonnull %v.i.i.12, i32 0) #1
  %317 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %v.i.i.12, i64 0, i32 0
  %318 = load i32, i32* %317, align 8, !tbaa !101
  %319 = icmp eq i32 %318, 1
  br i1 %319, label %320, label %cond.exit.i.15

; <label>:320                                     ; preds = %chunk.exit.i
  store i32 3, i32* %317, align 8, !tbaa !101
  br label %cond.exit.i.15

cond.exit.i.15:                                   ; preds = %320, %chunk.exit.i
  %321 = load %struct.FuncState.248*, %struct.FuncState.248** %271, align 8, !tbaa !224
  call void bitcast (void (%struct.FuncState*, %struct.expdesc*)* @luaK_goiftrue to void (%struct.FuncState.248*, %struct.expdesc*)*)(%struct.FuncState.248* %321, %struct.expdesc* nonnull %v.i.i.12) #1
  %322 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %v.i.i.12, i64 0, i32 3
  %323 = load i32, i32* %322, align 4, !tbaa !107
  call void @llvm.lifetime.end(i64 24, i8* %315) #1
  %324 = load i8, i8* %289, align 1, !tbaa !251
  %325 = icmp eq i8 %324, 0
  br i1 %325, label %326, label %378

; <label>:326                                     ; preds = %cond.exit.i.15
  %327 = load %struct.BlockCnt*, %struct.BlockCnt** %282, align 8, !tbaa !246
  %328 = bitcast %struct.BlockCnt* %327 to i64*
  %329 = load i64, i64* %328, align 8, !tbaa !252
  store i64 %329, i64* %283, align 8, !tbaa !246
  %330 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %272, i64 0, i32 3
  %331 = load %struct.LexState.249*, %struct.LexState.249** %330, align 8, !tbaa !94
  %332 = getelementptr inbounds %struct.BlockCnt, %struct.BlockCnt* %327, i64 0, i32 2
  %333 = load i8, i8* %332, align 1, !tbaa !250
  %.idx.i.i.16 = getelementptr %struct.LexState.249, %struct.LexState.249* %331, i64 0, i32 5
  %.idx.val.i.i.17 = load %struct.FuncState.248*, %struct.FuncState.248** %.idx.i.i.16, align 8, !tbaa !224
  %334 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %.idx.val.i.i.17, i64 0, i32 13
  %335 = load i8, i8* %334, align 1, !tbaa !91
  %336 = icmp ugt i8 %335, %333
  br i1 %336, label %.lr.ph.i.i.i.22, label %removevars.exit.i.i.25

.lr.ph.i.i.i.22:                                  ; preds = %326
  %337 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %.idx.val.i.i.17, i64 0, i32 6
  %338 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %.idx.val.i.i.17, i64 0, i32 0
  %.pre.i.i.i.18 = load i32, i32* %337, align 4, !tbaa !88
  %.pre1.i.i.i.19 = load %struct.Proto.120*, %struct.Proto.120** %338, align 8, !tbaa !92
  %.phi.trans.insert.i.i.i.20 = getelementptr inbounds %struct.Proto.120, %struct.Proto.120* %.pre1.i.i.i.19, i64 0, i32 7
  %.pre2.i.i.i.21 = load %struct.LocVar.119*, %struct.LocVar.119** %.phi.trans.insert.i.i.i.20, align 8, !tbaa !167
  %339 = zext i8 %335 to i64
  %340 = sub i8 %335, %333
  %341 = add i8 %335, -1
  %xtraiter132 = and i8 %340, 1
  %lcmp.mod133 = icmp eq i8 %xtraiter132, 0
  br i1 %lcmp.mod133, label %.lr.ph.i.i.i.22.split, label %342

; <label>:342                                     ; preds = %.lr.ph.i.i.i.22
  %343 = add i8 %335, -1
  store i8 %343, i8* %334, align 1, !tbaa !91
  %344 = zext i8 %343 to i64
  %345 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %.idx.val.i.i.17, i64 0, i32 15, i64 %344
  %346 = load i16, i16* %345, align 2, !tbaa !87
  %347 = zext i16 %346 to i64
  %348 = getelementptr inbounds %struct.LocVar.119, %struct.LocVar.119* %.pre2.i.i.i.21, i64 %347, i32 2
  store i32 %.pre.i.i.i.18, i32* %348, align 4, !tbaa !171
  %indvars.iv.next.i.i.24.prol = add nsw i64 %339, -1
  br label %.lr.ph.i.i.i.22.split

.lr.ph.i.i.i.22.split:                            ; preds = %.lr.ph.i.i.i.22, %342
  %indvars.iv.i.i.23.unr = phi i64 [ %339, %.lr.ph.i.i.i.22 ], [ %indvars.iv.next.i.i.24.prol, %342 ]
  %349 = icmp eq i8 %341, %333
  br i1 %349, label %removevars.exit.i.i.25.loopexit, label %.lr.ph.i.i.i.22.split.split

.lr.ph.i.i.i.22.split.split:                      ; preds = %.lr.ph.i.i.i.22.split
  br label %350

; <label>:350                                     ; preds = %350, %.lr.ph.i.i.i.22.split.split
  %indvars.iv.i.i.23 = phi i64 [ %indvars.iv.i.i.23.unr, %.lr.ph.i.i.i.22.split.split ], [ %indvars.iv.next.i.i.24.1, %350 ]
  %351 = trunc i64 %indvars.iv.i.i.23 to i8
  %352 = add i8 %351, -1
  store i8 %352, i8* %334, align 1, !tbaa !91
  %353 = zext i8 %352 to i64
  %354 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %.idx.val.i.i.17, i64 0, i32 15, i64 %353
  %355 = load i16, i16* %354, align 2, !tbaa !87
  %356 = zext i16 %355 to i64
  %357 = getelementptr inbounds %struct.LocVar.119, %struct.LocVar.119* %.pre2.i.i.i.21, i64 %356, i32 2
  store i32 %.pre.i.i.i.18, i32* %357, align 4, !tbaa !171
  %indvars.iv.next.i.i.24 = add i64 %indvars.iv.i.i.23, 255
  %358 = trunc i64 %indvars.iv.next.i.i.24 to i8
  %359 = add i8 %358, -1
  store i8 %359, i8* %334, align 1, !tbaa !91
  %360 = zext i8 %359 to i64
  %361 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %.idx.val.i.i.17, i64 0, i32 15, i64 %360
  %362 = load i16, i16* %361, align 2, !tbaa !87
  %363 = zext i16 %362 to i64
  %364 = getelementptr inbounds %struct.LocVar.119, %struct.LocVar.119* %.pre2.i.i.i.21, i64 %363, i32 2
  store i32 %.pre.i.i.i.18, i32* %364, align 4, !tbaa !171
  %365 = icmp ugt i8 %359, %333
  %indvars.iv.next.i.i.24.1 = add nsw i64 %indvars.iv.i.i.23, -2
  br i1 %365, label %350, label %removevars.exit.i.i.25.loopexit.unr-lcssa

removevars.exit.i.i.25.loopexit.unr-lcssa:        ; preds = %350
  br label %removevars.exit.i.i.25.loopexit

removevars.exit.i.i.25.loopexit:                  ; preds = %.lr.ph.i.i.i.22.split, %removevars.exit.i.i.25.loopexit.unr-lcssa
  br label %removevars.exit.i.i.25

removevars.exit.i.i.25:                           ; preds = %removevars.exit.i.i.25.loopexit, %326
  %366 = getelementptr inbounds %struct.BlockCnt, %struct.BlockCnt* %327, i64 0, i32 3
  %367 = load i8, i8* %366, align 1, !tbaa !251
  %368 = icmp eq i8 %367, 0
  br i1 %368, label %leaveblock.exit.i, label %369

; <label>:369                                     ; preds = %removevars.exit.i.i.25
  %370 = zext i8 %333 to i32
  %371 = call i32 bitcast (i32 (%struct.FuncState*, i32, i32, i32, i32)* @luaK_codeABC to i32 (%struct.FuncState.248*, i32, i32, i32, i32)*)(%struct.FuncState.248* %272, i32 35, i32 %370, i32 0, i32 0) #1
  br label %leaveblock.exit.i

leaveblock.exit.i:                                ; preds = %369, %removevars.exit.i.i.25
  %372 = load i8, i8* %278, align 1, !tbaa !91
  %373 = zext i8 %372 to i32
  %374 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %272, i64 0, i32 9
  store i32 %373, i32* %374, align 4, !tbaa !99
  %375 = getelementptr inbounds %struct.BlockCnt, %struct.BlockCnt* %327, i64 0, i32 1
  %376 = load i32, i32* %375, align 4, !tbaa !247
  call void bitcast (void (%struct.FuncState*, i32)* @luaK_patchtohere to void (%struct.FuncState.248*, i32)*)(%struct.FuncState.248* %272, i32 %376) #1
  %377 = load %struct.FuncState.248*, %struct.FuncState.248** %271, align 8, !tbaa !224
  call void bitcast (void (%struct.FuncState*, i32, i32)* @luaK_patchlist to void (%struct.FuncState.248*, i32, i32)*)(%struct.FuncState.248* %377, i32 %323, i32 %273) #1
  br label %453

; <label>:378                                     ; preds = %cond.exit.i.15
  %379 = load %struct.FuncState.248*, %struct.FuncState.248** %271, align 8, !tbaa !224
  %380 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %379, i64 0, i32 5
  %bl.0.6.i.i = load %struct.BlockCnt*, %struct.BlockCnt** %380, align 8
  %381 = icmp eq %struct.BlockCnt* %bl.0.6.i.i, null
  br i1 %381, label %.critedge1.i.i, label %.lr.ph.i.i.preheader

.lr.ph.i.i.preheader:                             ; preds = %378
  br label %.lr.ph.i.i

.lr.ph.i.i:                                       ; preds = %.lr.ph.i.i.preheader, %385
  %bl.08.i.i = phi %struct.BlockCnt* [ %bl.0.i.i, %385 ], [ %bl.0.6.i.i, %.lr.ph.i.i.preheader ]
  %upval.07.i.i = phi i32 [ %389, %385 ], [ 0, %.lr.ph.i.i.preheader ]
  %382 = getelementptr inbounds %struct.BlockCnt, %struct.BlockCnt* %bl.08.i.i, i64 0, i32 4
  %383 = load i8, i8* %382, align 1, !tbaa !249
  %384 = icmp eq i8 %383, 0
  br i1 %384, label %385, label %.critedge.i.i.loopexit

; <label>:385                                     ; preds = %.lr.ph.i.i
  %386 = getelementptr inbounds %struct.BlockCnt, %struct.BlockCnt* %bl.08.i.i, i64 0, i32 3
  %387 = load i8, i8* %386, align 1, !tbaa !251
  %388 = zext i8 %387 to i32
  %389 = or i32 %388, %upval.07.i.i
  %390 = getelementptr inbounds %struct.BlockCnt, %struct.BlockCnt* %bl.08.i.i, i64 0, i32 0
  %bl.0.i.i = load %struct.BlockCnt*, %struct.BlockCnt** %390, align 8
  %391 = icmp eq %struct.BlockCnt* %bl.0.i.i, null
  br i1 %391, label %.critedge1.i.i.loopexit, label %.lr.ph.i.i

.critedge1.i.i.loopexit:                          ; preds = %385
  %.lcssa142 = phi i32 [ %389, %385 ]
  br label %.critedge1.i.i

.critedge1.i.i:                                   ; preds = %.critedge1.i.i.loopexit, %378
  %upval.0.lcssa.i.i = phi i32 [ 0, %378 ], [ %.lcssa142, %.critedge1.i.i.loopexit ]
  call void bitcast (void (%struct.LexState*, i8*)* @luaX_syntaxerror to void (%struct.LexState.249*, i8*)*)(%struct.LexState.249* %ls, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.25.517, i64 0, i64 0)) #1
  br label %.critedge.i.i

.critedge.i.i.loopexit:                           ; preds = %.lr.ph.i.i
  %upval.07.i.i.lcssa = phi i32 [ %upval.07.i.i, %.lr.ph.i.i ]
  %bl.08.i.i.lcssa = phi %struct.BlockCnt* [ %bl.08.i.i, %.lr.ph.i.i ]
  br label %.critedge.i.i

.critedge.i.i:                                    ; preds = %.critedge.i.i.loopexit, %.critedge1.i.i
  %bl.05.i.i = phi %struct.BlockCnt* [ null, %.critedge1.i.i ], [ %bl.08.i.i.lcssa, %.critedge.i.i.loopexit ]
  %upval.03.i.i = phi i32 [ %upval.0.lcssa.i.i, %.critedge1.i.i ], [ %upval.07.i.i.lcssa, %.critedge.i.i.loopexit ]
  %392 = icmp eq i32 %upval.03.i.i, 0
  br i1 %392, label %breakstat.exit.i, label %393

; <label>:393                                     ; preds = %.critedge.i.i
  %394 = getelementptr inbounds %struct.BlockCnt, %struct.BlockCnt* %bl.05.i.i, i64 0, i32 2
  %395 = load i8, i8* %394, align 1, !tbaa !250
  %396 = zext i8 %395 to i32
  %397 = call i32 bitcast (i32 (%struct.FuncState*, i32, i32, i32, i32)* @luaK_codeABC to i32 (%struct.FuncState.248*, i32, i32, i32, i32)*)(%struct.FuncState.248* %379, i32 35, i32 %396, i32 0, i32 0) #1
  br label %breakstat.exit.i

breakstat.exit.i:                                 ; preds = %393, %.critedge.i.i
  %398 = getelementptr inbounds %struct.BlockCnt, %struct.BlockCnt* %bl.05.i.i, i64 0, i32 1
  %399 = call i32 bitcast (i32 (%struct.FuncState*)* @luaK_jump to i32 (%struct.FuncState.248*)*)(%struct.FuncState.248* %379) #1
  call void bitcast (void (%struct.FuncState*, i32*, i32)* @luaK_concat to void (%struct.FuncState.248*, i32*, i32)*)(%struct.FuncState.248* %379, i32* %398, i32 %399) #1
  %400 = load %struct.FuncState.248*, %struct.FuncState.248** %271, align 8, !tbaa !224
  call void bitcast (void (%struct.FuncState*, i32)* @luaK_patchtohere to void (%struct.FuncState.248*, i32)*)(%struct.FuncState.248* %400, i32 %323) #1
  %401 = load %struct.BlockCnt*, %struct.BlockCnt** %282, align 8, !tbaa !246
  %402 = bitcast %struct.BlockCnt* %401 to i64*
  %403 = load i64, i64* %402, align 8, !tbaa !252
  store i64 %403, i64* %283, align 8, !tbaa !246
  %404 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %272, i64 0, i32 3
  %405 = load %struct.LexState.249*, %struct.LexState.249** %404, align 8, !tbaa !94
  %406 = getelementptr inbounds %struct.BlockCnt, %struct.BlockCnt* %401, i64 0, i32 2
  %407 = load i8, i8* %406, align 1, !tbaa !250
  %.idx.i.1.i = getelementptr %struct.LexState.249, %struct.LexState.249* %405, i64 0, i32 5
  %.idx.val.i.2.i = load %struct.FuncState.248*, %struct.FuncState.248** %.idx.i.1.i, align 8, !tbaa !224
  %408 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %.idx.val.i.2.i, i64 0, i32 13
  %409 = load i8, i8* %408, align 1, !tbaa !91
  %410 = icmp ugt i8 %409, %407
  br i1 %410, label %.lr.ph.i.i.7.i, label %removevars.exit.i.10.i

.lr.ph.i.i.7.i:                                   ; preds = %breakstat.exit.i
  %411 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %.idx.val.i.2.i, i64 0, i32 6
  %412 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %.idx.val.i.2.i, i64 0, i32 0
  %.pre.i.i.3.i = load i32, i32* %411, align 4, !tbaa !88
  %.pre1.i.i.4.i = load %struct.Proto.120*, %struct.Proto.120** %412, align 8, !tbaa !92
  %.phi.trans.insert.i.i.5.i = getelementptr inbounds %struct.Proto.120, %struct.Proto.120* %.pre1.i.i.4.i, i64 0, i32 7
  %.pre2.i.i.6.i = load %struct.LocVar.119*, %struct.LocVar.119** %.phi.trans.insert.i.i.5.i, align 8, !tbaa !167
  %413 = zext i8 %409 to i64
  %414 = sub i8 %409, %407
  %415 = add i8 %409, -1
  %xtraiter134 = and i8 %414, 1
  %lcmp.mod135 = icmp eq i8 %xtraiter134, 0
  br i1 %lcmp.mod135, label %.lr.ph.i.i.7.i.split, label %416

; <label>:416                                     ; preds = %.lr.ph.i.i.7.i
  %417 = add i8 %409, -1
  store i8 %417, i8* %408, align 1, !tbaa !91
  %418 = zext i8 %417 to i64
  %419 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %.idx.val.i.2.i, i64 0, i32 15, i64 %418
  %420 = load i16, i16* %419, align 2, !tbaa !87
  %421 = zext i16 %420 to i64
  %422 = getelementptr inbounds %struct.LocVar.119, %struct.LocVar.119* %.pre2.i.i.6.i, i64 %421, i32 2
  store i32 %.pre.i.i.3.i, i32* %422, align 4, !tbaa !171
  %indvars.iv.next.i.9.i.prol = add nsw i64 %413, -1
  br label %.lr.ph.i.i.7.i.split

.lr.ph.i.i.7.i.split:                             ; preds = %.lr.ph.i.i.7.i, %416
  %indvars.iv.i.8.i.unr = phi i64 [ %413, %.lr.ph.i.i.7.i ], [ %indvars.iv.next.i.9.i.prol, %416 ]
  %423 = icmp eq i8 %415, %407
  br i1 %423, label %removevars.exit.i.10.i.loopexit, label %.lr.ph.i.i.7.i.split.split

.lr.ph.i.i.7.i.split.split:                       ; preds = %.lr.ph.i.i.7.i.split
  br label %424

; <label>:424                                     ; preds = %424, %.lr.ph.i.i.7.i.split.split
  %indvars.iv.i.8.i = phi i64 [ %indvars.iv.i.8.i.unr, %.lr.ph.i.i.7.i.split.split ], [ %indvars.iv.next.i.9.i.1, %424 ]
  %425 = trunc i64 %indvars.iv.i.8.i to i8
  %426 = add i8 %425, -1
  store i8 %426, i8* %408, align 1, !tbaa !91
  %427 = zext i8 %426 to i64
  %428 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %.idx.val.i.2.i, i64 0, i32 15, i64 %427
  %429 = load i16, i16* %428, align 2, !tbaa !87
  %430 = zext i16 %429 to i64
  %431 = getelementptr inbounds %struct.LocVar.119, %struct.LocVar.119* %.pre2.i.i.6.i, i64 %430, i32 2
  store i32 %.pre.i.i.3.i, i32* %431, align 4, !tbaa !171
  %indvars.iv.next.i.9.i = add i64 %indvars.iv.i.8.i, 255
  %432 = trunc i64 %indvars.iv.next.i.9.i to i8
  %433 = add i8 %432, -1
  store i8 %433, i8* %408, align 1, !tbaa !91
  %434 = zext i8 %433 to i64
  %435 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %.idx.val.i.2.i, i64 0, i32 15, i64 %434
  %436 = load i16, i16* %435, align 2, !tbaa !87
  %437 = zext i16 %436 to i64
  %438 = getelementptr inbounds %struct.LocVar.119, %struct.LocVar.119* %.pre2.i.i.6.i, i64 %437, i32 2
  store i32 %.pre.i.i.3.i, i32* %438, align 4, !tbaa !171
  %439 = icmp ugt i8 %433, %407
  %indvars.iv.next.i.9.i.1 = add nsw i64 %indvars.iv.i.8.i, -2
  br i1 %439, label %424, label %removevars.exit.i.10.i.loopexit.unr-lcssa

removevars.exit.i.10.i.loopexit.unr-lcssa:        ; preds = %424
  br label %removevars.exit.i.10.i.loopexit

removevars.exit.i.10.i.loopexit:                  ; preds = %.lr.ph.i.i.7.i.split, %removevars.exit.i.10.i.loopexit.unr-lcssa
  br label %removevars.exit.i.10.i

removevars.exit.i.10.i:                           ; preds = %removevars.exit.i.10.i.loopexit, %breakstat.exit.i
  %440 = getelementptr inbounds %struct.BlockCnt, %struct.BlockCnt* %401, i64 0, i32 3
  %441 = load i8, i8* %440, align 1, !tbaa !251
  %442 = icmp eq i8 %441, 0
  br i1 %442, label %leaveblock.exit11.i, label %443

; <label>:443                                     ; preds = %removevars.exit.i.10.i
  %444 = zext i8 %407 to i32
  %445 = call i32 bitcast (i32 (%struct.FuncState*, i32, i32, i32, i32)* @luaK_codeABC to i32 (%struct.FuncState.248*, i32, i32, i32, i32)*)(%struct.FuncState.248* %272, i32 35, i32 %444, i32 0, i32 0) #1
  br label %leaveblock.exit11.i

leaveblock.exit11.i:                              ; preds = %443, %removevars.exit.i.10.i
  %446 = load i8, i8* %278, align 1, !tbaa !91
  %447 = zext i8 %446 to i32
  %448 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %272, i64 0, i32 9
  store i32 %447, i32* %448, align 4, !tbaa !99
  %449 = getelementptr inbounds %struct.BlockCnt, %struct.BlockCnt* %401, i64 0, i32 1
  %450 = load i32, i32* %449, align 4, !tbaa !247
  call void bitcast (void (%struct.FuncState*, i32)* @luaK_patchtohere to void (%struct.FuncState.248*, i32)*)(%struct.FuncState.248* %272, i32 %450) #1
  %451 = load %struct.FuncState.248*, %struct.FuncState.248** %271, align 8, !tbaa !224
  %452 = call i32 bitcast (i32 (%struct.FuncState*)* @luaK_jump to i32 (%struct.FuncState.248*)*)(%struct.FuncState.248* %272) #1
  call void bitcast (void (%struct.FuncState*, i32, i32)* @luaK_patchlist to void (%struct.FuncState.248*, i32, i32)*)(%struct.FuncState.248* %451, i32 %452, i32 %273) #1
  br label %453

; <label>:453                                     ; preds = %leaveblock.exit11.i, %leaveblock.exit.i
  %.pre-phi = phi %struct.LexState.249** [ %404, %leaveblock.exit11.i ], [ %330, %leaveblock.exit.i ]
  %454 = load %struct.BlockCnt*, %struct.BlockCnt** %282, align 8, !tbaa !246
  %455 = bitcast %struct.BlockCnt* %454 to i64*
  %456 = load i64, i64* %455, align 8, !tbaa !252
  store i64 %456, i64* %283, align 8, !tbaa !246
  %457 = load %struct.LexState.249*, %struct.LexState.249** %.pre-phi, align 8, !tbaa !94
  %458 = getelementptr inbounds %struct.BlockCnt, %struct.BlockCnt* %454, i64 0, i32 2
  %459 = load i8, i8* %458, align 1, !tbaa !250
  %.idx.i.12.i = getelementptr %struct.LexState.249, %struct.LexState.249* %457, i64 0, i32 5
  %.idx.val.i.13.i = load %struct.FuncState.248*, %struct.FuncState.248** %.idx.i.12.i, align 8, !tbaa !224
  %460 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %.idx.val.i.13.i, i64 0, i32 13
  %461 = load i8, i8* %460, align 1, !tbaa !91
  %462 = icmp ugt i8 %461, %459
  br i1 %462, label %.lr.ph.i.i.18.i, label %removevars.exit.i.21.i

.lr.ph.i.i.18.i:                                  ; preds = %453
  %463 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %.idx.val.i.13.i, i64 0, i32 6
  %464 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %.idx.val.i.13.i, i64 0, i32 0
  %.pre.i.i.14.i = load i32, i32* %463, align 4, !tbaa !88
  %.pre1.i.i.15.i = load %struct.Proto.120*, %struct.Proto.120** %464, align 8, !tbaa !92
  %.phi.trans.insert.i.i.16.i = getelementptr inbounds %struct.Proto.120, %struct.Proto.120* %.pre1.i.i.15.i, i64 0, i32 7
  %.pre2.i.i.17.i = load %struct.LocVar.119*, %struct.LocVar.119** %.phi.trans.insert.i.i.16.i, align 8, !tbaa !167
  %465 = zext i8 %461 to i64
  %466 = sub i8 %461, %459
  %467 = add i8 %461, -1
  %xtraiter130 = and i8 %466, 1
  %lcmp.mod131 = icmp eq i8 %xtraiter130, 0
  br i1 %lcmp.mod131, label %.lr.ph.i.i.18.i.split, label %468

; <label>:468                                     ; preds = %.lr.ph.i.i.18.i
  %469 = add i8 %461, -1
  store i8 %469, i8* %460, align 1, !tbaa !91
  %470 = zext i8 %469 to i64
  %471 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %.idx.val.i.13.i, i64 0, i32 15, i64 %470
  %472 = load i16, i16* %471, align 2, !tbaa !87
  %473 = zext i16 %472 to i64
  %474 = getelementptr inbounds %struct.LocVar.119, %struct.LocVar.119* %.pre2.i.i.17.i, i64 %473, i32 2
  store i32 %.pre.i.i.14.i, i32* %474, align 4, !tbaa !171
  %indvars.iv.next.i.20.i.prol = add nsw i64 %465, -1
  br label %.lr.ph.i.i.18.i.split

.lr.ph.i.i.18.i.split:                            ; preds = %.lr.ph.i.i.18.i, %468
  %indvars.iv.i.19.i.unr = phi i64 [ %465, %.lr.ph.i.i.18.i ], [ %indvars.iv.next.i.20.i.prol, %468 ]
  %475 = icmp eq i8 %467, %459
  br i1 %475, label %removevars.exit.i.21.i.loopexit, label %.lr.ph.i.i.18.i.split.split

.lr.ph.i.i.18.i.split.split:                      ; preds = %.lr.ph.i.i.18.i.split
  br label %476

; <label>:476                                     ; preds = %476, %.lr.ph.i.i.18.i.split.split
  %indvars.iv.i.19.i = phi i64 [ %indvars.iv.i.19.i.unr, %.lr.ph.i.i.18.i.split.split ], [ %indvars.iv.next.i.20.i.1, %476 ]
  %477 = trunc i64 %indvars.iv.i.19.i to i8
  %478 = add i8 %477, -1
  store i8 %478, i8* %460, align 1, !tbaa !91
  %479 = zext i8 %478 to i64
  %480 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %.idx.val.i.13.i, i64 0, i32 15, i64 %479
  %481 = load i16, i16* %480, align 2, !tbaa !87
  %482 = zext i16 %481 to i64
  %483 = getelementptr inbounds %struct.LocVar.119, %struct.LocVar.119* %.pre2.i.i.17.i, i64 %482, i32 2
  store i32 %.pre.i.i.14.i, i32* %483, align 4, !tbaa !171
  %indvars.iv.next.i.20.i = add i64 %indvars.iv.i.19.i, 255
  %484 = trunc i64 %indvars.iv.next.i.20.i to i8
  %485 = add i8 %484, -1
  store i8 %485, i8* %460, align 1, !tbaa !91
  %486 = zext i8 %485 to i64
  %487 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %.idx.val.i.13.i, i64 0, i32 15, i64 %486
  %488 = load i16, i16* %487, align 2, !tbaa !87
  %489 = zext i16 %488 to i64
  %490 = getelementptr inbounds %struct.LocVar.119, %struct.LocVar.119* %.pre2.i.i.17.i, i64 %489, i32 2
  store i32 %.pre.i.i.14.i, i32* %490, align 4, !tbaa !171
  %491 = icmp ugt i8 %485, %459
  %indvars.iv.next.i.20.i.1 = add nsw i64 %indvars.iv.i.19.i, -2
  br i1 %491, label %476, label %removevars.exit.i.21.i.loopexit.unr-lcssa

removevars.exit.i.21.i.loopexit.unr-lcssa:        ; preds = %476
  br label %removevars.exit.i.21.i.loopexit

removevars.exit.i.21.i.loopexit:                  ; preds = %.lr.ph.i.i.18.i.split, %removevars.exit.i.21.i.loopexit.unr-lcssa
  br label %removevars.exit.i.21.i

removevars.exit.i.21.i:                           ; preds = %removevars.exit.i.21.i.loopexit, %453
  %492 = getelementptr inbounds %struct.BlockCnt, %struct.BlockCnt* %454, i64 0, i32 3
  %493 = load i8, i8* %492, align 1, !tbaa !251
  %494 = icmp eq i8 %493, 0
  br i1 %494, label %repeatstat.exit, label %495

; <label>:495                                     ; preds = %removevars.exit.i.21.i
  %496 = zext i8 %459 to i32
  %497 = call i32 bitcast (i32 (%struct.FuncState*, i32, i32, i32, i32)* @luaK_codeABC to i32 (%struct.FuncState.248*, i32, i32, i32, i32)*)(%struct.FuncState.248* %272, i32 35, i32 %496, i32 0, i32 0) #1
  br label %repeatstat.exit

repeatstat.exit:                                  ; preds = %removevars.exit.i.21.i, %495
  %498 = load i8, i8* %278, align 1, !tbaa !91
  %499 = zext i8 %498 to i32
  %500 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %272, i64 0, i32 9
  store i32 %499, i32* %500, align 4, !tbaa !99
  %501 = getelementptr inbounds %struct.BlockCnt, %struct.BlockCnt* %454, i64 0, i32 1
  %502 = load i32, i32* %501, align 4, !tbaa !247
  call void bitcast (void (%struct.FuncState*, i32)* @luaK_patchtohere to void (%struct.FuncState.248*, i32)*)(%struct.FuncState.248* %272, i32 %502) #1
  call void @llvm.lifetime.end(i64 16, i8* %275) #1
  call void @llvm.lifetime.end(i64 16, i8* %274) #1
  br label %756

; <label>:503                                     ; preds = %0
  %504 = bitcast %struct.expdesc* %v.i to i8*
  call void @llvm.lifetime.start(i64 24, i8* %504) #1
  %505 = bitcast %struct.expdesc* %b.i to i8*
  call void @llvm.lifetime.start(i64 24, i8* %505) #1
  tail call void bitcast (void (%struct.LexState*)* @luaX_next to void (%struct.LexState.249*)*)(%struct.LexState.249* %ls) #1
  %506 = load i32, i32* %3, align 4, !tbaa !223
  %507 = icmp eq i32 %506, 285
  br i1 %507, label %str_checkname.exit.i.i.26, label %508

; <label>:508                                     ; preds = %503
  %509 = getelementptr inbounds %struct.LexState.249, %struct.LexState.249* %ls, i64 0, i32 6
  %510 = load %struct.lua_State.115*, %struct.lua_State.115** %509, align 8, !tbaa !218
  %511 = tail call i8* bitcast (i8* (%struct.LexState*, i32)* @luaX_token2str to i8* (%struct.LexState.249*, i32)*)(%struct.LexState.249* %ls, i32 285) #1
  %512 = tail call i8* (%struct.lua_State.115*, i8*, ...) bitcast (i8* (%struct.lua_State.215*, i8*, ...)* @luaO_pushfstring to i8* (%struct.lua_State.115*, i8*, ...)*)(%struct.lua_State.115* %510, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.509, i64 0, i64 0), i8* %511) #1
  tail call void bitcast (void (%struct.LexState*, i8*)* @luaX_syntaxerror to void (%struct.LexState.249*, i8*)*)(%struct.LexState.249* %ls, i8* %512) #1
  br label %str_checkname.exit.i.i.26

str_checkname.exit.i.i.26:                        ; preds = %508, %503
  %513 = getelementptr inbounds %struct.LexState.249, %struct.LexState.249* %ls, i64 0, i32 3, i32 1
  %514 = bitcast %union.SemInfo* %513 to %union.TString.110**
  %515 = load %union.TString.110*, %union.TString.110** %514, align 8, !tbaa !25
  tail call void bitcast (void (%struct.LexState*)* @luaX_next to void (%struct.LexState.249*)*)(%struct.LexState.249* %ls) #1
  %516 = getelementptr inbounds %struct.LexState.249, %struct.LexState.249* %ls, i64 0, i32 5
  %517 = load %struct.FuncState.248*, %struct.FuncState.248** %516, align 8, !tbaa !224
  %518 = call fastcc i32 @singlevaraux(%struct.FuncState.248* %517, %union.TString.110* %515, %struct.expdesc* nonnull %v.i, i32 1) #1
  %519 = icmp eq i32 %518, 8
  br i1 %519, label %520, label %singlevar.exit.i.i.preheader

; <label>:520                                     ; preds = %str_checkname.exit.i.i.26
  %521 = tail call i32 bitcast (i32 (%struct.FuncState*, %union.TString*)* @luaK_stringK to i32 (%struct.FuncState.248*, %union.TString.110*)*)(%struct.FuncState.248* %517, %union.TString.110* %515) #1
  %522 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %v.i, i64 0, i32 1
  %523 = bitcast %union.SemInfo* %522 to i32*
  store i32 %521, i32* %523, align 8, !tbaa !103
  br label %singlevar.exit.i.i.preheader

singlevar.exit.i.i.preheader:                     ; preds = %str_checkname.exit.i.i.26, %520
  br label %singlevar.exit.i.i

singlevar.exit.i.i:                               ; preds = %singlevar.exit.i.i.preheader, %525
  %524 = load i32, i32* %3, align 4, !tbaa !223
  switch i32 %524, label %funcstat.exit.loopexit [
    i32 46, label %525
    i32 58, label %526
  ]

; <label>:525                                     ; preds = %singlevar.exit.i.i
  call fastcc void @field(%struct.LexState.249* %ls, %struct.expdesc* nonnull %v.i) #1
  br label %singlevar.exit.i.i

; <label>:526                                     ; preds = %singlevar.exit.i.i
  call fastcc void @field(%struct.LexState.249* %ls, %struct.expdesc* nonnull %v.i) #1
  br label %funcstat.exit

funcstat.exit.loopexit:                           ; preds = %singlevar.exit.i.i
  br label %funcstat.exit

funcstat.exit:                                    ; preds = %funcstat.exit.loopexit, %526
  %needself.0.i.i = phi i32 [ 1, %526 ], [ 0, %funcstat.exit.loopexit ]
  call fastcc void @body(%struct.LexState.249* %ls, %struct.expdesc* nonnull %b.i, i32 %needself.0.i.i, i32 %2) #1
  %527 = load %struct.FuncState.248*, %struct.FuncState.248** %516, align 8, !tbaa !224
  call void bitcast (void (%struct.FuncState*, %struct.expdesc*, %struct.expdesc*)* @luaK_storevar to void (%struct.FuncState.248*, %struct.expdesc*, %struct.expdesc*)*)(%struct.FuncState.248* %527, %struct.expdesc* nonnull %v.i, %struct.expdesc* nonnull %b.i) #1
  %528 = load %struct.FuncState.248*, %struct.FuncState.248** %516, align 8, !tbaa !224
  call void bitcast (void (%struct.FuncState*, i32)* @luaK_fixline to void (%struct.FuncState.248*, i32)*)(%struct.FuncState.248* %528, i32 %2) #1
  call void @llvm.lifetime.end(i64 24, i8* %505) #1
  call void @llvm.lifetime.end(i64 24, i8* %504) #1
  br label %756

; <label>:529                                     ; preds = %0
  tail call void bitcast (void (%struct.LexState*)* @luaX_next to void (%struct.LexState.249*)*)(%struct.LexState.249* %ls) #1
  %530 = load i32, i32* %3, align 4, !tbaa !223
  %531 = icmp eq i32 %530, 265
  br i1 %531, label %532, label %587

; <label>:532                                     ; preds = %529
  tail call void bitcast (void (%struct.LexState*)* @luaX_next to void (%struct.LexState.249*)*)(%struct.LexState.249* %ls) #1
  %533 = bitcast %struct.expdesc* %v.i.27 to i8*
  call void @llvm.lifetime.start(i64 24, i8* %533) #1
  %534 = bitcast %struct.expdesc* %b.i.28 to i8*
  call void @llvm.lifetime.start(i64 24, i8* %534) #1
  %535 = getelementptr inbounds %struct.LexState.249, %struct.LexState.249* %ls, i64 0, i32 5
  %536 = load %struct.FuncState.248*, %struct.FuncState.248** %535, align 8, !tbaa !224
  %537 = load i32, i32* %3, align 4, !tbaa !223
  %538 = icmp eq i32 %537, 285
  br i1 %538, label %str_checkname.exit.i.29, label %539

; <label>:539                                     ; preds = %532
  %540 = getelementptr inbounds %struct.LexState.249, %struct.LexState.249* %ls, i64 0, i32 6
  %541 = load %struct.lua_State.115*, %struct.lua_State.115** %540, align 8, !tbaa !218
  %542 = tail call i8* bitcast (i8* (%struct.LexState*, i32)* @luaX_token2str to i8* (%struct.LexState.249*, i32)*)(%struct.LexState.249* %ls, i32 285) #1
  %543 = tail call i8* (%struct.lua_State.115*, i8*, ...) bitcast (i8* (%struct.lua_State.215*, i8*, ...)* @luaO_pushfstring to i8* (%struct.lua_State.115*, i8*, ...)*)(%struct.lua_State.115* %541, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.509, i64 0, i64 0), i8* %542) #1
  tail call void bitcast (void (%struct.LexState*, i8*)* @luaX_syntaxerror to void (%struct.LexState.249*, i8*)*)(%struct.LexState.249* %ls, i8* %543) #1
  br label %str_checkname.exit.i.29

str_checkname.exit.i.29:                          ; preds = %539, %532
  %544 = getelementptr inbounds %struct.LexState.249, %struct.LexState.249* %ls, i64 0, i32 3, i32 1
  %545 = bitcast %union.SemInfo* %544 to %union.TString.110**
  %546 = load %union.TString.110*, %union.TString.110** %545, align 8, !tbaa !25
  tail call void bitcast (void (%struct.LexState*)* @luaX_next to void (%struct.LexState.249*)*)(%struct.LexState.249* %ls) #1
  tail call fastcc void @new_localvar(%struct.LexState.249* %ls, %union.TString.110* %546, i32 0) #1
  %547 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %536, i64 0, i32 9
  %548 = load i32, i32* %547, align 4, !tbaa !99
  %549 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %v.i.27, i64 0, i32 2
  store i32 -1, i32* %549, align 8, !tbaa !106
  %550 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %v.i.27, i64 0, i32 3
  store i32 -1, i32* %550, align 4, !tbaa !107
  %551 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %v.i.27, i64 0, i32 0
  store i32 6, i32* %551, align 8, !tbaa !101
  %552 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %v.i.27, i64 0, i32 1
  %553 = bitcast %union.SemInfo* %552 to i32*
  store i32 %548, i32* %553, align 8, !tbaa !103
  tail call void bitcast (void (%struct.FuncState*, i32)* @luaK_reserveregs to void (%struct.FuncState.248*, i32)*)(%struct.FuncState.248* %536, i32 1) #1
  %ls.idx.val.i = load %struct.FuncState.248*, %struct.FuncState.248** %535, align 8, !tbaa !224
  %554 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %ls.idx.val.i, i64 0, i32 13
  %555 = load i8, i8* %554, align 1, !tbaa !91
  %556 = zext i8 %555 to i32
  %557 = add nuw nsw i32 %556, 1
  %558 = trunc i32 %557 to i8
  store i8 %558, i8* %554, align 1, !tbaa !91
  %559 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %ls.idx.val.i, i64 0, i32 6
  %560 = load i32, i32* %559, align 4, !tbaa !88
  %561 = and i32 %557, 255
  %562 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %ls.idx.val.i, i64 0, i32 0
  %563 = load %struct.Proto.120*, %struct.Proto.120** %562, align 8, !tbaa !92
  %564 = getelementptr inbounds %struct.Proto.120, %struct.Proto.120* %563, i64 0, i32 7
  %565 = load %struct.LocVar.119*, %struct.LocVar.119** %564, align 8, !tbaa !167
  %566 = zext i32 %561 to i64
  %567 = add nsw i64 %566, -1
  %568 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %ls.idx.val.i, i64 0, i32 15, i64 %567
  %569 = load i16, i16* %568, align 2, !tbaa !87
  %570 = zext i16 %569 to i64
  %571 = getelementptr inbounds %struct.LocVar.119, %struct.LocVar.119* %565, i64 %570, i32 1
  store i32 %560, i32* %571, align 4, !tbaa !170
  %572 = load i32, i32* %1, align 4, !tbaa !220
  call fastcc void @body(%struct.LexState.249* %ls, %struct.expdesc* nonnull %b.i.28, i32 0, i32 %572) #1
  call void bitcast (void (%struct.FuncState*, %struct.expdesc*, %struct.expdesc*)* @luaK_storevar to void (%struct.FuncState.248*, %struct.expdesc*, %struct.expdesc*)*)(%struct.FuncState.248* %536, %struct.expdesc* nonnull %v.i.27, %struct.expdesc* nonnull %b.i.28) #1
  %573 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %536, i64 0, i32 6
  %574 = load i32, i32* %573, align 4, !tbaa !88
  %575 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %536, i64 0, i32 13
  %576 = load i8, i8* %575, align 1, !tbaa !91
  %577 = zext i8 %576 to i64
  %578 = add nsw i64 %577, -1
  %579 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %536, i64 0, i32 15, i64 %578
  %580 = load i16, i16* %579, align 2, !tbaa !87
  %581 = zext i16 %580 to i64
  %582 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %536, i64 0, i32 0
  %583 = load %struct.Proto.120*, %struct.Proto.120** %582, align 8, !tbaa !92
  %584 = getelementptr inbounds %struct.Proto.120, %struct.Proto.120* %583, i64 0, i32 7
  %585 = load %struct.LocVar.119*, %struct.LocVar.119** %584, align 8, !tbaa !167
  %586 = getelementptr inbounds %struct.LocVar.119, %struct.LocVar.119* %585, i64 %581, i32 1
  store i32 %574, i32* %586, align 4, !tbaa !170
  call void @llvm.lifetime.end(i64 24, i8* %534) #1
  call void @llvm.lifetime.end(i64 24, i8* %533) #1
  br label %756

; <label>:587                                     ; preds = %529
  %588 = bitcast %struct.expdesc* %e.i to i8*
  call void @llvm.lifetime.start(i64 24, i8* %588) #1
  %589 = getelementptr inbounds %struct.LexState.249, %struct.LexState.249* %ls, i64 0, i32 3, i32 1
  %590 = bitcast %union.SemInfo* %589 to %union.TString.110**
  %591 = getelementptr inbounds %struct.LexState.249, %struct.LexState.249* %ls, i64 0, i32 6
  br label %592

; <label>:592                                     ; preds = %testnext.exit.i, %587
  %593 = phi i32 [ %530, %587 ], [ %.pre, %testnext.exit.i ]
  %nvars.0.i = phi i32 [ 0, %587 ], [ %600, %testnext.exit.i ]
  %594 = icmp eq i32 %593, 285
  br i1 %594, label %str_checkname.exit.i.32, label %595

; <label>:595                                     ; preds = %592
  %596 = load %struct.lua_State.115*, %struct.lua_State.115** %591, align 8, !tbaa !218
  %597 = tail call i8* bitcast (i8* (%struct.LexState*, i32)* @luaX_token2str to i8* (%struct.LexState.249*, i32)*)(%struct.LexState.249* %ls, i32 285) #1
  %598 = tail call i8* (%struct.lua_State.115*, i8*, ...) bitcast (i8* (%struct.lua_State.215*, i8*, ...)* @luaO_pushfstring to i8* (%struct.lua_State.115*, i8*, ...)*)(%struct.lua_State.115* %596, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.509, i64 0, i64 0), i8* %597) #1
  tail call void bitcast (void (%struct.LexState*, i8*)* @luaX_syntaxerror to void (%struct.LexState.249*, i8*)*)(%struct.LexState.249* %ls, i8* %598) #1
  br label %str_checkname.exit.i.32

str_checkname.exit.i.32:                          ; preds = %595, %592
  %599 = load %union.TString.110*, %union.TString.110** %590, align 8, !tbaa !25
  tail call void bitcast (void (%struct.LexState*)* @luaX_next to void (%struct.LexState.249*)*)(%struct.LexState.249* %ls) #1
  %600 = add nuw nsw i32 %nvars.0.i, 1
  tail call fastcc void @new_localvar(%struct.LexState.249* %ls, %union.TString.110* %599, i32 %nvars.0.i) #1
  %601 = load i32, i32* %3, align 4, !tbaa !223
  switch i32 %601, label %explist1.exit.i.thread [
    i32 44, label %testnext.exit.i
    i32 61, label %602
  ]

testnext.exit.i:                                  ; preds = %str_checkname.exit.i.32
  tail call void bitcast (void (%struct.LexState*)* @luaX_next to void (%struct.LexState.249*)*)(%struct.LexState.249* %ls) #1
  %.pre = load i32, i32* %3, align 4, !tbaa !223
  br label %592

; <label>:602                                     ; preds = %str_checkname.exit.i.32
  %.lcssa148 = phi i32 [ %600, %str_checkname.exit.i.32 ]
  %nvars.0.i.lcssa144 = phi i32 [ %nvars.0.i, %str_checkname.exit.i.32 ]
  tail call void bitcast (void (%struct.LexState*)* @luaX_next to void (%struct.LexState.249*)*)(%struct.LexState.249* %ls) #1
  %603 = call fastcc i32 @subexpr(%struct.LexState.249* %ls, %struct.expdesc* nonnull %e.i, i32 0) #1
  %604 = load i32, i32* %3, align 4, !tbaa !223
  %605 = icmp eq i32 %604, 44
  br i1 %605, label %.lr.ph68, label %explist1.exit.i

.lr.ph68:                                         ; preds = %602
  %606 = getelementptr inbounds %struct.LexState.249, %struct.LexState.249* %ls, i64 0, i32 5
  br label %607

; <label>:607                                     ; preds = %.lr.ph68, %607
  %n.0.i.i66 = phi i32 [ 1, %.lr.ph68 ], [ %610, %607 ]
  call void bitcast (void (%struct.LexState*)* @luaX_next to void (%struct.LexState.249*)*)(%struct.LexState.249* %ls) #1
  %608 = load %struct.FuncState.248*, %struct.FuncState.248** %606, align 8, !tbaa !224
  call void bitcast (void (%struct.FuncState*, %struct.expdesc*)* @luaK_exp2nextreg to void (%struct.FuncState.248*, %struct.expdesc*)*)(%struct.FuncState.248* %608, %struct.expdesc* nonnull %e.i) #1
  %609 = call fastcc i32 @subexpr(%struct.LexState.249* %ls, %struct.expdesc* nonnull %e.i, i32 0) #1
  %610 = add nuw nsw i32 %n.0.i.i66, 1
  %611 = load i32, i32* %3, align 4, !tbaa !223
  %612 = icmp eq i32 %611, 44
  br i1 %612, label %607, label %explist1.exit.i.loopexit

explist1.exit.i.thread:                           ; preds = %str_checkname.exit.i.32
  %.lcssa147 = phi i32 [ %600, %str_checkname.exit.i.32 ]
  %nvars.0.i.lcssa = phi i32 [ %nvars.0.i, %str_checkname.exit.i.32 ]
  %613 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %e.i, i64 0, i32 0
  store i32 0, i32* %613, align 8, !tbaa !101
  %ls.idx1.i.87 = getelementptr %struct.LexState.249, %struct.LexState.249* %ls, i64 0, i32 5
  %ls.idx1.val.i.88 = load %struct.FuncState.248*, %struct.FuncState.248** %ls.idx1.i.87, align 8, !tbaa !224
  br label %622

explist1.exit.i.loopexit:                         ; preds = %607
  %.lcssa143 = phi i32 [ %610, %607 ]
  br label %explist1.exit.i

explist1.exit.i:                                  ; preds = %explist1.exit.i.loopexit, %602
  %n.0.i.i.lcssa = phi i32 [ 1, %602 ], [ %.lcssa143, %explist1.exit.i.loopexit ]
  %.phi.trans.insert = getelementptr inbounds %struct.expdesc, %struct.expdesc* %e.i, i64 0, i32 0
  %.pre85 = load i32, i32* %.phi.trans.insert, align 8, !tbaa !101
  %ls.idx1.i = getelementptr %struct.LexState.249, %struct.LexState.249* %ls, i64 0, i32 5
  %ls.idx1.val.i = load %struct.FuncState.248*, %struct.FuncState.248** %ls.idx1.i, align 8, !tbaa !224
  %614 = sub nsw i32 %.lcssa148, %n.0.i.i.lcssa
  switch i32 %.pre85, label %621 [
    i32 13, label %615
    i32 14, label %615
    i32 0, label %622
  ]

; <label>:615                                     ; preds = %explist1.exit.i, %explist1.exit.i
  %616 = add nsw i32 %614, 1
  %617 = icmp slt i32 %616, 0
  %..i.i = select i1 %617, i32 0, i32 %616
  call void bitcast (void (%struct.FuncState*, %struct.expdesc*, i32)* @luaK_setreturns to void (%struct.FuncState.248*, %struct.expdesc*, i32)*)(%struct.FuncState.248* %ls.idx1.val.i, %struct.expdesc* nonnull %e.i, i32 %..i.i) #1
  %618 = icmp sgt i32 %..i.i, 1
  br i1 %618, label %619, label %adjust_assign.exit.i

; <label>:619                                     ; preds = %615
  %620 = add nsw i32 %..i.i, -1
  call void bitcast (void (%struct.FuncState*, i32)* @luaK_reserveregs to void (%struct.FuncState.248*, i32)*)(%struct.FuncState.248* %ls.idx1.val.i, i32 %620) #1
  br label %adjust_assign.exit.i

; <label>:621                                     ; preds = %explist1.exit.i
  call void bitcast (void (%struct.FuncState*, %struct.expdesc*)* @luaK_exp2nextreg to void (%struct.FuncState.248*, %struct.expdesc*)*)(%struct.FuncState.248* %ls.idx1.val.i, %struct.expdesc* nonnull %e.i) #1
  br label %622

; <label>:622                                     ; preds = %explist1.exit.i.thread, %621, %explist1.exit.i
  %623 = phi i32 [ %.lcssa147, %explist1.exit.i.thread ], [ %.lcssa148, %621 ], [ %.lcssa148, %explist1.exit.i ]
  %nvars.0.i146 = phi i32 [ %nvars.0.i.lcssa, %explist1.exit.i.thread ], [ %nvars.0.i.lcssa144, %621 ], [ %nvars.0.i.lcssa144, %explist1.exit.i ]
  %624 = phi i32 [ %.lcssa147, %explist1.exit.i.thread ], [ %614, %621 ], [ %614, %explist1.exit.i ]
  %ls.idx1.val.i91 = phi %struct.FuncState.248* [ %ls.idx1.val.i.88, %explist1.exit.i.thread ], [ %ls.idx1.val.i, %621 ], [ %ls.idx1.val.i, %explist1.exit.i ]
  %ls.idx1.i90 = phi %struct.FuncState.248** [ %ls.idx1.i.87, %explist1.exit.i.thread ], [ %ls.idx1.i, %621 ], [ %ls.idx1.i, %explist1.exit.i ]
  %625 = icmp sgt i32 %624, 0
  br i1 %625, label %626, label %adjust_assign.exit.i

; <label>:626                                     ; preds = %622
  %627 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %ls.idx1.val.i91, i64 0, i32 9
  %628 = load i32, i32* %627, align 4, !tbaa !99
  call void bitcast (void (%struct.FuncState*, i32)* @luaK_reserveregs to void (%struct.FuncState.248*, i32)*)(%struct.FuncState.248* %ls.idx1.val.i91, i32 %624) #1
  call void bitcast (void (%struct.FuncState*, i32, i32)* @luaK_nil to void (%struct.FuncState.248*, i32, i32)*)(%struct.FuncState.248* %ls.idx1.val.i91, i32 %628, i32 %624) #1
  br label %adjust_assign.exit.i

adjust_assign.exit.i:                             ; preds = %626, %622, %619, %615
  %629 = phi i32 [ %623, %626 ], [ %623, %622 ], [ %.lcssa148, %619 ], [ %.lcssa148, %615 ]
  %nvars.0.i145 = phi i32 [ %nvars.0.i146, %626 ], [ %nvars.0.i146, %622 ], [ %nvars.0.i.lcssa144, %619 ], [ %nvars.0.i.lcssa144, %615 ]
  %ls.idx1.i89 = phi %struct.FuncState.248** [ %ls.idx1.i90, %626 ], [ %ls.idx1.i90, %622 ], [ %ls.idx1.i, %619 ], [ %ls.idx1.i, %615 ]
  %ls.idx.val.i.36 = load %struct.FuncState.248*, %struct.FuncState.248** %ls.idx1.i89, align 8, !tbaa !224
  %630 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %ls.idx.val.i.36, i64 0, i32 13
  %631 = load i8, i8* %630, align 1, !tbaa !91
  %632 = zext i8 %631 to i32
  %633 = add nsw i32 %632, %629
  %634 = trunc i32 %633 to i8
  store i8 %634, i8* %630, align 1, !tbaa !91
  %635 = icmp eq i32 %629, 0
  br i1 %635, label %localstat.exit, label %.lr.ph.i.i.37

.lr.ph.i.i.37:                                    ; preds = %adjust_assign.exit.i
  %636 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %ls.idx.val.i.36, i64 0, i32 6
  %637 = load i32, i32* %636, align 4, !tbaa !88
  %638 = and i32 %633, 255
  %639 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %ls.idx.val.i.36, i64 0, i32 0
  %640 = load %struct.Proto.120*, %struct.Proto.120** %639, align 8, !tbaa !92
  %641 = getelementptr inbounds %struct.Proto.120, %struct.Proto.120* %640, i64 0, i32 7
  %642 = load %struct.LocVar.119*, %struct.LocVar.119** %641, align 8, !tbaa !167
  %643 = sext i32 %629 to i64
  %644 = zext i32 %638 to i64
  %xtraiter136 = and i32 %629, 1
  %lcmp.mod137 = icmp eq i32 %xtraiter136, 0
  br i1 %lcmp.mod137, label %.lr.ph.i.i.37.split, label %645

; <label>:645                                     ; preds = %.lr.ph.i.i.37
  %646 = sub nsw i64 %644, %643
  %647 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %ls.idx.val.i.36, i64 0, i32 15, i64 %646
  %648 = load i16, i16* %647, align 2, !tbaa !87
  %649 = zext i16 %648 to i64
  %650 = getelementptr inbounds %struct.LocVar.119, %struct.LocVar.119* %642, i64 %649, i32 1
  store i32 %637, i32* %650, align 4, !tbaa !170
  %indvars.iv.next.i.i.40.prol = add nsw i64 %643, -1
  br label %.lr.ph.i.i.37.split

.lr.ph.i.i.37.split:                              ; preds = %.lr.ph.i.i.37, %645
  %indvars.iv.i.i.38.unr = phi i64 [ %643, %.lr.ph.i.i.37 ], [ %indvars.iv.next.i.i.40.prol, %645 ]
  %.01.i.i.39.unr = phi i32 [ %629, %.lr.ph.i.i.37 ], [ %nvars.0.i145, %645 ]
  %651 = icmp eq i32 %nvars.0.i145, 0
  br i1 %651, label %localstat.exit.loopexit, label %.lr.ph.i.i.37.split.split

.lr.ph.i.i.37.split.split:                        ; preds = %.lr.ph.i.i.37.split
  br label %652

; <label>:652                                     ; preds = %652, %.lr.ph.i.i.37.split.split
  %indvars.iv.i.i.38 = phi i64 [ %indvars.iv.i.i.38.unr, %.lr.ph.i.i.37.split.split ], [ %indvars.iv.next.i.i.40.1, %652 ]
  %.01.i.i.39 = phi i32 [ %.01.i.i.39.unr, %.lr.ph.i.i.37.split.split ], [ %663, %652 ]
  %653 = sub nsw i64 %644, %indvars.iv.i.i.38
  %654 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %ls.idx.val.i.36, i64 0, i32 15, i64 %653
  %655 = load i16, i16* %654, align 2, !tbaa !87
  %656 = zext i16 %655 to i64
  %657 = getelementptr inbounds %struct.LocVar.119, %struct.LocVar.119* %642, i64 %656, i32 1
  store i32 %637, i32* %657, align 4, !tbaa !170
  %indvars.iv.next.i.i.40 = add nsw i64 %indvars.iv.i.i.38, -1
  %658 = sub nsw i64 %644, %indvars.iv.next.i.i.40
  %659 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %ls.idx.val.i.36, i64 0, i32 15, i64 %658
  %660 = load i16, i16* %659, align 2, !tbaa !87
  %661 = zext i16 %660 to i64
  %662 = getelementptr inbounds %struct.LocVar.119, %struct.LocVar.119* %642, i64 %661, i32 1
  store i32 %637, i32* %662, align 4, !tbaa !170
  %663 = add nsw i32 %.01.i.i.39, -2
  %664 = icmp eq i32 %663, 0
  %indvars.iv.next.i.i.40.1 = add nsw i64 %indvars.iv.i.i.38, -2
  br i1 %664, label %localstat.exit.loopexit.unr-lcssa, label %652

localstat.exit.loopexit.unr-lcssa:                ; preds = %652
  br label %localstat.exit.loopexit

localstat.exit.loopexit:                          ; preds = %.lr.ph.i.i.37.split, %localstat.exit.loopexit.unr-lcssa
  br label %localstat.exit

localstat.exit:                                   ; preds = %localstat.exit.loopexit, %adjust_assign.exit.i
  call void @llvm.lifetime.end(i64 24, i8* %588) #1
  br label %756

; <label>:665                                     ; preds = %0
  %666 = getelementptr inbounds %struct.LexState.249, %struct.LexState.249* %ls, i64 0, i32 5
  %667 = load %struct.FuncState.248*, %struct.FuncState.248** %666, align 8, !tbaa !224
  %668 = bitcast %struct.expdesc* %e.i.41 to i8*
  call void @llvm.lifetime.start(i64 24, i8* %668) #1
  tail call void bitcast (void (%struct.LexState*)* @luaX_next to void (%struct.LexState.249*)*)(%struct.LexState.249* %ls) #1
  %669 = load i32, i32* %3, align 4, !tbaa !223
  switch i32 %669, label %670 [
    i32 260, label %retstat.exit
    i32 261, label %retstat.exit
    i32 262, label %retstat.exit
    i32 276, label %retstat.exit
    i32 287, label %retstat.exit
    i32 59, label %retstat.exit
  ]

; <label>:670                                     ; preds = %665
  %671 = call fastcc i32 @subexpr(%struct.LexState.249* %ls, %struct.expdesc* nonnull %e.i.41, i32 0) #1
  %672 = load i32, i32* %3, align 4, !tbaa !223
  %673 = icmp eq i32 %672, 44
  br i1 %673, label %.lr.ph72.preheader, label %explist1.exit.i.46

.lr.ph72.preheader:                               ; preds = %670
  br label %.lr.ph72

.lr.ph72:                                         ; preds = %.lr.ph72.preheader, %.lr.ph72
  %n.0.i.i.4370 = phi i32 [ %676, %.lr.ph72 ], [ 1, %.lr.ph72.preheader ]
  call void bitcast (void (%struct.LexState*)* @luaX_next to void (%struct.LexState.249*)*)(%struct.LexState.249* %ls) #1
  %674 = load %struct.FuncState.248*, %struct.FuncState.248** %666, align 8, !tbaa !224
  call void bitcast (void (%struct.FuncState*, %struct.expdesc*)* @luaK_exp2nextreg to void (%struct.FuncState.248*, %struct.expdesc*)*)(%struct.FuncState.248* %674, %struct.expdesc* nonnull %e.i.41) #1
  %675 = call fastcc i32 @subexpr(%struct.LexState.249* %ls, %struct.expdesc* nonnull %e.i.41, i32 0) #1
  %676 = add nuw nsw i32 %n.0.i.i.4370, 1
  %677 = load i32, i32* %3, align 4, !tbaa !223
  %678 = icmp eq i32 %677, 44
  br i1 %678, label %.lr.ph72, label %explist1.exit.i.46.loopexit

explist1.exit.i.46.loopexit:                      ; preds = %.lr.ph72
  %.lcssa149 = phi i32 [ %676, %.lr.ph72 ]
  br label %explist1.exit.i.46

explist1.exit.i.46:                               ; preds = %explist1.exit.i.46.loopexit, %670
  %n.0.i.i.43.lcssa = phi i32 [ 1, %670 ], [ %.lcssa149, %explist1.exit.i.46.loopexit ]
  %679 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %e.i.41, i64 0, i32 0
  %680 = load i32, i32* %679, align 8, !tbaa !101
  %.off.i = add i32 %680, -13
  %switch.i = icmp ult i32 %.off.i, 2
  br i1 %switch.i, label %681, label %702

; <label>:681                                     ; preds = %explist1.exit.i.46
  call void bitcast (void (%struct.FuncState*, %struct.expdesc*, i32)* @luaK_setreturns to void (%struct.FuncState.248*, %struct.expdesc*, i32)*)(%struct.FuncState.248* %667, %struct.expdesc* nonnull %e.i.41, i32 -1) #1
  %682 = load i32, i32* %679, align 8, !tbaa !101
  %683 = icmp eq i32 %682, 13
  %684 = icmp eq i32 %n.0.i.i.43.lcssa, 1
  %or.cond.i = and i1 %684, %683
  br i1 %or.cond.i, label %685, label %698

; <label>:685                                     ; preds = %681
  %686 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %e.i.41, i64 0, i32 1
  %687 = bitcast %union.SemInfo* %686 to i32*
  %688 = load i32, i32* %687, align 8, !tbaa !103
  %689 = sext i32 %688 to i64
  %690 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %667, i64 0, i32 0
  %691 = load %struct.Proto.120*, %struct.Proto.120** %690, align 8, !tbaa !92
  %692 = getelementptr inbounds %struct.Proto.120, %struct.Proto.120* %691, i64 0, i32 4
  %693 = load i32*, i32** %692, align 8, !tbaa !93
  %694 = getelementptr inbounds i32, i32* %693, i64 %689
  %695 = load i32, i32* %694, align 4, !tbaa !38
  %696 = and i32 %695, -64
  %697 = or i32 %696, 29
  store i32 %697, i32* %694, align 4, !tbaa !38
  br label %698

; <label>:698                                     ; preds = %685, %681
  %699 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %667, i64 0, i32 13
  %700 = load i8, i8* %699, align 1, !tbaa !91
  %701 = zext i8 %700 to i32
  br label %retstat.exit

; <label>:702                                     ; preds = %explist1.exit.i.46
  %703 = icmp eq i32 %n.0.i.i.43.lcssa, 1
  br i1 %703, label %704, label %706

; <label>:704                                     ; preds = %702
  %705 = call i32 bitcast (i32 (%struct.FuncState*, %struct.expdesc*)* @luaK_exp2anyreg to i32 (%struct.FuncState.248*, %struct.expdesc*)*)(%struct.FuncState.248* %667, %struct.expdesc* nonnull %e.i.41) #1
  br label %retstat.exit

; <label>:706                                     ; preds = %702
  call void bitcast (void (%struct.FuncState*, %struct.expdesc*)* @luaK_exp2nextreg to void (%struct.FuncState.248*, %struct.expdesc*)*)(%struct.FuncState.248* %667, %struct.expdesc* nonnull %e.i.41) #1
  %707 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %667, i64 0, i32 13
  %708 = load i8, i8* %707, align 1, !tbaa !91
  %709 = zext i8 %708 to i32
  br label %retstat.exit

retstat.exit:                                     ; preds = %665, %665, %665, %665, %665, %665, %698, %704, %706
  %first.0.i = phi i32 [ %701, %698 ], [ %705, %704 ], [ %709, %706 ], [ 0, %665 ], [ 0, %665 ], [ 0, %665 ], [ 0, %665 ], [ 0, %665 ], [ 0, %665 ]
  %nret.0.i = phi i32 [ -1, %698 ], [ 1, %704 ], [ %n.0.i.i.43.lcssa, %706 ], [ 0, %665 ], [ 0, %665 ], [ 0, %665 ], [ 0, %665 ], [ 0, %665 ], [ 0, %665 ]
  call void bitcast (void (%struct.FuncState*, i32, i32)* @luaK_ret to void (%struct.FuncState.248*, i32, i32)*)(%struct.FuncState.248* %667, i32 %first.0.i, i32 %nret.0.i) #1
  call void @llvm.lifetime.end(i64 24, i8* %668) #1
  br label %756

; <label>:710                                     ; preds = %0
  tail call void bitcast (void (%struct.LexState*)* @luaX_next to void (%struct.LexState.249*)*)(%struct.LexState.249* %ls) #1
  %711 = getelementptr inbounds %struct.LexState.249, %struct.LexState.249* %ls, i64 0, i32 5
  %712 = load %struct.FuncState.248*, %struct.FuncState.248** %711, align 8, !tbaa !224
  %713 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %712, i64 0, i32 5
  %bl.0.6.i = load %struct.BlockCnt*, %struct.BlockCnt** %713, align 8
  %714 = icmp eq %struct.BlockCnt* %bl.0.6.i, null
  br i1 %714, label %.critedge1.i, label %.lr.ph.i.preheader

.lr.ph.i.preheader:                               ; preds = %710
  br label %.lr.ph.i

.lr.ph.i:                                         ; preds = %.lr.ph.i.preheader, %718
  %bl.08.i = phi %struct.BlockCnt* [ %bl.0.i, %718 ], [ %bl.0.6.i, %.lr.ph.i.preheader ]
  %upval.07.i = phi i32 [ %722, %718 ], [ 0, %.lr.ph.i.preheader ]
  %715 = getelementptr inbounds %struct.BlockCnt, %struct.BlockCnt* %bl.08.i, i64 0, i32 4
  %716 = load i8, i8* %715, align 1, !tbaa !249
  %717 = icmp eq i8 %716, 0
  br i1 %717, label %718, label %.critedge.i.loopexit

; <label>:718                                     ; preds = %.lr.ph.i
  %719 = getelementptr inbounds %struct.BlockCnt, %struct.BlockCnt* %bl.08.i, i64 0, i32 3
  %720 = load i8, i8* %719, align 1, !tbaa !251
  %721 = zext i8 %720 to i32
  %722 = or i32 %721, %upval.07.i
  %723 = getelementptr inbounds %struct.BlockCnt, %struct.BlockCnt* %bl.08.i, i64 0, i32 0
  %bl.0.i = load %struct.BlockCnt*, %struct.BlockCnt** %723, align 8
  %724 = icmp eq %struct.BlockCnt* %bl.0.i, null
  br i1 %724, label %.critedge1.i.loopexit, label %.lr.ph.i

.critedge1.i.loopexit:                            ; preds = %718
  %.lcssa152 = phi i32 [ %722, %718 ]
  br label %.critedge1.i

.critedge1.i:                                     ; preds = %.critedge1.i.loopexit, %710
  %upval.0.lcssa.i = phi i32 [ 0, %710 ], [ %.lcssa152, %.critedge1.i.loopexit ]
  tail call void bitcast (void (%struct.LexState*, i8*)* @luaX_syntaxerror to void (%struct.LexState.249*, i8*)*)(%struct.LexState.249* %ls, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.25.517, i64 0, i64 0)) #1
  br label %.critedge.i

.critedge.i.loopexit:                             ; preds = %.lr.ph.i
  %upval.07.i.lcssa = phi i32 [ %upval.07.i, %.lr.ph.i ]
  %bl.08.i.lcssa = phi %struct.BlockCnt* [ %bl.08.i, %.lr.ph.i ]
  br label %.critedge.i

.critedge.i:                                      ; preds = %.critedge.i.loopexit, %.critedge1.i
  %bl.05.i = phi %struct.BlockCnt* [ null, %.critedge1.i ], [ %bl.08.i.lcssa, %.critedge.i.loopexit ]
  %upval.03.i = phi i32 [ %upval.0.lcssa.i, %.critedge1.i ], [ %upval.07.i.lcssa, %.critedge.i.loopexit ]
  %725 = icmp eq i32 %upval.03.i, 0
  br i1 %725, label %breakstat.exit, label %726

; <label>:726                                     ; preds = %.critedge.i
  %727 = getelementptr inbounds %struct.BlockCnt, %struct.BlockCnt* %bl.05.i, i64 0, i32 2
  %728 = load i8, i8* %727, align 1, !tbaa !250
  %729 = zext i8 %728 to i32
  %730 = tail call i32 bitcast (i32 (%struct.FuncState*, i32, i32, i32, i32)* @luaK_codeABC to i32 (%struct.FuncState.248*, i32, i32, i32, i32)*)(%struct.FuncState.248* %712, i32 35, i32 %729, i32 0, i32 0) #1
  br label %breakstat.exit

breakstat.exit:                                   ; preds = %.critedge.i, %726
  %731 = getelementptr inbounds %struct.BlockCnt, %struct.BlockCnt* %bl.05.i, i64 0, i32 1
  %732 = tail call i32 bitcast (i32 (%struct.FuncState*)* @luaK_jump to i32 (%struct.FuncState.248*)*)(%struct.FuncState.248* %712) #1
  tail call void bitcast (void (%struct.FuncState*, i32*, i32)* @luaK_concat to void (%struct.FuncState.248*, i32*, i32)*)(%struct.FuncState.248* %712, i32* %731, i32 %732) #1
  br label %756

; <label>:733                                     ; preds = %0
  %734 = getelementptr inbounds %struct.LexState.249, %struct.LexState.249* %ls, i64 0, i32 5
  %735 = load %struct.FuncState.248*, %struct.FuncState.248** %734, align 8, !tbaa !224
  %736 = bitcast %struct.LHS_assign* %v.i.47 to i8*
  call void @llvm.lifetime.start(i64 32, i8* %736) #1
  %737 = getelementptr inbounds %struct.LHS_assign, %struct.LHS_assign* %v.i.47, i64 0, i32 1
  call fastcc void @primaryexp(%struct.LexState.249* %ls, %struct.expdesc* %737) #1
  %738 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %737, i64 0, i32 0
  %739 = load i32, i32* %738, align 8, !tbaa !253
  %740 = icmp eq i32 %739, 13
  br i1 %740, label %741, label %754

; <label>:741                                     ; preds = %733
  %742 = getelementptr inbounds %struct.LHS_assign, %struct.LHS_assign* %v.i.47, i64 0, i32 1, i32 1
  %743 = bitcast %union.SemInfo* %742 to i32*
  %744 = load i32, i32* %743, align 8, !tbaa !103
  %745 = sext i32 %744 to i64
  %746 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %735, i64 0, i32 0
  %747 = load %struct.Proto.120*, %struct.Proto.120** %746, align 8, !tbaa !92
  %748 = getelementptr inbounds %struct.Proto.120, %struct.Proto.120* %747, i64 0, i32 4
  %749 = load i32*, i32** %748, align 8, !tbaa !93
  %750 = getelementptr inbounds i32, i32* %749, i64 %745
  %751 = load i32, i32* %750, align 4, !tbaa !38
  %752 = and i32 %751, -8372225
  %753 = or i32 %752, 16384
  store i32 %753, i32* %750, align 4, !tbaa !38
  br label %exprstat.exit

; <label>:754                                     ; preds = %733
  %755 = getelementptr inbounds %struct.LHS_assign, %struct.LHS_assign* %v.i.47, i64 0, i32 0
  store %struct.LHS_assign* null, %struct.LHS_assign** %755, align 8, !tbaa !255
  call fastcc void @assignment(%struct.LexState.249* %ls, %struct.LHS_assign* nonnull %v.i.47, i32 1) #1
  br label %exprstat.exit

exprstat.exit:                                    ; preds = %741, %754
  call void @llvm.lifetime.end(i64 32, i8* %736) #1
  br label %756

; <label>:756                                     ; preds = %str_checkname.exit.i.29, %localstat.exit, %exprstat.exit, %breakstat.exit, %retstat.exit, %funcstat.exit, %repeatstat.exit, %forstat.exit, %101, %whilestat.exit, %ifstat.exit
  %.0 = phi i32 [ 0, %exprstat.exit ], [ 1, %breakstat.exit ], [ 1, %retstat.exit ], [ 0, %funcstat.exit ], [ 0, %repeatstat.exit ], [ 0, %forstat.exit ], [ 0, %101 ], [ 0, %whilestat.exit ], [ 0, %ifstat.exit ], [ 0, %localstat.exit ], [ 0, %str_checkname.exit.i.29 ]
  ret i32 %.0
}

; Function Attrs: nounwind uwtable
define internal fastcc void @close_func(%struct.LexState.249* %ls) #0 {
  %1 = getelementptr inbounds %struct.LexState.249, %struct.LexState.249* %ls, i64 0, i32 6
  %2 = load %struct.lua_State.115*, %struct.lua_State.115** %1, align 8, !tbaa !218
  %3 = getelementptr inbounds %struct.LexState.249, %struct.LexState.249* %ls, i64 0, i32 5
  %4 = load %struct.FuncState.248*, %struct.FuncState.248** %3, align 8, !tbaa !224
  %5 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %4, i64 0, i32 0
  %6 = load %struct.Proto.120*, %struct.Proto.120** %5, align 8, !tbaa !92
  %7 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %4, i64 0, i32 13
  %8 = load i8, i8* %7, align 1, !tbaa !91
  %9 = icmp eq i8 %8, 0
  %.pre29 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %4, i64 0, i32 6
  br i1 %9, label %removevars.exit, label %.lr.ph.i

.lr.ph.i:                                         ; preds = %0
  %.pre.i = load i32, i32* %.pre29, align 4, !tbaa !88
  %.phi.trans.insert.i = getelementptr inbounds %struct.Proto.120, %struct.Proto.120* %6, i64 0, i32 7
  %.pre2.i = load %struct.LocVar.119*, %struct.LocVar.119** %.phi.trans.insert.i, align 8, !tbaa !167
  %10 = zext i8 %8 to i64
  %xtraiter = and i8 %8, 1
  %lcmp.mod = icmp eq i8 %xtraiter, 0
  br i1 %lcmp.mod, label %.lr.ph.i.split, label %11

; <label>:11                                      ; preds = %.lr.ph.i
  %12 = add i8 %8, -1
  store i8 %12, i8* %7, align 1, !tbaa !91
  %13 = zext i8 %12 to i64
  %14 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %4, i64 0, i32 15, i64 %13
  %15 = load i16, i16* %14, align 2, !tbaa !87
  %16 = zext i16 %15 to i64
  %17 = getelementptr inbounds %struct.LocVar.119, %struct.LocVar.119* %.pre2.i, i64 %16, i32 2
  store i32 %.pre.i, i32* %17, align 4, !tbaa !171
  %indvars.iv.next.prol = add nsw i64 %10, -1
  br label %.lr.ph.i.split

.lr.ph.i.split:                                   ; preds = %.lr.ph.i, %11
  %indvars.iv.unr = phi i64 [ %10, %.lr.ph.i ], [ %indvars.iv.next.prol, %11 ]
  %18 = icmp eq i8 %8, 1
  br i1 %18, label %removevars.exit.loopexit, label %.lr.ph.i.split.split

.lr.ph.i.split.split:                             ; preds = %.lr.ph.i.split
  br label %19

; <label>:19                                      ; preds = %19, %.lr.ph.i.split.split
  %indvars.iv = phi i64 [ %indvars.iv.unr, %.lr.ph.i.split.split ], [ %indvars.iv.next.1, %19 ]
  %20 = trunc i64 %indvars.iv to i8
  %21 = add i8 %20, -1
  store i8 %21, i8* %7, align 1, !tbaa !91
  %22 = zext i8 %21 to i64
  %23 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %4, i64 0, i32 15, i64 %22
  %24 = load i16, i16* %23, align 2, !tbaa !87
  %25 = zext i16 %24 to i64
  %26 = getelementptr inbounds %struct.LocVar.119, %struct.LocVar.119* %.pre2.i, i64 %25, i32 2
  store i32 %.pre.i, i32* %26, align 4, !tbaa !171
  %indvars.iv.next = add i64 %indvars.iv, 255
  %27 = trunc i64 %indvars.iv.next to i8
  %28 = add i8 %27, -1
  store i8 %28, i8* %7, align 1, !tbaa !91
  %29 = zext i8 %28 to i64
  %30 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %4, i64 0, i32 15, i64 %29
  %31 = load i16, i16* %30, align 2, !tbaa !87
  %32 = zext i16 %31 to i64
  %33 = getelementptr inbounds %struct.LocVar.119, %struct.LocVar.119* %.pre2.i, i64 %32, i32 2
  store i32 %.pre.i, i32* %33, align 4, !tbaa !171
  %34 = icmp eq i8 %28, 0
  %indvars.iv.next.1 = add nsw i64 %indvars.iv, -2
  br i1 %34, label %removevars.exit.loopexit.unr-lcssa, label %19

removevars.exit.loopexit.unr-lcssa:               ; preds = %19
  br label %removevars.exit.loopexit

removevars.exit.loopexit:                         ; preds = %.lr.ph.i.split, %removevars.exit.loopexit.unr-lcssa
  br label %removevars.exit

removevars.exit:                                  ; preds = %removevars.exit.loopexit, %0
  tail call void bitcast (void (%struct.FuncState*, i32, i32)* @luaK_ret to void (%struct.FuncState.248*, i32, i32)*)(%struct.FuncState.248* %4, i32 0, i32 0) #1
  %35 = load i32, i32* %.pre29, align 4, !tbaa !88
  %36 = icmp sgt i32 %35, -2
  br i1 %36, label %37, label %48

; <label>:37                                      ; preds = %removevars.exit
  %38 = getelementptr inbounds %struct.Proto.120, %struct.Proto.120* %6, i64 0, i32 4
  %39 = bitcast i32** %38 to i8**
  %40 = load i8*, i8** %39, align 8, !tbaa !93
  %41 = getelementptr inbounds %struct.Proto.120, %struct.Proto.120* %6, i64 0, i32 12
  %42 = load i32, i32* %41, align 4, !tbaa !112
  %43 = sext i32 %42 to i64
  %44 = shl nsw i64 %43, 2
  %45 = sext i32 %35 to i64
  %46 = shl nsw i64 %45, 2
  %47 = tail call i8* bitcast (i8* (%struct.lua_State*, i8*, i64, i64)* @luaM_realloc_ to i8* (%struct.lua_State.115*, i8*, i64, i64)*)(%struct.lua_State.115* %2, i8* %40, i64 %44, i64 %46) #1
  br label %50

; <label>:48                                      ; preds = %removevars.exit
  %49 = tail call i8* bitcast (i8* (%struct.lua_State*)* @luaM_toobig to i8* (%struct.lua_State.115*)*)(%struct.lua_State.115* %2) #1
  %.pre = getelementptr inbounds %struct.Proto.120, %struct.Proto.120* %6, i64 0, i32 4
  %.pre1 = bitcast i32** %.pre to i8**
  %.pre3 = getelementptr inbounds %struct.Proto.120, %struct.Proto.120* %6, i64 0, i32 12
  br label %50

; <label>:50                                      ; preds = %48, %37
  %.pre-phi4 = phi i32* [ %.pre3, %48 ], [ %41, %37 ]
  %.pre-phi2 = phi i8** [ %.pre1, %48 ], [ %39, %37 ]
  %51 = phi i8* [ %49, %48 ], [ %47, %37 ]
  store i8* %51, i8** %.pre-phi2, align 8, !tbaa !93
  %52 = load i32, i32* %.pre29, align 4, !tbaa !88
  store i32 %52, i32* %.pre-phi4, align 4, !tbaa !112
  %53 = icmp sgt i32 %52, -2
  br i1 %53, label %54, label %65

; <label>:54                                      ; preds = %50
  %55 = getelementptr inbounds %struct.Proto.120, %struct.Proto.120* %6, i64 0, i32 6
  %56 = bitcast i32** %55 to i8**
  %57 = load i8*, i8** %56, align 8, !tbaa !111
  %58 = getelementptr inbounds %struct.Proto.120, %struct.Proto.120* %6, i64 0, i32 13
  %59 = load i32, i32* %58, align 4, !tbaa !114
  %60 = sext i32 %59 to i64
  %61 = shl nsw i64 %60, 2
  %62 = sext i32 %52 to i64
  %63 = shl nsw i64 %62, 2
  %64 = tail call i8* bitcast (i8* (%struct.lua_State*, i8*, i64, i64)* @luaM_realloc_ to i8* (%struct.lua_State.115*, i8*, i64, i64)*)(%struct.lua_State.115* %2, i8* %57, i64 %61, i64 %63) #1
  br label %67

; <label>:65                                      ; preds = %50
  %66 = tail call i8* bitcast (i8* (%struct.lua_State*)* @luaM_toobig to i8* (%struct.lua_State.115*)*)(%struct.lua_State.115* %2) #1
  %.pre5 = getelementptr inbounds %struct.Proto.120, %struct.Proto.120* %6, i64 0, i32 6
  %.pre7 = bitcast i32** %.pre5 to i8**
  %.pre9 = getelementptr inbounds %struct.Proto.120, %struct.Proto.120* %6, i64 0, i32 13
  br label %67

; <label>:67                                      ; preds = %65, %54
  %.pre-phi10 = phi i32* [ %.pre9, %65 ], [ %58, %54 ]
  %.pre-phi8 = phi i8** [ %.pre7, %65 ], [ %56, %54 ]
  %68 = phi i8* [ %66, %65 ], [ %64, %54 ]
  store i8* %68, i8** %.pre-phi8, align 8, !tbaa !111
  %69 = load i32, i32* %.pre29, align 4, !tbaa !88
  store i32 %69, i32* %.pre-phi10, align 4, !tbaa !114
  %70 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %4, i64 0, i32 10
  %71 = load i32, i32* %70, align 4, !tbaa !108
  %72 = icmp sgt i32 %71, -2
  br i1 %72, label %73, label %84

; <label>:73                                      ; preds = %67
  %74 = getelementptr inbounds %struct.Proto.120, %struct.Proto.120* %6, i64 0, i32 3
  %75 = bitcast %struct.lua_TValue.101** %74 to i8**
  %76 = load i8*, i8** %75, align 8, !tbaa !116
  %77 = getelementptr inbounds %struct.Proto.120, %struct.Proto.120* %6, i64 0, i32 11
  %78 = load i32, i32* %77, align 4, !tbaa !115
  %79 = sext i32 %78 to i64
  %80 = shl nsw i64 %79, 4
  %81 = sext i32 %71 to i64
  %82 = shl nsw i64 %81, 4
  %83 = tail call i8* bitcast (i8* (%struct.lua_State*, i8*, i64, i64)* @luaM_realloc_ to i8* (%struct.lua_State.115*, i8*, i64, i64)*)(%struct.lua_State.115* %2, i8* %76, i64 %80, i64 %82) #1
  br label %86

; <label>:84                                      ; preds = %67
  %85 = tail call i8* bitcast (i8* (%struct.lua_State*)* @luaM_toobig to i8* (%struct.lua_State.115*)*)(%struct.lua_State.115* %2) #1
  %.pre11 = getelementptr inbounds %struct.Proto.120, %struct.Proto.120* %6, i64 0, i32 3
  %.pre13 = bitcast %struct.lua_TValue.101** %.pre11 to i8**
  %.pre15 = getelementptr inbounds %struct.Proto.120, %struct.Proto.120* %6, i64 0, i32 11
  br label %86

; <label>:86                                      ; preds = %84, %73
  %.pre-phi16 = phi i32* [ %.pre15, %84 ], [ %77, %73 ]
  %.pre-phi14 = phi i8** [ %.pre13, %84 ], [ %75, %73 ]
  %87 = phi i8* [ %85, %84 ], [ %83, %73 ]
  store i8* %87, i8** %.pre-phi14, align 8, !tbaa !116
  %88 = load i32, i32* %70, align 4, !tbaa !108
  store i32 %88, i32* %.pre-phi16, align 4, !tbaa !115
  %89 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %4, i64 0, i32 11
  %90 = load i32, i32* %89, align 4, !tbaa !256
  %91 = icmp sgt i32 %90, -2
  br i1 %91, label %92, label %103

; <label>:92                                      ; preds = %86
  %93 = getelementptr inbounds %struct.Proto.120, %struct.Proto.120* %6, i64 0, i32 5
  %94 = bitcast %struct.Proto.120*** %93 to i8**
  %95 = load i8*, i8** %94, align 8, !tbaa !140
  %96 = getelementptr inbounds %struct.Proto.120, %struct.Proto.120* %6, i64 0, i32 14
  %97 = load i32, i32* %96, align 4, !tbaa !139
  %98 = sext i32 %97 to i64
  %99 = shl nsw i64 %98, 3
  %100 = sext i32 %90 to i64
  %101 = shl nsw i64 %100, 3
  %102 = tail call i8* bitcast (i8* (%struct.lua_State*, i8*, i64, i64)* @luaM_realloc_ to i8* (%struct.lua_State.115*, i8*, i64, i64)*)(%struct.lua_State.115* %2, i8* %95, i64 %99, i64 %101) #1
  br label %105

; <label>:103                                     ; preds = %86
  %104 = tail call i8* bitcast (i8* (%struct.lua_State*)* @luaM_toobig to i8* (%struct.lua_State.115*)*)(%struct.lua_State.115* %2) #1
  %.pre17 = getelementptr inbounds %struct.Proto.120, %struct.Proto.120* %6, i64 0, i32 5
  %.pre19 = bitcast %struct.Proto.120*** %.pre17 to i8**
  %.pre21 = getelementptr inbounds %struct.Proto.120, %struct.Proto.120* %6, i64 0, i32 14
  br label %105

; <label>:105                                     ; preds = %103, %92
  %.pre-phi22 = phi i32* [ %.pre21, %103 ], [ %96, %92 ]
  %.pre-phi20 = phi i8** [ %.pre19, %103 ], [ %94, %92 ]
  %106 = phi i8* [ %104, %103 ], [ %102, %92 ]
  store i8* %106, i8** %.pre-phi20, align 8, !tbaa !140
  %107 = load i32, i32* %89, align 4, !tbaa !256
  store i32 %107, i32* %.pre-phi22, align 4, !tbaa !139
  %108 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %4, i64 0, i32 12
  %109 = load i16, i16* %108, align 2, !tbaa !257
  %110 = sext i16 %109 to i64
  %111 = add nsw i64 %110, 1
  %112 = icmp ult i64 %111, 1152921504606846976
  br i1 %112, label %113, label %123

; <label>:113                                     ; preds = %105
  %114 = getelementptr inbounds %struct.Proto.120, %struct.Proto.120* %6, i64 0, i32 7
  %115 = bitcast %struct.LocVar.119** %114 to i8**
  %116 = load i8*, i8** %115, align 8, !tbaa !167
  %117 = getelementptr inbounds %struct.Proto.120, %struct.Proto.120* %6, i64 0, i32 15
  %118 = load i32, i32* %117, align 4, !tbaa !166
  %119 = sext i32 %118 to i64
  %120 = shl nsw i64 %119, 4
  %121 = shl nsw i64 %110, 4
  %122 = tail call i8* bitcast (i8* (%struct.lua_State*, i8*, i64, i64)* @luaM_realloc_ to i8* (%struct.lua_State.115*, i8*, i64, i64)*)(%struct.lua_State.115* %2, i8* %116, i64 %120, i64 %121) #1
  br label %125

; <label>:123                                     ; preds = %105
  %124 = tail call i8* bitcast (i8* (%struct.lua_State*)* @luaM_toobig to i8* (%struct.lua_State.115*)*)(%struct.lua_State.115* %2) #1
  %.pre23 = getelementptr inbounds %struct.Proto.120, %struct.Proto.120* %6, i64 0, i32 7
  %.pre25 = bitcast %struct.LocVar.119** %.pre23 to i8**
  %.pre27 = getelementptr inbounds %struct.Proto.120, %struct.Proto.120* %6, i64 0, i32 15
  br label %125

; <label>:125                                     ; preds = %113, %123
  %.pre-phi28 = phi i32* [ %117, %113 ], [ %.pre27, %123 ]
  %.pre-phi26 = phi i8** [ %115, %113 ], [ %.pre25, %123 ]
  %126 = phi i8* [ %122, %113 ], [ %124, %123 ]
  store i8* %126, i8** %.pre-phi26, align 8, !tbaa !167
  %127 = load i16, i16* %108, align 2, !tbaa !257
  %128 = sext i16 %127 to i32
  store i32 %128, i32* %.pre-phi28, align 4, !tbaa !166
  %129 = getelementptr inbounds %struct.Proto.120, %struct.Proto.120* %6, i64 0, i32 19
  %130 = load i8, i8* %129, align 1, !tbaa !138
  %131 = getelementptr inbounds %struct.Proto.120, %struct.Proto.120* %6, i64 0, i32 8
  %132 = bitcast %union.TString.110*** %131 to i8**
  %133 = load i8*, i8** %132, align 8, !tbaa !68
  %134 = getelementptr inbounds %struct.Proto.120, %struct.Proto.120* %6, i64 0, i32 10
  %135 = load i32, i32* %134, align 4, !tbaa !65
  %136 = sext i32 %135 to i64
  %137 = shl nsw i64 %136, 3
  %138 = zext i8 %130 to i64
  %139 = shl nuw nsw i64 %138, 3
  %140 = tail call i8* bitcast (i8* (%struct.lua_State*, i8*, i64, i64)* @luaM_realloc_ to i8* (%struct.lua_State.115*, i8*, i64, i64)*)(%struct.lua_State.115* %2, i8* %133, i64 %137, i64 %139) #1
  store i8* %140, i8** %132, align 8, !tbaa !68
  %141 = load i8, i8* %129, align 1, !tbaa !138
  %142 = zext i8 %141 to i32
  store i32 %142, i32* %134, align 4, !tbaa !65
  %143 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %4, i64 0, i32 2
  %144 = bitcast %struct.FuncState.248** %143 to i64*
  %145 = load i64, i64* %144, align 8, !tbaa !245
  %146 = bitcast %struct.FuncState.248** %3 to i64*
  store i64 %145, i64* %146, align 8, !tbaa !224
  %147 = getelementptr inbounds %struct.lua_State.115, %struct.lua_State.115* %2, i64 0, i32 4
  %148 = load %struct.lua_TValue.101*, %struct.lua_TValue.101** %147, align 8, !tbaa !1
  %149 = getelementptr inbounds %struct.lua_TValue.101, %struct.lua_TValue.101* %148, i64 -2
  store %struct.lua_TValue.101* %149, %struct.lua_TValue.101** %147, align 8, !tbaa !1
  %150 = getelementptr inbounds %struct.LexState.249, %struct.LexState.249* %ls, i64 0, i32 3, i32 0
  %151 = load i32, i32* %150, align 4, !tbaa !223
  %.off.i = add i32 %151, -285
  %switch.i = icmp ult i32 %.off.i, 2
  br i1 %switch.i, label %152, label %anchor_token.exit

; <label>:152                                     ; preds = %125
  %153 = getelementptr inbounds %struct.LexState.249, %struct.LexState.249* %ls, i64 0, i32 3, i32 1
  %154 = bitcast %union.SemInfo* %153 to %union.TString.110**
  %155 = load %union.TString.110*, %union.TString.110** %154, align 8, !tbaa !25
  %156 = getelementptr inbounds %union.TString.110, %union.TString.110* %155, i64 1
  %157 = bitcast %union.TString.110* %156 to i8*
  %158 = getelementptr inbounds %union.TString.110, %union.TString.110* %155, i64 0, i32 0, i32 5
  %159 = load i64, i64* %158, align 8, !tbaa !40
  %160 = tail call %union.TString.110* bitcast (%union.TString* (%struct.LexState*, i8*, i64)* @luaX_newstring to %union.TString.110* (%struct.LexState.249*, i8*, i64)*)(%struct.LexState.249* %ls, i8* %157, i64 %159) #1
  br label %anchor_token.exit

anchor_token.exit:                                ; preds = %152, %125
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @test_then_block(%struct.LexState.249* %ls) #0 {
  %v.i = alloca %struct.expdesc, align 8
  tail call void bitcast (void (%struct.LexState*)* @luaX_next to void (%struct.LexState.249*)*)(%struct.LexState.249* %ls) #1
  %1 = bitcast %struct.expdesc* %v.i to i8*
  call void @llvm.lifetime.start(i64 24, i8* %1) #1
  %2 = call fastcc i32 @subexpr(%struct.LexState.249* %ls, %struct.expdesc* nonnull %v.i, i32 0) #1
  %3 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %v.i, i64 0, i32 0
  %4 = load i32, i32* %3, align 8, !tbaa !101
  %5 = icmp eq i32 %4, 1
  br i1 %5, label %6, label %cond.exit

; <label>:6                                       ; preds = %0
  store i32 3, i32* %3, align 8, !tbaa !101
  br label %cond.exit

cond.exit:                                        ; preds = %0, %6
  %7 = getelementptr inbounds %struct.LexState.249, %struct.LexState.249* %ls, i64 0, i32 5
  %8 = load %struct.FuncState.248*, %struct.FuncState.248** %7, align 8, !tbaa !224
  call void bitcast (void (%struct.FuncState*, %struct.expdesc*)* @luaK_goiftrue to void (%struct.FuncState.248*, %struct.expdesc*)*)(%struct.FuncState.248* %8, %struct.expdesc* nonnull %v.i) #1
  %9 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %v.i, i64 0, i32 3
  %10 = load i32, i32* %9, align 4, !tbaa !107
  call void @llvm.lifetime.end(i64 24, i8* %1) #1
  %11 = getelementptr inbounds %struct.LexState.249, %struct.LexState.249* %ls, i64 0, i32 3, i32 0
  %12 = load i32, i32* %11, align 4, !tbaa !223
  %13 = icmp eq i32 %12, 274
  br i1 %13, label %checknext.exit, label %14

; <label>:14                                      ; preds = %cond.exit
  %15 = getelementptr inbounds %struct.LexState.249, %struct.LexState.249* %ls, i64 0, i32 6
  %16 = load %struct.lua_State.115*, %struct.lua_State.115** %15, align 8, !tbaa !218
  %17 = call i8* bitcast (i8* (%struct.LexState*, i32)* @luaX_token2str to i8* (%struct.LexState.249*, i32)*)(%struct.LexState.249* %ls, i32 274) #1
  %18 = call i8* (%struct.lua_State.115*, i8*, ...) bitcast (i8* (%struct.lua_State.215*, i8*, ...)* @luaO_pushfstring to i8* (%struct.lua_State.115*, i8*, ...)*)(%struct.lua_State.115* %16, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.509, i64 0, i64 0), i8* %17) #1
  call void bitcast (void (%struct.LexState*, i8*)* @luaX_syntaxerror to void (%struct.LexState.249*, i8*)*)(%struct.LexState.249* %ls, i8* %18) #1
  br label %checknext.exit

checknext.exit:                                   ; preds = %cond.exit, %14
  call void bitcast (void (%struct.LexState*)* @luaX_next to void (%struct.LexState.249*)*)(%struct.LexState.249* %ls) #1
  call fastcc void @block(%struct.LexState.249* %ls)
  ret i32 %10
}

; Function Attrs: nounwind uwtable
define internal fastcc void @block(%struct.LexState.249* %ls) #0 {
  %bl = alloca %struct.BlockCnt, align 8
  %1 = getelementptr inbounds %struct.LexState.249, %struct.LexState.249* %ls, i64 0, i32 5
  %2 = load %struct.FuncState.248*, %struct.FuncState.248** %1, align 8, !tbaa !224
  %3 = bitcast %struct.BlockCnt* %bl to i8*
  call void @llvm.lifetime.start(i64 16, i8* %3) #1
  %4 = getelementptr inbounds %struct.BlockCnt, %struct.BlockCnt* %bl, i64 0, i32 1
  store i32 -1, i32* %4, align 8, !tbaa !247
  %5 = getelementptr inbounds %struct.BlockCnt, %struct.BlockCnt* %bl, i64 0, i32 4
  store i8 0, i8* %5, align 2, !tbaa !249
  %6 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %2, i64 0, i32 13
  %7 = load i8, i8* %6, align 1, !tbaa !91
  %8 = getelementptr inbounds %struct.BlockCnt, %struct.BlockCnt* %bl, i64 0, i32 2
  store i8 %7, i8* %8, align 4, !tbaa !250
  %9 = getelementptr inbounds %struct.BlockCnt, %struct.BlockCnt* %bl, i64 0, i32 3
  store i8 0, i8* %9, align 1, !tbaa !251
  %10 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %2, i64 0, i32 5
  %11 = bitcast %struct.BlockCnt** %10 to i64*
  %12 = load i64, i64* %11, align 8, !tbaa !246
  %13 = bitcast %struct.BlockCnt* %bl to i64*
  store i64 %12, i64* %13, align 8, !tbaa !252
  store %struct.BlockCnt* %bl, %struct.BlockCnt** %10, align 8, !tbaa !246
  %14 = getelementptr inbounds %struct.LexState.249, %struct.LexState.249* %ls, i64 0, i32 6
  %15 = load %struct.lua_State.115*, %struct.lua_State.115** %14, align 8, !tbaa !218
  %16 = getelementptr inbounds %struct.lua_State.115, %struct.lua_State.115* %15, i64 0, i32 15
  %17 = load i16, i16* %16, align 2, !tbaa !16
  %18 = add i16 %17, 1
  store i16 %18, i16* %16, align 2, !tbaa !16
  %19 = icmp ugt i16 %18, 200
  br i1 %19, label %20, label %enterlevel.exit.i.preheader

; <label>:20                                      ; preds = %0
  call void bitcast (void (%struct.LexState*, i8*, i32)* @luaX_lexerror to void (%struct.LexState.249*, i8*, i32)*)(%struct.LexState.249* %ls, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.1.508, i64 0, i64 0), i32 0) #1
  br label %enterlevel.exit.i.preheader

enterlevel.exit.i.preheader:                      ; preds = %20, %0
  %21 = getelementptr inbounds %struct.LexState.249, %struct.LexState.249* %ls, i64 0, i32 3, i32 0
  br label %22

; <label>:22                                      ; preds = %enterlevel.exit.i.preheader, %testnext.exit.i
  %23 = load i32, i32* %21, align 4, !tbaa !223
  switch i32 %23, label %24 [
    i32 260, label %chunk.exit
    i32 261, label %chunk.exit
    i32 262, label %chunk.exit
    i32 276, label %chunk.exit
    i32 287, label %chunk.exit
  ]

; <label>:24                                      ; preds = %22
  %25 = call fastcc i32 @statement(%struct.LexState.249* %ls) #1
  %26 = load i32, i32* %21, align 4, !tbaa !223
  %27 = icmp eq i32 %26, 59
  br i1 %27, label %28, label %testnext.exit.i

; <label>:28                                      ; preds = %24
  call void bitcast (void (%struct.LexState*)* @luaX_next to void (%struct.LexState.249*)*)(%struct.LexState.249* %ls) #1
  br label %testnext.exit.i

testnext.exit.i:                                  ; preds = %28, %24
  %29 = load %struct.FuncState.248*, %struct.FuncState.248** %1, align 8, !tbaa !224
  %30 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %29, i64 0, i32 13
  %31 = load i8, i8* %30, align 1, !tbaa !91
  %32 = zext i8 %31 to i32
  %33 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %29, i64 0, i32 9
  store i32 %32, i32* %33, align 4, !tbaa !99
  %34 = icmp eq i32 %25, 0
  br i1 %34, label %22, label %chunk.exit

chunk.exit:                                       ; preds = %22, %22, %22, %22, %22, %testnext.exit.i
  %35 = load %struct.lua_State.115*, %struct.lua_State.115** %14, align 8, !tbaa !218
  %36 = getelementptr inbounds %struct.lua_State.115, %struct.lua_State.115* %35, i64 0, i32 15
  %37 = load i16, i16* %36, align 2, !tbaa !16
  %38 = add i16 %37, -1
  store i16 %38, i16* %36, align 2, !tbaa !16
  %39 = load %struct.BlockCnt*, %struct.BlockCnt** %10, align 8, !tbaa !246
  %40 = bitcast %struct.BlockCnt* %39 to i64*
  %41 = load i64, i64* %40, align 8, !tbaa !252
  store i64 %41, i64* %11, align 8, !tbaa !246
  %42 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %2, i64 0, i32 3
  %43 = load %struct.LexState.249*, %struct.LexState.249** %42, align 8, !tbaa !94
  %44 = getelementptr inbounds %struct.BlockCnt, %struct.BlockCnt* %39, i64 0, i32 2
  %45 = load i8, i8* %44, align 1, !tbaa !250
  %.idx.i = getelementptr %struct.LexState.249, %struct.LexState.249* %43, i64 0, i32 5
  %.idx.val.i = load %struct.FuncState.248*, %struct.FuncState.248** %.idx.i, align 8, !tbaa !224
  %46 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %.idx.val.i, i64 0, i32 13
  %47 = load i8, i8* %46, align 1, !tbaa !91
  %48 = icmp ugt i8 %47, %45
  br i1 %48, label %.lr.ph.i.i, label %removevars.exit.i

.lr.ph.i.i:                                       ; preds = %chunk.exit
  %49 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %.idx.val.i, i64 0, i32 6
  %50 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %.idx.val.i, i64 0, i32 0
  %.pre.i.i = load i32, i32* %49, align 4, !tbaa !88
  %.pre1.i.i = load %struct.Proto.120*, %struct.Proto.120** %50, align 8, !tbaa !92
  %.phi.trans.insert.i.i = getelementptr inbounds %struct.Proto.120, %struct.Proto.120* %.pre1.i.i, i64 0, i32 7
  %.pre2.i.i = load %struct.LocVar.119*, %struct.LocVar.119** %.phi.trans.insert.i.i, align 8, !tbaa !167
  %51 = zext i8 %47 to i64
  %52 = sub i8 %47, %45
  %53 = add i8 %47, -1
  %xtraiter = and i8 %52, 1
  %lcmp.mod = icmp eq i8 %xtraiter, 0
  br i1 %lcmp.mod, label %.lr.ph.i.i.split, label %54

; <label>:54                                      ; preds = %.lr.ph.i.i
  %55 = add i8 %47, -1
  store i8 %55, i8* %46, align 1, !tbaa !91
  %56 = zext i8 %55 to i64
  %57 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %.idx.val.i, i64 0, i32 15, i64 %56
  %58 = load i16, i16* %57, align 2, !tbaa !87
  %59 = zext i16 %58 to i64
  %60 = getelementptr inbounds %struct.LocVar.119, %struct.LocVar.119* %.pre2.i.i, i64 %59, i32 2
  store i32 %.pre.i.i, i32* %60, align 4, !tbaa !171
  %indvars.iv.next.i.prol = add nsw i64 %51, -1
  br label %.lr.ph.i.i.split

.lr.ph.i.i.split:                                 ; preds = %.lr.ph.i.i, %54
  %indvars.iv.i.unr = phi i64 [ %51, %.lr.ph.i.i ], [ %indvars.iv.next.i.prol, %54 ]
  %61 = icmp eq i8 %53, %45
  br i1 %61, label %removevars.exit.i.loopexit, label %.lr.ph.i.i.split.split

.lr.ph.i.i.split.split:                           ; preds = %.lr.ph.i.i.split
  br label %62

; <label>:62                                      ; preds = %62, %.lr.ph.i.i.split.split
  %indvars.iv.i = phi i64 [ %indvars.iv.i.unr, %.lr.ph.i.i.split.split ], [ %indvars.iv.next.i.1, %62 ]
  %63 = trunc i64 %indvars.iv.i to i8
  %64 = add i8 %63, -1
  store i8 %64, i8* %46, align 1, !tbaa !91
  %65 = zext i8 %64 to i64
  %66 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %.idx.val.i, i64 0, i32 15, i64 %65
  %67 = load i16, i16* %66, align 2, !tbaa !87
  %68 = zext i16 %67 to i64
  %69 = getelementptr inbounds %struct.LocVar.119, %struct.LocVar.119* %.pre2.i.i, i64 %68, i32 2
  store i32 %.pre.i.i, i32* %69, align 4, !tbaa !171
  %indvars.iv.next.i = add i64 %indvars.iv.i, 255
  %70 = trunc i64 %indvars.iv.next.i to i8
  %71 = add i8 %70, -1
  store i8 %71, i8* %46, align 1, !tbaa !91
  %72 = zext i8 %71 to i64
  %73 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %.idx.val.i, i64 0, i32 15, i64 %72
  %74 = load i16, i16* %73, align 2, !tbaa !87
  %75 = zext i16 %74 to i64
  %76 = getelementptr inbounds %struct.LocVar.119, %struct.LocVar.119* %.pre2.i.i, i64 %75, i32 2
  store i32 %.pre.i.i, i32* %76, align 4, !tbaa !171
  %77 = icmp ugt i8 %71, %45
  %indvars.iv.next.i.1 = add nsw i64 %indvars.iv.i, -2
  br i1 %77, label %62, label %removevars.exit.i.loopexit.unr-lcssa

removevars.exit.i.loopexit.unr-lcssa:             ; preds = %62
  br label %removevars.exit.i.loopexit

removevars.exit.i.loopexit:                       ; preds = %.lr.ph.i.i.split, %removevars.exit.i.loopexit.unr-lcssa
  br label %removevars.exit.i

removevars.exit.i:                                ; preds = %removevars.exit.i.loopexit, %chunk.exit
  %78 = getelementptr inbounds %struct.BlockCnt, %struct.BlockCnt* %39, i64 0, i32 3
  %79 = load i8, i8* %78, align 1, !tbaa !251
  %80 = icmp eq i8 %79, 0
  br i1 %80, label %leaveblock.exit, label %81

; <label>:81                                      ; preds = %removevars.exit.i
  %82 = zext i8 %45 to i32
  %83 = call i32 bitcast (i32 (%struct.FuncState*, i32, i32, i32, i32)* @luaK_codeABC to i32 (%struct.FuncState.248*, i32, i32, i32, i32)*)(%struct.FuncState.248* %2, i32 35, i32 %82, i32 0, i32 0) #1
  br label %leaveblock.exit

leaveblock.exit:                                  ; preds = %removevars.exit.i, %81
  %84 = load i8, i8* %6, align 1, !tbaa !91
  %85 = zext i8 %84 to i32
  %86 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %2, i64 0, i32 9
  store i32 %85, i32* %86, align 4, !tbaa !99
  %87 = getelementptr inbounds %struct.BlockCnt, %struct.BlockCnt* %39, i64 0, i32 1
  %88 = load i32, i32* %87, align 4, !tbaa !247
  call void bitcast (void (%struct.FuncState*, i32)* @luaK_patchtohere to void (%struct.FuncState.248*, i32)*)(%struct.FuncState.248* %2, i32 %88) #1
  call void @llvm.lifetime.end(i64 16, i8* %3) #1
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @check_match(%struct.LexState.249* %ls, i32 %what, i32 %who, i32 %where) #0 {
  %1 = getelementptr inbounds %struct.LexState.249, %struct.LexState.249* %ls, i64 0, i32 3, i32 0
  %2 = load i32, i32* %1, align 4, !tbaa !223
  %3 = icmp eq i32 %2, %what
  br i1 %3, label %testnext.exit, label %4

testnext.exit:                                    ; preds = %0
  tail call void bitcast (void (%struct.LexState*)* @luaX_next to void (%struct.LexState.249*)*)(%struct.LexState.249* %ls) #1
  br label %16

; <label>:4                                       ; preds = %0
  %5 = getelementptr inbounds %struct.LexState.249, %struct.LexState.249* %ls, i64 0, i32 1
  %6 = load i32, i32* %5, align 4, !tbaa !220
  %7 = icmp eq i32 %6, %where
  %8 = getelementptr inbounds %struct.LexState.249, %struct.LexState.249* %ls, i64 0, i32 6
  %9 = load %struct.lua_State.115*, %struct.lua_State.115** %8, align 8, !tbaa !218
  %10 = tail call i8* bitcast (i8* (%struct.LexState*, i32)* @luaX_token2str to i8* (%struct.LexState.249*, i32)*)(%struct.LexState.249* %ls, i32 %what) #1
  br i1 %7, label %11, label %13

; <label>:11                                      ; preds = %4
  %12 = tail call i8* (%struct.lua_State.115*, i8*, ...) bitcast (i8* (%struct.lua_State.215*, i8*, ...)* @luaO_pushfstring to i8* (%struct.lua_State.115*, i8*, ...)*)(%struct.lua_State.115* %9, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.509, i64 0, i64 0), i8* %10) #1
  tail call void bitcast (void (%struct.LexState*, i8*)* @luaX_syntaxerror to void (%struct.LexState.249*, i8*)*)(%struct.LexState.249* %ls, i8* %12) #1
  br label %16

; <label>:13                                      ; preds = %4
  %14 = tail call i8* bitcast (i8* (%struct.LexState*, i32)* @luaX_token2str to i8* (%struct.LexState.249*, i32)*)(%struct.LexState.249* %ls, i32 %who) #1
  %15 = tail call i8* (%struct.lua_State.115*, i8*, ...) bitcast (i8* (%struct.lua_State.215*, i8*, ...)* @luaO_pushfstring to i8* (%struct.lua_State.115*, i8*, ...)*)(%struct.lua_State.115* %9, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.17.535, i64 0, i64 0), i8* %10, i8* %14, i32 %where) #1
  tail call void bitcast (void (%struct.LexState*, i8*)* @luaX_syntaxerror to void (%struct.LexState.249*, i8*)*)(%struct.LexState.249* %ls, i8* %15) #1
  br label %16

; <label>:16                                      ; preds = %testnext.exit, %11, %13
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @subexpr(%struct.LexState.249* %ls, %struct.expdesc* %v, i32 %limit) #0 {
  %v2 = alloca %struct.expdesc, align 8
  %1 = getelementptr inbounds %struct.LexState.249, %struct.LexState.249* %ls, i64 0, i32 6
  %2 = load %struct.lua_State.115*, %struct.lua_State.115** %1, align 8, !tbaa !218
  %3 = getelementptr inbounds %struct.lua_State.115, %struct.lua_State.115* %2, i64 0, i32 15
  %4 = load i16, i16* %3, align 2, !tbaa !16
  %5 = add i16 %4, 1
  store i16 %5, i16* %3, align 2, !tbaa !16
  %6 = icmp ugt i16 %5, 200
  br i1 %6, label %7, label %enterlevel.exit

; <label>:7                                       ; preds = %0
  tail call void bitcast (void (%struct.LexState*, i8*, i32)* @luaX_lexerror to void (%struct.LexState.249*, i8*, i32)*)(%struct.LexState.249* %ls, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.1.508, i64 0, i64 0), i32 0) #1
  br label %enterlevel.exit

enterlevel.exit:                                  ; preds = %0, %7
  %8 = getelementptr inbounds %struct.LexState.249, %struct.LexState.249* %ls, i64 0, i32 3, i32 0
  %9 = load i32, i32* %8, align 4, !tbaa !223
  switch i32 %9, label %78 [
    i32 270, label %12
    i32 45, label %10
    i32 35, label %11
    i32 284, label %16
    i32 286, label %26
    i32 269, label %36
    i32 275, label %42
    i32 263, label %48
    i32 279, label %54
    i32 123, label %74
    i32 265, label %75
  ]

; <label>:10                                      ; preds = %enterlevel.exit
  br label %12

; <label>:11                                      ; preds = %enterlevel.exit
  br label %12

; <label>:12                                      ; preds = %enterlevel.exit, %11, %10
  %.0.i.1.ph = phi i32 [ 1, %enterlevel.exit ], [ 0, %10 ], [ 2, %11 ]
  tail call void bitcast (void (%struct.LexState*)* @luaX_next to void (%struct.LexState.249*)*)(%struct.LexState.249* %ls) #1
  %13 = tail call fastcc i32 @subexpr(%struct.LexState.249* %ls, %struct.expdesc* %v, i32 8)
  %14 = getelementptr inbounds %struct.LexState.249, %struct.LexState.249* %ls, i64 0, i32 5
  %15 = load %struct.FuncState.248*, %struct.FuncState.248** %14, align 8, !tbaa !224
  tail call void bitcast (void (%struct.FuncState*, i32, %struct.expdesc*)* @luaK_prefix to void (%struct.FuncState.248*, i32, %struct.expdesc*)*)(%struct.FuncState.248* %15, i32 %.0.i.1.ph, %struct.expdesc* %v) #1
  br label %simpleexp.exit

; <label>:16                                      ; preds = %enterlevel.exit
  %17 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %v, i64 0, i32 2
  store i32 -1, i32* %17, align 4, !tbaa !106
  %18 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %v, i64 0, i32 3
  store i32 -1, i32* %18, align 4, !tbaa !107
  %19 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %v, i64 0, i32 0
  store i32 5, i32* %19, align 4, !tbaa !101
  %20 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %v, i64 0, i32 1
  %21 = bitcast %union.SemInfo* %20 to i32*
  store i32 0, i32* %21, align 4, !tbaa !103
  %22 = getelementptr inbounds %struct.LexState.249, %struct.LexState.249* %ls, i64 0, i32 3, i32 1, i32 0
  %23 = bitcast double* %22 to i64*
  %24 = load i64, i64* %23, align 8, !tbaa !36
  %25 = bitcast %union.SemInfo* %20 to i64*
  store i64 %24, i64* %25, align 8, !tbaa !36
  br label %79

; <label>:26                                      ; preds = %enterlevel.exit
  %27 = getelementptr inbounds %struct.LexState.249, %struct.LexState.249* %ls, i64 0, i32 3, i32 1
  %28 = bitcast %union.SemInfo* %27 to %union.TString.110**
  %29 = load %union.TString.110*, %union.TString.110** %28, align 8, !tbaa !25
  %ls.idx.i = getelementptr %struct.LexState.249, %struct.LexState.249* %ls, i64 0, i32 5
  %ls.idx.val.i = load %struct.FuncState.248*, %struct.FuncState.248** %ls.idx.i, align 8, !tbaa !224
  %30 = tail call i32 bitcast (i32 (%struct.FuncState*, %union.TString*)* @luaK_stringK to i32 (%struct.FuncState.248*, %union.TString.110*)*)(%struct.FuncState.248* %ls.idx.val.i, %union.TString.110* %29) #1
  %31 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %v, i64 0, i32 2
  store i32 -1, i32* %31, align 4, !tbaa !106
  %32 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %v, i64 0, i32 3
  store i32 -1, i32* %32, align 4, !tbaa !107
  %33 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %v, i64 0, i32 0
  store i32 4, i32* %33, align 4, !tbaa !101
  %34 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %v, i64 0, i32 1
  %35 = bitcast %union.SemInfo* %34 to i32*
  store i32 %30, i32* %35, align 4, !tbaa !103
  br label %79

; <label>:36                                      ; preds = %enterlevel.exit
  %37 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %v, i64 0, i32 2
  store i32 -1, i32* %37, align 4, !tbaa !106
  %38 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %v, i64 0, i32 3
  store i32 -1, i32* %38, align 4, !tbaa !107
  %39 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %v, i64 0, i32 0
  store i32 1, i32* %39, align 4, !tbaa !101
  %40 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %v, i64 0, i32 1
  %41 = bitcast %union.SemInfo* %40 to i32*
  store i32 0, i32* %41, align 4, !tbaa !103
  br label %79

; <label>:42                                      ; preds = %enterlevel.exit
  %43 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %v, i64 0, i32 2
  store i32 -1, i32* %43, align 4, !tbaa !106
  %44 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %v, i64 0, i32 3
  store i32 -1, i32* %44, align 4, !tbaa !107
  %45 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %v, i64 0, i32 0
  store i32 2, i32* %45, align 4, !tbaa !101
  %46 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %v, i64 0, i32 1
  %47 = bitcast %union.SemInfo* %46 to i32*
  store i32 0, i32* %47, align 4, !tbaa !103
  br label %79

; <label>:48                                      ; preds = %enterlevel.exit
  %49 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %v, i64 0, i32 2
  store i32 -1, i32* %49, align 4, !tbaa !106
  %50 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %v, i64 0, i32 3
  store i32 -1, i32* %50, align 4, !tbaa !107
  %51 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %v, i64 0, i32 0
  store i32 3, i32* %51, align 4, !tbaa !101
  %52 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %v, i64 0, i32 1
  %53 = bitcast %union.SemInfo* %52 to i32*
  store i32 0, i32* %53, align 4, !tbaa !103
  br label %79

; <label>:54                                      ; preds = %enterlevel.exit
  %55 = getelementptr inbounds %struct.LexState.249, %struct.LexState.249* %ls, i64 0, i32 5
  %56 = load %struct.FuncState.248*, %struct.FuncState.248** %55, align 8, !tbaa !224
  %57 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %56, i64 0, i32 0
  %58 = load %struct.Proto.120*, %struct.Proto.120** %57, align 8, !tbaa !92
  %59 = getelementptr inbounds %struct.Proto.120, %struct.Proto.120* %58, i64 0, i32 21
  %60 = load i8, i8* %59, align 1, !tbaa !137
  %61 = icmp eq i8 %60, 0
  br i1 %61, label %62, label %63

; <label>:62                                      ; preds = %54
  tail call void bitcast (void (%struct.LexState*, i8*)* @luaX_syntaxerror to void (%struct.LexState.249*, i8*)*)(%struct.LexState.249* %ls, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.2.534, i64 0, i64 0)) #1
  %.pre = load %struct.Proto.120*, %struct.Proto.120** %57, align 8, !tbaa !92
  %.phi.trans.insert = getelementptr inbounds %struct.Proto.120, %struct.Proto.120* %.pre, i64 0, i32 21
  %.pre6 = load i8, i8* %.phi.trans.insert, align 1, !tbaa !137
  br label %63

; <label>:63                                      ; preds = %62, %54
  %64 = phi i8 [ %.pre6, %62 ], [ %60, %54 ]
  %65 = phi %struct.Proto.120* [ %.pre, %62 ], [ %58, %54 ]
  %66 = getelementptr inbounds %struct.Proto.120, %struct.Proto.120* %65, i64 0, i32 21
  %67 = and i8 %64, -5
  store i8 %67, i8* %66, align 1, !tbaa !137
  %68 = tail call i32 bitcast (i32 (%struct.FuncState*, i32, i32, i32, i32)* @luaK_codeABC to i32 (%struct.FuncState.248*, i32, i32, i32, i32)*)(%struct.FuncState.248* %56, i32 37, i32 0, i32 1, i32 0) #1
  %69 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %v, i64 0, i32 2
  store i32 -1, i32* %69, align 4, !tbaa !106
  %70 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %v, i64 0, i32 3
  store i32 -1, i32* %70, align 4, !tbaa !107
  %71 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %v, i64 0, i32 0
  store i32 14, i32* %71, align 4, !tbaa !101
  %72 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %v, i64 0, i32 1
  %73 = bitcast %union.SemInfo* %72 to i32*
  store i32 %68, i32* %73, align 4, !tbaa !103
  br label %79

; <label>:74                                      ; preds = %enterlevel.exit
  tail call fastcc void @constructor(%struct.LexState.249* %ls, %struct.expdesc* %v) #1
  br label %simpleexp.exit

; <label>:75                                      ; preds = %enterlevel.exit
  tail call void bitcast (void (%struct.LexState*)* @luaX_next to void (%struct.LexState.249*)*)(%struct.LexState.249* %ls) #1
  %76 = getelementptr inbounds %struct.LexState.249, %struct.LexState.249* %ls, i64 0, i32 1
  %77 = load i32, i32* %76, align 4, !tbaa !220
  tail call fastcc void @body(%struct.LexState.249* %ls, %struct.expdesc* %v, i32 0, i32 %77) #1
  br label %simpleexp.exit

; <label>:78                                      ; preds = %enterlevel.exit
  tail call fastcc void @primaryexp(%struct.LexState.249* %ls, %struct.expdesc* %v) #1
  br label %simpleexp.exit

; <label>:79                                      ; preds = %63, %48, %42, %36, %26, %16
  tail call void bitcast (void (%struct.LexState*)* @luaX_next to void (%struct.LexState.249*)*)(%struct.LexState.249* %ls) #1
  br label %simpleexp.exit

simpleexp.exit:                                   ; preds = %79, %78, %75, %74, %12
  %80 = load i32, i32* %8, align 4, !tbaa !223
  switch i32 %80, label %.critedge [
    i32 43, label %.lr.ph
    i32 45, label %81
    i32 42, label %82
    i32 47, label %83
    i32 37, label %84
    i32 94, label %85
    i32 278, label %86
    i32 283, label %87
    i32 280, label %88
    i32 60, label %89
    i32 282, label %90
    i32 62, label %91
    i32 281, label %92
    i32 257, label %93
    i32 271, label %94
  ]

; <label>:81                                      ; preds = %simpleexp.exit
  br label %.lr.ph

; <label>:82                                      ; preds = %simpleexp.exit
  br label %.lr.ph

; <label>:83                                      ; preds = %simpleexp.exit
  br label %.lr.ph

; <label>:84                                      ; preds = %simpleexp.exit
  br label %.lr.ph

; <label>:85                                      ; preds = %simpleexp.exit
  br label %.lr.ph

; <label>:86                                      ; preds = %simpleexp.exit
  br label %.lr.ph

; <label>:87                                      ; preds = %simpleexp.exit
  br label %.lr.ph

; <label>:88                                      ; preds = %simpleexp.exit
  br label %.lr.ph

; <label>:89                                      ; preds = %simpleexp.exit
  br label %.lr.ph

; <label>:90                                      ; preds = %simpleexp.exit
  br label %.lr.ph

; <label>:91                                      ; preds = %simpleexp.exit
  br label %.lr.ph

; <label>:92                                      ; preds = %simpleexp.exit
  br label %.lr.ph

; <label>:93                                      ; preds = %simpleexp.exit
  br label %.lr.ph

; <label>:94                                      ; preds = %simpleexp.exit
  br label %.lr.ph

.lr.ph:                                           ; preds = %simpleexp.exit, %81, %82, %83, %84, %85, %86, %87, %88, %89, %90, %91, %92, %93, %94
  %op.0.ph.ph = phi i32 [ 14, %94 ], [ 13, %93 ], [ 12, %92 ], [ 11, %91 ], [ 10, %90 ], [ 9, %89 ], [ 8, %88 ], [ 7, %87 ], [ 6, %86 ], [ 5, %85 ], [ 4, %84 ], [ 3, %83 ], [ 2, %82 ], [ 1, %81 ], [ 0, %simpleexp.exit ]
  %95 = bitcast %struct.expdesc* %v2 to i8*
  %96 = getelementptr inbounds %struct.LexState.249, %struct.LexState.249* %ls, i64 0, i32 5
  br label %97

; <label>:97                                      ; preds = %.lr.ph, %getbinopr.exit
  %op.03 = phi i32 [ %op.0.ph.ph, %.lr.ph ], [ %107, %getbinopr.exit ]
  %98 = zext i32 %op.03 to i64
  %99 = getelementptr inbounds [15 x %struct.upvaldesc], [15 x %struct.upvaldesc]* @priority, i64 0, i64 %98, i32 0
  %100 = load i8, i8* %99, align 2, !tbaa !258
  %101 = zext i8 %100 to i32
  %102 = icmp ugt i32 %101, %limit
  br i1 %102, label %getbinopr.exit, label %.critedge.loopexit

getbinopr.exit:                                   ; preds = %97
  call void @llvm.lifetime.start(i64 24, i8* %95) #1
  call void bitcast (void (%struct.LexState*)* @luaX_next to void (%struct.LexState.249*)*)(%struct.LexState.249* %ls) #1
  %103 = load %struct.FuncState.248*, %struct.FuncState.248** %96, align 8, !tbaa !224
  call void bitcast (void (%struct.FuncState*, i32, %struct.expdesc*)* @luaK_infix to void (%struct.FuncState.248*, i32, %struct.expdesc*)*)(%struct.FuncState.248* %103, i32 %op.03, %struct.expdesc* %v) #1
  %104 = getelementptr inbounds [15 x %struct.upvaldesc], [15 x %struct.upvaldesc]* @priority, i64 0, i64 %98, i32 1
  %105 = load i8, i8* %104, align 1, !tbaa !260
  %106 = zext i8 %105 to i32
  %107 = call fastcc i32 @subexpr(%struct.LexState.249* %ls, %struct.expdesc* nonnull %v2, i32 %106)
  %108 = load %struct.FuncState.248*, %struct.FuncState.248** %96, align 8, !tbaa !224
  call void bitcast (void (%struct.FuncState*, i32, %struct.expdesc*, %struct.expdesc*)* @luaK_posfix to void (%struct.FuncState.248*, i32, %struct.expdesc*, %struct.expdesc*)*)(%struct.FuncState.248* %108, i32 %op.03, %struct.expdesc* %v, %struct.expdesc* nonnull %v2) #1
  call void @llvm.lifetime.end(i64 24, i8* %95) #1
  %109 = icmp eq i32 %107, 15
  br i1 %109, label %.critedge.loopexit, label %97

.critedge.loopexit:                               ; preds = %getbinopr.exit, %97
  %op.0.lcssa.ph = phi i32 [ %op.03, %97 ], [ 15, %getbinopr.exit ]
  br label %.critedge

.critedge:                                        ; preds = %.critedge.loopexit, %simpleexp.exit
  %op.0.lcssa = phi i32 [ 15, %simpleexp.exit ], [ %op.0.lcssa.ph, %.critedge.loopexit ]
  %110 = load %struct.lua_State.115*, %struct.lua_State.115** %1, align 8, !tbaa !218
  %111 = getelementptr inbounds %struct.lua_State.115, %struct.lua_State.115* %110, i64 0, i32 15
  %112 = load i16, i16* %111, align 2, !tbaa !16
  %113 = add i16 %112, -1
  store i16 %113, i16* %111, align 2, !tbaa !16
  ret i32 %op.0.lcssa
}

; Function Attrs: nounwind uwtable
define internal fastcc void @new_localvar(%struct.LexState.249* nocapture readonly %ls, %union.TString.110* %name, i32 %n) #0 {
  %1 = getelementptr inbounds %struct.LexState.249, %struct.LexState.249* %ls, i64 0, i32 5
  %2 = load %struct.FuncState.248*, %struct.FuncState.248** %1, align 8, !tbaa !224
  %3 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %2, i64 0, i32 13
  %4 = load i8, i8* %3, align 1, !tbaa !91
  %5 = zext i8 %4 to i32
  %6 = add nsw i32 %5, %n
  %7 = icmp sgt i32 %6, 199
  br i1 %7, label %8, label %23

; <label>:8                                       ; preds = %0
  %9 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %2, i64 0, i32 0
  %10 = load %struct.Proto.120*, %struct.Proto.120** %9, align 8, !tbaa !92
  %11 = getelementptr inbounds %struct.Proto.120, %struct.Proto.120* %10, i64 0, i32 16
  %12 = load i32, i32* %11, align 4, !tbaa !165
  %13 = icmp eq i32 %12, 0
  %14 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %2, i64 0, i32 4
  %15 = load %struct.lua_State.115*, %struct.lua_State.115** %14, align 8, !tbaa !113
  br i1 %13, label %16, label %18

; <label>:16                                      ; preds = %8
  %17 = tail call i8* (%struct.lua_State.115*, i8*, ...) bitcast (i8* (%struct.lua_State.215*, i8*, ...)* @luaO_pushfstring to i8* (%struct.lua_State.115*, i8*, ...)*)(%struct.lua_State.115* %15, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.4.519, i64 0, i64 0), i32 200, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.7.532, i64 0, i64 0)) #1
  br label %errorlimit.exit

; <label>:18                                      ; preds = %8
  %19 = tail call i8* (%struct.lua_State.115*, i8*, ...) bitcast (i8* (%struct.lua_State.215*, i8*, ...)* @luaO_pushfstring to i8* (%struct.lua_State.115*, i8*, ...)*)(%struct.lua_State.115* %15, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.5.521, i64 0, i64 0), i32 %12, i32 200, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.7.532, i64 0, i64 0)) #1
  br label %errorlimit.exit

errorlimit.exit:                                  ; preds = %16, %18
  %20 = phi i8* [ %17, %16 ], [ %19, %18 ]
  %21 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %2, i64 0, i32 3
  %22 = load %struct.LexState.249*, %struct.LexState.249** %21, align 8, !tbaa !94
  tail call void bitcast (void (%struct.LexState*, i8*, i32)* @luaX_lexerror to void (%struct.LexState.249*, i8*, i32)*)(%struct.LexState.249* %22, i8* %20, i32 0) #1
  %.pre = load %struct.FuncState.248*, %struct.FuncState.248** %1, align 8, !tbaa !224
  br label %23

; <label>:23                                      ; preds = %errorlimit.exit, %0
  %24 = phi %struct.FuncState.248* [ %.pre, %errorlimit.exit ], [ %2, %0 ]
  %25 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %24, i64 0, i32 0
  %26 = load %struct.Proto.120*, %struct.Proto.120** %25, align 8, !tbaa !92
  %27 = getelementptr inbounds %struct.Proto.120, %struct.Proto.120* %26, i64 0, i32 15
  %28 = load i32, i32* %27, align 4, !tbaa !166
  %29 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %24, i64 0, i32 12
  %30 = load i16, i16* %29, align 2, !tbaa !257
  %31 = sext i16 %30 to i32
  %32 = icmp slt i32 %31, %28
  br i1 %32, label %..preheader.i_crit_edge, label %33

..preheader.i_crit_edge:                          ; preds = %23
  %.phi.trans.insert = getelementptr inbounds %struct.Proto.120, %struct.Proto.120* %26, i64 0, i32 7
  %.pre1 = load %struct.LocVar.119*, %struct.LocVar.119** %.phi.trans.insert, align 8, !tbaa !167
  br label %.preheader.i

; <label>:33                                      ; preds = %23
  %34 = getelementptr inbounds %struct.LexState.249, %struct.LexState.249* %ls, i64 0, i32 6
  %35 = load %struct.lua_State.115*, %struct.lua_State.115** %34, align 8, !tbaa !218
  %36 = getelementptr inbounds %struct.Proto.120, %struct.Proto.120* %26, i64 0, i32 7
  %37 = bitcast %struct.LocVar.119** %36 to i8**
  %38 = load i8*, i8** %37, align 8, !tbaa !167
  %39 = tail call i8* bitcast (i8* (%struct.lua_State*, i8*, i32*, i64, i32, i8*)* @luaM_growaux_ to i8* (%struct.lua_State.115*, i8*, i32*, i64, i32, i8*)*)(%struct.lua_State.115* %35, i8* %38, i32* %27, i64 16, i32 32767, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.8.533, i64 0, i64 0)) #1
  store i8* %39, i8** %37, align 8, !tbaa !167
  %.pre.i = load i32, i32* %27, align 4, !tbaa !166
  %40 = bitcast i8* %39 to %struct.LocVar.119*
  br label %.preheader.i

.preheader.i:                                     ; preds = %..preheader.i_crit_edge, %33
  %41 = phi %struct.LocVar.119* [ %40, %33 ], [ %.pre1, %..preheader.i_crit_edge ]
  %42 = phi i32 [ %.pre.i, %33 ], [ %28, %..preheader.i_crit_edge ]
  %43 = icmp slt i32 %28, %42
  br i1 %43, label %.lr.ph.i, label %._crit_edge.i

.lr.ph.i:                                         ; preds = %.preheader.i
  %44 = sext i32 %28 to i64
  %45 = sext i32 %42 to i64
  %46 = sext i32 %42 to i64
  %47 = sext i32 %28 to i64
  %48 = sub nsw i64 %46, %47
  %49 = add nsw i64 %46, -1
  %50 = sub nsw i64 %49, %47
  %xtraiter = and i64 %48, 7
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod, label %.lr.ph.i.split, label %.preheader

.preheader:                                       ; preds = %.lr.ph.i
  br label %51

; <label>:51                                      ; preds = %.preheader, %51
  %indvars.iv.i.prol = phi i64 [ %indvars.iv.next.i.prol, %51 ], [ %44, %.preheader ]
  %prol.iter = phi i64 [ %prol.iter.sub, %51 ], [ %xtraiter, %.preheader ]
  %indvars.iv.next.i.prol = add nsw i64 %indvars.iv.i.prol, 1
  %52 = getelementptr inbounds %struct.LocVar.119, %struct.LocVar.119* %41, i64 %indvars.iv.i.prol, i32 0
  store %union.TString.110* null, %union.TString.110** %52, align 8, !tbaa !168
  %prol.iter.sub = add i64 %prol.iter, -1
  %prol.iter.cmp = icmp eq i64 %prol.iter.sub, 0
  br i1 %prol.iter.cmp, label %.lr.ph.i.split.loopexit, label %51, !llvm.loop !261

.lr.ph.i.split.loopexit:                          ; preds = %51
  %indvars.iv.next.i.prol.lcssa = phi i64 [ %indvars.iv.next.i.prol, %51 ]
  br label %.lr.ph.i.split

.lr.ph.i.split:                                   ; preds = %.lr.ph.i.split.loopexit, %.lr.ph.i
  %indvars.iv.i.unr = phi i64 [ %44, %.lr.ph.i ], [ %indvars.iv.next.i.prol.lcssa, %.lr.ph.i.split.loopexit ]
  %53 = icmp ult i64 %50, 7
  br i1 %53, label %._crit_edge.i.loopexit, label %.lr.ph.i.split.split

.lr.ph.i.split.split:                             ; preds = %.lr.ph.i.split
  br label %54

; <label>:54                                      ; preds = %54, %.lr.ph.i.split.split
  %indvars.iv.i = phi i64 [ %indvars.iv.i.unr, %.lr.ph.i.split.split ], [ %indvars.iv.next.i.7, %54 ]
  %indvars.iv.next.i = add nsw i64 %indvars.iv.i, 1
  %55 = getelementptr inbounds %struct.LocVar.119, %struct.LocVar.119* %41, i64 %indvars.iv.i, i32 0
  store %union.TString.110* null, %union.TString.110** %55, align 8, !tbaa !168
  %indvars.iv.next.i.1 = add nsw i64 %indvars.iv.i, 2
  %56 = getelementptr inbounds %struct.LocVar.119, %struct.LocVar.119* %41, i64 %indvars.iv.next.i, i32 0
  store %union.TString.110* null, %union.TString.110** %56, align 8, !tbaa !168
  %indvars.iv.next.i.2 = add nsw i64 %indvars.iv.i, 3
  %57 = getelementptr inbounds %struct.LocVar.119, %struct.LocVar.119* %41, i64 %indvars.iv.next.i.1, i32 0
  store %union.TString.110* null, %union.TString.110** %57, align 8, !tbaa !168
  %indvars.iv.next.i.3 = add nsw i64 %indvars.iv.i, 4
  %58 = getelementptr inbounds %struct.LocVar.119, %struct.LocVar.119* %41, i64 %indvars.iv.next.i.2, i32 0
  store %union.TString.110* null, %union.TString.110** %58, align 8, !tbaa !168
  %indvars.iv.next.i.4 = add nsw i64 %indvars.iv.i, 5
  %59 = getelementptr inbounds %struct.LocVar.119, %struct.LocVar.119* %41, i64 %indvars.iv.next.i.3, i32 0
  store %union.TString.110* null, %union.TString.110** %59, align 8, !tbaa !168
  %indvars.iv.next.i.5 = add nsw i64 %indvars.iv.i, 6
  %60 = getelementptr inbounds %struct.LocVar.119, %struct.LocVar.119* %41, i64 %indvars.iv.next.i.4, i32 0
  store %union.TString.110* null, %union.TString.110** %60, align 8, !tbaa !168
  %indvars.iv.next.i.6 = add nsw i64 %indvars.iv.i, 7
  %61 = getelementptr inbounds %struct.LocVar.119, %struct.LocVar.119* %41, i64 %indvars.iv.next.i.5, i32 0
  store %union.TString.110* null, %union.TString.110** %61, align 8, !tbaa !168
  %indvars.iv.next.i.7 = add nsw i64 %indvars.iv.i, 8
  %62 = getelementptr inbounds %struct.LocVar.119, %struct.LocVar.119* %41, i64 %indvars.iv.next.i.6, i32 0
  store %union.TString.110* null, %union.TString.110** %62, align 8, !tbaa !168
  %exitcond.7 = icmp eq i64 %indvars.iv.next.i.7, %45
  br i1 %exitcond.7, label %._crit_edge.i.loopexit.unr-lcssa, label %54

._crit_edge.i.loopexit.unr-lcssa:                 ; preds = %54
  br label %._crit_edge.i.loopexit

._crit_edge.i.loopexit:                           ; preds = %.lr.ph.i.split, %._crit_edge.i.loopexit.unr-lcssa
  br label %._crit_edge.i

._crit_edge.i:                                    ; preds = %._crit_edge.i.loopexit, %.preheader.i
  %63 = load i16, i16* %29, align 2, !tbaa !257
  %64 = sext i16 %63 to i64
  %65 = getelementptr inbounds %struct.LocVar.119, %struct.LocVar.119* %41, i64 %64, i32 0
  store %union.TString.110* %name, %union.TString.110** %65, align 8, !tbaa !168
  %66 = bitcast %union.TString.110* %name to %union.GCObject.116*
  %67 = getelementptr inbounds %union.TString.110, %union.TString.110* %name, i64 0, i32 0, i32 2
  %68 = load i8, i8* %67, align 1, !tbaa !33
  %69 = and i8 %68, 3
  %70 = icmp eq i8 %69, 0
  br i1 %70, label %registerlocalvar.exit, label %71

; <label>:71                                      ; preds = %._crit_edge.i
  %72 = getelementptr inbounds %struct.Proto.120, %struct.Proto.120* %26, i64 0, i32 2
  %73 = load i8, i8* %72, align 1, !tbaa !33
  %74 = and i8 %73, 4
  %75 = icmp eq i8 %74, 0
  br i1 %75, label %registerlocalvar.exit, label %76

; <label>:76                                      ; preds = %71
  %77 = bitcast %struct.Proto.120* %26 to %union.GCObject.116*
  %78 = getelementptr inbounds %struct.LexState.249, %struct.LexState.249* %ls, i64 0, i32 6
  %79 = load %struct.lua_State.115*, %struct.lua_State.115** %78, align 8, !tbaa !218
  tail call void bitcast (void (%struct.lua_State*, %union.GCObject*, %union.GCObject*)* @luaC_barrierf to void (%struct.lua_State.115*, %union.GCObject.116*, %union.GCObject.116*)*)(%struct.lua_State.115* %79, %union.GCObject.116* %77, %union.GCObject.116* %66) #1
  %.pre3.i = load i16, i16* %29, align 2, !tbaa !257
  br label %registerlocalvar.exit

registerlocalvar.exit:                            ; preds = %._crit_edge.i, %71, %76
  %80 = phi i16 [ %63, %71 ], [ %63, %._crit_edge.i ], [ %.pre3.i, %76 ]
  %81 = add i16 %80, 1
  store i16 %81, i16* %29, align 2, !tbaa !257
  %82 = load i8, i8* %3, align 1, !tbaa !91
  %83 = zext i8 %82 to i32
  %84 = add nsw i32 %83, %n
  %85 = sext i32 %84 to i64
  %86 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %2, i64 0, i32 15, i64 %85
  store i16 %80, i16* %86, align 2, !tbaa !87
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @forbody(%struct.LexState.249* %ls, i32 %base, i32 %line, i32 %nvars, i32 %isnum) #0 {
adjustlocalvars.exit9:
  %bl = alloca %struct.BlockCnt, align 8
  %0 = bitcast %struct.BlockCnt* %bl to i8*
  call void @llvm.lifetime.start(i64 16, i8* %0) #1
  %1 = getelementptr inbounds %struct.LexState.249, %struct.LexState.249* %ls, i64 0, i32 5
  %2 = load %struct.FuncState.248*, %struct.FuncState.248** %1, align 8, !tbaa !224
  %3 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %2, i64 0, i32 13
  %4 = load i8, i8* %3, align 1, !tbaa !91
  %5 = zext i8 %4 to i32
  %6 = add nuw nsw i32 %5, 3
  %7 = trunc i32 %6 to i8
  store i8 %7, i8* %3, align 1, !tbaa !91
  %8 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %2, i64 0, i32 6
  %9 = load i32, i32* %8, align 4, !tbaa !88
  %10 = and i32 %6, 255
  %11 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %2, i64 0, i32 0
  %12 = load %struct.Proto.120*, %struct.Proto.120** %11, align 8, !tbaa !92
  %13 = getelementptr inbounds %struct.Proto.120, %struct.Proto.120* %12, i64 0, i32 7
  %14 = load %struct.LocVar.119*, %struct.LocVar.119** %13, align 8, !tbaa !167
  %15 = zext i32 %10 to i64
  %16 = add nsw i64 %15, -3
  %17 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %2, i64 0, i32 15, i64 %16
  %18 = load i16, i16* %17, align 2, !tbaa !87
  %19 = zext i16 %18 to i64
  %20 = getelementptr inbounds %struct.LocVar.119, %struct.LocVar.119* %14, i64 %19, i32 1
  store i32 %9, i32* %20, align 4, !tbaa !170
  %21 = add nsw i64 %15, -2
  %22 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %2, i64 0, i32 15, i64 %21
  %23 = load i16, i16* %22, align 2, !tbaa !87
  %24 = zext i16 %23 to i64
  %25 = getelementptr inbounds %struct.LocVar.119, %struct.LocVar.119* %14, i64 %24, i32 1
  store i32 %9, i32* %25, align 4, !tbaa !170
  %26 = add nsw i64 %15, -1
  %27 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %2, i64 0, i32 15, i64 %26
  %28 = load i16, i16* %27, align 2, !tbaa !87
  %29 = zext i16 %28 to i64
  %30 = getelementptr inbounds %struct.LocVar.119, %struct.LocVar.119* %14, i64 %29, i32 1
  store i32 %9, i32* %30, align 4, !tbaa !170
  %31 = getelementptr inbounds %struct.LexState.249, %struct.LexState.249* %ls, i64 0, i32 3, i32 0
  %32 = load i32, i32* %31, align 4, !tbaa !223
  %33 = icmp eq i32 %32, 259
  br i1 %33, label %checknext.exit, label %34

; <label>:34                                      ; preds = %adjustlocalvars.exit9
  %35 = getelementptr inbounds %struct.LexState.249, %struct.LexState.249* %ls, i64 0, i32 6
  %36 = load %struct.lua_State.115*, %struct.lua_State.115** %35, align 8, !tbaa !218
  %37 = tail call i8* bitcast (i8* (%struct.LexState*, i32)* @luaX_token2str to i8* (%struct.LexState.249*, i32)*)(%struct.LexState.249* %ls, i32 259) #1
  %38 = tail call i8* (%struct.lua_State.115*, i8*, ...) bitcast (i8* (%struct.lua_State.215*, i8*, ...)* @luaO_pushfstring to i8* (%struct.lua_State.115*, i8*, ...)*)(%struct.lua_State.115* %36, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.509, i64 0, i64 0), i8* %37) #1
  tail call void bitcast (void (%struct.LexState*, i8*)* @luaX_syntaxerror to void (%struct.LexState.249*, i8*)*)(%struct.LexState.249* %ls, i8* %38) #1
  br label %checknext.exit

checknext.exit:                                   ; preds = %adjustlocalvars.exit9, %34
  tail call void bitcast (void (%struct.LexState*)* @luaX_next to void (%struct.LexState.249*)*)(%struct.LexState.249* %ls) #1
  %39 = icmp ne i32 %isnum, 0
  br i1 %39, label %40, label %42

; <label>:40                                      ; preds = %checknext.exit
  %41 = tail call i32 bitcast (i32 (%struct.FuncState*, i32, i32, i32)* @luaK_codeABx to i32 (%struct.FuncState.248*, i32, i32, i32)*)(%struct.FuncState.248* %2, i32 32, i32 %base, i32 131070) #1
  br label %44

; <label>:42                                      ; preds = %checknext.exit
  %43 = tail call i32 bitcast (i32 (%struct.FuncState*)* @luaK_jump to i32 (%struct.FuncState.248*)*)(%struct.FuncState.248* %2) #1
  br label %44

; <label>:44                                      ; preds = %42, %40
  %45 = phi i32 [ %41, %40 ], [ %43, %42 ]
  %46 = getelementptr inbounds %struct.BlockCnt, %struct.BlockCnt* %bl, i64 0, i32 1
  store i32 -1, i32* %46, align 8, !tbaa !247
  %47 = getelementptr inbounds %struct.BlockCnt, %struct.BlockCnt* %bl, i64 0, i32 4
  store i8 0, i8* %47, align 2, !tbaa !249
  %48 = load i8, i8* %3, align 1, !tbaa !91
  %49 = getelementptr inbounds %struct.BlockCnt, %struct.BlockCnt* %bl, i64 0, i32 2
  store i8 %48, i8* %49, align 4, !tbaa !250
  %50 = getelementptr inbounds %struct.BlockCnt, %struct.BlockCnt* %bl, i64 0, i32 3
  store i8 0, i8* %50, align 1, !tbaa !251
  %51 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %2, i64 0, i32 5
  %52 = bitcast %struct.BlockCnt** %51 to i64*
  %53 = load i64, i64* %52, align 8, !tbaa !246
  %54 = bitcast %struct.BlockCnt* %bl to i64*
  store i64 %53, i64* %54, align 8, !tbaa !252
  store %struct.BlockCnt* %bl, %struct.BlockCnt** %51, align 8, !tbaa !246
  %ls.idx.val = load %struct.FuncState.248*, %struct.FuncState.248** %1, align 8, !tbaa !224
  %55 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %ls.idx.val, i64 0, i32 13
  %56 = load i8, i8* %55, align 1, !tbaa !91
  %57 = zext i8 %56 to i32
  %58 = add nsw i32 %57, %nvars
  %59 = trunc i32 %58 to i8
  store i8 %59, i8* %55, align 1, !tbaa !91
  %60 = icmp eq i32 %nvars, 0
  br i1 %60, label %adjustlocalvars.exit5, label %.lr.ph.i

.lr.ph.i:                                         ; preds = %44
  %61 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %ls.idx.val, i64 0, i32 6
  %62 = load i32, i32* %61, align 4, !tbaa !88
  %63 = and i32 %58, 255
  %64 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %ls.idx.val, i64 0, i32 0
  %65 = load %struct.Proto.120*, %struct.Proto.120** %64, align 8, !tbaa !92
  %66 = getelementptr inbounds %struct.Proto.120, %struct.Proto.120* %65, i64 0, i32 7
  %67 = load %struct.LocVar.119*, %struct.LocVar.119** %66, align 8, !tbaa !167
  %68 = sext i32 %nvars to i64
  %69 = zext i32 %63 to i64
  %xtraiter10 = and i32 %nvars, 1
  %lcmp.mod11 = icmp eq i32 %xtraiter10, 0
  br i1 %lcmp.mod11, label %.lr.ph.i.split, label %70

; <label>:70                                      ; preds = %.lr.ph.i
  %71 = sub nsw i64 %69, %68
  %72 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %ls.idx.val, i64 0, i32 15, i64 %71
  %73 = load i16, i16* %72, align 2, !tbaa !87
  %74 = zext i16 %73 to i64
  %75 = getelementptr inbounds %struct.LocVar.119, %struct.LocVar.119* %67, i64 %74, i32 1
  store i32 %62, i32* %75, align 4, !tbaa !170
  %76 = add nsw i32 %nvars, -1
  %indvars.iv.next.i.4.prol = add nsw i64 %68, -1
  br label %.lr.ph.i.split

.lr.ph.i.split:                                   ; preds = %.lr.ph.i, %70
  %indvars.iv.i.2.unr = phi i64 [ %68, %.lr.ph.i ], [ %indvars.iv.next.i.4.prol, %70 ]
  %.01.i.3.unr = phi i32 [ %nvars, %.lr.ph.i ], [ %76, %70 ]
  %77 = icmp eq i32 %nvars, 1
  br i1 %77, label %adjustlocalvars.exit5.loopexit, label %.lr.ph.i.split.split

.lr.ph.i.split.split:                             ; preds = %.lr.ph.i.split
  br label %78

; <label>:78                                      ; preds = %78, %.lr.ph.i.split.split
  %indvars.iv.i.2 = phi i64 [ %indvars.iv.i.2.unr, %.lr.ph.i.split.split ], [ %indvars.iv.next.i.4.1, %78 ]
  %.01.i.3 = phi i32 [ %.01.i.3.unr, %.lr.ph.i.split.split ], [ %89, %78 ]
  %79 = sub nsw i64 %69, %indvars.iv.i.2
  %80 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %ls.idx.val, i64 0, i32 15, i64 %79
  %81 = load i16, i16* %80, align 2, !tbaa !87
  %82 = zext i16 %81 to i64
  %83 = getelementptr inbounds %struct.LocVar.119, %struct.LocVar.119* %67, i64 %82, i32 1
  store i32 %62, i32* %83, align 4, !tbaa !170
  %indvars.iv.next.i.4 = add nsw i64 %indvars.iv.i.2, -1
  %84 = sub nsw i64 %69, %indvars.iv.next.i.4
  %85 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %ls.idx.val, i64 0, i32 15, i64 %84
  %86 = load i16, i16* %85, align 2, !tbaa !87
  %87 = zext i16 %86 to i64
  %88 = getelementptr inbounds %struct.LocVar.119, %struct.LocVar.119* %67, i64 %87, i32 1
  store i32 %62, i32* %88, align 4, !tbaa !170
  %89 = add nsw i32 %.01.i.3, -2
  %90 = icmp eq i32 %89, 0
  %indvars.iv.next.i.4.1 = add nsw i64 %indvars.iv.i.2, -2
  br i1 %90, label %adjustlocalvars.exit5.loopexit.unr-lcssa, label %78

adjustlocalvars.exit5.loopexit.unr-lcssa:         ; preds = %78
  br label %adjustlocalvars.exit5.loopexit

adjustlocalvars.exit5.loopexit:                   ; preds = %.lr.ph.i.split, %adjustlocalvars.exit5.loopexit.unr-lcssa
  br label %adjustlocalvars.exit5

adjustlocalvars.exit5:                            ; preds = %adjustlocalvars.exit5.loopexit, %44
  call void bitcast (void (%struct.FuncState*, i32)* @luaK_reserveregs to void (%struct.FuncState.248*, i32)*)(%struct.FuncState.248* %2, i32 %nvars) #1
  call fastcc void @block(%struct.LexState.249* %ls)
  %91 = load %struct.BlockCnt*, %struct.BlockCnt** %51, align 8, !tbaa !246
  %92 = bitcast %struct.BlockCnt* %91 to i64*
  %93 = load i64, i64* %92, align 8, !tbaa !252
  store i64 %93, i64* %52, align 8, !tbaa !246
  %94 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %2, i64 0, i32 3
  %95 = load %struct.LexState.249*, %struct.LexState.249** %94, align 8, !tbaa !94
  %96 = getelementptr inbounds %struct.BlockCnt, %struct.BlockCnt* %91, i64 0, i32 2
  %97 = load i8, i8* %96, align 1, !tbaa !250
  %.idx.i = getelementptr %struct.LexState.249, %struct.LexState.249* %95, i64 0, i32 5
  %.idx.val.i = load %struct.FuncState.248*, %struct.FuncState.248** %.idx.i, align 8, !tbaa !224
  %98 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %.idx.val.i, i64 0, i32 13
  %99 = load i8, i8* %98, align 1, !tbaa !91
  %100 = icmp ugt i8 %99, %97
  br i1 %100, label %.lr.ph.i.i, label %removevars.exit.i

.lr.ph.i.i:                                       ; preds = %adjustlocalvars.exit5
  %101 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %.idx.val.i, i64 0, i32 6
  %102 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %.idx.val.i, i64 0, i32 0
  %.pre.i.i = load i32, i32* %101, align 4, !tbaa !88
  %.pre1.i.i = load %struct.Proto.120*, %struct.Proto.120** %102, align 8, !tbaa !92
  %.phi.trans.insert.i.i = getelementptr inbounds %struct.Proto.120, %struct.Proto.120* %.pre1.i.i, i64 0, i32 7
  %.pre2.i.i = load %struct.LocVar.119*, %struct.LocVar.119** %.phi.trans.insert.i.i, align 8, !tbaa !167
  %103 = zext i8 %99 to i64
  %104 = sub i8 %99, %97
  %105 = add i8 %99, -1
  %xtraiter = and i8 %104, 1
  %lcmp.mod = icmp eq i8 %xtraiter, 0
  br i1 %lcmp.mod, label %.lr.ph.i.i.split, label %106

; <label>:106                                     ; preds = %.lr.ph.i.i
  %107 = add i8 %99, -1
  store i8 %107, i8* %98, align 1, !tbaa !91
  %108 = zext i8 %107 to i64
  %109 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %.idx.val.i, i64 0, i32 15, i64 %108
  %110 = load i16, i16* %109, align 2, !tbaa !87
  %111 = zext i16 %110 to i64
  %112 = getelementptr inbounds %struct.LocVar.119, %struct.LocVar.119* %.pre2.i.i, i64 %111, i32 2
  store i32 %.pre.i.i, i32* %112, align 4, !tbaa !171
  %indvars.iv.next.i.7.prol = add nsw i64 %103, -1
  br label %.lr.ph.i.i.split

.lr.ph.i.i.split:                                 ; preds = %.lr.ph.i.i, %106
  %indvars.iv.i.6.unr = phi i64 [ %103, %.lr.ph.i.i ], [ %indvars.iv.next.i.7.prol, %106 ]
  %113 = icmp eq i8 %105, %97
  br i1 %113, label %removevars.exit.i.loopexit, label %.lr.ph.i.i.split.split

.lr.ph.i.i.split.split:                           ; preds = %.lr.ph.i.i.split
  br label %114

; <label>:114                                     ; preds = %114, %.lr.ph.i.i.split.split
  %indvars.iv.i.6 = phi i64 [ %indvars.iv.i.6.unr, %.lr.ph.i.i.split.split ], [ %indvars.iv.next.i.7.1, %114 ]
  %115 = trunc i64 %indvars.iv.i.6 to i8
  %116 = add i8 %115, -1
  store i8 %116, i8* %98, align 1, !tbaa !91
  %117 = zext i8 %116 to i64
  %118 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %.idx.val.i, i64 0, i32 15, i64 %117
  %119 = load i16, i16* %118, align 2, !tbaa !87
  %120 = zext i16 %119 to i64
  %121 = getelementptr inbounds %struct.LocVar.119, %struct.LocVar.119* %.pre2.i.i, i64 %120, i32 2
  store i32 %.pre.i.i, i32* %121, align 4, !tbaa !171
  %indvars.iv.next.i.7 = add i64 %indvars.iv.i.6, 255
  %122 = trunc i64 %indvars.iv.next.i.7 to i8
  %123 = add i8 %122, -1
  store i8 %123, i8* %98, align 1, !tbaa !91
  %124 = zext i8 %123 to i64
  %125 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %.idx.val.i, i64 0, i32 15, i64 %124
  %126 = load i16, i16* %125, align 2, !tbaa !87
  %127 = zext i16 %126 to i64
  %128 = getelementptr inbounds %struct.LocVar.119, %struct.LocVar.119* %.pre2.i.i, i64 %127, i32 2
  store i32 %.pre.i.i, i32* %128, align 4, !tbaa !171
  %129 = icmp ugt i8 %123, %97
  %indvars.iv.next.i.7.1 = add nsw i64 %indvars.iv.i.6, -2
  br i1 %129, label %114, label %removevars.exit.i.loopexit.unr-lcssa

removevars.exit.i.loopexit.unr-lcssa:             ; preds = %114
  br label %removevars.exit.i.loopexit

removevars.exit.i.loopexit:                       ; preds = %.lr.ph.i.i.split, %removevars.exit.i.loopexit.unr-lcssa
  br label %removevars.exit.i

removevars.exit.i:                                ; preds = %removevars.exit.i.loopexit, %adjustlocalvars.exit5
  %130 = getelementptr inbounds %struct.BlockCnt, %struct.BlockCnt* %91, i64 0, i32 3
  %131 = load i8, i8* %130, align 1, !tbaa !251
  %132 = icmp eq i8 %131, 0
  br i1 %132, label %leaveblock.exit, label %133

; <label>:133                                     ; preds = %removevars.exit.i
  %134 = zext i8 %97 to i32
  %135 = call i32 bitcast (i32 (%struct.FuncState*, i32, i32, i32, i32)* @luaK_codeABC to i32 (%struct.FuncState.248*, i32, i32, i32, i32)*)(%struct.FuncState.248* %2, i32 35, i32 %134, i32 0, i32 0) #1
  br label %leaveblock.exit

leaveblock.exit:                                  ; preds = %removevars.exit.i, %133
  %136 = load i8, i8* %3, align 1, !tbaa !91
  %137 = zext i8 %136 to i32
  %138 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %2, i64 0, i32 9
  store i32 %137, i32* %138, align 4, !tbaa !99
  %139 = getelementptr inbounds %struct.BlockCnt, %struct.BlockCnt* %91, i64 0, i32 1
  %140 = load i32, i32* %139, align 4, !tbaa !247
  call void bitcast (void (%struct.FuncState*, i32)* @luaK_patchtohere to void (%struct.FuncState.248*, i32)*)(%struct.FuncState.248* %2, i32 %140) #1
  call void bitcast (void (%struct.FuncState*, i32)* @luaK_patchtohere to void (%struct.FuncState.248*, i32)*)(%struct.FuncState.248* %2, i32 %45) #1
  br i1 %39, label %.thread, label %142

.thread:                                          ; preds = %leaveblock.exit
  %141 = call i32 bitcast (i32 (%struct.FuncState*, i32, i32, i32)* @luaK_codeABx to i32 (%struct.FuncState.248*, i32, i32, i32)*)(%struct.FuncState.248* %2, i32 31, i32 %base, i32 131070) #1
  call void bitcast (void (%struct.FuncState*, i32)* @luaK_fixline to void (%struct.FuncState.248*, i32)*)(%struct.FuncState.248* %2, i32 %line) #1
  br label %145

; <label>:142                                     ; preds = %leaveblock.exit
  %143 = call i32 bitcast (i32 (%struct.FuncState*, i32, i32, i32, i32)* @luaK_codeABC to i32 (%struct.FuncState.248*, i32, i32, i32, i32)*)(%struct.FuncState.248* %2, i32 33, i32 %base, i32 0, i32 %nvars) #1
  call void bitcast (void (%struct.FuncState*, i32)* @luaK_fixline to void (%struct.FuncState.248*, i32)*)(%struct.FuncState.248* %2, i32 %line) #1
  %144 = call i32 bitcast (i32 (%struct.FuncState*)* @luaK_jump to i32 (%struct.FuncState.248*)*)(%struct.FuncState.248* %2) #1
  br label %145

; <label>:145                                     ; preds = %.thread, %142
  %146 = phi i32 [ %144, %142 ], [ %141, %.thread ]
  %147 = add nsw i32 %45, 1
  call void bitcast (void (%struct.FuncState*, i32, i32)* @luaK_patchlist to void (%struct.FuncState.248*, i32, i32)*)(%struct.FuncState.248* %2, i32 %146, i32 %147) #1
  call void @llvm.lifetime.end(i64 16, i8* %0) #1
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @singlevaraux(%struct.FuncState.248* %fs, %union.TString.110* %n, %struct.expdesc* nocapture %var, i32 %base) #0 {
  %1 = icmp eq %struct.FuncState.248* %fs, null
  br i1 %1, label %2, label %8

; <label>:2                                       ; preds = %0
  %3 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %var, i64 0, i32 2
  store i32 -1, i32* %3, align 4, !tbaa !106
  %4 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %var, i64 0, i32 3
  store i32 -1, i32* %4, align 4, !tbaa !107
  %5 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %var, i64 0, i32 0
  store i32 8, i32* %5, align 4, !tbaa !101
  %6 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %var, i64 0, i32 1
  %7 = bitcast %union.SemInfo* %6 to i32*
  store i32 255, i32* %7, align 4, !tbaa !103
  br label %markupval.exit

; <label>:8                                       ; preds = %0
  %9 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %fs, i64 0, i32 13
  %10 = load i8, i8* %9, align 1, !tbaa !91
  %11 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %fs, i64 0, i32 0
  %12 = zext i8 %10 to i64
  br label %13

; <label>:13                                      ; preds = %15, %8
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i, %15 ], [ %12, %8 ]
  %indvars.iv.next.i = add nsw i64 %indvars.iv.i, -1
  %14 = icmp sgt i64 %indvars.iv.i, 0
  br i1 %14, label %15, label %searchvar.exit.thread.loopexit

; <label>:15                                      ; preds = %13
  %16 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %fs, i64 0, i32 15, i64 %indvars.iv.next.i
  %17 = load i16, i16* %16, align 2, !tbaa !87
  %18 = zext i16 %17 to i64
  %19 = load %struct.Proto.120*, %struct.Proto.120** %11, align 8, !tbaa !92
  %20 = getelementptr inbounds %struct.Proto.120, %struct.Proto.120* %19, i64 0, i32 7
  %21 = load %struct.LocVar.119*, %struct.LocVar.119** %20, align 8, !tbaa !167
  %22 = getelementptr inbounds %struct.LocVar.119, %struct.LocVar.119* %21, i64 %18, i32 0
  %23 = load %union.TString.110*, %union.TString.110** %22, align 8, !tbaa !168
  %24 = icmp eq %union.TString.110* %23, %n
  br i1 %24, label %searchvar.exit, label %13

searchvar.exit:                                   ; preds = %15
  %indvars.iv.next.i.lcssa24 = phi i64 [ %indvars.iv.next.i, %15 ]
  %25 = trunc i64 %indvars.iv.next.i.lcssa24 to i32
  %26 = icmp sgt i32 %25, -1
  br i1 %26, label %27, label %searchvar.exit.thread

; <label>:27                                      ; preds = %searchvar.exit
  %28 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %var, i64 0, i32 2
  store i32 -1, i32* %28, align 4, !tbaa !106
  %29 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %var, i64 0, i32 3
  store i32 -1, i32* %29, align 4, !tbaa !107
  %30 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %var, i64 0, i32 0
  store i32 6, i32* %30, align 4, !tbaa !101
  %31 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %var, i64 0, i32 1
  %32 = bitcast %union.SemInfo* %31 to i32*
  store i32 %25, i32* %32, align 4, !tbaa !103
  %33 = icmp eq i32 %base, 0
  br i1 %33, label %34, label %markupval.exit

; <label>:34                                      ; preds = %27
  %35 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %fs, i64 0, i32 5
  %bl.0.3.i = load %struct.BlockCnt*, %struct.BlockCnt** %35, align 8
  %36 = icmp eq %struct.BlockCnt* %bl.0.3.i, null
  br i1 %36, label %markupval.exit, label %.lr.ph.i.4.preheader

.lr.ph.i.4.preheader:                             ; preds = %34
  br label %.lr.ph.i.4

.lr.ph.i.4:                                       ; preds = %.lr.ph.i.4.preheader, %41
  %bl.04.i = phi %struct.BlockCnt* [ %bl.0.i, %41 ], [ %bl.0.3.i, %.lr.ph.i.4.preheader ]
  %37 = getelementptr inbounds %struct.BlockCnt, %struct.BlockCnt* %bl.04.i, i64 0, i32 2
  %38 = load i8, i8* %37, align 1, !tbaa !250
  %39 = zext i8 %38 to i32
  %40 = icmp sgt i32 %39, %25
  br i1 %40, label %41, label %.critedge.i

; <label>:41                                      ; preds = %.lr.ph.i.4
  %42 = getelementptr inbounds %struct.BlockCnt, %struct.BlockCnt* %bl.04.i, i64 0, i32 0
  %bl.0.i = load %struct.BlockCnt*, %struct.BlockCnt** %42, align 8
  %43 = icmp eq %struct.BlockCnt* %bl.0.i, null
  br i1 %43, label %markupval.exit.loopexit, label %.lr.ph.i.4

.critedge.i:                                      ; preds = %.lr.ph.i.4
  %bl.04.i.lcssa = phi %struct.BlockCnt* [ %bl.04.i, %.lr.ph.i.4 ]
  %44 = getelementptr inbounds %struct.BlockCnt, %struct.BlockCnt* %bl.04.i.lcssa, i64 0, i32 3
  store i8 1, i8* %44, align 1, !tbaa !251
  br label %markupval.exit

searchvar.exit.thread.loopexit:                   ; preds = %13
  br label %searchvar.exit.thread

searchvar.exit.thread:                            ; preds = %searchvar.exit.thread.loopexit, %searchvar.exit
  %45 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %fs, i64 0, i32 2
  %46 = load %struct.FuncState.248*, %struct.FuncState.248** %45, align 8, !tbaa !245
  %47 = tail call fastcc i32 @singlevaraux(%struct.FuncState.248* %46, %union.TString.110* %n, %struct.expdesc* %var, i32 0)
  %48 = icmp eq i32 %47, 8
  br i1 %48, label %markupval.exit, label %49

; <label>:49                                      ; preds = %searchvar.exit.thread
  %50 = load %struct.Proto.120*, %struct.Proto.120** %11, align 8, !tbaa !92
  %51 = getelementptr inbounds %struct.Proto.120, %struct.Proto.120* %50, i64 0, i32 10
  %52 = load i32, i32* %51, align 4, !tbaa !65
  %53 = getelementptr inbounds %struct.Proto.120, %struct.Proto.120* %50, i64 0, i32 19
  %54 = load i8, i8* %53, align 1, !tbaa !138
  %55 = zext i8 %54 to i32
  %56 = icmp eq i8 %54, 0
  br i1 %56, label %._crit_edge.9.i, label %.lr.ph8.i

.lr.ph8.i:                                        ; preds = %49
  %57 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %var, i64 0, i32 0
  %58 = load i32, i32* %57, align 4, !tbaa !101
  %59 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %var, i64 0, i32 1
  %60 = bitcast %union.SemInfo* %59 to i32*
  %61 = zext i8 %54 to i64
  br label %62

; <label>:62                                      ; preds = %73, %.lr.ph8.i
  %indvars.iv12.i = phi i64 [ 0, %.lr.ph8.i ], [ %indvars.iv.next13.i, %73 ]
  %63 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %fs, i64 0, i32 14, i64 %indvars.iv12.i, i32 0
  %64 = load i8, i8* %63, align 1, !tbaa !262
  %65 = zext i8 %64 to i32
  %66 = icmp eq i32 %65, %58
  br i1 %66, label %67, label %73

; <label>:67                                      ; preds = %62
  %68 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %fs, i64 0, i32 14, i64 %indvars.iv12.i, i32 1
  %69 = load i8, i8* %68, align 1, !tbaa !264
  %70 = zext i8 %69 to i32
  %71 = load i32, i32* %60, align 4, !tbaa !103
  %72 = icmp eq i32 %70, %71
  br i1 %72, label %.loopexit.i, label %73

; <label>:73                                      ; preds = %67, %62
  %indvars.iv.next13.i = add nuw nsw i64 %indvars.iv12.i, 1
  %74 = icmp slt i64 %indvars.iv.next13.i, %61
  br i1 %74, label %62, label %._crit_edge.9.i.loopexit

._crit_edge.9.i.loopexit:                         ; preds = %73
  br label %._crit_edge.9.i

._crit_edge.9.i:                                  ; preds = %._crit_edge.9.i.loopexit, %49
  %75 = add nuw nsw i32 %55, 1
  %76 = icmp ugt i32 %75, 60
  br i1 %76, label %77, label %90

; <label>:77                                      ; preds = %._crit_edge.9.i
  %78 = getelementptr inbounds %struct.Proto.120, %struct.Proto.120* %50, i64 0, i32 16
  %79 = load i32, i32* %78, align 4, !tbaa !165
  %80 = icmp eq i32 %79, 0
  %81 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %fs, i64 0, i32 4
  %82 = load %struct.lua_State.115*, %struct.lua_State.115** %81, align 8, !tbaa !113
  br i1 %80, label %83, label %85

; <label>:83                                      ; preds = %77
  %84 = tail call i8* (%struct.lua_State.115*, i8*, ...) bitcast (i8* (%struct.lua_State.215*, i8*, ...)* @luaO_pushfstring to i8* (%struct.lua_State.115*, i8*, ...)*)(%struct.lua_State.115* %82, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.4.519, i64 0, i64 0), i32 60, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.13.530, i64 0, i64 0)) #1
  br label %errorlimit.exit.i

; <label>:85                                      ; preds = %77
  %86 = tail call i8* (%struct.lua_State.115*, i8*, ...) bitcast (i8* (%struct.lua_State.215*, i8*, ...)* @luaO_pushfstring to i8* (%struct.lua_State.115*, i8*, ...)*)(%struct.lua_State.115* %82, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.5.521, i64 0, i64 0), i32 %79, i32 60, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.13.530, i64 0, i64 0)) #1
  br label %errorlimit.exit.i

errorlimit.exit.i:                                ; preds = %85, %83
  %87 = phi i8* [ %84, %83 ], [ %86, %85 ]
  %88 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %fs, i64 0, i32 3
  %89 = load %struct.LexState.249*, %struct.LexState.249** %88, align 8, !tbaa !94
  tail call void bitcast (void (%struct.LexState*, i8*, i32)* @luaX_lexerror to void (%struct.LexState.249*, i8*, i32)*)(%struct.LexState.249* %89, i8* %87, i32 0) #1
  %.pre.i = load i8, i8* %53, align 1, !tbaa !138
  %.pre14.i = load i32, i32* %51, align 4, !tbaa !65
  br label %90

; <label>:90                                      ; preds = %errorlimit.exit.i, %._crit_edge.9.i
  %91 = phi i32 [ %.pre14.i, %errorlimit.exit.i ], [ %52, %._crit_edge.9.i ]
  %92 = phi i8 [ %.pre.i, %errorlimit.exit.i ], [ %54, %._crit_edge.9.i ]
  %93 = zext i8 %92 to i32
  %94 = icmp slt i32 %93, %91
  br i1 %94, label %..preheader.i_crit_edge, label %95

..preheader.i_crit_edge:                          ; preds = %90
  %.pre = getelementptr inbounds %struct.Proto.120, %struct.Proto.120* %50, i64 0, i32 8
  br label %.preheader.i

; <label>:95                                      ; preds = %90
  %96 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %fs, i64 0, i32 4
  %97 = load %struct.lua_State.115*, %struct.lua_State.115** %96, align 8, !tbaa !113
  %98 = getelementptr inbounds %struct.Proto.120, %struct.Proto.120* %50, i64 0, i32 8
  %99 = bitcast %union.TString.110*** %98 to i8**
  %100 = load i8*, i8** %99, align 8, !tbaa !68
  %101 = tail call i8* bitcast (i8* (%struct.lua_State*, i8*, i32*, i64, i32, i8*)* @luaM_growaux_ to i8* (%struct.lua_State.115*, i8*, i32*, i64, i32, i8*)*)(%struct.lua_State.115* %97, i8* %100, i32* %51, i64 8, i32 2147483645, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14.531, i64 0, i64 0)) #1
  store i8* %101, i8** %99, align 8, !tbaa !68
  %.pre15.i = load i32, i32* %51, align 4, !tbaa !65
  br label %.preheader.i

.preheader.i:                                     ; preds = %..preheader.i_crit_edge, %95
  %.pre-phi12 = phi %union.TString.110*** [ %.pre, %..preheader.i_crit_edge ], [ %98, %95 ]
  %102 = phi i32 [ %91, %..preheader.i_crit_edge ], [ %.pre15.i, %95 ]
  %103 = icmp slt i32 %52, %102
  br i1 %103, label %.lr.ph.i, label %._crit_edge.i

.lr.ph.i:                                         ; preds = %.preheader.i
  %104 = sext i32 %52 to i64
  %105 = sext i32 %102 to i64
  %106 = sext i32 %102 to i64
  %107 = sext i32 %52 to i64
  %108 = sub nsw i64 %106, %107
  %109 = add nsw i64 %106, -1
  %110 = sub nsw i64 %109, %107
  %xtraiter = and i64 %108, 3
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod, label %.lr.ph.i.split, label %.preheader

.preheader:                                       ; preds = %.lr.ph.i
  br label %111

; <label>:111                                     ; preds = %.preheader, %111
  %indvars.iv.i.1.prol = phi i64 [ %indvars.iv.next.i.2.prol, %111 ], [ %104, %.preheader ]
  %prol.iter = phi i64 [ %prol.iter.sub, %111 ], [ %xtraiter, %.preheader ]
  %indvars.iv.next.i.2.prol = add nsw i64 %indvars.iv.i.1.prol, 1
  %112 = load %union.TString.110**, %union.TString.110*** %.pre-phi12, align 8, !tbaa !68
  %113 = getelementptr inbounds %union.TString.110*, %union.TString.110** %112, i64 %indvars.iv.i.1.prol
  store %union.TString.110* null, %union.TString.110** %113, align 8, !tbaa !25
  %prol.iter.sub = add i64 %prol.iter, -1
  %prol.iter.cmp = icmp eq i64 %prol.iter.sub, 0
  br i1 %prol.iter.cmp, label %.lr.ph.i.split.loopexit, label %111, !llvm.loop !265

.lr.ph.i.split.loopexit:                          ; preds = %111
  %indvars.iv.next.i.2.prol.lcssa = phi i64 [ %indvars.iv.next.i.2.prol, %111 ]
  br label %.lr.ph.i.split

.lr.ph.i.split:                                   ; preds = %.lr.ph.i.split.loopexit, %.lr.ph.i
  %indvars.iv.i.1.unr = phi i64 [ %104, %.lr.ph.i ], [ %indvars.iv.next.i.2.prol.lcssa, %.lr.ph.i.split.loopexit ]
  %114 = icmp ult i64 %110, 3
  br i1 %114, label %._crit_edge.i.loopexit, label %.lr.ph.i.split.split

.lr.ph.i.split.split:                             ; preds = %.lr.ph.i.split
  br label %115

; <label>:115                                     ; preds = %115, %.lr.ph.i.split.split
  %indvars.iv.i.1 = phi i64 [ %indvars.iv.i.1.unr, %.lr.ph.i.split.split ], [ %indvars.iv.next.i.2.3, %115 ]
  %indvars.iv.next.i.2 = add nsw i64 %indvars.iv.i.1, 1
  %116 = load %union.TString.110**, %union.TString.110*** %.pre-phi12, align 8, !tbaa !68
  %117 = getelementptr inbounds %union.TString.110*, %union.TString.110** %116, i64 %indvars.iv.i.1
  store %union.TString.110* null, %union.TString.110** %117, align 8, !tbaa !25
  %indvars.iv.next.i.2.1 = add nsw i64 %indvars.iv.i.1, 2
  %118 = load %union.TString.110**, %union.TString.110*** %.pre-phi12, align 8, !tbaa !68
  %119 = getelementptr inbounds %union.TString.110*, %union.TString.110** %118, i64 %indvars.iv.next.i.2
  store %union.TString.110* null, %union.TString.110** %119, align 8, !tbaa !25
  %indvars.iv.next.i.2.2 = add nsw i64 %indvars.iv.i.1, 3
  %120 = load %union.TString.110**, %union.TString.110*** %.pre-phi12, align 8, !tbaa !68
  %121 = getelementptr inbounds %union.TString.110*, %union.TString.110** %120, i64 %indvars.iv.next.i.2.1
  store %union.TString.110* null, %union.TString.110** %121, align 8, !tbaa !25
  %indvars.iv.next.i.2.3 = add nsw i64 %indvars.iv.i.1, 4
  %122 = load %union.TString.110**, %union.TString.110*** %.pre-phi12, align 8, !tbaa !68
  %123 = getelementptr inbounds %union.TString.110*, %union.TString.110** %122, i64 %indvars.iv.next.i.2.2
  store %union.TString.110* null, %union.TString.110** %123, align 8, !tbaa !25
  %exitcond.3 = icmp eq i64 %indvars.iv.next.i.2.3, %105
  br i1 %exitcond.3, label %._crit_edge.i.loopexit.unr-lcssa, label %115

._crit_edge.i.loopexit.unr-lcssa:                 ; preds = %115
  br label %._crit_edge.i.loopexit

._crit_edge.i.loopexit:                           ; preds = %.lr.ph.i.split, %._crit_edge.i.loopexit.unr-lcssa
  br label %._crit_edge.i

._crit_edge.i:                                    ; preds = %._crit_edge.i.loopexit, %.preheader.i
  %124 = load i8, i8* %53, align 1, !tbaa !138
  %125 = zext i8 %124 to i64
  %126 = load %union.TString.110**, %union.TString.110*** %.pre-phi12, align 8, !tbaa !68
  %127 = getelementptr inbounds %union.TString.110*, %union.TString.110** %126, i64 %125
  store %union.TString.110* %n, %union.TString.110** %127, align 8, !tbaa !25
  %128 = bitcast %union.TString.110* %n to %union.GCObject.116*
  %129 = getelementptr inbounds %union.TString.110, %union.TString.110* %n, i64 0, i32 0, i32 2
  %130 = load i8, i8* %129, align 1, !tbaa !33
  %131 = and i8 %130, 3
  %132 = icmp eq i8 %131, 0
  br i1 %132, label %142, label %133

; <label>:133                                     ; preds = %._crit_edge.i
  %134 = getelementptr inbounds %struct.Proto.120, %struct.Proto.120* %50, i64 0, i32 2
  %135 = load i8, i8* %134, align 1, !tbaa !33
  %136 = and i8 %135, 4
  %137 = icmp eq i8 %136, 0
  br i1 %137, label %142, label %138

; <label>:138                                     ; preds = %133
  %139 = bitcast %struct.Proto.120* %50 to %union.GCObject.116*
  %140 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %fs, i64 0, i32 4
  %141 = load %struct.lua_State.115*, %struct.lua_State.115** %140, align 8, !tbaa !113
  tail call void bitcast (void (%struct.lua_State*, %union.GCObject*, %union.GCObject*)* @luaC_barrierf to void (%struct.lua_State.115*, %union.GCObject.116*, %union.GCObject.116*)*)(%struct.lua_State.115* %141, %union.GCObject.116* %139, %union.GCObject.116* %128) #1
  %.pre16.i = load i8, i8* %53, align 1, !tbaa !138
  br label %142

; <label>:142                                     ; preds = %138, %133, %._crit_edge.i
  %143 = phi i8 [ %124, %133 ], [ %124, %._crit_edge.i ], [ %.pre16.i, %138 ]
  %144 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %var, i64 0, i32 0
  %145 = load i32, i32* %144, align 4, !tbaa !101
  %146 = trunc i32 %145 to i8
  %147 = zext i8 %143 to i64
  %148 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %fs, i64 0, i32 14, i64 %147, i32 0
  store i8 %146, i8* %148, align 1, !tbaa !262
  %149 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %var, i64 0, i32 1
  %150 = bitcast %union.SemInfo* %149 to i32*
  %151 = load i32, i32* %150, align 4, !tbaa !103
  %152 = trunc i32 %151 to i8
  %153 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %fs, i64 0, i32 14, i64 %147, i32 1
  store i8 %152, i8* %153, align 1, !tbaa !264
  %154 = add i8 %143, 1
  store i8 %154, i8* %53, align 1, !tbaa !138
  %155 = zext i8 %143 to i32
  br label %indexupvalue.exit

.loopexit.i:                                      ; preds = %67
  %indvars.iv12.i.lcssa = phi i64 [ %indvars.iv12.i, %67 ]
  %156 = trunc i64 %indvars.iv12.i.lcssa to i32
  br label %indexupvalue.exit

indexupvalue.exit:                                ; preds = %142, %.loopexit.i
  %.pre-phi11 = phi i32* [ %144, %142 ], [ %57, %.loopexit.i ]
  %.pre-phi10 = phi i32* [ %150, %142 ], [ %60, %.loopexit.i ]
  %.0.i.3 = phi i32 [ %155, %142 ], [ %156, %.loopexit.i ]
  store i32 %.0.i.3, i32* %.pre-phi10, align 4, !tbaa !103
  store i32 7, i32* %.pre-phi11, align 4, !tbaa !101
  br label %markupval.exit

markupval.exit.loopexit:                          ; preds = %41
  br label %markupval.exit

markupval.exit:                                   ; preds = %markupval.exit.loopexit, %.critedge.i, %34, %indexupvalue.exit, %27, %searchvar.exit.thread, %2
  %.1 = phi i32 [ 8, %2 ], [ 7, %indexupvalue.exit ], [ 6, %27 ], [ 8, %searchvar.exit.thread ], [ 6, %34 ], [ 6, %.critedge.i ], [ 6, %markupval.exit.loopexit ]
  ret i32 %.1
}

; Function Attrs: nounwind uwtable
define internal fastcc void @field(%struct.LexState.249* %ls, %struct.expdesc* %v) #0 {
  %key = alloca %struct.expdesc, align 8
  %1 = getelementptr inbounds %struct.LexState.249, %struct.LexState.249* %ls, i64 0, i32 5
  %2 = load %struct.FuncState.248*, %struct.FuncState.248** %1, align 8, !tbaa !224
  %3 = bitcast %struct.expdesc* %key to i8*
  call void @llvm.lifetime.start(i64 24, i8* %3) #1
  %4 = tail call i32 bitcast (i32 (%struct.FuncState*, %struct.expdesc*)* @luaK_exp2anyreg to i32 (%struct.FuncState.248*, %struct.expdesc*)*)(%struct.FuncState.248* %2, %struct.expdesc* %v) #1
  tail call void bitcast (void (%struct.LexState*)* @luaX_next to void (%struct.LexState.249*)*)(%struct.LexState.249* %ls) #1
  %5 = getelementptr inbounds %struct.LexState.249, %struct.LexState.249* %ls, i64 0, i32 3, i32 0
  %6 = load i32, i32* %5, align 4, !tbaa !223
  %7 = icmp eq i32 %6, 285
  br i1 %7, label %checkname.exit, label %8

; <label>:8                                       ; preds = %0
  %9 = getelementptr inbounds %struct.LexState.249, %struct.LexState.249* %ls, i64 0, i32 6
  %10 = load %struct.lua_State.115*, %struct.lua_State.115** %9, align 8, !tbaa !218
  %11 = tail call i8* bitcast (i8* (%struct.LexState*, i32)* @luaX_token2str to i8* (%struct.LexState.249*, i32)*)(%struct.LexState.249* %ls, i32 285) #1
  %12 = tail call i8* (%struct.lua_State.115*, i8*, ...) bitcast (i8* (%struct.lua_State.215*, i8*, ...)* @luaO_pushfstring to i8* (%struct.lua_State.115*, i8*, ...)*)(%struct.lua_State.115* %10, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.509, i64 0, i64 0), i8* %11) #1
  tail call void bitcast (void (%struct.LexState*, i8*)* @luaX_syntaxerror to void (%struct.LexState.249*, i8*)*)(%struct.LexState.249* %ls, i8* %12) #1
  br label %checkname.exit

checkname.exit:                                   ; preds = %0, %8
  %13 = getelementptr inbounds %struct.LexState.249, %struct.LexState.249* %ls, i64 0, i32 3, i32 1
  %14 = bitcast %union.SemInfo* %13 to %union.TString.110**
  %15 = load %union.TString.110*, %union.TString.110** %14, align 8, !tbaa !25
  tail call void bitcast (void (%struct.LexState*)* @luaX_next to void (%struct.LexState.249*)*)(%struct.LexState.249* %ls) #1
  %ls.idx.val.i = load %struct.FuncState.248*, %struct.FuncState.248** %1, align 8, !tbaa !224
  %16 = tail call i32 bitcast (i32 (%struct.FuncState*, %union.TString*)* @luaK_stringK to i32 (%struct.FuncState.248*, %union.TString.110*)*)(%struct.FuncState.248* %ls.idx.val.i, %union.TString.110* %15) #1
  %17 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %key, i64 0, i32 2
  store i32 -1, i32* %17, align 8, !tbaa !106
  %18 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %key, i64 0, i32 3
  store i32 -1, i32* %18, align 4, !tbaa !107
  %19 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %key, i64 0, i32 0
  store i32 4, i32* %19, align 8, !tbaa !101
  %20 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %key, i64 0, i32 1
  %21 = bitcast %union.SemInfo* %20 to i32*
  store i32 %16, i32* %21, align 8, !tbaa !103
  call void bitcast (void (%struct.FuncState*, %struct.expdesc*, %struct.expdesc*)* @luaK_indexed to void (%struct.FuncState.248*, %struct.expdesc*, %struct.expdesc*)*)(%struct.FuncState.248* %2, %struct.expdesc* %v, %struct.expdesc* nonnull %key) #1
  call void @llvm.lifetime.end(i64 24, i8* %3) #1
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @body(%struct.LexState.249* %ls, %struct.expdesc* nocapture %e, i32 %needself, i32 %line) #0 {
  %new_fs = alloca %struct.FuncState.248, align 8
  %1 = bitcast %struct.FuncState.248* %new_fs to i8*
  call void @llvm.lifetime.start(i64 600, i8* %1) #1
  call fastcc void @open_func(%struct.LexState.249* %ls, %struct.FuncState.248* nonnull %new_fs)
  %2 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %new_fs, i64 0, i32 0
  %3 = load %struct.Proto.120*, %struct.Proto.120** %2, align 8, !tbaa !92
  %4 = getelementptr inbounds %struct.Proto.120, %struct.Proto.120* %3, i64 0, i32 16
  store i32 %line, i32* %4, align 4, !tbaa !165
  %5 = getelementptr inbounds %struct.LexState.249, %struct.LexState.249* %ls, i64 0, i32 3, i32 0
  %6 = load i32, i32* %5, align 4, !tbaa !223
  %7 = icmp eq i32 %6, 40
  br i1 %7, label %checknext.exit, label %8

; <label>:8                                       ; preds = %0
  %9 = getelementptr inbounds %struct.LexState.249, %struct.LexState.249* %ls, i64 0, i32 6
  %10 = load %struct.lua_State.115*, %struct.lua_State.115** %9, align 8, !tbaa !218
  %11 = call i8* bitcast (i8* (%struct.LexState*, i32)* @luaX_token2str to i8* (%struct.LexState.249*, i32)*)(%struct.LexState.249* %ls, i32 40) #1
  %12 = call i8* (%struct.lua_State.115*, i8*, ...) bitcast (i8* (%struct.lua_State.215*, i8*, ...)* @luaO_pushfstring to i8* (%struct.lua_State.115*, i8*, ...)*)(%struct.lua_State.115* %10, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.509, i64 0, i64 0), i8* %11) #1
  call void bitcast (void (%struct.LexState*, i8*)* @luaX_syntaxerror to void (%struct.LexState.249*, i8*)*)(%struct.LexState.249* %ls, i8* %12) #1
  br label %checknext.exit

checknext.exit:                                   ; preds = %0, %8
  call void bitcast (void (%struct.LexState*)* @luaX_next to void (%struct.LexState.249*)*)(%struct.LexState.249* %ls) #1
  %13 = icmp eq i32 %needself, 0
  br i1 %13, label %checknext.exit.adjustlocalvars.exit_crit_edge, label %adjustlocalvars.exit.loopexit10

checknext.exit.adjustlocalvars.exit_crit_edge:    ; preds = %checknext.exit
  %.phi.trans.insert = getelementptr inbounds %struct.LexState.249, %struct.LexState.249* %ls, i64 0, i32 5
  %.pre = load %struct.FuncState.248*, %struct.FuncState.248** %.phi.trans.insert, align 8, !tbaa !224
  %.phi.trans.insert11 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %.pre, i64 0, i32 0
  %.pre12 = load %struct.Proto.120*, %struct.Proto.120** %.phi.trans.insert11, align 8, !tbaa !92
  br label %adjustlocalvars.exit

adjustlocalvars.exit.loopexit10:                  ; preds = %checknext.exit
  %14 = call %union.TString.110* bitcast (%union.TString* (%struct.LexState*, i8*, i64)* @luaX_newstring to %union.TString.110* (%struct.LexState.249*, i8*, i64)*)(%struct.LexState.249* %ls, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.526, i64 0, i64 0), i64 4) #1
  call fastcc void @new_localvar(%struct.LexState.249* %ls, %union.TString.110* %14, i32 0)
  %ls.idx = getelementptr %struct.LexState.249, %struct.LexState.249* %ls, i64 0, i32 5
  %ls.idx.val = load %struct.FuncState.248*, %struct.FuncState.248** %ls.idx, align 8, !tbaa !224
  %15 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %ls.idx.val, i64 0, i32 13
  %16 = load i8, i8* %15, align 1, !tbaa !91
  %17 = zext i8 %16 to i32
  %18 = add nuw nsw i32 %17, 1
  %19 = trunc i32 %18 to i8
  store i8 %19, i8* %15, align 1, !tbaa !91
  %20 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %ls.idx.val, i64 0, i32 6
  %21 = load i32, i32* %20, align 4, !tbaa !88
  %22 = and i32 %18, 255
  %23 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %ls.idx.val, i64 0, i32 0
  %24 = load %struct.Proto.120*, %struct.Proto.120** %23, align 8, !tbaa !92
  %25 = getelementptr inbounds %struct.Proto.120, %struct.Proto.120* %24, i64 0, i32 7
  %26 = load %struct.LocVar.119*, %struct.LocVar.119** %25, align 8, !tbaa !167
  %27 = zext i32 %22 to i64
  %28 = add nsw i64 %27, -1
  %29 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %ls.idx.val, i64 0, i32 15, i64 %28
  %30 = load i16, i16* %29, align 2, !tbaa !87
  %31 = zext i16 %30 to i64
  %32 = getelementptr inbounds %struct.LocVar.119, %struct.LocVar.119* %26, i64 %31, i32 1
  store i32 %21, i32* %32, align 4, !tbaa !170
  br label %adjustlocalvars.exit

adjustlocalvars.exit:                             ; preds = %checknext.exit.adjustlocalvars.exit_crit_edge, %adjustlocalvars.exit.loopexit10
  %.pre-phi = phi %struct.FuncState.248** [ %.phi.trans.insert, %checknext.exit.adjustlocalvars.exit_crit_edge ], [ %ls.idx, %adjustlocalvars.exit.loopexit10 ]
  %33 = phi %struct.Proto.120* [ %.pre12, %checknext.exit.adjustlocalvars.exit_crit_edge ], [ %24, %adjustlocalvars.exit.loopexit10 ]
  %34 = phi %struct.FuncState.248* [ %.pre, %checknext.exit.adjustlocalvars.exit_crit_edge ], [ %ls.idx.val, %adjustlocalvars.exit.loopexit10 ]
  %35 = getelementptr inbounds %struct.Proto.120, %struct.Proto.120* %33, i64 0, i32 21
  store i8 0, i8* %35, align 1, !tbaa !137
  %36 = load i32, i32* %5, align 4, !tbaa !223
  %37 = icmp eq i32 %36, 41
  br i1 %37, label %.critedge.i, label %.preheader.i.4

.preheader.i.4:                                   ; preds = %adjustlocalvars.exit
  %38 = getelementptr inbounds %struct.LexState.249, %struct.LexState.249* %ls, i64 0, i32 3, i32 1
  %39 = bitcast %union.SemInfo* %38 to %union.TString.110**
  br label %40

thread-pre-split.i:                               ; preds = %49
  call void bitcast (void (%struct.LexState*)* @luaX_next to void (%struct.LexState.249*)*)(%struct.LexState.249* %ls) #1
  %.pr.i = load i32, i32* %5, align 4, !tbaa !223
  br label %40

; <label>:40                                      ; preds = %thread-pre-split.i, %.preheader.i.4
  %41 = phi i32 [ %.pr.i, %thread-pre-split.i ], [ %36, %.preheader.i.4 ]
  %nparams.0.i = phi i32 [ %nparams.1.ph.i, %thread-pre-split.i ], [ 0, %.preheader.i.4 ]
  switch i32 %41, label %46 [
    i32 285, label %str_checkname.exit.i
    i32 279, label %.thread.i
  ]

str_checkname.exit.i:                             ; preds = %40
  %42 = load %union.TString.110*, %union.TString.110** %39, align 8, !tbaa !25
  call void bitcast (void (%struct.LexState*)* @luaX_next to void (%struct.LexState.249*)*)(%struct.LexState.249* %ls) #1
  %43 = add nsw i32 %nparams.0.i, 1
  call fastcc void @new_localvar(%struct.LexState.249* %ls, %union.TString.110* %42, i32 %nparams.0.i) #1
  br label %47

.thread.i:                                        ; preds = %40
  %nparams.0.i.lcssa = phi i32 [ %nparams.0.i, %40 ]
  call void bitcast (void (%struct.LexState*)* @luaX_next to void (%struct.LexState.249*)*)(%struct.LexState.249* %ls) #1
  %44 = call %union.TString.110* bitcast (%union.TString* (%struct.LexState*, i8*, i64)* @luaX_newstring to %union.TString.110* (%struct.LexState.249*, i8*, i64)*)(%struct.LexState.249* %ls, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9.527, i64 0, i64 0), i64 3) #1
  %45 = add nsw i32 %nparams.0.i.lcssa, 1
  call fastcc void @new_localvar(%struct.LexState.249* %ls, %union.TString.110* %44, i32 %nparams.0.i.lcssa) #1
  store i8 7, i8* %35, align 1, !tbaa !137
  br label %.critedge.i

; <label>:46                                      ; preds = %40
  call void bitcast (void (%struct.LexState*, i8*)* @luaX_syntaxerror to void (%struct.LexState.249*, i8*)*)(%struct.LexState.249* %ls, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.10.528, i64 0, i64 0)) #1
  br label %47

; <label>:47                                      ; preds = %46, %str_checkname.exit.i
  %nparams.1.ph.i = phi i32 [ %43, %str_checkname.exit.i ], [ %nparams.0.i, %46 ]
  %.pr2.i = load i8, i8* %35, align 1, !tbaa !137
  %48 = icmp eq i8 %.pr2.i, 0
  br i1 %48, label %49, label %.critedge.loopexit.i

; <label>:49                                      ; preds = %47
  %50 = load i32, i32* %5, align 4, !tbaa !223
  %51 = icmp eq i32 %50, 44
  br i1 %51, label %thread-pre-split.i, label %.critedge.loopexit.i

.critedge.loopexit.i:                             ; preds = %49, %47
  %nparams.1.ph.i.lcssa = phi i32 [ %nparams.1.ph.i, %49 ], [ %nparams.1.ph.i, %47 ]
  %.pr2.i.lcssa = phi i8 [ 0, %49 ], [ %.pr2.i, %47 ]
  %phitmp.i = and i8 %.pr2.i.lcssa, 1
  br label %.critedge.i

.critedge.i:                                      ; preds = %.critedge.loopexit.i, %.thread.i, %adjustlocalvars.exit
  %52 = phi i8 [ 0, %adjustlocalvars.exit ], [ 1, %.thread.i ], [ %phitmp.i, %.critedge.loopexit.i ]
  %nparams.2.i = phi i32 [ 0, %adjustlocalvars.exit ], [ %45, %.thread.i ], [ %nparams.1.ph.i.lcssa, %.critedge.loopexit.i ]
  %ls.idx.val.i = load %struct.FuncState.248*, %struct.FuncState.248** %.pre-phi, align 8, !tbaa !224
  %53 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %ls.idx.val.i, i64 0, i32 13
  %54 = load i8, i8* %53, align 1, !tbaa !91
  %55 = zext i8 %54 to i32
  %56 = add nsw i32 %55, %nparams.2.i
  %57 = trunc i32 %56 to i8
  store i8 %57, i8* %53, align 1, !tbaa !91
  %58 = icmp eq i32 %nparams.2.i, 0
  br i1 %58, label %parlist.exit, label %.lr.ph.i.i

.lr.ph.i.i:                                       ; preds = %.critedge.i
  %59 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %ls.idx.val.i, i64 0, i32 6
  %60 = load i32, i32* %59, align 4, !tbaa !88
  %61 = and i32 %56, 255
  %62 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %ls.idx.val.i, i64 0, i32 0
  %63 = load %struct.Proto.120*, %struct.Proto.120** %62, align 8, !tbaa !92
  %64 = getelementptr inbounds %struct.Proto.120, %struct.Proto.120* %63, i64 0, i32 7
  %65 = load %struct.LocVar.119*, %struct.LocVar.119** %64, align 8, !tbaa !167
  %66 = sext i32 %nparams.2.i to i64
  %67 = zext i32 %61 to i64
  %xtraiter20 = and i32 %nparams.2.i, 1
  %lcmp.mod21 = icmp eq i32 %xtraiter20, 0
  br i1 %lcmp.mod21, label %.lr.ph.i.i.split, label %68

; <label>:68                                      ; preds = %.lr.ph.i.i
  %69 = sub nsw i64 %67, %66
  %70 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %ls.idx.val.i, i64 0, i32 15, i64 %69
  %71 = load i16, i16* %70, align 2, !tbaa !87
  %72 = zext i16 %71 to i64
  %73 = getelementptr inbounds %struct.LocVar.119, %struct.LocVar.119* %65, i64 %72, i32 1
  store i32 %60, i32* %73, align 4, !tbaa !170
  %74 = add nsw i32 %nparams.2.i, -1
  %indvars.iv.next.i.i.prol = add nsw i64 %66, -1
  br label %.lr.ph.i.i.split

.lr.ph.i.i.split:                                 ; preds = %.lr.ph.i.i, %68
  %indvars.iv.i.i.unr = phi i64 [ %66, %.lr.ph.i.i ], [ %indvars.iv.next.i.i.prol, %68 ]
  %.01.i.i.unr = phi i32 [ %nparams.2.i, %.lr.ph.i.i ], [ %74, %68 ]
  %75 = icmp eq i32 %nparams.2.i, 1
  br i1 %75, label %parlist.exit.loopexit, label %.lr.ph.i.i.split.split

.lr.ph.i.i.split.split:                           ; preds = %.lr.ph.i.i.split
  br label %76

; <label>:76                                      ; preds = %76, %.lr.ph.i.i.split.split
  %indvars.iv.i.i = phi i64 [ %indvars.iv.i.i.unr, %.lr.ph.i.i.split.split ], [ %indvars.iv.next.i.i.1, %76 ]
  %.01.i.i = phi i32 [ %.01.i.i.unr, %.lr.ph.i.i.split.split ], [ %87, %76 ]
  %77 = sub nsw i64 %67, %indvars.iv.i.i
  %78 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %ls.idx.val.i, i64 0, i32 15, i64 %77
  %79 = load i16, i16* %78, align 2, !tbaa !87
  %80 = zext i16 %79 to i64
  %81 = getelementptr inbounds %struct.LocVar.119, %struct.LocVar.119* %65, i64 %80, i32 1
  store i32 %60, i32* %81, align 4, !tbaa !170
  %indvars.iv.next.i.i = add nsw i64 %indvars.iv.i.i, -1
  %82 = sub nsw i64 %67, %indvars.iv.next.i.i
  %83 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %ls.idx.val.i, i64 0, i32 15, i64 %82
  %84 = load i16, i16* %83, align 2, !tbaa !87
  %85 = zext i16 %84 to i64
  %86 = getelementptr inbounds %struct.LocVar.119, %struct.LocVar.119* %65, i64 %85, i32 1
  store i32 %60, i32* %86, align 4, !tbaa !170
  %87 = add nsw i32 %.01.i.i, -2
  %88 = icmp eq i32 %87, 0
  %indvars.iv.next.i.i.1 = add nsw i64 %indvars.iv.i.i, -2
  br i1 %88, label %parlist.exit.loopexit.unr-lcssa, label %76

parlist.exit.loopexit.unr-lcssa:                  ; preds = %76
  br label %parlist.exit.loopexit

parlist.exit.loopexit:                            ; preds = %.lr.ph.i.i.split, %parlist.exit.loopexit.unr-lcssa
  br label %parlist.exit

parlist.exit:                                     ; preds = %parlist.exit.loopexit, %.critedge.i
  %89 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %34, i64 0, i32 13
  %90 = load i8, i8* %89, align 1, !tbaa !91
  %91 = sub i8 %90, %52
  %92 = getelementptr inbounds %struct.Proto.120, %struct.Proto.120* %33, i64 0, i32 20
  store i8 %91, i8* %92, align 1, !tbaa !136
  %93 = zext i8 %90 to i32
  call void bitcast (void (%struct.FuncState*, i32)* @luaK_reserveregs to void (%struct.FuncState.248*, i32)*)(%struct.FuncState.248* %34, i32 %93) #1
  %94 = load i32, i32* %5, align 4, !tbaa !223
  %95 = icmp eq i32 %94, 41
  %.pre13 = getelementptr inbounds %struct.LexState.249, %struct.LexState.249* %ls, i64 0, i32 6
  br i1 %95, label %checknext.exit5, label %96

; <label>:96                                      ; preds = %parlist.exit
  %97 = load %struct.lua_State.115*, %struct.lua_State.115** %.pre13, align 8, !tbaa !218
  %98 = call i8* bitcast (i8* (%struct.LexState*, i32)* @luaX_token2str to i8* (%struct.LexState.249*, i32)*)(%struct.LexState.249* %ls, i32 41) #1
  %99 = call i8* (%struct.lua_State.115*, i8*, ...) bitcast (i8* (%struct.lua_State.215*, i8*, ...)* @luaO_pushfstring to i8* (%struct.lua_State.115*, i8*, ...)*)(%struct.lua_State.115* %97, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.509, i64 0, i64 0), i8* %98) #1
  call void bitcast (void (%struct.LexState*, i8*)* @luaX_syntaxerror to void (%struct.LexState.249*, i8*)*)(%struct.LexState.249* %ls, i8* %99) #1
  br label %checknext.exit5

checknext.exit5:                                  ; preds = %parlist.exit, %96
  call void bitcast (void (%struct.LexState*)* @luaX_next to void (%struct.LexState.249*)*)(%struct.LexState.249* %ls) #1
  %100 = load %struct.lua_State.115*, %struct.lua_State.115** %.pre13, align 8, !tbaa !218
  %101 = getelementptr inbounds %struct.lua_State.115, %struct.lua_State.115* %100, i64 0, i32 15
  %102 = load i16, i16* %101, align 2, !tbaa !16
  %103 = add i16 %102, 1
  store i16 %103, i16* %101, align 2, !tbaa !16
  %104 = icmp ugt i16 %103, 200
  br i1 %104, label %105, label %enterlevel.exit.i.preheader.preheader

; <label>:105                                     ; preds = %checknext.exit5
  call void bitcast (void (%struct.LexState*, i8*, i32)* @luaX_lexerror to void (%struct.LexState.249*, i8*, i32)*)(%struct.LexState.249* %ls, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.1.508, i64 0, i64 0), i32 0) #1
  br label %enterlevel.exit.i.preheader.preheader

enterlevel.exit.i.preheader.preheader:            ; preds = %105, %checknext.exit5
  br label %enterlevel.exit.i.preheader

enterlevel.exit.i.preheader:                      ; preds = %enterlevel.exit.i.preheader.preheader, %testnext.exit.i
  %106 = load i32, i32* %5, align 4, !tbaa !223
  switch i32 %106, label %107 [
    i32 260, label %chunk.exit
    i32 261, label %chunk.exit
    i32 262, label %chunk.exit
    i32 276, label %chunk.exit
    i32 287, label %chunk.exit
  ]

; <label>:107                                     ; preds = %enterlevel.exit.i.preheader
  %108 = call fastcc i32 @statement(%struct.LexState.249* %ls) #1
  %109 = load i32, i32* %5, align 4, !tbaa !223
  %110 = icmp eq i32 %109, 59
  br i1 %110, label %111, label %testnext.exit.i

; <label>:111                                     ; preds = %107
  call void bitcast (void (%struct.LexState*)* @luaX_next to void (%struct.LexState.249*)*)(%struct.LexState.249* %ls) #1
  br label %testnext.exit.i

testnext.exit.i:                                  ; preds = %111, %107
  %112 = load %struct.FuncState.248*, %struct.FuncState.248** %.pre-phi, align 8, !tbaa !224
  %113 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %112, i64 0, i32 13
  %114 = load i8, i8* %113, align 1, !tbaa !91
  %115 = zext i8 %114 to i32
  %116 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %112, i64 0, i32 9
  store i32 %115, i32* %116, align 4, !tbaa !99
  %117 = icmp eq i32 %108, 0
  br i1 %117, label %enterlevel.exit.i.preheader, label %chunk.exit

chunk.exit:                                       ; preds = %enterlevel.exit.i.preheader, %enterlevel.exit.i.preheader, %enterlevel.exit.i.preheader, %enterlevel.exit.i.preheader, %enterlevel.exit.i.preheader, %testnext.exit.i
  %118 = load %struct.lua_State.115*, %struct.lua_State.115** %.pre13, align 8, !tbaa !218
  %119 = getelementptr inbounds %struct.lua_State.115, %struct.lua_State.115* %118, i64 0, i32 15
  %120 = load i16, i16* %119, align 2, !tbaa !16
  %121 = add i16 %120, -1
  store i16 %121, i16* %119, align 2, !tbaa !16
  %122 = getelementptr inbounds %struct.LexState.249, %struct.LexState.249* %ls, i64 0, i32 1
  %123 = load i32, i32* %122, align 4, !tbaa !220
  %124 = load %struct.Proto.120*, %struct.Proto.120** %2, align 8, !tbaa !92
  %125 = getelementptr inbounds %struct.Proto.120, %struct.Proto.120* %124, i64 0, i32 17
  store i32 %123, i32* %125, align 4, !tbaa !134
  call fastcc void @check_match(%struct.LexState.249* %ls, i32 262, i32 265, i32 %line)
  call fastcc void @close_func(%struct.LexState.249* %ls)
  %126 = load %struct.FuncState.248*, %struct.FuncState.248** %.pre-phi, align 8, !tbaa !224
  %127 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %126, i64 0, i32 0
  %128 = load %struct.Proto.120*, %struct.Proto.120** %127, align 8, !tbaa !92
  %129 = getelementptr inbounds %struct.Proto.120, %struct.Proto.120* %128, i64 0, i32 14
  %130 = load i32, i32* %129, align 4, !tbaa !139
  %131 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %126, i64 0, i32 11
  %132 = load i32, i32* %131, align 4, !tbaa !256
  %133 = icmp slt i32 %132, %130
  br i1 %133, label %chunk.exit..preheader.i_crit_edge, label %134

chunk.exit..preheader.i_crit_edge:                ; preds = %chunk.exit
  %.pre15 = getelementptr inbounds %struct.Proto.120, %struct.Proto.120* %128, i64 0, i32 5
  br label %.preheader.i

; <label>:134                                     ; preds = %chunk.exit
  %135 = load %struct.lua_State.115*, %struct.lua_State.115** %.pre13, align 8, !tbaa !218
  %136 = getelementptr inbounds %struct.Proto.120, %struct.Proto.120* %128, i64 0, i32 5
  %137 = bitcast %struct.Proto.120*** %136 to i8**
  %138 = load i8*, i8** %137, align 8, !tbaa !140
  %139 = call i8* bitcast (i8* (%struct.lua_State*, i8*, i32*, i64, i32, i8*)* @luaM_growaux_ to i8* (%struct.lua_State.115*, i8*, i32*, i64, i32, i8*)*)(%struct.lua_State.115* %135, i8* %138, i32* %129, i64 8, i32 262143, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.11.529, i64 0, i64 0)) #1
  store i8* %139, i8** %137, align 8, !tbaa !140
  %.pre.i = load i32, i32* %129, align 4, !tbaa !139
  br label %.preheader.i

.preheader.i:                                     ; preds = %chunk.exit..preheader.i_crit_edge, %134
  %.pre-phi16 = phi %struct.Proto.120*** [ %.pre15, %chunk.exit..preheader.i_crit_edge ], [ %136, %134 ]
  %140 = phi i32 [ %130, %chunk.exit..preheader.i_crit_edge ], [ %.pre.i, %134 ]
  %141 = icmp slt i32 %130, %140
  br i1 %141, label %.lr.ph3.i, label %._crit_edge.4.i

.lr.ph3.i:                                        ; preds = %.preheader.i
  %142 = sext i32 %130 to i64
  %143 = sext i32 %140 to i64
  %144 = sext i32 %140 to i64
  %145 = sext i32 %130 to i64
  %146 = sub nsw i64 %144, %145
  %147 = add nsw i64 %144, -1
  %148 = sub nsw i64 %147, %145
  %xtraiter = and i64 %146, 3
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod, label %.lr.ph3.i.split, label %.preheader

.preheader:                                       ; preds = %.lr.ph3.i
  br label %149

; <label>:149                                     ; preds = %.preheader, %149
  %indvars.iv5.i.prol = phi i64 [ %indvars.iv.next6.i.prol, %149 ], [ %142, %.preheader ]
  %prol.iter = phi i64 [ %prol.iter.sub, %149 ], [ %xtraiter, %.preheader ]
  %indvars.iv.next6.i.prol = add nsw i64 %indvars.iv5.i.prol, 1
  %150 = load %struct.Proto.120**, %struct.Proto.120*** %.pre-phi16, align 8, !tbaa !140
  %151 = getelementptr inbounds %struct.Proto.120*, %struct.Proto.120** %150, i64 %indvars.iv5.i.prol
  store %struct.Proto.120* null, %struct.Proto.120** %151, align 8, !tbaa !25
  %prol.iter.sub = add i64 %prol.iter, -1
  %prol.iter.cmp = icmp eq i64 %prol.iter.sub, 0
  br i1 %prol.iter.cmp, label %.lr.ph3.i.split.loopexit, label %149, !llvm.loop !266

.lr.ph3.i.split.loopexit:                         ; preds = %149
  %indvars.iv.next6.i.prol.lcssa = phi i64 [ %indvars.iv.next6.i.prol, %149 ]
  br label %.lr.ph3.i.split

.lr.ph3.i.split:                                  ; preds = %.lr.ph3.i.split.loopexit, %.lr.ph3.i
  %indvars.iv5.i.unr = phi i64 [ %142, %.lr.ph3.i ], [ %indvars.iv.next6.i.prol.lcssa, %.lr.ph3.i.split.loopexit ]
  %152 = icmp ult i64 %148, 3
  br i1 %152, label %._crit_edge.4.i.loopexit, label %.lr.ph3.i.split.split

.lr.ph3.i.split.split:                            ; preds = %.lr.ph3.i.split
  br label %153

; <label>:153                                     ; preds = %153, %.lr.ph3.i.split.split
  %indvars.iv5.i = phi i64 [ %indvars.iv5.i.unr, %.lr.ph3.i.split.split ], [ %indvars.iv.next6.i.3, %153 ]
  %indvars.iv.next6.i = add nsw i64 %indvars.iv5.i, 1
  %154 = load %struct.Proto.120**, %struct.Proto.120*** %.pre-phi16, align 8, !tbaa !140
  %155 = getelementptr inbounds %struct.Proto.120*, %struct.Proto.120** %154, i64 %indvars.iv5.i
  store %struct.Proto.120* null, %struct.Proto.120** %155, align 8, !tbaa !25
  %indvars.iv.next6.i.1 = add nsw i64 %indvars.iv5.i, 2
  %156 = load %struct.Proto.120**, %struct.Proto.120*** %.pre-phi16, align 8, !tbaa !140
  %157 = getelementptr inbounds %struct.Proto.120*, %struct.Proto.120** %156, i64 %indvars.iv.next6.i
  store %struct.Proto.120* null, %struct.Proto.120** %157, align 8, !tbaa !25
  %indvars.iv.next6.i.2 = add nsw i64 %indvars.iv5.i, 3
  %158 = load %struct.Proto.120**, %struct.Proto.120*** %.pre-phi16, align 8, !tbaa !140
  %159 = getelementptr inbounds %struct.Proto.120*, %struct.Proto.120** %158, i64 %indvars.iv.next6.i.1
  store %struct.Proto.120* null, %struct.Proto.120** %159, align 8, !tbaa !25
  %indvars.iv.next6.i.3 = add nsw i64 %indvars.iv5.i, 4
  %160 = load %struct.Proto.120**, %struct.Proto.120*** %.pre-phi16, align 8, !tbaa !140
  %161 = getelementptr inbounds %struct.Proto.120*, %struct.Proto.120** %160, i64 %indvars.iv.next6.i.2
  store %struct.Proto.120* null, %struct.Proto.120** %161, align 8, !tbaa !25
  %exitcond.3 = icmp eq i64 %indvars.iv.next6.i.3, %143
  br i1 %exitcond.3, label %._crit_edge.4.i.loopexit.unr-lcssa, label %153

._crit_edge.4.i.loopexit.unr-lcssa:               ; preds = %153
  br label %._crit_edge.4.i.loopexit

._crit_edge.4.i.loopexit:                         ; preds = %.lr.ph3.i.split, %._crit_edge.4.i.loopexit.unr-lcssa
  br label %._crit_edge.4.i

._crit_edge.4.i:                                  ; preds = %._crit_edge.4.i.loopexit, %.preheader.i
  %162 = bitcast %struct.FuncState.248* %new_fs to i64*
  %163 = load i64, i64* %162, align 8, !tbaa !92
  %164 = load i32, i32* %131, align 4, !tbaa !256
  %165 = add nsw i32 %164, 1
  store i32 %165, i32* %131, align 4, !tbaa !256
  %166 = sext i32 %164 to i64
  %167 = load %struct.Proto.120**, %struct.Proto.120*** %.pre-phi16, align 8, !tbaa !140
  %168 = getelementptr inbounds %struct.Proto.120*, %struct.Proto.120** %167, i64 %166
  %169 = bitcast %struct.Proto.120** %168 to i64*
  store i64 %163, i64* %169, align 8, !tbaa !25
  %170 = bitcast %struct.FuncState.248* %new_fs to %union.GCObject.116**
  %171 = load %union.GCObject.116*, %union.GCObject.116** %170, align 8, !tbaa !92
  %172 = getelementptr inbounds %union.GCObject.116, %union.GCObject.116* %171, i64 0, i32 0, i32 2
  %173 = load i8, i8* %172, align 1, !tbaa !33
  %174 = and i8 %173, 3
  %175 = icmp eq i8 %174, 0
  br i1 %175, label %184, label %176

; <label>:176                                     ; preds = %._crit_edge.4.i
  %177 = getelementptr inbounds %struct.Proto.120, %struct.Proto.120* %128, i64 0, i32 2
  %178 = load i8, i8* %177, align 1, !tbaa !33
  %179 = and i8 %178, 4
  %180 = icmp eq i8 %179, 0
  br i1 %180, label %184, label %181

; <label>:181                                     ; preds = %176
  %182 = bitcast %struct.Proto.120* %128 to %union.GCObject.116*
  %183 = load %struct.lua_State.115*, %struct.lua_State.115** %.pre13, align 8, !tbaa !218
  call void bitcast (void (%struct.lua_State*, %union.GCObject*, %union.GCObject*)* @luaC_barrierf to void (%struct.lua_State.115*, %union.GCObject.116*, %union.GCObject.116*)*)(%struct.lua_State.115* %183, %union.GCObject.116* %182, %union.GCObject.116* %171) #1
  %.pre7.i = load i32, i32* %131, align 4, !tbaa !256
  br label %184

; <label>:184                                     ; preds = %181, %176, %._crit_edge.4.i
  %185 = phi i32 [ %165, %176 ], [ %165, %._crit_edge.4.i ], [ %.pre7.i, %181 ]
  %186 = add nsw i32 %185, -1
  %187 = call i32 bitcast (i32 (%struct.FuncState*, i32, i32, i32)* @luaK_codeABx to i32 (%struct.FuncState.248*, i32, i32, i32)*)(%struct.FuncState.248* %126, i32 36, i32 0, i32 %186) #1
  %188 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %e, i64 0, i32 2
  store i32 -1, i32* %188, align 4, !tbaa !106
  %189 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %e, i64 0, i32 3
  store i32 -1, i32* %189, align 4, !tbaa !107
  %190 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %e, i64 0, i32 0
  store i32 11, i32* %190, align 4, !tbaa !101
  %191 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %e, i64 0, i32 1
  %192 = bitcast %union.SemInfo* %191 to i32*
  store i32 %187, i32* %192, align 4, !tbaa !103
  %193 = load %struct.Proto.120*, %struct.Proto.120** %2, align 8, !tbaa !92
  %194 = getelementptr inbounds %struct.Proto.120, %struct.Proto.120* %193, i64 0, i32 19
  %195 = load i8, i8* %194, align 1, !tbaa !138
  %196 = icmp eq i8 %195, 0
  br i1 %196, label %pushclosure.exit, label %.lr.ph.i.preheader

.lr.ph.i.preheader:                               ; preds = %184
  br label %.lr.ph.i

.lr.ph.i:                                         ; preds = %.lr.ph.i.preheader, %.lr.ph.i
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i, %.lr.ph.i ], [ 0, %.lr.ph.i.preheader ]
  %197 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %new_fs, i64 0, i32 14, i64 %indvars.iv.i, i32 0
  %198 = load i8, i8* %197, align 1, !tbaa !262
  %199 = icmp eq i8 %198, 6
  %200 = select i1 %199, i32 0, i32 4
  %201 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %new_fs, i64 0, i32 14, i64 %indvars.iv.i, i32 1
  %202 = load i8, i8* %201, align 1, !tbaa !264
  %203 = zext i8 %202 to i32
  %204 = call i32 bitcast (i32 (%struct.FuncState*, i32, i32, i32, i32)* @luaK_codeABC to i32 (%struct.FuncState.248*, i32, i32, i32, i32)*)(%struct.FuncState.248* %126, i32 %200, i32 0, i32 %203, i32 0) #1
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %205 = load %struct.Proto.120*, %struct.Proto.120** %2, align 8, !tbaa !92
  %206 = getelementptr inbounds %struct.Proto.120, %struct.Proto.120* %205, i64 0, i32 19
  %207 = load i8, i8* %206, align 1, !tbaa !138
  %208 = zext i8 %207 to i64
  %209 = icmp slt i64 %indvars.iv.next.i, %208
  br i1 %209, label %.lr.ph.i, label %pushclosure.exit.loopexit

pushclosure.exit.loopexit:                        ; preds = %.lr.ph.i
  br label %pushclosure.exit

pushclosure.exit:                                 ; preds = %pushclosure.exit.loopexit, %184
  call void @llvm.lifetime.end(i64 600, i8* %1) #1
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @primaryexp(%struct.LexState.249* %ls, %struct.expdesc* %v) #0 {
  %key = alloca %struct.expdesc, align 8
  %key1 = alloca %struct.expdesc, align 8
  %1 = getelementptr inbounds %struct.LexState.249, %struct.LexState.249* %ls, i64 0, i32 5
  %2 = load %struct.FuncState.248*, %struct.FuncState.248** %1, align 8, !tbaa !224
  %3 = getelementptr inbounds %struct.LexState.249, %struct.LexState.249* %ls, i64 0, i32 3, i32 0
  %4 = load i32, i32* %3, align 4, !tbaa !223
  switch i32 %4, label %20 [
    i32 40, label %5
    i32 285, label %str_checkname.exit
  ]

; <label>:5                                       ; preds = %0
  %6 = getelementptr inbounds %struct.LexState.249, %struct.LexState.249* %ls, i64 0, i32 1
  %7 = load i32, i32* %6, align 4, !tbaa !220
  tail call void bitcast (void (%struct.LexState*)* @luaX_next to void (%struct.LexState.249*)*)(%struct.LexState.249* %ls) #1
  %8 = tail call fastcc i32 @subexpr(%struct.LexState.249* %ls, %struct.expdesc* %v, i32 0) #1
  tail call fastcc void @check_match(%struct.LexState.249* %ls, i32 41, i32 40, i32 %7) #1
  %9 = load %struct.FuncState.248*, %struct.FuncState.248** %1, align 8, !tbaa !224
  tail call void bitcast (void (%struct.FuncState*, %struct.expdesc*)* @luaK_dischargevars to void (%struct.FuncState.248*, %struct.expdesc*)*)(%struct.FuncState.248* %9, %struct.expdesc* %v) #1
  br label %prefixexp.exit.preheader

str_checkname.exit:                               ; preds = %0
  %10 = getelementptr inbounds %struct.LexState.249, %struct.LexState.249* %ls, i64 0, i32 3, i32 1
  %11 = bitcast %union.SemInfo* %10 to %union.TString.110**
  %12 = load %union.TString.110*, %union.TString.110** %11, align 8, !tbaa !25
  tail call void bitcast (void (%struct.LexState*)* @luaX_next to void (%struct.LexState.249*)*)(%struct.LexState.249* %ls) #1
  %13 = load %struct.FuncState.248*, %struct.FuncState.248** %1, align 8, !tbaa !224
  %14 = tail call fastcc i32 @singlevaraux(%struct.FuncState.248* %13, %union.TString.110* %12, %struct.expdesc* %v, i32 1) #1
  %15 = icmp eq i32 %14, 8
  br i1 %15, label %16, label %prefixexp.exit.preheader

; <label>:16                                      ; preds = %str_checkname.exit
  %17 = tail call i32 bitcast (i32 (%struct.FuncState*, %union.TString*)* @luaK_stringK to i32 (%struct.FuncState.248*, %union.TString.110*)*)(%struct.FuncState.248* %13, %union.TString.110* %12) #1
  %18 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %v, i64 0, i32 1
  %19 = bitcast %union.SemInfo* %18 to i32*
  store i32 %17, i32* %19, align 4, !tbaa !103
  br label %prefixexp.exit.preheader

; <label>:20                                      ; preds = %0
  tail call void bitcast (void (%struct.LexState*, i8*)* @luaX_syntaxerror to void (%struct.LexState.249*, i8*)*)(%struct.LexState.249* %ls, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.12.522, i64 0, i64 0)) #1
  br label %prefixexp.exit.preheader

prefixexp.exit.preheader:                         ; preds = %str_checkname.exit, %16, %5, %20
  %21 = bitcast %struct.expdesc* %key to i8*
  %22 = bitcast %struct.expdesc* %key1 to i8*
  %23 = getelementptr inbounds %struct.LexState.249, %struct.LexState.249* %ls, i64 0, i32 3, i32 1
  %24 = bitcast %union.SemInfo* %23 to %union.TString.110**
  %25 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %key1, i64 0, i32 2
  %26 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %key1, i64 0, i32 3
  %27 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %key1, i64 0, i32 0
  %28 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %key1, i64 0, i32 1
  %29 = bitcast %union.SemInfo* %28 to i32*
  %30 = getelementptr inbounds %struct.LexState.249, %struct.LexState.249* %ls, i64 0, i32 6
  br label %prefixexp.exit

prefixexp.exit:                                   ; preds = %prefixexp.exit.backedge, %prefixexp.exit.preheader
  %31 = load i32, i32* %3, align 4, !tbaa !223
  switch i32 %31, label %45 [
    i32 46, label %32
    i32 91, label %33
    i32 58, label %35
    i32 40, label %44
    i32 286, label %44
    i32 123, label %44
  ]

; <label>:32                                      ; preds = %prefixexp.exit
  call fastcc void @field(%struct.LexState.249* %ls, %struct.expdesc* %v)
  br label %prefixexp.exit.backedge

; <label>:33                                      ; preds = %prefixexp.exit
  call void @llvm.lifetime.start(i64 24, i8* %21) #1
  %34 = call i32 bitcast (i32 (%struct.FuncState*, %struct.expdesc*)* @luaK_exp2anyreg to i32 (%struct.FuncState.248*, %struct.expdesc*)*)(%struct.FuncState.248* %2, %struct.expdesc* %v) #1
  call fastcc void @yindex(%struct.LexState.249* %ls, %struct.expdesc* nonnull %key)
  call void bitcast (void (%struct.FuncState*, %struct.expdesc*, %struct.expdesc*)* @luaK_indexed to void (%struct.FuncState.248*, %struct.expdesc*, %struct.expdesc*)*)(%struct.FuncState.248* %2, %struct.expdesc* %v, %struct.expdesc* nonnull %key) #1
  call void @llvm.lifetime.end(i64 24, i8* %21) #1
  br label %prefixexp.exit.backedge

; <label>:35                                      ; preds = %prefixexp.exit
  call void @llvm.lifetime.start(i64 24, i8* %22) #1
  call void bitcast (void (%struct.LexState*)* @luaX_next to void (%struct.LexState.249*)*)(%struct.LexState.249* %ls) #1
  %36 = load i32, i32* %3, align 4, !tbaa !223
  %37 = icmp eq i32 %36, 285
  br i1 %37, label %checkname.exit, label %38

; <label>:38                                      ; preds = %35
  %39 = load %struct.lua_State.115*, %struct.lua_State.115** %30, align 8, !tbaa !218
  %40 = call i8* bitcast (i8* (%struct.LexState*, i32)* @luaX_token2str to i8* (%struct.LexState.249*, i32)*)(%struct.LexState.249* %ls, i32 285) #1
  %41 = call i8* (%struct.lua_State.115*, i8*, ...) bitcast (i8* (%struct.lua_State.215*, i8*, ...)* @luaO_pushfstring to i8* (%struct.lua_State.115*, i8*, ...)*)(%struct.lua_State.115* %39, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.509, i64 0, i64 0), i8* %40) #1
  call void bitcast (void (%struct.LexState*, i8*)* @luaX_syntaxerror to void (%struct.LexState.249*, i8*)*)(%struct.LexState.249* %ls, i8* %41) #1
  br label %checkname.exit

checkname.exit:                                   ; preds = %35, %38
  %42 = load %union.TString.110*, %union.TString.110** %24, align 8, !tbaa !25
  call void bitcast (void (%struct.LexState*)* @luaX_next to void (%struct.LexState.249*)*)(%struct.LexState.249* %ls) #1
  %ls.idx.val.i = load %struct.FuncState.248*, %struct.FuncState.248** %1, align 8, !tbaa !224
  %43 = call i32 bitcast (i32 (%struct.FuncState*, %union.TString*)* @luaK_stringK to i32 (%struct.FuncState.248*, %union.TString.110*)*)(%struct.FuncState.248* %ls.idx.val.i, %union.TString.110* %42) #1
  store i32 -1, i32* %25, align 8, !tbaa !106
  store i32 -1, i32* %26, align 4, !tbaa !107
  store i32 4, i32* %27, align 8, !tbaa !101
  store i32 %43, i32* %29, align 8, !tbaa !103
  call void bitcast (void (%struct.FuncState*, %struct.expdesc*, %struct.expdesc*)* @luaK_self to void (%struct.FuncState.248*, %struct.expdesc*, %struct.expdesc*)*)(%struct.FuncState.248* %2, %struct.expdesc* %v, %struct.expdesc* nonnull %key1) #1
  call fastcc void @funcargs(%struct.LexState.249* %ls, %struct.expdesc* %v)
  call void @llvm.lifetime.end(i64 24, i8* %22) #1
  br label %prefixexp.exit.backedge

; <label>:44                                      ; preds = %prefixexp.exit, %prefixexp.exit, %prefixexp.exit
  call void bitcast (void (%struct.FuncState*, %struct.expdesc*)* @luaK_exp2nextreg to void (%struct.FuncState.248*, %struct.expdesc*)*)(%struct.FuncState.248* %2, %struct.expdesc* %v) #1
  call fastcc void @funcargs(%struct.LexState.249* %ls, %struct.expdesc* %v)
  br label %prefixexp.exit.backedge

prefixexp.exit.backedge:                          ; preds = %44, %checkname.exit, %33, %32
  br label %prefixexp.exit

; <label>:45                                      ; preds = %prefixexp.exit
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @assignment(%struct.LexState.249* %ls, %struct.LHS_assign* %lh, i32 %nvars) #0 {
  %e = alloca %struct.expdesc, align 8
  %nv = alloca %struct.LHS_assign, align 8
  %1 = bitcast %struct.expdesc* %e to i8*
  call void @llvm.lifetime.start(i64 24, i8* %1) #1
  %2 = getelementptr inbounds %struct.LHS_assign, %struct.LHS_assign* %lh, i64 0, i32 1
  %3 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %2, i64 0, i32 0
  %4 = load i32, i32* %3, align 4, !tbaa !253
  %.off = add i32 %4, -6
  %5 = icmp ult i32 %.off, 4
  br i1 %5, label %7, label %6

; <label>:6                                       ; preds = %0
  tail call void bitcast (void (%struct.LexState*, i8*)* @luaX_syntaxerror to void (%struct.LexState.249*, i8*)*)(%struct.LexState.249* %ls, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.26.518, i64 0, i64 0)) #1
  br label %7

; <label>:7                                       ; preds = %0, %6
  %8 = getelementptr inbounds %struct.LexState.249, %struct.LexState.249* %ls, i64 0, i32 3, i32 0
  %9 = load i32, i32* %8, align 4, !tbaa !223
  switch i32 %9, label %74 [
    i32 44, label %10
    i32 61, label %checknext.exit
  ]

; <label>:10                                      ; preds = %7
  tail call void bitcast (void (%struct.LexState*)* @luaX_next to void (%struct.LexState.249*)*)(%struct.LexState.249* %ls) #1
  %11 = bitcast %struct.LHS_assign* %nv to i8*
  call void @llvm.lifetime.start(i64 32, i8* %11) #1
  %12 = getelementptr inbounds %struct.LHS_assign, %struct.LHS_assign* %nv, i64 0, i32 0
  store %struct.LHS_assign* %lh, %struct.LHS_assign** %12, align 8, !tbaa !255
  %13 = getelementptr inbounds %struct.LHS_assign, %struct.LHS_assign* %nv, i64 0, i32 1
  call fastcc void @primaryexp(%struct.LexState.249* %ls, %struct.expdesc* %13)
  %14 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %13, i64 0, i32 0
  %15 = load i32, i32* %14, align 8, !tbaa !253
  %16 = icmp eq i32 %15, 6
  br i1 %16, label %17, label %check_conflict.exit

; <label>:17                                      ; preds = %10
  %ls.idx2 = getelementptr %struct.LexState.249, %struct.LexState.249* %ls, i64 0, i32 5
  %ls.idx2.val = load %struct.FuncState.248*, %struct.FuncState.248** %ls.idx2, align 8, !tbaa !224
  %18 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %ls.idx2.val, i64 0, i32 9
  %19 = load i32, i32* %18, align 4, !tbaa !99
  %20 = icmp eq %struct.LHS_assign* %lh, null
  br i1 %20, label %check_conflict.exit, label %.lr.ph.i

.lr.ph.i:                                         ; preds = %17
  %21 = getelementptr inbounds %struct.LHS_assign, %struct.LHS_assign* %nv, i64 0, i32 1, i32 1
  %22 = bitcast %union.SemInfo* %21 to i32*
  br label %23

; <label>:23                                      ; preds = %41, %.lr.ph.i
  %conflict.02.i = phi i32 [ 0, %.lr.ph.i ], [ %conflict.2.i, %41 ]
  %.01.i = phi %struct.LHS_assign* [ %lh, %.lr.ph.i ], [ %43, %41 ]
  %24 = getelementptr inbounds %struct.LHS_assign, %struct.LHS_assign* %.01.i, i64 0, i32 1, i32 0
  %25 = load i32, i32* %24, align 4, !tbaa !253
  %26 = icmp eq i32 %25, 9
  br i1 %26, label %27, label %41

; <label>:27                                      ; preds = %23
  %28 = getelementptr inbounds %struct.LHS_assign, %struct.LHS_assign* %.01.i, i64 0, i32 1, i32 1
  %29 = bitcast %union.SemInfo* %28 to %struct.anon.4*
  %30 = bitcast %union.SemInfo* %28 to i32*
  %31 = load i32, i32* %30, align 4, !tbaa !103
  %32 = load i32, i32* %22, align 8, !tbaa !103
  %33 = icmp eq i32 %31, %32
  br i1 %33, label %34, label %35

; <label>:34                                      ; preds = %27
  store i32 %19, i32* %30, align 4, !tbaa !103
  %.pre.i = load i32, i32* %22, align 8, !tbaa !103
  br label %35

; <label>:35                                      ; preds = %34, %27
  %36 = phi i32 [ %.pre.i, %34 ], [ %32, %27 ]
  %conflict.1.i = phi i32 [ 1, %34 ], [ %conflict.02.i, %27 ]
  %37 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %29, i64 0, i32 1
  %38 = load i32, i32* %37, align 4, !tbaa !105
  %39 = icmp eq i32 %38, %36
  br i1 %39, label %40, label %41

; <label>:40                                      ; preds = %35
  store i32 %19, i32* %37, align 4, !tbaa !105
  br label %41

; <label>:41                                      ; preds = %40, %35, %23
  %conflict.2.i = phi i32 [ 1, %40 ], [ %conflict.1.i, %35 ], [ %conflict.02.i, %23 ]
  %42 = getelementptr inbounds %struct.LHS_assign, %struct.LHS_assign* %.01.i, i64 0, i32 0
  %43 = load %struct.LHS_assign*, %struct.LHS_assign** %42, align 8, !tbaa !255
  %44 = icmp eq %struct.LHS_assign* %43, null
  br i1 %44, label %._crit_edge.i, label %23

._crit_edge.i:                                    ; preds = %41
  %conflict.2.i.lcssa = phi i32 [ %conflict.2.i, %41 ]
  %45 = icmp eq i32 %conflict.2.i.lcssa, 0
  br i1 %45, label %check_conflict.exit, label %46

; <label>:46                                      ; preds = %._crit_edge.i
  %47 = load i32, i32* %22, align 8, !tbaa !103
  %48 = call i32 bitcast (i32 (%struct.FuncState*, i32, i32, i32, i32)* @luaK_codeABC to i32 (%struct.FuncState.248*, i32, i32, i32, i32)*)(%struct.FuncState.248* %ls.idx2.val, i32 0, i32 %19, i32 %47, i32 0) #1
  call void bitcast (void (%struct.FuncState*, i32)* @luaK_reserveregs to void (%struct.FuncState.248*, i32)*)(%struct.FuncState.248* %ls.idx2.val, i32 1) #1
  br label %check_conflict.exit

check_conflict.exit:                              ; preds = %46, %._crit_edge.i, %17, %10
  %49 = getelementptr inbounds %struct.LexState.249, %struct.LexState.249* %ls, i64 0, i32 6
  %50 = load %struct.lua_State.115*, %struct.lua_State.115** %49, align 8, !tbaa !218
  %51 = getelementptr inbounds %struct.lua_State.115, %struct.lua_State.115* %50, i64 0, i32 15
  %52 = load i16, i16* %51, align 2, !tbaa !16
  %53 = zext i16 %52 to i32
  %54 = sub nsw i32 200, %53
  %55 = icmp slt i32 %54, %nvars
  %56 = getelementptr inbounds %struct.LexState.249, %struct.LexState.249* %ls, i64 0, i32 5
  br i1 %55, label %57, label %check_conflict.exit._crit_edge

; <label>:57                                      ; preds = %check_conflict.exit
  %58 = load %struct.FuncState.248*, %struct.FuncState.248** %56, align 8, !tbaa !224
  %59 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %58, i64 0, i32 0
  %60 = load %struct.Proto.120*, %struct.Proto.120** %59, align 8, !tbaa !92
  %61 = getelementptr inbounds %struct.Proto.120, %struct.Proto.120* %60, i64 0, i32 16
  %62 = load i32, i32* %61, align 4, !tbaa !165
  %63 = icmp eq i32 %62, 0
  %64 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %58, i64 0, i32 4
  %65 = load %struct.lua_State.115*, %struct.lua_State.115** %64, align 8, !tbaa !113
  br i1 %63, label %66, label %68

; <label>:66                                      ; preds = %57
  %67 = call i8* (%struct.lua_State.115*, i8*, ...) bitcast (i8* (%struct.lua_State.215*, i8*, ...)* @luaO_pushfstring to i8* (%struct.lua_State.115*, i8*, ...)*)(%struct.lua_State.115* %65, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.4.519, i64 0, i64 0), i32 %54, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.27.520, i64 0, i64 0)) #1
  br label %errorlimit.exit

; <label>:68                                      ; preds = %57
  %69 = call i8* (%struct.lua_State.115*, i8*, ...) bitcast (i8* (%struct.lua_State.215*, i8*, ...)* @luaO_pushfstring to i8* (%struct.lua_State.115*, i8*, ...)*)(%struct.lua_State.115* %65, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.5.521, i64 0, i64 0), i32 %62, i32 %54, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.27.520, i64 0, i64 0)) #1
  br label %errorlimit.exit

errorlimit.exit:                                  ; preds = %66, %68
  %70 = phi i8* [ %67, %66 ], [ %69, %68 ]
  %71 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %58, i64 0, i32 3
  %72 = load %struct.LexState.249*, %struct.LexState.249** %71, align 8, !tbaa !94
  call void bitcast (void (%struct.LexState*, i8*, i32)* @luaX_lexerror to void (%struct.LexState.249*, i8*, i32)*)(%struct.LexState.249* %72, i8* %70, i32 0) #1
  br label %check_conflict.exit._crit_edge

check_conflict.exit._crit_edge:                   ; preds = %check_conflict.exit, %errorlimit.exit
  %73 = add nsw i32 %nvars, 1
  call fastcc void @assignment(%struct.LexState.249* %ls, %struct.LHS_assign* nonnull %nv, i32 %73)
  call void @llvm.lifetime.end(i64 32, i8* %11) #1
  %.pre4 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %e, i64 0, i32 0
  br label %113

; <label>:74                                      ; preds = %7
  %75 = getelementptr inbounds %struct.LexState.249, %struct.LexState.249* %ls, i64 0, i32 6
  %76 = load %struct.lua_State.115*, %struct.lua_State.115** %75, align 8, !tbaa !218
  %77 = tail call i8* bitcast (i8* (%struct.LexState*, i32)* @luaX_token2str to i8* (%struct.LexState.249*, i32)*)(%struct.LexState.249* %ls, i32 61) #1
  %78 = tail call i8* (%struct.lua_State.115*, i8*, ...) bitcast (i8* (%struct.lua_State.215*, i8*, ...)* @luaO_pushfstring to i8* (%struct.lua_State.115*, i8*, ...)*)(%struct.lua_State.115* %76, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.509, i64 0, i64 0), i8* %77) #1
  tail call void bitcast (void (%struct.LexState*, i8*)* @luaX_syntaxerror to void (%struct.LexState.249*, i8*)*)(%struct.LexState.249* %ls, i8* %78) #1
  br label %checknext.exit

checknext.exit:                                   ; preds = %7, %74
  tail call void bitcast (void (%struct.LexState*)* @luaX_next to void (%struct.LexState.249*)*)(%struct.LexState.249* %ls) #1
  %79 = call fastcc i32 @subexpr(%struct.LexState.249* %ls, %struct.expdesc* nonnull %e, i32 0) #1
  %80 = load i32, i32* %8, align 4, !tbaa !223
  %81 = icmp eq i32 %80, 44
  %82 = getelementptr %struct.LexState.249, %struct.LexState.249* %ls, i64 0, i32 5
  br i1 %81, label %.lr.ph.preheader, label %explist1.exit

.lr.ph.preheader:                                 ; preds = %checknext.exit
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %.lr.ph
  %n.0.i3 = phi i32 [ %85, %.lr.ph ], [ 1, %.lr.ph.preheader ]
  call void bitcast (void (%struct.LexState*)* @luaX_next to void (%struct.LexState.249*)*)(%struct.LexState.249* %ls) #1
  %83 = load %struct.FuncState.248*, %struct.FuncState.248** %82, align 8, !tbaa !224
  call void bitcast (void (%struct.FuncState*, %struct.expdesc*)* @luaK_exp2nextreg to void (%struct.FuncState.248*, %struct.expdesc*)*)(%struct.FuncState.248* %83, %struct.expdesc* nonnull %e) #1
  %84 = call fastcc i32 @subexpr(%struct.LexState.249* %ls, %struct.expdesc* nonnull %e, i32 0) #1
  %85 = add nuw nsw i32 %n.0.i3, 1
  %86 = load i32, i32* %8, align 4, !tbaa !223
  %87 = icmp eq i32 %86, 44
  br i1 %87, label %.lr.ph, label %explist1.exit.loopexit

explist1.exit.loopexit:                           ; preds = %.lr.ph
  %.lcssa = phi i32 [ %85, %.lr.ph ]
  br label %explist1.exit

explist1.exit:                                    ; preds = %explist1.exit.loopexit, %checknext.exit
  %n.0.i.lcssa = phi i32 [ 1, %checknext.exit ], [ %.lcssa, %explist1.exit.loopexit ]
  %88 = icmp eq i32 %n.0.i.lcssa, %nvars
  %89 = load %struct.FuncState.248*, %struct.FuncState.248** %82, align 8, !tbaa !224
  br i1 %88, label %.critedge, label %90

; <label>:90                                      ; preds = %explist1.exit
  %91 = sub i32 %nvars, %n.0.i.lcssa
  %92 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %e, i64 0, i32 0
  %93 = load i32, i32* %92, align 8, !tbaa !101
  switch i32 %93, label %100 [
    i32 13, label %94
    i32 14, label %94
    i32 0, label %101
  ]

; <label>:94                                      ; preds = %90, %90
  %95 = add nsw i32 %91, 1
  %96 = icmp slt i32 %95, 0
  %..i = select i1 %96, i32 0, i32 %95
  call void bitcast (void (%struct.FuncState*, %struct.expdesc*, i32)* @luaK_setreturns to void (%struct.FuncState.248*, %struct.expdesc*, i32)*)(%struct.FuncState.248* %89, %struct.expdesc* nonnull %e, i32 %..i) #1
  %97 = icmp sgt i32 %..i, 1
  br i1 %97, label %98, label %adjust_assign.exit

; <label>:98                                      ; preds = %94
  %99 = add nsw i32 %..i, -1
  call void bitcast (void (%struct.FuncState*, i32)* @luaK_reserveregs to void (%struct.FuncState.248*, i32)*)(%struct.FuncState.248* %89, i32 %99) #1
  br label %adjust_assign.exit

; <label>:100                                     ; preds = %90
  call void bitcast (void (%struct.FuncState*, %struct.expdesc*)* @luaK_exp2nextreg to void (%struct.FuncState.248*, %struct.expdesc*)*)(%struct.FuncState.248* %89, %struct.expdesc* nonnull %e) #1
  br label %101

; <label>:101                                     ; preds = %100, %90
  %102 = icmp sgt i32 %91, 0
  br i1 %102, label %103, label %adjust_assign.exit

; <label>:103                                     ; preds = %101
  %104 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %89, i64 0, i32 9
  %105 = load i32, i32* %104, align 4, !tbaa !99
  call void bitcast (void (%struct.FuncState*, i32)* @luaK_reserveregs to void (%struct.FuncState.248*, i32)*)(%struct.FuncState.248* %89, i32 %91) #1
  call void bitcast (void (%struct.FuncState*, i32, i32)* @luaK_nil to void (%struct.FuncState.248*, i32, i32)*)(%struct.FuncState.248* %89, i32 %105, i32 %91) #1
  br label %adjust_assign.exit

adjust_assign.exit:                               ; preds = %94, %98, %101, %103
  %106 = icmp sgt i32 %n.0.i.lcssa, %nvars
  br i1 %106, label %107, label %113

; <label>:107                                     ; preds = %adjust_assign.exit
  %108 = load %struct.FuncState.248*, %struct.FuncState.248** %82, align 8, !tbaa !224
  %109 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %108, i64 0, i32 9
  %110 = load i32, i32* %109, align 4, !tbaa !99
  %111 = add i32 %91, %110
  store i32 %111, i32* %109, align 4, !tbaa !99
  br label %113

.critedge:                                        ; preds = %explist1.exit
  call void bitcast (void (%struct.FuncState*, %struct.expdesc*)* @luaK_setoneret to void (%struct.FuncState.248*, %struct.expdesc*)*)(%struct.FuncState.248* %89, %struct.expdesc* nonnull %e) #1
  %112 = load %struct.FuncState.248*, %struct.FuncState.248** %82, align 8, !tbaa !224
  call void bitcast (void (%struct.FuncState*, %struct.expdesc*, %struct.expdesc*)* @luaK_storevar to void (%struct.FuncState.248*, %struct.expdesc*, %struct.expdesc*)*)(%struct.FuncState.248* %112, %struct.expdesc* %2, %struct.expdesc* nonnull %e) #1
  br label %122

; <label>:113                                     ; preds = %adjust_assign.exit, %107, %check_conflict.exit._crit_edge
  %.pre-phi5 = phi i32* [ %92, %adjust_assign.exit ], [ %92, %107 ], [ %.pre4, %check_conflict.exit._crit_edge ]
  %.pre-phi = phi %struct.FuncState.248** [ %82, %adjust_assign.exit ], [ %82, %107 ], [ %56, %check_conflict.exit._crit_edge ]
  %114 = load %struct.FuncState.248*, %struct.FuncState.248** %.pre-phi, align 8, !tbaa !224
  %115 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %114, i64 0, i32 9
  %116 = load i32, i32* %115, align 4, !tbaa !99
  %117 = add nsw i32 %116, -1
  %118 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %e, i64 0, i32 2
  store i32 -1, i32* %118, align 8, !tbaa !106
  %119 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %e, i64 0, i32 3
  store i32 -1, i32* %119, align 4, !tbaa !107
  store i32 12, i32* %.pre-phi5, align 8, !tbaa !101
  %120 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %e, i64 0, i32 1
  %121 = bitcast %union.SemInfo* %120 to i32*
  store i32 %117, i32* %121, align 8, !tbaa !103
  call void bitcast (void (%struct.FuncState*, %struct.expdesc*, %struct.expdesc*)* @luaK_storevar to void (%struct.FuncState.248*, %struct.expdesc*, %struct.expdesc*)*)(%struct.FuncState.248* %114, %struct.expdesc* %2, %struct.expdesc* nonnull %e) #1
  br label %122

; <label>:122                                     ; preds = %.critedge, %113
  call void @llvm.lifetime.end(i64 24, i8* %1) #1
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @yindex(%struct.LexState.249* %ls, %struct.expdesc* %v) #0 {
  tail call void bitcast (void (%struct.LexState*)* @luaX_next to void (%struct.LexState.249*)*)(%struct.LexState.249* %ls) #1
  %1 = tail call fastcc i32 @subexpr(%struct.LexState.249* %ls, %struct.expdesc* %v, i32 0) #1
  %2 = getelementptr inbounds %struct.LexState.249, %struct.LexState.249* %ls, i64 0, i32 5
  %3 = load %struct.FuncState.248*, %struct.FuncState.248** %2, align 8, !tbaa !224
  tail call void bitcast (void (%struct.FuncState*, %struct.expdesc*)* @luaK_exp2val to void (%struct.FuncState.248*, %struct.expdesc*)*)(%struct.FuncState.248* %3, %struct.expdesc* %v) #1
  %4 = getelementptr inbounds %struct.LexState.249, %struct.LexState.249* %ls, i64 0, i32 3, i32 0
  %5 = load i32, i32* %4, align 4, !tbaa !223
  %6 = icmp eq i32 %5, 93
  br i1 %6, label %checknext.exit, label %7

; <label>:7                                       ; preds = %0
  %8 = getelementptr inbounds %struct.LexState.249, %struct.LexState.249* %ls, i64 0, i32 6
  %9 = load %struct.lua_State.115*, %struct.lua_State.115** %8, align 8, !tbaa !218
  %10 = tail call i8* bitcast (i8* (%struct.LexState*, i32)* @luaX_token2str to i8* (%struct.LexState.249*, i32)*)(%struct.LexState.249* %ls, i32 93) #1
  %11 = tail call i8* (%struct.lua_State.115*, i8*, ...) bitcast (i8* (%struct.lua_State.215*, i8*, ...)* @luaO_pushfstring to i8* (%struct.lua_State.115*, i8*, ...)*)(%struct.lua_State.115* %9, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.509, i64 0, i64 0), i8* %10) #1
  tail call void bitcast (void (%struct.LexState*, i8*)* @luaX_syntaxerror to void (%struct.LexState.249*, i8*)*)(%struct.LexState.249* %ls, i8* %11) #1
  br label %checknext.exit

checknext.exit:                                   ; preds = %0, %7
  tail call void bitcast (void (%struct.LexState*)* @luaX_next to void (%struct.LexState.249*)*)(%struct.LexState.249* %ls) #1
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @funcargs(%struct.LexState.249* %ls, %struct.expdesc* nocapture %f) #0 {
  %args = alloca %struct.expdesc, align 8
  %1 = getelementptr inbounds %struct.LexState.249, %struct.LexState.249* %ls, i64 0, i32 5
  %2 = load %struct.FuncState.248*, %struct.FuncState.248** %1, align 8, !tbaa !224
  %3 = bitcast %struct.expdesc* %args to i8*
  call void @llvm.lifetime.start(i64 24, i8* %3) #1
  %4 = getelementptr inbounds %struct.LexState.249, %struct.LexState.249* %ls, i64 0, i32 1
  %5 = load i32, i32* %4, align 4, !tbaa !220
  %6 = getelementptr inbounds %struct.LexState.249, %struct.LexState.249* %ls, i64 0, i32 3, i32 0
  %7 = load i32, i32* %6, align 4, !tbaa !223
  switch i32 %7, label %38 [
    i32 40, label %8
    i32 123, label %27
    i32 286, label %28
  ]

; <label>:8                                       ; preds = %0
  %9 = getelementptr inbounds %struct.LexState.249, %struct.LexState.249* %ls, i64 0, i32 2
  %10 = load i32, i32* %9, align 4, !tbaa !95
  %11 = icmp eq i32 %5, %10
  br i1 %11, label %13, label %12

; <label>:12                                      ; preds = %8
  tail call void bitcast (void (%struct.LexState*, i8*)* @luaX_syntaxerror to void (%struct.LexState.249*, i8*)*)(%struct.LexState.249* %ls, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.15.523, i64 0, i64 0)) #1
  br label %13

; <label>:13                                      ; preds = %8, %12
  tail call void bitcast (void (%struct.LexState*)* @luaX_next to void (%struct.LexState.249*)*)(%struct.LexState.249* %ls) #1
  %14 = load i32, i32* %6, align 4, !tbaa !223
  %15 = icmp eq i32 %14, 41
  br i1 %15, label %16, label %18

; <label>:16                                      ; preds = %13
  %17 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %args, i64 0, i32 0
  store i32 0, i32* %17, align 8, !tbaa !101
  br label %26

; <label>:18                                      ; preds = %13
  %19 = call fastcc i32 @subexpr(%struct.LexState.249* %ls, %struct.expdesc* nonnull %args, i32 0) #1
  %20 = load i32, i32* %6, align 4, !tbaa !223
  %21 = icmp eq i32 %20, 44
  br i1 %21, label %.lr.ph.preheader, label %explist1.exit

.lr.ph.preheader:                                 ; preds = %18
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %.lr.ph
  call void bitcast (void (%struct.LexState*)* @luaX_next to void (%struct.LexState.249*)*)(%struct.LexState.249* %ls) #1
  %22 = load %struct.FuncState.248*, %struct.FuncState.248** %1, align 8, !tbaa !224
  call void bitcast (void (%struct.FuncState*, %struct.expdesc*)* @luaK_exp2nextreg to void (%struct.FuncState.248*, %struct.expdesc*)*)(%struct.FuncState.248* %22, %struct.expdesc* nonnull %args) #1
  %23 = call fastcc i32 @subexpr(%struct.LexState.249* %ls, %struct.expdesc* nonnull %args, i32 0) #1
  %24 = load i32, i32* %6, align 4, !tbaa !223
  %25 = icmp eq i32 %24, 44
  br i1 %25, label %.lr.ph, label %explist1.exit.loopexit

explist1.exit.loopexit:                           ; preds = %.lr.ph
  br label %explist1.exit

explist1.exit:                                    ; preds = %explist1.exit.loopexit, %18
  call void bitcast (void (%struct.FuncState*, %struct.expdesc*, i32)* @luaK_setreturns to void (%struct.FuncState.248*, %struct.expdesc*, i32)*)(%struct.FuncState.248* %2, %struct.expdesc* nonnull %args, i32 -1) #1
  br label %26

; <label>:26                                      ; preds = %explist1.exit, %16
  call fastcc void @check_match(%struct.LexState.249* %ls, i32 41, i32 40, i32 %5)
  br label %39

; <label>:27                                      ; preds = %0
  call fastcc void @constructor(%struct.LexState.249* %ls, %struct.expdesc* nonnull %args)
  br label %39

; <label>:28                                      ; preds = %0
  %29 = getelementptr inbounds %struct.LexState.249, %struct.LexState.249* %ls, i64 0, i32 3, i32 1
  %30 = bitcast %union.SemInfo* %29 to %union.TString.110**
  %31 = load %union.TString.110*, %union.TString.110** %30, align 8, !tbaa !25
  %32 = tail call i32 bitcast (i32 (%struct.FuncState*, %union.TString*)* @luaK_stringK to i32 (%struct.FuncState.248*, %union.TString.110*)*)(%struct.FuncState.248* %2, %union.TString.110* %31) #1
  %33 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %args, i64 0, i32 2
  store i32 -1, i32* %33, align 8, !tbaa !106
  %34 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %args, i64 0, i32 3
  store i32 -1, i32* %34, align 4, !tbaa !107
  %35 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %args, i64 0, i32 0
  store i32 4, i32* %35, align 8, !tbaa !101
  %36 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %args, i64 0, i32 1
  %37 = bitcast %union.SemInfo* %36 to i32*
  store i32 %32, i32* %37, align 8, !tbaa !103
  tail call void bitcast (void (%struct.LexState*)* @luaX_next to void (%struct.LexState.249*)*)(%struct.LexState.249* %ls) #1
  br label %39

; <label>:38                                      ; preds = %0
  tail call void bitcast (void (%struct.LexState*, i8*)* @luaX_syntaxerror to void (%struct.LexState.249*, i8*)*)(%struct.LexState.249* %ls, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.16.524, i64 0, i64 0)) #1
  br label %56

; <label>:39                                      ; preds = %28, %27, %26
  %40 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %f, i64 0, i32 1
  %41 = bitcast %union.SemInfo* %40 to i32*
  %42 = load i32, i32* %41, align 4, !tbaa !103
  %43 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %args, i64 0, i32 0
  %44 = load i32, i32* %43, align 8, !tbaa !101
  switch i32 %44, label %45 [
    i32 13, label %49
    i32 14, label %49
    i32 0, label %46
  ]

; <label>:45                                      ; preds = %39
  call void bitcast (void (%struct.FuncState*, %struct.expdesc*)* @luaK_exp2nextreg to void (%struct.FuncState.248*, %struct.expdesc*)*)(%struct.FuncState.248* %2, %struct.expdesc* nonnull %args) #1
  br label %46

; <label>:46                                      ; preds = %39, %45
  %47 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %2, i64 0, i32 9
  %48 = load i32, i32* %47, align 4, !tbaa !99
  %phitmp = sub i32 %48, %42
  br label %49

; <label>:49                                      ; preds = %39, %39, %46
  %nparams.0 = phi i32 [ %phitmp, %46 ], [ 0, %39 ], [ 0, %39 ]
  %50 = call i32 bitcast (i32 (%struct.FuncState*, i32, i32, i32, i32)* @luaK_codeABC to i32 (%struct.FuncState.248*, i32, i32, i32, i32)*)(%struct.FuncState.248* %2, i32 28, i32 %42, i32 %nparams.0, i32 2) #1
  %51 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %f, i64 0, i32 2
  store i32 -1, i32* %51, align 4, !tbaa !106
  %52 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %f, i64 0, i32 3
  store i32 -1, i32* %52, align 4, !tbaa !107
  %53 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %f, i64 0, i32 0
  store i32 13, i32* %53, align 4, !tbaa !101
  store i32 %50, i32* %41, align 4, !tbaa !103
  call void bitcast (void (%struct.FuncState*, i32)* @luaK_fixline to void (%struct.FuncState.248*, i32)*)(%struct.FuncState.248* %2, i32 %5) #1
  %54 = add nsw i32 %42, 1
  %55 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %2, i64 0, i32 9
  store i32 %54, i32* %55, align 4, !tbaa !99
  br label %56

; <label>:56                                      ; preds = %49, %38
  call void @llvm.lifetime.end(i64 24, i8* %3) #1
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @constructor(%struct.LexState.249* %ls, %struct.expdesc* %t) #0 {
  %cc = alloca %struct.ConsControl, align 8
  %1 = getelementptr inbounds %struct.LexState.249, %struct.LexState.249* %ls, i64 0, i32 5
  %2 = load %struct.FuncState.248*, %struct.FuncState.248** %1, align 8, !tbaa !224
  %3 = getelementptr inbounds %struct.LexState.249, %struct.LexState.249* %ls, i64 0, i32 1
  %4 = load i32, i32* %3, align 4, !tbaa !220
  %5 = tail call i32 bitcast (i32 (%struct.FuncState*, i32, i32, i32, i32)* @luaK_codeABC to i32 (%struct.FuncState.248*, i32, i32, i32, i32)*)(%struct.FuncState.248* %2, i32 10, i32 0, i32 0, i32 0) #1
  %6 = bitcast %struct.ConsControl* %cc to i8*
  call void @llvm.lifetime.start(i64 48, i8* %6) #1
  %7 = getelementptr inbounds %struct.ConsControl, %struct.ConsControl* %cc, i64 0, i32 4
  store i32 0, i32* %7, align 8, !tbaa !267
  %8 = getelementptr inbounds %struct.ConsControl, %struct.ConsControl* %cc, i64 0, i32 2
  store i32 0, i32* %8, align 8, !tbaa !269
  %9 = getelementptr inbounds %struct.ConsControl, %struct.ConsControl* %cc, i64 0, i32 3
  store i32 0, i32* %9, align 4, !tbaa !270
  %10 = getelementptr inbounds %struct.ConsControl, %struct.ConsControl* %cc, i64 0, i32 1
  store %struct.expdesc* %t, %struct.expdesc** %10, align 8, !tbaa !271
  %11 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %t, i64 0, i32 2
  store i32 -1, i32* %11, align 4, !tbaa !106
  %12 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %t, i64 0, i32 3
  store i32 -1, i32* %12, align 4, !tbaa !107
  %13 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %t, i64 0, i32 0
  store i32 11, i32* %13, align 4, !tbaa !101
  %14 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %t, i64 0, i32 1
  %15 = bitcast %union.SemInfo* %14 to i32*
  store i32 %5, i32* %15, align 4, !tbaa !103
  %16 = getelementptr inbounds %struct.ConsControl, %struct.ConsControl* %cc, i64 0, i32 0
  %17 = getelementptr inbounds %struct.ConsControl, %struct.ConsControl* %cc, i64 0, i32 0, i32 2
  store i32 -1, i32* %17, align 8, !tbaa !106
  %18 = getelementptr inbounds %struct.ConsControl, %struct.ConsControl* %cc, i64 0, i32 0, i32 3
  store i32 -1, i32* %18, align 4, !tbaa !107
  %19 = getelementptr inbounds %struct.ConsControl, %struct.ConsControl* %cc, i64 0, i32 0, i32 0
  store i32 0, i32* %19, align 8, !tbaa !101
  %20 = getelementptr inbounds %struct.ConsControl, %struct.ConsControl* %cc, i64 0, i32 0, i32 1
  %21 = bitcast %union.SemInfo* %20 to i32*
  store i32 0, i32* %21, align 8, !tbaa !103
  %22 = load %struct.FuncState.248*, %struct.FuncState.248** %1, align 8, !tbaa !224
  tail call void bitcast (void (%struct.FuncState*, %struct.expdesc*)* @luaK_exp2nextreg to void (%struct.FuncState.248*, %struct.expdesc*)*)(%struct.FuncState.248* %22, %struct.expdesc* %t) #1
  %23 = getelementptr inbounds %struct.LexState.249, %struct.LexState.249* %ls, i64 0, i32 3, i32 0
  %24 = load i32, i32* %23, align 4, !tbaa !223
  %25 = icmp eq i32 %24, 123
  br i1 %25, label %checknext.exit, label %26

; <label>:26                                      ; preds = %0
  %27 = getelementptr inbounds %struct.LexState.249, %struct.LexState.249* %ls, i64 0, i32 6
  %28 = load %struct.lua_State.115*, %struct.lua_State.115** %27, align 8, !tbaa !218
  %29 = tail call i8* bitcast (i8* (%struct.LexState*, i32)* @luaX_token2str to i8* (%struct.LexState.249*, i32)*)(%struct.LexState.249* %ls, i32 123) #1
  %30 = tail call i8* (%struct.lua_State.115*, i8*, ...) bitcast (i8* (%struct.lua_State.215*, i8*, ...)* @luaO_pushfstring to i8* (%struct.lua_State.115*, i8*, ...)*)(%struct.lua_State.115* %28, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.509, i64 0, i64 0), i8* %29) #1
  tail call void bitcast (void (%struct.LexState*, i8*)* @luaX_syntaxerror to void (%struct.LexState.249*, i8*)*)(%struct.LexState.249* %ls, i8* %30) #1
  br label %checknext.exit

checknext.exit:                                   ; preds = %0, %26
  tail call void bitcast (void (%struct.LexState*)* @luaX_next to void (%struct.LexState.249*)*)(%struct.LexState.249* %ls) #1
  %31 = load i32, i32* %23, align 4, !tbaa !223
  %32 = icmp eq i32 %31, 125
  br i1 %32, label %testnext.exit.thread, label %.lr.ph

.lr.ph:                                           ; preds = %checknext.exit
  %33 = getelementptr inbounds %struct.LexState.249, %struct.LexState.249* %ls, i64 0, i32 4, i32 0
  br label %34

; <label>:34                                      ; preds = %.critedge.backedge._crit_edge, %.lr.ph
  %35 = phi i32 [ %.pre, %.critedge.backedge._crit_edge ], [ 0, %.lr.ph ]
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %closelistfield.exit, label %37

; <label>:37                                      ; preds = %34
  call void bitcast (void (%struct.FuncState*, %struct.expdesc*)* @luaK_exp2nextreg to void (%struct.FuncState.248*, %struct.expdesc*)*)(%struct.FuncState.248* %2, %struct.expdesc* %16) #1
  store i32 0, i32* %19, align 8, !tbaa !272
  %38 = load i32, i32* %7, align 8, !tbaa !267
  %39 = icmp eq i32 %38, 50
  br i1 %39, label %40, label %closelistfield.exit

; <label>:40                                      ; preds = %37
  %41 = load %struct.expdesc*, %struct.expdesc** %10, align 8, !tbaa !271
  %42 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %41, i64 0, i32 1
  %43 = bitcast %union.SemInfo* %42 to i32*
  %44 = load i32, i32* %43, align 4, !tbaa !103
  %45 = load i32, i32* %9, align 4, !tbaa !270
  call void bitcast (void (%struct.FuncState*, i32, i32, i32)* @luaK_setlist to void (%struct.FuncState.248*, i32, i32, i32)*)(%struct.FuncState.248* %2, i32 %44, i32 %45, i32 50) #1
  store i32 0, i32* %7, align 8, !tbaa !267
  br label %closelistfield.exit

closelistfield.exit:                              ; preds = %34, %37, %40
  %46 = load i32, i32* %23, align 4, !tbaa !223
  switch i32 %46, label %76 [
    i32 285, label %47
    i32 91, label %75
  ]

; <label>:47                                      ; preds = %closelistfield.exit
  call void bitcast (void (%struct.LexState*)* @luaX_lookahead to void (%struct.LexState.249*)*)(%struct.LexState.249* %ls) #1
  %48 = load i32, i32* %33, align 4, !tbaa !226
  %49 = icmp eq i32 %48, 61
  br i1 %49, label %74, label %50

; <label>:50                                      ; preds = %47
  %51 = call fastcc i32 @subexpr(%struct.LexState.249* %ls, %struct.expdesc* %16, i32 0) #1
  %52 = load i32, i32* %9, align 4, !tbaa !270
  %53 = icmp sgt i32 %52, 2147483645
  br i1 %53, label %54, label %listfield.exit

; <label>:54                                      ; preds = %50
  %55 = load %struct.FuncState.248*, %struct.FuncState.248** %1, align 8, !tbaa !224
  %56 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %55, i64 0, i32 0
  %57 = load %struct.Proto.120*, %struct.Proto.120** %56, align 8, !tbaa !92
  %58 = getelementptr inbounds %struct.Proto.120, %struct.Proto.120* %57, i64 0, i32 16
  %59 = load i32, i32* %58, align 4, !tbaa !165
  %60 = icmp eq i32 %59, 0
  %61 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %55, i64 0, i32 4
  %62 = load %struct.lua_State.115*, %struct.lua_State.115** %61, align 8, !tbaa !113
  br i1 %60, label %63, label %65

; <label>:63                                      ; preds = %54
  %64 = call i8* (%struct.lua_State.115*, i8*, ...) bitcast (i8* (%struct.lua_State.215*, i8*, ...)* @luaO_pushfstring to i8* (%struct.lua_State.115*, i8*, ...)*)(%struct.lua_State.115* %62, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.4.519, i64 0, i64 0), i32 2147483645, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3.525, i64 0, i64 0)) #1
  br label %errorlimit.exit.i

; <label>:65                                      ; preds = %54
  %66 = call i8* (%struct.lua_State.115*, i8*, ...) bitcast (i8* (%struct.lua_State.215*, i8*, ...)* @luaO_pushfstring to i8* (%struct.lua_State.115*, i8*, ...)*)(%struct.lua_State.115* %62, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.5.521, i64 0, i64 0), i32 %59, i32 2147483645, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3.525, i64 0, i64 0)) #1
  br label %errorlimit.exit.i

errorlimit.exit.i:                                ; preds = %65, %63
  %67 = phi i8* [ %64, %63 ], [ %66, %65 ]
  %68 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %55, i64 0, i32 3
  %69 = load %struct.LexState.249*, %struct.LexState.249** %68, align 8, !tbaa !94
  call void bitcast (void (%struct.LexState*, i8*, i32)* @luaX_lexerror to void (%struct.LexState.249*, i8*, i32)*)(%struct.LexState.249* %69, i8* %67, i32 0) #1
  %.pre5 = load i32, i32* %9, align 4, !tbaa !270
  br label %listfield.exit

listfield.exit:                                   ; preds = %50, %errorlimit.exit.i
  %70 = phi i32 [ %52, %50 ], [ %.pre5, %errorlimit.exit.i ]
  %71 = add nsw i32 %70, 1
  store i32 %71, i32* %9, align 4, !tbaa !270
  %72 = load i32, i32* %7, align 8, !tbaa !267
  %73 = add nsw i32 %72, 1
  store i32 %73, i32* %7, align 8, !tbaa !267
  br label %100

; <label>:74                                      ; preds = %47
  call fastcc void @recfield(%struct.LexState.249* %ls, %struct.ConsControl* nonnull %cc)
  br label %100

; <label>:75                                      ; preds = %closelistfield.exit
  call fastcc void @recfield(%struct.LexState.249* %ls, %struct.ConsControl* nonnull %cc)
  br label %100

; <label>:76                                      ; preds = %closelistfield.exit
  %77 = call fastcc i32 @subexpr(%struct.LexState.249* %ls, %struct.expdesc* %16, i32 0) #1
  %78 = load i32, i32* %9, align 4, !tbaa !270
  %79 = icmp sgt i32 %78, 2147483645
  br i1 %79, label %80, label %listfield.exit4

; <label>:80                                      ; preds = %76
  %81 = load %struct.FuncState.248*, %struct.FuncState.248** %1, align 8, !tbaa !224
  %82 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %81, i64 0, i32 0
  %83 = load %struct.Proto.120*, %struct.Proto.120** %82, align 8, !tbaa !92
  %84 = getelementptr inbounds %struct.Proto.120, %struct.Proto.120* %83, i64 0, i32 16
  %85 = load i32, i32* %84, align 4, !tbaa !165
  %86 = icmp eq i32 %85, 0
  %87 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %81, i64 0, i32 4
  %88 = load %struct.lua_State.115*, %struct.lua_State.115** %87, align 8, !tbaa !113
  br i1 %86, label %89, label %91

; <label>:89                                      ; preds = %80
  %90 = call i8* (%struct.lua_State.115*, i8*, ...) bitcast (i8* (%struct.lua_State.215*, i8*, ...)* @luaO_pushfstring to i8* (%struct.lua_State.115*, i8*, ...)*)(%struct.lua_State.115* %88, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.4.519, i64 0, i64 0), i32 2147483645, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3.525, i64 0, i64 0)) #1
  br label %errorlimit.exit.i.3

; <label>:91                                      ; preds = %80
  %92 = call i8* (%struct.lua_State.115*, i8*, ...) bitcast (i8* (%struct.lua_State.215*, i8*, ...)* @luaO_pushfstring to i8* (%struct.lua_State.115*, i8*, ...)*)(%struct.lua_State.115* %88, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.5.521, i64 0, i64 0), i32 %85, i32 2147483645, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3.525, i64 0, i64 0)) #1
  br label %errorlimit.exit.i.3

errorlimit.exit.i.3:                              ; preds = %91, %89
  %93 = phi i8* [ %90, %89 ], [ %92, %91 ]
  %94 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %81, i64 0, i32 3
  %95 = load %struct.LexState.249*, %struct.LexState.249** %94, align 8, !tbaa !94
  call void bitcast (void (%struct.LexState*, i8*, i32)* @luaX_lexerror to void (%struct.LexState.249*, i8*, i32)*)(%struct.LexState.249* %95, i8* %93, i32 0) #1
  %.pre6 = load i32, i32* %9, align 4, !tbaa !270
  br label %listfield.exit4

listfield.exit4:                                  ; preds = %76, %errorlimit.exit.i.3
  %96 = phi i32 [ %78, %76 ], [ %.pre6, %errorlimit.exit.i.3 ]
  %97 = add nsw i32 %96, 1
  store i32 %97, i32* %9, align 4, !tbaa !270
  %98 = load i32, i32* %7, align 8, !tbaa !267
  %99 = add nsw i32 %98, 1
  store i32 %99, i32* %7, align 8, !tbaa !267
  br label %100

; <label>:100                                     ; preds = %75, %listfield.exit4, %74, %listfield.exit
  %101 = load i32, i32* %23, align 4, !tbaa !223
  switch i32 %101, label %testnext.exit.thread.loopexit [
    i32 44, label %testnext.exit2
    i32 59, label %testnext.exit
  ]

testnext.exit2:                                   ; preds = %100
  call void bitcast (void (%struct.LexState*)* @luaX_next to void (%struct.LexState.249*)*)(%struct.LexState.249* %ls) #1
  br label %.critedge.backedge

.critedge.backedge:                               ; preds = %testnext.exit2, %testnext.exit
  %102 = load i32, i32* %23, align 4, !tbaa !223
  %103 = icmp eq i32 %102, 125
  br i1 %103, label %testnext.exit.thread.loopexit, label %.critedge.backedge._crit_edge

.critedge.backedge._crit_edge:                    ; preds = %.critedge.backedge
  %.pre = load i32, i32* %19, align 8, !tbaa !272
  br label %34

testnext.exit:                                    ; preds = %100
  call void bitcast (void (%struct.LexState*)* @luaX_next to void (%struct.LexState.249*)*)(%struct.LexState.249* %ls) #1
  br label %.critedge.backedge

testnext.exit.thread.loopexit:                    ; preds = %100, %.critedge.backedge
  br label %testnext.exit.thread

testnext.exit.thread:                             ; preds = %testnext.exit.thread.loopexit, %checknext.exit
  call fastcc void @check_match(%struct.LexState.249* %ls, i32 125, i32 123, i32 %4)
  %104 = load i32, i32* %7, align 8, !tbaa !267
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %lastlistfield.exit, label %106

; <label>:106                                     ; preds = %testnext.exit.thread
  %107 = load i32, i32* %19, align 8, !tbaa !272
  switch i32 %107, label %116 [
    i32 13, label %108
    i32 14, label %108
    i32 0, label %117
  ]

; <label>:108                                     ; preds = %106, %106
  call void bitcast (void (%struct.FuncState*, %struct.expdesc*, i32)* @luaK_setreturns to void (%struct.FuncState.248*, %struct.expdesc*, i32)*)(%struct.FuncState.248* %2, %struct.expdesc* %16, i32 -1) #1
  %109 = load %struct.expdesc*, %struct.expdesc** %10, align 8, !tbaa !271
  %110 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %109, i64 0, i32 1
  %111 = bitcast %union.SemInfo* %110 to i32*
  %112 = load i32, i32* %111, align 4, !tbaa !103
  %113 = load i32, i32* %9, align 4, !tbaa !270
  call void bitcast (void (%struct.FuncState*, i32, i32, i32)* @luaK_setlist to void (%struct.FuncState.248*, i32, i32, i32)*)(%struct.FuncState.248* %2, i32 %112, i32 %113, i32 -1) #1
  %114 = load i32, i32* %9, align 4, !tbaa !270
  %115 = add nsw i32 %114, -1
  store i32 %115, i32* %9, align 4, !tbaa !270
  br label %lastlistfield.exit

; <label>:116                                     ; preds = %106
  call void bitcast (void (%struct.FuncState*, %struct.expdesc*)* @luaK_exp2nextreg to void (%struct.FuncState.248*, %struct.expdesc*)*)(%struct.FuncState.248* %2, %struct.expdesc* %16) #1
  %.pre.i = load i32, i32* %7, align 8, !tbaa !267
  br label %117

; <label>:117                                     ; preds = %116, %106
  %118 = phi i32 [ %104, %106 ], [ %.pre.i, %116 ]
  %119 = load %struct.expdesc*, %struct.expdesc** %10, align 8, !tbaa !271
  %120 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %119, i64 0, i32 1
  %121 = bitcast %union.SemInfo* %120 to i32*
  %122 = load i32, i32* %121, align 4, !tbaa !103
  %123 = load i32, i32* %9, align 4, !tbaa !270
  call void bitcast (void (%struct.FuncState*, i32, i32, i32)* @luaK_setlist to void (%struct.FuncState.248*, i32, i32, i32)*)(%struct.FuncState.248* %2, i32 %122, i32 %123, i32 %118) #1
  br label %lastlistfield.exit

lastlistfield.exit:                               ; preds = %testnext.exit.thread, %108, %117
  %124 = sext i32 %5 to i64
  %125 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %2, i64 0, i32 0
  %126 = load %struct.Proto.120*, %struct.Proto.120** %125, align 8, !tbaa !92
  %127 = getelementptr inbounds %struct.Proto.120, %struct.Proto.120* %126, i64 0, i32 4
  %128 = load i32*, i32** %127, align 8, !tbaa !93
  %129 = getelementptr inbounds i32, i32* %128, i64 %124
  %130 = load i32, i32* %129, align 4, !tbaa !38
  %131 = and i32 %130, 8388607
  %132 = load i32, i32* %9, align 4, !tbaa !270
  %133 = call i32 @luaO_int2fb(i32 %132) #1
  %134 = shl i32 %133, 23
  %135 = or i32 %134, %131
  %136 = load %struct.Proto.120*, %struct.Proto.120** %125, align 8, !tbaa !92
  %137 = getelementptr inbounds %struct.Proto.120, %struct.Proto.120* %136, i64 0, i32 4
  %138 = load i32*, i32** %137, align 8, !tbaa !93
  %139 = getelementptr inbounds i32, i32* %138, i64 %124
  store i32 %135, i32* %139, align 4, !tbaa !38
  %140 = and i32 %135, -8372225
  %141 = load i32, i32* %8, align 8, !tbaa !269
  %142 = call i32 @luaO_int2fb(i32 %141) #1
  %143 = shl i32 %142, 14
  %144 = and i32 %143, 8372224
  %145 = or i32 %144, %140
  %146 = load %struct.Proto.120*, %struct.Proto.120** %125, align 8, !tbaa !92
  %147 = getelementptr inbounds %struct.Proto.120, %struct.Proto.120* %146, i64 0, i32 4
  %148 = load i32*, i32** %147, align 8, !tbaa !93
  %149 = getelementptr inbounds i32, i32* %148, i64 %124
  store i32 %145, i32* %149, align 4, !tbaa !38
  call void @llvm.lifetime.end(i64 48, i8* %6) #1
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @recfield(%struct.LexState.249* %ls, %struct.ConsControl* nocapture %cc) #0 {
  %key = alloca %struct.expdesc, align 8
  %val = alloca %struct.expdesc, align 8
  %1 = getelementptr inbounds %struct.LexState.249, %struct.LexState.249* %ls, i64 0, i32 5
  %2 = load %struct.FuncState.248*, %struct.FuncState.248** %1, align 8, !tbaa !224
  %3 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %2, i64 0, i32 9
  %4 = load i32, i32* %3, align 4, !tbaa !99
  %5 = bitcast %struct.expdesc* %key to i8*
  call void @llvm.lifetime.start(i64 24, i8* %5) #1
  %6 = bitcast %struct.expdesc* %val to i8*
  call void @llvm.lifetime.start(i64 24, i8* %6) #1
  %7 = getelementptr inbounds %struct.LexState.249, %struct.LexState.249* %ls, i64 0, i32 3, i32 0
  %8 = load i32, i32* %7, align 4, !tbaa !223
  %9 = icmp eq i32 %8, 285
  br i1 %9, label %10, label %44

; <label>:10                                      ; preds = %0
  %11 = getelementptr inbounds %struct.ConsControl, %struct.ConsControl* %cc, i64 0, i32 2
  %12 = load i32, i32* %11, align 4, !tbaa !269
  %13 = icmp sgt i32 %12, 2147483645
  br i1 %13, label %14, label %checkname.exit

; <label>:14                                      ; preds = %10
  %15 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %2, i64 0, i32 0
  %16 = load %struct.Proto.120*, %struct.Proto.120** %15, align 8, !tbaa !92
  %17 = getelementptr inbounds %struct.Proto.120, %struct.Proto.120* %16, i64 0, i32 16
  %18 = load i32, i32* %17, align 4, !tbaa !165
  %19 = icmp eq i32 %18, 0
  %20 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %2, i64 0, i32 4
  %21 = load %struct.lua_State.115*, %struct.lua_State.115** %20, align 8, !tbaa !113
  br i1 %19, label %22, label %24

; <label>:22                                      ; preds = %14
  %23 = tail call i8* (%struct.lua_State.115*, i8*, ...) bitcast (i8* (%struct.lua_State.215*, i8*, ...)* @luaO_pushfstring to i8* (%struct.lua_State.115*, i8*, ...)*)(%struct.lua_State.115* %21, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.4.519, i64 0, i64 0), i32 2147483645, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3.525, i64 0, i64 0)) #1
  br label %26

; <label>:24                                      ; preds = %14
  %25 = tail call i8* (%struct.lua_State.115*, i8*, ...) bitcast (i8* (%struct.lua_State.215*, i8*, ...)* @luaO_pushfstring to i8* (%struct.lua_State.115*, i8*, ...)*)(%struct.lua_State.115* %21, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.5.521, i64 0, i64 0), i32 %18, i32 2147483645, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3.525, i64 0, i64 0)) #1
  br label %26

; <label>:26                                      ; preds = %24, %22
  %27 = phi i8* [ %23, %22 ], [ %25, %24 ]
  %28 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %2, i64 0, i32 3
  %29 = load %struct.LexState.249*, %struct.LexState.249** %28, align 8, !tbaa !94
  tail call void bitcast (void (%struct.LexState*, i8*, i32)* @luaX_lexerror to void (%struct.LexState.249*, i8*, i32)*)(%struct.LexState.249* %29, i8* %27, i32 0) #1
  %.pre = load i32, i32* %7, align 4, !tbaa !223
  %phitmp = icmp eq i32 %.pre, 285
  br i1 %phitmp, label %checkname.exit, label %30

; <label>:30                                      ; preds = %26
  %31 = getelementptr inbounds %struct.LexState.249, %struct.LexState.249* %ls, i64 0, i32 6
  %32 = load %struct.lua_State.115*, %struct.lua_State.115** %31, align 8, !tbaa !218
  %33 = tail call i8* bitcast (i8* (%struct.LexState*, i32)* @luaX_token2str to i8* (%struct.LexState.249*, i32)*)(%struct.LexState.249* %ls, i32 285) #1
  %34 = tail call i8* (%struct.lua_State.115*, i8*, ...) bitcast (i8* (%struct.lua_State.215*, i8*, ...)* @luaO_pushfstring to i8* (%struct.lua_State.115*, i8*, ...)*)(%struct.lua_State.115* %32, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.509, i64 0, i64 0), i8* %33) #1
  tail call void bitcast (void (%struct.LexState*, i8*)* @luaX_syntaxerror to void (%struct.LexState.249*, i8*)*)(%struct.LexState.249* %ls, i8* %34) #1
  br label %checkname.exit

checkname.exit:                                   ; preds = %10, %26, %30
  %35 = getelementptr inbounds %struct.LexState.249, %struct.LexState.249* %ls, i64 0, i32 3, i32 1
  %36 = bitcast %union.SemInfo* %35 to %union.TString.110**
  %37 = load %union.TString.110*, %union.TString.110** %36, align 8, !tbaa !25
  tail call void bitcast (void (%struct.LexState*)* @luaX_next to void (%struct.LexState.249*)*)(%struct.LexState.249* %ls) #1
  %ls.idx.val.i = load %struct.FuncState.248*, %struct.FuncState.248** %1, align 8, !tbaa !224
  %38 = tail call i32 bitcast (i32 (%struct.FuncState*, %union.TString*)* @luaK_stringK to i32 (%struct.FuncState.248*, %union.TString.110*)*)(%struct.FuncState.248* %ls.idx.val.i, %union.TString.110* %37) #1
  %39 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %key, i64 0, i32 2
  store i32 -1, i32* %39, align 8, !tbaa !106
  %40 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %key, i64 0, i32 3
  store i32 -1, i32* %40, align 4, !tbaa !107
  %41 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %key, i64 0, i32 0
  store i32 4, i32* %41, align 8, !tbaa !101
  %42 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %key, i64 0, i32 1
  %43 = bitcast %union.SemInfo* %42 to i32*
  store i32 %38, i32* %43, align 8, !tbaa !103
  br label %45

; <label>:44                                      ; preds = %0
  call fastcc void @yindex(%struct.LexState.249* %ls, %struct.expdesc* nonnull %key)
  %.pre1 = getelementptr inbounds %struct.ConsControl, %struct.ConsControl* %cc, i64 0, i32 2
  br label %45

; <label>:45                                      ; preds = %44, %checkname.exit
  %.pre-phi = phi i32* [ %.pre1, %44 ], [ %11, %checkname.exit ]
  %46 = load i32, i32* %.pre-phi, align 4, !tbaa !269
  %47 = add nsw i32 %46, 1
  store i32 %47, i32* %.pre-phi, align 4, !tbaa !269
  %48 = load i32, i32* %7, align 4, !tbaa !223
  %49 = icmp eq i32 %48, 61
  br i1 %49, label %checknext.exit, label %50

; <label>:50                                      ; preds = %45
  %51 = getelementptr inbounds %struct.LexState.249, %struct.LexState.249* %ls, i64 0, i32 6
  %52 = load %struct.lua_State.115*, %struct.lua_State.115** %51, align 8, !tbaa !218
  %53 = call i8* bitcast (i8* (%struct.LexState*, i32)* @luaX_token2str to i8* (%struct.LexState.249*, i32)*)(%struct.LexState.249* %ls, i32 61) #1
  %54 = call i8* (%struct.lua_State.115*, i8*, ...) bitcast (i8* (%struct.lua_State.215*, i8*, ...)* @luaO_pushfstring to i8* (%struct.lua_State.115*, i8*, ...)*)(%struct.lua_State.115* %52, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.509, i64 0, i64 0), i8* %53) #1
  call void bitcast (void (%struct.LexState*, i8*)* @luaX_syntaxerror to void (%struct.LexState.249*, i8*)*)(%struct.LexState.249* %ls, i8* %54) #1
  br label %checknext.exit

checknext.exit:                                   ; preds = %45, %50
  call void bitcast (void (%struct.LexState*)* @luaX_next to void (%struct.LexState.249*)*)(%struct.LexState.249* %ls) #1
  %55 = call i32 bitcast (i32 (%struct.FuncState*, %struct.expdesc*)* @luaK_exp2RK to i32 (%struct.FuncState.248*, %struct.expdesc*)*)(%struct.FuncState.248* %2, %struct.expdesc* nonnull %key) #1
  %56 = call fastcc i32 @subexpr(%struct.LexState.249* %ls, %struct.expdesc* nonnull %val, i32 0) #1
  %57 = getelementptr inbounds %struct.ConsControl, %struct.ConsControl* %cc, i64 0, i32 1
  %58 = load %struct.expdesc*, %struct.expdesc** %57, align 8, !tbaa !271
  %59 = getelementptr inbounds %struct.expdesc, %struct.expdesc* %58, i64 0, i32 1
  %60 = bitcast %union.SemInfo* %59 to i32*
  %61 = load i32, i32* %60, align 4, !tbaa !103
  %62 = call i32 bitcast (i32 (%struct.FuncState*, %struct.expdesc*)* @luaK_exp2RK to i32 (%struct.FuncState.248*, %struct.expdesc*)*)(%struct.FuncState.248* %2, %struct.expdesc* nonnull %val) #1
  %63 = call i32 bitcast (i32 (%struct.FuncState*, i32, i32, i32, i32)* @luaK_codeABC to i32 (%struct.FuncState.248*, i32, i32, i32, i32)*)(%struct.FuncState.248* %2, i32 9, i32 %61, i32 %55, i32 %62) #1
  store i32 %4, i32* %3, align 4, !tbaa !99
  call void @llvm.lifetime.end(i64 24, i8* %6) #1
  call void @llvm.lifetime.end(i64 24, i8* %5) #1
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @open_func(%struct.LexState.249* %ls, %struct.FuncState.248* %fs) #0 {
  %1 = getelementptr inbounds %struct.LexState.249, %struct.LexState.249* %ls, i64 0, i32 6
  %2 = load %struct.lua_State.115*, %struct.lua_State.115** %1, align 8, !tbaa !218
  %3 = tail call %struct.Proto.120* @luaF_newproto(%struct.lua_State.115* %2) #1
  %4 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %fs, i64 0, i32 0
  store %struct.Proto.120* %3, %struct.Proto.120** %4, align 8, !tbaa !92
  %5 = getelementptr inbounds %struct.LexState.249, %struct.LexState.249* %ls, i64 0, i32 5
  %6 = bitcast %struct.FuncState.248** %5 to i64*
  %7 = load i64, i64* %6, align 8, !tbaa !224
  %8 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %fs, i64 0, i32 2
  %9 = bitcast %struct.FuncState.248** %8 to i64*
  store i64 %7, i64* %9, align 8, !tbaa !245
  %10 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %fs, i64 0, i32 3
  store %struct.LexState.249* %ls, %struct.LexState.249** %10, align 8, !tbaa !94
  %11 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %fs, i64 0, i32 4
  store %struct.lua_State.115* %2, %struct.lua_State.115** %11, align 8, !tbaa !113
  store %struct.FuncState.248* %fs, %struct.FuncState.248** %5, align 8, !tbaa !224
  %12 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %fs, i64 0, i32 6
  store i32 0, i32* %12, align 4, !tbaa !88
  %13 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %fs, i64 0, i32 7
  store i32 -1, i32* %13, align 4, !tbaa !90
  %14 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %fs, i64 0, i32 8
  store i32 -1, i32* %14, align 4, !tbaa !98
  %15 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %fs, i64 0, i32 9
  %16 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %fs, i64 0, i32 5
  store %struct.BlockCnt* null, %struct.BlockCnt** %16, align 8, !tbaa !246
  %17 = getelementptr inbounds %struct.LexState.249, %struct.LexState.249* %ls, i64 0, i32 9
  %18 = bitcast %union.TString.110** %17 to i64*
  %19 = bitcast i32* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* %19, i8 0, i64 15, i32 4, i1 false)
  %20 = load i64, i64* %18, align 8, !tbaa !219
  %21 = getelementptr inbounds %struct.Proto.120, %struct.Proto.120* %3, i64 0, i32 9
  %22 = bitcast %union.TString.110** %21 to i64*
  store i64 %20, i64* %22, align 8, !tbaa !133
  %23 = getelementptr inbounds %struct.Proto.120, %struct.Proto.120* %3, i64 0, i32 22
  store i8 2, i8* %23, align 1, !tbaa !100
  %24 = tail call %struct.Table.108* bitcast (%struct.Table* (%struct.lua_State*, i32, i32)* @luaH_new to %struct.Table.108* (%struct.lua_State.115*, i32, i32)*)(%struct.lua_State.115* %2, i32 0, i32 0) #1
  %25 = getelementptr inbounds %struct.FuncState.248, %struct.FuncState.248* %fs, i64 0, i32 1
  store %struct.Table.108* %24, %struct.Table.108** %25, align 8, !tbaa !109
  %26 = getelementptr inbounds %struct.lua_State.115, %struct.lua_State.115* %2, i64 0, i32 4
  %27 = load %struct.lua_TValue.101*, %struct.lua_TValue.101** %26, align 8, !tbaa !1
  %28 = bitcast %struct.lua_TValue.101* %27 to %struct.Table.108**
  store %struct.Table.108* %24, %struct.Table.108** %28, align 8, !tbaa !25
  %29 = getelementptr inbounds %struct.lua_TValue.101, %struct.lua_TValue.101* %27, i64 0, i32 1
  store i32 5, i32* %29, align 4, !tbaa !10
  %30 = getelementptr inbounds %struct.lua_State.115, %struct.lua_State.115* %2, i64 0, i32 9
  %31 = bitcast %struct.lua_TValue.101** %30 to i64*
  %32 = load i64, i64* %31, align 8, !tbaa !12
  %33 = bitcast %struct.lua_TValue.101** %26 to i64*
  %34 = load i64, i64* %33, align 8, !tbaa !1
  %35 = sub i64 %32, %34
  %36 = icmp slt i64 %35, 17
  %37 = inttoptr i64 %34 to %struct.lua_TValue.101*
  br i1 %36, label %38, label %39

; <label>:38                                      ; preds = %0
  tail call void bitcast (void (%struct.lua_State*, i32)* @luaD_growstack to void (%struct.lua_State.115*, i32)*)(%struct.lua_State.115* %2, i32 1) #1
  %.pre = load %struct.lua_TValue.101*, %struct.lua_TValue.101** %26, align 8, !tbaa !1
  br label %39

; <label>:39                                      ; preds = %0, %38
  %40 = phi %struct.lua_TValue.101* [ %37, %0 ], [ %.pre, %38 ]
  %41 = getelementptr inbounds %struct.lua_TValue.101, %struct.lua_TValue.101* %40, i64 1
  store %struct.lua_TValue.101* %41, %struct.lua_TValue.101** %26, align 8, !tbaa !1
  %42 = bitcast %struct.lua_TValue.101* %41 to %struct.Proto.120**
  store %struct.Proto.120* %3, %struct.Proto.120** %42, align 8, !tbaa !25
  %43 = getelementptr inbounds %struct.lua_TValue.101, %struct.lua_TValue.101* %40, i64 1, i32 1
  store i32 9, i32* %43, align 4, !tbaa !10
  %44 = load i64, i64* %31, align 8, !tbaa !12
  %45 = load i64, i64* %33, align 8, !tbaa !1
  %46 = sub i64 %44, %45
  %47 = icmp slt i64 %46, 17
  %48 = inttoptr i64 %45 to %struct.lua_TValue.101*
  br i1 %47, label %49, label %50

; <label>:49                                      ; preds = %39
  tail call void bitcast (void (%struct.lua_State*, i32)* @luaD_growstack to void (%struct.lua_State.115*, i32)*)(%struct.lua_State.115* %2, i32 1) #1
  %.pre2 = load %struct.lua_TValue.101*, %struct.lua_TValue.101** %26, align 8, !tbaa !1
  br label %50

; <label>:50                                      ; preds = %39, %49
  %51 = phi %struct.lua_TValue.101* [ %48, %39 ], [ %.pre2, %49 ]
  %52 = getelementptr inbounds %struct.lua_TValue.101, %struct.lua_TValue.101* %51, i64 1
  store %struct.lua_TValue.101* %52, %struct.lua_TValue.101** %26, align 8, !tbaa !1
  ret void
}

; Function Attrs: nounwind uwtable
define hidden %struct.lua_State* @luaE_newthread(%struct.lua_State* %L) #0 {
  %1 = tail call i8* @luaM_realloc_(%struct.lua_State* %L, i8* null, i64 0, i64 184) #1
  %2 = bitcast i8* %1 to %struct.lua_State*
  %3 = bitcast i8* %1 to %union.GCObject*
  tail call void @luaC_link(%struct.lua_State* %L, %union.GCObject* %3, i8 zeroext 8) #1
  %4 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 6
  %5 = bitcast %struct.global_State** %4 to i64*
  %6 = load i64, i64* %5, align 8, !tbaa !17
  %7 = getelementptr inbounds i8, i8* %1, i64 32
  %8 = bitcast i8* %7 to i64*
  store i64 %6, i64* %8, align 8, !tbaa !17
  %9 = getelementptr inbounds i8, i8* %1, i64 64
  %10 = bitcast i8* %9 to %struct.lua_TValue**
  store %struct.lua_TValue* null, %struct.lua_TValue** %10, align 8, !tbaa !50
  %11 = getelementptr inbounds i8, i8* %1, i64 88
  %12 = bitcast i8* %11 to i32*
  store i32 0, i32* %12, align 4, !tbaa !149
  %13 = getelementptr inbounds i8, i8* %1, i64 168
  %14 = bitcast i8* %13 to %struct.lua_longjmp**
  store %struct.lua_longjmp* null, %struct.lua_longjmp** %14, align 8, !tbaa !141
  %15 = getelementptr inbounds i8, i8* %1, i64 112
  %16 = bitcast i8* %15 to void (%struct.lua_State*, %struct.lua_Debug*)**
  store void (%struct.lua_State*, %struct.lua_Debug*)* null, void (%struct.lua_State*, %struct.lua_Debug*)** %16, align 8, !tbaa !124
  %17 = getelementptr inbounds i8, i8* %1, i64 100
  store i8 0, i8* %17, align 1, !tbaa !127
  %18 = getelementptr inbounds i8, i8* %1, i64 104
  %19 = bitcast i8* %18 to i32*
  store i32 0, i32* %19, align 4, !tbaa !125
  %20 = getelementptr inbounds i8, i8* %1, i64 101
  store i8 1, i8* %20, align 1, !tbaa !145
  %21 = getelementptr inbounds i8, i8* %1, i64 108
  %22 = bitcast i8* %21 to i32*
  store i32 0, i32* %22, align 4, !tbaa !126
  %23 = getelementptr inbounds i8, i8* %1, i64 152
  %24 = bitcast i8* %23 to %union.GCObject**
  store %union.GCObject* null, %union.GCObject** %24, align 8, !tbaa !186
  %25 = getelementptr inbounds i8, i8* %1, i64 92
  %26 = bitcast i8* %25 to i32*
  store i32 0, i32* %26, align 4, !tbaa !146
  %27 = getelementptr inbounds i8, i8* %1, i64 98
  %28 = bitcast i8* %27 to i16*
  store i16 0, i16* %28, align 2, !tbaa !144
  %29 = getelementptr inbounds i8, i8* %1, i64 96
  %30 = bitcast i8* %29 to i16*
  store i16 0, i16* %30, align 2, !tbaa !16
  %31 = getelementptr inbounds i8, i8* %1, i64 10
  store i8 0, i8* %31, align 1, !tbaa !59
  %32 = getelementptr inbounds i8, i8* %1, i64 40
  %33 = bitcast i8* %32 to %struct.CallInfo**
  %34 = getelementptr inbounds i8, i8* %1, i64 80
  %35 = bitcast i8* %34 to %struct.CallInfo**
  store %struct.CallInfo* null, %struct.CallInfo** %35, align 8, !tbaa !32
  %36 = getelementptr inbounds i8, i8* %1, i64 176
  %37 = bitcast i8* %36 to i64*
  store i64 0, i64* %37, align 8, !tbaa !135
  %38 = getelementptr inbounds i8, i8* %1, i64 128
  %39 = bitcast i8* %38 to i32*
  store i32 0, i32* %39, align 4, !tbaa !10
  tail call void @llvm.memset.p0i8.i64(i8* %32, i8 0, i64 16, i32 8, i1 false) #1
  %40 = tail call i8* @luaM_realloc_(%struct.lua_State* %L, i8* null, i64 0, i64 320) #1
  %41 = bitcast i8* %34 to i8**
  store i8* %40, i8** %41, align 8, !tbaa !32
  %42 = bitcast i8* %32 to i8**
  store i8* %40, i8** %42, align 8, !tbaa !13
  store i32 8, i32* %26, align 4, !tbaa !146
  %43 = getelementptr inbounds i8, i8* %40, i64 280
  %44 = getelementptr inbounds i8, i8* %1, i64 72
  %45 = bitcast i8* %44 to i8**
  store i8* %43, i8** %45, align 8, !tbaa !147
  %46 = tail call i8* @luaM_realloc_(%struct.lua_State* %L, i8* null, i64 0, i64 720) #1
  %47 = bitcast i8* %9 to i8**
  store i8* %46, i8** %47, align 8, !tbaa !50
  store i32 45, i32* %12, align 4, !tbaa !149
  %.cast.i = ptrtoint i8* %46 to i64
  %48 = getelementptr inbounds i8, i8* %1, i64 16
  %49 = getelementptr inbounds i8, i8* %46, i64 624
  %50 = getelementptr inbounds i8, i8* %1, i64 56
  %51 = bitcast i8* %50 to i8**
  store i8* %49, i8** %51, align 8, !tbaa !12
  %52 = load %struct.CallInfo*, %struct.CallInfo** %33, align 8, !tbaa !13
  %53 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %52, i64 0, i32 1
  %54 = bitcast %struct.lua_TValue** %53 to i64*
  store i64 %.cast.i, i64* %54, align 8, !tbaa !28
  %55 = getelementptr inbounds i8, i8* %46, i64 16
  %56 = bitcast i8* %48 to i8**
  store i8* %55, i8** %56, align 8, !tbaa !1
  %57 = getelementptr inbounds i8, i8* %46, i64 8
  %58 = bitcast i8* %57 to i32*
  store i32 0, i32* %58, align 4, !tbaa !10
  %59 = ptrtoint i8* %55 to i64
  %60 = bitcast %struct.CallInfo* %52 to i64*
  store i64 %59, i64* %60, align 8, !tbaa !132
  %61 = getelementptr inbounds i8, i8* %1, i64 24
  %62 = bitcast i8* %61 to i64*
  store i64 %59, i64* %62, align 8, !tbaa !11
  %63 = getelementptr inbounds i8, i8* %46, i64 336
  %64 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %52, i64 0, i32 2
  %65 = bitcast %struct.lua_TValue** %64 to i8**
  store i8* %63, i8** %65, align 8, !tbaa !14
  %66 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 22
  %67 = getelementptr inbounds i8, i8* %1, i64 120
  %68 = bitcast %struct.lua_TValue* %66 to i64*
  %69 = bitcast i8* %67 to i64*
  %70 = load i64, i64* %68, align 8
  store i64 %70, i64* %69, align 8
  %71 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 22, i32 1
  %72 = load i32, i32* %71, align 4, !tbaa !10
  store i32 %72, i32* %39, align 4, !tbaa !10
  %73 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 17
  %74 = load i8, i8* %73, align 1, !tbaa !127
  store i8 %74, i8* %17, align 1, !tbaa !127
  %75 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 19
  %76 = load i32, i32* %75, align 4, !tbaa !125
  store i32 %76, i32* %19, align 4, !tbaa !125
  %77 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 21
  %78 = bitcast void (%struct.lua_State*, %struct.lua_Debug*)** %77 to i64*
  %79 = load i64, i64* %78, align 8, !tbaa !124
  %80 = bitcast i8* %15 to i64*
  store i64 %79, i64* %80, align 8, !tbaa !124
  store i32 %76, i32* %22, align 4, !tbaa !126
  ret %struct.lua_State* %2
}

; Function Attrs: nounwind uwtable
define hidden void @luaE_freethread(%struct.lua_State* %L, %struct.lua_State* %L1) #0 {
  %1 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L1, i64 0, i32 10
  %2 = load %struct.lua_TValue*, %struct.lua_TValue** %1, align 8, !tbaa !50
  tail call void bitcast (void (%struct.lua_State.115*, %struct.lua_TValue.101*)* @luaF_close to void (%struct.lua_State*, %struct.lua_TValue*)*)(%struct.lua_State* %L1, %struct.lua_TValue* %2) #1
  %3 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L1, i64 0, i32 12
  %4 = bitcast %struct.CallInfo** %3 to i8**
  %5 = load i8*, i8** %4, align 8, !tbaa !32
  %6 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L1, i64 0, i32 14
  %7 = load i32, i32* %6, align 4, !tbaa !146
  %8 = sext i32 %7 to i64
  %9 = mul nsw i64 %8, 40
  %10 = tail call i8* @luaM_realloc_(%struct.lua_State* %L, i8* %5, i64 %9, i64 0) #1
  %11 = bitcast %struct.lua_TValue** %1 to i8**
  %12 = load i8*, i8** %11, align 8, !tbaa !50
  %13 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L1, i64 0, i32 13
  %14 = load i32, i32* %13, align 4, !tbaa !149
  %15 = sext i32 %14 to i64
  %16 = shl nsw i64 %15, 4
  %17 = tail call i8* @luaM_realloc_(%struct.lua_State* %L, i8* %12, i64 %16, i64 0) #1
  %18 = bitcast %struct.lua_State* %L1 to i8*
  %19 = tail call i8* @luaM_realloc_(%struct.lua_State* %L, i8* %18, i64 184, i64 0) #1
  ret void
}

; Function Attrs: nounwind uwtable
define %struct.lua_State* @lua_newstate(i8* (i8*, i8*, i64, i64)* %f, i8* %ud) #0 {
  %1 = tail call i8* %f(i8* %ud, i8* null, i64 0, i64 616) #1
  %2 = icmp eq i8* %1, null
  br i1 %2, label %115, label %3

; <label>:3                                       ; preds = %0
  %4 = getelementptr inbounds i8, i8* %1, i64 184
  %5 = bitcast i8* %1 to %union.GCObject**
  store %union.GCObject* null, %union.GCObject** %5, align 8, !tbaa !202
  %6 = getelementptr inbounds i8, i8* %1, i64 8
  store i8 8, i8* %6, align 1, !tbaa !273
  %7 = getelementptr inbounds i8, i8* %1, i64 216
  store i8 33, i8* %7, align 1, !tbaa !179
  %8 = getelementptr inbounds i8, i8* %1, i64 9
  store i8 97, i8* %8, align 1, !tbaa !274
  %9 = getelementptr inbounds i8, i8* %1, i64 32
  %10 = bitcast i8* %9 to i8**
  store i8* %4, i8** %10, align 8, !tbaa !17
  %11 = getelementptr inbounds i8, i8* %1, i64 64
  %12 = bitcast i8* %11 to %struct.lua_TValue**
  store %struct.lua_TValue* null, %struct.lua_TValue** %12, align 8, !tbaa !50
  %13 = getelementptr inbounds i8, i8* %1, i64 88
  %14 = bitcast i8* %13 to i32*
  store i32 0, i32* %14, align 4, !tbaa !149
  %15 = getelementptr inbounds i8, i8* %1, i64 168
  %16 = bitcast i8* %15 to %struct.lua_longjmp**
  store %struct.lua_longjmp* null, %struct.lua_longjmp** %16, align 8, !tbaa !141
  %17 = getelementptr inbounds i8, i8* %1, i64 112
  %18 = bitcast i8* %17 to void (%struct.lua_State*, %struct.lua_Debug*)**
  store void (%struct.lua_State*, %struct.lua_Debug*)* null, void (%struct.lua_State*, %struct.lua_Debug*)** %18, align 8, !tbaa !124
  %19 = getelementptr inbounds i8, i8* %1, i64 100
  store i8 0, i8* %19, align 1, !tbaa !127
  %20 = getelementptr inbounds i8, i8* %1, i64 104
  %21 = bitcast i8* %20 to i32*
  store i32 0, i32* %21, align 4, !tbaa !125
  %22 = getelementptr inbounds i8, i8* %1, i64 101
  store i8 1, i8* %22, align 1, !tbaa !145
  %23 = getelementptr inbounds i8, i8* %1, i64 108
  %24 = bitcast i8* %23 to i32*
  store i32 0, i32* %24, align 4, !tbaa !126
  %25 = getelementptr inbounds i8, i8* %1, i64 152
  %26 = bitcast i8* %25 to %union.GCObject**
  store %union.GCObject* null, %union.GCObject** %26, align 8, !tbaa !186
  %27 = getelementptr inbounds i8, i8* %1, i64 92
  %28 = bitcast i8* %27 to i32*
  store i32 0, i32* %28, align 4, !tbaa !146
  %29 = getelementptr inbounds i8, i8* %1, i64 98
  %30 = bitcast i8* %29 to i16*
  store i16 0, i16* %30, align 2, !tbaa !144
  %31 = getelementptr inbounds i8, i8* %1, i64 96
  %32 = bitcast i8* %31 to i16*
  store i16 0, i16* %32, align 2, !tbaa !16
  %33 = getelementptr inbounds i8, i8* %1, i64 10
  store i8 0, i8* %33, align 1, !tbaa !59
  %34 = getelementptr inbounds i8, i8* %1, i64 40
  %35 = getelementptr inbounds i8, i8* %1, i64 80
  %36 = bitcast i8* %35 to %struct.CallInfo**
  store %struct.CallInfo* null, %struct.CallInfo** %36, align 8, !tbaa !32
  %37 = getelementptr inbounds i8, i8* %1, i64 176
  %38 = bitcast i8* %37 to i64*
  store i64 0, i64* %38, align 8, !tbaa !135
  %39 = getelementptr inbounds i8, i8* %1, i64 128
  %40 = bitcast i8* %39 to i32*
  store i32 0, i32* %40, align 4, !tbaa !10
  tail call void @llvm.memset.p0i8.i64(i8* %34, i8 0, i64 16, i32 8, i1 false) #1
  %41 = getelementptr inbounds i8, i8* %1, i64 200
  %42 = bitcast i8* %41 to i8* (i8*, i8*, i64, i64)**
  store i8* (i8*, i8*, i64, i64)* %f, i8* (i8*, i8*, i64, i64)** %42, align 8, !tbaa !64
  %43 = getelementptr inbounds i8, i8* %1, i64 208
  %44 = bitcast i8* %43 to i8**
  store i8* %ud, i8** %44, align 8, !tbaa !63
  %45 = getelementptr inbounds i8, i8* %1, i64 360
  %46 = bitcast i8* %45 to i8**
  store i8* %1, i8** %46, align 8, !tbaa !45
  %47 = getelementptr inbounds i8, i8* %1, i64 368
  %48 = getelementptr inbounds i8, i8* %1, i64 392
  %49 = bitcast i8* %48 to i8**
  store i8* %47, i8** %49, align 8, !tbaa !183
  %50 = getelementptr inbounds i8, i8* %1, i64 400
  %51 = bitcast i8* %50 to i8**
  store i8* %47, i8** %51, align 8, !tbaa !185
  %52 = getelementptr inbounds i8, i8* %1, i64 296
  %53 = bitcast i8* %52 to i64*
  store i64 0, i64* %53, align 8, !tbaa !24
  %54 = bitcast i8* %9 to %struct.global_State**
  %55 = getelementptr inbounds i8, i8* %1, i64 352
  %56 = bitcast i8* %55 to i32*
  call void @llvm.memset.p0i8.i64(i8* %4, i8 0, i64 16, i32 8, i1 false)
  store i32 0, i32* %56, align 4, !tbaa !10
  %57 = getelementptr inbounds i8, i8* %1, i64 272
  %58 = bitcast i8* %57 to i8**
  store i8* null, i8** %58, align 8, !tbaa !157
  %59 = getelementptr inbounds i8, i8* %1, i64 288
  %60 = bitcast i8* %59 to i64*
  store i64 0, i64* %60, align 8, !tbaa !158
  %61 = getelementptr inbounds i8, i8* %1, i64 336
  %62 = bitcast i8* %61 to i32 (%struct.lua_State*)**
  store i32 (%struct.lua_State*)* null, i32 (%struct.lua_State*)** %62, align 8, !tbaa !18
  %63 = getelementptr inbounds i8, i8* %1, i64 217
  store i8 0, i8* %63, align 1, !tbaa !60
  %64 = getelementptr inbounds i8, i8* %1, i64 224
  %65 = bitcast i8* %64 to i8**
  store i8* %1, i8** %65, align 8, !tbaa !199
  %66 = getelementptr inbounds i8, i8* %1, i64 220
  %67 = bitcast i8* %66 to i32*
  store i32 0, i32* %67, align 4, !tbaa !195
  %68 = getelementptr inbounds i8, i8* %1, i64 232
  %69 = bitcast i8* %68 to i8**
  store i8* %64, i8** %69, align 8, !tbaa !196
  %70 = getelementptr inbounds i8, i8* %1, i64 240
  %71 = getelementptr inbounds i8, i8* %1, i64 304
  %72 = bitcast i8* %71 to i64*
  call void @llvm.memset.p0i8.i64(i8* %70, i8 0, i64 32, i32 8, i1 false)
  store i64 616, i64* %72, align 8, !tbaa !23
  %73 = getelementptr inbounds i8, i8* %1, i64 328
  %74 = bitcast i8* %73 to i32*
  store i32 200, i32* %74, align 4, !tbaa !61
  %75 = getelementptr inbounds i8, i8* %1, i64 332
  %76 = bitcast i8* %75 to i32*
  store i32 200, i32* %76, align 4, !tbaa !62
  %77 = getelementptr inbounds i8, i8* %1, i64 320
  %78 = bitcast i8* %77 to i64*
  store i64 0, i64* %78, align 8, !tbaa !193
  %scevgep = getelementptr i8, i8* %1, i64 408
  call void @llvm.memset.p0i8.i64(i8* %scevgep, i8 0, i64 72, i32 8, i1 false)
  %79 = bitcast i8* %1 to %struct.lua_State*
  %80 = tail call i32 @luaD_rawrunprotected(%struct.lua_State* %79, void (%struct.lua_State*, i8*)* nonnull @f_luaopen, i8* null) #1
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %115, label %82

; <label>:82                                      ; preds = %3
  %83 = load %struct.global_State*, %struct.global_State** %54, align 8, !tbaa !17
  %84 = load %struct.lua_TValue*, %struct.lua_TValue** %12, align 8, !tbaa !50
  tail call void bitcast (void (%struct.lua_State.115*, %struct.lua_TValue.101*)* @luaF_close to void (%struct.lua_State*, %struct.lua_TValue*)*)(%struct.lua_State* %79, %struct.lua_TValue* %84) #1
  tail call void @luaC_freeall(%struct.lua_State* %79) #1
  %85 = load %struct.global_State*, %struct.global_State** %54, align 8, !tbaa !17
  %86 = bitcast %struct.global_State* %85 to i8**
  %87 = load i8*, i8** %86, align 8, !tbaa !192
  %88 = getelementptr inbounds %struct.global_State, %struct.global_State* %85, i64 0, i32 0, i32 2
  %89 = load i32, i32* %88, align 4, !tbaa !191
  %90 = sext i32 %89 to i64
  %91 = shl nsw i64 %90, 3
  %92 = tail call i8* @luaM_realloc_(%struct.lua_State* %79, i8* %87, i64 %91, i64 0) #1
  %93 = getelementptr inbounds %struct.global_State, %struct.global_State* %83, i64 0, i32 12, i32 0
  %94 = load i8*, i8** %93, align 8, !tbaa !157
  %95 = getelementptr inbounds %struct.global_State, %struct.global_State* %83, i64 0, i32 12, i32 2
  %96 = load i64, i64* %95, align 8, !tbaa !158
  %97 = tail call i8* @luaM_realloc_(%struct.lua_State* %79, i8* %94, i64 %96, i64 0) #1
  store i8* %97, i8** %93, align 8, !tbaa !157
  store i64 0, i64* %95, align 8, !tbaa !158
  %98 = bitcast i8* %35 to i8**
  %99 = load i8*, i8** %98, align 8, !tbaa !32
  %100 = load i32, i32* %28, align 4, !tbaa !146
  %101 = sext i32 %100 to i64
  %102 = mul nsw i64 %101, 40
  %103 = tail call i8* @luaM_realloc_(%struct.lua_State* %79, i8* %99, i64 %102, i64 0) #1
  %104 = bitcast i8* %11 to i8**
  %105 = load i8*, i8** %104, align 8, !tbaa !50
  %106 = load i32, i32* %14, align 4, !tbaa !149
  %107 = sext i32 %106 to i64
  %108 = shl nsw i64 %107, 4
  %109 = tail call i8* @luaM_realloc_(%struct.lua_State* %79, i8* %105, i64 %108, i64 0) #1
  %110 = getelementptr inbounds %struct.global_State, %struct.global_State* %83, i64 0, i32 1
  %111 = load i8* (i8*, i8*, i64, i64)*, i8* (i8*, i8*, i64, i64)** %110, align 8, !tbaa !64
  %112 = getelementptr inbounds %struct.global_State, %struct.global_State* %83, i64 0, i32 2
  %113 = load i8*, i8** %112, align 8, !tbaa !63
  %114 = tail call i8* %111(i8* %113, i8* %1, i64 616, i64 0) #1
  br label %115

; <label>:115                                     ; preds = %82, %3, %0
  %.0 = phi %struct.lua_State* [ null, %0 ], [ null, %82 ], [ %79, %3 ]
  ret %struct.lua_State* %.0
}

; Function Attrs: nounwind uwtable
define void @lua_close(%struct.lua_State* nocapture readonly %L) #0 {
  %1 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 6
  %2 = load %struct.global_State*, %struct.global_State** %1, align 8, !tbaa !17
  %3 = getelementptr inbounds %struct.global_State, %struct.global_State* %2, i64 0, i32 21
  %4 = load %struct.lua_State*, %struct.lua_State** %3, align 8, !tbaa !45
  %5 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %4, i64 0, i32 10
  %6 = load %struct.lua_TValue*, %struct.lua_TValue** %5, align 8, !tbaa !50
  tail call void bitcast (void (%struct.lua_State.115*, %struct.lua_TValue.101*)* @luaF_close to void (%struct.lua_State*, %struct.lua_TValue*)*)(%struct.lua_State* %4, %struct.lua_TValue* %6) #1
  %7 = tail call i64 @luaC_separateudata(%struct.lua_State* %4, i32 1) #1
  %8 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %4, i64 0, i32 27
  store i64 0, i64* %8, align 8, !tbaa !135
  %9 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %4, i64 0, i32 12
  %10 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %4, i64 0, i32 7
  %11 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %4, i64 0, i32 4
  %12 = bitcast %struct.lua_TValue** %11 to i64*
  %13 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %4, i64 0, i32 5
  %14 = bitcast %struct.lua_TValue** %13 to i64*
  %15 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %4, i64 0, i32 16
  %16 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %4, i64 0, i32 15
  br label %17

; <label>:17                                      ; preds = %17, %0
  %18 = load %struct.CallInfo*, %struct.CallInfo** %9, align 8, !tbaa !32
  store %struct.CallInfo* %18, %struct.CallInfo** %10, align 8, !tbaa !13
  %19 = bitcast %struct.CallInfo* %18 to i64*
  %20 = load i64, i64* %19, align 8, !tbaa !132
  store i64 %20, i64* %12, align 8, !tbaa !1
  store i64 %20, i64* %14, align 8, !tbaa !11
  store i16 0, i16* %15, align 2, !tbaa !144
  store i16 0, i16* %16, align 2, !tbaa !16
  %21 = tail call i32 @luaD_rawrunprotected(%struct.lua_State* %4, void (%struct.lua_State*, i8*)* nonnull @callallgcTM, i8* null) #1
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %17

; <label>:23                                      ; preds = %17
  %24 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %4, i64 0, i32 6
  %25 = load %struct.global_State*, %struct.global_State** %24, align 8, !tbaa !17
  %26 = load %struct.lua_TValue*, %struct.lua_TValue** %5, align 8, !tbaa !50
  tail call void bitcast (void (%struct.lua_State.115*, %struct.lua_TValue.101*)* @luaF_close to void (%struct.lua_State*, %struct.lua_TValue*)*)(%struct.lua_State* %4, %struct.lua_TValue* %26) #1
  tail call void @luaC_freeall(%struct.lua_State* %4) #1
  %27 = load %struct.global_State*, %struct.global_State** %24, align 8, !tbaa !17
  %28 = bitcast %struct.global_State* %27 to i8**
  %29 = load i8*, i8** %28, align 8, !tbaa !192
  %30 = getelementptr inbounds %struct.global_State, %struct.global_State* %27, i64 0, i32 0, i32 2
  %31 = load i32, i32* %30, align 4, !tbaa !191
  %32 = sext i32 %31 to i64
  %33 = shl nsw i64 %32, 3
  %34 = tail call i8* @luaM_realloc_(%struct.lua_State* %4, i8* %29, i64 %33, i64 0) #1
  %35 = getelementptr inbounds %struct.global_State, %struct.global_State* %25, i64 0, i32 12, i32 0
  %36 = load i8*, i8** %35, align 8, !tbaa !157
  %37 = getelementptr inbounds %struct.global_State, %struct.global_State* %25, i64 0, i32 12, i32 2
  %38 = load i64, i64* %37, align 8, !tbaa !158
  %39 = tail call i8* @luaM_realloc_(%struct.lua_State* %4, i8* %36, i64 %38, i64 0) #1
  store i8* %39, i8** %35, align 8, !tbaa !157
  store i64 0, i64* %37, align 8, !tbaa !158
  %40 = bitcast %struct.CallInfo** %9 to i8**
  %41 = load i8*, i8** %40, align 8, !tbaa !32
  %42 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %4, i64 0, i32 14
  %43 = load i32, i32* %42, align 4, !tbaa !146
  %44 = sext i32 %43 to i64
  %45 = mul nsw i64 %44, 40
  %46 = tail call i8* @luaM_realloc_(%struct.lua_State* %4, i8* %41, i64 %45, i64 0) #1
  %47 = bitcast %struct.lua_TValue** %5 to i8**
  %48 = load i8*, i8** %47, align 8, !tbaa !50
  %49 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %4, i64 0, i32 13
  %50 = load i32, i32* %49, align 4, !tbaa !149
  %51 = sext i32 %50 to i64
  %52 = shl nsw i64 %51, 4
  %53 = tail call i8* @luaM_realloc_(%struct.lua_State* %4, i8* %48, i64 %52, i64 0) #1
  %54 = getelementptr inbounds %struct.global_State, %struct.global_State* %25, i64 0, i32 1
  %55 = load i8* (i8*, i8*, i64, i64)*, i8* (i8*, i8*, i64, i64)** %54, align 8, !tbaa !64
  %56 = getelementptr inbounds %struct.global_State, %struct.global_State* %25, i64 0, i32 2
  %57 = load i8*, i8** %56, align 8, !tbaa !63
  %58 = bitcast %struct.lua_State* %4 to i8*
  %59 = tail call i8* %55(i8* %57, i8* %58, i64 616, i64 0) #1
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @f_luaopen(%struct.lua_State* %L, i8* nocapture readnone %ud) #0 {
  %1 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 6
  %2 = load %struct.global_State*, %struct.global_State** %1, align 8, !tbaa !17
  %3 = tail call i8* @luaM_realloc_(%struct.lua_State* %L, i8* null, i64 0, i64 320) #1
  %4 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 12
  %5 = bitcast %struct.CallInfo** %4 to i8**
  store i8* %3, i8** %5, align 8, !tbaa !32
  %6 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 7
  %7 = bitcast %struct.CallInfo** %6 to i8**
  store i8* %3, i8** %7, align 8, !tbaa !13
  %8 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 14
  store i32 8, i32* %8, align 4, !tbaa !146
  %9 = getelementptr inbounds i8, i8* %3, i64 280
  %10 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 11
  %11 = bitcast %struct.CallInfo** %10 to i8**
  store i8* %9, i8** %11, align 8, !tbaa !147
  %12 = tail call i8* @luaM_realloc_(%struct.lua_State* %L, i8* null, i64 0, i64 720) #1
  %13 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 10
  %14 = bitcast %struct.lua_TValue** %13 to i8**
  store i8* %12, i8** %14, align 8, !tbaa !50
  %15 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 13
  store i32 45, i32* %15, align 4, !tbaa !149
  %.cast.i = ptrtoint i8* %12 to i64
  %16 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 4
  %17 = getelementptr inbounds i8, i8* %12, i64 624
  %18 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 9
  %19 = bitcast %struct.lua_TValue** %18 to i8**
  store i8* %17, i8** %19, align 8, !tbaa !12
  %20 = load %struct.CallInfo*, %struct.CallInfo** %6, align 8, !tbaa !13
  %21 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %20, i64 0, i32 1
  %22 = bitcast %struct.lua_TValue** %21 to i64*
  store i64 %.cast.i, i64* %22, align 8, !tbaa !28
  %23 = getelementptr inbounds i8, i8* %12, i64 16
  %24 = bitcast %struct.lua_TValue** %16 to i8**
  store i8* %23, i8** %24, align 8, !tbaa !1
  %25 = getelementptr inbounds i8, i8* %12, i64 8
  %26 = bitcast i8* %25 to i32*
  store i32 0, i32* %26, align 4, !tbaa !10
  %27 = ptrtoint i8* %23 to i64
  %28 = bitcast %struct.CallInfo* %20 to i64*
  store i64 %27, i64* %28, align 8, !tbaa !132
  %29 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 5
  %30 = bitcast %struct.lua_TValue** %29 to i64*
  store i64 %27, i64* %30, align 8, !tbaa !11
  %31 = getelementptr inbounds i8, i8* %12, i64 336
  %32 = getelementptr inbounds %struct.CallInfo, %struct.CallInfo* %20, i64 0, i32 2
  %33 = bitcast %struct.lua_TValue** %32 to i8**
  store i8* %31, i8** %33, align 8, !tbaa !14
  %34 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 22
  %35 = tail call %struct.Table* @luaH_new(%struct.lua_State* %L, i32 0, i32 2) #1
  %36 = bitcast %struct.lua_TValue* %34 to %struct.Table**
  store %struct.Table* %35, %struct.Table** %36, align 8, !tbaa !25
  %37 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 22, i32 1
  store i32 5, i32* %37, align 4, !tbaa !10
  %38 = load %struct.global_State*, %struct.global_State** %1, align 8, !tbaa !17
  %39 = getelementptr inbounds %struct.global_State, %struct.global_State* %38, i64 0, i32 20
  %40 = tail call %struct.Table* @luaH_new(%struct.lua_State* %L, i32 0, i32 2) #1
  %41 = bitcast %struct.lua_TValue* %39 to %struct.Table**
  store %struct.Table* %40, %struct.Table** %41, align 8, !tbaa !25
  %42 = getelementptr inbounds %struct.global_State, %struct.global_State* %38, i64 0, i32 20, i32 1
  store i32 5, i32* %42, align 4, !tbaa !10
  tail call void @luaS_resize(%struct.lua_State* %L, i32 32) #1
  tail call void @luaT_init(%struct.lua_State* %L) #1
  tail call void @luaX_init(%struct.lua_State* %L) #1
  %43 = tail call %union.TString* @luaS_newlstr(%struct.lua_State* %L, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.542, i64 0, i64 0), i64 17) #1
  %44 = getelementptr inbounds %union.TString, %union.TString* %43, i64 0, i32 0, i32 2
  %45 = load i8, i8* %44, align 1, !tbaa !209
  %46 = or i8 %45, 32
  store i8 %46, i8* %44, align 1, !tbaa !209
  %47 = getelementptr inbounds %struct.global_State, %struct.global_State* %2, i64 0, i32 14
  %48 = load i64, i64* %47, align 8, !tbaa !23
  %49 = shl i64 %48, 2
  %50 = getelementptr inbounds %struct.global_State, %struct.global_State* %2, i64 0, i32 13
  store i64 %49, i64* %50, align 8, !tbaa !24
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @callallgcTM(%struct.lua_State* %L, i8* nocapture readnone %ud) #0 {
  tail call void @luaC_callGCTM(%struct.lua_State* %L) #1
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @luaS_resize(%struct.lua_State* %L, i32 %newsize) #0 {
  %1 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 6
  %2 = load %struct.global_State*, %struct.global_State** %1, align 8, !tbaa !17
  %3 = getelementptr inbounds %struct.global_State, %struct.global_State* %2, i64 0, i32 4
  %4 = load i8, i8* %3, align 1, !tbaa !60
  %5 = icmp eq i8 %4, 2
  br i1 %5, label %53, label %6

; <label>:6                                       ; preds = %0
  %7 = icmp sgt i32 %newsize, -2
  br i1 %7, label %11, label %.thread

.thread:                                          ; preds = %6
  %8 = tail call i8* @luaM_toobig(%struct.lua_State* %L) #1
  %9 = bitcast i8* %8 to %union.GCObject**
  %10 = load %struct.global_State*, %struct.global_State** %1, align 8, !tbaa !17
  br label %.preheader

; <label>:11                                      ; preds = %6
  %12 = sext i32 %newsize to i64
  %13 = shl nsw i64 %12, 3
  %14 = tail call i8* @luaM_realloc_(%struct.lua_State* %L, i8* null, i64 0, i64 %13) #1
  %15 = bitcast i8* %14 to %union.GCObject**
  %16 = load %struct.global_State*, %struct.global_State** %1, align 8, !tbaa !17
  %17 = icmp sgt i32 %newsize, 0
  br i1 %17, label %.lr.ph9, label %.preheader

.lr.ph9:                                          ; preds = %11
  %18 = add i32 %newsize, -1
  %19 = zext i32 %18 to i64
  %20 = shl nuw nsw i64 %19, 3
  %21 = add nuw nsw i64 %20, 8
  call void @llvm.memset.p0i8.i64(i8* %14, i8 0, i64 %21, i32 8, i1 false)
  br label %.preheader

.preheader:                                       ; preds = %.thread, %.lr.ph9, %11
  %22 = phi %struct.global_State* [ %10, %.thread ], [ %16, %.lr.ph9 ], [ %16, %11 ]
  %23 = phi %union.GCObject** [ %9, %.thread ], [ %15, %.lr.ph9 ], [ %15, %11 ]
  %24 = phi i8* [ %8, %.thread ], [ %14, %.lr.ph9 ], [ %14, %11 ]
  %25 = getelementptr inbounds %struct.global_State, %struct.global_State* %22, i64 0, i32 0, i32 2
  %26 = load i32, i32* %25, align 4, !tbaa !275
  %27 = icmp sgt i32 %26, 0
  br i1 %27, label %.lr.ph4, label %.preheader._crit_edge

.preheader._crit_edge:                            ; preds = %.preheader
  %.pre = sext i32 %26 to i64
  br label %._crit_edge.5

.lr.ph4:                                          ; preds = %.preheader
  %28 = getelementptr inbounds %struct.global_State, %struct.global_State* %22, i64 0, i32 0, i32 0
  %29 = add nsw i32 %newsize, -1
  %30 = sext i32 %26 to i64
  br label %31

; <label>:31                                      ; preds = %.lr.ph4, %._crit_edge
  %indvars.iv = phi i64 [ 0, %.lr.ph4 ], [ %indvars.iv.next, %._crit_edge ]
  %32 = load %union.GCObject**, %union.GCObject*** %28, align 8, !tbaa !276
  %33 = getelementptr inbounds %union.GCObject*, %union.GCObject** %32, i64 %indvars.iv
  %34 = load %union.GCObject*, %union.GCObject** %33, align 8, !tbaa !25
  %35 = icmp eq %union.GCObject* %34, null
  br i1 %35, label %._crit_edge, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %31
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %.lr.ph
  %p.02 = phi %union.GCObject* [ %37, %.lr.ph ], [ %34, %.lr.ph.preheader ]
  %36 = getelementptr inbounds %union.GCObject, %union.GCObject* %p.02, i64 0, i32 0, i32 0
  %37 = load %union.GCObject*, %union.GCObject** %36, align 8, !tbaa !189
  %38 = bitcast %union.GCObject* %p.02 to %struct.anon.1*
  %39 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %38, i64 0, i32 4
  %40 = load i32, i32* %39, align 4, !tbaa !277
  %41 = and i32 %40, %29
  %42 = sext i32 %41 to i64
  %43 = getelementptr inbounds %union.GCObject*, %union.GCObject** %23, i64 %42
  %44 = bitcast %union.GCObject** %43 to i64*
  %45 = load i64, i64* %44, align 8, !tbaa !25
  %46 = bitcast %union.GCObject* %p.02 to i64*
  store i64 %45, i64* %46, align 8, !tbaa !189
  store %union.GCObject* %p.02, %union.GCObject** %43, align 8, !tbaa !25
  %47 = icmp eq %union.GCObject* %37, null
  br i1 %47, label %._crit_edge.loopexit, label %.lr.ph

._crit_edge.loopexit:                             ; preds = %.lr.ph
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %31
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %48 = icmp slt i64 %indvars.iv.next, %30
  br i1 %48, label %31, label %._crit_edge.5.loopexit

._crit_edge.5.loopexit:                           ; preds = %._crit_edge
  br label %._crit_edge.5

._crit_edge.5:                                    ; preds = %._crit_edge.5.loopexit, %.preheader._crit_edge
  %.pre-phi = phi i64 [ %.pre, %.preheader._crit_edge ], [ %30, %._crit_edge.5.loopexit ]
  %49 = bitcast %struct.global_State* %22 to i8**
  %50 = load i8*, i8** %49, align 8, !tbaa !276
  %51 = shl nsw i64 %.pre-phi, 3
  %52 = tail call i8* @luaM_realloc_(%struct.lua_State* %L, i8* %50, i64 %51, i64 0) #1
  store i32 %newsize, i32* %25, align 4, !tbaa !275
  store i8* %24, i8** %49, align 8, !tbaa !276
  br label %53

; <label>:53                                      ; preds = %0, %._crit_edge.5
  ret void
}

; Function Attrs: nounwind uwtable
define hidden %union.TString* @luaS_newlstr(%struct.lua_State* %L, i8* nocapture readonly %str, i64 %l) #0 {
  %1 = trunc i64 %l to i32
  %2 = lshr i64 %l, 5
  %3 = add nuw nsw i64 %2, 1
  %4 = icmp ugt i64 %3, %l
  br i1 %4, label %._crit_edge.10, label %.lr.ph9.preheader

.lr.ph9.preheader:                                ; preds = %0
  br label %.lr.ph9

.lr.ph9:                                          ; preds = %.lr.ph9.preheader, %.lr.ph9
  %l1.07 = phi i64 [ %14, %.lr.ph9 ], [ %l, %.lr.ph9.preheader ]
  %h.06 = phi i32 [ %13, %.lr.ph9 ], [ %1, %.lr.ph9.preheader ]
  %5 = shl i32 %h.06, 5
  %6 = lshr i32 %h.06, 2
  %7 = add i32 %5, %6
  %8 = add i64 %l1.07, -1
  %9 = getelementptr inbounds i8, i8* %str, i64 %8
  %10 = load i8, i8* %9, align 1, !tbaa !76
  %11 = zext i8 %10 to i32
  %12 = add i32 %7, %11
  %13 = xor i32 %12, %h.06
  %14 = sub i64 %l1.07, %3
  %15 = icmp ult i64 %14, %3
  br i1 %15, label %._crit_edge.10.loopexit, label %.lr.ph9

._crit_edge.10.loopexit:                          ; preds = %.lr.ph9
  %.lcssa = phi i32 [ %13, %.lr.ph9 ]
  br label %._crit_edge.10

._crit_edge.10:                                   ; preds = %._crit_edge.10.loopexit, %0
  %h.0.lcssa = phi i32 [ %1, %0 ], [ %.lcssa, %._crit_edge.10.loopexit ]
  %16 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 6
  %17 = load %struct.global_State*, %struct.global_State** %16, align 8, !tbaa !17
  %18 = getelementptr inbounds %struct.global_State, %struct.global_State* %17, i64 0, i32 0, i32 2
  %19 = load i32, i32* %18, align 4, !tbaa !191
  %20 = add nsw i32 %19, -1
  %21 = and i32 %20, %h.0.lcssa
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds %struct.global_State, %struct.global_State* %17, i64 0, i32 0, i32 0
  %24 = load %union.GCObject**, %union.GCObject*** %23, align 8, !tbaa !192
  %25 = getelementptr inbounds %union.GCObject*, %union.GCObject** %24, i64 %22
  %o.0.4 = load %union.GCObject*, %union.GCObject** %25, align 8
  %26 = icmp eq %union.GCObject* %o.0.4, null
  br i1 %26, label %._crit_edge, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %._crit_edge.10
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %50
  %o.05 = phi %union.GCObject* [ %o.0, %50 ], [ %o.0.4, %.lr.ph.preheader ]
  %27 = getelementptr inbounds %union.GCObject, %union.GCObject* %o.05, i64 0, i32 0, i32 4
  %28 = bitcast %struct.lua_TValue** %27 to i64*
  %29 = load i64, i64* %28, align 8, !tbaa !40
  %30 = icmp eq i64 %29, %l
  br i1 %30, label %31, label %50

; <label>:31                                      ; preds = %.lr.ph
  %32 = getelementptr inbounds %union.GCObject, %union.GCObject* %o.05, i64 0, i32 0, i32 5
  %33 = bitcast %struct.lua_TValue** %32 to i8*
  %34 = tail call i32 @memcmp(i8* %str, i8* %33, i64 %l) #11
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %50

; <label>:36                                      ; preds = %31
  %o.05.lcssa = phi %union.GCObject* [ %o.05, %31 ]
  %37 = bitcast %union.GCObject* %o.05.lcssa to %union.TString*
  %38 = getelementptr inbounds %union.GCObject, %union.GCObject* %o.05.lcssa, i64 0, i32 0, i32 2
  %39 = load i8, i8* %38, align 1, !tbaa !33
  %40 = zext i8 %39 to i32
  %41 = getelementptr inbounds %struct.global_State, %struct.global_State* %17, i64 0, i32 3
  %42 = load i8, i8* %41, align 1, !tbaa !179
  %43 = zext i8 %42 to i32
  %44 = xor i32 %43, 3
  %45 = and i32 %40, 3
  %46 = and i32 %45, %44
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %newlstr.exit, label %48

; <label>:48                                      ; preds = %36
  %49 = xor i8 %39, 3
  store i8 %49, i8* %38, align 1, !tbaa !33
  br label %newlstr.exit

; <label>:50                                      ; preds = %31, %.lr.ph
  %51 = getelementptr inbounds %union.GCObject, %union.GCObject* %o.05, i64 0, i32 0, i32 0
  %o.0 = load %union.GCObject*, %union.GCObject** %51, align 8
  %52 = icmp eq %union.GCObject* %o.0, null
  br i1 %52, label %._crit_edge.loopexit, label %.lr.ph

._crit_edge.loopexit:                             ; preds = %50
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %._crit_edge.10
  %53 = add i64 %l, 1
  %54 = icmp ugt i64 %53, -27
  br i1 %54, label %55, label %57

; <label>:55                                      ; preds = %._crit_edge
  %56 = tail call i8* @luaM_toobig(%struct.lua_State* %L) #1
  br label %57

; <label>:57                                      ; preds = %55, %._crit_edge
  %58 = add i64 %l, 25
  %59 = tail call i8* @luaM_realloc_(%struct.lua_State* %L, i8* null, i64 0, i64 %58) #1
  %60 = bitcast i8* %59 to %union.TString*
  %61 = getelementptr inbounds i8, i8* %59, i64 16
  %62 = bitcast i8* %61 to i64*
  store i64 %l, i64* %62, align 8, !tbaa !40
  %63 = getelementptr inbounds i8, i8* %59, i64 12
  %64 = bitcast i8* %63 to i32*
  store i32 %h.0.lcssa, i32* %64, align 4, !tbaa !277
  %65 = load %struct.global_State*, %struct.global_State** %16, align 8, !tbaa !17
  %66 = getelementptr inbounds %struct.global_State, %struct.global_State* %65, i64 0, i32 3
  %67 = load i8, i8* %66, align 1, !tbaa !179
  %68 = and i8 %67, 3
  %69 = getelementptr inbounds i8, i8* %59, i64 9
  store i8 %68, i8* %69, align 1, !tbaa !209
  %70 = getelementptr inbounds i8, i8* %59, i64 8
  store i8 4, i8* %70, align 1, !tbaa !278
  %71 = getelementptr inbounds i8, i8* %59, i64 10
  store i8 0, i8* %71, align 1, !tbaa !217
  %72 = getelementptr inbounds i8, i8* %59, i64 24
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %72, i8* %str, i64 %l, i32 1, i1 false) #1
  %73 = getelementptr inbounds i8, i8* %72, i64 %l
  store i8 0, i8* %73, align 1, !tbaa !76
  %74 = load %struct.global_State*, %struct.global_State** %16, align 8, !tbaa !17
  %75 = getelementptr inbounds %struct.global_State, %struct.global_State* %74, i64 0, i32 0, i32 2
  %76 = load i32, i32* %75, align 4, !tbaa !275
  %77 = add nsw i32 %76, -1
  %78 = and i32 %77, %h.0.lcssa
  %79 = zext i32 %78 to i64
  %80 = getelementptr inbounds %struct.global_State, %struct.global_State* %74, i64 0, i32 0, i32 0
  %81 = load %union.GCObject**, %union.GCObject*** %80, align 8, !tbaa !276
  %82 = getelementptr inbounds %union.GCObject*, %union.GCObject** %81, i64 %79
  %83 = bitcast %union.GCObject** %82 to i64*
  %84 = load i64, i64* %83, align 8, !tbaa !25
  %85 = bitcast i8* %59 to i64*
  store i64 %84, i64* %85, align 8, !tbaa !279
  %86 = bitcast %union.GCObject** %82 to i8**
  store i8* %59, i8** %86, align 8, !tbaa !25
  %87 = getelementptr inbounds %struct.global_State, %struct.global_State* %74, i64 0, i32 0, i32 1
  %88 = load i32, i32* %87, align 4, !tbaa !280
  %89 = add i32 %88, 1
  store i32 %89, i32* %87, align 4, !tbaa !280
  %90 = icmp ugt i32 %89, %76
  %91 = icmp slt i32 %76, 1073741823
  %or.cond.i = and i1 %91, %90
  br i1 %or.cond.i, label %92, label %newlstr.exit

; <label>:92                                      ; preds = %57
  %93 = shl nsw i32 %76, 1
  tail call void @luaS_resize(%struct.lua_State* %L, i32 %93) #1
  br label %newlstr.exit

newlstr.exit:                                     ; preds = %92, %57, %36, %48
  %.2 = phi %union.TString* [ %37, %36 ], [ %37, %48 ], [ %60, %57 ], [ %60, %92 ]
  ret %union.TString* %.2
}

; Function Attrs: nounwind readonly
declare i32 @memcmp(i8* nocapture, i8* nocapture, i64) #4

; Function Attrs: nounwind uwtable
define hidden %union.Udata* @luaS_newudata(%struct.lua_State* %L, i64 %s, %struct.Table* %e) #0 {
  %1 = icmp ugt i64 %s, -43
  br i1 %1, label %2, label %4

; <label>:2                                       ; preds = %0
  %3 = tail call i8* @luaM_toobig(%struct.lua_State* %L) #1
  br label %4

; <label>:4                                       ; preds = %2, %0
  %5 = add i64 %s, 40
  %6 = tail call i8* @luaM_realloc_(%struct.lua_State* %L, i8* null, i64 0, i64 %5) #1
  %7 = bitcast i8* %6 to %union.Udata*
  %8 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 6
  %9 = load %struct.global_State*, %struct.global_State** %8, align 8, !tbaa !17
  %10 = getelementptr inbounds %struct.global_State, %struct.global_State* %9, i64 0, i32 3
  %11 = load i8, i8* %10, align 1, !tbaa !179
  %12 = and i8 %11, 3
  %13 = getelementptr inbounds i8, i8* %6, i64 9
  store i8 %12, i8* %13, align 1, !tbaa !188
  %14 = getelementptr inbounds i8, i8* %6, i64 8
  store i8 7, i8* %14, align 1, !tbaa !281
  %15 = getelementptr inbounds i8, i8* %6, i64 32
  %16 = bitcast i8* %15 to i64*
  store i64 %s, i64* %16, align 8, !tbaa !42
  %17 = getelementptr inbounds i8, i8* %6, i64 16
  %18 = bitcast i8* %17 to %struct.Table**
  store %struct.Table* null, %struct.Table** %18, align 8, !tbaa !49
  %19 = getelementptr inbounds i8, i8* %6, i64 24
  %20 = bitcast i8* %19 to %struct.Table**
  store %struct.Table* %e, %struct.Table** %20, align 8, !tbaa !46
  %21 = getelementptr inbounds %struct.global_State, %struct.global_State* %9, i64 0, i32 21
  %22 = bitcast %struct.lua_State** %21 to i64**
  %23 = load i64*, i64** %22, align 8, !tbaa !45
  %24 = load i64, i64* %23, align 8, !tbaa !202
  %25 = bitcast i8* %6 to i64*
  store i64 %24, i64* %25, align 8, !tbaa !201
  %26 = bitcast i64* %23 to i8**
  store i8* %6, i8** %26, align 8, !tbaa !202
  ret %union.Udata* %7
}

; Function Attrs: nounwind uwtable
define i32 @luaopen_string(%struct.lua_State* %L) #0 {
  tail call void @luaL_register(%struct.lua_State* %L, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.551, i64 0, i64 0), %struct.luaL_Reg* getelementptr inbounds ([16 x %struct.luaL_Reg], [16 x %struct.luaL_Reg]* @strlib, i64 0, i64 0)) #1
  tail call void @lua_getfield(%struct.lua_State* %L, i32 -1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.552, i64 0, i64 0)) #1
  tail call void @lua_setfield(%struct.lua_State* %L, i32 -2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2.553, i64 0, i64 0)) #1
  tail call void @lua_createtable(%struct.lua_State* %L, i32 0, i32 1) #1
  tail call void @lua_pushlstring(%struct.lua_State* %L, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.38.554, i64 0, i64 0), i64 0) #1
  tail call void @lua_pushvalue(%struct.lua_State* %L, i32 -2) #1
  %1 = tail call i32 @lua_setmetatable(%struct.lua_State* %L, i32 -2) #1
  tail call void @lua_settop(%struct.lua_State* %L, i32 -2) #1
  tail call void @lua_pushvalue(%struct.lua_State* %L, i32 -2) #1
  tail call void @lua_setfield(%struct.lua_State* %L, i32 -2, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.39.555, i64 0, i64 0)) #1
  tail call void @lua_settop(%struct.lua_State* %L, i32 -2) #1
  ret i32 1
}

; Function Attrs: nounwind readonly
declare i8* @strpbrk(i8*, i8* nocapture) #4

; Function Attrs: nounwind readnone
declare i32** @__ctype_tolower_loc() #7

; Function Attrs: nounwind readnone
declare i32** @__ctype_toupper_loc() #7

; Function Attrs: nounwind uwtable
define internal i32 @str_byte(%struct.lua_State* %L) #0 {
  %l = alloca i64, align 8
  %1 = bitcast i64* %l to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1) #1
  %2 = call i8* @luaL_checklstring(%struct.lua_State* %L, i32 1, i64* nonnull %l) #1
  %3 = call i64 @luaL_optinteger(%struct.lua_State* %L, i32 2, i64 1) #1
  %4 = load i64, i64* %l, align 8, !tbaa !39
  %5 = icmp slt i64 %3, 0
  %6 = add nsw i64 %4, 1
  %7 = select i1 %5, i64 %6, i64 0
  %.0.i = add nsw i64 %7, %3
  %8 = icmp slt i64 %.0.i, 0
  %9 = select i1 %8, i64 0, i64 %.0.i
  %10 = call i64 @luaL_optinteger(%struct.lua_State* %L, i32 3, i64 %9) #1
  %11 = load i64, i64* %l, align 8, !tbaa !39
  %12 = icmp slt i64 %10, 0
  %13 = add nsw i64 %11, 1
  %14 = select i1 %12, i64 %13, i64 0
  %.0.i.1 = add nsw i64 %14, %10
  %15 = icmp slt i64 %.0.i.1, 0
  %16 = select i1 %15, i64 0, i64 %.0.i.1
  %17 = icmp slt i64 %9, 1
  %. = select i1 %17, i64 1, i64 %.0.i
  %18 = icmp ugt i64 %16, %11
  %pose.0 = select i1 %18, i64 %11, i64 %16
  %19 = icmp slt i64 %pose.0, %.
  br i1 %19, label %.loopexit, label %20

; <label>:20                                      ; preds = %0
  %21 = sub nsw i64 %pose.0, %.
  %22 = add nsw i64 %21, 1
  %23 = trunc i64 %22 to i32
  %sext = shl i64 %22, 32
  %24 = ashr exact i64 %sext, 32
  %25 = add nsw i64 %24, %.
  %26 = icmp sgt i64 %25, %pose.0
  br i1 %26, label %29, label %27

; <label>:27                                      ; preds = %20
  %28 = call i32 (%struct.lua_State*, i8*, ...) @luaL_error(%struct.lua_State* %L, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.16.588, i64 0, i64 0)) #1
  br label %29

; <label>:29                                      ; preds = %20, %27
  call void @luaL_checkstack(%struct.lua_State* %L, i32 %23, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.16.588, i64 0, i64 0)) #1
  %30 = icmp sgt i32 %23, 0
  br i1 %30, label %.lr.ph, label %.loopexit

.lr.ph:                                           ; preds = %29
  %31 = add i64 %., -1
  %sext3 = shl i64 %22, 32
  %32 = ashr exact i64 %sext3, 32
  br label %33

; <label>:33                                      ; preds = %.lr.ph, %33
  %indvars.iv = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next, %33 ]
  %34 = add i64 %31, %indvars.iv
  %35 = getelementptr inbounds i8, i8* %2, i64 %34
  %36 = load i8, i8* %35, align 1, !tbaa !76
  %37 = zext i8 %36 to i64
  call void @lua_pushinteger(%struct.lua_State* %L, i64 %37) #1
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %38 = icmp slt i64 %indvars.iv.next, %32
  br i1 %38, label %33, label %.loopexit.loopexit

.loopexit.loopexit:                               ; preds = %33
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %29, %0
  %.0 = phi i32 [ 0, %0 ], [ %23, %29 ], [ %23, %.loopexit.loopexit ]
  call void @llvm.lifetime.end(i64 8, i8* %1) #1
  ret i32 %.0
}

; Function Attrs: nounwind uwtable
define internal i32 @str_char(%struct.lua_State* %L) #0 {
  %b = alloca %struct.luaL_Buffer, align 8
  %1 = tail call i32 @lua_gettop(%struct.lua_State* %L) #1
  %2 = bitcast %struct.luaL_Buffer* %b to i8*
  call void @llvm.lifetime.start(i64 8216, i8* %2) #1
  call void @luaL_buffinit(%struct.lua_State* %L, %struct.luaL_Buffer* nonnull %b) #1
  %3 = icmp slt i32 %1, 1
  br i1 %3, label %._crit_edge, label %.lr.ph

.lr.ph:                                           ; preds = %0
  %4 = getelementptr inbounds %struct.luaL_Buffer, %struct.luaL_Buffer* %b, i64 0, i32 0
  %5 = getelementptr inbounds %struct.luaL_Buffer, %struct.luaL_Buffer* %b, i64 0, i32 3, i64 8192
  br label %6

; <label>:6                                       ; preds = %19, %.lr.ph
  %i.01 = phi i32 [ 1, %.lr.ph ], [ %22, %19 ]
  %7 = call i64 @luaL_checkinteger(%struct.lua_State* %L, i32 %i.01) #1
  %8 = trunc i64 %7 to i32
  %9 = trunc i64 %7 to i8
  %10 = and i32 %8, 255
  %11 = icmp eq i32 %10, %8
  br i1 %11, label %14, label %12

; <label>:12                                      ; preds = %6
  %13 = call i32 @luaL_argerror(%struct.lua_State* %L, i32 %i.01, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.17.587, i64 0, i64 0)) #1
  br label %14

; <label>:14                                      ; preds = %12, %6
  %15 = load i8*, i8** %4, align 8, !tbaa !79
  %16 = icmp ult i8* %15, %5
  br i1 %16, label %19, label %17

; <label>:17                                      ; preds = %14
  %18 = call i8* @luaL_prepbuffer(%struct.luaL_Buffer* nonnull %b) #1
  %.pre = load i8*, i8** %4, align 8, !tbaa !79
  br label %19

; <label>:19                                      ; preds = %17, %14
  %20 = phi i8* [ %.pre, %17 ], [ %15, %14 ]
  %21 = getelementptr inbounds i8, i8* %20, i64 1
  store i8* %21, i8** %4, align 8, !tbaa !79
  store i8 %9, i8* %20, align 1, !tbaa !76
  %22 = add nuw nsw i32 %i.01, 1
  %exitcond = icmp eq i32 %i.01, %1
  br i1 %exitcond, label %._crit_edge.loopexit, label %6

._crit_edge.loopexit:                             ; preds = %19
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %0
  call void @luaL_pushresult(%struct.luaL_Buffer* nonnull %b) #1
  call void @llvm.lifetime.end(i64 8216, i8* %2) #1
  ret i32 1
}

; Function Attrs: nounwind uwtable
define internal i32 @str_dump(%struct.lua_State* %L) #0 {
  %b = alloca %struct.luaL_Buffer, align 8
  %1 = bitcast %struct.luaL_Buffer* %b to i8*
  call void @llvm.lifetime.start(i64 8216, i8* %1) #1
  tail call void @luaL_checktype(%struct.lua_State* %L, i32 1, i32 6) #1
  tail call void @lua_settop(%struct.lua_State* %L, i32 1) #1
  call void @luaL_buffinit(%struct.lua_State* %L, %struct.luaL_Buffer* nonnull %b) #1
  %2 = call i32 @lua_dump(%struct.lua_State* %L, i32 (%struct.lua_State*, i8*, i64, i8*)* nonnull @writer, i8* %1) #1
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %6, label %4

; <label>:4                                       ; preds = %0
  %5 = call i32 (%struct.lua_State*, i8*, ...) @luaL_error(%struct.lua_State* %L, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.18.586, i64 0, i64 0)) #1
  br label %6

; <label>:6                                       ; preds = %0, %4
  call void @luaL_pushresult(%struct.luaL_Buffer* nonnull %b) #1
  call void @llvm.lifetime.end(i64 8216, i8* %1) #1
  ret i32 1
}

; Function Attrs: nounwind uwtable
define internal i32 @str_find(%struct.lua_State* %L) #0 {
  %1 = tail call fastcc i32 @str_find_aux(%struct.lua_State* %L, i32 1)
  ret i32 %1
}

; Function Attrs: nounwind uwtable
define internal i32 @str_format(%struct.lua_State* %L) #0 {
  %l.i = alloca i64, align 8
  %sfl = alloca i64, align 8
  %b = alloca %struct.luaL_Buffer, align 8
  %form = alloca [18 x i8], align 16
  %buff = alloca [512 x i8], align 16
  %l = alloca i64, align 8
  %1 = bitcast i64* %sfl to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1) #1
  %2 = call i8* @luaL_checklstring(%struct.lua_State* %L, i32 1, i64* nonnull %sfl) #1
  %3 = load i64, i64* %sfl, align 8, !tbaa !39
  %4 = getelementptr inbounds i8, i8* %2, i64 %3
  %5 = bitcast %struct.luaL_Buffer* %b to i8*
  call void @llvm.lifetime.start(i64 8216, i8* %5) #1
  call void @luaL_buffinit(%struct.lua_State* %L, %struct.luaL_Buffer* nonnull %b) #1
  %6 = icmp sgt i64 %3, 0
  br i1 %6, label %.lr.ph.lr.ph, label %.outer._crit_edge

.lr.ph.lr.ph:                                     ; preds = %0
  %7 = getelementptr inbounds %struct.luaL_Buffer, %struct.luaL_Buffer* %b, i64 0, i32 0
  %8 = getelementptr inbounds %struct.luaL_Buffer, %struct.luaL_Buffer* %b, i64 0, i32 3, i64 8192
  %9 = getelementptr inbounds [18 x i8], [18 x i8]* %form, i64 0, i64 0
  %10 = getelementptr inbounds [512 x i8], [512 x i8]* %buff, i64 0, i64 0
  %11 = getelementptr inbounds [18 x i8], [18 x i8]* %form, i64 0, i64 1
  %12 = bitcast i64* %l.i to i8*
  %13 = bitcast i64* %l to i8*
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.lr.ph, %.thread9
  %arg.0.ph15 = phi i32 [ 1, %.lr.ph.lr.ph ], [ %43, %.thread9 ]
  %strfrmt.0.ph14 = phi i8* [ %2, %.lr.ph.lr.ph ], [ %115, %.thread9 ]
  br label %14

; <label>:14                                      ; preds = %.lr.ph, %.backedge
  %strfrmt.013 = phi i8* [ %strfrmt.0.ph14, %.lr.ph ], [ %strfrmt.0.be, %.backedge ]
  %15 = load i8, i8* %strfrmt.013, align 1, !tbaa !76
  %16 = icmp eq i8 %15, 37
  br i1 %16, label %27, label %17

; <label>:17                                      ; preds = %14
  %18 = load i8*, i8** %7, align 8, !tbaa !79
  %19 = icmp ult i8* %18, %8
  br i1 %19, label %22, label %20

; <label>:20                                      ; preds = %17
  %21 = call i8* @luaL_prepbuffer(%struct.luaL_Buffer* nonnull %b) #1
  %.pre = load i8, i8* %strfrmt.013, align 1, !tbaa !76
  %.pre18 = load i8*, i8** %7, align 8, !tbaa !79
  br label %22

; <label>:22                                      ; preds = %20, %17
  %23 = phi i8* [ %.pre18, %20 ], [ %18, %17 ]
  %24 = phi i8 [ %.pre, %20 ], [ %15, %17 ]
  %25 = getelementptr inbounds i8, i8* %strfrmt.013, i64 1
  %26 = getelementptr inbounds i8, i8* %23, i64 1
  store i8* %26, i8** %7, align 8, !tbaa !79
  store i8 %24, i8* %23, align 1, !tbaa !76
  br label %.backedge

; <label>:27                                      ; preds = %14
  %28 = getelementptr inbounds i8, i8* %strfrmt.013, i64 1
  %29 = load i8, i8* %28, align 1, !tbaa !76
  %30 = icmp eq i8 %29, 37
  br i1 %30, label %31, label %42

; <label>:31                                      ; preds = %27
  %32 = load i8*, i8** %7, align 8, !tbaa !79
  %33 = icmp ult i8* %32, %8
  br i1 %33, label %36, label %34

; <label>:34                                      ; preds = %31
  %35 = call i8* @luaL_prepbuffer(%struct.luaL_Buffer* nonnull %b) #1
  %.pre19 = load i8, i8* %28, align 1, !tbaa !76
  %.pre20 = load i8*, i8** %7, align 8, !tbaa !79
  br label %36

; <label>:36                                      ; preds = %34, %31
  %37 = phi i8* [ %.pre20, %34 ], [ %32, %31 ]
  %38 = phi i8 [ %.pre19, %34 ], [ 37, %31 ]
  %39 = getelementptr inbounds i8, i8* %strfrmt.013, i64 2
  %40 = getelementptr inbounds i8, i8* %37, i64 1
  store i8* %40, i8** %7, align 8, !tbaa !79
  store i8 %38, i8* %37, align 1, !tbaa !76
  br label %.backedge

.backedge:                                        ; preds = %36, %22
  %strfrmt.0.be = phi i8* [ %25, %22 ], [ %39, %36 ]
  %41 = icmp ult i8* %strfrmt.0.be, %4
  br i1 %41, label %14, label %.outer._crit_edge.loopexit

; <label>:42                                      ; preds = %27
  %.lcssa33 = phi i8 [ %29, %27 ]
  %.lcssa = phi i8* [ %28, %27 ]
  call void @llvm.lifetime.start(i64 18, i8* %9) #1
  call void @llvm.lifetime.start(i64 512, i8* %10) #1
  %43 = add nuw nsw i32 %arg.0.ph15, 1
  %44 = icmp eq i8 %.lcssa33, 0
  br i1 %44, label %.critedge.i, label %.lr.ph.i.preheader

.lr.ph.i.preheader:                               ; preds = %42
  br label %.lr.ph.i

.lr.ph.i:                                         ; preds = %.lr.ph.i.preheader, %50
  %45 = phi i8 [ %52, %50 ], [ %.lcssa33, %.lr.ph.i.preheader ]
  %p.03.i = phi i8* [ %51, %50 ], [ %.lcssa, %.lr.ph.i.preheader ]
  %46 = sext i8 %45 to i64
  %47 = and i64 %46, 4294967295
  %memchr.bounds.i = icmp ult i64 %47, 64
  %48 = shl i64 1, %47
  %49 = and i64 %48, 325494096527361
  %memchr.bits.i = icmp ne i64 %49, 0
  %memchr1.i = and i1 %memchr.bounds.i, %memchr.bits.i
  br i1 %memchr1.i, label %50, label %.critedge.i.loopexit

; <label>:50                                      ; preds = %.lr.ph.i
  %51 = getelementptr inbounds i8, i8* %p.03.i, i64 1
  %52 = load i8, i8* %51, align 1, !tbaa !76
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %.critedge.i.loopexit, label %.lr.ph.i

.critedge.i.loopexit:                             ; preds = %.lr.ph.i, %50
  %.ph = phi i8 [ %45, %.lr.ph.i ], [ 0, %50 ]
  %p.0.lcssa.i.ph = phi i8* [ %p.03.i, %.lr.ph.i ], [ %51, %50 ]
  br label %.critedge.i

.critedge.i:                                      ; preds = %.critedge.i.loopexit, %42
  %54 = phi i8 [ 0, %42 ], [ %.ph, %.critedge.i.loopexit ]
  %p.0.lcssa.i = phi i8* [ %.lcssa, %42 ], [ %p.0.lcssa.i.ph, %.critedge.i.loopexit ]
  %55 = ptrtoint i8* %p.0.lcssa.i to i64
  %56 = ptrtoint i8* %.lcssa to i64
  %57 = sub i64 %55, %56
  %58 = icmp ugt i64 %57, 5
  br i1 %58, label %59, label %61

; <label>:59                                      ; preds = %.critedge.i
  %60 = call i32 (%struct.lua_State*, i8*, ...) @luaL_error(%struct.lua_State* %L, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.30.581, i64 0, i64 0)) #1
  %.pre.i = load i8, i8* %p.0.lcssa.i, align 1, !tbaa !76
  br label %61

; <label>:61                                      ; preds = %59, %.critedge.i
  %62 = phi i8 [ %.pre.i, %59 ], [ %54, %.critedge.i ]
  %63 = zext i8 %62 to i64
  %64 = tail call i16** @__ctype_b_loc() #12
  %65 = load i16*, i16** %64, align 8, !tbaa !25
  %66 = getelementptr inbounds i16, i16* %65, i64 %63
  %67 = load i16, i16* %66, align 2, !tbaa !87
  %68 = and i16 %67, 2048
  %69 = icmp eq i16 %68, 0
  %70 = getelementptr inbounds i8, i8* %p.0.lcssa.i, i64 1
  %p.0..i = select i1 %69, i8* %p.0.lcssa.i, i8* %70
  %71 = load i8, i8* %p.0..i, align 1, !tbaa !76
  %72 = zext i8 %71 to i64
  %73 = getelementptr inbounds i16, i16* %65, i64 %72
  %74 = load i16, i16* %73, align 2, !tbaa !87
  %75 = and i16 %74, 2048
  %76 = icmp eq i16 %75, 0
  %77 = getelementptr inbounds i8, i8* %p.0..i, i64 1
  %p.2.i = select i1 %76, i8* %p.0..i, i8* %77
  %78 = load i8, i8* %p.2.i, align 1, !tbaa !76
  %79 = icmp eq i8 %78, 46
  br i1 %79, label %80, label %101

; <label>:80                                      ; preds = %61
  %81 = getelementptr inbounds i8, i8* %p.2.i, i64 1
  %82 = load i8, i8* %81, align 1, !tbaa !76
  %83 = zext i8 %82 to i64
  %84 = getelementptr inbounds i16, i16* %65, i64 %83
  %85 = load i16, i16* %84, align 2, !tbaa !87
  %86 = and i16 %85, 2048
  %87 = icmp eq i16 %86, 0
  %88 = getelementptr inbounds i8, i8* %p.2.i, i64 2
  %.2.i = select i1 %87, i8* %81, i8* %88
  %89 = load i8, i8* %.2.i, align 1, !tbaa !76
  %90 = zext i8 %89 to i64
  %91 = getelementptr inbounds i16, i16* %65, i64 %90
  %92 = load i16, i16* %91, align 2, !tbaa !87
  %93 = and i16 %92, 2048
  %94 = icmp eq i16 %93, 0
  br i1 %94, label %101, label %95

; <label>:95                                      ; preds = %80
  %96 = zext i16 %86 to i64
  %97 = lshr exact i64 %96, 11
  %98 = add nuw nsw i64 %97, 1
  %99 = getelementptr inbounds i8, i8* %p.2.i, i64 %98
  %100 = getelementptr inbounds i8, i8* %99, i64 1
  %.pre7.i = load i8, i8* %100, align 1, !tbaa !76
  br label %101

; <label>:101                                     ; preds = %95, %80, %61
  %102 = phi i8 [ %.pre7.i, %95 ], [ %89, %80 ], [ %78, %61 ]
  %p.4.i = phi i8* [ %100, %95 ], [ %.2.i, %80 ], [ %p.2.i, %61 ]
  %103 = zext i8 %102 to i64
  %104 = getelementptr inbounds i16, i16* %65, i64 %103
  %105 = load i16, i16* %104, align 2, !tbaa !87
  %106 = and i16 %105, 2048
  %107 = icmp eq i16 %106, 0
  br i1 %107, label %scanformat.exit, label %108

; <label>:108                                     ; preds = %101
  %109 = call i32 (%struct.lua_State*, i8*, ...) @luaL_error(%struct.lua_State* %L, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.31.582, i64 0, i64 0)) #1
  br label %scanformat.exit

scanformat.exit:                                  ; preds = %101, %108
  store i8 37, i8* %9, align 16, !tbaa !76
  %110 = ptrtoint i8* %p.4.i to i64
  %111 = sub i64 %110, %56
  %112 = add nsw i64 %111, 1
  %113 = call i8* @strncpy(i8* %11, i8* %.lcssa, i64 %112) #1
  %114 = getelementptr inbounds i8, i8* %11, i64 %112
  store i8 0, i8* %114, align 1, !tbaa !76
  %115 = getelementptr inbounds i8, i8* %p.4.i, i64 1
  %116 = load i8, i8* %p.4.i, align 1, !tbaa !76
  %117 = sext i8 %116 to i32
  switch i32 %117, label %214 [
    i32 99, label %118
    i32 100, label %122
    i32 105, label %122
    i32 111, label %135
    i32 117, label %135
    i32 120, label %135
    i32 88, label %135
    i32 101, label %148
    i32 69, label %148
    i32 102, label %148
    i32 103, label %148
    i32 71, label %148
    i32 113, label %151
    i32 115, label %203
  ]

; <label>:118                                     ; preds = %scanformat.exit
  %119 = call double @luaL_checknumber(%struct.lua_State* %L, i32 %43) #1
  %120 = fptosi double %119 to i32
  %121 = call i32 (i8*, i8*, ...) @sprintf(i8* %10, i8* %9, i32 %120) #1
  br label %211

; <label>:122                                     ; preds = %scanformat.exit, %scanformat.exit
  %123 = call i64 @strlen(i8* %9) #11
  %124 = add i64 %123, -1
  %125 = getelementptr inbounds [18 x i8], [18 x i8]* %form, i64 0, i64 %124
  %126 = load i8, i8* %125, align 1, !tbaa !76
  %127 = getelementptr inbounds [18 x i8], [18 x i8]* %form, i64 0, i64 %123
  %128 = getelementptr inbounds i8, i8* %127, i64 -1
  %129 = bitcast i8* %128 to i16*
  store i16 108, i16* %129, align 1
  store i8 %126, i8* %127, align 1, !tbaa !76
  %130 = add i64 %123, 1
  %131 = getelementptr inbounds [18 x i8], [18 x i8]* %form, i64 0, i64 %130
  store i8 0, i8* %131, align 1, !tbaa !76
  %132 = call double @luaL_checknumber(%struct.lua_State* %L, i32 %43) #1
  %133 = fptosi double %132 to i64
  %134 = call i32 (i8*, i8*, ...) @sprintf(i8* %10, i8* %9, i64 %133) #1
  br label %211

; <label>:135                                     ; preds = %scanformat.exit, %scanformat.exit, %scanformat.exit, %scanformat.exit
  %136 = call i64 @strlen(i8* %9) #11
  %137 = add i64 %136, -1
  %138 = getelementptr inbounds [18 x i8], [18 x i8]* %form, i64 0, i64 %137
  %139 = load i8, i8* %138, align 1, !tbaa !76
  %140 = getelementptr inbounds [18 x i8], [18 x i8]* %form, i64 0, i64 %136
  %141 = getelementptr inbounds i8, i8* %140, i64 -1
  %142 = bitcast i8* %141 to i16*
  store i16 108, i16* %142, align 1
  store i8 %139, i8* %140, align 1, !tbaa !76
  %143 = add i64 %136, 1
  %144 = getelementptr inbounds [18 x i8], [18 x i8]* %form, i64 0, i64 %143
  store i8 0, i8* %144, align 1, !tbaa !76
  %145 = call double @luaL_checknumber(%struct.lua_State* %L, i32 %43) #1
  %146 = fptoui double %145 to i64
  %147 = call i32 (i8*, i8*, ...) @sprintf(i8* %10, i8* %9, i64 %146) #1
  br label %211

; <label>:148                                     ; preds = %scanformat.exit, %scanformat.exit, %scanformat.exit, %scanformat.exit, %scanformat.exit
  %149 = call double @luaL_checknumber(%struct.lua_State* %L, i32 %43) #1
  %150 = call i32 (i8*, i8*, ...) @sprintf(i8* %10, i8* %9, double %149) #1
  br label %211

; <label>:151                                     ; preds = %scanformat.exit
  call void @llvm.lifetime.start(i64 8, i8* %12) #1
  %152 = call i8* @luaL_checklstring(%struct.lua_State* %L, i32 %43, i64* nonnull %l.i) #1
  %153 = load i8*, i8** %7, align 8, !tbaa !79
  %154 = icmp ult i8* %153, %8
  br i1 %154, label %157, label %155

; <label>:155                                     ; preds = %151
  %156 = call i8* @luaL_prepbuffer(%struct.luaL_Buffer* nonnull %b) #1
  %.pre.i.5 = load i8*, i8** %7, align 8, !tbaa !79
  br label %157

; <label>:157                                     ; preds = %155, %151
  %158 = phi i8* [ %.pre.i.5, %155 ], [ %153, %151 ]
  %159 = getelementptr inbounds i8, i8* %158, i64 1
  store i8* %159, i8** %7, align 8, !tbaa !79
  store i8 34, i8* %158, align 1, !tbaa !76
  %160 = load i64, i64* %l.i, align 8, !tbaa !39
  %161 = add i64 %160, -1
  store i64 %161, i64* %l.i, align 8, !tbaa !39
  %162 = icmp eq i64 %160, 0
  br i1 %162, label %._crit_edge.i, label %.lr.ph.i.6.preheader

.lr.ph.i.6.preheader:                             ; preds = %157
  br label %.lr.ph.i.6

.lr.ph.i.6:                                       ; preds = %.lr.ph.i.6.preheader, %192
  %s.01.i = phi i8* [ %193, %192 ], [ %152, %.lr.ph.i.6.preheader ]
  %163 = load i8, i8* %s.01.i, align 1, !tbaa !76
  %164 = sext i8 %163 to i32
  switch i32 %164, label %183 [
    i32 34, label %165
    i32 92, label %165
    i32 10, label %165
    i32 13, label %181
    i32 0, label %182
  ]

; <label>:165                                     ; preds = %.lr.ph.i.6, %.lr.ph.i.6, %.lr.ph.i.6
  %166 = load i8*, i8** %7, align 8, !tbaa !79
  %167 = icmp ult i8* %166, %8
  br i1 %167, label %170, label %168

; <label>:168                                     ; preds = %165
  %169 = call i8* @luaL_prepbuffer(%struct.luaL_Buffer* nonnull %b) #1
  %.pre3.i = load i8*, i8** %7, align 8, !tbaa !79
  br label %170

; <label>:170                                     ; preds = %168, %165
  %171 = phi i8* [ %.pre3.i, %168 ], [ %166, %165 ]
  %172 = getelementptr inbounds i8, i8* %171, i64 1
  store i8* %172, i8** %7, align 8, !tbaa !79
  store i8 92, i8* %171, align 1, !tbaa !76
  %173 = load i8*, i8** %7, align 8, !tbaa !79
  %174 = icmp ult i8* %173, %8
  br i1 %174, label %177, label %175

; <label>:175                                     ; preds = %170
  %176 = call i8* @luaL_prepbuffer(%struct.luaL_Buffer* nonnull %b) #1
  %.pre4.i = load i8*, i8** %7, align 8, !tbaa !79
  br label %177

; <label>:177                                     ; preds = %175, %170
  %178 = phi i8* [ %.pre4.i, %175 ], [ %173, %170 ]
  %179 = load i8, i8* %s.01.i, align 1, !tbaa !76
  %180 = getelementptr inbounds i8, i8* %178, i64 1
  store i8* %180, i8** %7, align 8, !tbaa !79
  store i8 %179, i8* %178, align 1, !tbaa !76
  br label %192

; <label>:181                                     ; preds = %.lr.ph.i.6
  call void @luaL_addlstring(%struct.luaL_Buffer* nonnull %b, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.33.583, i64 0, i64 0), i64 2) #1
  br label %192

; <label>:182                                     ; preds = %.lr.ph.i.6
  call void @luaL_addlstring(%struct.luaL_Buffer* nonnull %b, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.34.584, i64 0, i64 0), i64 4) #1
  br label %192

; <label>:183                                     ; preds = %.lr.ph.i.6
  %184 = load i8*, i8** %7, align 8, !tbaa !79
  %185 = icmp ult i8* %184, %8
  br i1 %185, label %188, label %186

; <label>:186                                     ; preds = %183
  %187 = call i8* @luaL_prepbuffer(%struct.luaL_Buffer* nonnull %b) #1
  %.pre5.i = load i8, i8* %s.01.i, align 1, !tbaa !76
  %.pre6.i = load i8*, i8** %7, align 8, !tbaa !79
  br label %188

; <label>:188                                     ; preds = %186, %183
  %189 = phi i8* [ %.pre6.i, %186 ], [ %184, %183 ]
  %190 = phi i8 [ %.pre5.i, %186 ], [ %163, %183 ]
  %191 = getelementptr inbounds i8, i8* %189, i64 1
  store i8* %191, i8** %7, align 8, !tbaa !79
  store i8 %190, i8* %189, align 1, !tbaa !76
  br label %192

; <label>:192                                     ; preds = %188, %182, %181, %177
  %193 = getelementptr inbounds i8, i8* %s.01.i, i64 1
  %194 = load i64, i64* %l.i, align 8, !tbaa !39
  %195 = add i64 %194, -1
  store i64 %195, i64* %l.i, align 8, !tbaa !39
  %196 = icmp eq i64 %194, 0
  br i1 %196, label %._crit_edge.i.loopexit, label %.lr.ph.i.6

._crit_edge.i.loopexit:                           ; preds = %192
  br label %._crit_edge.i

._crit_edge.i:                                    ; preds = %._crit_edge.i.loopexit, %157
  %197 = load i8*, i8** %7, align 8, !tbaa !79
  %198 = icmp ult i8* %197, %8
  br i1 %198, label %addquoted.exit, label %199

; <label>:199                                     ; preds = %._crit_edge.i
  %200 = call i8* @luaL_prepbuffer(%struct.luaL_Buffer* nonnull %b) #1
  %.pre7.i.7 = load i8*, i8** %7, align 8, !tbaa !79
  br label %addquoted.exit

addquoted.exit:                                   ; preds = %._crit_edge.i, %199
  %201 = phi i8* [ %.pre7.i.7, %199 ], [ %197, %._crit_edge.i ]
  %202 = getelementptr inbounds i8, i8* %201, i64 1
  store i8* %202, i8** %7, align 8, !tbaa !79
  store i8 34, i8* %201, align 1, !tbaa !76
  call void @llvm.lifetime.end(i64 8, i8* %12) #1
  br label %.thread9

; <label>:203                                     ; preds = %scanformat.exit
  call void @llvm.lifetime.start(i64 8, i8* %13) #1
  %204 = call i8* @luaL_checklstring(%struct.lua_State* %L, i32 %43, i64* nonnull %l) #1
  %205 = call i8* @strchr(i8* %9, i32 46) #1
  %206 = icmp eq i8* %205, null
  %207 = load i64, i64* %l, align 8
  %208 = icmp ugt i64 %207, 99
  %or.cond = and i1 %206, %208
  br i1 %or.cond, label %210, label %.thread

.thread:                                          ; preds = %203
  %209 = call i32 (i8*, i8*, ...) @sprintf(i8* %10, i8* %9, i8* %204) #1
  call void @llvm.lifetime.end(i64 8, i8* %13) #1
  br label %211

; <label>:210                                     ; preds = %203
  call void @lua_pushvalue(%struct.lua_State* %L, i32 %43) #1
  call void @luaL_addvalue(%struct.luaL_Buffer* nonnull %b) #1
  call void @llvm.lifetime.end(i64 8, i8* %13) #1
  br label %.thread9

; <label>:211                                     ; preds = %.thread, %148, %135, %122, %118
  %212 = call i64 @strlen(i8* %10) #11
  call void @luaL_addlstring(%struct.luaL_Buffer* nonnull %b, i8* %10, i64 %212) #1
  br label %.thread9

.thread9:                                         ; preds = %211, %210, %addquoted.exit
  call void @llvm.lifetime.end(i64 512, i8* %10) #1
  call void @llvm.lifetime.end(i64 18, i8* %9) #1
  %213 = icmp ult i8* %115, %4
  br i1 %213, label %.lr.ph, label %.outer._crit_edge.loopexit29

; <label>:214                                     ; preds = %scanformat.exit
  %.lcssa34 = phi i32 [ %117, %scanformat.exit ]
  %215 = call i32 (%struct.lua_State*, i8*, ...) @luaL_error(%struct.lua_State* %L, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.28.585, i64 0, i64 0), i32 %.lcssa34) #1
  call void @llvm.lifetime.end(i64 512, i8* %10) #1
  call void @llvm.lifetime.end(i64 18, i8* %9) #1
  br label %216

.outer._crit_edge.loopexit:                       ; preds = %.backedge
  br label %.outer._crit_edge

.outer._crit_edge.loopexit29:                     ; preds = %.thread9
  br label %.outer._crit_edge

.outer._crit_edge:                                ; preds = %.outer._crit_edge.loopexit29, %.outer._crit_edge.loopexit, %0
  call void @luaL_pushresult(%struct.luaL_Buffer* nonnull %b) #1
  br label %216

; <label>:216                                     ; preds = %214, %.outer._crit_edge
  %.2 = phi i32 [ %215, %214 ], [ 1, %.outer._crit_edge ]
  call void @llvm.lifetime.end(i64 8216, i8* %5) #1
  call void @llvm.lifetime.end(i64 8, i8* %1) #1
  ret i32 %.2
}

; Function Attrs: nounwind uwtable
define internal i32 @gfind_nodef(%struct.lua_State* %L) #0 {
  %1 = tail call i32 (%struct.lua_State*, i8*, ...) @luaL_error(%struct.lua_State* %L, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.35.580, i64 0, i64 0)) #1
  ret i32 %1
}

; Function Attrs: nounwind uwtable
define internal i32 @gmatch(%struct.lua_State* %L) #0 {
  %1 = tail call i8* @luaL_checklstring(%struct.lua_State* %L, i32 1, i64* null) #1
  %2 = tail call i8* @luaL_checklstring(%struct.lua_State* %L, i32 2, i64* null) #1
  tail call void @lua_settop(%struct.lua_State* %L, i32 2) #1
  tail call void @lua_pushinteger(%struct.lua_State* %L, i64 0) #1
  tail call void @lua_pushcclosure(%struct.lua_State* %L, i32 (%struct.lua_State*)* nonnull @gmatch_aux, i32 3) #1
  ret i32 1
}

; Function Attrs: nounwind uwtable
define internal i32 @str_gsub(%struct.lua_State* %L) #0 {
  %l.i.i = alloca i64, align 8
  %srcl = alloca i64, align 8
  %ms = alloca %struct.MatchState, align 8
  %b = alloca %struct.luaL_Buffer, align 8
  %1 = bitcast i64* %srcl to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1) #1
  %2 = call i8* @luaL_checklstring(%struct.lua_State* %L, i32 1, i64* nonnull %srcl) #1
  %3 = call i8* @luaL_checklstring(%struct.lua_State* %L, i32 2, i64* null) #1
  %4 = call i32 @lua_type(%struct.lua_State* %L, i32 3) #1
  %5 = load i64, i64* %srcl, align 8, !tbaa !39
  %6 = add i64 %5, 1
  %7 = call i64 @luaL_optinteger(%struct.lua_State* %L, i32 4, i64 %6) #1
  %8 = trunc i64 %7 to i32
  %9 = load i8, i8* %3, align 1, !tbaa !76
  %10 = icmp eq i8 %9, 94
  %11 = getelementptr inbounds i8, i8* %3, i64 1
  %. = select i1 %10, i8* %11, i8* %3
  %12 = bitcast %struct.MatchState* %ms to i8*
  call void @llvm.lifetime.start(i64 544, i8* %12) #1
  %13 = bitcast %struct.luaL_Buffer* %b to i8*
  call void @llvm.lifetime.start(i64 8216, i8* %13) #1
  %.off = add i32 %4, -3
  %14 = icmp ult i32 %.off, 4
  br i1 %14, label %17, label %15

; <label>:15                                      ; preds = %0
  %16 = call i32 @luaL_argerror(%struct.lua_State* %L, i32 3, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.36.578, i64 0, i64 0)) #1
  br label %17

; <label>:17                                      ; preds = %15, %0
  call void @luaL_buffinit(%struct.lua_State* %L, %struct.luaL_Buffer* nonnull %b) #1
  %18 = getelementptr inbounds %struct.MatchState, %struct.MatchState* %ms, i64 0, i32 2
  store %struct.lua_State* %L, %struct.lua_State** %18, align 8, !tbaa !282
  %19 = getelementptr inbounds %struct.MatchState, %struct.MatchState* %ms, i64 0, i32 0
  store i8* %2, i8** %19, align 8, !tbaa !284
  %20 = load i64, i64* %srcl, align 8, !tbaa !39
  %21 = getelementptr inbounds i8, i8* %2, i64 %20
  %22 = getelementptr inbounds %struct.MatchState, %struct.MatchState* %ms, i64 0, i32 1
  store i8* %21, i8** %22, align 8, !tbaa !285
  %23 = getelementptr inbounds %struct.MatchState, %struct.MatchState* %ms, i64 0, i32 3
  %24 = bitcast i64* %l.i.i to i8*
  %25 = getelementptr inbounds %struct.luaL_Buffer, %struct.luaL_Buffer* %b, i64 0, i32 0
  %26 = getelementptr inbounds %struct.luaL_Buffer, %struct.luaL_Buffer* %b, i64 0, i32 3, i64 8192
  %27 = getelementptr inbounds %struct.MatchState, %struct.MatchState* %ms, i64 0, i32 4, i64 0, i32 1
  %28 = getelementptr inbounds %struct.MatchState, %struct.MatchState* %ms, i64 0, i32 4, i64 0, i32 0
  %29 = bitcast %struct.MatchState* %ms to i64*
  br label %30

; <label>:30                                      ; preds = %152, %17
  %n.0 = phi i32 [ 0, %17 ], [ %n.111, %152 ]
  %src.0 = phi i8* [ %2, %17 ], [ %src.1, %152 ]
  %31 = icmp slt i32 %n.0, %8
  br i1 %31, label %32, label %.thread

; <label>:32                                      ; preds = %30
  store i32 0, i32* %23, align 8, !tbaa !286
  %33 = call fastcc i8* @match(%struct.MatchState* nonnull %ms, i8* %src.0, i8* %.)
  %34 = icmp eq i8* %33, null
  br i1 %34, label %add_value.exit.thread, label %35

; <label>:35                                      ; preds = %32
  %36 = add nsw i32 %n.0, 1
  %37 = load %struct.lua_State*, %struct.lua_State** %18, align 8, !tbaa !282
  %38 = call i32 @lua_type(%struct.lua_State* %37, i32 3) #1
  switch i32 %38, label %124 [
    i32 3, label %39
    i32 4, label %39
    i32 6, label %90
    i32 5, label %97
  ]

; <label>:39                                      ; preds = %35, %35
  call void @llvm.lifetime.start(i64 8, i8* %24) #1
  %40 = load %struct.lua_State*, %struct.lua_State** %18, align 8, !tbaa !282
  %41 = call i8* @lua_tolstring(%struct.lua_State* %40, i32 3, i64* nonnull %l.i.i) #1
  %42 = load i64, i64* %l.i.i, align 8, !tbaa !39
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %add_s.exit.i, label %.lr.ph.i.i

.lr.ph.i.i:                                       ; preds = %39
  %44 = ptrtoint i8* %33 to i64
  %45 = ptrtoint i8* %src.0 to i64
  %46 = sub i64 %44, %45
  br label %47

; <label>:47                                      ; preds = %86, %.lr.ph.i.i
  %i.01.i.i = phi i64 [ 0, %.lr.ph.i.i ], [ %87, %86 ]
  %48 = getelementptr inbounds i8, i8* %41, i64 %i.01.i.i
  %49 = load i8, i8* %48, align 1, !tbaa !76
  %50 = icmp eq i8 %49, 37
  br i1 %50, label %60, label %51

; <label>:51                                      ; preds = %47
  %52 = load i8*, i8** %25, align 8, !tbaa !79
  %53 = icmp ult i8* %52, %26
  br i1 %53, label %56, label %54

; <label>:54                                      ; preds = %51
  %55 = call i8* @luaL_prepbuffer(%struct.luaL_Buffer* nonnull %b) #1
  %.pre.i.i = load i8, i8* %48, align 1, !tbaa !76
  %.pre2.i.i = load i8*, i8** %25, align 8, !tbaa !79
  br label %56

; <label>:56                                      ; preds = %54, %51
  %57 = phi i8* [ %.pre2.i.i, %54 ], [ %52, %51 ]
  %58 = phi i8 [ %.pre.i.i, %54 ], [ %49, %51 ]
  %59 = getelementptr inbounds i8, i8* %57, i64 1
  store i8* %59, i8** %25, align 8, !tbaa !79
  store i8 %58, i8* %57, align 1, !tbaa !76
  br label %86

; <label>:60                                      ; preds = %47
  %61 = add i64 %i.01.i.i, 1
  %62 = getelementptr inbounds i8, i8* %41, i64 %61
  %63 = load i8, i8* %62, align 1, !tbaa !76
  %64 = zext i8 %63 to i64
  %65 = tail call i16** @__ctype_b_loc() #12
  %66 = load i16*, i16** %65, align 8, !tbaa !25
  %67 = getelementptr inbounds i16, i16* %66, i64 %64
  %68 = load i16, i16* %67, align 2, !tbaa !87
  %69 = and i16 %68, 2048
  %70 = icmp eq i16 %69, 0
  br i1 %70, label %71, label %80

; <label>:71                                      ; preds = %60
  %72 = load i8*, i8** %25, align 8, !tbaa !79
  %73 = icmp ult i8* %72, %26
  br i1 %73, label %76, label %74

; <label>:74                                      ; preds = %71
  %75 = call i8* @luaL_prepbuffer(%struct.luaL_Buffer* nonnull %b) #1
  %.pre3.i.i = load i8, i8* %62, align 1, !tbaa !76
  %.pre4.i.i = load i8*, i8** %25, align 8, !tbaa !79
  br label %76

; <label>:76                                      ; preds = %74, %71
  %77 = phi i8* [ %.pre4.i.i, %74 ], [ %72, %71 ]
  %78 = phi i8 [ %.pre3.i.i, %74 ], [ %63, %71 ]
  %79 = getelementptr inbounds i8, i8* %77, i64 1
  store i8* %79, i8** %25, align 8, !tbaa !79
  store i8 %78, i8* %77, align 1, !tbaa !76
  br label %86

; <label>:80                                      ; preds = %60
  %81 = icmp eq i8 %63, 48
  br i1 %81, label %82, label %83

; <label>:82                                      ; preds = %80
  call void @luaL_addlstring(%struct.luaL_Buffer* nonnull %b, i8* %src.0, i64 %46) #1
  br label %86

; <label>:83                                      ; preds = %80
  %84 = sext i8 %63 to i32
  %85 = add nsw i32 %84, -49
  call fastcc void @push_onecapture(%struct.MatchState* nonnull %ms, i32 %85, i8* %src.0, i8* %33) #1
  call void @luaL_addvalue(%struct.luaL_Buffer* nonnull %b) #1
  br label %86

; <label>:86                                      ; preds = %83, %82, %76, %56
  %i.1.i.i = phi i64 [ %i.01.i.i, %56 ], [ %61, %82 ], [ %61, %83 ], [ %61, %76 ]
  %87 = add i64 %i.1.i.i, 1
  %88 = load i64, i64* %l.i.i, align 8, !tbaa !39
  %89 = icmp ult i64 %87, %88
  br i1 %89, label %47, label %add_s.exit.i.loopexit

add_s.exit.i.loopexit:                            ; preds = %86
  br label %add_s.exit.i

add_s.exit.i:                                     ; preds = %add_s.exit.i.loopexit, %39
  call void @llvm.lifetime.end(i64 8, i8* %24) #1
  br label %add_value.exit

; <label>:90                                      ; preds = %35
  call void @lua_pushvalue(%struct.lua_State* %37, i32 3) #1
  %91 = load i32, i32* %23, align 8, !tbaa !286
  %92 = icmp eq i32 %91, 0
  %93 = icmp ne i8* %src.0, null
  %or.cond.i.i = and i1 %93, %92
  %..i.i = select i1 %or.cond.i.i, i32 1, i32 %91
  %94 = load %struct.lua_State*, %struct.lua_State** %18, align 8, !tbaa !282
  call void @luaL_checkstack(%struct.lua_State* %94, i32 %..i.i, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.21.570, i64 0, i64 0)) #1
  %95 = icmp sgt i32 %..i.i, 0
  br i1 %95, label %.lr.ph.i.1.i.preheader, label %push_captures.exit.i

.lr.ph.i.1.i.preheader:                           ; preds = %90
  br label %.lr.ph.i.1.i

.lr.ph.i.1.i:                                     ; preds = %.lr.ph.i.1.i.preheader, %.lr.ph.i.1.i
  %i.02.i.i = phi i32 [ %96, %.lr.ph.i.1.i ], [ 0, %.lr.ph.i.1.i.preheader ]
  call fastcc void @push_onecapture(%struct.MatchState* nonnull %ms, i32 %i.02.i.i, i8* %src.0, i8* %33) #1
  %96 = add nuw nsw i32 %i.02.i.i, 1
  %exitcond.i.i = icmp eq i32 %96, %..i.i
  br i1 %exitcond.i.i, label %push_captures.exit.i.loopexit, label %.lr.ph.i.1.i

push_captures.exit.i.loopexit:                    ; preds = %.lr.ph.i.1.i
  br label %push_captures.exit.i

push_captures.exit.i:                             ; preds = %push_captures.exit.i.loopexit, %90
  call void @lua_call(%struct.lua_State* %37, i32 %..i.i, i32 1) #1
  br label %124

; <label>:97                                      ; preds = %35
  %98 = load i32, i32* %23, align 8, !tbaa !286
  %99 = icmp sgt i32 %98, 0
  br i1 %99, label %105, label %100

; <label>:100                                     ; preds = %97
  %101 = load %struct.lua_State*, %struct.lua_State** %18, align 8, !tbaa !282
  %102 = ptrtoint i8* %33 to i64
  %103 = ptrtoint i8* %src.0 to i64
  %104 = sub i64 %102, %103
  call void @lua_pushlstring(%struct.lua_State* %101, i8* %src.0, i64 %104) #1
  br label %push_onecapture.exit.i

; <label>:105                                     ; preds = %97
  %106 = load i64, i64* %27, align 8, !tbaa !287
  %107 = icmp eq i64 %106, -1
  br i1 %107, label %.thread.i.i, label %112

.thread.i.i:                                      ; preds = %105
  %108 = load %struct.lua_State*, %struct.lua_State** %18, align 8, !tbaa !282
  %109 = call i32 (%struct.lua_State*, i8*, ...) @luaL_error(%struct.lua_State* %108, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.27.572, i64 0, i64 0)) #1
  %110 = load %struct.lua_State*, %struct.lua_State** %18, align 8, !tbaa !282
  %111 = load i8*, i8** %28, align 8, !tbaa !289
  br label %121

; <label>:112                                     ; preds = %105
  %113 = icmp eq i64 %106, -2
  %114 = load %struct.lua_State*, %struct.lua_State** %18, align 8, !tbaa !282
  %115 = load i8*, i8** %28, align 8, !tbaa !289
  br i1 %113, label %116, label %121

; <label>:116                                     ; preds = %112
  %117 = load i64, i64* %29, align 8, !tbaa !284
  %118 = ptrtoint i8* %115 to i64
  %119 = add i64 %118, 1
  %120 = sub i64 %119, %117
  call void @lua_pushinteger(%struct.lua_State* %114, i64 %120) #1
  br label %push_onecapture.exit.i

; <label>:121                                     ; preds = %112, %.thread.i.i
  %122 = phi i8* [ %111, %.thread.i.i ], [ %115, %112 ]
  %123 = phi %struct.lua_State* [ %110, %.thread.i.i ], [ %114, %112 ]
  call void @lua_pushlstring(%struct.lua_State* %123, i8* %122, i64 %106) #1
  br label %push_onecapture.exit.i

push_onecapture.exit.i:                           ; preds = %121, %116, %100
  call void @lua_gettable(%struct.lua_State* %37, i32 3) #1
  br label %124

; <label>:124                                     ; preds = %push_onecapture.exit.i, %push_captures.exit.i, %35
  %125 = call i32 @lua_toboolean(%struct.lua_State* %37, i32 -1) #1
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %127, label %131

; <label>:127                                     ; preds = %124
  call void @lua_settop(%struct.lua_State* %37, i32 -2) #1
  %128 = ptrtoint i8* %33 to i64
  %129 = ptrtoint i8* %src.0 to i64
  %130 = sub i64 %128, %129
  call void @lua_pushlstring(%struct.lua_State* %37, i8* %src.0, i64 %130) #1
  br label %138

; <label>:131                                     ; preds = %124
  %132 = call i32 @lua_isstring(%struct.lua_State* %37, i32 -1) #1
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %134, label %138

; <label>:134                                     ; preds = %131
  %135 = call i32 @lua_type(%struct.lua_State* %37, i32 -1) #1
  %136 = call i8* @lua_typename(%struct.lua_State* %37, i32 %135) #1
  %137 = call i32 (%struct.lua_State*, i8*, ...) @luaL_error(%struct.lua_State* %37, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.37.579, i64 0, i64 0), i8* %136) #1
  br label %138

; <label>:138                                     ; preds = %134, %131, %127
  call void @luaL_addvalue(%struct.luaL_Buffer* nonnull %b) #1
  br label %add_value.exit

add_value.exit:                                   ; preds = %138, %add_s.exit.i
  %139 = icmp ugt i8* %33, %src.0
  br i1 %139, label %152, label %add_value.exit.thread

add_value.exit.thread:                            ; preds = %32, %add_value.exit
  %n.110 = phi i32 [ %36, %add_value.exit ], [ %n.0, %32 ]
  %140 = load i8*, i8** %22, align 8, !tbaa !285
  %141 = icmp ult i8* %src.0, %140
  br i1 %141, label %142, label %.thread

; <label>:142                                     ; preds = %add_value.exit.thread
  %143 = load i8*, i8** %25, align 8, !tbaa !79
  %144 = icmp ult i8* %143, %26
  br i1 %144, label %147, label %145

; <label>:145                                     ; preds = %142
  %146 = call i8* @luaL_prepbuffer(%struct.luaL_Buffer* nonnull %b) #1
  %.pre = load i8*, i8** %25, align 8, !tbaa !79
  br label %147

; <label>:147                                     ; preds = %145, %142
  %148 = phi i8* [ %.pre, %145 ], [ %143, %142 ]
  %149 = getelementptr inbounds i8, i8* %src.0, i64 1
  %150 = load i8, i8* %src.0, align 1, !tbaa !76
  %151 = getelementptr inbounds i8, i8* %148, i64 1
  store i8* %151, i8** %25, align 8, !tbaa !79
  store i8 %150, i8* %148, align 1, !tbaa !76
  br label %152

; <label>:152                                     ; preds = %147, %add_value.exit
  %n.111 = phi i32 [ %n.110, %147 ], [ %36, %add_value.exit ]
  %src.1 = phi i8* [ %149, %147 ], [ %33, %add_value.exit ]
  br i1 %10, label %.thread, label %30

.thread:                                          ; preds = %152, %add_value.exit.thread, %30
  %n.2 = phi i32 [ %n.111, %152 ], [ %n.0, %30 ], [ %n.110, %add_value.exit.thread ]
  %src.3 = phi i8* [ %src.1, %152 ], [ %src.0, %30 ], [ %src.0, %add_value.exit.thread ]
  %153 = bitcast i8** %22 to i64*
  %154 = load i64, i64* %153, align 8, !tbaa !285
  %155 = ptrtoint i8* %src.3 to i64
  %156 = sub i64 %154, %155
  call void @luaL_addlstring(%struct.luaL_Buffer* nonnull %b, i8* %src.3, i64 %156) #1
  call void @luaL_pushresult(%struct.luaL_Buffer* nonnull %b) #1
  %157 = sext i32 %n.2 to i64
  call void @lua_pushinteger(%struct.lua_State* %L, i64 %157) #1
  call void @llvm.lifetime.end(i64 8216, i8* %13) #1
  call void @llvm.lifetime.end(i64 544, i8* %12) #1
  call void @llvm.lifetime.end(i64 8, i8* %1) #1
  ret i32 2
}

; Function Attrs: nounwind uwtable
define internal i32 @str_len(%struct.lua_State* %L) #0 {
  %l = alloca i64, align 8
  %1 = bitcast i64* %l to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1) #1
  %2 = call i8* @luaL_checklstring(%struct.lua_State* %L, i32 1, i64* nonnull %l) #1
  %3 = load i64, i64* %l, align 8, !tbaa !39
  call void @lua_pushinteger(%struct.lua_State* %L, i64 %3) #1
  call void @llvm.lifetime.end(i64 8, i8* %1) #1
  ret i32 1
}

; Function Attrs: nounwind uwtable
define internal i32 @str_lower(%struct.lua_State* %L) #0 {
  %l = alloca i64, align 8
  %b = alloca %struct.luaL_Buffer, align 8
  %1 = bitcast i64* %l to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1) #1
  %2 = bitcast %struct.luaL_Buffer* %b to i8*
  call void @llvm.lifetime.start(i64 8216, i8* %2) #1
  %3 = call i8* @luaL_checklstring(%struct.lua_State* %L, i32 1, i64* nonnull %l) #1
  call void @luaL_buffinit(%struct.lua_State* %L, %struct.luaL_Buffer* nonnull %b) #1
  %4 = load i64, i64* %l, align 8, !tbaa !39
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %._crit_edge, label %.lr.ph

.lr.ph:                                           ; preds = %0
  %6 = getelementptr inbounds %struct.luaL_Buffer, %struct.luaL_Buffer* %b, i64 0, i32 0
  %7 = getelementptr inbounds %struct.luaL_Buffer, %struct.luaL_Buffer* %b, i64 0, i32 3, i64 8192
  %8 = tail call i32** @__ctype_tolower_loc() #12
  br label %9

; <label>:9                                       ; preds = %.lr.ph, %14
  %i.01 = phi i64 [ 0, %.lr.ph ], [ %24, %14 ]
  %10 = load i8*, i8** %6, align 8, !tbaa !79
  %11 = icmp ult i8* %10, %7
  br i1 %11, label %14, label %12

; <label>:12                                      ; preds = %9
  %13 = call i8* @luaL_prepbuffer(%struct.luaL_Buffer* nonnull %b) #1
  %.pre = load i8*, i8** %6, align 8, !tbaa !79
  br label %14

; <label>:14                                      ; preds = %12, %9
  %15 = phi i8* [ %.pre, %12 ], [ %10, %9 ]
  %16 = getelementptr inbounds i8, i8* %3, i64 %i.01
  %17 = load i8, i8* %16, align 1, !tbaa !76
  %18 = zext i8 %17 to i64
  %19 = load i32*, i32** %8, align 8, !tbaa !25
  %20 = getelementptr inbounds i32, i32* %19, i64 %18
  %21 = load i32, i32* %20, align 4, !tbaa !38
  %22 = trunc i32 %21 to i8
  %23 = getelementptr inbounds i8, i8* %15, i64 1
  store i8* %23, i8** %6, align 8, !tbaa !79
  store i8 %22, i8* %15, align 1, !tbaa !76
  %24 = add i64 %i.01, 1
  %25 = load i64, i64* %l, align 8, !tbaa !39
  %26 = icmp ult i64 %24, %25
  br i1 %26, label %9, label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %14
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %0
  call void @luaL_pushresult(%struct.luaL_Buffer* nonnull %b) #1
  call void @llvm.lifetime.end(i64 8216, i8* %2) #1
  call void @llvm.lifetime.end(i64 8, i8* %1) #1
  ret i32 1
}

; Function Attrs: nounwind uwtable
define internal i32 @str_match(%struct.lua_State* %L) #0 {
  %1 = tail call fastcc i32 @str_find_aux(%struct.lua_State* %L, i32 0)
  ret i32 %1
}

; Function Attrs: nounwind uwtable
define internal i32 @str_rep(%struct.lua_State* %L) #0 {
  %l = alloca i64, align 8
  %b = alloca %struct.luaL_Buffer, align 8
  %1 = bitcast i64* %l to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1) #1
  %2 = bitcast %struct.luaL_Buffer* %b to i8*
  call void @llvm.lifetime.start(i64 8216, i8* %2) #1
  %3 = call i8* @luaL_checklstring(%struct.lua_State* %L, i32 1, i64* nonnull %l) #1
  %4 = call i64 @luaL_checkinteger(%struct.lua_State* %L, i32 2) #1
  %5 = trunc i64 %4 to i32
  call void @luaL_buffinit(%struct.lua_State* %L, %struct.luaL_Buffer* nonnull %b) #1
  %6 = icmp sgt i32 %5, 0
  br i1 %6, label %.lr.ph.preheader, label %._crit_edge

.lr.ph.preheader:                                 ; preds = %0
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %.lr.ph
  %n.01 = phi i32 [ %7, %.lr.ph ], [ %5, %.lr.ph.preheader ]
  %7 = add nsw i32 %n.01, -1
  %8 = load i64, i64* %l, align 8, !tbaa !39
  call void @luaL_addlstring(%struct.luaL_Buffer* nonnull %b, i8* %3, i64 %8) #1
  %9 = icmp sgt i32 %n.01, 1
  br i1 %9, label %.lr.ph, label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %.lr.ph
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %0
  call void @luaL_pushresult(%struct.luaL_Buffer* nonnull %b) #1
  call void @llvm.lifetime.end(i64 8216, i8* %2) #1
  call void @llvm.lifetime.end(i64 8, i8* %1) #1
  ret i32 1
}

; Function Attrs: nounwind uwtable
define internal i32 @str_reverse(%struct.lua_State* %L) #0 {
  %l = alloca i64, align 8
  %b = alloca %struct.luaL_Buffer, align 8
  %1 = bitcast i64* %l to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1) #1
  %2 = bitcast %struct.luaL_Buffer* %b to i8*
  call void @llvm.lifetime.start(i64 8216, i8* %2) #1
  %3 = call i8* @luaL_checklstring(%struct.lua_State* %L, i32 1, i64* nonnull %l) #1
  call void @luaL_buffinit(%struct.lua_State* %L, %struct.luaL_Buffer* nonnull %b) #1
  %4 = load i64, i64* %l, align 8, !tbaa !39
  %5 = add i64 %4, -1
  store i64 %5, i64* %l, align 8, !tbaa !39
  %6 = icmp eq i64 %4, 0
  br i1 %6, label %._crit_edge, label %.lr.ph

.lr.ph:                                           ; preds = %0
  %7 = getelementptr inbounds %struct.luaL_Buffer, %struct.luaL_Buffer* %b, i64 0, i32 0
  %8 = getelementptr inbounds %struct.luaL_Buffer, %struct.luaL_Buffer* %b, i64 0, i32 3, i64 8192
  br label %9

; <label>:9                                       ; preds = %.lr.ph, %15
  %10 = phi i64 [ %5, %.lr.ph ], [ %22, %15 ]
  %11 = load i8*, i8** %7, align 8, !tbaa !79
  %12 = icmp ult i8* %11, %8
  br i1 %12, label %15, label %13

; <label>:13                                      ; preds = %9
  %14 = call i8* @luaL_prepbuffer(%struct.luaL_Buffer* nonnull %b) #1
  %.pre = load i64, i64* %l, align 8, !tbaa !39
  %.pre1 = load i8*, i8** %7, align 8, !tbaa !79
  br label %15

; <label>:15                                      ; preds = %13, %9
  %16 = phi i8* [ %.pre1, %13 ], [ %11, %9 ]
  %17 = phi i64 [ %.pre, %13 ], [ %10, %9 ]
  %18 = getelementptr inbounds i8, i8* %3, i64 %17
  %19 = load i8, i8* %18, align 1, !tbaa !76
  %20 = getelementptr inbounds i8, i8* %16, i64 1
  store i8* %20, i8** %7, align 8, !tbaa !79
  store i8 %19, i8* %16, align 1, !tbaa !76
  %21 = load i64, i64* %l, align 8, !tbaa !39
  %22 = add i64 %21, -1
  store i64 %22, i64* %l, align 8, !tbaa !39
  %23 = icmp eq i64 %21, 0
  br i1 %23, label %._crit_edge.loopexit, label %9

._crit_edge.loopexit:                             ; preds = %15
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %0
  call void @luaL_pushresult(%struct.luaL_Buffer* nonnull %b) #1
  call void @llvm.lifetime.end(i64 8216, i8* %2) #1
  call void @llvm.lifetime.end(i64 8, i8* %1) #1
  ret i32 1
}

; Function Attrs: nounwind uwtable
define internal i32 @str_sub(%struct.lua_State* %L) #0 {
  %l = alloca i64, align 8
  %1 = bitcast i64* %l to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1) #1
  %2 = call i8* @luaL_checklstring(%struct.lua_State* %L, i32 1, i64* nonnull %l) #1
  %3 = call i64 @luaL_checkinteger(%struct.lua_State* %L, i32 2) #1
  %4 = load i64, i64* %l, align 8, !tbaa !39
  %5 = icmp slt i64 %3, 0
  %6 = add nsw i64 %4, 1
  %7 = select i1 %5, i64 %6, i64 0
  %.0.i = add nsw i64 %7, %3
  %8 = call i64 @luaL_optinteger(%struct.lua_State* %L, i32 3, i64 -1) #1
  %9 = load i64, i64* %l, align 8, !tbaa !39
  %10 = icmp slt i64 %8, 0
  %11 = add nsw i64 %9, 1
  %12 = select i1 %10, i64 %11, i64 0
  %.0.i.1 = add nsw i64 %12, %8
  %13 = icmp slt i64 %.0.i.1, 0
  %14 = select i1 %13, i64 0, i64 %.0.i.1
  %15 = icmp slt i64 %.0.i, 1
  %. = select i1 %15, i64 1, i64 %.0.i
  %16 = icmp sgt i64 %14, %9
  %end.0 = select i1 %16, i64 %9, i64 %14
  %17 = icmp slt i64 %end.0, %.
  br i1 %17, label %23, label %18

; <label>:18                                      ; preds = %0
  %19 = getelementptr inbounds i8, i8* %2, i64 %.
  %20 = getelementptr inbounds i8, i8* %19, i64 -1
  %21 = sub i64 1, %.
  %22 = add i64 %21, %end.0
  call void @lua_pushlstring(%struct.lua_State* %L, i8* %20, i64 %22) #1
  br label %24

; <label>:23                                      ; preds = %0
  call void @lua_pushlstring(%struct.lua_State* %L, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.38.554, i64 0, i64 0), i64 0) #1
  br label %24

; <label>:24                                      ; preds = %23, %18
  call void @llvm.lifetime.end(i64 8, i8* %1) #1
  ret i32 1
}

; Function Attrs: nounwind uwtable
define internal i32 @str_upper(%struct.lua_State* %L) #0 {
  %l = alloca i64, align 8
  %b = alloca %struct.luaL_Buffer, align 8
  %1 = bitcast i64* %l to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1) #1
  %2 = bitcast %struct.luaL_Buffer* %b to i8*
  call void @llvm.lifetime.start(i64 8216, i8* %2) #1
  %3 = call i8* @luaL_checklstring(%struct.lua_State* %L, i32 1, i64* nonnull %l) #1
  call void @luaL_buffinit(%struct.lua_State* %L, %struct.luaL_Buffer* nonnull %b) #1
  %4 = load i64, i64* %l, align 8, !tbaa !39
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %._crit_edge, label %.lr.ph

.lr.ph:                                           ; preds = %0
  %6 = getelementptr inbounds %struct.luaL_Buffer, %struct.luaL_Buffer* %b, i64 0, i32 0
  %7 = getelementptr inbounds %struct.luaL_Buffer, %struct.luaL_Buffer* %b, i64 0, i32 3, i64 8192
  %8 = tail call i32** @__ctype_toupper_loc() #12
  br label %9

; <label>:9                                       ; preds = %.lr.ph, %14
  %i.01 = phi i64 [ 0, %.lr.ph ], [ %24, %14 ]
  %10 = load i8*, i8** %6, align 8, !tbaa !79
  %11 = icmp ult i8* %10, %7
  br i1 %11, label %14, label %12

; <label>:12                                      ; preds = %9
  %13 = call i8* @luaL_prepbuffer(%struct.luaL_Buffer* nonnull %b) #1
  %.pre = load i8*, i8** %6, align 8, !tbaa !79
  br label %14

; <label>:14                                      ; preds = %12, %9
  %15 = phi i8* [ %.pre, %12 ], [ %10, %9 ]
  %16 = getelementptr inbounds i8, i8* %3, i64 %i.01
  %17 = load i8, i8* %16, align 1, !tbaa !76
  %18 = zext i8 %17 to i64
  %19 = load i32*, i32** %8, align 8, !tbaa !25
  %20 = getelementptr inbounds i32, i32* %19, i64 %18
  %21 = load i32, i32* %20, align 4, !tbaa !38
  %22 = trunc i32 %21 to i8
  %23 = getelementptr inbounds i8, i8* %15, i64 1
  store i8* %23, i8** %6, align 8, !tbaa !79
  store i8 %22, i8* %15, align 1, !tbaa !76
  %24 = add i64 %i.01, 1
  %25 = load i64, i64* %l, align 8, !tbaa !39
  %26 = icmp ult i64 %24, %25
  br i1 %26, label %9, label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %14
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %0
  call void @luaL_pushresult(%struct.luaL_Buffer* nonnull %b) #1
  call void @llvm.lifetime.end(i64 8216, i8* %2) #1
  call void @llvm.lifetime.end(i64 8, i8* %1) #1
  ret i32 1
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @str_find_aux(%struct.lua_State* %L, i32 %find) #0 {
  %l1 = alloca i64, align 8
  %l2 = alloca i64, align 8
  %ms = alloca %struct.MatchState, align 8
  %1 = bitcast i64* %l1 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1) #1
  %2 = bitcast i64* %l2 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2) #1
  %3 = call i8* @luaL_checklstring(%struct.lua_State* %L, i32 1, i64* nonnull %l1) #1
  %4 = call i8* @luaL_checklstring(%struct.lua_State* %L, i32 2, i64* nonnull %l2) #1
  %5 = call i64 @luaL_optinteger(%struct.lua_State* %L, i32 3, i64 1) #1
  %6 = load i64, i64* %l1, align 8, !tbaa !39
  %7 = icmp slt i64 %5, 0
  %8 = add nsw i64 %6, 1
  %9 = select i1 %7, i64 %8, i64 0
  %.0.i = add nsw i64 %9, %5
  %10 = icmp slt i64 %.0.i, 0
  %11 = select i1 %10, i64 0, i64 %.0.i
  %12 = add nsw i64 %11, -1
  %13 = icmp slt i64 %11, 1
  %14 = icmp ugt i64 %12, %6
  %. = select i1 %14, i64 %6, i64 %12
  %init.0 = select i1 %13, i64 0, i64 %.
  %15 = icmp ne i32 %find, 0
  br i1 %15, label %16, label %56

; <label>:16                                      ; preds = %0
  %17 = call i32 @lua_toboolean(%struct.lua_State* %L, i32 4) #1
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %21

; <label>:19                                      ; preds = %16
  %20 = call i8* @strpbrk(i8* %4, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.19.569, i64 0, i64 0)) #1
  %phitmp = icmp eq i8* %20, null
  br i1 %phitmp, label %21, label %._crit_edge

._crit_edge:                                      ; preds = %19
  %.pre = load i64, i64* %l1, align 8, !tbaa !39
  br label %56

; <label>:21                                      ; preds = %16, %19
  %22 = getelementptr inbounds i8, i8* %3, i64 %init.0
  %23 = load i64, i64* %l1, align 8, !tbaa !39
  %24 = sub i64 %23, %init.0
  %25 = load i64, i64* %l2, align 8, !tbaa !39
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %lmemfind.exit, label %27

; <label>:27                                      ; preds = %21
  %28 = icmp ugt i64 %25, %24
  br i1 %28, label %lmemfind.exit.thread, label %29

; <label>:29                                      ; preds = %27
  %30 = add i64 %25, -1
  %31 = icmp eq i64 %24, %30
  br i1 %31, label %lmemfind.exit.thread, label %.lr.ph.i.11

.lr.ph.i.11:                                      ; preds = %29
  %32 = sub i64 %24, %30
  %33 = load i8, i8* %4, align 1, !tbaa !76
  %34 = sext i8 %33 to i32
  %35 = getelementptr inbounds i8, i8* %4, i64 1
  br label %36

; <label>:36                                      ; preds = %43, %.lr.ph.i.11
  %.014.i = phi i64 [ %32, %.lr.ph.i.11 ], [ %47, %43 ]
  %.023.i = phi i8* [ %22, %.lr.ph.i.11 ], [ %40, %43 ]
  %37 = call i8* @memchr(i8* %.023.i, i32 %34, i64 %.014.i) #11
  %38 = icmp eq i8* %37, null
  br i1 %38, label %lmemfind.exit.thread.loopexit, label %39

; <label>:39                                      ; preds = %36
  %40 = getelementptr inbounds i8, i8* %37, i64 1
  %41 = call i32 @memcmp(i8* %40, i8* %35, i64 %30) #11
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %.critedge8.loopexit, label %43

; <label>:43                                      ; preds = %39
  %44 = ptrtoint i8* %40 to i64
  %45 = ptrtoint i8* %.023.i to i64
  %46 = add i64 %45, %.014.i
  %47 = sub i64 %46, %44
  %48 = icmp eq i64 %46, %44
  br i1 %48, label %lmemfind.exit.thread.loopexit, label %36

lmemfind.exit:                                    ; preds = %21
  %49 = icmp eq i8* %22, null
  br i1 %49, label %lmemfind.exit.thread, label %.critedge8

.critedge8.loopexit:                              ; preds = %39
  %.lcssa48 = phi i8* [ %37, %39 ]
  br label %.critedge8

.critedge8:                                       ; preds = %.critedge8.loopexit, %lmemfind.exit
  %.1.i17 = phi i8* [ %22, %lmemfind.exit ], [ %.lcssa48, %.critedge8.loopexit ]
  %50 = ptrtoint i8* %.1.i17 to i64
  %51 = ptrtoint i8* %3 to i64
  %52 = sub i64 %50, %51
  %53 = add nsw i64 %52, 1
  call void @lua_pushinteger(%struct.lua_State* %L, i64 %53) #1
  %54 = load i64, i64* %l2, align 8, !tbaa !39
  %55 = add i64 %52, %54
  call void @lua_pushinteger(%struct.lua_State* %L, i64 %55) #1
  br label %94

; <label>:56                                      ; preds = %._crit_edge, %0
  %57 = phi i64 [ %.pre, %._crit_edge ], [ %6, %0 ]
  %58 = bitcast %struct.MatchState* %ms to i8*
  call void @llvm.lifetime.start(i64 544, i8* %58) #1
  %59 = load i8, i8* %4, align 1, !tbaa !76
  %60 = icmp eq i8 %59, 94
  %61 = getelementptr inbounds i8, i8* %4, i64 1
  %.9 = select i1 %60, i8* %61, i8* %4
  %62 = getelementptr inbounds i8, i8* %3, i64 %init.0
  %63 = getelementptr inbounds %struct.MatchState, %struct.MatchState* %ms, i64 0, i32 2
  store %struct.lua_State* %L, %struct.lua_State** %63, align 8, !tbaa !282
  %64 = getelementptr inbounds %struct.MatchState, %struct.MatchState* %ms, i64 0, i32 0
  store i8* %3, i8** %64, align 8, !tbaa !284
  %65 = getelementptr inbounds i8, i8* %3, i64 %57
  %66 = getelementptr inbounds %struct.MatchState, %struct.MatchState* %ms, i64 0, i32 1
  store i8* %65, i8** %66, align 8, !tbaa !285
  %67 = getelementptr inbounds %struct.MatchState, %struct.MatchState* %ms, i64 0, i32 3
  store i32 0, i32* %67, align 8, !tbaa !286
  %68 = call fastcc i8* @match(%struct.MatchState* nonnull %ms, i8* %62, i8* %.9)
  %69 = icmp eq i8* %68, null
  br i1 %60, label %.split.us, label %..split_crit_edge.preheader

..split_crit_edge.preheader:                      ; preds = %56
  br i1 %69, label %.lr.ph.preheader, label %.us-lcssa.us

.lr.ph.preheader:                                 ; preds = %..split_crit_edge.preheader
  br label %.lr.ph

.split.us:                                        ; preds = %56
  br i1 %69, label %.critedge.thread, label %.us-lcssa.us

.us-lcssa.us.loopexit:                            ; preds = %..split_crit_edge
  %.lcssa49 = phi i8* [ %92, %..split_crit_edge ]
  %.lcssa = phi i8* [ %91, %..split_crit_edge ]
  br label %.us-lcssa.us

.us-lcssa.us:                                     ; preds = %.us-lcssa.us.loopexit, %..split_crit_edge.preheader, %.split.us
  %.lcssa27 = phi i8* [ %68, %.split.us ], [ %68, %..split_crit_edge.preheader ], [ %.lcssa49, %.us-lcssa.us.loopexit ]
  %s1.0.lcssa = phi i8* [ %62, %.split.us ], [ %62, %..split_crit_edge.preheader ], [ %.lcssa, %.us-lcssa.us.loopexit ]
  br i1 %15, label %70, label %82

; <label>:70                                      ; preds = %.us-lcssa.us
  %71 = ptrtoint i8* %s1.0.lcssa to i64
  %72 = ptrtoint i8* %3 to i64
  %73 = sub i64 1, %72
  %74 = add i64 %73, %71
  call void @lua_pushinteger(%struct.lua_State* %L, i64 %74) #1
  %75 = ptrtoint i8* %.lcssa27 to i64
  %76 = sub i64 %75, %72
  call void @lua_pushinteger(%struct.lua_State* %L, i64 %76) #1
  %77 = load i32, i32* %67, align 8, !tbaa !286
  %78 = load %struct.lua_State*, %struct.lua_State** %63, align 8, !tbaa !282
  call void @luaL_checkstack(%struct.lua_State* %78, i32 %77, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.21.570, i64 0, i64 0)) #1
  %79 = icmp sgt i32 %77, 0
  br i1 %79, label %.lr.ph.i.14.preheader, label %push_captures.exit15

.lr.ph.i.14.preheader:                            ; preds = %70
  br label %.lr.ph.i.14

.lr.ph.i.14:                                      ; preds = %.lr.ph.i.14.preheader, %.lr.ph.i.14
  %i.02.i.12 = phi i32 [ %80, %.lr.ph.i.14 ], [ 0, %.lr.ph.i.14.preheader ]
  call fastcc void @push_onecapture(%struct.MatchState* nonnull %ms, i32 %i.02.i.12, i8* null, i8* null) #1
  %80 = add nuw nsw i32 %i.02.i.12, 1
  %exitcond.i.13 = icmp eq i32 %80, %77
  br i1 %exitcond.i.13, label %push_captures.exit15.loopexit, label %.lr.ph.i.14

push_captures.exit15.loopexit:                    ; preds = %.lr.ph.i.14
  br label %push_captures.exit15

push_captures.exit15:                             ; preds = %push_captures.exit15.loopexit, %70
  %81 = add nsw i32 %77, 2
  br label %.critedge

; <label>:82                                      ; preds = %.us-lcssa.us
  %83 = load i32, i32* %67, align 8, !tbaa !286
  %84 = icmp eq i32 %83, 0
  %85 = icmp ne i8* %s1.0.lcssa, null
  %or.cond.i = and i1 %85, %84
  %..i = select i1 %or.cond.i, i32 1, i32 %83
  %86 = load %struct.lua_State*, %struct.lua_State** %63, align 8, !tbaa !282
  call void @luaL_checkstack(%struct.lua_State* %86, i32 %..i, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.21.570, i64 0, i64 0)) #1
  %87 = icmp sgt i32 %..i, 0
  br i1 %87, label %.lr.ph.i.preheader, label %.critedge

.lr.ph.i.preheader:                               ; preds = %82
  br label %.lr.ph.i

.lr.ph.i:                                         ; preds = %.lr.ph.i.preheader, %.lr.ph.i
  %i.02.i = phi i32 [ %88, %.lr.ph.i ], [ 0, %.lr.ph.i.preheader ]
  call fastcc void @push_onecapture(%struct.MatchState* nonnull %ms, i32 %i.02.i, i8* %s1.0.lcssa, i8* %.lcssa27) #1
  %88 = add nuw nsw i32 %i.02.i, 1
  %exitcond.i = icmp eq i32 %88, %..i
  br i1 %exitcond.i, label %.critedge.loopexit, label %.lr.ph.i

.lr.ph:                                           ; preds = %.lr.ph.preheader, %..split_crit_edge
  %s1.044 = phi i8* [ %91, %..split_crit_edge ], [ %62, %.lr.ph.preheader ]
  %89 = load i8*, i8** %66, align 8, !tbaa !285
  %90 = icmp ult i8* %s1.044, %89
  br i1 %90, label %..split_crit_edge, label %.critedge.thread.loopexit

..split_crit_edge:                                ; preds = %.lr.ph
  %91 = getelementptr inbounds i8, i8* %s1.044, i64 1
  store i32 0, i32* %67, align 8, !tbaa !286
  %92 = call fastcc i8* @match(%struct.MatchState* nonnull %ms, i8* %91, i8* %.9)
  %93 = icmp eq i8* %92, null
  br i1 %93, label %.lr.ph, label %.us-lcssa.us.loopexit

.critedge.thread.loopexit:                        ; preds = %.lr.ph
  br label %.critedge.thread

.critedge.thread:                                 ; preds = %.critedge.thread.loopexit, %.split.us
  call void @llvm.lifetime.end(i64 544, i8* %58) #1
  br label %lmemfind.exit.thread

.critedge.loopexit:                               ; preds = %.lr.ph.i
  br label %.critedge

.critedge:                                        ; preds = %.critedge.loopexit, %push_captures.exit15, %82
  %.2.ph = phi i32 [ %..i, %82 ], [ %81, %push_captures.exit15 ], [ %..i, %.critedge.loopexit ]
  call void @llvm.lifetime.end(i64 544, i8* %58) #1
  br label %94

lmemfind.exit.thread.loopexit:                    ; preds = %36, %43
  br label %lmemfind.exit.thread

lmemfind.exit.thread:                             ; preds = %lmemfind.exit.thread.loopexit, %29, %27, %.critedge.thread, %lmemfind.exit
  call void @lua_pushnil(%struct.lua_State* %L) #1
  br label %94

; <label>:94                                      ; preds = %.critedge, %.critedge8, %lmemfind.exit.thread
  %.3 = phi i32 [ 1, %lmemfind.exit.thread ], [ %.2.ph, %.critedge ], [ 2, %.critedge8 ]
  call void @llvm.lifetime.end(i64 8, i8* %2) #1
  call void @llvm.lifetime.end(i64 8, i8* %1) #1
  ret i32 %.3
}

; Function Attrs: nounwind uwtable
define internal fastcc i8* @match(%struct.MatchState* %ms, i8* %s, i8* %p) #0 {
  %1 = getelementptr inbounds %struct.MatchState, %struct.MatchState* %ms, i64 0, i32 1
  %2 = getelementptr inbounds %struct.MatchState, %struct.MatchState* %ms, i64 0, i32 2
  %3 = getelementptr inbounds %struct.MatchState, %struct.MatchState* %ms, i64 0, i32 0
  %4 = bitcast i8** %1 to i64*
  %5 = getelementptr inbounds %struct.MatchState, %struct.MatchState* %ms, i64 0, i32 3
  br label %min_expand.exit.thread58.outer

min_expand.exit.thread58.outer:                   ; preds = %min_expand.exit.thread58.outer.backedge, %0
  %.06.ph = phi i8* [ %p, %0 ], [ %.06.ph.be, %min_expand.exit.thread58.outer.backedge ]
  %.04.ph = phi i8* [ %s, %0 ], [ %.04.ph.be, %min_expand.exit.thread58.outer.backedge ]
  %6 = getelementptr inbounds i8, i8* %.04.ph, i64 1
  %7 = getelementptr inbounds i8, i8* %.04.ph, i64 -1
  br label %min_expand.exit.thread58

min_expand.exit.thread58:                         ; preds = %min_expand.exit.thread58.backedge, %min_expand.exit.thread58.outer
  %.06 = phi i8* [ %.06.ph, %min_expand.exit.thread58.outer ], [ %.06.be, %min_expand.exit.thread58.backedge ]
  %8 = load i8, i8* %.06, align 1, !tbaa !76
  %9 = sext i8 %8 to i32
  switch i32 %9, label %260 [
    i32 40, label %10
    i32 41, label %47
    i32 37, label %71
    i32 0, label %start_capture.exit41.loopexit322
    i32 36, label %252
  ]

; <label>:10                                      ; preds = %min_expand.exit.thread58
  %.04.ph.lcssa = phi i8* [ %.04.ph, %min_expand.exit.thread58 ]
  %.06.lcssa = phi i8* [ %.06, %min_expand.exit.thread58 ]
  %11 = getelementptr inbounds i8, i8* %.06.lcssa, i64 1
  %12 = load i8, i8* %11, align 1, !tbaa !76
  %13 = icmp eq i8 %12, 41
  br i1 %13, label %14, label %31

; <label>:14                                      ; preds = %10
  %15 = getelementptr inbounds i8, i8* %.06.lcssa, i64 2
  %16 = load i32, i32* %5, align 4, !tbaa !286
  %17 = icmp sgt i32 %16, 31
  br i1 %17, label %18, label %21

; <label>:18                                      ; preds = %14
  %19 = load %struct.lua_State*, %struct.lua_State** %2, align 8, !tbaa !282
  %20 = tail call i32 (%struct.lua_State*, i8*, ...) @luaL_error(%struct.lua_State* %19, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.21.570, i64 0, i64 0)) #1
  br label %21

; <label>:21                                      ; preds = %18, %14
  %22 = sext i32 %16 to i64
  %23 = getelementptr inbounds %struct.MatchState, %struct.MatchState* %ms, i64 0, i32 4, i64 %22, i32 0
  store i8* %.04.ph.lcssa, i8** %23, align 8, !tbaa !289
  %24 = getelementptr inbounds %struct.MatchState, %struct.MatchState* %ms, i64 0, i32 4, i64 %22, i32 1
  store i64 -2, i64* %24, align 8, !tbaa !287
  %25 = add nsw i32 %16, 1
  store i32 %25, i32* %5, align 4, !tbaa !286
  %26 = tail call fastcc i8* @match(%struct.MatchState* %ms, i8* %.04.ph.lcssa, i8* %15) #1
  %27 = icmp eq i8* %26, null
  br i1 %27, label %28, label %start_capture.exit41

; <label>:28                                      ; preds = %21
  %29 = load i32, i32* %5, align 4, !tbaa !286
  %30 = add nsw i32 %29, -1
  store i32 %30, i32* %5, align 4, !tbaa !286
  br label %start_capture.exit41

; <label>:31                                      ; preds = %10
  %32 = load i32, i32* %5, align 4, !tbaa !286
  %33 = icmp sgt i32 %32, 31
  br i1 %33, label %34, label %37

; <label>:34                                      ; preds = %31
  %35 = load %struct.lua_State*, %struct.lua_State** %2, align 8, !tbaa !282
  %36 = tail call i32 (%struct.lua_State*, i8*, ...) @luaL_error(%struct.lua_State* %35, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.21.570, i64 0, i64 0)) #1
  br label %37

; <label>:37                                      ; preds = %34, %31
  %38 = sext i32 %32 to i64
  %39 = getelementptr inbounds %struct.MatchState, %struct.MatchState* %ms, i64 0, i32 4, i64 %38, i32 0
  store i8* %.04.ph.lcssa, i8** %39, align 8, !tbaa !289
  %40 = getelementptr inbounds %struct.MatchState, %struct.MatchState* %ms, i64 0, i32 4, i64 %38, i32 1
  store i64 -1, i64* %40, align 8, !tbaa !287
  %41 = add nsw i32 %32, 1
  store i32 %41, i32* %5, align 4, !tbaa !286
  %42 = tail call fastcc i8* @match(%struct.MatchState* %ms, i8* %.04.ph.lcssa, i8* %11) #1
  %43 = icmp eq i8* %42, null
  br i1 %43, label %44, label %start_capture.exit41

; <label>:44                                      ; preds = %37
  %45 = load i32, i32* %5, align 4, !tbaa !286
  %46 = add nsw i32 %45, -1
  store i32 %46, i32* %5, align 4, !tbaa !286
  br label %start_capture.exit41

; <label>:47                                      ; preds = %min_expand.exit.thread58
  %.04.ph.lcssa406 = phi i8* [ %.04.ph, %min_expand.exit.thread58 ]
  %.06.lcssa384 = phi i8* [ %.06, %min_expand.exit.thread58 ]
  %48 = getelementptr inbounds i8, i8* %.06.lcssa384, i64 1
  %49 = load i32, i32* %5, align 4, !tbaa !286
  %50 = sext i32 %49 to i64
  br label %51

; <label>:51                                      ; preds = %53, %47
  %indvars.iv = phi i64 [ %indvars.iv.next, %53 ], [ %50, %47 ]
  %level.0.in.i.i = phi i32 [ %level.0.i.i, %53 ], [ %49, %47 ]
  %level.0.i.i = add nsw i32 %level.0.in.i.i, -1
  %52 = icmp sgt i64 %indvars.iv, 0
  br i1 %52, label %53, label %58

; <label>:53                                      ; preds = %51
  %54 = sext i32 %level.0.i.i to i64
  %55 = getelementptr inbounds %struct.MatchState, %struct.MatchState* %ms, i64 0, i32 4, i64 %54, i32 1
  %56 = load i64, i64* %55, align 8, !tbaa !287
  %57 = icmp eq i64 %56, -1
  %indvars.iv.next = add nsw i64 %indvars.iv, -1
  br i1 %57, label %capture_to_close.exit.i.loopexit, label %51

; <label>:58                                      ; preds = %51
  %59 = load %struct.lua_State*, %struct.lua_State** %2, align 8, !tbaa !282
  %60 = tail call i32 (%struct.lua_State*, i8*, ...) @luaL_error(%struct.lua_State* %59, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.22.573, i64 0, i64 0)) #1
  br label %capture_to_close.exit.i

capture_to_close.exit.i.loopexit:                 ; preds = %53
  %level.0.i.i.lcssa383 = phi i32 [ %level.0.i.i, %53 ]
  br label %capture_to_close.exit.i

capture_to_close.exit.i:                          ; preds = %capture_to_close.exit.i.loopexit, %58
  %.0.i.i.40 = phi i32 [ %60, %58 ], [ %level.0.i.i.lcssa383, %capture_to_close.exit.i.loopexit ]
  %61 = sext i32 %.0.i.i.40 to i64
  %62 = getelementptr inbounds %struct.MatchState, %struct.MatchState* %ms, i64 0, i32 4, i64 %61
  %63 = bitcast %struct.LoadS* %62 to i64*
  %64 = load i64, i64* %63, align 8, !tbaa !289
  %65 = ptrtoint i8* %.04.ph.lcssa406 to i64
  %66 = sub i64 %65, %64
  %67 = getelementptr inbounds %struct.MatchState, %struct.MatchState* %ms, i64 0, i32 4, i64 %61, i32 1
  store i64 %66, i64* %67, align 8, !tbaa !287
  %68 = tail call fastcc i8* @match(%struct.MatchState* %ms, i8* %.04.ph.lcssa406, i8* %48) #1
  %69 = icmp eq i8* %68, null
  br i1 %69, label %70, label %start_capture.exit41

; <label>:70                                      ; preds = %capture_to_close.exit.i
  store i64 -1, i64* %67, align 8, !tbaa !287
  br label %start_capture.exit41

; <label>:71                                      ; preds = %min_expand.exit.thread58
  %72 = getelementptr inbounds i8, i8* %.06, i64 1
  %73 = load i8, i8* %72, align 1, !tbaa !76
  %74 = sext i8 %73 to i32
  switch i32 %74, label %214 [
    i32 98, label %75
    i32 102, label %108
  ]

; <label>:75                                      ; preds = %71
  %.06.lcssa387 = phi i8* [ %.06, %71 ]
  %76 = getelementptr inbounds i8, i8* %.06.lcssa387, i64 2
  %77 = load i8, i8* %76, align 1, !tbaa !76
  %78 = icmp eq i8 %77, 0
  br i1 %78, label %83, label %79

; <label>:79                                      ; preds = %75
  %80 = getelementptr inbounds i8, i8* %.06.lcssa387, i64 3
  %81 = load i8, i8* %80, align 1, !tbaa !76
  %82 = icmp eq i8 %81, 0
  br i1 %82, label %83, label %86

; <label>:83                                      ; preds = %79, %75
  %84 = load %struct.lua_State*, %struct.lua_State** %2, align 8, !tbaa !282
  %85 = tail call i32 (%struct.lua_State*, i8*, ...) @luaL_error(%struct.lua_State* %84, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.23.574, i64 0, i64 0)) #1
  %.pre.i.36 = load i8, i8* %76, align 1, !tbaa !76
  br label %86

; <label>:86                                      ; preds = %83, %79
  %87 = phi i8 [ %.pre.i.36, %83 ], [ %77, %79 ]
  %88 = load i8, i8* %.04.ph, align 1, !tbaa !76
  %89 = icmp eq i8 %88, %87
  br i1 %89, label %90, label %start_capture.exit41.loopexit324

; <label>:90                                      ; preds = %86
  %91 = getelementptr inbounds i8, i8* %.06.lcssa387, i64 3
  %92 = load i8, i8* %91, align 1, !tbaa !76
  %93 = load i8*, i8** %1, align 8, !tbaa !285
  %94 = icmp ult i8* %6, %93
  br i1 %94, label %.lr.ph.i.37.preheader, label %start_capture.exit41.loopexit324

.lr.ph.i.37.preheader:                            ; preds = %90
  br label %.lr.ph.i.37

.lr.ph.i.37:                                      ; preds = %.lr.ph.i.37.preheader, %.backedge.i.38
  %95 = phi i8* [ %101, %.backedge.i.38 ], [ %6, %.lr.ph.i.37.preheader ]
  %cont.05.i = phi i32 [ %cont.0.be.i, %.backedge.i.38 ], [ 1, %.lr.ph.i.37.preheader ]
  %.024.i = phi i8* [ %95, %.backedge.i.38 ], [ %.04.ph, %.lr.ph.i.37.preheader ]
  %96 = load i8, i8* %95, align 1, !tbaa !76
  %97 = icmp eq i8 %96, %92
  br i1 %97, label %98, label %103

; <label>:98                                      ; preds = %.lr.ph.i.37
  %99 = add nsw i32 %cont.05.i, -1
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %matchbalance.exit, label %.backedge.i.38

.backedge.i.38:                                   ; preds = %103, %98
  %cont.0.be.i = phi i32 [ %99, %98 ], [ %.cont.0.i, %103 ]
  %101 = getelementptr inbounds i8, i8* %95, i64 1
  %102 = icmp ult i8* %101, %93
  br i1 %102, label %.lr.ph.i.37, label %start_capture.exit41.loopexit321

; <label>:103                                     ; preds = %.lr.ph.i.37
  %104 = icmp eq i8 %96, %87
  %105 = zext i1 %104 to i32
  %.cont.0.i = add nsw i32 %105, %cont.05.i
  br label %.backedge.i.38

matchbalance.exit:                                ; preds = %98
  %.024.i.lcssa = phi i8* [ %.024.i, %98 ]
  %106 = getelementptr inbounds i8, i8* %.024.i.lcssa, i64 2
  %107 = getelementptr inbounds i8, i8* %.06.lcssa387, i64 4
  br label %min_expand.exit.thread58.outer.backedge

; <label>:108                                     ; preds = %71
  %109 = getelementptr inbounds i8, i8* %.06, i64 2
  %110 = load i8, i8* %109, align 1, !tbaa !76
  %111 = icmp eq i8 %110, 91
  br i1 %111, label %115, label %112

; <label>:112                                     ; preds = %108
  %113 = load %struct.lua_State*, %struct.lua_State** %2, align 8, !tbaa !282
  %114 = tail call i32 (%struct.lua_State*, i8*, ...) @luaL_error(%struct.lua_State* %113, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.20.575, i64 0, i64 0)) #1
  %.pre = load i8, i8* %109, align 1, !tbaa !76
  br label %115

; <label>:115                                     ; preds = %108, %112
  %116 = phi i8 [ 91, %108 ], [ %.pre, %112 ]
  %117 = getelementptr inbounds i8, i8* %.06, i64 3
  %118 = sext i8 %116 to i32
  switch i32 %118, label %classend.exit35 [
    i32 37, label %119
    i32 91, label %127
  ]

; <label>:119                                     ; preds = %115
  %120 = load i8, i8* %117, align 1, !tbaa !76
  %121 = icmp eq i8 %120, 0
  br i1 %121, label %122, label %125

; <label>:122                                     ; preds = %119
  %123 = load %struct.lua_State*, %struct.lua_State** %2, align 8, !tbaa !282
  %124 = tail call i32 (%struct.lua_State*, i8*, ...) @luaL_error(%struct.lua_State* %123, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.24.576, i64 0, i64 0)) #1
  br label %125

; <label>:125                                     ; preds = %122, %119
  %126 = getelementptr inbounds i8, i8* %.06, i64 4
  br label %classend.exit35

; <label>:127                                     ; preds = %115
  %128 = load i8, i8* %117, align 1, !tbaa !76
  %129 = icmp eq i8 %128, 94
  %130 = getelementptr inbounds i8, i8* %.06, i64 4
  %..i.28 = select i1 %129, i8* %130, i8* %117
  %.pre.i.29 = load i8, i8* %..i.28, align 1, !tbaa !76
  br label %131

; <label>:131                                     ; preds = %145, %127
  %132 = phi i8 [ %146, %145 ], [ %.pre.i.29, %127 ]
  %.0.i.30 = phi i8* [ %.1.i.33, %145 ], [ %..i.28, %127 ]
  %133 = icmp eq i8 %132, 0
  br i1 %133, label %134, label %137

; <label>:134                                     ; preds = %131
  %135 = load %struct.lua_State*, %struct.lua_State** %2, align 8, !tbaa !282
  %136 = tail call i32 (%struct.lua_State*, i8*, ...) @luaL_error(%struct.lua_State* %135, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.25.577, i64 0, i64 0)) #1
  %.pr.i.31 = load i8, i8* %.0.i.30, align 1, !tbaa !76
  br label %137

; <label>:137                                     ; preds = %134, %131
  %138 = phi i8 [ %.pr.i.31, %134 ], [ %132, %131 ]
  %139 = getelementptr inbounds i8, i8* %.0.i.30, i64 1
  %140 = icmp eq i8 %138, 37
  br i1 %140, label %141, label %145

; <label>:141                                     ; preds = %137
  %142 = load i8, i8* %139, align 1, !tbaa !76
  %143 = icmp eq i8 %142, 0
  %144 = getelementptr inbounds i8, i8* %.0.i.30, i64 2
  %.2.i.32 = select i1 %143, i8* %139, i8* %144
  br label %145

; <label>:145                                     ; preds = %141, %137
  %.1.i.33 = phi i8* [ %139, %137 ], [ %.2.i.32, %141 ]
  %146 = load i8, i8* %.1.i.33, align 1, !tbaa !76
  %147 = icmp eq i8 %146, 93
  br i1 %147, label %148, label %131

; <label>:148                                     ; preds = %145
  %.1.i.33.lcssa = phi i8* [ %.1.i.33, %145 ]
  %149 = getelementptr inbounds i8, i8* %.1.i.33.lcssa, i64 1
  br label %classend.exit35

classend.exit35:                                  ; preds = %115, %125, %148
  %.01.i.34 = phi i8* [ %149, %148 ], [ %126, %125 ], [ %117, %115 ]
  %150 = load i8*, i8** %3, align 8, !tbaa !284
  %151 = icmp eq i8* %.04.ph, %150
  br i1 %151, label %154, label %152

; <label>:152                                     ; preds = %classend.exit35
  %153 = load i8, i8* %7, align 1, !tbaa !76
  br label %154

; <label>:154                                     ; preds = %classend.exit35, %152
  %155 = phi i8 [ %153, %152 ], [ 0, %classend.exit35 ]
  %156 = zext i8 %155 to i32
  %157 = getelementptr inbounds i8, i8* %.01.i.34, i64 -1
  %158 = load i8, i8* %117, align 1, !tbaa !76
  %159 = icmp eq i8 %158, 94
  %.p.i.20 = select i1 %159, i8* %117, i8* %109
  %160 = zext i1 %159 to i32
  %..i.21 = xor i32 %160, 1
  %161 = getelementptr inbounds i8, i8* %.p.i.20, i64 1
  %162 = icmp ult i8* %161, %157
  br i1 %162, label %.lr.ph.i.23.preheader, label %matchbracketclass.exit27

.lr.ph.i.23.preheader:                            ; preds = %154
  br label %.lr.ph.i.23

.lr.ph.i.23:                                      ; preds = %.lr.ph.i.23.preheader, %.backedge.i.25
  %163 = phi i8* [ %184, %.backedge.i.25 ], [ %161, %.lr.ph.i.23.preheader ]
  %.012.i.22 = phi i8* [ %.01.be.i.24, %.backedge.i.25 ], [ %.p.i.20, %.lr.ph.i.23.preheader ]
  %164 = load i8, i8* %163, align 1, !tbaa !76
  %165 = icmp eq i8 %164, 37
  %166 = getelementptr inbounds i8, i8* %.012.i.22, i64 2
  %167 = load i8, i8* %166, align 1, !tbaa !76
  br i1 %165, label %168, label %172

; <label>:168                                     ; preds = %.lr.ph.i.23
  %169 = zext i8 %167 to i32
  %170 = tail call fastcc i32 @match_class(i32 %156, i32 %169) #1
  %171 = icmp eq i32 %170, 0
  br i1 %171, label %.backedge.i.25, label %matchbracketclass.exit27.loopexit

; <label>:172                                     ; preds = %.lr.ph.i.23
  %173 = icmp eq i8 %167, 45
  br i1 %173, label %174, label %182

; <label>:174                                     ; preds = %172
  %175 = getelementptr inbounds i8, i8* %.012.i.22, i64 3
  %176 = icmp ult i8* %175, %157
  br i1 %176, label %177, label %182

; <label>:177                                     ; preds = %174
  %178 = icmp ugt i8 %164, %155
  br i1 %178, label %.backedge.i.25, label %179

; <label>:179                                     ; preds = %177
  %180 = load i8, i8* %175, align 1, !tbaa !76
  %181 = icmp ult i8 %180, %155
  br i1 %181, label %.backedge.i.25, label %matchbracketclass.exit27.loopexit

; <label>:182                                     ; preds = %174, %172
  %183 = icmp eq i8 %164, %155
  br i1 %183, label %matchbracketclass.exit27.loopexit, label %.backedge.i.25

.backedge.i.25:                                   ; preds = %182, %179, %177, %168
  %.01.be.i.24 = phi i8* [ %166, %168 ], [ %175, %179 ], [ %175, %177 ], [ %163, %182 ]
  %184 = getelementptr inbounds i8, i8* %.01.be.i.24, i64 1
  %185 = icmp ult i8* %184, %157
  br i1 %185, label %.lr.ph.i.23, label %matchbracketclass.exit27.loopexit

matchbracketclass.exit27.loopexit:                ; preds = %.backedge.i.25, %182, %179, %168
  %.0.i.26.ph = phi i32 [ %..i.21, %168 ], [ %..i.21, %179 ], [ %..i.21, %182 ], [ %160, %.backedge.i.25 ]
  br label %matchbracketclass.exit27

matchbracketclass.exit27:                         ; preds = %matchbracketclass.exit27.loopexit, %154
  %.0.i.26 = phi i32 [ %160, %154 ], [ %.0.i.26.ph, %matchbracketclass.exit27.loopexit ]
  %186 = icmp eq i32 %.0.i.26, 0
  br i1 %186, label %187, label %start_capture.exit41.loopexit322

; <label>:187                                     ; preds = %matchbracketclass.exit27
  %188 = load i8, i8* %.04.ph, align 1, !tbaa !76
  %189 = zext i8 %188 to i32
  br i1 %162, label %.lr.ph.i.preheader, label %.loopexit62

.lr.ph.i.preheader:                               ; preds = %187
  br label %.lr.ph.i

.lr.ph.i:                                         ; preds = %.lr.ph.i.preheader, %.backedge.i
  %190 = phi i8* [ %211, %.backedge.i ], [ %161, %.lr.ph.i.preheader ]
  %.012.i = phi i8* [ %.01.be.i, %.backedge.i ], [ %.p.i.20, %.lr.ph.i.preheader ]
  %191 = load i8, i8* %190, align 1, !tbaa !76
  %192 = icmp eq i8 %191, 37
  %193 = getelementptr inbounds i8, i8* %.012.i, i64 2
  %194 = load i8, i8* %193, align 1, !tbaa !76
  br i1 %192, label %195, label %199

; <label>:195                                     ; preds = %.lr.ph.i
  %196 = zext i8 %194 to i32
  %197 = tail call fastcc i32 @match_class(i32 %189, i32 %196) #1
  %198 = icmp eq i32 %197, 0
  br i1 %198, label %.backedge.i, label %.loopexit62.loopexit

; <label>:199                                     ; preds = %.lr.ph.i
  %200 = icmp eq i8 %194, 45
  br i1 %200, label %201, label %209

; <label>:201                                     ; preds = %199
  %202 = getelementptr inbounds i8, i8* %.012.i, i64 3
  %203 = icmp ult i8* %202, %157
  br i1 %203, label %204, label %209

; <label>:204                                     ; preds = %201
  %205 = icmp ugt i8 %191, %188
  br i1 %205, label %.backedge.i, label %206

; <label>:206                                     ; preds = %204
  %207 = load i8, i8* %202, align 1, !tbaa !76
  %208 = icmp ult i8 %207, %188
  br i1 %208, label %.backedge.i, label %.loopexit62.loopexit

; <label>:209                                     ; preds = %201, %199
  %210 = icmp eq i8 %191, %188
  br i1 %210, label %.loopexit62.loopexit, label %.backedge.i

.backedge.i:                                      ; preds = %209, %206, %204, %195
  %.01.be.i = phi i8* [ %193, %195 ], [ %202, %206 ], [ %202, %204 ], [ %190, %209 ]
  %211 = getelementptr inbounds i8, i8* %.01.be.i, i64 1
  %212 = icmp ult i8* %211, %157
  br i1 %212, label %.lr.ph.i, label %.loopexit62.loopexit

.loopexit62.loopexit:                             ; preds = %195, %206, %209, %.backedge.i
  %.0.i.19.ph = phi i32 [ %..i.21, %195 ], [ %..i.21, %206 ], [ %..i.21, %209 ], [ %160, %.backedge.i ]
  br label %.loopexit62

.loopexit62:                                      ; preds = %.loopexit62.loopexit, %187
  %.0.i.19 = phi i32 [ %160, %187 ], [ %.0.i.19.ph, %.loopexit62.loopexit ]
  %213 = icmp eq i32 %.0.i.19, 0
  br i1 %213, label %start_capture.exit41.loopexit322, label %min_expand.exit.thread58.backedge

min_expand.exit.thread58.backedge:                ; preds = %.loopexit62, %344, %342
  %.06.be = phi i8* [ %.01.i.34, %.loopexit62 ], [ %343, %344 ], [ %343, %342 ]
  br label %min_expand.exit.thread58

; <label>:214                                     ; preds = %71
  %215 = zext i8 %73 to i64
  %216 = tail call i16** @__ctype_b_loc() #12
  %217 = load i16*, i16** %216, align 8, !tbaa !25
  %218 = getelementptr inbounds i16, i16* %217, i64 %215
  %219 = load i16, i16* %218, align 2, !tbaa !87
  %220 = and i16 %219, 2048
  %221 = icmp eq i16 %220, 0
  br i1 %221, label %.thread207, label %222

; <label>:222                                     ; preds = %214
  %.lcssa394 = phi i8 [ %73, %214 ]
  %.06.lcssa388 = phi i8* [ %.06, %214 ]
  %223 = zext i8 %.lcssa394 to i32
  %224 = add nsw i32 %223, -49
  %225 = icmp ult i8 %.lcssa394, 49
  br i1 %225, label %234, label %226

; <label>:226                                     ; preds = %222
  %227 = load i32, i32* %5, align 4, !tbaa !286
  %228 = icmp slt i32 %224, %227
  br i1 %228, label %229, label %234

; <label>:229                                     ; preds = %226
  %230 = sext i32 %224 to i64
  %231 = getelementptr inbounds %struct.MatchState, %struct.MatchState* %ms, i64 0, i32 4, i64 %230, i32 1
  %232 = load i64, i64* %231, align 8, !tbaa !287
  %233 = icmp eq i64 %232, -1
  br i1 %233, label %234, label %check_capture.exit.i

; <label>:234                                     ; preds = %229, %226, %222
  %235 = load %struct.lua_State*, %struct.lua_State** %2, align 8, !tbaa !282
  %236 = tail call i32 (%struct.lua_State*, i8*, ...) @luaL_error(%struct.lua_State* %235, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.26.571, i64 0, i64 0)) #1
  %.phi.trans.insert.i = sext i32 %236 to i64
  %.phi.trans.insert1.i = getelementptr inbounds %struct.MatchState, %struct.MatchState* %ms, i64 0, i32 4, i64 %.phi.trans.insert.i, i32 1
  %.pre.i.16 = load i64, i64* %.phi.trans.insert1.i, align 8, !tbaa !287
  br label %check_capture.exit.i

check_capture.exit.i:                             ; preds = %234, %229
  %237 = phi i64 [ %.pre.i.16, %234 ], [ %232, %229 ]
  %.0.i.i = phi i32 [ %236, %234 ], [ %224, %229 ]
  %238 = load i64, i64* %4, align 8, !tbaa !285
  %239 = ptrtoint i8* %.04.ph to i64
  %240 = sub i64 %238, %239
  %241 = icmp ult i64 %240, %237
  br i1 %241, label %start_capture.exit41.loopexit324, label %242

; <label>:242                                     ; preds = %check_capture.exit.i
  %243 = sext i32 %.0.i.i to i64
  %244 = getelementptr inbounds %struct.MatchState, %struct.MatchState* %ms, i64 0, i32 4, i64 %243, i32 0
  %245 = load i8*, i8** %244, align 8, !tbaa !289
  %246 = tail call i32 @memcmp(i8* %245, i8* %.04.ph, i64 %237) #11
  %247 = icmp ne i32 %246, 0
  %248 = getelementptr inbounds i8, i8* %.04.ph, i64 %237
  %249 = icmp eq i8* %248, null
  %or.cond = or i1 %249, %247
  br i1 %or.cond, label %start_capture.exit41.loopexit324, label %250

; <label>:250                                     ; preds = %242
  %251 = getelementptr inbounds i8, i8* %.06.lcssa388, i64 2
  br label %min_expand.exit.thread58.outer.backedge

min_expand.exit.thread58.outer.backedge:          ; preds = %250, %matchbalance.exit, %403
  %.06.ph.be = phi i8* [ %.01.i.lcssa, %403 ], [ %107, %matchbalance.exit ], [ %251, %250 ]
  %.04.ph.be = phi i8* [ %6, %403 ], [ %106, %matchbalance.exit ], [ %248, %250 ]
  br label %min_expand.exit.thread58.outer

; <label>:252                                     ; preds = %min_expand.exit.thread58
  %253 = getelementptr inbounds i8, i8* %.06, i64 1
  %254 = load i8, i8* %253, align 1, !tbaa !76
  %255 = icmp eq i8 %254, 0
  br i1 %255, label %256, label %classend.exit

; <label>:256                                     ; preds = %252
  %.04.ph.lcssa408 = phi i8* [ %.04.ph, %252 ]
  %257 = load i8*, i8** %1, align 8, !tbaa !285
  %258 = icmp eq i8* %.04.ph.lcssa408, %257
  %259 = select i1 %258, i8* %.04.ph.lcssa408, i8* null
  br label %start_capture.exit41

; <label>:260                                     ; preds = %min_expand.exit.thread58
  %.pre203 = getelementptr inbounds i8, i8* %.06, i64 1
  %cond = icmp eq i8 %8, 91
  br i1 %cond, label %268, label %classend.exit

.thread207:                                       ; preds = %214
  %261 = load i8, i8* %72, align 1, !tbaa !76
  %262 = icmp eq i8 %261, 0
  br i1 %262, label %263, label %266

; <label>:263                                     ; preds = %.thread207
  %264 = load %struct.lua_State*, %struct.lua_State** %2, align 8, !tbaa !282
  %265 = tail call i32 (%struct.lua_State*, i8*, ...) @luaL_error(%struct.lua_State* %264, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.24.576, i64 0, i64 0)) #1
  br label %266

; <label>:266                                     ; preds = %263, %.thread207
  %267 = getelementptr inbounds i8, i8* %.06, i64 2
  br label %classend.exit

; <label>:268                                     ; preds = %260
  %269 = load i8, i8* %.pre203, align 1, !tbaa !76
  %270 = icmp eq i8 %269, 94
  %271 = getelementptr inbounds i8, i8* %.06, i64 2
  %..i = select i1 %270, i8* %271, i8* %.pre203
  %.pre.i = load i8, i8* %..i, align 1, !tbaa !76
  br label %272

; <label>:272                                     ; preds = %286, %268
  %273 = phi i8 [ %287, %286 ], [ %.pre.i, %268 ]
  %.0.i.15 = phi i8* [ %.1.i, %286 ], [ %..i, %268 ]
  %274 = icmp eq i8 %273, 0
  br i1 %274, label %275, label %278

; <label>:275                                     ; preds = %272
  %276 = load %struct.lua_State*, %struct.lua_State** %2, align 8, !tbaa !282
  %277 = tail call i32 (%struct.lua_State*, i8*, ...) @luaL_error(%struct.lua_State* %276, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.25.577, i64 0, i64 0)) #1
  %.pr.i = load i8, i8* %.0.i.15, align 1, !tbaa !76
  br label %278

; <label>:278                                     ; preds = %275, %272
  %279 = phi i8 [ %.pr.i, %275 ], [ %273, %272 ]
  %280 = getelementptr inbounds i8, i8* %.0.i.15, i64 1
  %281 = icmp eq i8 %279, 37
  br i1 %281, label %282, label %286

; <label>:282                                     ; preds = %278
  %283 = load i8, i8* %280, align 1, !tbaa !76
  %284 = icmp eq i8 %283, 0
  %285 = getelementptr inbounds i8, i8* %.0.i.15, i64 2
  %.2.i = select i1 %284, i8* %280, i8* %285
  br label %286

; <label>:286                                     ; preds = %282, %278
  %.1.i = phi i8* [ %280, %278 ], [ %.2.i, %282 ]
  %287 = load i8, i8* %.1.i, align 1, !tbaa !76
  %288 = icmp eq i8 %287, 93
  br i1 %288, label %289, label %272

; <label>:289                                     ; preds = %286
  %.1.i.lcssa = phi i8* [ %.1.i, %286 ]
  %290 = getelementptr inbounds i8, i8* %.1.i.lcssa, i64 1
  br label %classend.exit

classend.exit:                                    ; preds = %260, %252, %266, %289
  %.pre-phi206 = phi i8* [ %.pre203, %289 ], [ %72, %266 ], [ %.pre203, %260 ], [ %253, %252 ]
  %.01.i = phi i8* [ %290, %289 ], [ %267, %266 ], [ %.pre203, %260 ], [ %253, %252 ]
  %291 = load i8*, i8** %1, align 8, !tbaa !285
  %292 = icmp ult i8* %.04.ph, %291
  br i1 %292, label %293, label %336

; <label>:293                                     ; preds = %classend.exit
  %294 = load i8, i8* %.04.ph, align 1, !tbaa !76
  %295 = zext i8 %294 to i32
  %296 = load i8, i8* %.06, align 1, !tbaa !76
  %297 = sext i8 %296 to i32
  switch i32 %297, label %332 [
    i32 46, label %singlematch.exit
    i32 37, label %298
    i32 91, label %302
  ]

; <label>:298                                     ; preds = %293
  %299 = load i8, i8* %.pre-phi206, align 1, !tbaa !76
  %300 = zext i8 %299 to i32
  %301 = tail call fastcc i32 @match_class(i32 %295, i32 %300) #1
  br label %singlematch.exit

; <label>:302                                     ; preds = %293
  %303 = getelementptr inbounds i8, i8* %.01.i, i64 -1
  %304 = load i8, i8* %.pre-phi206, align 1, !tbaa !76
  %305 = icmp eq i8 %304, 94
  %.p.i.i = select i1 %305, i8* %.pre-phi206, i8* %.06
  %306 = zext i1 %305 to i32
  %..i.i = xor i32 %306, 1
  %307 = getelementptr inbounds i8, i8* %.p.i.i, i64 1
  %308 = icmp ult i8* %307, %303
  br i1 %308, label %.lr.ph.i.i.preheader, label %singlematch.exit

.lr.ph.i.i.preheader:                             ; preds = %302
  br label %.lr.ph.i.i

.lr.ph.i.i:                                       ; preds = %.lr.ph.i.i.preheader, %.backedge.i.i
  %309 = phi i8* [ %330, %.backedge.i.i ], [ %307, %.lr.ph.i.i.preheader ]
  %.012.i.i = phi i8* [ %.01.be.i.i, %.backedge.i.i ], [ %.p.i.i, %.lr.ph.i.i.preheader ]
  %310 = load i8, i8* %309, align 1, !tbaa !76
  %311 = icmp eq i8 %310, 37
  %312 = getelementptr inbounds i8, i8* %.012.i.i, i64 2
  %313 = load i8, i8* %312, align 1, !tbaa !76
  br i1 %311, label %314, label %318

; <label>:314                                     ; preds = %.lr.ph.i.i
  %315 = zext i8 %313 to i32
  %316 = tail call fastcc i32 @match_class(i32 %295, i32 %315) #1
  %317 = icmp eq i32 %316, 0
  br i1 %317, label %.backedge.i.i, label %singlematch.exit.loopexit

; <label>:318                                     ; preds = %.lr.ph.i.i
  %319 = icmp eq i8 %313, 45
  br i1 %319, label %320, label %328

; <label>:320                                     ; preds = %318
  %321 = getelementptr inbounds i8, i8* %.012.i.i, i64 3
  %322 = icmp ult i8* %321, %303
  br i1 %322, label %323, label %328

; <label>:323                                     ; preds = %320
  %324 = icmp ugt i8 %310, %294
  br i1 %324, label %.backedge.i.i, label %325

; <label>:325                                     ; preds = %323
  %326 = load i8, i8* %321, align 1, !tbaa !76
  %327 = icmp ult i8 %326, %294
  br i1 %327, label %.backedge.i.i, label %singlematch.exit.loopexit

; <label>:328                                     ; preds = %320, %318
  %329 = icmp eq i8 %310, %294
  br i1 %329, label %singlematch.exit.loopexit, label %.backedge.i.i

.backedge.i.i:                                    ; preds = %328, %325, %323, %314
  %.01.be.i.i = phi i8* [ %312, %314 ], [ %321, %325 ], [ %321, %323 ], [ %309, %328 ]
  %330 = getelementptr inbounds i8, i8* %.01.be.i.i, i64 1
  %331 = icmp ult i8* %330, %303
  br i1 %331, label %.lr.ph.i.i, label %singlematch.exit.loopexit

; <label>:332                                     ; preds = %293
  %333 = icmp eq i8 %296, %294
  %334 = zext i1 %333 to i32
  br label %singlematch.exit

singlematch.exit.loopexit:                        ; preds = %.backedge.i.i, %328, %325, %314
  %.0.i.ph = phi i32 [ %..i.i, %314 ], [ %..i.i, %325 ], [ %..i.i, %328 ], [ %306, %.backedge.i.i ]
  br label %singlematch.exit

singlematch.exit:                                 ; preds = %singlematch.exit.loopexit, %293, %298, %302, %332
  %.0.i = phi i32 [ %334, %332 ], [ %301, %298 ], [ 1, %293 ], [ %306, %302 ], [ %.0.i.ph, %singlematch.exit.loopexit ]
  %335 = icmp ne i32 %.0.i, 0
  br label %336

; <label>:336                                     ; preds = %singlematch.exit, %classend.exit
  %337 = phi i1 [ false, %classend.exit ], [ %335, %singlematch.exit ]
  %338 = load i8, i8* %.01.i, align 1, !tbaa !76
  %339 = sext i8 %338 to i32
  switch i32 %339, label %403 [
    i32 63, label %342
    i32 42, label %347
    i32 43, label %349
    i32 45, label %.preheader
  ]

.preheader:                                       ; preds = %336
  %.04.ph.lcssa413 = phi i8* [ %.04.ph, %336 ]
  %.01.i.lcssa400 = phi i8* [ %.01.i, %336 ]
  %.pre-phi206.lcssa397 = phi i8* [ %.pre-phi206, %336 ]
  %.06.lcssa392 = phi i8* [ %.06, %336 ]
  %340 = getelementptr inbounds i8, i8* %.01.i.lcssa400, i64 1
  %341 = getelementptr inbounds i8, i8* %.01.i.lcssa400, i64 -1
  br label %.outer

; <label>:342                                     ; preds = %336
  %343 = getelementptr inbounds i8, i8* %.01.i, i64 1
  br i1 %337, label %344, label %min_expand.exit.thread58.backedge

; <label>:344                                     ; preds = %342
  %345 = tail call fastcc i8* @match(%struct.MatchState* %ms, i8* %6, i8* %343)
  %346 = icmp eq i8* %345, null
  br i1 %346, label %min_expand.exit.thread58.backedge, label %start_capture.exit41.loopexit322

; <label>:347                                     ; preds = %336
  %.04.ph.lcssa411 = phi i8* [ %.04.ph, %336 ]
  %.01.i.lcssa398 = phi i8* [ %.01.i, %336 ]
  %.06.lcssa390 = phi i8* [ %.06, %336 ]
  %348 = tail call fastcc i8* @max_expand(%struct.MatchState* %ms, i8* %.04.ph.lcssa411, i8* %.06.lcssa390, i8* %.01.i.lcssa398)
  br label %start_capture.exit41

; <label>:349                                     ; preds = %336
  %.lcssa421 = phi i8* [ %6, %336 ]
  %.lcssa403 = phi i1 [ %337, %336 ]
  %.01.i.lcssa399 = phi i8* [ %.01.i, %336 ]
  %.06.lcssa391 = phi i8* [ %.06, %336 ]
  br i1 %.lcssa403, label %350, label %start_capture.exit41

; <label>:350                                     ; preds = %349
  %351 = tail call fastcc i8* @max_expand(%struct.MatchState* %ms, i8* %.lcssa421, i8* %.06.lcssa391, i8* %.01.i.lcssa399)
  br label %start_capture.exit41

.lr.ph:                                           ; preds = %.lr.ph.preheader, %.thread49
  %.02.i133 = phi i8* [ %358, %.thread49 ], [ %.02.i.ph, %.lr.ph.preheader ]
  %352 = load i8*, i8** %1, align 8, !tbaa !285
  %353 = icmp ult i8* %.02.i133, %352
  br i1 %353, label %354, label %start_capture.exit41.loopexit

; <label>:354                                     ; preds = %.lr.ph
  %355 = load i8, i8* %.02.i133, align 1, !tbaa !76
  %356 = load i8, i8* %.06.lcssa392, align 1, !tbaa !76
  %357 = sext i8 %356 to i32
  switch i32 %357, label %396 [
    i32 46, label %.thread49
    i32 37, label %361
    i32 91, label %366
  ]

.thread49:                                        ; preds = %354
  %358 = getelementptr inbounds i8, i8* %.02.i133, i64 1
  %359 = tail call fastcc i8* @match(%struct.MatchState* %ms, i8* %358, i8* %340) #1
  %360 = icmp eq i8* %359, null
  br i1 %360, label %.lr.ph, label %start_capture.exit41.loopexit

; <label>:361                                     ; preds = %354
  %.lcssa378 = phi i8 [ %355, %354 ]
  %.02.i133.lcssa375 = phi i8* [ %.02.i133, %354 ]
  %362 = zext i8 %.lcssa378 to i32
  %363 = load i8, i8* %.pre-phi206.lcssa397, align 1, !tbaa !76
  %364 = zext i8 %363 to i32
  %365 = tail call fastcc i32 @match_class(i32 %362, i32 %364) #1
  br label %.loopexit

; <label>:366                                     ; preds = %354
  %.lcssa379 = phi i8 [ %355, %354 ]
  %.02.i133.lcssa376 = phi i8* [ %.02.i133, %354 ]
  %367 = zext i8 %.lcssa379 to i32
  %368 = load i8, i8* %.pre-phi206.lcssa397, align 1, !tbaa !76
  %369 = icmp eq i8 %368, 94
  %.p.i.i.i = select i1 %369, i8* %.pre-phi206.lcssa397, i8* %.06.lcssa392
  %370 = zext i1 %369 to i32
  %..i.i.i = xor i32 %370, 1
  %371 = getelementptr inbounds i8, i8* %.p.i.i.i, i64 1
  %372 = icmp ult i8* %371, %341
  br i1 %372, label %.lr.ph.i.i.i.preheader, label %.loopexit

.lr.ph.i.i.i.preheader:                           ; preds = %366
  br label %.lr.ph.i.i.i

.lr.ph.i.i.i:                                     ; preds = %.lr.ph.i.i.i.preheader, %.backedge.i.i.i
  %373 = phi i8* [ %394, %.backedge.i.i.i ], [ %371, %.lr.ph.i.i.i.preheader ]
  %.012.i.i.i = phi i8* [ %.01.be.i.i.i, %.backedge.i.i.i ], [ %.p.i.i.i, %.lr.ph.i.i.i.preheader ]
  %374 = load i8, i8* %373, align 1, !tbaa !76
  %375 = icmp eq i8 %374, 37
  %376 = getelementptr inbounds i8, i8* %.012.i.i.i, i64 2
  %377 = load i8, i8* %376, align 1, !tbaa !76
  br i1 %375, label %378, label %382

; <label>:378                                     ; preds = %.lr.ph.i.i.i
  %379 = zext i8 %377 to i32
  %380 = tail call fastcc i32 @match_class(i32 %367, i32 %379) #1
  %381 = icmp eq i32 %380, 0
  br i1 %381, label %.backedge.i.i.i, label %.loopexit.loopexit

; <label>:382                                     ; preds = %.lr.ph.i.i.i
  %383 = icmp eq i8 %377, 45
  br i1 %383, label %384, label %392

; <label>:384                                     ; preds = %382
  %385 = getelementptr inbounds i8, i8* %.012.i.i.i, i64 3
  %386 = icmp ult i8* %385, %341
  br i1 %386, label %387, label %392

; <label>:387                                     ; preds = %384
  %388 = icmp ugt i8 %374, %.lcssa379
  br i1 %388, label %.backedge.i.i.i, label %389

; <label>:389                                     ; preds = %387
  %390 = load i8, i8* %385, align 1, !tbaa !76
  %391 = icmp ult i8 %390, %.lcssa379
  br i1 %391, label %.backedge.i.i.i, label %.loopexit.loopexit

; <label>:392                                     ; preds = %384, %382
  %393 = icmp eq i8 %374, %.lcssa379
  br i1 %393, label %.loopexit.loopexit, label %.backedge.i.i.i

.backedge.i.i.i:                                  ; preds = %392, %389, %387, %378
  %.01.be.i.i.i = phi i8* [ %376, %378 ], [ %385, %389 ], [ %385, %387 ], [ %373, %392 ]
  %394 = getelementptr inbounds i8, i8* %.01.be.i.i.i, i64 1
  %395 = icmp ult i8* %394, %341
  br i1 %395, label %.lr.ph.i.i.i, label %.loopexit.loopexit

; <label>:396                                     ; preds = %354
  %.lcssa380 = phi i8 [ %356, %354 ]
  %.lcssa = phi i8 [ %355, %354 ]
  %.02.i133.lcssa374 = phi i8* [ %.02.i133, %354 ]
  %397 = icmp eq i8 %.lcssa380, %.lcssa
  %398 = zext i1 %397 to i32
  br label %.loopexit

.loopexit.loopexit:                               ; preds = %.backedge.i.i.i, %392, %389, %378
  %.0.i.i.43.ph = phi i32 [ %370, %.backedge.i.i.i ], [ %..i.i.i, %392 ], [ %..i.i.i, %389 ], [ %..i.i.i, %378 ]
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %361, %366, %396
  %.02.i133377 = phi i8* [ %.02.i133.lcssa374, %396 ], [ %.02.i133.lcssa375, %361 ], [ %.02.i133.lcssa376, %366 ], [ %.02.i133.lcssa376, %.loopexit.loopexit ]
  %.0.i.i.43 = phi i32 [ %398, %396 ], [ %365, %361 ], [ %370, %366 ], [ %.0.i.i.43.ph, %.loopexit.loopexit ]
  %399 = icmp eq i32 %.0.i.i.43, 0
  %400 = getelementptr inbounds i8, i8* %.02.i133377, i64 1
  br i1 %399, label %start_capture.exit41.loopexit319, label %.outer

.outer:                                           ; preds = %.preheader, %.loopexit
  %.02.i.ph = phi i8* [ %.04.ph.lcssa413, %.preheader ], [ %400, %.loopexit ]
  %401 = tail call fastcc i8* @match(%struct.MatchState* %ms, i8* %.02.i.ph, i8* %340) #1
  %402 = icmp eq i8* %401, null
  br i1 %402, label %.lr.ph.preheader, label %start_capture.exit41.loopexit319

.lr.ph.preheader:                                 ; preds = %.outer
  br label %.lr.ph

; <label>:403                                     ; preds = %336
  %.lcssa401 = phi i1 [ %337, %336 ]
  %.01.i.lcssa = phi i8* [ %.01.i, %336 ]
  br i1 %.lcssa401, label %min_expand.exit.thread58.outer.backedge, label %start_capture.exit41.loopexit324

start_capture.exit41.loopexit:                    ; preds = %.lr.ph, %.thread49
  %.4.ph = phi i8* [ %359, %.thread49 ], [ null, %.lr.ph ]
  br label %start_capture.exit41

start_capture.exit41.loopexit319:                 ; preds = %.loopexit, %.outer
  %.4.ph320 = phi i8* [ null, %.loopexit ], [ %401, %.outer ]
  br label %start_capture.exit41

start_capture.exit41.loopexit321:                 ; preds = %.backedge.i.38
  br label %start_capture.exit41

start_capture.exit41.loopexit322:                 ; preds = %min_expand.exit.thread58, %344, %.loopexit62, %matchbracketclass.exit27
  %.4.ph323 = phi i8* [ null, %matchbracketclass.exit27 ], [ null, %.loopexit62 ], [ %.04.ph, %min_expand.exit.thread58 ], [ %345, %344 ]
  br label %start_capture.exit41

start_capture.exit41.loopexit324:                 ; preds = %86, %90, %check_capture.exit.i, %403, %242
  br label %start_capture.exit41

start_capture.exit41:                             ; preds = %start_capture.exit41.loopexit324, %start_capture.exit41.loopexit322, %start_capture.exit41.loopexit321, %start_capture.exit41.loopexit319, %start_capture.exit41.loopexit, %350, %349, %347, %70, %capture_to_close.exit.i, %44, %37, %28, %21, %256
  %.4 = phi i8* [ %259, %256 ], [ %26, %21 ], [ null, %28 ], [ %42, %37 ], [ null, %44 ], [ %68, %capture_to_close.exit.i ], [ null, %70 ], [ null, %349 ], [ %351, %350 ], [ %348, %347 ], [ %.4.ph, %start_capture.exit41.loopexit ], [ %.4.ph320, %start_capture.exit41.loopexit319 ], [ null, %start_capture.exit41.loopexit321 ], [ %.4.ph323, %start_capture.exit41.loopexit322 ], [ null, %start_capture.exit41.loopexit324 ]
  ret i8* %.4
}

; Function Attrs: nounwind uwtable
define internal fastcc void @push_onecapture(%struct.MatchState* nocapture readonly %ms, i32 %i, i8* %s, i8* %e) #0 {
  %1 = getelementptr inbounds %struct.MatchState, %struct.MatchState* %ms, i64 0, i32 3
  %2 = load i32, i32* %1, align 4, !tbaa !286
  %3 = icmp sgt i32 %2, %i
  br i1 %3, label %14, label %4

; <label>:4                                       ; preds = %0
  %5 = icmp eq i32 %i, 0
  %6 = getelementptr inbounds %struct.MatchState, %struct.MatchState* %ms, i64 0, i32 2
  %7 = load %struct.lua_State*, %struct.lua_State** %6, align 8, !tbaa !282
  br i1 %5, label %8, label %12

; <label>:8                                       ; preds = %4
  %9 = ptrtoint i8* %e to i64
  %10 = ptrtoint i8* %s to i64
  %11 = sub i64 %9, %10
  tail call void @lua_pushlstring(%struct.lua_State* %7, i8* %s, i64 %11) #1
  br label %40

; <label>:12                                      ; preds = %4
  %13 = tail call i32 (%struct.lua_State*, i8*, ...) @luaL_error(%struct.lua_State* %7, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.26.571, i64 0, i64 0)) #1
  br label %40

; <label>:14                                      ; preds = %0
  %15 = sext i32 %i to i64
  %16 = getelementptr inbounds %struct.MatchState, %struct.MatchState* %ms, i64 0, i32 4, i64 %15, i32 1
  %17 = load i64, i64* %16, align 8, !tbaa !287
  %18 = icmp eq i64 %17, -1
  br i1 %18, label %.thread, label %25

.thread:                                          ; preds = %14
  %19 = getelementptr inbounds %struct.MatchState, %struct.MatchState* %ms, i64 0, i32 2
  %20 = load %struct.lua_State*, %struct.lua_State** %19, align 8, !tbaa !282
  %21 = tail call i32 (%struct.lua_State*, i8*, ...) @luaL_error(%struct.lua_State* %20, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.27.572, i64 0, i64 0)) #1
  %22 = load %struct.lua_State*, %struct.lua_State** %19, align 8, !tbaa !282
  %23 = getelementptr inbounds %struct.MatchState, %struct.MatchState* %ms, i64 0, i32 4, i64 %15, i32 0
  %24 = load i8*, i8** %23, align 8, !tbaa !289
  br label %37

; <label>:25                                      ; preds = %14
  %26 = icmp eq i64 %17, -2
  %27 = getelementptr inbounds %struct.MatchState, %struct.MatchState* %ms, i64 0, i32 2
  %28 = load %struct.lua_State*, %struct.lua_State** %27, align 8, !tbaa !282
  %29 = getelementptr inbounds %struct.MatchState, %struct.MatchState* %ms, i64 0, i32 4, i64 %15, i32 0
  %30 = load i8*, i8** %29, align 8, !tbaa !289
  br i1 %26, label %31, label %37

; <label>:31                                      ; preds = %25
  %32 = bitcast %struct.MatchState* %ms to i64*
  %33 = load i64, i64* %32, align 8, !tbaa !284
  %34 = ptrtoint i8* %30 to i64
  %35 = add i64 %34, 1
  %36 = sub i64 %35, %33
  tail call void @lua_pushinteger(%struct.lua_State* %28, i64 %36) #1
  br label %40

; <label>:37                                      ; preds = %.thread, %25
  %38 = phi i8* [ %24, %.thread ], [ %30, %25 ]
  %39 = phi %struct.lua_State* [ %22, %.thread ], [ %28, %25 ]
  tail call void @lua_pushlstring(%struct.lua_State* %39, i8* %38, i64 %17) #1
  br label %40

; <label>:40                                      ; preds = %31, %37, %8, %12
  ret void
}

; Function Attrs: nounwind readonly uwtable
define internal fastcc i32 @match_class(i32 %c, i32 %cl) #2 {
  %__c.off.i = add i32 %cl, 128
  %1 = icmp ult i32 %__c.off.i, 384
  br i1 %1, label %2, label %tolower.exit

; <label>:2                                       ; preds = %0
  %3 = sext i32 %cl to i64
  %4 = tail call i32** @__ctype_tolower_loc() #12
  %5 = load i32*, i32** %4, align 8, !tbaa !25
  %6 = getelementptr inbounds i32, i32* %5, i64 %3
  %7 = load i32, i32* %6, align 4, !tbaa !38
  br label %tolower.exit

tolower.exit:                                     ; preds = %0, %2
  %8 = phi i32 [ %7, %2 ], [ %cl, %0 ]
  switch i32 %8, label %84 [
    i32 97, label %9
    i32 99, label %17
    i32 100, label %25
    i32 108, label %33
    i32 112, label %41
    i32 115, label %49
    i32 117, label %57
    i32 119, label %65
    i32 120, label %73
    i32 122, label %81
  ]

; <label>:9                                       ; preds = %tolower.exit
  %10 = sext i32 %c to i64
  %11 = tail call i16** @__ctype_b_loc() #12
  %12 = load i16*, i16** %11, align 8, !tbaa !25
  %13 = getelementptr inbounds i16, i16* %12, i64 %10
  %14 = load i16, i16* %13, align 2, !tbaa !87
  %15 = zext i16 %14 to i32
  %16 = and i32 %15, 1024
  br label %87

; <label>:17                                      ; preds = %tolower.exit
  %18 = sext i32 %c to i64
  %19 = tail call i16** @__ctype_b_loc() #12
  %20 = load i16*, i16** %19, align 8, !tbaa !25
  %21 = getelementptr inbounds i16, i16* %20, i64 %18
  %22 = load i16, i16* %21, align 2, !tbaa !87
  %23 = zext i16 %22 to i32
  %24 = and i32 %23, 2
  br label %87

; <label>:25                                      ; preds = %tolower.exit
  %26 = sext i32 %c to i64
  %27 = tail call i16** @__ctype_b_loc() #12
  %28 = load i16*, i16** %27, align 8, !tbaa !25
  %29 = getelementptr inbounds i16, i16* %28, i64 %26
  %30 = load i16, i16* %29, align 2, !tbaa !87
  %31 = zext i16 %30 to i32
  %32 = and i32 %31, 2048
  br label %87

; <label>:33                                      ; preds = %tolower.exit
  %34 = sext i32 %c to i64
  %35 = tail call i16** @__ctype_b_loc() #12
  %36 = load i16*, i16** %35, align 8, !tbaa !25
  %37 = getelementptr inbounds i16, i16* %36, i64 %34
  %38 = load i16, i16* %37, align 2, !tbaa !87
  %39 = zext i16 %38 to i32
  %40 = and i32 %39, 512
  br label %87

; <label>:41                                      ; preds = %tolower.exit
  %42 = sext i32 %c to i64
  %43 = tail call i16** @__ctype_b_loc() #12
  %44 = load i16*, i16** %43, align 8, !tbaa !25
  %45 = getelementptr inbounds i16, i16* %44, i64 %42
  %46 = load i16, i16* %45, align 2, !tbaa !87
  %47 = zext i16 %46 to i32
  %48 = and i32 %47, 4
  br label %87

; <label>:49                                      ; preds = %tolower.exit
  %50 = sext i32 %c to i64
  %51 = tail call i16** @__ctype_b_loc() #12
  %52 = load i16*, i16** %51, align 8, !tbaa !25
  %53 = getelementptr inbounds i16, i16* %52, i64 %50
  %54 = load i16, i16* %53, align 2, !tbaa !87
  %55 = zext i16 %54 to i32
  %56 = and i32 %55, 8192
  br label %87

; <label>:57                                      ; preds = %tolower.exit
  %58 = sext i32 %c to i64
  %59 = tail call i16** @__ctype_b_loc() #12
  %60 = load i16*, i16** %59, align 8, !tbaa !25
  %61 = getelementptr inbounds i16, i16* %60, i64 %58
  %62 = load i16, i16* %61, align 2, !tbaa !87
  %63 = zext i16 %62 to i32
  %64 = and i32 %63, 256
  br label %87

; <label>:65                                      ; preds = %tolower.exit
  %66 = sext i32 %c to i64
  %67 = tail call i16** @__ctype_b_loc() #12
  %68 = load i16*, i16** %67, align 8, !tbaa !25
  %69 = getelementptr inbounds i16, i16* %68, i64 %66
  %70 = load i16, i16* %69, align 2, !tbaa !87
  %71 = zext i16 %70 to i32
  %72 = and i32 %71, 8
  br label %87

; <label>:73                                      ; preds = %tolower.exit
  %74 = sext i32 %c to i64
  %75 = tail call i16** @__ctype_b_loc() #12
  %76 = load i16*, i16** %75, align 8, !tbaa !25
  %77 = getelementptr inbounds i16, i16* %76, i64 %74
  %78 = load i16, i16* %77, align 2, !tbaa !87
  %79 = zext i16 %78 to i32
  %80 = and i32 %79, 4096
  br label %87

; <label>:81                                      ; preds = %tolower.exit
  %82 = icmp eq i32 %c, 0
  %83 = zext i1 %82 to i32
  %.pre = tail call i16** @__ctype_b_loc() #12
  br label %87

; <label>:84                                      ; preds = %tolower.exit
  %85 = icmp eq i32 %cl, %c
  %86 = zext i1 %85 to i32
  br label %97

; <label>:87                                      ; preds = %81, %73, %65, %57, %49, %41, %33, %25, %17, %9
  %.pre-phi = phi i16** [ %.pre, %81 ], [ %75, %73 ], [ %67, %65 ], [ %59, %57 ], [ %51, %49 ], [ %43, %41 ], [ %35, %33 ], [ %27, %25 ], [ %19, %17 ], [ %11, %9 ]
  %res.0 = phi i32 [ %83, %81 ], [ %80, %73 ], [ %72, %65 ], [ %64, %57 ], [ %56, %49 ], [ %48, %41 ], [ %40, %33 ], [ %32, %25 ], [ %24, %17 ], [ %16, %9 ]
  %88 = sext i32 %cl to i64
  %89 = load i16*, i16** %.pre-phi, align 8, !tbaa !25
  %90 = getelementptr inbounds i16, i16* %89, i64 %88
  %91 = load i16, i16* %90, align 2, !tbaa !87
  %92 = and i16 %91, 512
  %93 = icmp eq i16 %92, 0
  %94 = icmp eq i32 %res.0, 0
  %95 = zext i1 %94 to i32
  %96 = select i1 %93, i32 %95, i32 %res.0
  br label %97

; <label>:97                                      ; preds = %87, %84
  %.0 = phi i32 [ %86, %84 ], [ %96, %87 ]
  ret i32 %.0
}

; Function Attrs: nounwind uwtable
define internal fastcc i8* @max_expand(%struct.MatchState* %ms, i8* %s, i8* readonly %p, i8* %ep) #0 {
  %1 = getelementptr inbounds %struct.MatchState, %struct.MatchState* %ms, i64 0, i32 1
  %2 = load i8*, i8** %1, align 8, !tbaa !285
  %3 = icmp ugt i8* %2, %s
  br i1 %3, label %.lr.ph, label %.critedge.preheader

.lr.ph:                                           ; preds = %0
  %4 = load i8, i8* %p, align 1, !tbaa !76
  %5 = sext i8 %4 to i32
  %6 = getelementptr inbounds i8, i8* %p, i64 1
  %7 = getelementptr inbounds i8, i8* %ep, i64 -1
  switch i8 %4, label %.lr.ph.split..lr.ph.split.split_crit_edge.preheader [
    i8 46, label %singlematch.exit.thread.us.preheader
    i8 37, label %singlematch.exit.us12.preheader
  ]

singlematch.exit.thread.us.preheader:             ; preds = %.lr.ph
  br label %singlematch.exit.thread.us

.lr.ph.split..lr.ph.split.split_crit_edge.preheader: ; preds = %.lr.ph
  br label %.lr.ph.split..lr.ph.split.split_crit_edge

singlematch.exit.us12.preheader:                  ; preds = %.lr.ph
  %8 = load i8, i8* %6, align 1, !tbaa !76
  %9 = zext i8 %8 to i32
  br label %singlematch.exit.us12

singlematch.exit.thread.us:                       ; preds = %singlematch.exit.thread.us.preheader, %singlematch.exit.thread.us
  %i.02.us = phi i64 [ %10, %singlematch.exit.thread.us ], [ 0, %singlematch.exit.thread.us.preheader ]
  %10 = add nuw nsw i64 %i.02.us, 1
  %11 = getelementptr inbounds i8, i8* %s, i64 %10
  %12 = icmp ult i8* %11, %2
  br i1 %12, label %singlematch.exit.thread.us, label %.critedge.preheader.loopexit31

singlematch.exit.us12:                            ; preds = %singlematch.exit.us12.preheader, %singlematch.exit.thread.us14
  %13 = phi i8* [ %19, %singlematch.exit.thread.us14 ], [ %s, %singlematch.exit.us12.preheader ]
  %i.02.us.5 = phi i64 [ %18, %singlematch.exit.thread.us14 ], [ 0, %singlematch.exit.us12.preheader ]
  %14 = load i8, i8* %13, align 1, !tbaa !76
  %15 = zext i8 %14 to i32
  %16 = tail call fastcc i32 @match_class(i32 %15, i32 %9) #1
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %.critedge.preheader.loopexit32, label %singlematch.exit.thread.us14

singlematch.exit.thread.us14:                     ; preds = %singlematch.exit.us12
  %18 = add nuw nsw i64 %i.02.us.5, 1
  %19 = getelementptr inbounds i8, i8* %s, i64 %18
  %20 = icmp ult i8* %19, %2
  br i1 %20, label %singlematch.exit.us12, label %.critedge.preheader.loopexit32

.lr.ph.split..lr.ph.split.split_crit_edge:        ; preds = %.lr.ph.split..lr.ph.split.split_crit_edge.preheader, %singlematch.exit.thread
  %21 = phi i8* [ %59, %singlematch.exit.thread ], [ %s, %.lr.ph.split..lr.ph.split.split_crit_edge.preheader ]
  %i.02 = phi i64 [ %58, %singlematch.exit.thread ], [ 0, %.lr.ph.split..lr.ph.split.split_crit_edge.preheader ]
  %22 = load i8, i8* %21, align 1, !tbaa !76
  %23 = zext i8 %22 to i32
  switch i32 %5, label %53 [
    i32 46, label %singlematch.exit.thread
    i32 91, label %24
  ]

; <label>:24                                      ; preds = %.lr.ph.split..lr.ph.split.split_crit_edge
  %25 = load i8, i8* %6, align 1, !tbaa !76
  %26 = icmp eq i8 %25, 94
  %.p.i.i = select i1 %26, i8* %6, i8* %p
  %27 = zext i1 %26 to i32
  %..i.i = xor i32 %27, 1
  %28 = getelementptr inbounds i8, i8* %.p.i.i, i64 1
  %29 = icmp ult i8* %28, %7
  br i1 %29, label %.lr.ph.i.i.preheader, label %singlematch.exit

.lr.ph.i.i.preheader:                             ; preds = %24
  br label %.lr.ph.i.i

.lr.ph.i.i:                                       ; preds = %.lr.ph.i.i.preheader, %.backedge.i.i
  %30 = phi i8* [ %51, %.backedge.i.i ], [ %28, %.lr.ph.i.i.preheader ]
  %.012.i.i = phi i8* [ %.01.be.i.i, %.backedge.i.i ], [ %.p.i.i, %.lr.ph.i.i.preheader ]
  %31 = load i8, i8* %30, align 1, !tbaa !76
  %32 = icmp eq i8 %31, 37
  %33 = getelementptr inbounds i8, i8* %.012.i.i, i64 2
  %34 = load i8, i8* %33, align 1, !tbaa !76
  br i1 %32, label %35, label %39

; <label>:35                                      ; preds = %.lr.ph.i.i
  %36 = zext i8 %34 to i32
  %37 = tail call fastcc i32 @match_class(i32 %23, i32 %36) #1
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %.backedge.i.i, label %singlematch.exit.loopexit

; <label>:39                                      ; preds = %.lr.ph.i.i
  %40 = icmp eq i8 %34, 45
  br i1 %40, label %41, label %49

; <label>:41                                      ; preds = %39
  %42 = getelementptr inbounds i8, i8* %.012.i.i, i64 3
  %43 = icmp ult i8* %42, %7
  br i1 %43, label %44, label %49

; <label>:44                                      ; preds = %41
  %45 = icmp ugt i8 %31, %22
  br i1 %45, label %.backedge.i.i, label %46

; <label>:46                                      ; preds = %44
  %47 = load i8, i8* %42, align 1, !tbaa !76
  %48 = icmp ult i8 %47, %22
  br i1 %48, label %.backedge.i.i, label %singlematch.exit.loopexit

; <label>:49                                      ; preds = %41, %39
  %50 = icmp eq i8 %31, %22
  br i1 %50, label %singlematch.exit.loopexit, label %.backedge.i.i

.backedge.i.i:                                    ; preds = %49, %46, %44, %35
  %.01.be.i.i = phi i8* [ %33, %35 ], [ %42, %46 ], [ %42, %44 ], [ %30, %49 ]
  %51 = getelementptr inbounds i8, i8* %.01.be.i.i, i64 1
  %52 = icmp ult i8* %51, %7
  br i1 %52, label %.lr.ph.i.i, label %singlematch.exit.loopexit

; <label>:53                                      ; preds = %.lr.ph.split..lr.ph.split.split_crit_edge
  %54 = icmp eq i8 %4, %22
  %55 = zext i1 %54 to i32
  br label %singlematch.exit

singlematch.exit.loopexit:                        ; preds = %.backedge.i.i, %49, %46, %35
  %.0.i.ph = phi i32 [ %..i.i, %35 ], [ %..i.i, %46 ], [ %..i.i, %49 ], [ %27, %.backedge.i.i ]
  br label %singlematch.exit

singlematch.exit:                                 ; preds = %singlematch.exit.loopexit, %24, %53
  %.0.i = phi i32 [ %55, %53 ], [ %27, %24 ], [ %.0.i.ph, %singlematch.exit.loopexit ]
  %56 = icmp eq i32 %.0.i, 0
  br i1 %56, label %.critedge.preheader.loopexit, label %singlematch.exit.thread

.critedge.preheader.loopexit:                     ; preds = %singlematch.exit.thread, %singlematch.exit
  %i.0.lcssa.ph = phi i64 [ %i.02, %singlematch.exit ], [ %58, %singlematch.exit.thread ]
  br label %.critedge.preheader

.critedge.preheader.loopexit31:                   ; preds = %singlematch.exit.thread.us
  %.lcssa = phi i64 [ %10, %singlematch.exit.thread.us ]
  br label %.critedge.preheader

.critedge.preheader.loopexit32:                   ; preds = %singlematch.exit.thread.us14, %singlematch.exit.us12
  %i.0.lcssa.ph33 = phi i64 [ %i.02.us.5, %singlematch.exit.us12 ], [ %18, %singlematch.exit.thread.us14 ]
  br label %.critedge.preheader

.critedge.preheader:                              ; preds = %.critedge.preheader.loopexit32, %.critedge.preheader.loopexit31, %.critedge.preheader.loopexit, %0
  %i.0.lcssa = phi i64 [ 0, %0 ], [ %i.0.lcssa.ph, %.critedge.preheader.loopexit ], [ %.lcssa, %.critedge.preheader.loopexit31 ], [ %i.0.lcssa.ph33, %.critedge.preheader.loopexit32 ]
  %57 = getelementptr inbounds i8, i8* %ep, i64 1
  br label %.critedge

singlematch.exit.thread:                          ; preds = %.lr.ph.split..lr.ph.split.split_crit_edge, %singlematch.exit
  %58 = add nuw nsw i64 %i.02, 1
  %59 = getelementptr inbounds i8, i8* %s, i64 %58
  %60 = icmp ult i8* %59, %2
  br i1 %60, label %.lr.ph.split..lr.ph.split.split_crit_edge, label %.critedge.preheader.loopexit

.critedge:                                        ; preds = %.critedge.preheader, %62
  %i.1 = phi i64 [ %i.2, %62 ], [ %i.0.lcssa, %.critedge.preheader ]
  %61 = icmp sgt i64 %i.1, -1
  br i1 %61, label %62, label %67

; <label>:62                                      ; preds = %.critedge
  %63 = getelementptr inbounds i8, i8* %s, i64 %i.1
  %64 = tail call fastcc i8* @match(%struct.MatchState* %ms, i8* %63, i8* %57)
  %65 = icmp eq i8* %64, null
  %66 = sext i1 %65 to i64
  %i.2 = add nsw i64 %66, %i.1
  br i1 %65, label %.critedge, label %67

; <label>:67                                      ; preds = %.critedge, %62
  %.2 = phi i8* [ %64, %62 ], [ null, %.critedge ]
  ret i8* %.2
}

; Function Attrs: nounwind uwtable
define internal i32 @gmatch_aux(%struct.lua_State* %L) #0 {
  %ms = alloca %struct.MatchState, align 8
  %ls = alloca i64, align 8
  %1 = bitcast %struct.MatchState* %ms to i8*
  call void @llvm.lifetime.start(i64 544, i8* %1) #1
  %2 = bitcast i64* %ls to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2) #1
  %3 = call i8* @lua_tolstring(%struct.lua_State* %L, i32 -10003, i64* nonnull %ls) #1
  %4 = call i8* @lua_tolstring(%struct.lua_State* %L, i32 -10004, i64* null) #1
  %5 = getelementptr inbounds %struct.MatchState, %struct.MatchState* %ms, i64 0, i32 2
  store %struct.lua_State* %L, %struct.lua_State** %5, align 8, !tbaa !282
  %6 = getelementptr inbounds %struct.MatchState, %struct.MatchState* %ms, i64 0, i32 0
  store i8* %3, i8** %6, align 8, !tbaa !284
  %7 = load i64, i64* %ls, align 8, !tbaa !39
  %8 = getelementptr inbounds i8, i8* %3, i64 %7
  %9 = getelementptr inbounds %struct.MatchState, %struct.MatchState* %ms, i64 0, i32 1
  store i8* %8, i8** %9, align 8, !tbaa !285
  %10 = call i64 @lua_tointeger(%struct.lua_State* %L, i32 -10005) #1
  %11 = icmp sgt i64 %10, %7
  br i1 %11, label %push_captures.exit.thread, label %.lr.ph

.lr.ph:                                           ; preds = %0
  %12 = getelementptr inbounds i8, i8* %3, i64 %10
  %13 = getelementptr inbounds %struct.MatchState, %struct.MatchState* %ms, i64 0, i32 3
  br label %14

; <label>:14                                      ; preds = %.lr.ph, %push_captures.exit
  %src.05 = phi i8* [ %12, %.lr.ph ], [ %29, %push_captures.exit ]
  store i32 0, i32* %13, align 8, !tbaa !286
  %15 = call fastcc i8* @match(%struct.MatchState* nonnull %ms, i8* %src.05, i8* %4)
  %16 = icmp eq i8* %15, null
  br i1 %16, label %push_captures.exit, label %17

; <label>:17                                      ; preds = %14
  %.lcssa = phi i8* [ %15, %14 ]
  %src.05.lcssa = phi i8* [ %src.05, %14 ]
  %18 = ptrtoint i8* %.lcssa to i64
  %19 = ptrtoint i8* %3 to i64
  %20 = sub i64 %18, %19
  %21 = icmp eq i8* %.lcssa, %src.05.lcssa
  %22 = zext i1 %21 to i64
  %. = add nsw i64 %20, %22
  call void @lua_pushinteger(%struct.lua_State* %L, i64 %.) #1
  call void @lua_replace(%struct.lua_State* %L, i32 -10005) #1
  %23 = load i32, i32* %13, align 8, !tbaa !286
  %24 = icmp eq i32 %23, 0
  %25 = icmp ne i8* %src.05.lcssa, null
  %or.cond.i = and i1 %25, %24
  %..i = select i1 %or.cond.i, i32 1, i32 %23
  %26 = load %struct.lua_State*, %struct.lua_State** %5, align 8, !tbaa !282
  call void @luaL_checkstack(%struct.lua_State* %26, i32 %..i, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.21.570, i64 0, i64 0)) #1
  %27 = icmp sgt i32 %..i, 0
  br i1 %27, label %.lr.ph.i.preheader, label %push_captures.exit.thread

.lr.ph.i.preheader:                               ; preds = %17
  br label %.lr.ph.i

.lr.ph.i:                                         ; preds = %.lr.ph.i.preheader, %.lr.ph.i
  %i.02.i = phi i32 [ %28, %.lr.ph.i ], [ 0, %.lr.ph.i.preheader ]
  call fastcc void @push_onecapture(%struct.MatchState* nonnull %ms, i32 %i.02.i, i8* %src.05.lcssa, i8* %.lcssa) #1
  %28 = add nuw nsw i32 %i.02.i, 1
  %exitcond.i = icmp eq i32 %28, %..i
  br i1 %exitcond.i, label %push_captures.exit.thread.loopexit, label %.lr.ph.i

push_captures.exit:                               ; preds = %14
  %29 = getelementptr inbounds i8, i8* %src.05, i64 1
  %30 = load i8*, i8** %9, align 8, !tbaa !285
  %31 = icmp ugt i8* %29, %30
  br i1 %31, label %push_captures.exit.thread.loopexit14, label %14

push_captures.exit.thread.loopexit:               ; preds = %.lr.ph.i
  br label %push_captures.exit.thread

push_captures.exit.thread.loopexit14:             ; preds = %push_captures.exit
  br label %push_captures.exit.thread

push_captures.exit.thread:                        ; preds = %push_captures.exit.thread.loopexit14, %push_captures.exit.thread.loopexit, %0, %17
  %.2 = phi i32 [ %..i, %17 ], [ 0, %0 ], [ %..i, %push_captures.exit.thread.loopexit ], [ 0, %push_captures.exit.thread.loopexit14 ]
  call void @llvm.lifetime.end(i64 8, i8* %2) #1
  call void @llvm.lifetime.end(i64 544, i8* %1) #1
  ret i32 %.2
}

; Function Attrs: nounwind uwtable
define internal i32 @writer(%struct.lua_State* nocapture readnone %L, i8* %b, i64 %size, i8* %B) #0 {
  %1 = bitcast i8* %B to %struct.luaL_Buffer*
  tail call void @luaL_addlstring(%struct.luaL_Buffer* %1, i8* %b, i64 %size) #1
  ret i32 0
}

; Function Attrs: nounwind uwtable
define hidden i32 @luaH_next(%struct.lua_State* %L, %struct.Table* nocapture readonly %t, %struct.lua_TValue* %key) #0 {
  %1 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %key, i64 0, i32 1
  %2 = load i32, i32* %1, align 4, !tbaa !10
  switch i32 %2, label %75 [
    i32 0, label %findindex.exit.preheader
    i32 3, label %3
    i32 2, label %60
    i32 4, label %32
    i32 1, label %47
  ]

; <label>:3                                       ; preds = %0
  %4 = bitcast %struct.lua_TValue* %key to double*
  %5 = load double, double* %4, align 8, !tbaa !36
  %6 = fptosi double %5 to i32
  %7 = sitofp i32 %6 to double
  %not..i.i = fcmp oeq double %7, %5
  %8 = icmp sgt i32 %6, 0
  %or.cond.i = and i1 %8, %not..i.i
  br i1 %or.cond.i, label %9, label %arrayindex.exit.thread.thread.i

; <label>:9                                       ; preds = %3
  %10 = getelementptr inbounds %struct.Table, %struct.Table* %t, i64 0, i32 10
  %11 = load i32, i32* %10, align 4, !tbaa !206
  %12 = icmp sgt i32 %6, %11
  br i1 %12, label %arrayindex.exit.thread.thread.i, label %13

; <label>:13                                      ; preds = %9
  %14 = add nsw i32 %6, -1
  br label %findindex.exit.preheader

arrayindex.exit.thread.thread.i:                  ; preds = %9, %3
  %15 = fcmp oeq double %5, 0.000000e+00
  %16 = getelementptr inbounds %struct.Table, %struct.Table* %t, i64 0, i32 7
  %17 = load %struct.Node*, %struct.Node** %16, align 8
  br i1 %15, label %mainposition.exit.preheader.i, label %18

; <label>:18                                      ; preds = %arrayindex.exit.thread.thread.i
  %19 = bitcast double %5 to i64
  %20 = lshr i64 %19, 32
  %21 = trunc i64 %20 to i32
  %trunc.i.i = trunc i64 %19 to i32
  %22 = add i32 %21, %trunc.i.i
  %23 = getelementptr inbounds %struct.Table, %struct.Table* %t, i64 0, i32 4
  %24 = load i8, i8* %23, align 1, !tbaa !210
  %25 = zext i8 %24 to i32
  %26 = shl i32 1, %25
  %27 = add nsw i32 %26, -1
  %28 = or i32 %27, 1
  %29 = urem i32 %22, %28
  %30 = zext i32 %29 to i64
  %31 = getelementptr inbounds %struct.Node, %struct.Node* %17, i64 %30
  br label %mainposition.exit.preheader.i

; <label>:32                                      ; preds = %0
  %33 = bitcast %struct.lua_TValue* %key to %struct.anon.1**
  %34 = load %struct.anon.1*, %struct.anon.1** %33, align 8, !tbaa !25
  %35 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %34, i64 0, i32 4
  %36 = load i32, i32* %35, align 4, !tbaa !277
  %37 = getelementptr inbounds %struct.Table, %struct.Table* %t, i64 0, i32 4
  %38 = load i8, i8* %37, align 1, !tbaa !210
  %39 = zext i8 %38 to i32
  %40 = shl i32 1, %39
  %41 = add nsw i32 %40, -1
  %42 = and i32 %41, %36
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds %struct.Table, %struct.Table* %t, i64 0, i32 7
  %45 = load %struct.Node*, %struct.Node** %44, align 8, !tbaa !211
  %46 = getelementptr inbounds %struct.Node, %struct.Node* %45, i64 %43
  br label %mainposition.exit.preheader.i

; <label>:47                                      ; preds = %0
  %48 = bitcast %struct.lua_TValue* %key to i32*
  %49 = load i32, i32* %48, align 4, !tbaa !38
  %50 = getelementptr inbounds %struct.Table, %struct.Table* %t, i64 0, i32 4
  %51 = load i8, i8* %50, align 1, !tbaa !210
  %52 = zext i8 %51 to i32
  %53 = shl i32 1, %52
  %54 = add nsw i32 %53, -1
  %55 = and i32 %54, %49
  %56 = sext i32 %55 to i64
  %57 = getelementptr inbounds %struct.Table, %struct.Table* %t, i64 0, i32 7
  %58 = load %struct.Node*, %struct.Node** %57, align 8, !tbaa !211
  %59 = getelementptr inbounds %struct.Node, %struct.Node* %58, i64 %56
  br label %mainposition.exit.preheader.i

; <label>:60                                      ; preds = %0
  %61 = bitcast %struct.lua_TValue* %key to i64*
  %62 = load i64, i64* %61, align 8, !tbaa !25
  %63 = trunc i64 %62 to i32
  %64 = getelementptr inbounds %struct.Table, %struct.Table* %t, i64 0, i32 4
  %65 = load i8, i8* %64, align 1, !tbaa !210
  %66 = zext i8 %65 to i32
  %67 = shl i32 1, %66
  %68 = add nsw i32 %67, -1
  %69 = or i32 %68, 1
  %70 = urem i32 %63, %69
  %71 = zext i32 %70 to i64
  %72 = getelementptr inbounds %struct.Table, %struct.Table* %t, i64 0, i32 7
  %73 = load %struct.Node*, %struct.Node** %72, align 8, !tbaa !211
  %74 = getelementptr inbounds %struct.Node, %struct.Node* %73, i64 %71
  br label %mainposition.exit.preheader.i

; <label>:75                                      ; preds = %0
  %76 = bitcast %struct.lua_TValue* %key to i64*
  %77 = load i64, i64* %76, align 8, !tbaa !25
  %78 = trunc i64 %77 to i32
  %79 = getelementptr inbounds %struct.Table, %struct.Table* %t, i64 0, i32 4
  %80 = load i8, i8* %79, align 1, !tbaa !210
  %81 = zext i8 %80 to i32
  %82 = shl i32 1, %81
  %83 = add nsw i32 %82, -1
  %84 = or i32 %83, 1
  %85 = urem i32 %78, %84
  %86 = zext i32 %85 to i64
  %87 = getelementptr inbounds %struct.Table, %struct.Table* %t, i64 0, i32 7
  %88 = load %struct.Node*, %struct.Node** %87, align 8, !tbaa !211
  %89 = getelementptr inbounds %struct.Node, %struct.Node* %88, i64 %86
  br label %mainposition.exit.preheader.i

mainposition.exit.preheader.i:                    ; preds = %75, %60, %47, %32, %18, %arrayindex.exit.thread.thread.i
  %n.0.ph.i = phi %struct.Node* [ %31, %18 ], [ %46, %32 ], [ %59, %47 ], [ %74, %60 ], [ %89, %75 ], [ %17, %arrayindex.exit.thread.thread.i ]
  %90 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %key, i64 0, i32 0, i32 0
  br label %mainposition.exit.i

mainposition.exit.i:                              ; preds = %118, %mainposition.exit.preheader.i
  %n.0.i = phi %struct.Node* [ %120, %118 ], [ %n.0.ph.i, %mainposition.exit.preheader.i ]
  %91 = getelementptr inbounds %struct.Node, %struct.Node* %n.0.i, i64 0, i32 1
  %92 = bitcast %union.TKey* %91 to %struct.lua_TValue*
  %93 = tail call i32 bitcast (i32 (%struct.lua_TValue.218*, %struct.lua_TValue.218*)* @luaO_rawequalObj to i32 (%struct.lua_TValue*, %struct.lua_TValue*)*)(%struct.lua_TValue* %92, %struct.lua_TValue* %key) #1
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %107

; <label>:95                                      ; preds = %mainposition.exit.i
  %96 = getelementptr inbounds %struct.Node, %struct.Node* %n.0.i, i64 0, i32 1, i32 0, i32 1
  %97 = load i32, i32* %96, align 4, !tbaa !212
  %98 = icmp eq i32 %97, 11
  br i1 %98, label %99, label %118

; <label>:99                                      ; preds = %95
  %100 = load i32, i32* %1, align 4, !tbaa !10
  %101 = icmp sgt i32 %100, 3
  br i1 %101, label %102, label %118

; <label>:102                                     ; preds = %99
  %103 = getelementptr inbounds %union.TKey, %union.TKey* %91, i64 0, i32 0, i32 0, i32 0
  %104 = load %union.GCObject*, %union.GCObject** %103, align 8, !tbaa !25
  %105 = load %union.GCObject*, %union.GCObject** %90, align 8, !tbaa !25
  %106 = icmp eq %union.GCObject* %104, %105
  br i1 %106, label %107, label %118

; <label>:107                                     ; preds = %102, %mainposition.exit.i
  %n.0.i.lcssa = phi %struct.Node* [ %n.0.i, %102 ], [ %n.0.i, %mainposition.exit.i ]
  %108 = getelementptr inbounds %struct.Table, %struct.Table* %t, i64 0, i32 7
  %109 = bitcast %struct.Node** %108 to i64*
  %110 = load i64, i64* %109, align 8, !tbaa !211
  %111 = ptrtoint %struct.Node* %n.0.i.lcssa to i64
  %112 = sub i64 %111, %110
  %113 = sdiv exact i64 %112, 40
  %114 = trunc i64 %113 to i32
  %115 = getelementptr inbounds %struct.Table, %struct.Table* %t, i64 0, i32 10
  %116 = load i32, i32* %115, align 4, !tbaa !206
  %117 = add nsw i32 %114, %116
  br label %findindex.exit.preheader

; <label>:118                                     ; preds = %102, %99, %95
  %119 = getelementptr inbounds %struct.Node, %struct.Node* %n.0.i, i64 0, i32 1, i32 0, i32 2
  %120 = load %struct.Node*, %struct.Node** %119, align 8, !tbaa !290
  %121 = icmp eq %struct.Node* %120, null
  br i1 %121, label %122, label %mainposition.exit.i

; <label>:122                                     ; preds = %118
  tail call void (%struct.lua_State*, i8*, ...) @luaG_runerror(%struct.lua_State* %L, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.2.607, i64 0, i64 0)) #1
  br label %findindex.exit.preheader

findindex.exit.preheader:                         ; preds = %0, %13, %107, %122
  %i.0.in.ph = phi i32 [ 0, %122 ], [ %117, %107 ], [ -1, %0 ], [ %14, %13 ]
  %123 = getelementptr inbounds %struct.Table, %struct.Table* %t, i64 0, i32 10
  %124 = load i32, i32* %123, align 4, !tbaa !206
  %125 = getelementptr inbounds %struct.Table, %struct.Table* %t, i64 0, i32 6
  %126 = sext i32 %i.0.in.ph to i64
  br label %findindex.exit

findindex.exit:                                   ; preds = %findindex.exit.preheader, %128
  %indvars.iv20 = phi i64 [ %126, %findindex.exit.preheader ], [ %indvars.iv.next21, %128 ]
  %i.0.in = phi i32 [ %i.0.in.ph, %findindex.exit.preheader ], [ %i.0, %128 ]
  %i.0 = add nsw i32 %i.0.in, 1
  %127 = icmp slt i32 %i.0, %124
  br i1 %127, label %128, label %146

; <label>:128                                     ; preds = %findindex.exit
  %129 = sext i32 %i.0 to i64
  %130 = load %struct.lua_TValue*, %struct.lua_TValue** %125, align 8, !tbaa !208
  %131 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %130, i64 %129, i32 1
  %132 = load i32, i32* %131, align 4, !tbaa !10
  %133 = icmp eq i32 %132, 0
  %indvars.iv.next21 = add nsw i64 %indvars.iv20, 1
  br i1 %133, label %findindex.exit, label %134

; <label>:134                                     ; preds = %128
  %.lcssa45 = phi i32* [ %131, %128 ]
  %.lcssa44 = phi %struct.lua_TValue* [ %130, %128 ]
  %.lcssa = phi i64 [ %129, %128 ]
  %indvars.iv20.lcssa42 = phi i64 [ %indvars.iv20, %128 ]
  %135 = trunc i64 %indvars.iv20.lcssa42 to i32
  %136 = add nsw i32 %135, 2
  %137 = sitofp i32 %136 to double
  %138 = bitcast %struct.lua_TValue* %key to double*
  store double %137, double* %138, align 8, !tbaa !36
  store i32 3, i32* %1, align 4, !tbaa !10
  %139 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %.lcssa44, i64 %.lcssa
  %140 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %key, i64 1
  %141 = bitcast %struct.lua_TValue* %139 to i64*
  %142 = bitcast %struct.lua_TValue* %140 to i64*
  %143 = load i64, i64* %141, align 8
  store i64 %143, i64* %142, align 8
  %144 = load i32, i32* %.lcssa45, align 4, !tbaa !10
  %145 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %key, i64 1, i32 1
  store i32 %144, i32* %145, align 4, !tbaa !10
  br label %.loopexit

; <label>:146                                     ; preds = %findindex.exit
  %i.0.lcssa = phi i32 [ %i.0, %findindex.exit ]
  %147 = sub i32 %i.0.lcssa, %124
  %148 = getelementptr inbounds %struct.Table, %struct.Table* %t, i64 0, i32 4
  %149 = load i8, i8* %148, align 1, !tbaa !210
  %150 = zext i8 %149 to i32
  %151 = shl i32 1, %150
  %152 = icmp slt i32 %147, %151
  br i1 %152, label %.lr.ph, label %.loopexit

.lr.ph:                                           ; preds = %146
  %153 = getelementptr inbounds %struct.Table, %struct.Table* %t, i64 0, i32 7
  %154 = load %struct.Node*, %struct.Node** %153, align 8, !tbaa !211
  %155 = sext i32 %147 to i64
  %156 = sext i32 %151 to i64
  br label %159

; <label>:157                                     ; preds = %159
  %158 = icmp slt i64 %indvars.iv.next, %156
  br i1 %158, label %159, label %.loopexit.loopexit

; <label>:159                                     ; preds = %.lr.ph, %157
  %indvars.iv = phi i64 [ %155, %.lr.ph ], [ %indvars.iv.next, %157 ]
  %160 = getelementptr inbounds %struct.Node, %struct.Node* %154, i64 %indvars.iv, i32 0, i32 1
  %161 = load i32, i32* %160, align 4, !tbaa !10
  %162 = icmp eq i32 %161, 0
  %indvars.iv.next = add i64 %indvars.iv, 1
  br i1 %162, label %157, label %163

; <label>:163                                     ; preds = %159
  %indvars.iv.lcssa = phi i64 [ %indvars.iv, %159 ]
  %164 = getelementptr inbounds %struct.Node, %struct.Node* %154, i64 %indvars.iv.lcssa, i32 1
  %165 = bitcast %union.TKey* %164 to i64*
  %166 = bitcast %struct.lua_TValue* %key to i64*
  %167 = load i64, i64* %165, align 8
  store i64 %167, i64* %166, align 8
  %168 = getelementptr inbounds %struct.Node, %struct.Node* %154, i64 %indvars.iv.lcssa, i32 1, i32 0, i32 1
  %169 = load i32, i32* %168, align 4, !tbaa !10
  store i32 %169, i32* %1, align 4, !tbaa !10
  %170 = load %struct.Node*, %struct.Node** %153, align 8, !tbaa !211
  %171 = getelementptr inbounds %struct.Node, %struct.Node* %170, i64 %indvars.iv.lcssa, i32 0
  %172 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %key, i64 1
  %173 = bitcast %struct.lua_TValue* %171 to i64*
  %174 = bitcast %struct.lua_TValue* %172 to i64*
  %175 = load i64, i64* %173, align 8
  store i64 %175, i64* %174, align 8
  %176 = getelementptr inbounds %struct.Node, %struct.Node* %170, i64 %indvars.iv.lcssa, i32 0, i32 1
  %177 = load i32, i32* %176, align 4, !tbaa !10
  %178 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %key, i64 1, i32 1
  store i32 %177, i32* %178, align 4, !tbaa !10
  br label %.loopexit

.loopexit.loopexit:                               ; preds = %157
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %146, %163, %134
  %.0 = phi i32 [ 1, %134 ], [ 1, %163 ], [ 0, %146 ], [ 0, %.loopexit.loopexit ]
  ret i32 %.0
}

; Function Attrs: nounwind uwtable
define hidden void @luaH_resizearray(%struct.lua_State* %L, %struct.Table* %t, i32 %nasize) #0 {
  %1 = getelementptr inbounds %struct.Table, %struct.Table* %t, i64 0, i32 7
  %2 = load %struct.Node*, %struct.Node** %1, align 8, !tbaa !211
  %3 = icmp eq %struct.Node* %2, @dummynode_
  br i1 %3, label %9, label %4

; <label>:4                                       ; preds = %0
  %5 = getelementptr inbounds %struct.Table, %struct.Table* %t, i64 0, i32 4
  %6 = load i8, i8* %5, align 1, !tbaa !210
  %7 = zext i8 %6 to i32
  %8 = shl i32 1, %7
  br label %9

; <label>:9                                       ; preds = %0, %4
  %10 = phi i32 [ %8, %4 ], [ 0, %0 ]
  tail call fastcc void @resize(%struct.lua_State* %L, %struct.Table* %t, i32 %nasize, i32 %10)
  ret void
}

; Function Attrs: nounwind uwtable
define hidden %struct.Table* @luaH_new(%struct.lua_State* %L, i32 %narray, i32 %nhash) #0 {
  %1 = tail call i8* @luaM_realloc_(%struct.lua_State* %L, i8* null, i64 0, i64 64) #1
  %2 = bitcast i8* %1 to %struct.Table*
  %3 = bitcast i8* %1 to %union.GCObject*
  tail call void @luaC_link(%struct.lua_State* %L, %union.GCObject* %3, i8 zeroext 5) #1
  %4 = getelementptr inbounds i8, i8* %1, i64 16
  %5 = bitcast i8* %4 to %struct.Table**
  store %struct.Table* null, %struct.Table** %5, align 8, !tbaa !47
  %6 = getelementptr inbounds i8, i8* %1, i64 10
  store i8 -1, i8* %6, align 1, !tbaa !187
  %7 = getelementptr inbounds i8, i8* %1, i64 24
  %8 = bitcast i8* %7 to %struct.lua_TValue**
  store %struct.lua_TValue* null, %struct.lua_TValue** %8, align 8, !tbaa !208
  %9 = getelementptr inbounds i8, i8* %1, i64 56
  %10 = bitcast i8* %9 to i32*
  store i32 0, i32* %10, align 4, !tbaa !206
  %11 = getelementptr inbounds i8, i8* %1, i64 11
  store i8 0, i8* %11, align 1, !tbaa !210
  %12 = getelementptr inbounds i8, i8* %1, i64 32
  %13 = bitcast i8* %12 to %struct.Node**
  store %struct.Node* @dummynode_, %struct.Node** %13, align 8, !tbaa !211
  %14 = icmp sgt i32 %narray, -2
  br i1 %14, label %15, label %19

; <label>:15                                      ; preds = %0
  %16 = sext i32 %narray to i64
  %17 = shl nsw i64 %16, 4
  %18 = tail call i8* @luaM_realloc_(%struct.lua_State* %L, i8* null, i64 0, i64 %17) #1
  br label %21

; <label>:19                                      ; preds = %0
  %20 = tail call i8* @luaM_toobig(%struct.lua_State* %L) #1
  br label %21

; <label>:21                                      ; preds = %19, %15
  %22 = phi i8* [ %20, %19 ], [ %18, %15 ]
  %.pre-phi3.i = bitcast i8* %7 to i8**
  store i8* %22, i8** %.pre-phi3.i, align 8, !tbaa !208
  %23 = load i32, i32* %10, align 4, !tbaa !206
  %24 = icmp slt i32 %23, %narray
  %25 = bitcast i8* %22 to %struct.lua_TValue*
  br i1 %24, label %.lr.ph.i, label %setarrayvector.exit

.lr.ph.i:                                         ; preds = %21
  %26 = sext i32 %23 to i64
  %27 = sub i32 %narray, %23
  %28 = add i32 %narray, -1
  %29 = sub i32 %28, %23
  %xtraiter = and i32 %27, 7
  %lcmp.mod = icmp eq i32 %xtraiter, 0
  br i1 %lcmp.mod, label %.lr.ph.i.split, label %.preheader

.preheader:                                       ; preds = %.lr.ph.i
  br label %30

; <label>:30                                      ; preds = %.preheader, %30
  %indvars.iv.i.prol = phi i64 [ %indvars.iv.next.i.prol, %30 ], [ %26, %.preheader ]
  %prol.iter = phi i32 [ %prol.iter.sub, %30 ], [ %xtraiter, %.preheader ]
  %31 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %25, i64 %indvars.iv.i.prol, i32 1
  store i32 0, i32* %31, align 4, !tbaa !10
  %indvars.iv.next.i.prol = add nsw i64 %indvars.iv.i.prol, 1
  %prol.iter.sub = add i32 %prol.iter, -1
  %prol.iter.cmp = icmp eq i32 %prol.iter.sub, 0
  br i1 %prol.iter.cmp, label %.lr.ph.i.split.loopexit, label %30, !llvm.loop !291

.lr.ph.i.split.loopexit:                          ; preds = %30
  %indvars.iv.next.i.prol.lcssa = phi i64 [ %indvars.iv.next.i.prol, %30 ]
  br label %.lr.ph.i.split

.lr.ph.i.split:                                   ; preds = %.lr.ph.i.split.loopexit, %.lr.ph.i
  %indvars.iv.i.unr = phi i64 [ %26, %.lr.ph.i ], [ %indvars.iv.next.i.prol.lcssa, %.lr.ph.i.split.loopexit ]
  %32 = icmp ult i32 %29, 7
  br i1 %32, label %setarrayvector.exit.loopexit, label %.lr.ph.i.split.split

.lr.ph.i.split.split:                             ; preds = %.lr.ph.i.split
  br label %33

; <label>:33                                      ; preds = %33, %.lr.ph.i.split.split
  %indvars.iv.i = phi i64 [ %indvars.iv.i.unr, %.lr.ph.i.split.split ], [ %indvars.iv.next.i.7, %33 ]
  %34 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %25, i64 %indvars.iv.i, i32 1
  store i32 0, i32* %34, align 4, !tbaa !10
  %indvars.iv.next.i = add nsw i64 %indvars.iv.i, 1
  %35 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %25, i64 %indvars.iv.next.i, i32 1
  store i32 0, i32* %35, align 4, !tbaa !10
  %indvars.iv.next.i.1 = add nsw i64 %indvars.iv.i, 2
  %36 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %25, i64 %indvars.iv.next.i.1, i32 1
  store i32 0, i32* %36, align 4, !tbaa !10
  %indvars.iv.next.i.2 = add nsw i64 %indvars.iv.i, 3
  %37 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %25, i64 %indvars.iv.next.i.2, i32 1
  store i32 0, i32* %37, align 4, !tbaa !10
  %indvars.iv.next.i.3 = add nsw i64 %indvars.iv.i, 4
  %38 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %25, i64 %indvars.iv.next.i.3, i32 1
  store i32 0, i32* %38, align 4, !tbaa !10
  %indvars.iv.next.i.4 = add nsw i64 %indvars.iv.i, 5
  %39 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %25, i64 %indvars.iv.next.i.4, i32 1
  store i32 0, i32* %39, align 4, !tbaa !10
  %indvars.iv.next.i.5 = add nsw i64 %indvars.iv.i, 6
  %40 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %25, i64 %indvars.iv.next.i.5, i32 1
  store i32 0, i32* %40, align 4, !tbaa !10
  %indvars.iv.next.i.6 = add nsw i64 %indvars.iv.i, 7
  %41 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %25, i64 %indvars.iv.next.i.6, i32 1
  store i32 0, i32* %41, align 4, !tbaa !10
  %indvars.iv.next.i.7 = add nsw i64 %indvars.iv.i, 8
  %lftr.wideiv.i.7 = trunc i64 %indvars.iv.next.i.7 to i32
  %exitcond.i.7 = icmp eq i32 %lftr.wideiv.i.7, %narray
  br i1 %exitcond.i.7, label %setarrayvector.exit.loopexit.unr-lcssa, label %33

setarrayvector.exit.loopexit.unr-lcssa:           ; preds = %33
  br label %setarrayvector.exit.loopexit

setarrayvector.exit.loopexit:                     ; preds = %.lr.ph.i.split, %setarrayvector.exit.loopexit.unr-lcssa
  br label %setarrayvector.exit

setarrayvector.exit:                              ; preds = %setarrayvector.exit.loopexit, %21
  store i32 %narray, i32* %10, align 4, !tbaa !206
  tail call fastcc void @setnodevector(%struct.lua_State* %L, %struct.Table* %2, i32 %nhash)
  ret %struct.Table* %2
}

; Function Attrs: nounwind uwtable
define hidden void @luaH_free(%struct.lua_State* %L, %struct.Table* %t) #0 {
  %1 = getelementptr inbounds %struct.Table, %struct.Table* %t, i64 0, i32 7
  %2 = load %struct.Node*, %struct.Node** %1, align 8, !tbaa !211
  %3 = icmp eq %struct.Node* %2, @dummynode_
  br i1 %3, label %13, label %4

; <label>:4                                       ; preds = %0
  %5 = bitcast %struct.Node* %2 to i8*
  %6 = getelementptr inbounds %struct.Table, %struct.Table* %t, i64 0, i32 4
  %7 = load i8, i8* %6, align 1, !tbaa !210
  %8 = zext i8 %7 to i32
  %9 = shl i32 1, %8
  %10 = sext i32 %9 to i64
  %11 = mul nsw i64 %10, 40
  %12 = tail call i8* @luaM_realloc_(%struct.lua_State* %L, i8* %5, i64 %11, i64 0) #1
  br label %13

; <label>:13                                      ; preds = %0, %4
  %14 = getelementptr inbounds %struct.Table, %struct.Table* %t, i64 0, i32 6
  %15 = bitcast %struct.lua_TValue** %14 to i8**
  %16 = load i8*, i8** %15, align 8, !tbaa !208
  %17 = getelementptr inbounds %struct.Table, %struct.Table* %t, i64 0, i32 10
  %18 = load i32, i32* %17, align 4, !tbaa !206
  %19 = sext i32 %18 to i64
  %20 = shl nsw i64 %19, 4
  %21 = tail call i8* @luaM_realloc_(%struct.lua_State* %L, i8* %16, i64 %20, i64 0) #1
  %22 = bitcast %struct.Table* %t to i8*
  %23 = tail call i8* @luaM_realloc_(%struct.lua_State* %L, i8* %22, i64 64, i64 0) #1
  ret void
}

; Function Attrs: nounwind readonly uwtable
define hidden %struct.lua_TValue* @luaH_getnum(%struct.Table* nocapture readonly %t, i32 %key) #2 {
  %1 = add nsw i32 %key, -1
  %2 = getelementptr inbounds %struct.Table, %struct.Table* %t, i64 0, i32 10
  %3 = load i32, i32* %2, align 4, !tbaa !206
  %4 = icmp ult i32 %1, %3
  br i1 %4, label %5, label %10

; <label>:5                                       ; preds = %0
  %6 = sext i32 %1 to i64
  %7 = getelementptr inbounds %struct.Table, %struct.Table* %t, i64 0, i32 6
  %8 = load %struct.lua_TValue*, %struct.lua_TValue** %7, align 8, !tbaa !208
  %9 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %8, i64 %6
  br label %.loopexit

; <label>:10                                      ; preds = %0
  %11 = sitofp i32 %key to double
  %12 = icmp eq i32 %key, 0
  %13 = getelementptr inbounds %struct.Table, %struct.Table* %t, i64 0, i32 7
  %14 = load %struct.Node*, %struct.Node** %13, align 8
  br i1 %12, label %hashnum.exit.preheader, label %15

; <label>:15                                      ; preds = %10
  %16 = bitcast double %11 to i64
  %17 = lshr i64 %16, 32
  %18 = trunc i64 %17 to i32
  %trunc.i = trunc i64 %16 to i32
  %19 = add i32 %18, %trunc.i
  %20 = getelementptr inbounds %struct.Table, %struct.Table* %t, i64 0, i32 4
  %21 = load i8, i8* %20, align 1, !tbaa !210
  %22 = zext i8 %21 to i32
  %23 = shl i32 1, %22
  %24 = add nsw i32 %23, -1
  %25 = or i32 %24, 1
  %26 = urem i32 %19, %25
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %struct.Node, %struct.Node* %14, i64 %27
  br label %hashnum.exit.preheader

hashnum.exit.preheader:                           ; preds = %10, %15
  %n.0.ph = phi %struct.Node* [ %14, %10 ], [ %28, %15 ]
  br label %hashnum.exit

hashnum.exit:                                     ; preds = %hashnum.exit.preheader, %39
  %n.0 = phi %struct.Node* [ %41, %39 ], [ %n.0.ph, %hashnum.exit.preheader ]
  %29 = getelementptr inbounds %struct.Node, %struct.Node* %n.0, i64 0, i32 1, i32 0, i32 1
  %30 = load i32, i32* %29, align 4, !tbaa !212
  %31 = icmp eq i32 %30, 3
  br i1 %31, label %32, label %39

; <label>:32                                      ; preds = %hashnum.exit
  %33 = getelementptr inbounds %struct.Node, %struct.Node* %n.0, i64 0, i32 1, i32 0, i32 0
  %34 = bitcast %union.Value* %33 to double*
  %35 = load double, double* %34, align 8, !tbaa !36
  %36 = fcmp oeq double %35, %11
  br i1 %36, label %37, label %39

; <label>:37                                      ; preds = %32
  %n.0.lcssa = phi %struct.Node* [ %n.0, %32 ]
  %38 = getelementptr inbounds %struct.Node, %struct.Node* %n.0.lcssa, i64 0, i32 0
  br label %.loopexit

; <label>:39                                      ; preds = %32, %hashnum.exit
  %40 = getelementptr inbounds %struct.Node, %struct.Node* %n.0, i64 0, i32 1, i32 0, i32 2
  %41 = load %struct.Node*, %struct.Node** %40, align 8, !tbaa !290
  %42 = icmp eq %struct.Node* %41, null
  br i1 %42, label %.loopexit.loopexit, label %hashnum.exit

.loopexit.loopexit:                               ; preds = %39
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %37, %5
  %.1 = phi %struct.lua_TValue* [ %9, %5 ], [ %38, %37 ], [ bitcast (%struct.lua_TValue.218* @luaO_nilobject_ to %struct.lua_TValue*), %.loopexit.loopexit ]
  ret %struct.lua_TValue* %.1
}

; Function Attrs: nounwind readonly uwtable
define hidden %struct.lua_TValue* @luaH_getstr(%struct.Table* nocapture readonly %t, %union.TString* readonly %key) #2 {
  %1 = getelementptr inbounds %union.TString, %union.TString* %key, i64 0, i32 0, i32 4
  %2 = load i32, i32* %1, align 4, !tbaa !277
  %3 = getelementptr inbounds %struct.Table, %struct.Table* %t, i64 0, i32 4
  %4 = load i8, i8* %3, align 1, !tbaa !210
  %5 = zext i8 %4 to i32
  %6 = shl i32 1, %5
  %7 = add nsw i32 %6, -1
  %8 = and i32 %7, %2
  %9 = sext i32 %8 to i64
  %10 = getelementptr inbounds %struct.Table, %struct.Table* %t, i64 0, i32 7
  %11 = load %struct.Node*, %struct.Node** %10, align 8, !tbaa !211
  %12 = getelementptr inbounds %struct.Node, %struct.Node* %11, i64 %9
  br label %13

; <label>:13                                      ; preds = %24, %0
  %n.0 = phi %struct.Node* [ %12, %0 ], [ %26, %24 ]
  %14 = getelementptr inbounds %struct.Node, %struct.Node* %n.0, i64 0, i32 1, i32 0, i32 1
  %15 = load i32, i32* %14, align 4, !tbaa !212
  %16 = icmp eq i32 %15, 4
  br i1 %16, label %17, label %24

; <label>:17                                      ; preds = %13
  %18 = getelementptr inbounds %struct.Node, %struct.Node* %n.0, i64 0, i32 1, i32 0, i32 0, i32 0
  %19 = bitcast %union.GCObject** %18 to %union.TString**
  %20 = load %union.TString*, %union.TString** %19, align 8, !tbaa !25
  %21 = icmp eq %union.TString* %20, %key
  br i1 %21, label %22, label %24

; <label>:22                                      ; preds = %17
  %n.0.lcssa = phi %struct.Node* [ %n.0, %17 ]
  %23 = getelementptr inbounds %struct.Node, %struct.Node* %n.0.lcssa, i64 0, i32 0
  br label %.loopexit

; <label>:24                                      ; preds = %17, %13
  %25 = getelementptr inbounds %struct.Node, %struct.Node* %n.0, i64 0, i32 1, i32 0, i32 2
  %26 = load %struct.Node*, %struct.Node** %25, align 8, !tbaa !290
  %27 = icmp eq %struct.Node* %26, null
  br i1 %27, label %.loopexit.loopexit, label %13

.loopexit.loopexit:                               ; preds = %24
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %22
  %.0 = phi %struct.lua_TValue* [ %23, %22 ], [ bitcast (%struct.lua_TValue.218* @luaO_nilobject_ to %struct.lua_TValue*), %.loopexit.loopexit ]
  ret %struct.lua_TValue* %.0
}

; Function Attrs: nounwind uwtable
define hidden %struct.lua_TValue* @luaH_get(%struct.Table* nocapture readonly %t, %struct.lua_TValue* %key) #0 {
  %1 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %key, i64 0, i32 1
  %2 = load i32, i32* %1, align 4, !tbaa !10
  switch i32 %2, label %128 [
    i32 0, label %luaH_getstr.exit
    i32 4, label %3
    i32 3, label %33
    i32 1, label %100
    i32 2, label %113
  ]

; <label>:3                                       ; preds = %0
  %4 = bitcast %struct.lua_TValue* %key to %union.TString**
  %5 = load %union.TString*, %union.TString** %4, align 8, !tbaa !25
  %6 = getelementptr inbounds %union.TString, %union.TString* %5, i64 0, i32 0, i32 4
  %7 = load i32, i32* %6, align 4, !tbaa !277
  %8 = getelementptr inbounds %struct.Table, %struct.Table* %t, i64 0, i32 4
  %9 = load i8, i8* %8, align 1, !tbaa !210
  %10 = zext i8 %9 to i32
  %11 = shl i32 1, %10
  %12 = add nsw i32 %11, -1
  %13 = and i32 %12, %7
  %14 = sext i32 %13 to i64
  %15 = getelementptr inbounds %struct.Table, %struct.Table* %t, i64 0, i32 7
  %16 = load %struct.Node*, %struct.Node** %15, align 8, !tbaa !211
  %17 = getelementptr inbounds %struct.Node, %struct.Node* %16, i64 %14
  br label %18

; <label>:18                                      ; preds = %29, %3
  %n.0.i = phi %struct.Node* [ %17, %3 ], [ %31, %29 ]
  %19 = getelementptr inbounds %struct.Node, %struct.Node* %n.0.i, i64 0, i32 1, i32 0, i32 1
  %20 = load i32, i32* %19, align 4, !tbaa !212
  %21 = icmp eq i32 %20, 4
  br i1 %21, label %22, label %29

; <label>:22                                      ; preds = %18
  %23 = getelementptr inbounds %struct.Node, %struct.Node* %n.0.i, i64 0, i32 1, i32 0, i32 0, i32 0
  %24 = bitcast %union.GCObject** %23 to %union.TString**
  %25 = load %union.TString*, %union.TString** %24, align 8, !tbaa !25
  %26 = icmp eq %union.TString* %25, %5
  br i1 %26, label %27, label %29

; <label>:27                                      ; preds = %22
  %n.0.i.lcssa = phi %struct.Node* [ %n.0.i, %22 ]
  %28 = getelementptr inbounds %struct.Node, %struct.Node* %n.0.i.lcssa, i64 0, i32 0
  br label %luaH_getstr.exit

; <label>:29                                      ; preds = %22, %18
  %30 = getelementptr inbounds %struct.Node, %struct.Node* %n.0.i, i64 0, i32 1, i32 0, i32 2
  %31 = load %struct.Node*, %struct.Node** %30, align 8, !tbaa !290
  %32 = icmp eq %struct.Node* %31, null
  br i1 %32, label %luaH_getstr.exit.loopexit24, label %18

; <label>:33                                      ; preds = %0
  %34 = bitcast %struct.lua_TValue* %key to double*
  %35 = load double, double* %34, align 8, !tbaa !36
  %36 = fptosi double %35 to i32
  %37 = sitofp i32 %36 to double
  %38 = fcmp oeq double %37, %35
  br i1 %38, label %39, label %luaH_getnum.exit.thread

; <label>:39                                      ; preds = %33
  %40 = add nsw i32 %36, -1
  %41 = getelementptr inbounds %struct.Table, %struct.Table* %t, i64 0, i32 10
  %42 = load i32, i32* %41, align 4, !tbaa !206
  %43 = icmp ult i32 %40, %42
  br i1 %43, label %44, label %49

; <label>:44                                      ; preds = %39
  %45 = sext i32 %40 to i64
  %46 = getelementptr inbounds %struct.Table, %struct.Table* %t, i64 0, i32 6
  %47 = load %struct.lua_TValue*, %struct.lua_TValue** %46, align 8, !tbaa !208
  %48 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %47, i64 %45
  br label %luaH_getstr.exit

; <label>:49                                      ; preds = %39
  %50 = icmp eq i32 %36, 0
  %51 = getelementptr inbounds %struct.Table, %struct.Table* %t, i64 0, i32 7
  %52 = load %struct.Node*, %struct.Node** %51, align 8
  br i1 %50, label %hashnum.exit.i.preheader, label %53

; <label>:53                                      ; preds = %49
  %54 = bitcast double %37 to i64
  %55 = lshr i64 %54, 32
  %56 = trunc i64 %55 to i32
  %trunc.i.i = trunc i64 %54 to i32
  %57 = add i32 %56, %trunc.i.i
  %58 = getelementptr inbounds %struct.Table, %struct.Table* %t, i64 0, i32 4
  %59 = load i8, i8* %58, align 1, !tbaa !210
  %60 = zext i8 %59 to i32
  %61 = shl i32 1, %60
  %62 = add nsw i32 %61, -1
  %63 = or i32 %62, 1
  %64 = urem i32 %57, %63
  %65 = zext i32 %64 to i64
  %66 = getelementptr inbounds %struct.Node, %struct.Node* %52, i64 %65
  br label %hashnum.exit.i.preheader

hashnum.exit.i.preheader:                         ; preds = %49, %53
  %n.0.i.5.ph = phi %struct.Node* [ %52, %49 ], [ %66, %53 ]
  br label %hashnum.exit.i

hashnum.exit.i:                                   ; preds = %hashnum.exit.i.preheader, %77
  %n.0.i.5 = phi %struct.Node* [ %79, %77 ], [ %n.0.i.5.ph, %hashnum.exit.i.preheader ]
  %67 = getelementptr inbounds %struct.Node, %struct.Node* %n.0.i.5, i64 0, i32 1, i32 0, i32 1
  %68 = load i32, i32* %67, align 4, !tbaa !212
  %69 = icmp eq i32 %68, 3
  br i1 %69, label %70, label %77

; <label>:70                                      ; preds = %hashnum.exit.i
  %71 = getelementptr inbounds %struct.Node, %struct.Node* %n.0.i.5, i64 0, i32 1, i32 0, i32 0
  %72 = bitcast %union.Value* %71 to double*
  %73 = load double, double* %72, align 8, !tbaa !36
  %74 = fcmp oeq double %73, %37
  br i1 %74, label %75, label %77

; <label>:75                                      ; preds = %70
  %n.0.i.5.lcssa = phi %struct.Node* [ %n.0.i.5, %70 ]
  %76 = getelementptr inbounds %struct.Node, %struct.Node* %n.0.i.5.lcssa, i64 0, i32 0
  br label %luaH_getstr.exit

; <label>:77                                      ; preds = %70, %hashnum.exit.i
  %78 = getelementptr inbounds %struct.Node, %struct.Node* %n.0.i.5, i64 0, i32 1, i32 0, i32 2
  %79 = load %struct.Node*, %struct.Node** %78, align 8, !tbaa !290
  %80 = icmp eq %struct.Node* %79, null
  br i1 %80, label %luaH_getstr.exit.loopexit25, label %hashnum.exit.i

luaH_getnum.exit.thread:                          ; preds = %33
  %81 = bitcast %struct.lua_TValue* %key to double*
  %82 = load double, double* %81, align 8, !tbaa !36
  %83 = fcmp oeq double %82, 0.000000e+00
  %84 = getelementptr inbounds %struct.Table, %struct.Table* %t, i64 0, i32 7
  %85 = load %struct.Node*, %struct.Node** %84, align 8
  br i1 %83, label %mainposition.exit.preheader, label %86

; <label>:86                                      ; preds = %luaH_getnum.exit.thread
  %87 = bitcast double %82 to i64
  %88 = lshr i64 %87, 32
  %89 = trunc i64 %88 to i32
  %trunc.i = trunc i64 %87 to i32
  %90 = add i32 %89, %trunc.i
  %91 = getelementptr inbounds %struct.Table, %struct.Table* %t, i64 0, i32 4
  %92 = load i8, i8* %91, align 1, !tbaa !210
  %93 = zext i8 %92 to i32
  %94 = shl i32 1, %93
  %95 = add nsw i32 %94, -1
  %96 = or i32 %95, 1
  %97 = urem i32 %90, %96
  %98 = zext i32 %97 to i64
  %99 = getelementptr inbounds %struct.Node, %struct.Node* %85, i64 %98
  br label %mainposition.exit.preheader

; <label>:100                                     ; preds = %0
  %101 = bitcast %struct.lua_TValue* %key to i32*
  %102 = load i32, i32* %101, align 4, !tbaa !38
  %103 = getelementptr inbounds %struct.Table, %struct.Table* %t, i64 0, i32 4
  %104 = load i8, i8* %103, align 1, !tbaa !210
  %105 = zext i8 %104 to i32
  %106 = shl i32 1, %105
  %107 = add nsw i32 %106, -1
  %108 = and i32 %107, %102
  %109 = sext i32 %108 to i64
  %110 = getelementptr inbounds %struct.Table, %struct.Table* %t, i64 0, i32 7
  %111 = load %struct.Node*, %struct.Node** %110, align 8, !tbaa !211
  %112 = getelementptr inbounds %struct.Node, %struct.Node* %111, i64 %109
  br label %mainposition.exit.preheader

; <label>:113                                     ; preds = %0
  %114 = bitcast %struct.lua_TValue* %key to i64*
  %115 = load i64, i64* %114, align 8, !tbaa !25
  %116 = trunc i64 %115 to i32
  %117 = getelementptr inbounds %struct.Table, %struct.Table* %t, i64 0, i32 4
  %118 = load i8, i8* %117, align 1, !tbaa !210
  %119 = zext i8 %118 to i32
  %120 = shl i32 1, %119
  %121 = add nsw i32 %120, -1
  %122 = or i32 %121, 1
  %123 = urem i32 %116, %122
  %124 = zext i32 %123 to i64
  %125 = getelementptr inbounds %struct.Table, %struct.Table* %t, i64 0, i32 7
  %126 = load %struct.Node*, %struct.Node** %125, align 8, !tbaa !211
  %127 = getelementptr inbounds %struct.Node, %struct.Node* %126, i64 %124
  br label %mainposition.exit.preheader

; <label>:128                                     ; preds = %0
  %129 = bitcast %struct.lua_TValue* %key to i64*
  %130 = load i64, i64* %129, align 8, !tbaa !25
  %131 = trunc i64 %130 to i32
  %132 = getelementptr inbounds %struct.Table, %struct.Table* %t, i64 0, i32 4
  %133 = load i8, i8* %132, align 1, !tbaa !210
  %134 = zext i8 %133 to i32
  %135 = shl i32 1, %134
  %136 = add nsw i32 %135, -1
  %137 = or i32 %136, 1
  %138 = urem i32 %131, %137
  %139 = zext i32 %138 to i64
  %140 = getelementptr inbounds %struct.Table, %struct.Table* %t, i64 0, i32 7
  %141 = load %struct.Node*, %struct.Node** %140, align 8, !tbaa !211
  %142 = getelementptr inbounds %struct.Node, %struct.Node* %141, i64 %139
  br label %mainposition.exit.preheader

mainposition.exit.preheader:                      ; preds = %luaH_getnum.exit.thread, %86, %100, %113, %128
  %n1.0.ph = phi %struct.Node* [ %85, %luaH_getnum.exit.thread ], [ %142, %128 ], [ %127, %113 ], [ %112, %100 ], [ %99, %86 ]
  br label %mainposition.exit

mainposition.exit:                                ; preds = %mainposition.exit.preheader, %149
  %n1.0 = phi %struct.Node* [ %151, %149 ], [ %n1.0.ph, %mainposition.exit.preheader ]
  %143 = getelementptr inbounds %struct.Node, %struct.Node* %n1.0, i64 0, i32 1
  %144 = bitcast %union.TKey* %143 to %struct.lua_TValue*
  %145 = tail call i32 bitcast (i32 (%struct.lua_TValue.218*, %struct.lua_TValue.218*)* @luaO_rawequalObj to i32 (%struct.lua_TValue*, %struct.lua_TValue*)*)(%struct.lua_TValue* %144, %struct.lua_TValue* %key) #1
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %149, label %147

; <label>:147                                     ; preds = %mainposition.exit
  %n1.0.lcssa = phi %struct.Node* [ %n1.0, %mainposition.exit ]
  %148 = getelementptr inbounds %struct.Node, %struct.Node* %n1.0.lcssa, i64 0, i32 0
  br label %luaH_getstr.exit

; <label>:149                                     ; preds = %mainposition.exit
  %150 = getelementptr inbounds %struct.Node, %struct.Node* %n1.0, i64 0, i32 1, i32 0, i32 2
  %151 = load %struct.Node*, %struct.Node** %150, align 8, !tbaa !290
  %152 = icmp eq %struct.Node* %151, null
  br i1 %152, label %luaH_getstr.exit.loopexit, label %mainposition.exit

luaH_getstr.exit.loopexit:                        ; preds = %149
  br label %luaH_getstr.exit

luaH_getstr.exit.loopexit24:                      ; preds = %29
  br label %luaH_getstr.exit

luaH_getstr.exit.loopexit25:                      ; preds = %77
  br label %luaH_getstr.exit

luaH_getstr.exit:                                 ; preds = %luaH_getstr.exit.loopexit25, %luaH_getstr.exit.loopexit24, %luaH_getstr.exit.loopexit, %0, %75, %44, %27, %147
  %.2 = phi %struct.lua_TValue* [ bitcast (%struct.lua_TValue.218* @luaO_nilobject_ to %struct.lua_TValue*), %0 ], [ %148, %147 ], [ %28, %27 ], [ %76, %75 ], [ %48, %44 ], [ bitcast (%struct.lua_TValue.218* @luaO_nilobject_ to %struct.lua_TValue*), %luaH_getstr.exit.loopexit ], [ bitcast (%struct.lua_TValue.218* @luaO_nilobject_ to %struct.lua_TValue*), %luaH_getstr.exit.loopexit24 ], [ bitcast (%struct.lua_TValue.218* @luaO_nilobject_ to %struct.lua_TValue*), %luaH_getstr.exit.loopexit25 ]
  ret %struct.lua_TValue* %.2
}

; Function Attrs: nounwind uwtable
define hidden %struct.lua_TValue* @luaH_set(%struct.lua_State* %L, %struct.Table* %t, %struct.lua_TValue* %key) #0 {
  %1 = tail call %struct.lua_TValue* @luaH_get(%struct.Table* %t, %struct.lua_TValue* %key)
  %2 = getelementptr inbounds %struct.Table, %struct.Table* %t, i64 0, i32 3
  store i8 0, i8* %2, align 1, !tbaa !187
  %3 = icmp eq %struct.lua_TValue* %1, bitcast (%struct.lua_TValue.218* @luaO_nilobject_ to %struct.lua_TValue*)
  br i1 %3, label %4, label %15

; <label>:4                                       ; preds = %0
  %5 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %key, i64 0, i32 1
  %6 = load i32, i32* %5, align 4, !tbaa !10
  switch i32 %6, label %13 [
    i32 0, label %7
    i32 3, label %8
  ]

; <label>:7                                       ; preds = %4
  tail call void (%struct.lua_State*, i8*, ...) @luaG_runerror(%struct.lua_State* %L, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.608, i64 0, i64 0)) #1
  br label %13

; <label>:8                                       ; preds = %4
  %9 = bitcast %struct.lua_TValue* %key to double*
  %10 = load double, double* %9, align 8, !tbaa !36
  %11 = fcmp ord double %10, 0.000000e+00
  br i1 %11, label %13, label %12

; <label>:12                                      ; preds = %8
  tail call void (%struct.lua_State*, i8*, ...) @luaG_runerror(%struct.lua_State* %L, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1.609, i64 0, i64 0)) #1
  br label %13

; <label>:13                                      ; preds = %4, %8, %12, %7
  %14 = tail call fastcc %struct.lua_TValue* @newkey(%struct.lua_State* %L, %struct.Table* %t, %struct.lua_TValue* %key)
  br label %15

; <label>:15                                      ; preds = %0, %13
  %.0 = phi %struct.lua_TValue* [ %14, %13 ], [ %1, %0 ]
  ret %struct.lua_TValue* %.0
}

; Function Attrs: nounwind uwtable
define hidden %struct.lua_TValue* @luaH_setnum(%struct.lua_State* %L, %struct.Table* %t, i32 %key) #0 {
  %k = alloca %struct.lua_TValue, align 8
  %1 = add nsw i32 %key, -1
  %2 = getelementptr inbounds %struct.Table, %struct.Table* %t, i64 0, i32 10
  %3 = load i32, i32* %2, align 4, !tbaa !206
  %4 = icmp ult i32 %1, %3
  br i1 %4, label %5, label %10

; <label>:5                                       ; preds = %0
  %6 = sext i32 %1 to i64
  %7 = getelementptr inbounds %struct.Table, %struct.Table* %t, i64 0, i32 6
  %8 = load %struct.lua_TValue*, %struct.lua_TValue** %7, align 8, !tbaa !208
  %9 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %8, i64 %6
  br label %luaH_getnum.exit

; <label>:10                                      ; preds = %0
  %11 = sitofp i32 %key to double
  %12 = icmp eq i32 %key, 0
  %13 = getelementptr inbounds %struct.Table, %struct.Table* %t, i64 0, i32 7
  %14 = load %struct.Node*, %struct.Node** %13, align 8
  br i1 %12, label %hashnum.exit.i.preheader, label %15

; <label>:15                                      ; preds = %10
  %16 = bitcast double %11 to i64
  %17 = lshr i64 %16, 32
  %18 = trunc i64 %17 to i32
  %trunc.i.i = trunc i64 %16 to i32
  %19 = add i32 %18, %trunc.i.i
  %20 = getelementptr inbounds %struct.Table, %struct.Table* %t, i64 0, i32 4
  %21 = load i8, i8* %20, align 1, !tbaa !210
  %22 = zext i8 %21 to i32
  %23 = shl i32 1, %22
  %24 = add nsw i32 %23, -1
  %25 = or i32 %24, 1
  %26 = urem i32 %19, %25
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %struct.Node, %struct.Node* %14, i64 %27
  br label %hashnum.exit.i.preheader

hashnum.exit.i.preheader:                         ; preds = %10, %15
  %n.0.i.ph = phi %struct.Node* [ %14, %10 ], [ %28, %15 ]
  br label %hashnum.exit.i

hashnum.exit.i:                                   ; preds = %hashnum.exit.i.preheader, %39
  %n.0.i = phi %struct.Node* [ %41, %39 ], [ %n.0.i.ph, %hashnum.exit.i.preheader ]
  %29 = getelementptr inbounds %struct.Node, %struct.Node* %n.0.i, i64 0, i32 1, i32 0, i32 1
  %30 = load i32, i32* %29, align 4, !tbaa !212
  %31 = icmp eq i32 %30, 3
  br i1 %31, label %32, label %39

; <label>:32                                      ; preds = %hashnum.exit.i
  %33 = getelementptr inbounds %struct.Node, %struct.Node* %n.0.i, i64 0, i32 1, i32 0, i32 0
  %34 = bitcast %union.Value* %33 to double*
  %35 = load double, double* %34, align 8, !tbaa !36
  %36 = fcmp oeq double %35, %11
  br i1 %36, label %37, label %39

; <label>:37                                      ; preds = %32
  %n.0.i.lcssa = phi %struct.Node* [ %n.0.i, %32 ]
  %38 = getelementptr inbounds %struct.Node, %struct.Node* %n.0.i.lcssa, i64 0, i32 0
  br label %luaH_getnum.exit

; <label>:39                                      ; preds = %32, %hashnum.exit.i
  %40 = getelementptr inbounds %struct.Node, %struct.Node* %n.0.i, i64 0, i32 1, i32 0, i32 2
  %41 = load %struct.Node*, %struct.Node** %40, align 8, !tbaa !290
  %42 = icmp eq %struct.Node* %41, null
  br i1 %42, label %luaH_getnum.exit.thread.loopexit, label %hashnum.exit.i

luaH_getnum.exit:                                 ; preds = %5, %37
  %.1.i = phi %struct.lua_TValue* [ %9, %5 ], [ %38, %37 ]
  %43 = icmp eq %struct.lua_TValue* %.1.i, bitcast (%struct.lua_TValue.218* @luaO_nilobject_ to %struct.lua_TValue*)
  br i1 %43, label %luaH_getnum.exit.luaH_getnum.exit.thread_crit_edge, label %48

luaH_getnum.exit.luaH_getnum.exit.thread_crit_edge: ; preds = %luaH_getnum.exit
  %.pre = sitofp i32 %key to double
  br label %luaH_getnum.exit.thread

luaH_getnum.exit.thread.loopexit:                 ; preds = %39
  br label %luaH_getnum.exit.thread

luaH_getnum.exit.thread:                          ; preds = %luaH_getnum.exit.thread.loopexit, %luaH_getnum.exit.luaH_getnum.exit.thread_crit_edge
  %.pre-phi = phi double [ %.pre, %luaH_getnum.exit.luaH_getnum.exit.thread_crit_edge ], [ %11, %luaH_getnum.exit.thread.loopexit ]
  %44 = bitcast %struct.lua_TValue* %k to i8*
  call void @llvm.lifetime.start(i64 16, i8* %44) #1
  %45 = bitcast %struct.lua_TValue* %k to double*
  store double %.pre-phi, double* %45, align 8, !tbaa !36
  %46 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %k, i64 0, i32 1
  store i32 3, i32* %46, align 8, !tbaa !10
  %47 = call fastcc %struct.lua_TValue* @newkey(%struct.lua_State* %L, %struct.Table* %t, %struct.lua_TValue* nonnull %k)
  call void @llvm.lifetime.end(i64 16, i8* %44) #1
  br label %48

; <label>:48                                      ; preds = %luaH_getnum.exit, %luaH_getnum.exit.thread
  %.0 = phi %struct.lua_TValue* [ %47, %luaH_getnum.exit.thread ], [ %.1.i, %luaH_getnum.exit ]
  ret %struct.lua_TValue* %.0
}

; Function Attrs: nounwind uwtable
define hidden %struct.lua_TValue* @luaH_setstr(%struct.lua_State* %L, %struct.Table* %t, %union.TString* %key) #0 {
  %k = alloca %struct.lua_TValue, align 8
  %1 = getelementptr inbounds %union.TString, %union.TString* %key, i64 0, i32 0, i32 4
  %2 = load i32, i32* %1, align 4, !tbaa !277
  %3 = getelementptr inbounds %struct.Table, %struct.Table* %t, i64 0, i32 4
  %4 = load i8, i8* %3, align 1, !tbaa !210
  %5 = zext i8 %4 to i32
  %6 = shl i32 1, %5
  %7 = add nsw i32 %6, -1
  %8 = and i32 %7, %2
  %9 = sext i32 %8 to i64
  %10 = getelementptr inbounds %struct.Table, %struct.Table* %t, i64 0, i32 7
  %11 = load %struct.Node*, %struct.Node** %10, align 8, !tbaa !211
  %12 = getelementptr inbounds %struct.Node, %struct.Node* %11, i64 %9
  br label %13

; <label>:13                                      ; preds = %22, %0
  %n.0.i = phi %struct.Node* [ %12, %0 ], [ %24, %22 ]
  %14 = getelementptr inbounds %struct.Node, %struct.Node* %n.0.i, i64 0, i32 1, i32 0, i32 1
  %15 = load i32, i32* %14, align 4, !tbaa !212
  %16 = icmp eq i32 %15, 4
  br i1 %16, label %17, label %22

; <label>:17                                      ; preds = %13
  %18 = getelementptr inbounds %struct.Node, %struct.Node* %n.0.i, i64 0, i32 1, i32 0, i32 0, i32 0
  %19 = bitcast %union.GCObject** %18 to %union.TString**
  %20 = load %union.TString*, %union.TString** %19, align 8, !tbaa !25
  %21 = icmp eq %union.TString* %20, %key
  br i1 %21, label %luaH_getstr.exit, label %22

; <label>:22                                      ; preds = %17, %13
  %23 = getelementptr inbounds %struct.Node, %struct.Node* %n.0.i, i64 0, i32 1, i32 0, i32 2
  %24 = load %struct.Node*, %struct.Node** %23, align 8, !tbaa !290
  %25 = icmp eq %struct.Node* %24, null
  br i1 %25, label %luaH_getstr.exit.thread.loopexit, label %13

luaH_getstr.exit:                                 ; preds = %17
  %n.0.i.lcssa = phi %struct.Node* [ %n.0.i, %17 ]
  %26 = getelementptr inbounds %struct.Node, %struct.Node* %n.0.i.lcssa, i64 0, i32 0
  %27 = icmp eq %struct.lua_TValue* %26, bitcast (%struct.lua_TValue.218* @luaO_nilobject_ to %struct.lua_TValue*)
  br i1 %27, label %luaH_getstr.exit.thread, label %32

luaH_getstr.exit.thread.loopexit:                 ; preds = %22
  br label %luaH_getstr.exit.thread

luaH_getstr.exit.thread:                          ; preds = %luaH_getstr.exit.thread.loopexit, %luaH_getstr.exit
  %28 = bitcast %struct.lua_TValue* %k to i8*
  call void @llvm.lifetime.start(i64 16, i8* %28) #1
  %29 = bitcast %struct.lua_TValue* %k to %union.TString**
  store %union.TString* %key, %union.TString** %29, align 8, !tbaa !25
  %30 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %k, i64 0, i32 1
  store i32 4, i32* %30, align 8, !tbaa !10
  %31 = call fastcc %struct.lua_TValue* @newkey(%struct.lua_State* %L, %struct.Table* %t, %struct.lua_TValue* nonnull %k)
  call void @llvm.lifetime.end(i64 16, i8* %28) #1
  br label %32

; <label>:32                                      ; preds = %luaH_getstr.exit, %luaH_getstr.exit.thread
  %.0 = phi %struct.lua_TValue* [ %31, %luaH_getstr.exit.thread ], [ %26, %luaH_getstr.exit ]
  ret %struct.lua_TValue* %.0
}

; Function Attrs: nounwind readonly uwtable
define hidden i32 @luaH_getn(%struct.Table* nocapture readonly %t) #2 {
  %1 = getelementptr inbounds %struct.Table, %struct.Table* %t, i64 0, i32 10
  %2 = load i32, i32* %1, align 4, !tbaa !206
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %22, label %4

; <label>:4                                       ; preds = %0
  %5 = add i32 %2, -1
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds %struct.Table, %struct.Table* %t, i64 0, i32 6
  %8 = load %struct.lua_TValue*, %struct.lua_TValue** %7, align 8, !tbaa !208
  %9 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %8, i64 %6, i32 1
  %10 = load i32, i32* %9, align 4, !tbaa !10
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %.preheader, label %22

.preheader:                                       ; preds = %4
  %12 = icmp ugt i32 %2, 1
  br i1 %12, label %.lr.ph.preheader, label %unbound_search.exit

.lr.ph.preheader:                                 ; preds = %.preheader
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %.lr.ph
  %i.09 = phi i32 [ %i.0., %.lr.ph ], [ 0, %.lr.ph.preheader ]
  %j.08 = phi i32 [ %.j.0, %.lr.ph ], [ %2, %.lr.ph.preheader ]
  %13 = add i32 %i.09, %j.08
  %14 = lshr i32 %13, 1
  %15 = add nsw i32 %14, -1
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %8, i64 %16, i32 1
  %18 = load i32, i32* %17, align 4, !tbaa !10
  %19 = icmp eq i32 %18, 0
  %.j.0 = select i1 %19, i32 %14, i32 %j.08
  %i.0. = select i1 %19, i32 %i.09, i32 %14
  %20 = sub i32 %.j.0, %i.0.
  %21 = icmp ugt i32 %20, 1
  br i1 %21, label %.lr.ph, label %unbound_search.exit.loopexit30

; <label>:22                                      ; preds = %0, %4
  %23 = getelementptr inbounds %struct.Table, %struct.Table* %t, i64 0, i32 7
  %24 = load %struct.Node*, %struct.Node** %23, align 8, !tbaa !211
  %25 = icmp eq %struct.Node* %24, @dummynode_
  br i1 %25, label %unbound_search.exit, label %26

; <label>:26                                      ; preds = %22
  %27 = add i32 %2, 1
  %28 = getelementptr inbounds %struct.Table, %struct.Table* %t, i64 0, i32 6
  %29 = getelementptr inbounds %struct.Table, %struct.Table* %t, i64 0, i32 4
  br label %30

; <label>:30                                      ; preds = %72, %26
  %.01.i = phi i32 [ %27, %26 ], [ %73, %72 ]
  %i.0.i = phi i32 [ %2, %26 ], [ %.01.i, %72 ]
  %31 = add nsw i32 %.01.i, -1
  %32 = icmp ult i32 %31, %2
  br i1 %32, label %33, label %37

; <label>:33                                      ; preds = %30
  %34 = sext i32 %31 to i64
  %35 = load %struct.lua_TValue*, %struct.lua_TValue** %28, align 8, !tbaa !208
  %36 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %35, i64 %34
  br label %luaH_getnum.exit.i

; <label>:37                                      ; preds = %30
  %38 = sitofp i32 %.01.i to double
  %39 = icmp eq i32 %.01.i, 0
  br i1 %39, label %hashnum.exit.i.i.preheader, label %40

; <label>:40                                      ; preds = %37
  %41 = bitcast double %38 to i64
  %42 = lshr i64 %41, 32
  %43 = trunc i64 %42 to i32
  %trunc.i.i.i = trunc i64 %41 to i32
  %44 = add i32 %43, %trunc.i.i.i
  %45 = load i8, i8* %29, align 1, !tbaa !210
  %46 = zext i8 %45 to i32
  %47 = shl i32 1, %46
  %48 = add nsw i32 %47, -1
  %49 = or i32 %48, 1
  %50 = urem i32 %44, %49
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds %struct.Node, %struct.Node* %24, i64 %51
  br label %hashnum.exit.i.i.preheader

hashnum.exit.i.i.preheader:                       ; preds = %37, %40
  %n.0.i.i.ph = phi %struct.Node* [ %24, %37 ], [ %52, %40 ]
  br label %hashnum.exit.i.i

hashnum.exit.i.i:                                 ; preds = %hashnum.exit.i.i.preheader, %63
  %n.0.i.i = phi %struct.Node* [ %65, %63 ], [ %n.0.i.i.ph, %hashnum.exit.i.i.preheader ]
  %53 = getelementptr inbounds %struct.Node, %struct.Node* %n.0.i.i, i64 0, i32 1, i32 0, i32 1
  %54 = load i32, i32* %53, align 4, !tbaa !212
  %55 = icmp eq i32 %54, 3
  br i1 %55, label %56, label %63

; <label>:56                                      ; preds = %hashnum.exit.i.i
  %57 = getelementptr inbounds %struct.Node, %struct.Node* %n.0.i.i, i64 0, i32 1, i32 0, i32 0
  %58 = bitcast %union.Value* %57 to double*
  %59 = load double, double* %58, align 8, !tbaa !36
  %60 = fcmp oeq double %59, %38
  br i1 %60, label %61, label %63

; <label>:61                                      ; preds = %56
  %n.0.i.i.lcssa = phi %struct.Node* [ %n.0.i.i, %56 ]
  %62 = getelementptr inbounds %struct.Node, %struct.Node* %n.0.i.i.lcssa, i64 0, i32 0
  br label %luaH_getnum.exit.i

; <label>:63                                      ; preds = %56, %hashnum.exit.i.i
  %64 = getelementptr inbounds %struct.Node, %struct.Node* %n.0.i.i, i64 0, i32 1, i32 0, i32 2
  %65 = load %struct.Node*, %struct.Node** %64, align 8, !tbaa !290
  %66 = icmp eq %struct.Node* %65, null
  br i1 %66, label %luaH_getnum.exit.i.loopexit, label %hashnum.exit.i.i

luaH_getnum.exit.i.loopexit:                      ; preds = %63
  br label %luaH_getnum.exit.i

luaH_getnum.exit.i:                               ; preds = %luaH_getnum.exit.i.loopexit, %61, %33
  %.1.i.i = phi %struct.lua_TValue* [ %36, %33 ], [ %62, %61 ], [ bitcast (%struct.lua_TValue.218* @luaO_nilobject_ to %struct.lua_TValue*), %luaH_getnum.exit.i.loopexit ]
  %67 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %.1.i.i, i64 0, i32 1
  %68 = load i32, i32* %67, align 4, !tbaa !10
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %.preheader.i, label %72

.preheader.i:                                     ; preds = %luaH_getnum.exit.i
  %i.0.i.lcssa = phi i32 [ %i.0.i, %luaH_getnum.exit.i ]
  %.01.i.lcssa = phi i32 [ %.01.i, %luaH_getnum.exit.i ]
  %70 = sub i32 %.01.i.lcssa, %i.0.i.lcssa
  %71 = icmp ugt i32 %70, 1
  br i1 %71, label %.lr.ph.i.preheader, label %unbound_search.exit

.lr.ph.i.preheader:                               ; preds = %.preheader.i
  br label %.lr.ph.i

; <label>:72                                      ; preds = %luaH_getnum.exit.i
  %73 = shl i32 %.01.i, 1
  %74 = icmp ugt i32 %73, 2147483645
  br i1 %74, label %.preheader12.i.preheader, label %30

.preheader12.i.preheader:                         ; preds = %72
  br label %.preheader12.i

.preheader12.i:                                   ; preds = %.preheader12.i.preheader, %luaH_getnum.exit11.i
  %i.1.i = phi i32 [ %114, %luaH_getnum.exit11.i ], [ 1, %.preheader12.i.preheader ]
  %75 = add i32 %i.1.i, -1
  %76 = icmp ult i32 %75, %2
  br i1 %76, label %77, label %81

; <label>:77                                      ; preds = %.preheader12.i
  %78 = sext i32 %75 to i64
  %79 = load %struct.lua_TValue*, %struct.lua_TValue** %28, align 8, !tbaa !208
  %80 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %79, i64 %78
  br label %luaH_getnum.exit11.i

; <label>:81                                      ; preds = %.preheader12.i
  %82 = sitofp i32 %i.1.i to double
  %83 = icmp eq i32 %i.1.i, 0
  br i1 %83, label %hashnum.exit.i.9.i.preheader, label %84

; <label>:84                                      ; preds = %81
  %85 = bitcast double %82 to i64
  %86 = lshr i64 %85, 32
  %87 = trunc i64 %86 to i32
  %trunc.i.i.7.i = trunc i64 %85 to i32
  %88 = add i32 %87, %trunc.i.i.7.i
  %89 = load i8, i8* %29, align 1, !tbaa !210
  %90 = zext i8 %89 to i32
  %91 = shl i32 1, %90
  %92 = add nsw i32 %91, -1
  %93 = or i32 %92, 1
  %94 = urem i32 %88, %93
  %95 = zext i32 %94 to i64
  %96 = getelementptr inbounds %struct.Node, %struct.Node* %24, i64 %95
  br label %hashnum.exit.i.9.i.preheader

hashnum.exit.i.9.i.preheader:                     ; preds = %81, %84
  %n.0.i.8.i.ph = phi %struct.Node* [ %24, %81 ], [ %96, %84 ]
  br label %hashnum.exit.i.9.i

hashnum.exit.i.9.i:                               ; preds = %hashnum.exit.i.9.i.preheader, %107
  %n.0.i.8.i = phi %struct.Node* [ %109, %107 ], [ %n.0.i.8.i.ph, %hashnum.exit.i.9.i.preheader ]
  %97 = getelementptr inbounds %struct.Node, %struct.Node* %n.0.i.8.i, i64 0, i32 1, i32 0, i32 1
  %98 = load i32, i32* %97, align 4, !tbaa !212
  %99 = icmp eq i32 %98, 3
  br i1 %99, label %100, label %107

; <label>:100                                     ; preds = %hashnum.exit.i.9.i
  %101 = getelementptr inbounds %struct.Node, %struct.Node* %n.0.i.8.i, i64 0, i32 1, i32 0, i32 0
  %102 = bitcast %union.Value* %101 to double*
  %103 = load double, double* %102, align 8, !tbaa !36
  %104 = fcmp oeq double %103, %82
  br i1 %104, label %105, label %107

; <label>:105                                     ; preds = %100
  %n.0.i.8.i.lcssa = phi %struct.Node* [ %n.0.i.8.i, %100 ]
  %106 = getelementptr inbounds %struct.Node, %struct.Node* %n.0.i.8.i.lcssa, i64 0, i32 0
  br label %luaH_getnum.exit11.i

; <label>:107                                     ; preds = %100, %hashnum.exit.i.9.i
  %108 = getelementptr inbounds %struct.Node, %struct.Node* %n.0.i.8.i, i64 0, i32 1, i32 0, i32 2
  %109 = load %struct.Node*, %struct.Node** %108, align 8, !tbaa !290
  %110 = icmp eq %struct.Node* %109, null
  br i1 %110, label %luaH_getnum.exit11.i.loopexit, label %hashnum.exit.i.9.i

luaH_getnum.exit11.i.loopexit:                    ; preds = %107
  br label %luaH_getnum.exit11.i

luaH_getnum.exit11.i:                             ; preds = %luaH_getnum.exit11.i.loopexit, %105, %77
  %.1.i.10.i = phi %struct.lua_TValue* [ %80, %77 ], [ %106, %105 ], [ bitcast (%struct.lua_TValue.218* @luaO_nilobject_ to %struct.lua_TValue*), %luaH_getnum.exit11.i.loopexit ]
  %111 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %.1.i.10.i, i64 0, i32 1
  %112 = load i32, i32* %111, align 4, !tbaa !10
  %113 = icmp eq i32 %112, 0
  %114 = add i32 %i.1.i, 1
  br i1 %113, label %unbound_search.exit.loopexit29, label %.preheader12.i

.lr.ph.i:                                         ; preds = %.lr.ph.i.preheader, %luaH_getnum.exit6.i
  %i.220.i = phi i32 [ %i.2..i, %luaH_getnum.exit6.i ], [ %i.0.i.lcssa, %.lr.ph.i.preheader ]
  %.119.i = phi i32 [ %..1.i, %luaH_getnum.exit6.i ], [ %.01.i.lcssa, %.lr.ph.i.preheader ]
  %115 = add i32 %.119.i, %i.220.i
  %116 = lshr i32 %115, 1
  %117 = add nsw i32 %116, -1
  %118 = icmp ult i32 %117, %2
  br i1 %118, label %119, label %123

; <label>:119                                     ; preds = %.lr.ph.i
  %120 = sext i32 %117 to i64
  %121 = load %struct.lua_TValue*, %struct.lua_TValue** %28, align 8, !tbaa !208
  %122 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %121, i64 %120
  br label %luaH_getnum.exit6.i

; <label>:123                                     ; preds = %.lr.ph.i
  %124 = sitofp i32 %116 to double
  %125 = icmp eq i32 %116, 0
  br i1 %125, label %hashnum.exit.i.4.i.preheader, label %126

; <label>:126                                     ; preds = %123
  %127 = bitcast double %124 to i64
  %128 = lshr i64 %127, 32
  %129 = trunc i64 %128 to i32
  %trunc.i.i.2.i = trunc i64 %127 to i32
  %130 = add i32 %129, %trunc.i.i.2.i
  %131 = load i8, i8* %29, align 1, !tbaa !210
  %132 = zext i8 %131 to i32
  %133 = shl i32 1, %132
  %134 = add nsw i32 %133, -1
  %135 = or i32 %134, 1
  %136 = urem i32 %130, %135
  %137 = zext i32 %136 to i64
  %138 = getelementptr inbounds %struct.Node, %struct.Node* %24, i64 %137
  br label %hashnum.exit.i.4.i.preheader

hashnum.exit.i.4.i.preheader:                     ; preds = %123, %126
  %n.0.i.3.i.ph = phi %struct.Node* [ %24, %123 ], [ %138, %126 ]
  br label %hashnum.exit.i.4.i

hashnum.exit.i.4.i:                               ; preds = %hashnum.exit.i.4.i.preheader, %149
  %n.0.i.3.i = phi %struct.Node* [ %151, %149 ], [ %n.0.i.3.i.ph, %hashnum.exit.i.4.i.preheader ]
  %139 = getelementptr inbounds %struct.Node, %struct.Node* %n.0.i.3.i, i64 0, i32 1, i32 0, i32 1
  %140 = load i32, i32* %139, align 4, !tbaa !212
  %141 = icmp eq i32 %140, 3
  br i1 %141, label %142, label %149

; <label>:142                                     ; preds = %hashnum.exit.i.4.i
  %143 = getelementptr inbounds %struct.Node, %struct.Node* %n.0.i.3.i, i64 0, i32 1, i32 0, i32 0
  %144 = bitcast %union.Value* %143 to double*
  %145 = load double, double* %144, align 8, !tbaa !36
  %146 = fcmp oeq double %145, %124
  br i1 %146, label %147, label %149

; <label>:147                                     ; preds = %142
  %n.0.i.3.i.lcssa = phi %struct.Node* [ %n.0.i.3.i, %142 ]
  %148 = getelementptr inbounds %struct.Node, %struct.Node* %n.0.i.3.i.lcssa, i64 0, i32 0
  br label %luaH_getnum.exit6.i

; <label>:149                                     ; preds = %142, %hashnum.exit.i.4.i
  %150 = getelementptr inbounds %struct.Node, %struct.Node* %n.0.i.3.i, i64 0, i32 1, i32 0, i32 2
  %151 = load %struct.Node*, %struct.Node** %150, align 8, !tbaa !290
  %152 = icmp eq %struct.Node* %151, null
  br i1 %152, label %luaH_getnum.exit6.i.loopexit, label %hashnum.exit.i.4.i

luaH_getnum.exit6.i.loopexit:                     ; preds = %149
  br label %luaH_getnum.exit6.i

luaH_getnum.exit6.i:                              ; preds = %luaH_getnum.exit6.i.loopexit, %147, %119
  %.1.i.5.i = phi %struct.lua_TValue* [ %122, %119 ], [ %148, %147 ], [ bitcast (%struct.lua_TValue.218* @luaO_nilobject_ to %struct.lua_TValue*), %luaH_getnum.exit6.i.loopexit ]
  %153 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %.1.i.5.i, i64 0, i32 1
  %154 = load i32, i32* %153, align 4, !tbaa !10
  %155 = icmp eq i32 %154, 0
  %..1.i = select i1 %155, i32 %116, i32 %.119.i
  %i.2..i = select i1 %155, i32 %i.220.i, i32 %116
  %156 = sub i32 %..1.i, %i.2..i
  %157 = icmp ugt i32 %156, 1
  br i1 %157, label %.lr.ph.i, label %unbound_search.exit.loopexit

unbound_search.exit.loopexit:                     ; preds = %luaH_getnum.exit6.i
  %i.2..i.lcssa = phi i32 [ %i.2..i, %luaH_getnum.exit6.i ]
  br label %unbound_search.exit

unbound_search.exit.loopexit29:                   ; preds = %luaH_getnum.exit11.i
  %.lcssa = phi i32 [ %75, %luaH_getnum.exit11.i ]
  br label %unbound_search.exit

unbound_search.exit.loopexit30:                   ; preds = %.lr.ph
  %i.0..lcssa = phi i32 [ %i.0., %.lr.ph ]
  br label %unbound_search.exit

unbound_search.exit:                              ; preds = %unbound_search.exit.loopexit30, %unbound_search.exit.loopexit29, %unbound_search.exit.loopexit, %.preheader, %.preheader.i, %22
  %.0 = phi i32 [ %2, %22 ], [ %i.0.i.lcssa, %.preheader.i ], [ 0, %.preheader ], [ %i.2..i.lcssa, %unbound_search.exit.loopexit ], [ %.lcssa, %unbound_search.exit.loopexit29 ], [ %i.0..lcssa, %unbound_search.exit.loopexit30 ]
  ret i32 %.0
}

; Function Attrs: nounwind uwtable
define internal fastcc void @resize(%struct.lua_State* %L, %struct.Table* %t, i32 %nasize, i32 %nhsize) #0 {
  %k.i = alloca %struct.lua_TValue, align 8
  %1 = getelementptr inbounds %struct.Table, %struct.Table* %t, i64 0, i32 10
  %2 = load i32, i32* %1, align 4, !tbaa !206
  %3 = getelementptr inbounds %struct.Table, %struct.Table* %t, i64 0, i32 4
  %4 = load i8, i8* %3, align 1, !tbaa !210
  %5 = zext i8 %4 to i32
  %6 = getelementptr inbounds %struct.Table, %struct.Table* %t, i64 0, i32 7
  %7 = load %struct.Node*, %struct.Node** %6, align 8, !tbaa !211
  %8 = icmp slt i32 %2, %nasize
  br i1 %8, label %9, label %43

; <label>:9                                       ; preds = %0
  %10 = icmp sgt i32 %nasize, -2
  br i1 %10, label %11, label %20

; <label>:11                                      ; preds = %9
  %12 = getelementptr inbounds %struct.Table, %struct.Table* %t, i64 0, i32 6
  %13 = bitcast %struct.lua_TValue** %12 to i8**
  %14 = load i8*, i8** %13, align 8, !tbaa !208
  %15 = sext i32 %2 to i64
  %16 = shl nsw i64 %15, 4
  %17 = sext i32 %nasize to i64
  %18 = shl nsw i64 %17, 4
  %19 = tail call i8* @luaM_realloc_(%struct.lua_State* %L, i8* %14, i64 %16, i64 %18) #1
  br label %22

; <label>:20                                      ; preds = %9
  %21 = tail call i8* @luaM_toobig(%struct.lua_State* %L) #1
  %.pre.i = getelementptr inbounds %struct.Table, %struct.Table* %t, i64 0, i32 6
  %.pre2.i = bitcast %struct.lua_TValue** %.pre.i to i8**
  br label %22

; <label>:22                                      ; preds = %20, %11
  %.pre-phi3.i = phi i8** [ %.pre2.i, %20 ], [ %13, %11 ]
  %23 = phi i8* [ %21, %20 ], [ %19, %11 ]
  store i8* %23, i8** %.pre-phi3.i, align 8, !tbaa !208
  %24 = load i32, i32* %1, align 4, !tbaa !206
  %25 = icmp slt i32 %24, %nasize
  %26 = bitcast i8* %23 to %struct.lua_TValue*
  br i1 %25, label %.lr.ph.i, label %setarrayvector.exit

.lr.ph.i:                                         ; preds = %22
  %27 = sext i32 %24 to i64
  %28 = sub i32 %nasize, %24
  %29 = add i32 %nasize, -1
  %30 = sub i32 %29, %24
  %xtraiter = and i32 %28, 7
  %lcmp.mod = icmp eq i32 %xtraiter, 0
  br i1 %lcmp.mod, label %.lr.ph.i.split, label %.preheader

.preheader:                                       ; preds = %.lr.ph.i
  br label %31

; <label>:31                                      ; preds = %.preheader, %31
  %indvars.iv.i.prol = phi i64 [ %indvars.iv.next.i.prol, %31 ], [ %27, %.preheader ]
  %prol.iter = phi i32 [ %prol.iter.sub, %31 ], [ %xtraiter, %.preheader ]
  %32 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %26, i64 %indvars.iv.i.prol, i32 1
  store i32 0, i32* %32, align 4, !tbaa !10
  %indvars.iv.next.i.prol = add nsw i64 %indvars.iv.i.prol, 1
  %prol.iter.sub = add i32 %prol.iter, -1
  %prol.iter.cmp = icmp eq i32 %prol.iter.sub, 0
  br i1 %prol.iter.cmp, label %.lr.ph.i.split.loopexit, label %31, !llvm.loop !292

.lr.ph.i.split.loopexit:                          ; preds = %31
  %indvars.iv.next.i.prol.lcssa = phi i64 [ %indvars.iv.next.i.prol, %31 ]
  br label %.lr.ph.i.split

.lr.ph.i.split:                                   ; preds = %.lr.ph.i.split.loopexit, %.lr.ph.i
  %indvars.iv.i.unr = phi i64 [ %27, %.lr.ph.i ], [ %indvars.iv.next.i.prol.lcssa, %.lr.ph.i.split.loopexit ]
  %33 = icmp ult i32 %30, 7
  br i1 %33, label %setarrayvector.exit.loopexit, label %.lr.ph.i.split.split

.lr.ph.i.split.split:                             ; preds = %.lr.ph.i.split
  br label %34

; <label>:34                                      ; preds = %34, %.lr.ph.i.split.split
  %indvars.iv.i = phi i64 [ %indvars.iv.i.unr, %.lr.ph.i.split.split ], [ %indvars.iv.next.i.7, %34 ]
  %35 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %26, i64 %indvars.iv.i, i32 1
  store i32 0, i32* %35, align 4, !tbaa !10
  %indvars.iv.next.i = add nsw i64 %indvars.iv.i, 1
  %36 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %26, i64 %indvars.iv.next.i, i32 1
  store i32 0, i32* %36, align 4, !tbaa !10
  %indvars.iv.next.i.1 = add nsw i64 %indvars.iv.i, 2
  %37 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %26, i64 %indvars.iv.next.i.1, i32 1
  store i32 0, i32* %37, align 4, !tbaa !10
  %indvars.iv.next.i.2 = add nsw i64 %indvars.iv.i, 3
  %38 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %26, i64 %indvars.iv.next.i.2, i32 1
  store i32 0, i32* %38, align 4, !tbaa !10
  %indvars.iv.next.i.3 = add nsw i64 %indvars.iv.i, 4
  %39 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %26, i64 %indvars.iv.next.i.3, i32 1
  store i32 0, i32* %39, align 4, !tbaa !10
  %indvars.iv.next.i.4 = add nsw i64 %indvars.iv.i, 5
  %40 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %26, i64 %indvars.iv.next.i.4, i32 1
  store i32 0, i32* %40, align 4, !tbaa !10
  %indvars.iv.next.i.5 = add nsw i64 %indvars.iv.i, 6
  %41 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %26, i64 %indvars.iv.next.i.5, i32 1
  store i32 0, i32* %41, align 4, !tbaa !10
  %indvars.iv.next.i.6 = add nsw i64 %indvars.iv.i, 7
  %42 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %26, i64 %indvars.iv.next.i.6, i32 1
  store i32 0, i32* %42, align 4, !tbaa !10
  %indvars.iv.next.i.7 = add nsw i64 %indvars.iv.i, 8
  %lftr.wideiv.i.7 = trunc i64 %indvars.iv.next.i.7 to i32
  %exitcond.i.7 = icmp eq i32 %lftr.wideiv.i.7, %nasize
  br i1 %exitcond.i.7, label %setarrayvector.exit.loopexit.unr-lcssa, label %34

setarrayvector.exit.loopexit.unr-lcssa:           ; preds = %34
  br label %setarrayvector.exit.loopexit

setarrayvector.exit.loopexit:                     ; preds = %.lr.ph.i.split, %setarrayvector.exit.loopexit.unr-lcssa
  br label %setarrayvector.exit

setarrayvector.exit:                              ; preds = %setarrayvector.exit.loopexit, %22
  store i32 %nasize, i32* %1, align 4, !tbaa !206
  br label %43

; <label>:43                                      ; preds = %setarrayvector.exit, %0
  tail call fastcc void @setnodevector(%struct.lua_State* %L, %struct.Table* %t, i32 %nhsize)
  %44 = icmp sgt i32 %2, %nasize
  br i1 %44, label %.lr.ph9, label %115

.lr.ph9:                                          ; preds = %43
  store i32 %nasize, i32* %1, align 4, !tbaa !206
  %45 = getelementptr inbounds %struct.Table, %struct.Table* %t, i64 0, i32 6
  %46 = bitcast %struct.lua_TValue* %k.i to i8*
  %47 = bitcast %struct.lua_TValue* %k.i to double*
  %48 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %k.i, i64 0, i32 1
  %49 = sext i32 %nasize to i64
  br label %50

; <label>:50                                      ; preds = %._crit_edge.18, %.lr.ph9
  %indvars.iv13 = phi i64 [ %49, %.lr.ph9 ], [ %.pre19, %._crit_edge.18 ]
  %51 = load %struct.lua_TValue*, %struct.lua_TValue** %45, align 8, !tbaa !208
  %52 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %51, i64 %indvars.iv13, i32 1
  %53 = load i32, i32* %52, align 4, !tbaa !10
  %54 = icmp eq i32 %53, 0
  %.pre19 = add nsw i64 %indvars.iv13, 1
  br i1 %54, label %._crit_edge.18, label %55

; <label>:55                                      ; preds = %50
  %56 = load i32, i32* %1, align 4, !tbaa !206
  %57 = trunc i64 %indvars.iv13 to i32
  %58 = icmp ult i32 %57, %56
  br i1 %58, label %59, label %61

; <label>:59                                      ; preds = %55
  %60 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %51, i64 %indvars.iv13
  br label %luaH_getnum.exit.i

; <label>:61                                      ; preds = %55
  %62 = trunc i64 %.pre19 to i32
  %63 = sitofp i32 %62 to double
  %64 = icmp eq i32 %62, 0
  %65 = load %struct.Node*, %struct.Node** %6, align 8
  br i1 %64, label %hashnum.exit.i.i.preheader, label %66

; <label>:66                                      ; preds = %61
  %67 = bitcast double %63 to i64
  %68 = lshr i64 %67, 32
  %69 = trunc i64 %68 to i32
  %trunc.i.i.i = trunc i64 %67 to i32
  %70 = add i32 %69, %trunc.i.i.i
  %71 = load i8, i8* %3, align 1, !tbaa !210
  %72 = zext i8 %71 to i32
  %73 = shl i32 1, %72
  %74 = add nsw i32 %73, -1
  %75 = or i32 %74, 1
  %76 = urem i32 %70, %75
  %77 = zext i32 %76 to i64
  %78 = getelementptr inbounds %struct.Node, %struct.Node* %65, i64 %77
  br label %hashnum.exit.i.i.preheader

hashnum.exit.i.i.preheader:                       ; preds = %61, %66
  %n.0.i.i.ph = phi %struct.Node* [ %65, %61 ], [ %78, %66 ]
  br label %hashnum.exit.i.i

hashnum.exit.i.i:                                 ; preds = %hashnum.exit.i.i.preheader, %89
  %n.0.i.i = phi %struct.Node* [ %91, %89 ], [ %n.0.i.i.ph, %hashnum.exit.i.i.preheader ]
  %79 = getelementptr inbounds %struct.Node, %struct.Node* %n.0.i.i, i64 0, i32 1, i32 0, i32 1
  %80 = load i32, i32* %79, align 4, !tbaa !212
  %81 = icmp eq i32 %80, 3
  br i1 %81, label %82, label %89

; <label>:82                                      ; preds = %hashnum.exit.i.i
  %83 = getelementptr inbounds %struct.Node, %struct.Node* %n.0.i.i, i64 0, i32 1, i32 0, i32 0
  %84 = bitcast %union.Value* %83 to double*
  %85 = load double, double* %84, align 8, !tbaa !36
  %86 = fcmp oeq double %85, %63
  br i1 %86, label %87, label %89

; <label>:87                                      ; preds = %82
  %n.0.i.i.lcssa = phi %struct.Node* [ %n.0.i.i, %82 ]
  %88 = getelementptr inbounds %struct.Node, %struct.Node* %n.0.i.i.lcssa, i64 0, i32 0
  br label %luaH_getnum.exit.i

; <label>:89                                      ; preds = %82, %hashnum.exit.i.i
  %90 = getelementptr inbounds %struct.Node, %struct.Node* %n.0.i.i, i64 0, i32 1, i32 0, i32 2
  %91 = load %struct.Node*, %struct.Node** %90, align 8, !tbaa !290
  %92 = icmp eq %struct.Node* %91, null
  br i1 %92, label %luaH_getnum.exit.i.thread.loopexit, label %hashnum.exit.i.i

luaH_getnum.exit.i:                               ; preds = %87, %59
  %.1.i.i = phi %struct.lua_TValue* [ %60, %59 ], [ %88, %87 ]
  %93 = icmp eq %struct.lua_TValue* %.1.i.i, bitcast (%struct.lua_TValue.218* @luaO_nilobject_ to %struct.lua_TValue*)
  br i1 %93, label %luaH_getnum.exit.i.luaH_getnum.exit.i.thread_crit_edge, label %luaH_setnum.exit

luaH_getnum.exit.i.luaH_getnum.exit.i.thread_crit_edge: ; preds = %luaH_getnum.exit.i
  %.pre20 = trunc i64 %.pre19 to i32
  %.pre22 = sitofp i32 %.pre20 to double
  br label %luaH_getnum.exit.i.thread

luaH_getnum.exit.i.thread.loopexit:               ; preds = %89
  br label %luaH_getnum.exit.i.thread

luaH_getnum.exit.i.thread:                        ; preds = %luaH_getnum.exit.i.thread.loopexit, %luaH_getnum.exit.i.luaH_getnum.exit.i.thread_crit_edge
  %.pre-phi23 = phi double [ %.pre22, %luaH_getnum.exit.i.luaH_getnum.exit.i.thread_crit_edge ], [ %63, %luaH_getnum.exit.i.thread.loopexit ]
  call void @llvm.lifetime.start(i64 16, i8* %46) #1
  store double %.pre-phi23, double* %47, align 8, !tbaa !36
  store i32 3, i32* %48, align 8, !tbaa !10
  %94 = call fastcc %struct.lua_TValue* @newkey(%struct.lua_State* %L, %struct.Table* %t, %struct.lua_TValue* nonnull %k.i) #1
  call void @llvm.lifetime.end(i64 16, i8* %46) #1
  br label %luaH_setnum.exit

luaH_setnum.exit:                                 ; preds = %luaH_getnum.exit.i, %luaH_getnum.exit.i.thread
  %.0.i = phi %struct.lua_TValue* [ %94, %luaH_getnum.exit.i.thread ], [ %.1.i.i, %luaH_getnum.exit.i ]
  %95 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %51, i64 %indvars.iv13, i32 0
  %96 = bitcast %union.Value* %95 to i64*
  %97 = bitcast %struct.lua_TValue* %.0.i to i64*
  %98 = load i64, i64* %96, align 8
  store i64 %98, i64* %97, align 8
  %99 = load i32, i32* %52, align 4, !tbaa !10
  %100 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %.0.i, i64 0, i32 1
  store i32 %99, i32* %100, align 4, !tbaa !10
  br label %._crit_edge.18

._crit_edge.18:                                   ; preds = %50, %luaH_setnum.exit
  %lftr.wideiv = trunc i64 %.pre19 to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %2
  br i1 %exitcond, label %._crit_edge.10, label %50

._crit_edge.10:                                   ; preds = %._crit_edge.18
  %101 = icmp sgt i32 %nasize, -2
  br i1 %101, label %102, label %111

; <label>:102                                     ; preds = %._crit_edge.10
  %103 = getelementptr inbounds %struct.Table, %struct.Table* %t, i64 0, i32 6
  %104 = bitcast %struct.lua_TValue** %103 to i8**
  %105 = load i8*, i8** %104, align 8, !tbaa !208
  %106 = sext i32 %2 to i64
  %107 = shl nsw i64 %106, 4
  %108 = sext i32 %nasize to i64
  %109 = shl nsw i64 %108, 4
  %110 = call i8* @luaM_realloc_(%struct.lua_State* %L, i8* %105, i64 %107, i64 %109) #1
  br label %113

; <label>:111                                     ; preds = %._crit_edge.10
  %112 = call i8* @luaM_toobig(%struct.lua_State* %L) #1
  %.pre = getelementptr inbounds %struct.Table, %struct.Table* %t, i64 0, i32 6
  %.pre16 = bitcast %struct.lua_TValue** %.pre to i8**
  br label %113

; <label>:113                                     ; preds = %111, %102
  %.pre-phi17 = phi i8** [ %.pre16, %111 ], [ %104, %102 ]
  %114 = phi i8* [ %112, %111 ], [ %110, %102 ]
  store i8* %114, i8** %.pre-phi17, align 8, !tbaa !208
  br label %115

; <label>:115                                     ; preds = %113, %43
  %116 = shl i32 1, %5
  %117 = icmp eq i8 %4, 31
  br i1 %117, label %._crit_edge, label %.lr.ph

.lr.ph:                                           ; preds = %115
  %118 = getelementptr inbounds %struct.Table, %struct.Table* %t, i64 0, i32 3
  %119 = sext i32 %116 to i64
  br label %120

; <label>:120                                     ; preds = %.lr.ph, %.backedge
  %indvars.iv = phi i64 [ %119, %.lr.ph ], [ %indvars.iv.next, %.backedge ]
  %i.16.in = phi i32 [ %116, %.lr.ph ], [ %i.16, %.backedge ]
  %i.16 = add nsw i32 %i.16.in, -1
  %121 = sext i32 %i.16 to i64
  %122 = getelementptr inbounds %struct.Node, %struct.Node* %7, i64 %121, i32 0, i32 1
  %123 = load i32, i32* %122, align 4, !tbaa !10
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %.backedge, label %125

; <label>:125                                     ; preds = %120
  %126 = getelementptr inbounds %struct.Node, %struct.Node* %7, i64 %121
  %127 = getelementptr inbounds %struct.Node, %struct.Node* %7, i64 %121, i32 1
  %128 = bitcast %union.TKey* %127 to %struct.lua_TValue*
  %129 = call %struct.lua_TValue* @luaH_get(%struct.Table* %t, %struct.lua_TValue* %128) #1
  store i8 0, i8* %118, align 1, !tbaa !187
  %130 = icmp eq %struct.lua_TValue* %129, bitcast (%struct.lua_TValue.218* @luaO_nilobject_ to %struct.lua_TValue*)
  br i1 %130, label %131, label %luaH_set.exit

; <label>:131                                     ; preds = %125
  %132 = getelementptr inbounds %struct.Node, %struct.Node* %7, i64 %121, i32 1, i32 0, i32 1
  %133 = load i32, i32* %132, align 4, !tbaa !10
  switch i32 %133, label %140 [
    i32 0, label %134
    i32 3, label %135
  ]

; <label>:134                                     ; preds = %131
  call void (%struct.lua_State*, i8*, ...) @luaG_runerror(%struct.lua_State* %L, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.608, i64 0, i64 0)) #1
  br label %140

; <label>:135                                     ; preds = %131
  %136 = bitcast %union.TKey* %127 to double*
  %137 = load double, double* %136, align 8, !tbaa !36
  %138 = fcmp ord double %137, 0.000000e+00
  br i1 %138, label %140, label %139

; <label>:139                                     ; preds = %135
  call void (%struct.lua_State*, i8*, ...) @luaG_runerror(%struct.lua_State* %L, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1.609, i64 0, i64 0)) #1
  br label %140

; <label>:140                                     ; preds = %139, %135, %134, %131
  %141 = call fastcc %struct.lua_TValue* @newkey(%struct.lua_State* %L, %struct.Table* %t, %struct.lua_TValue* %128) #1
  br label %luaH_set.exit

luaH_set.exit:                                    ; preds = %125, %140
  %.0.i.3 = phi %struct.lua_TValue* [ %141, %140 ], [ %129, %125 ]
  %142 = bitcast %struct.Node* %126 to i64*
  %143 = bitcast %struct.lua_TValue* %.0.i.3 to i64*
  %144 = load i64, i64* %142, align 8
  store i64 %144, i64* %143, align 8
  %145 = load i32, i32* %122, align 4, !tbaa !10
  %146 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %.0.i.3, i64 0, i32 1
  store i32 %145, i32* %146, align 4, !tbaa !10
  br label %.backedge

.backedge:                                        ; preds = %luaH_set.exit, %120
  %147 = icmp sgt i64 %indvars.iv, 1
  %indvars.iv.next = add nsw i64 %indvars.iv, -1
  br i1 %147, label %120, label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %.backedge
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %115
  %148 = icmp eq %struct.Node* %7, @dummynode_
  br i1 %148, label %154, label %149

; <label>:149                                     ; preds = %._crit_edge
  %150 = bitcast %struct.Node* %7 to i8*
  %151 = sext i32 %116 to i64
  %152 = mul nsw i64 %151, 40
  %153 = call i8* @luaM_realloc_(%struct.lua_State* %L, i8* %150, i64 %152, i64 0) #1
  br label %154

; <label>:154                                     ; preds = %._crit_edge, %149
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @setnodevector(%struct.lua_State* %L, %struct.Table* nocapture %t, i32 %size) #0 {
  %1 = icmp eq i32 %size, 0
  br i1 %1, label %2, label %4

; <label>:2                                       ; preds = %0
  %3 = getelementptr inbounds %struct.Table, %struct.Table* %t, i64 0, i32 7
  store %struct.Node* @dummynode_, %struct.Node** %3, align 8, !tbaa !211
  br label %29

; <label>:4                                       ; preds = %0
  %5 = add nsw i32 %size, -1
  %6 = tail call i32 @luaO_log2(i32 %5) #1
  %7 = add nsw i32 %6, 1
  %8 = icmp sgt i32 %6, 25
  br i1 %8, label %9, label %10

; <label>:9                                       ; preds = %4
  tail call void (%struct.lua_State*, i8*, ...) @luaG_runerror(%struct.lua_State* %L, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.3.610, i64 0, i64 0)) #1
  br label %10

; <label>:10                                      ; preds = %9, %4
  %11 = shl i32 1, %7
  %12 = icmp sgt i32 %11, -2
  br i1 %12, label %13, label %17

; <label>:13                                      ; preds = %10
  %14 = sext i32 %11 to i64
  %15 = mul nsw i64 %14, 40
  %16 = tail call i8* @luaM_realloc_(%struct.lua_State* %L, i8* null, i64 0, i64 %15) #1
  br label %19

; <label>:17                                      ; preds = %10
  %18 = tail call i8* @luaM_toobig(%struct.lua_State* %L) #1
  br label %19

; <label>:19                                      ; preds = %17, %13
  %20 = phi i8* [ %16, %13 ], [ %18, %17 ]
  %21 = getelementptr inbounds %struct.Table, %struct.Table* %t, i64 0, i32 7
  %22 = bitcast %struct.Node** %21 to i8**
  store i8* %20, i8** %22, align 8, !tbaa !211
  %23 = icmp eq i32 %7, 31
  %24 = bitcast i8* %20 to %struct.Node*
  %.pre = sext i32 %11 to i64
  br i1 %23, label %._crit_edge, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %19
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %.lr.ph
  %indvars.iv = phi i64 [ %indvars.iv.next, %.lr.ph ], [ 0, %.lr.ph.preheader ]
  %25 = getelementptr inbounds %struct.Node, %struct.Node* %24, i64 %indvars.iv, i32 1, i32 0, i32 2
  store %struct.Node* null, %struct.Node** %25, align 8, !tbaa !290
  %26 = getelementptr inbounds %struct.Node, %struct.Node* %24, i64 %indvars.iv, i32 1, i32 0, i32 1
  store i32 0, i32* %26, align 4, !tbaa !212
  %27 = getelementptr inbounds %struct.Node, %struct.Node* %24, i64 %indvars.iv, i32 0, i32 1
  store i32 0, i32* %27, align 4, !tbaa !10
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %28 = icmp slt i64 %indvars.iv.next, %.pre
  br i1 %28, label %.lr.ph, label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %.lr.ph
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %19
  %phitmp = trunc i32 %7 to i8
  br label %29

; <label>:29                                      ; preds = %._crit_edge, %2
  %30 = phi %struct.Node* [ @dummynode_, %2 ], [ %24, %._crit_edge ]
  %lsize.0 = phi i8 [ 0, %2 ], [ %phitmp, %._crit_edge ]
  %.0 = phi i64 [ 0, %2 ], [ %.pre, %._crit_edge ]
  %31 = getelementptr inbounds %struct.Table, %struct.Table* %t, i64 0, i32 4
  store i8 %lsize.0, i8* %31, align 1, !tbaa !210
  %32 = getelementptr inbounds %struct.Node, %struct.Node* %30, i64 %.0
  %33 = getelementptr inbounds %struct.Table, %struct.Table* %t, i64 0, i32 8
  store %struct.Node* %32, %struct.Node** %33, align 8, !tbaa !293
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.lua_TValue* @newkey(%struct.lua_State* %L, %struct.Table* %t, %struct.lua_TValue* %key) #0 {
  %nums.i = alloca [27 x i32], align 16
  %1 = bitcast [27 x i32]* %nums.i to i8*
  %2 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %key, i64 0, i32 1
  %3 = load i32, i32* %2, align 4, !tbaa !10
  switch i32 %3, label %67 [
    i32 3, label %4
    i32 4, label %24
    i32 1, label %39
    i32 2, label %52
  ]

; <label>:4                                       ; preds = %0
  %5 = bitcast %struct.lua_TValue* %key to double*
  %6 = load double, double* %5, align 8, !tbaa !36
  %7 = fcmp oeq double %6, 0.000000e+00
  %8 = getelementptr inbounds %struct.Table, %struct.Table* %t, i64 0, i32 7
  %9 = load %struct.Node*, %struct.Node** %8, align 8
  br i1 %7, label %mainposition.exit, label %10

; <label>:10                                      ; preds = %4
  %11 = bitcast double %6 to i64
  %12 = lshr i64 %11, 32
  %13 = trunc i64 %12 to i32
  %trunc.i = trunc i64 %11 to i32
  %14 = add i32 %13, %trunc.i
  %15 = getelementptr inbounds %struct.Table, %struct.Table* %t, i64 0, i32 4
  %16 = load i8, i8* %15, align 1, !tbaa !210
  %17 = zext i8 %16 to i32
  %18 = shl i32 1, %17
  %19 = add nsw i32 %18, -1
  %20 = or i32 %19, 1
  %21 = urem i32 %14, %20
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %struct.Node, %struct.Node* %9, i64 %22
  br label %mainposition.exit

; <label>:24                                      ; preds = %0
  %25 = bitcast %struct.lua_TValue* %key to %struct.anon.1**
  %26 = load %struct.anon.1*, %struct.anon.1** %25, align 8, !tbaa !25
  %27 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %26, i64 0, i32 4
  %28 = load i32, i32* %27, align 4, !tbaa !277
  %29 = getelementptr inbounds %struct.Table, %struct.Table* %t, i64 0, i32 4
  %30 = load i8, i8* %29, align 1, !tbaa !210
  %31 = zext i8 %30 to i32
  %32 = shl i32 1, %31
  %33 = add nsw i32 %32, -1
  %34 = and i32 %33, %28
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds %struct.Table, %struct.Table* %t, i64 0, i32 7
  %37 = load %struct.Node*, %struct.Node** %36, align 8, !tbaa !211
  %38 = getelementptr inbounds %struct.Node, %struct.Node* %37, i64 %35
  br label %mainposition.exit

; <label>:39                                      ; preds = %0
  %40 = bitcast %struct.lua_TValue* %key to i32*
  %41 = load i32, i32* %40, align 4, !tbaa !38
  %42 = getelementptr inbounds %struct.Table, %struct.Table* %t, i64 0, i32 4
  %43 = load i8, i8* %42, align 1, !tbaa !210
  %44 = zext i8 %43 to i32
  %45 = shl i32 1, %44
  %46 = add nsw i32 %45, -1
  %47 = and i32 %46, %41
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds %struct.Table, %struct.Table* %t, i64 0, i32 7
  %50 = load %struct.Node*, %struct.Node** %49, align 8, !tbaa !211
  %51 = getelementptr inbounds %struct.Node, %struct.Node* %50, i64 %48
  br label %mainposition.exit

; <label>:52                                      ; preds = %0
  %53 = bitcast %struct.lua_TValue* %key to i64*
  %54 = load i64, i64* %53, align 8, !tbaa !25
  %55 = trunc i64 %54 to i32
  %56 = getelementptr inbounds %struct.Table, %struct.Table* %t, i64 0, i32 4
  %57 = load i8, i8* %56, align 1, !tbaa !210
  %58 = zext i8 %57 to i32
  %59 = shl i32 1, %58
  %60 = add nsw i32 %59, -1
  %61 = or i32 %60, 1
  %62 = urem i32 %55, %61
  %63 = zext i32 %62 to i64
  %64 = getelementptr inbounds %struct.Table, %struct.Table* %t, i64 0, i32 7
  %65 = load %struct.Node*, %struct.Node** %64, align 8, !tbaa !211
  %66 = getelementptr inbounds %struct.Node, %struct.Node* %65, i64 %63
  br label %mainposition.exit

; <label>:67                                      ; preds = %0
  %68 = bitcast %struct.lua_TValue* %key to i64*
  %69 = load i64, i64* %68, align 8, !tbaa !25
  %70 = trunc i64 %69 to i32
  %71 = getelementptr inbounds %struct.Table, %struct.Table* %t, i64 0, i32 4
  %72 = load i8, i8* %71, align 1, !tbaa !210
  %73 = zext i8 %72 to i32
  %74 = shl i32 1, %73
  %75 = add nsw i32 %74, -1
  %76 = or i32 %75, 1
  %77 = urem i32 %70, %76
  %78 = zext i32 %77 to i64
  %79 = getelementptr inbounds %struct.Table, %struct.Table* %t, i64 0, i32 7
  %80 = load %struct.Node*, %struct.Node** %79, align 8, !tbaa !211
  %81 = getelementptr inbounds %struct.Node, %struct.Node* %80, i64 %78
  br label %mainposition.exit

mainposition.exit:                                ; preds = %4, %10, %24, %39, %52, %67
  %82 = phi %struct.Node* [ %80, %67 ], [ %65, %52 ], [ %50, %39 ], [ %37, %24 ], [ %9, %10 ], [ %9, %4 ]
  %.0.i = phi %struct.Node* [ %81, %67 ], [ %66, %52 ], [ %51, %39 ], [ %38, %24 ], [ %23, %10 ], [ %9, %4 ]
  %83 = getelementptr inbounds %struct.Node, %struct.Node* %.0.i, i64 0, i32 0, i32 1
  %84 = load i32, i32* %83, align 4, !tbaa !10
  %85 = icmp ne i32 %84, 0
  %86 = icmp eq %struct.Node* %.0.i, @dummynode_
  %or.cond = or i1 %86, %85
  br i1 %or.cond, label %87, label %luaH_set.exit.thread

; <label>:87                                      ; preds = %mainposition.exit
  %88 = getelementptr inbounds %struct.Table, %struct.Table* %t, i64 0, i32 8
  %89 = getelementptr inbounds %struct.Table, %struct.Table* %t, i64 0, i32 7
  %.promoted.i = load %struct.Node*, %struct.Node** %88, align 8, !tbaa !293
  br label %90

; <label>:90                                      ; preds = %94, %87
  %91 = phi %struct.Node* [ %92, %94 ], [ %.promoted.i, %87 ]
  %92 = getelementptr inbounds %struct.Node, %struct.Node* %91, i64 -1
  %93 = icmp ugt %struct.Node* %91, %82
  br i1 %93, label %94, label %98

; <label>:94                                      ; preds = %90
  %95 = getelementptr inbounds %struct.Node, %struct.Node* %91, i64 -1, i32 1, i32 0, i32 1
  %96 = load i32, i32* %95, align 4, !tbaa !212
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %204, label %90

; <label>:98                                      ; preds = %90
  %.lcssa68 = phi %struct.Node* [ %92, %90 ]
  store %struct.Node* %.lcssa68, %struct.Node** %88, align 8, !tbaa !293
  call void @llvm.lifetime.start(i64 108, i8* %1) #1
  call void @llvm.memset.p0i8.i64(i8* %1, i8 0, i64 108, i32 16, i1 false)
  %99 = getelementptr inbounds %struct.Table, %struct.Table* %t, i64 0, i32 10
  %100 = getelementptr inbounds %struct.Table, %struct.Table* %t, i64 0, i32 6
  %101 = load i32, i32* %99, align 4, !tbaa !206
  br label %102

; <label>:102                                     ; preds = %._crit_edge.i.i, %98
  %indvars.iv10.i.i = phi i64 [ 0, %98 ], [ %indvars.iv.next11.i.i, %._crit_edge.i.i ]
  %i.09.i.i = phi i32 [ 1, %98 ], [ %i.1.lcssa.i.i, %._crit_edge.i.i ]
  %ause.08.i.i = phi i32 [ 0, %98 ], [ %120, %._crit_edge.i.i ]
  %ttlg.07.i.i = phi i32 [ 1, %98 ], [ %121, %._crit_edge.i.i ]
  %103 = icmp sgt i32 %ttlg.07.i.i, %101
  br i1 %103, label %104, label %.preheader.i.i

; <label>:104                                     ; preds = %102
  %105 = icmp sgt i32 %i.09.i.i, %101
  br i1 %105, label %numusearray.exit.i, label %.preheader.i.i

.preheader.i.i:                                   ; preds = %104, %102
  %lim.0.ph.i.i = phi i32 [ %ttlg.07.i.i, %102 ], [ %101, %104 ]
  %106 = icmp sgt i32 %i.09.i.i, %lim.0.ph.i.i
  br i1 %106, label %._crit_edge.i.i, label %.lr.ph.i.i

.lr.ph.i.i:                                       ; preds = %.preheader.i.i
  %107 = load %struct.lua_TValue*, %struct.lua_TValue** %100, align 8, !tbaa !208
  %108 = sext i32 %i.09.i.i to i64
  %109 = sext i32 %lim.0.ph.i.i to i64
  br label %110

; <label>:110                                     ; preds = %110, %.lr.ph.i.i
  %indvars.iv.i.i = phi i64 [ %indvars.iv.next.i.i, %110 ], [ %108, %.lr.ph.i.i ]
  %lc.04.i.i = phi i32 [ %lc.0..i.i, %110 ], [ 0, %.lr.ph.i.i ]
  %i.13.i.i = phi i32 [ %115, %110 ], [ %i.09.i.i, %.lr.ph.i.i ]
  %111 = add nsw i64 %indvars.iv.i.i, -1
  %112 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %107, i64 %111, i32 1
  %113 = load i32, i32* %112, align 4, !tbaa !10
  %not..i.i = icmp ne i32 %113, 0
  %114 = zext i1 %not..i.i to i32
  %lc.0..i.i = add nsw i32 %114, %lc.04.i.i
  %115 = add nsw i32 %i.13.i.i, 1
  %116 = icmp slt i64 %indvars.iv.i.i, %109
  %indvars.iv.next.i.i = add nsw i64 %indvars.iv.i.i, 1
  br i1 %116, label %110, label %._crit_edge.i.i.loopexit

._crit_edge.i.i.loopexit:                         ; preds = %110
  %.lcssa65 = phi i32 [ %115, %110 ]
  %lc.0..i.i.lcssa = phi i32 [ %lc.0..i.i, %110 ]
  br label %._crit_edge.i.i

._crit_edge.i.i:                                  ; preds = %._crit_edge.i.i.loopexit, %.preheader.i.i
  %lc.0.lcssa.i.i = phi i32 [ 0, %.preheader.i.i ], [ %lc.0..i.i.lcssa, %._crit_edge.i.i.loopexit ]
  %i.1.lcssa.i.i = phi i32 [ %i.09.i.i, %.preheader.i.i ], [ %.lcssa65, %._crit_edge.i.i.loopexit ]
  %117 = getelementptr inbounds [27 x i32], [27 x i32]* %nums.i, i64 0, i64 %indvars.iv10.i.i
  %118 = load i32, i32* %117, align 4, !tbaa !38
  %119 = add nsw i32 %118, %lc.0.lcssa.i.i
  store i32 %119, i32* %117, align 4, !tbaa !38
  %120 = add nsw i32 %lc.0.lcssa.i.i, %ause.08.i.i
  %indvars.iv.next11.i.i = add nuw nsw i64 %indvars.iv10.i.i, 1
  %121 = shl nsw i32 %ttlg.07.i.i, 1
  %122 = icmp slt i64 %indvars.iv.next11.i.i, 27
  br i1 %122, label %102, label %numusearray.exit.i

numusearray.exit.i:                               ; preds = %._crit_edge.i.i, %104
  %ause.0.lcssa.i.i = phi i32 [ %ause.08.i.i, %104 ], [ %120, %._crit_edge.i.i ]
  %123 = getelementptr inbounds %struct.Table, %struct.Table* %t, i64 0, i32 4
  %124 = load i8, i8* %123, align 1, !tbaa !210
  %125 = zext i8 %124 to i32
  %126 = shl i32 1, %125
  br label %.outer.i.i

.outer.i.i:                                       ; preds = %countint.exit.i.i, %numusearray.exit.i
  %ause.0.ph.i.i = phi i32 [ %156, %countint.exit.i.i ], [ 0, %numusearray.exit.i ]
  %i.0.ph.i.i = phi i32 [ %.lcssa62, %countint.exit.i.i ], [ %126, %numusearray.exit.i ]
  %totaluse.0.ph.i.i = phi i32 [ %157, %countint.exit.i.i ], [ 0, %numusearray.exit.i ]
  %127 = sext i32 %i.0.ph.i.i to i64
  br label %128

; <label>:128                                     ; preds = %132, %.outer.i.i
  %indvars.iv = phi i64 [ %indvars.iv.next, %132 ], [ %127, %.outer.i.i ]
  %i.0.i.i = phi i32 [ %129, %132 ], [ %i.0.ph.i.i, %.outer.i.i ]
  %129 = add nsw i32 %i.0.i.i, -1
  %130 = trunc i64 %indvars.iv to i32
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %numusehash.exit.i, label %132

; <label>:132                                     ; preds = %128
  %133 = sext i32 %129 to i64
  %134 = load %struct.Node*, %struct.Node** %89, align 8, !tbaa !211
  %135 = getelementptr inbounds %struct.Node, %struct.Node* %134, i64 %133, i32 0, i32 1
  %136 = load i32, i32* %135, align 4, !tbaa !10
  %137 = icmp eq i32 %136, 0
  %indvars.iv.next = add nsw i64 %indvars.iv, -1
  br i1 %137, label %128, label %138

; <label>:138                                     ; preds = %132
  %.lcssa64 = phi %struct.Node* [ %134, %132 ]
  %.lcssa63 = phi i64 [ %133, %132 ]
  %.lcssa62 = phi i32 [ %129, %132 ]
  %139 = getelementptr inbounds %struct.Node, %struct.Node* %.lcssa64, i64 %.lcssa63, i32 1, i32 0, i32 1
  %140 = load i32, i32* %139, align 4, !tbaa !10
  %141 = icmp eq i32 %140, 3
  br i1 %141, label %142, label %countint.exit.i.i

; <label>:142                                     ; preds = %138
  %143 = getelementptr inbounds %struct.Node, %struct.Node* %.lcssa64, i64 %.lcssa63, i32 1
  %144 = bitcast %union.TKey* %143 to double*
  %145 = load double, double* %144, align 8, !tbaa !36
  %146 = fptosi double %145 to i32
  %147 = sitofp i32 %146 to double
  %not..i.i.i.i = fcmp oeq double %147, %145
  %.off.i.i.i = add i32 %146, -1
  %148 = icmp ult i32 %.off.i.i.i, 67108864
  %or.cond.i.i.i = and i1 %not..i.i.i.i, %148
  br i1 %or.cond.i.i.i, label %149, label %countint.exit.i.i

; <label>:149                                     ; preds = %142
  %150 = tail call i32 @luaO_log2(i32 %.off.i.i.i) #1
  %151 = add nsw i32 %150, 1
  %152 = sext i32 %151 to i64
  %153 = getelementptr inbounds [27 x i32], [27 x i32]* %nums.i, i64 0, i64 %152
  %154 = load i32, i32* %153, align 4, !tbaa !38
  %155 = add nsw i32 %154, 1
  store i32 %155, i32* %153, align 4, !tbaa !38
  br label %countint.exit.i.i

countint.exit.i.i:                                ; preds = %149, %142, %138
  %.0.i.i.i = phi i32 [ 1, %149 ], [ 0, %138 ], [ 0, %142 ]
  %156 = add nsw i32 %.0.i.i.i, %ause.0.ph.i.i
  %157 = add nuw nsw i32 %totaluse.0.ph.i.i, 1
  br label %.outer.i.i

numusehash.exit.i:                                ; preds = %128
  %totaluse.0.ph.i.i.lcssa = phi i32 [ %totaluse.0.ph.i.i, %128 ]
  %ause.0.ph.i.i.lcssa = phi i32 [ %ause.0.ph.i.i, %128 ]
  %158 = add nsw i32 %ause.0.ph.i.i.lcssa, %ause.0.lcssa.i.i
  %159 = load i32, i32* %2, align 4, !tbaa !10
  %160 = icmp eq i32 %159, 3
  br i1 %160, label %161, label %countint.exit.i

; <label>:161                                     ; preds = %numusehash.exit.i
  %162 = bitcast %struct.lua_TValue* %key to double*
  %163 = load double, double* %162, align 8, !tbaa !36
  %164 = fptosi double %163 to i32
  %165 = sitofp i32 %164 to double
  %not..i.i.i = fcmp oeq double %165, %163
  %.off.i.i = add i32 %164, -1
  %166 = icmp ult i32 %.off.i.i, 67108864
  %or.cond.i.i = and i1 %not..i.i.i, %166
  br i1 %or.cond.i.i, label %167, label %countint.exit.i

; <label>:167                                     ; preds = %161
  %168 = tail call i32 @luaO_log2(i32 %.off.i.i) #1
  %169 = add nsw i32 %168, 1
  %170 = sext i32 %169 to i64
  %171 = getelementptr inbounds [27 x i32], [27 x i32]* %nums.i, i64 0, i64 %170
  %172 = load i32, i32* %171, align 4, !tbaa !38
  %173 = add nsw i32 %172, 1
  store i32 %173, i32* %171, align 4, !tbaa !38
  br label %countint.exit.i

countint.exit.i:                                  ; preds = %167, %161, %numusehash.exit.i
  %.0.i.i = phi i32 [ 1, %167 ], [ 0, %numusehash.exit.i ], [ 0, %161 ]
  %174 = add nsw i32 %158, %.0.i.i
  %175 = icmp sgt i32 %174, 0
  br i1 %175, label %.lr.ph.i.4.i.preheader, label %rehash.exit

.lr.ph.i.4.i.preheader:                           ; preds = %countint.exit.i
  br label %.lr.ph.i.4.i

.lr.ph.i.4.i:                                     ; preds = %.lr.ph.i.4.i.preheader, %185
  %indvars.iv.i.3.i = phi i64 [ %indvars.iv.next.i.5.i, %185 ], [ 0, %.lr.ph.i.4.i.preheader ]
  %176 = phi i32 [ %twotoi.02.i.i, %185 ], [ 0, %.lr.ph.i.4.i.preheader ]
  %n.05.i.i = phi i32 [ %n.1.i.i, %185 ], [ 0, %.lr.ph.i.4.i.preheader ]
  %na.04.i.i = phi i32 [ %na.1.i.i, %185 ], [ 0, %.lr.ph.i.4.i.preheader ]
  %a.03.i.i = phi i32 [ %a.1.i.i, %185 ], [ 0, %.lr.ph.i.4.i.preheader ]
  %twotoi.02.i.i = phi i32 [ %186, %185 ], [ 1, %.lr.ph.i.4.i.preheader ]
  %177 = getelementptr inbounds [27 x i32], [27 x i32]* %nums.i, i64 0, i64 %indvars.iv.i.3.i
  %178 = load i32, i32* %177, align 4, !tbaa !38
  %179 = icmp sgt i32 %178, 0
  br i1 %179, label %180, label %183

; <label>:180                                     ; preds = %.lr.ph.i.4.i
  %181 = add nsw i32 %178, %a.03.i.i
  %182 = icmp sgt i32 %181, %176
  %.na.0.i.i = select i1 %182, i32 %181, i32 %na.04.i.i
  %twotoi.0.n.0.i.i = select i1 %182, i32 %twotoi.02.i.i, i32 %n.05.i.i
  br label %183

; <label>:183                                     ; preds = %180, %.lr.ph.i.4.i
  %a.1.i.i = phi i32 [ %a.03.i.i, %.lr.ph.i.4.i ], [ %181, %180 ]
  %na.1.i.i = phi i32 [ %na.04.i.i, %.lr.ph.i.4.i ], [ %.na.0.i.i, %180 ]
  %n.1.i.i = phi i32 [ %n.05.i.i, %.lr.ph.i.4.i ], [ %twotoi.0.n.0.i.i, %180 ]
  %184 = icmp eq i32 %a.1.i.i, %174
  br i1 %184, label %rehash.exit.loopexit, label %185

; <label>:185                                     ; preds = %183
  %indvars.iv.next.i.5.i = add nuw nsw i64 %indvars.iv.i.3.i, 1
  %186 = shl nsw i32 %twotoi.02.i.i, 1
  %187 = icmp slt i32 %twotoi.02.i.i, %174
  br i1 %187, label %.lr.ph.i.4.i, label %rehash.exit.loopexit

rehash.exit.loopexit:                             ; preds = %185, %183
  %n.1.i.i.lcssa = phi i32 [ %n.1.i.i, %185 ], [ %n.1.i.i, %183 ]
  %na.1.i.i.lcssa = phi i32 [ %na.1.i.i, %185 ], [ %na.1.i.i, %183 ]
  br label %rehash.exit

rehash.exit:                                      ; preds = %rehash.exit.loopexit, %countint.exit.i
  %na.2.i.i = phi i32 [ 0, %countint.exit.i ], [ %na.1.i.i.lcssa, %rehash.exit.loopexit ]
  %n.2.i.i = phi i32 [ 0, %countint.exit.i ], [ %n.1.i.i.lcssa, %rehash.exit.loopexit ]
  %188 = add i32 %ause.0.lcssa.i.i, 1
  %189 = add i32 %188, %totaluse.0.ph.i.i.lcssa
  %190 = sub i32 %189, %na.2.i.i
  tail call fastcc void @resize(%struct.lua_State* %L, %struct.Table* %t, i32 %n.2.i.i, i32 %190) #1
  call void @llvm.lifetime.end(i64 108, i8* %1) #1
  %191 = tail call %struct.lua_TValue* @luaH_get(%struct.Table* %t, %struct.lua_TValue* %key) #1
  %192 = getelementptr inbounds %struct.Table, %struct.Table* %t, i64 0, i32 3
  store i8 0, i8* %192, align 1, !tbaa !187
  %193 = icmp eq %struct.lua_TValue* %191, bitcast (%struct.lua_TValue.218* @luaO_nilobject_ to %struct.lua_TValue*)
  br i1 %193, label %194, label %luaH_set.exit

; <label>:194                                     ; preds = %rehash.exit
  %195 = load i32, i32* %2, align 4, !tbaa !10
  switch i32 %195, label %202 [
    i32 0, label %196
    i32 3, label %197
  ]

; <label>:196                                     ; preds = %194
  tail call void (%struct.lua_State*, i8*, ...) @luaG_runerror(%struct.lua_State* %L, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.608, i64 0, i64 0)) #1
  br label %202

; <label>:197                                     ; preds = %194
  %198 = bitcast %struct.lua_TValue* %key to double*
  %199 = load double, double* %198, align 8, !tbaa !36
  %200 = fcmp ord double %199, 0.000000e+00
  br i1 %200, label %202, label %201

; <label>:201                                     ; preds = %197
  tail call void (%struct.lua_State*, i8*, ...) @luaG_runerror(%struct.lua_State* %L, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1.609, i64 0, i64 0)) #1
  br label %202

; <label>:202                                     ; preds = %201, %197, %196, %194
  %203 = tail call fastcc %struct.lua_TValue* @newkey(%struct.lua_State* %L, %struct.Table* %t, %struct.lua_TValue* %key) #1
  br label %luaH_set.exit

; <label>:204                                     ; preds = %94
  %.lcssa69 = phi %struct.Node* [ %92, %94 ]
  %.lcssa67 = phi %struct.Node* [ %91, %94 ]
  store %struct.Node* %.lcssa69, %struct.Node** %88, align 8, !tbaa !293
  %205 = getelementptr inbounds %struct.Node, %struct.Node* %.0.i, i64 0, i32 1
  %206 = getelementptr inbounds %struct.Node, %struct.Node* %.0.i, i64 0, i32 1, i32 0, i32 1
  %207 = load i32, i32* %206, align 4, !tbaa !10
  switch i32 %207, label %263 [
    i32 3, label %208
    i32 4, label %226
    i32 1, label %239
    i32 2, label %250
  ]

; <label>:208                                     ; preds = %204
  %209 = bitcast %union.TKey* %205 to double*
  %210 = load double, double* %209, align 8, !tbaa !36
  %211 = fcmp oeq double %210, 0.000000e+00
  br i1 %211, label %mainposition.exit5, label %212

; <label>:212                                     ; preds = %208
  %213 = bitcast double %210 to i64
  %214 = lshr i64 %213, 32
  %215 = trunc i64 %214 to i32
  %trunc.i.8 = trunc i64 %213 to i32
  %216 = add i32 %215, %trunc.i.8
  %217 = getelementptr inbounds %struct.Table, %struct.Table* %t, i64 0, i32 4
  %218 = load i8, i8* %217, align 1, !tbaa !210
  %219 = zext i8 %218 to i32
  %220 = shl i32 1, %219
  %221 = add nsw i32 %220, -1
  %222 = or i32 %221, 1
  %223 = urem i32 %216, %222
  %224 = zext i32 %223 to i64
  %225 = getelementptr inbounds %struct.Node, %struct.Node* %82, i64 %224
  br label %mainposition.exit5

; <label>:226                                     ; preds = %204
  %227 = bitcast %union.TKey* %205 to %struct.anon.1**
  %228 = load %struct.anon.1*, %struct.anon.1** %227, align 8, !tbaa !25
  %229 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %228, i64 0, i32 4
  %230 = load i32, i32* %229, align 4, !tbaa !277
  %231 = getelementptr inbounds %struct.Table, %struct.Table* %t, i64 0, i32 4
  %232 = load i8, i8* %231, align 1, !tbaa !210
  %233 = zext i8 %232 to i32
  %234 = shl i32 1, %233
  %235 = add nsw i32 %234, -1
  %236 = and i32 %235, %230
  %237 = sext i32 %236 to i64
  %238 = getelementptr inbounds %struct.Node, %struct.Node* %82, i64 %237
  br label %mainposition.exit5

; <label>:239                                     ; preds = %204
  %240 = bitcast %union.TKey* %205 to i32*
  %241 = load i32, i32* %240, align 4, !tbaa !38
  %242 = getelementptr inbounds %struct.Table, %struct.Table* %t, i64 0, i32 4
  %243 = load i8, i8* %242, align 1, !tbaa !210
  %244 = zext i8 %243 to i32
  %245 = shl i32 1, %244
  %246 = add nsw i32 %245, -1
  %247 = and i32 %246, %241
  %248 = sext i32 %247 to i64
  %249 = getelementptr inbounds %struct.Node, %struct.Node* %82, i64 %248
  br label %mainposition.exit5

; <label>:250                                     ; preds = %204
  %251 = bitcast %union.TKey* %205 to i64*
  %252 = load i64, i64* %251, align 8, !tbaa !25
  %253 = trunc i64 %252 to i32
  %254 = getelementptr inbounds %struct.Table, %struct.Table* %t, i64 0, i32 4
  %255 = load i8, i8* %254, align 1, !tbaa !210
  %256 = zext i8 %255 to i32
  %257 = shl i32 1, %256
  %258 = add nsw i32 %257, -1
  %259 = or i32 %258, 1
  %260 = urem i32 %253, %259
  %261 = zext i32 %260 to i64
  %262 = getelementptr inbounds %struct.Node, %struct.Node* %82, i64 %261
  br label %mainposition.exit5

; <label>:263                                     ; preds = %204
  %264 = bitcast %union.TKey* %205 to i64*
  %265 = load i64, i64* %264, align 8, !tbaa !25
  %266 = trunc i64 %265 to i32
  %267 = getelementptr inbounds %struct.Table, %struct.Table* %t, i64 0, i32 4
  %268 = load i8, i8* %267, align 1, !tbaa !210
  %269 = zext i8 %268 to i32
  %270 = shl i32 1, %269
  %271 = add nsw i32 %270, -1
  %272 = or i32 %271, 1
  %273 = urem i32 %266, %272
  %274 = zext i32 %273 to i64
  %275 = getelementptr inbounds %struct.Node, %struct.Node* %82, i64 %274
  br label %mainposition.exit5

mainposition.exit5:                               ; preds = %208, %212, %226, %239, %250, %263
  %.0.i.4 = phi %struct.Node* [ %275, %263 ], [ %262, %250 ], [ %249, %239 ], [ %238, %226 ], [ %225, %212 ], [ %82, %208 ]
  %276 = icmp eq %struct.Node* %.0.i.4, %.0.i
  br i1 %276, label %284, label %.preheader.preheader

.preheader.preheader:                             ; preds = %mainposition.exit5
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %.preheader
  %othern.0 = phi %struct.Node* [ %278, %.preheader ], [ %.0.i.4, %.preheader.preheader ]
  %277 = getelementptr inbounds %struct.Node, %struct.Node* %othern.0, i64 0, i32 1, i32 0, i32 2
  %278 = load %struct.Node*, %struct.Node** %277, align 8, !tbaa !290
  %279 = icmp eq %struct.Node* %278, %.0.i
  br i1 %279, label %280, label %.preheader

; <label>:280                                     ; preds = %.preheader
  %.lcssa = phi %struct.Node** [ %277, %.preheader ]
  store %struct.Node* %.lcssa69, %struct.Node** %.lcssa, align 8, !tbaa !290
  %281 = bitcast %struct.Node* %.lcssa69 to i8*
  %282 = bitcast %struct.Node* %.0.i to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %281, i8* %282, i64 40, i32 8, i1 false), !tbaa.struct !294
  %283 = getelementptr inbounds %struct.Node, %struct.Node* %.0.i, i64 0, i32 1, i32 0, i32 2
  store %struct.Node* null, %struct.Node** %283, align 8, !tbaa !290
  store i32 0, i32* %83, align 4, !tbaa !10
  br label %luaH_set.exit.thread

; <label>:284                                     ; preds = %mainposition.exit5
  %285 = getelementptr inbounds %struct.Node, %struct.Node* %.0.i, i64 0, i32 1, i32 0, i32 2
  %286 = bitcast %struct.Node** %285 to i64*
  %287 = load i64, i64* %286, align 8, !tbaa !290
  %288 = getelementptr inbounds %struct.Node, %struct.Node* %.lcssa67, i64 -1, i32 1, i32 0, i32 2
  %289 = bitcast %struct.Node** %288 to i64*
  store i64 %287, i64* %289, align 8, !tbaa !290
  store %struct.Node* %.lcssa69, %struct.Node** %285, align 8, !tbaa !290
  br label %luaH_set.exit.thread

luaH_set.exit.thread:                             ; preds = %280, %284, %mainposition.exit
  %mp.2 = phi %struct.Node* [ %.0.i, %mainposition.exit ], [ %.lcssa69, %284 ], [ %.0.i, %280 ]
  %290 = getelementptr inbounds %struct.Node, %struct.Node* %mp.2, i64 0, i32 1, i32 0
  %291 = bitcast %struct.lua_TValue* %key to i64*
  %292 = bitcast %struct.anon.0* %290 to i64*
  %293 = load i64, i64* %291, align 8
  store i64 %293, i64* %292, align 8
  %294 = load i32, i32* %2, align 4, !tbaa !10
  %295 = getelementptr inbounds %struct.Node, %struct.Node* %mp.2, i64 0, i32 1, i32 0, i32 1
  store i32 %294, i32* %295, align 4, !tbaa !212
  %296 = icmp sgt i32 %294, 3
  br i1 %296, label %297, label %310

; <label>:297                                     ; preds = %luaH_set.exit.thread
  %298 = bitcast %struct.lua_TValue* %key to %struct.GCheader**
  %299 = load %struct.GCheader*, %struct.GCheader** %298, align 8, !tbaa !25
  %300 = getelementptr inbounds %struct.GCheader, %struct.GCheader* %299, i64 0, i32 2
  %301 = load i8, i8* %300, align 1, !tbaa !33
  %302 = and i8 %301, 3
  %303 = icmp eq i8 %302, 0
  br i1 %303, label %310, label %304

; <label>:304                                     ; preds = %297
  %305 = getelementptr inbounds %struct.Table, %struct.Table* %t, i64 0, i32 2
  %306 = load i8, i8* %305, align 1, !tbaa !33
  %307 = and i8 %306, 4
  %308 = icmp eq i8 %307, 0
  br i1 %308, label %310, label %309

; <label>:309                                     ; preds = %304
  tail call void @luaC_barrierback(%struct.lua_State* %L, %struct.Table* %t) #1
  br label %310

; <label>:310                                     ; preds = %304, %297, %309, %luaH_set.exit.thread
  %311 = getelementptr inbounds %struct.Node, %struct.Node* %mp.2, i64 0, i32 0
  br label %luaH_set.exit

luaH_set.exit:                                    ; preds = %rehash.exit, %202, %310
  %.1 = phi %struct.lua_TValue* [ %311, %310 ], [ %203, %202 ], [ %191, %rehash.exit ]
  ret %struct.lua_TValue* %.1
}

; Function Attrs: nounwind uwtable
define i32 @luaopen_table(%struct.lua_State* %L) #0 {
  tail call void @luaL_register(%struct.lua_State* %L, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.613, i64 0, i64 0), %struct.luaL_Reg* getelementptr inbounds ([10 x %struct.luaL_Reg], [10 x %struct.luaL_Reg]* @tab_funcs, i64 0, i64 0)) #1
  ret i32 1
}

; Function Attrs: nounwind uwtable
define internal i32 @tconcat(%struct.lua_State* %L) #0 {
  %b = alloca %struct.luaL_Buffer, align 8
  %lsep = alloca i64, align 8
  %1 = bitcast %struct.luaL_Buffer* %b to i8*
  call void @llvm.lifetime.start(i64 8216, i8* %1) #1
  %2 = bitcast i64* %lsep to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2) #1
  %3 = call i8* @luaL_optlstring(%struct.lua_State* %L, i32 2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.10.623, i64 0, i64 0), i64* nonnull %lsep) #1
  call void @luaL_checktype(%struct.lua_State* %L, i32 1, i32 5) #1
  %4 = call i64 @luaL_optinteger(%struct.lua_State* %L, i32 3, i64 1) #1
  %5 = trunc i64 %4 to i32
  %6 = call i32 @lua_type(%struct.lua_State* %L, i32 4) #1
  %7 = icmp slt i32 %6, 1
  br i1 %7, label %8, label %10

; <label>:8                                       ; preds = %0
  %9 = call i64 @lua_objlen(%struct.lua_State* %L, i32 1) #1
  br label %12

; <label>:10                                      ; preds = %0
  %11 = call i64 @luaL_checkinteger(%struct.lua_State* %L, i32 4) #1
  br label %12

; <label>:12                                      ; preds = %10, %8
  %.sink = phi i64 [ %9, %8 ], [ %11, %10 ]
  %13 = trunc i64 %.sink to i32
  call void @luaL_buffinit(%struct.lua_State* %L, %struct.luaL_Buffer* nonnull %b) #1
  %14 = icmp slt i32 %5, %13
  br i1 %14, label %.lr.ph.preheader, label %._crit_edge

.lr.ph.preheader:                                 ; preds = %12
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %addfield.exit
  %i.02 = phi i32 [ %22, %addfield.exit ], [ %5, %.lr.ph.preheader ]
  call void @lua_rawgeti(%struct.lua_State* %L, i32 1, i32 %i.02) #1
  %15 = call i32 @lua_isstring(%struct.lua_State* %L, i32 -1) #1
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %addfield.exit

; <label>:17                                      ; preds = %.lr.ph
  %18 = call i32 @lua_type(%struct.lua_State* %L, i32 -1) #1
  %19 = call i8* @lua_typename(%struct.lua_State* %L, i32 %18) #1
  %20 = call i32 (%struct.lua_State*, i8*, ...) @luaL_error(%struct.lua_State* %L, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.11.627, i64 0, i64 0), i8* %19, i32 %i.02) #1
  br label %addfield.exit

addfield.exit:                                    ; preds = %.lr.ph, %17
  call void @luaL_addvalue(%struct.luaL_Buffer* nonnull %b) #1
  %21 = load i64, i64* %lsep, align 8, !tbaa !39
  call void @luaL_addlstring(%struct.luaL_Buffer* nonnull %b, i8* %3, i64 %21) #1
  %22 = add nsw i32 %i.02, 1
  %exitcond = icmp eq i32 %22, %13
  br i1 %exitcond, label %._crit_edge.thread.loopexit, label %.lr.ph

._crit_edge:                                      ; preds = %12
  %23 = icmp eq i32 %5, %13
  br i1 %23, label %._crit_edge.thread, label %30

._crit_edge.thread.loopexit:                      ; preds = %addfield.exit
  br label %._crit_edge.thread

._crit_edge.thread:                               ; preds = %._crit_edge.thread.loopexit, %._crit_edge
  call void @lua_rawgeti(%struct.lua_State* %L, i32 1, i32 %13) #1
  %24 = call i32 @lua_isstring(%struct.lua_State* %L, i32 -1) #1
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %addfield.exit1

; <label>:26                                      ; preds = %._crit_edge.thread
  %27 = call i32 @lua_type(%struct.lua_State* %L, i32 -1) #1
  %28 = call i8* @lua_typename(%struct.lua_State* %L, i32 %27) #1
  %29 = call i32 (%struct.lua_State*, i8*, ...) @luaL_error(%struct.lua_State* %L, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.11.627, i64 0, i64 0), i8* %28, i32 %13) #1
  br label %addfield.exit1

addfield.exit1:                                   ; preds = %._crit_edge.thread, %26
  call void @luaL_addvalue(%struct.luaL_Buffer* nonnull %b) #1
  br label %30

; <label>:30                                      ; preds = %addfield.exit1, %._crit_edge
  call void @luaL_pushresult(%struct.luaL_Buffer* nonnull %b) #1
  call void @llvm.lifetime.end(i64 8, i8* %2) #1
  call void @llvm.lifetime.end(i64 8216, i8* %1) #1
  ret i32 1
}

; Function Attrs: nounwind uwtable
define internal i32 @foreach(%struct.lua_State* %L) #0 {
  tail call void @luaL_checktype(%struct.lua_State* %L, i32 1, i32 5) #1
  tail call void @luaL_checktype(%struct.lua_State* %L, i32 2, i32 6) #1
  tail call void @lua_pushnil(%struct.lua_State* %L) #1
  %1 = tail call i32 @lua_next(%struct.lua_State* %L, i32 1) #1
  %2 = icmp eq i32 %1, 0
  br i1 %2, label %._crit_edge, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %0
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %5
  tail call void @lua_pushvalue(%struct.lua_State* %L, i32 2) #1
  tail call void @lua_pushvalue(%struct.lua_State* %L, i32 -3) #1
  tail call void @lua_pushvalue(%struct.lua_State* %L, i32 -3) #1
  tail call void @lua_call(%struct.lua_State* %L, i32 2, i32 1) #1
  %3 = tail call i32 @lua_type(%struct.lua_State* %L, i32 -1) #1
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %._crit_edge.loopexit

; <label>:5                                       ; preds = %.lr.ph
  tail call void @lua_settop(%struct.lua_State* %L, i32 -3) #1
  %6 = tail call i32 @lua_next(%struct.lua_State* %L, i32 1) #1
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %._crit_edge.loopexit, label %.lr.ph

._crit_edge.loopexit:                             ; preds = %5, %.lr.ph
  %.0.ph = phi i32 [ 1, %.lr.ph ], [ 0, %5 ]
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %0
  %.0 = phi i32 [ 0, %0 ], [ %.0.ph, %._crit_edge.loopexit ]
  ret i32 %.0
}

; Function Attrs: nounwind uwtable
define internal i32 @foreachi(%struct.lua_State* %L) #0 {
  tail call void @luaL_checktype(%struct.lua_State* %L, i32 1, i32 5) #1
  %1 = tail call i64 @lua_objlen(%struct.lua_State* %L, i32 1) #1
  %2 = trunc i64 %1 to i32
  tail call void @luaL_checktype(%struct.lua_State* %L, i32 2, i32 6) #1
  %3 = icmp slt i32 %2, 1
  br i1 %3, label %._crit_edge, label %.lr.ph

.lr.ph:                                           ; preds = %0
  %sext = shl i64 %1, 32
  %4 = ashr exact i64 %sext, 32
  br label %5

; <label>:5                                       ; preds = %9, %.lr.ph
  %indvars.iv = phi i64 [ %indvars.iv.next, %9 ], [ 1, %.lr.ph ]
  tail call void @lua_pushvalue(%struct.lua_State* %L, i32 2) #1
  tail call void @lua_pushinteger(%struct.lua_State* %L, i64 %indvars.iv) #1
  %6 = trunc i64 %indvars.iv to i32
  tail call void @lua_rawgeti(%struct.lua_State* %L, i32 1, i32 %6) #1
  tail call void @lua_call(%struct.lua_State* %L, i32 2, i32 1) #1
  %7 = tail call i32 @lua_type(%struct.lua_State* %L, i32 -1) #1
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %._crit_edge.loopexit

; <label>:9                                       ; preds = %5
  tail call void @lua_settop(%struct.lua_State* %L, i32 -2) #1
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %10 = icmp slt i64 %indvars.iv, %4
  br i1 %10, label %5, label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %9, %5
  %.0.ph = phi i32 [ 1, %5 ], [ 0, %9 ]
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %0
  %.0 = phi i32 [ 0, %0 ], [ %.0.ph, %._crit_edge.loopexit ]
  ret i32 %.0
}

; Function Attrs: nounwind uwtable
define internal i32 @getn(%struct.lua_State* %L) #0 {
  tail call void @luaL_checktype(%struct.lua_State* %L, i32 1, i32 5) #1
  %1 = tail call i64 @lua_objlen(%struct.lua_State* %L, i32 1) #1
  %sext = shl i64 %1, 32
  %2 = ashr exact i64 %sext, 32
  tail call void @lua_pushinteger(%struct.lua_State* %L, i64 %2) #1
  ret i32 1
}

; Function Attrs: nounwind uwtable
define internal i32 @maxn(%struct.lua_State* %L) #0 {
  tail call void @luaL_checktype(%struct.lua_State* %L, i32 1, i32 5) #1
  tail call void @lua_pushnil(%struct.lua_State* %L) #1
  br label %.outer

.outer:                                           ; preds = %7, %0
  %max.0.ph = phi double [ %max.1, %7 ], [ 0.000000e+00, %0 ]
  br label %1

; <label>:1                                       ; preds = %.outer, %4
  %2 = tail call i32 @lua_next(%struct.lua_State* %L, i32 1) #1
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %10, label %4

; <label>:4                                       ; preds = %1
  tail call void @lua_settop(%struct.lua_State* %L, i32 -2) #1
  %5 = tail call i32 @lua_type(%struct.lua_State* %L, i32 -1) #1
  %6 = icmp eq i32 %5, 3
  br i1 %6, label %7, label %1

; <label>:7                                       ; preds = %4
  %8 = tail call double @lua_tonumber(%struct.lua_State* %L, i32 -1) #1
  %9 = fcmp ogt double %8, %max.0.ph
  %max.1 = select i1 %9, double %8, double %max.0.ph
  br label %.outer

; <label>:10                                      ; preds = %1
  %max.0.ph.lcssa = phi double [ %max.0.ph, %1 ]
  tail call void @lua_pushnumber(%struct.lua_State* %L, double %max.0.ph.lcssa) #1
  ret i32 1
}

; Function Attrs: nounwind uwtable
define internal i32 @tinsert(%struct.lua_State* %L) #0 {
  tail call void @luaL_checktype(%struct.lua_State* %L, i32 1, i32 5) #1
  %1 = tail call i64 @lua_objlen(%struct.lua_State* %L, i32 1) #1
  %2 = trunc i64 %1 to i32
  %3 = add nsw i32 %2, 1
  %4 = tail call i32 @lua_gettop(%struct.lua_State* %L) #1
  switch i32 %4, label %12 [
    i32 2, label %.loopexit
    i32 3, label %5
  ]

; <label>:5                                       ; preds = %0
  %6 = tail call i64 @luaL_checkinteger(%struct.lua_State* %L, i32 2) #1
  %7 = trunc i64 %6 to i32
  %8 = icmp sgt i32 %7, %3
  %. = select i1 %8, i32 %7, i32 %3
  %9 = icmp sgt i32 %., %7
  br i1 %9, label %.lr.ph.preheader, label %.loopexit

.lr.ph.preheader:                                 ; preds = %5
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %.lr.ph
  %i.01 = phi i32 [ %10, %.lr.ph ], [ %., %.lr.ph.preheader ]
  %10 = add nsw i32 %i.01, -1
  tail call void @lua_rawgeti(%struct.lua_State* %L, i32 1, i32 %10) #1
  tail call void @lua_rawseti(%struct.lua_State* %L, i32 1, i32 %i.01) #1
  %11 = icmp sgt i32 %10, %7
  br i1 %11, label %.lr.ph, label %.loopexit.loopexit

; <label>:12                                      ; preds = %0
  %13 = tail call i32 (%struct.lua_State*, i8*, ...) @luaL_error(%struct.lua_State* %L, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.12.626, i64 0, i64 0)) #1
  br label %14

.loopexit.loopexit:                               ; preds = %.lr.ph
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %5, %0
  %pos.0 = phi i32 [ %3, %0 ], [ %7, %5 ], [ %7, %.loopexit.loopexit ]
  tail call void @lua_rawseti(%struct.lua_State* %L, i32 1, i32 %pos.0) #1
  br label %14

; <label>:14                                      ; preds = %.loopexit, %12
  %.0 = phi i32 [ %13, %12 ], [ 0, %.loopexit ]
  ret i32 %.0
}

; Function Attrs: nounwind uwtable
define internal i32 @tremove(%struct.lua_State* %L) #0 {
  tail call void @luaL_checktype(%struct.lua_State* %L, i32 1, i32 5) #1
  %1 = tail call i64 @lua_objlen(%struct.lua_State* %L, i32 1) #1
  %2 = trunc i64 %1 to i32
  %sext = shl i64 %1, 32
  %3 = ashr exact i64 %sext, 32
  %4 = tail call i64 @luaL_optinteger(%struct.lua_State* %L, i32 2, i64 %3) #1
  %5 = trunc i64 %4 to i32
  %6 = icmp slt i32 %5, 1
  %7 = icmp sgt i32 %5, %2
  %or.cond = or i1 %6, %7
  br i1 %or.cond, label %11, label %8

; <label>:8                                       ; preds = %0
  tail call void @lua_rawgeti(%struct.lua_State* %L, i32 1, i32 %5) #1
  %9 = icmp slt i32 %5, %2
  br i1 %9, label %.lr.ph.preheader, label %._crit_edge

.lr.ph.preheader:                                 ; preds = %8
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %.lr.ph
  %pos.01 = phi i32 [ %10, %.lr.ph ], [ %5, %.lr.ph.preheader ]
  %10 = add nsw i32 %pos.01, 1
  tail call void @lua_rawgeti(%struct.lua_State* %L, i32 1, i32 %10) #1
  tail call void @lua_rawseti(%struct.lua_State* %L, i32 1, i32 %pos.01) #1
  %exitcond = icmp eq i32 %10, %2
  br i1 %exitcond, label %._crit_edge.loopexit, label %.lr.ph

._crit_edge.loopexit:                             ; preds = %.lr.ph
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %8
  tail call void @lua_pushnil(%struct.lua_State* %L) #1
  tail call void @lua_rawseti(%struct.lua_State* %L, i32 1, i32 %2) #1
  br label %11

; <label>:11                                      ; preds = %0, %._crit_edge
  %.0 = phi i32 [ 1, %._crit_edge ], [ 0, %0 ]
  ret i32 %.0
}

; Function Attrs: nounwind uwtable
define internal i32 @setn(%struct.lua_State* %L) #0 {
  tail call void @luaL_checktype(%struct.lua_State* %L, i32 1, i32 5) #1
  %1 = tail call i32 (%struct.lua_State*, i8*, ...) @luaL_error(%struct.lua_State* %L, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.13.625, i64 0, i64 0)) #1
  tail call void @lua_pushvalue(%struct.lua_State* %L, i32 1) #1
  ret i32 1
}

; Function Attrs: nounwind uwtable
define internal i32 @sort(%struct.lua_State* %L) #0 {
  tail call void @luaL_checktype(%struct.lua_State* %L, i32 1, i32 5) #1
  %1 = tail call i64 @lua_objlen(%struct.lua_State* %L, i32 1) #1
  %2 = trunc i64 %1 to i32
  tail call void @luaL_checkstack(%struct.lua_State* %L, i32 40, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.10.623, i64 0, i64 0)) #1
  %3 = tail call i32 @lua_type(%struct.lua_State* %L, i32 2) #1
  %4 = icmp slt i32 %3, 1
  br i1 %4, label %6, label %5

; <label>:5                                       ; preds = %0
  tail call void @luaL_checktype(%struct.lua_State* %L, i32 2, i32 6) #1
  br label %6

; <label>:6                                       ; preds = %5, %0
  tail call void @lua_settop(%struct.lua_State* %L, i32 2) #1
  tail call fastcc void @auxsort(%struct.lua_State* %L, i32 1, i32 %2)
  ret i32 0
}

; Function Attrs: nounwind uwtable
define internal fastcc void @auxsort(%struct.lua_State* %L, i32 %l, i32 %u) #0 {
  %1 = icmp sgt i32 %u, %l
  br i1 %1, label %.lr.ph14.preheader, label %.thread

.lr.ph14.preheader:                               ; preds = %0
  br label %.lr.ph14

.lr.ph14:                                         ; preds = %.lr.ph14.preheader, %48
  %.0112 = phi i32 [ %.01.i.0, %48 ], [ %u, %.lr.ph14.preheader ]
  %.0211 = phi i32 [ %..02, %48 ], [ %l, %.lr.ph14.preheader ]
  tail call void @lua_rawgeti(%struct.lua_State* %L, i32 1, i32 %.0211) #1
  tail call void @lua_rawgeti(%struct.lua_State* %L, i32 1, i32 %.0112) #1
  %2 = tail call fastcc i32 @sort_comp(%struct.lua_State* %L, i32 -1, i32 -2)
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %5, label %4

; <label>:4                                       ; preds = %.lr.ph14
  tail call void @lua_rawseti(%struct.lua_State* %L, i32 1, i32 %.0211) #1
  tail call void @lua_rawseti(%struct.lua_State* %L, i32 1, i32 %.0112) #1
  br label %6

; <label>:5                                       ; preds = %.lr.ph14
  tail call void @lua_settop(%struct.lua_State* %L, i32 -3) #1
  br label %6

; <label>:6                                       ; preds = %5, %4
  %7 = sub nsw i32 %.0112, %.0211
  %8 = icmp eq i32 %7, 1
  br i1 %8, label %.thread.loopexit, label %9

; <label>:9                                       ; preds = %6
  %10 = add nsw i32 %.0112, %.0211
  %11 = sdiv i32 %10, 2
  tail call void @lua_rawgeti(%struct.lua_State* %L, i32 1, i32 %11) #1
  tail call void @lua_rawgeti(%struct.lua_State* %L, i32 1, i32 %.0211) #1
  %12 = tail call fastcc i32 @sort_comp(%struct.lua_State* %L, i32 -2, i32 -1)
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %15, label %14

; <label>:14                                      ; preds = %9
  tail call void @lua_rawseti(%struct.lua_State* %L, i32 1, i32 %11) #1
  tail call void @lua_rawseti(%struct.lua_State* %L, i32 1, i32 %.0211) #1
  br label %20

; <label>:15                                      ; preds = %9
  tail call void @lua_settop(%struct.lua_State* %L, i32 -2) #1
  tail call void @lua_rawgeti(%struct.lua_State* %L, i32 1, i32 %.0112) #1
  %16 = tail call fastcc i32 @sort_comp(%struct.lua_State* %L, i32 -1, i32 -2)
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %19, label %18

; <label>:18                                      ; preds = %15
  tail call void @lua_rawseti(%struct.lua_State* %L, i32 1, i32 %11) #1
  tail call void @lua_rawseti(%struct.lua_State* %L, i32 1, i32 %.0112) #1
  br label %20

; <label>:19                                      ; preds = %15
  tail call void @lua_settop(%struct.lua_State* %L, i32 -3) #1
  br label %20

; <label>:20                                      ; preds = %18, %19, %14
  %21 = icmp eq i32 %7, 2
  br i1 %21, label %.thread.loopexit, label %22

; <label>:22                                      ; preds = %20
  tail call void @lua_rawgeti(%struct.lua_State* %L, i32 1, i32 %11) #1
  tail call void @lua_pushvalue(%struct.lua_State* %L, i32 -1) #1
  %23 = add nsw i32 %.0112, -1
  tail call void @lua_rawgeti(%struct.lua_State* %L, i32 1, i32 %23) #1
  tail call void @lua_rawseti(%struct.lua_State* %L, i32 1, i32 %11) #1
  tail call void @lua_rawseti(%struct.lua_State* %L, i32 1, i32 %23) #1
  br label %.outer

.outer:                                           ; preds = %47, %22
  %i.0.ph = phi i32 [ %.lcssa, %47 ], [ %.0211, %22 ]
  %j.0.ph = phi i32 [ %.lcssa5, %47 ], [ %23, %22 ]
  %24 = add nsw i32 %i.0.ph, 1
  tail call void @lua_rawgeti(%struct.lua_State* %L, i32 1, i32 %24) #1
  %25 = tail call fastcc i32 @sort_comp(%struct.lua_State* %L, i32 -1, i32 -2)
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %.preheader, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %.outer
  br label %.lr.ph

.preheader.loopexit:                              ; preds = %34
  %.lcssa34 = phi i32 [ %35, %34 ]
  %.lcssa33 = phi i32 [ %30, %34 ]
  br label %.preheader

.preheader:                                       ; preds = %.preheader.loopexit, %.outer
  %.lcssa = phi i32 [ %24, %.outer ], [ %.lcssa34, %.preheader.loopexit ]
  %i.0.lcssa = phi i32 [ %i.0.ph, %.outer ], [ %.lcssa33, %.preheader.loopexit ]
  %27 = add nsw i32 %j.0.ph, -1
  tail call void @lua_rawgeti(%struct.lua_State* %L, i32 1, i32 %27) #1
  %28 = tail call fastcc i32 @sort_comp(%struct.lua_State* %L, i32 -3, i32 -1)
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %._crit_edge, label %.lr.ph8.preheader

.lr.ph8.preheader:                                ; preds = %.preheader
  br label %.lr.ph8

.lr.ph:                                           ; preds = %.lr.ph.preheader, %34
  %30 = phi i32 [ %35, %34 ], [ %24, %.lr.ph.preheader ]
  %31 = icmp slt i32 %.0112, %30
  br i1 %31, label %32, label %34

; <label>:32                                      ; preds = %.lr.ph
  %33 = tail call i32 (%struct.lua_State*, i8*, ...) @luaL_error(%struct.lua_State* %L, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.14.624, i64 0, i64 0)) #1
  br label %34

; <label>:34                                      ; preds = %32, %.lr.ph
  tail call void @lua_settop(%struct.lua_State* %L, i32 -2) #1
  %35 = add nsw i32 %30, 1
  tail call void @lua_rawgeti(%struct.lua_State* %L, i32 1, i32 %35) #1
  %36 = tail call fastcc i32 @sort_comp(%struct.lua_State* %L, i32 -1, i32 -2)
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %.preheader.loopexit, label %.lr.ph

.lr.ph8:                                          ; preds = %.lr.ph8.preheader, %42
  %38 = phi i32 [ %43, %42 ], [ %27, %.lr.ph8.preheader ]
  %j.17 = phi i32 [ %38, %42 ], [ %j.0.ph, %.lr.ph8.preheader ]
  %39 = icmp sgt i32 %j.17, %.0211
  br i1 %39, label %42, label %40

; <label>:40                                      ; preds = %.lr.ph8
  %41 = tail call i32 (%struct.lua_State*, i8*, ...) @luaL_error(%struct.lua_State* %L, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.14.624, i64 0, i64 0)) #1
  br label %42

; <label>:42                                      ; preds = %.lr.ph8, %40
  tail call void @lua_settop(%struct.lua_State* %L, i32 -2) #1
  %43 = add nsw i32 %38, -1
  tail call void @lua_rawgeti(%struct.lua_State* %L, i32 1, i32 %43) #1
  %44 = tail call fastcc i32 @sort_comp(%struct.lua_State* %L, i32 -3, i32 -1)
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %._crit_edge.loopexit, label %.lr.ph8

._crit_edge.loopexit:                             ; preds = %42
  %.lcssa36 = phi i32 [ %43, %42 ]
  %.lcssa35 = phi i32 [ %38, %42 ]
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %.preheader
  %.lcssa5 = phi i32 [ %27, %.preheader ], [ %.lcssa36, %._crit_edge.loopexit ]
  %j.1.lcssa = phi i32 [ %j.0.ph, %.preheader ], [ %.lcssa35, %._crit_edge.loopexit ]
  %46 = icmp sgt i32 %j.1.lcssa, %.lcssa
  br i1 %46, label %47, label %48

; <label>:47                                      ; preds = %._crit_edge
  tail call void @lua_rawseti(%struct.lua_State* %L, i32 1, i32 %.lcssa) #1
  tail call void @lua_rawseti(%struct.lua_State* %L, i32 1, i32 %.lcssa5) #1
  br label %.outer

; <label>:48                                      ; preds = %._crit_edge
  %i.0.lcssa.lcssa = phi i32 [ %i.0.lcssa, %._crit_edge ]
  %.lcssa.lcssa = phi i32 [ %.lcssa, %._crit_edge ]
  tail call void @lua_settop(%struct.lua_State* %L, i32 -4) #1
  tail call void @lua_rawgeti(%struct.lua_State* %L, i32 1, i32 %23) #1
  tail call void @lua_rawgeti(%struct.lua_State* %L, i32 1, i32 %.lcssa.lcssa) #1
  tail call void @lua_rawseti(%struct.lua_State* %L, i32 1, i32 %23) #1
  tail call void @lua_rawseti(%struct.lua_State* %L, i32 1, i32 %.lcssa.lcssa) #1
  %49 = sub nsw i32 %.lcssa.lcssa, %.0211
  %50 = sub nsw i32 %.0112, %.lcssa.lcssa
  %51 = icmp slt i32 %49, %50
  %52 = add nsw i32 %i.0.lcssa.lcssa, 2
  %..02 = select i1 %51, i32 %52, i32 %.0211
  %.01.i.0 = select i1 %51, i32 %.0112, i32 %i.0.lcssa.lcssa
  %i.0..01 = select i1 %51, i32 %i.0.lcssa.lcssa, i32 %.0112
  %.02. = select i1 %51, i32 %.0211, i32 %52
  tail call fastcc void @auxsort(%struct.lua_State* %L, i32 %.02., i32 %i.0..01)
  %53 = icmp sgt i32 %.01.i.0, %..02
  br i1 %53, label %.lr.ph14, label %.thread.loopexit

.thread.loopexit:                                 ; preds = %20, %6, %48
  br label %.thread

.thread:                                          ; preds = %.thread.loopexit, %0
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @sort_comp(%struct.lua_State* %L, i32 %a, i32 %b) #0 {
  %1 = tail call i32 @lua_type(%struct.lua_State* %L, i32 2) #1
  %2 = icmp eq i32 %1, 0
  br i1 %2, label %7, label %3

; <label>:3                                       ; preds = %0
  tail call void @lua_pushvalue(%struct.lua_State* %L, i32 2) #1
  %4 = add nsw i32 %a, -1
  tail call void @lua_pushvalue(%struct.lua_State* %L, i32 %4) #1
  %5 = add nsw i32 %b, -2
  tail call void @lua_pushvalue(%struct.lua_State* %L, i32 %5) #1
  tail call void @lua_call(%struct.lua_State* %L, i32 2, i32 1) #1
  %6 = tail call i32 @lua_toboolean(%struct.lua_State* %L, i32 -1) #1
  tail call void @lua_settop(%struct.lua_State* %L, i32 -2) #1
  br label %9

; <label>:7                                       ; preds = %0
  %8 = tail call i32 @lua_lessthan(%struct.lua_State* %L, i32 %a, i32 %b) #1
  br label %9

; <label>:9                                       ; preds = %7, %3
  %.0 = phi i32 [ %8, %7 ], [ %6, %3 ]
  ret i32 %.0
}

; Function Attrs: nounwind uwtable
define hidden void @luaT_init(%struct.lua_State* %L) #0 {
  %1 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 6
  br label %2

; <label>:2                                       ; preds = %2, %0
  %indvars.iv = phi i64 [ 0, %0 ], [ %indvars.iv.next, %2 ]
  %3 = getelementptr inbounds [17 x i8*], [17 x i8*]* @luaT_init.luaT_eventname, i64 0, i64 %indvars.iv
  %4 = load i8*, i8** %3, align 8, !tbaa !25
  %5 = tail call i64 @strlen(i8* %4) #11
  %6 = tail call %union.TString* @luaS_newlstr(%struct.lua_State* %L, i8* %4, i64 %5) #1
  %7 = load %struct.global_State*, %struct.global_State** %1, align 8, !tbaa !17
  %8 = getelementptr inbounds %struct.global_State, %struct.global_State* %7, i64 0, i32 24, i64 %indvars.iv
  store %union.TString* %6, %union.TString** %8, align 8, !tbaa !25
  %9 = load %struct.global_State*, %struct.global_State** %1, align 8, !tbaa !17
  %10 = getelementptr inbounds %struct.global_State, %struct.global_State* %9, i64 0, i32 24, i64 %indvars.iv
  %11 = bitcast %union.TString** %10 to %struct.anon.1**
  %12 = load %struct.anon.1*, %struct.anon.1** %11, align 8, !tbaa !25
  %13 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %12, i64 0, i32 2
  %14 = load i8, i8* %13, align 1, !tbaa !209
  %15 = or i8 %14, 32
  store i8 %15, i8* %13, align 1, !tbaa !209
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i64 %indvars.iv.next, 17
  br i1 %exitcond, label %16, label %2

; <label>:16                                      ; preds = %2
  ret void
}

; Function Attrs: nounwind uwtable
define hidden %struct.lua_TValue* @luaT_gettm(%struct.Table* %events, i32 %event, %union.TString* %ename) #0 {
  %1 = tail call %struct.lua_TValue* @luaH_getstr(%struct.Table* %events, %union.TString* %ename) #1
  %2 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %1, i64 0, i32 1
  %3 = load i32, i32* %2, align 4, !tbaa !10
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %12

; <label>:5                                       ; preds = %0
  %6 = shl i32 1, %event
  %7 = getelementptr inbounds %struct.Table, %struct.Table* %events, i64 0, i32 3
  %8 = load i8, i8* %7, align 1, !tbaa !187
  %9 = zext i8 %8 to i32
  %10 = or i32 %9, %6
  %11 = trunc i32 %10 to i8
  store i8 %11, i8* %7, align 1, !tbaa !187
  br label %12

; <label>:12                                      ; preds = %0, %5
  %.0 = phi %struct.lua_TValue* [ null, %5 ], [ %1, %0 ]
  ret %struct.lua_TValue* %.0
}

; Function Attrs: nounwind uwtable
define hidden %struct.lua_TValue* @luaT_gettmbyobj(%struct.lua_State* nocapture readonly %L, %struct.lua_TValue* nocapture readonly %o, i32 %event) #0 {
  %1 = getelementptr inbounds %struct.lua_TValue, %struct.lua_TValue* %o, i64 0, i32 1
  %2 = load i32, i32* %1, align 4, !tbaa !10
  switch i32 %2, label %11 [
    i32 5, label %3
    i32 7, label %7
  ]

; <label>:3                                       ; preds = %0
  %4 = bitcast %struct.lua_TValue* %o to %struct.Table**
  %5 = load %struct.Table*, %struct.Table** %4, align 8, !tbaa !25
  %6 = getelementptr inbounds %struct.Table, %struct.Table* %5, i64 0, i32 5
  br label %16

; <label>:7                                       ; preds = %0
  %8 = bitcast %struct.lua_TValue* %o to %struct.anon.2**
  %9 = load %struct.anon.2*, %struct.anon.2** %8, align 8, !tbaa !25
  %10 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i64 0, i32 3
  br label %16

; <label>:11                                      ; preds = %0
  %12 = sext i32 %2 to i64
  %13 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 6
  %14 = load %struct.global_State*, %struct.global_State** %13, align 8, !tbaa !17
  %15 = getelementptr inbounds %struct.global_State, %struct.global_State* %14, i64 0, i32 23, i64 %12
  br label %16

; <label>:16                                      ; preds = %11, %7, %3
  %mt.0.in = phi %struct.Table** [ %15, %11 ], [ %10, %7 ], [ %6, %3 ]
  %mt.0 = load %struct.Table*, %struct.Table** %mt.0.in, align 8
  %17 = icmp eq %struct.Table* %mt.0, null
  br i1 %17, label %25, label %18

; <label>:18                                      ; preds = %16
  %19 = zext i32 %event to i64
  %20 = getelementptr inbounds %struct.lua_State, %struct.lua_State* %L, i64 0, i32 6
  %21 = load %struct.global_State*, %struct.global_State** %20, align 8, !tbaa !17
  %22 = getelementptr inbounds %struct.global_State, %struct.global_State* %21, i64 0, i32 24, i64 %19
  %23 = load %union.TString*, %union.TString** %22, align 8, !tbaa !25
  %24 = tail call %struct.lua_TValue* @luaH_getstr(%struct.Table* %mt.0, %union.TString* %23) #1
  br label %25

; <label>:25                                      ; preds = %16, %18
  %26 = phi %struct.lua_TValue* [ %24, %18 ], [ bitcast (%struct.lua_TValue.218* @luaO_nilobject_ to %struct.lua_TValue*), %16 ]
  ret %struct.lua_TValue* %26
}

; Function Attrs: nounwind uwtable
define i32 @main(i32 %argc, i8** %argv) #0 {
  %s = alloca %struct.Smain, align 8
  %1 = bitcast %struct.Smain* %s to i8*
  call void @llvm.lifetime.start(i64 24, i8* %1) #1
  %2 = tail call %struct.lua_State* @luaL_newstate() #1
  %3 = icmp eq %struct.lua_State* %2, null
  br i1 %3, label %4, label %14

; <label>:4                                       ; preds = %0
  %5 = load i8*, i8** %argv, align 8, !tbaa !25
  %6 = icmp eq i8* %5, null
  br i1 %6, label %l_message.exit, label %7

; <label>:7                                       ; preds = %4
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !25
  %9 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2.663, i64 0, i64 0), i8* %5) #13
  br label %l_message.exit

l_message.exit:                                   ; preds = %4, %7
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !25
  %11 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %10, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3.664, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.665, i64 0, i64 0)) #13
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !25
  %13 = tail call i32 @fflush(%struct._IO_FILE* %12) #1
  br label %39

; <label>:14                                      ; preds = %0
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1.666, i64 0, i64 0), i8** %argv, align 8, !tbaa !25
  %15 = getelementptr inbounds %struct.Smain, %struct.Smain* %s, i64 0, i32 0
  store i32 %argc, i32* %15, align 8, !tbaa !295
  %16 = getelementptr inbounds %struct.Smain, %struct.Smain* %s, i64 0, i32 1
  store i8** %argv, i8*** %16, align 8, !tbaa !297
  %17 = call i32 @lua_cpcall(%struct.lua_State* %2, i32 (%struct.lua_State*)* nonnull @pmain, i8* %1) #1
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %report.exit, label %19

; <label>:19                                      ; preds = %14
  %20 = call i32 @lua_type(%struct.lua_State* %2, i32 -1) #1
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %report.exit, label %22

; <label>:22                                      ; preds = %19
  %23 = call i8* @lua_tolstring(%struct.lua_State* %2, i32 -1, i64* null) #1
  %24 = icmp eq i8* %23, null
  %..i = select i1 %24, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.27.667, i64 0, i64 0), i8* %23
  %25 = load i8*, i8** @progname, align 8, !tbaa !25
  %26 = icmp eq i8* %25, null
  br i1 %26, label %l_message.exit1, label %27

; <label>:27                                      ; preds = %22
  %28 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !25
  %29 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %28, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2.663, i64 0, i64 0), i8* %25) #13
  br label %l_message.exit1

l_message.exit1:                                  ; preds = %22, %27
  %30 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !25
  %31 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %30, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3.664, i64 0, i64 0), i8* %..i) #13
  %32 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !25
  %33 = call i32 @fflush(%struct._IO_FILE* %32) #1
  call void @lua_settop(%struct.lua_State* %2, i32 -2) #1
  br label %report.exit

report.exit:                                      ; preds = %14, %19, %l_message.exit1
  call void @lua_close(%struct.lua_State* %2) #1
  %34 = getelementptr inbounds %struct.Smain, %struct.Smain* %s, i64 0, i32 2
  %35 = load i32, i32* %34, align 8, !tbaa !298
  %36 = or i32 %35, %17
  %37 = icmp ne i32 %36, 0
  %38 = zext i1 %37 to i32
  br label %39

; <label>:39                                      ; preds = %report.exit, %l_message.exit
  %.0 = phi i32 [ 1, %l_message.exit ], [ %38, %report.exit ]
  call void @llvm.lifetime.end(i64 24, i8* %1) #1
  ret i32 %.0
}

; Function Attrs: nounwind
declare i32 @isatty(i32) #5

; Function Attrs: nounwind
declare void (i32)* @signal(i32, void (i32)*) #5

; Function Attrs: nounwind uwtable
define internal i32 @pmain(%struct.lua_State* %L) #0 {
  %1 = tail call i8* @lua_touserdata(%struct.lua_State* %L, i32 1) #1
  %2 = getelementptr inbounds i8, i8* %1, i64 8
  %3 = bitcast i8* %2 to i8***
  %4 = load i8**, i8*** %3, align 8, !tbaa !297
  store %struct.lua_State* %L, %struct.lua_State** @globalL, align 8, !tbaa !25
  %5 = load i8*, i8** %4, align 8, !tbaa !25
  %6 = icmp eq i8* %5, null
  br i1 %6, label %11, label %7

; <label>:7                                       ; preds = %0
  %8 = load i8, i8* %5, align 1, !tbaa !76
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %11, label %10

; <label>:10                                      ; preds = %7
  store i8* %5, i8** @progname, align 8, !tbaa !25
  br label %11

; <label>:11                                      ; preds = %7, %0, %10
  %12 = tail call i32 @lua_gc(%struct.lua_State* %L, i32 0, i32 0) #1
  tail call void @luaL_openlibs(%struct.lua_State* %L) #1
  %13 = tail call i32 @lua_gc(%struct.lua_State* %L, i32 1, i32 0) #1
  %14 = tail call i8* @getenv(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4.668, i64 0, i64 0)) #1
  %15 = icmp eq i8* %14, null
  br i1 %15, label %handle_luainit.exit.thread, label %16

; <label>:16                                      ; preds = %11
  %17 = load i8, i8* %14, align 1, !tbaa !76
  %18 = icmp eq i8 %17, 64
  br i1 %18, label %19, label %41

; <label>:19                                      ; preds = %16
  %20 = getelementptr inbounds i8, i8* %14, i64 1
  %21 = tail call i32 @luaL_loadfile(%struct.lua_State* %L, i8* %20) #1
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %dofile.exit.i, label %dofile.exit.thread.i

dofile.exit.i:                                    ; preds = %19
  %23 = tail call fastcc i32 @docall(%struct.lua_State* %L, i32 0, i32 1) #1
  %24 = icmp ne i32 %23, 0
  %25 = zext i1 %24 to i32
  br i1 %24, label %dofile.exit.thread.i, label %handle_luainit.exit.thread

dofile.exit.thread.i:                             ; preds = %dofile.exit.i, %19
  %26 = phi i32 [ %25, %dofile.exit.i ], [ 1, %19 ]
  %27 = tail call i32 @lua_type(%struct.lua_State* %L, i32 -1) #1
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %handle_luainit.exit, label %29

; <label>:29                                      ; preds = %dofile.exit.thread.i
  %30 = tail call i8* @lua_tolstring(%struct.lua_State* %L, i32 -1, i64* null) #1
  %31 = icmp eq i8* %30, null
  %..i.i = select i1 %31, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.27.667, i64 0, i64 0), i8* %30
  %32 = load i8*, i8** @progname, align 8, !tbaa !25
  %33 = icmp eq i8* %32, null
  br i1 %33, label %l_message.exit.i, label %34

; <label>:34                                      ; preds = %29
  %35 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !25
  %36 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %35, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2.663, i64 0, i64 0), i8* %32) #13
  br label %l_message.exit.i

l_message.exit.i:                                 ; preds = %34, %29
  %37 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !25
  %38 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %37, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3.664, i64 0, i64 0), i8* %..i.i) #13
  %39 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !25
  %40 = tail call i32 @fflush(%struct._IO_FILE* %39) #1
  tail call void @lua_settop(%struct.lua_State* %L, i32 -2) #1
  br label %handle_luainit.exit

; <label>:41                                      ; preds = %16
  %42 = tail call i64 @strlen(i8* %14) #11
  %43 = tail call i32 @luaL_loadbuffer(%struct.lua_State* %L, i8* %14, i64 %42, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.5.669, i64 0, i64 0)) #1
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %dostring.exit.i, label %dostring.exit.thread.i

dostring.exit.i:                                  ; preds = %41
  %45 = tail call fastcc i32 @docall(%struct.lua_State* %L, i32 0, i32 1) #1
  %46 = icmp ne i32 %45, 0
  %47 = zext i1 %46 to i32
  br i1 %46, label %dostring.exit.thread.i, label %handle_luainit.exit.thread

dostring.exit.thread.i:                           ; preds = %dostring.exit.i, %41
  %48 = phi i32 [ %47, %dostring.exit.i ], [ 1, %41 ]
  %49 = tail call i32 @lua_type(%struct.lua_State* %L, i32 -1) #1
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %handle_luainit.exit, label %51

; <label>:51                                      ; preds = %dostring.exit.thread.i
  %52 = tail call i8* @lua_tolstring(%struct.lua_State* %L, i32 -1, i64* null) #1
  %53 = icmp eq i8* %52, null
  %..i.1.i = select i1 %53, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.27.667, i64 0, i64 0), i8* %52
  %54 = load i8*, i8** @progname, align 8, !tbaa !25
  %55 = icmp eq i8* %54, null
  br i1 %55, label %l_message.exit3.i, label %56

; <label>:56                                      ; preds = %51
  %57 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !25
  %58 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %57, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2.663, i64 0, i64 0), i8* %54) #13
  br label %l_message.exit3.i

l_message.exit3.i:                                ; preds = %56, %51
  %59 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !25
  %60 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %59, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3.664, i64 0, i64 0), i8* %..i.1.i) #13
  %61 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !25
  %62 = tail call i32 @fflush(%struct._IO_FILE* %61) #1
  tail call void @lua_settop(%struct.lua_State* %L, i32 -2) #1
  br label %handle_luainit.exit

handle_luainit.exit.thread:                       ; preds = %11, %dofile.exit.i, %dostring.exit.i
  %63 = getelementptr inbounds i8, i8* %1, i64 16
  %64 = bitcast i8* %63 to i32*
  store i32 0, i32* %64, align 4, !tbaa !298
  br label %68

handle_luainit.exit:                              ; preds = %dofile.exit.thread.i, %l_message.exit.i, %dostring.exit.thread.i, %l_message.exit3.i
  %.0.i = phi i32 [ %26, %dofile.exit.thread.i ], [ %26, %l_message.exit.i ], [ %48, %dostring.exit.thread.i ], [ %48, %l_message.exit3.i ]
  %65 = getelementptr inbounds i8, i8* %1, i64 16
  %66 = bitcast i8* %65 to i32*
  store i32 %.0.i, i32* %66, align 4, !tbaa !298
  %67 = icmp eq i32 %.0.i, 0
  br i1 %67, label %68, label %report.exit

; <label>:68                                      ; preds = %handle_luainit.exit.thread, %handle_luainit.exit
  %69 = phi i32* [ %64, %handle_luainit.exit.thread ], [ %66, %handle_luainit.exit ]
  %70 = getelementptr inbounds i8*, i8** %4, i64 1
  %71 = load i8*, i8** %70, align 8, !tbaa !25
  %72 = icmp eq i8* %71, null
  br i1 %72, label %.thread29, label %.lr.ph.i.preheader

.lr.ph.i.preheader:                               ; preds = %68
  br label %.lr.ph.i

.lr.ph.i:                                         ; preds = %.lr.ph.i.preheader, %.thread74
  %has_i.0 = phi i32 [ %has_i.2, %.thread74 ], [ 0, %.lr.ph.i.preheader ]
  %has_v.0 = phi i32 [ %has_v.1, %.thread74 ], [ 0, %.lr.ph.i.preheader ]
  %has_e.0 = phi i32 [ %has_e.2, %.thread74 ], [ 0, %.lr.ph.i.preheader ]
  %73 = phi i8* [ %110, %.thread74 ], [ %71, %.lr.ph.i.preheader ]
  %i.05.i = phi i32 [ %107, %.thread74 ], [ 1, %.lr.ph.i.preheader ]
  %74 = load i8, i8* %73, align 1, !tbaa !76
  %75 = icmp eq i8 %74, 45
  br i1 %75, label %76, label %collectargs.exit.loopexit

; <label>:76                                      ; preds = %.lr.ph.i
  %77 = getelementptr inbounds i8, i8* %73, i64 1
  %78 = load i8, i8* %77, align 1, !tbaa !76
  %79 = sext i8 %78 to i32
  switch i32 %79, label %collectargs.exit.thread.loopexit [
    i32 45, label %80
    i32 0, label %collectargs.exit.loopexit
    i32 105, label %90
    i32 118, label %94
    i32 101, label %96
    i32 108, label %97
  ]

; <label>:80                                      ; preds = %76
  %i.05.i.lcssa145 = phi i32 [ %i.05.i, %76 ]
  %.lcssa142 = phi i8* [ %73, %76 ]
  %has_e.0.lcssa138 = phi i32 [ %has_e.0, %76 ]
  %has_v.0.lcssa134 = phi i32 [ %has_v.0, %76 ]
  %has_i.0.lcssa130 = phi i32 [ %has_i.0, %76 ]
  %81 = getelementptr inbounds i8, i8* %.lcssa142, i64 2
  %82 = load i8, i8* %81, align 1, !tbaa !76
  %83 = icmp eq i8 %82, 0
  br i1 %83, label %84, label %collectargs.exit.thread

; <label>:84                                      ; preds = %80
  %85 = add nsw i32 %i.05.i.lcssa145, 1
  %86 = sext i32 %85 to i64
  %87 = getelementptr inbounds i8*, i8** %4, i64 %86
  %88 = load i8*, i8** %87, align 8, !tbaa !25
  %89 = icmp eq i8* %88, null
  br i1 %89, label %collectargs.exit.thread16, label %collectargs.exit

; <label>:90                                      ; preds = %76
  %91 = getelementptr inbounds i8, i8* %73, i64 2
  %92 = load i8, i8* %91, align 1, !tbaa !76
  %93 = icmp eq i8 %92, 0
  br i1 %93, label %.thread74, label %collectargs.exit.thread.loopexit

; <label>:94                                      ; preds = %76
  %.pre.i = getelementptr inbounds i8, i8* %73, i64 2
  %.pre = load i8, i8* %.pre.i, align 1, !tbaa !76
  %95 = icmp eq i8 %.pre, 0
  br i1 %95, label %.thread74, label %collectargs.exit.thread.loopexit

; <label>:96                                      ; preds = %76
  br label %97

; <label>:97                                      ; preds = %96, %76
  %has_e.1 = phi i32 [ %has_e.0, %76 ], [ 1, %96 ]
  %98 = getelementptr inbounds i8, i8* %73, i64 2
  %99 = load i8, i8* %98, align 1, !tbaa !76
  %100 = icmp eq i8 %99, 0
  br i1 %100, label %101, label %.thread74

; <label>:101                                     ; preds = %97
  %102 = add nsw i32 %i.05.i, 1
  %103 = sext i32 %102 to i64
  %104 = getelementptr inbounds i8*, i8** %4, i64 %103
  %105 = load i8*, i8** %104, align 8, !tbaa !25
  %106 = icmp eq i8* %105, null
  br i1 %106, label %collectargs.exit.thread.loopexit, label %.thread74

.thread74:                                        ; preds = %90, %94, %101, %97
  %has_i.2 = phi i32 [ %has_i.0, %101 ], [ %has_i.0, %97 ], [ %has_i.0, %94 ], [ 1, %90 ]
  %has_v.1 = phi i32 [ %has_v.0, %101 ], [ %has_v.0, %97 ], [ 1, %94 ], [ 1, %90 ]
  %has_e.2 = phi i32 [ %has_e.1, %101 ], [ %has_e.1, %97 ], [ %has_e.0, %94 ], [ %has_e.0, %90 ]
  %i.1.i = phi i32 [ %102, %101 ], [ %i.05.i, %97 ], [ %i.05.i, %94 ], [ %i.05.i, %90 ]
  %107 = add nsw i32 %i.1.i, 1
  %108 = sext i32 %107 to i64
  %109 = getelementptr inbounds i8*, i8** %4, i64 %108
  %110 = load i8*, i8** %109, align 8, !tbaa !25
  %111 = icmp eq i8* %110, null
  br i1 %111, label %collectargs.exit.thread16.loopexit, label %.lr.ph.i

collectargs.exit.loopexit:                        ; preds = %76, %.lr.ph.i
  %i.05.i.lcssa = phi i32 [ %i.05.i, %76 ], [ %i.05.i, %.lr.ph.i ]
  %has_e.0.lcssa = phi i32 [ %has_e.0, %76 ], [ %has_e.0, %.lr.ph.i ]
  %has_v.0.lcssa = phi i32 [ %has_v.0, %76 ], [ %has_v.0, %.lr.ph.i ]
  %has_i.0.lcssa = phi i32 [ %has_i.0, %76 ], [ %has_i.0, %.lr.ph.i ]
  br label %collectargs.exit

collectargs.exit:                                 ; preds = %collectargs.exit.loopexit, %84
  %has_e.0140 = phi i32 [ %has_e.0.lcssa138, %84 ], [ %has_e.0.lcssa, %collectargs.exit.loopexit ]
  %has_v.0136 = phi i32 [ %has_v.0.lcssa134, %84 ], [ %has_v.0.lcssa, %collectargs.exit.loopexit ]
  %has_i.0132 = phi i32 [ %has_i.0.lcssa130, %84 ], [ %has_i.0.lcssa, %collectargs.exit.loopexit ]
  %.0.i.4 = phi i32 [ %85, %84 ], [ %i.05.i.lcssa, %collectargs.exit.loopexit ]
  %112 = icmp slt i32 %.0.i.4, 0
  br i1 %112, label %collectargs.exit.thread, label %collectargs.exit.thread16

collectargs.exit.thread.loopexit:                 ; preds = %101, %94, %90, %76
  br label %collectargs.exit.thread

collectargs.exit.thread:                          ; preds = %collectargs.exit.thread.loopexit, %80, %collectargs.exit
  %113 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !25
  %114 = load i8*, i8** @progname, align 8, !tbaa !25
  %115 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %113, i8* getelementptr inbounds ([307 x i8], [307 x i8]* @.str.9.670, i64 0, i64 0), i8* %114) #13
  %116 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !25
  %117 = tail call i32 @fflush(%struct._IO_FILE* %116) #1
  store i32 1, i32* %69, align 4, !tbaa !298
  br label %report.exit

collectargs.exit.thread16.loopexit:               ; preds = %.thread74
  %has_e.2.lcssa = phi i32 [ %has_e.2, %.thread74 ]
  %has_v.1.lcssa = phi i32 [ %has_v.1, %.thread74 ]
  %has_i.2.lcssa = phi i32 [ %has_i.2, %.thread74 ]
  br label %collectargs.exit.thread16

collectargs.exit.thread16:                        ; preds = %collectargs.exit.thread16.loopexit, %84, %collectargs.exit
  %.0.i.420 = phi i32 [ %.0.i.4, %collectargs.exit ], [ 0, %84 ], [ 0, %collectargs.exit.thread16.loopexit ]
  %has_e.319 = phi i32 [ %has_e.0140, %collectargs.exit ], [ %has_e.0.lcssa138, %84 ], [ %has_e.2.lcssa, %collectargs.exit.thread16.loopexit ]
  %has_v.218 = phi i32 [ %has_v.0136, %collectargs.exit ], [ %has_v.0.lcssa134, %84 ], [ %has_v.1.lcssa, %collectargs.exit.thread16.loopexit ]
  %has_i.317 = phi i32 [ %has_i.0132, %collectargs.exit ], [ %has_i.0.lcssa130, %84 ], [ %has_i.2.lcssa, %collectargs.exit.thread16.loopexit ]
  %118 = icmp eq i32 %has_v.218, 0
  br i1 %118, label %124, label %119

; <label>:119                                     ; preds = %collectargs.exit.thread16
  %120 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !25
  %121 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %120, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3.664, i64 0, i64 0), i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.10.671, i64 0, i64 0)) #13
  %122 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !25
  %123 = tail call i32 @fflush(%struct._IO_FILE* %122) #1
  br label %124

; <label>:124                                     ; preds = %collectargs.exit.thread16, %119
  %has_v.21827 = phi i32 [ 0, %collectargs.exit.thread16 ], [ %has_v.218, %119 ]
  %125 = icmp sgt i32 %.0.i.420, 0
  br i1 %125, label %128, label %.thread29

.thread29:                                        ; preds = %68, %124
  %has_e.3192634 = phi i32 [ %has_e.319, %124 ], [ 0, %68 ]
  %has_v.2182732 = phi i32 [ %has_v.21827, %124 ], [ 0, %68 ]
  %has_i.3172830 = phi i32 [ %has_i.317, %124 ], [ 0, %68 ]
  %126 = bitcast i8* %1 to i32*
  %127 = load i32, i32* %126, align 4, !tbaa !295
  br label %128

; <label>:128                                     ; preds = %124, %.thread29
  %.0.i.4202537 = phi i32 [ 0, %.thread29 ], [ %.0.i.420, %124 ]
  %has_e.3192635 = phi i32 [ %has_e.3192634, %.thread29 ], [ %has_e.319, %124 ]
  %has_v.2182733 = phi i32 [ %has_v.2182732, %.thread29 ], [ %has_v.21827, %124 ]
  %has_i.3172831 = phi i32 [ %has_i.3172830, %.thread29 ], [ %has_i.317, %124 ]
  %129 = phi i32 [ %127, %.thread29 ], [ %.0.i.420, %124 ]
  %130 = icmp sgt i32 %129, 1
  br i1 %130, label %.lr.ph.i.5.preheader, label %.loopexit

.lr.ph.i.5.preheader:                             ; preds = %128
  br label %.lr.ph.i.5

.lr.ph.i.5:                                       ; preds = %.lr.ph.i.5.preheader, %report.exit.thread.i
  %i.012.i = phi i32 [ %191, %report.exit.thread.i ], [ 1, %.lr.ph.i.5.preheader ]
  %131 = sext i32 %i.012.i to i64
  %132 = getelementptr inbounds i8*, i8** %4, i64 %131
  %133 = load i8*, i8** %132, align 8, !tbaa !25
  %134 = icmp eq i8* %133, null
  br i1 %134, label %report.exit.thread.i, label %135

; <label>:135                                     ; preds = %.lr.ph.i.5
  %136 = getelementptr inbounds i8, i8* %133, i64 1
  %137 = load i8, i8* %136, align 1, !tbaa !76
  %138 = sext i8 %137 to i32
  switch i32 %138, label %report.exit.thread.i [
    i32 101, label %139
    i32 108, label %164
  ]

; <label>:139                                     ; preds = %135
  %140 = getelementptr inbounds i8, i8* %133, i64 2
  %141 = load i8, i8* %140, align 1, !tbaa !76
  %142 = icmp eq i8 %141, 0
  br i1 %142, label %143, label %148

; <label>:143                                     ; preds = %139
  %144 = add nsw i32 %i.012.i, 1
  %145 = sext i32 %144 to i64
  %146 = getelementptr inbounds i8*, i8** %4, i64 %145
  %147 = load i8*, i8** %146, align 8, !tbaa !25
  br label %148

; <label>:148                                     ; preds = %143, %139
  %i.1.i.6 = phi i32 [ %144, %143 ], [ %i.012.i, %139 ]
  %chunk.0.i = phi i8* [ %147, %143 ], [ %140, %139 ]
  %149 = tail call i64 @strlen(i8* %chunk.0.i) #11
  %150 = tail call i32 @luaL_loadbuffer(%struct.lua_State* %L, i8* %chunk.0.i, i64 %149, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.11.672, i64 0, i64 0)) #1
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %dostring.exit.i.7, label %dostring.exit.thread.i.8

dostring.exit.i.7:                                ; preds = %148
  %152 = tail call fastcc i32 @docall(%struct.lua_State* %L, i32 0, i32 1) #1
  %153 = icmp eq i32 %152, 0
  br i1 %153, label %report.exit.thread.i, label %dostring.exit.thread.i.8

dostring.exit.thread.i.8:                         ; preds = %dostring.exit.i.7, %148
  %154 = tail call i32 @lua_type(%struct.lua_State* %L, i32 -1) #1
  %155 = icmp eq i32 %154, 0
  br i1 %155, label %runargs.exit.thread, label %156

; <label>:156                                     ; preds = %dostring.exit.thread.i.8
  %157 = tail call i8* @lua_tolstring(%struct.lua_State* %L, i32 -1, i64* null) #1
  %158 = icmp eq i8* %157, null
  %..i.i.9 = select i1 %158, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.27.667, i64 0, i64 0), i8* %157
  %159 = load i8*, i8** @progname, align 8, !tbaa !25
  %160 = icmp eq i8* %159, null
  br i1 %160, label %report.exit.report.exit.thread7.loopexit_crit_edge.i, label %161

; <label>:161                                     ; preds = %156
  %162 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !25
  %163 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %162, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2.663, i64 0, i64 0), i8* %159) #13
  br label %report.exit.report.exit.thread7.loopexit_crit_edge.i

; <label>:164                                     ; preds = %135
  %165 = getelementptr inbounds i8, i8* %133, i64 2
  %166 = load i8, i8* %165, align 1, !tbaa !76
  %167 = icmp eq i8 %166, 0
  br i1 %167, label %168, label %173

; <label>:168                                     ; preds = %164
  %169 = add nsw i32 %i.012.i, 1
  %170 = sext i32 %169 to i64
  %171 = getelementptr inbounds i8*, i8** %4, i64 %170
  %172 = load i8*, i8** %171, align 8, !tbaa !25
  br label %173

; <label>:173                                     ; preds = %168, %164
  %i.2.i = phi i32 [ %169, %168 ], [ %i.012.i, %164 ]
  %filename.0.i = phi i8* [ %172, %168 ], [ %165, %164 ]
  tail call void @lua_getfield(%struct.lua_State* %L, i32 -10002, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.12.673, i64 0, i64 0)) #1
  tail call void @lua_pushstring(%struct.lua_State* %L, i8* %filename.0.i) #1
  %174 = tail call fastcc i32 @docall(%struct.lua_State* %L, i32 1, i32 1) #1
  %175 = icmp eq i32 %174, 0
  br i1 %175, label %report.exit.thread.i, label %176

; <label>:176                                     ; preds = %173
  %177 = tail call i32 @lua_type(%struct.lua_State* %L, i32 -1) #1
  %178 = icmp eq i32 %177, 0
  br i1 %178, label %runargs.exit.thread, label %179

; <label>:179                                     ; preds = %176
  %180 = tail call i8* @lua_tolstring(%struct.lua_State* %L, i32 -1, i64* null) #1
  %181 = icmp eq i8* %180, null
  %..i.i.i = select i1 %181, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.27.667, i64 0, i64 0), i8* %180
  %182 = load i8*, i8** @progname, align 8, !tbaa !25
  %183 = icmp eq i8* %182, null
  br i1 %183, label %l_message.exit.i.i, label %184

; <label>:184                                     ; preds = %179
  %185 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !25
  %186 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %185, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2.663, i64 0, i64 0), i8* %182) #13
  br label %l_message.exit.i.i

l_message.exit.i.i:                               ; preds = %184, %179
  %187 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !25
  %188 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %187, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3.664, i64 0, i64 0), i8* %..i.i.i) #13
  %189 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !25
  %190 = tail call i32 @fflush(%struct._IO_FILE* %189) #1
  tail call void @lua_settop(%struct.lua_State* %L, i32 -2) #1
  br label %runargs.exit.thread

report.exit.thread.i:                             ; preds = %173, %dostring.exit.i.7, %135, %.lr.ph.i.5
  %i.3.i = phi i32 [ %i.012.i, %.lr.ph.i.5 ], [ %i.012.i, %135 ], [ %i.1.i.6, %dostring.exit.i.7 ], [ %i.2.i, %173 ]
  %191 = add nsw i32 %i.3.i, 1
  %192 = icmp slt i32 %191, %129
  br i1 %192, label %.lr.ph.i.5, label %.loopexit.loopexit

report.exit.report.exit.thread7.loopexit_crit_edge.i: ; preds = %161, %156
  %193 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !25
  %194 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %193, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3.664, i64 0, i64 0), i8* %..i.i.9) #13
  %195 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !25
  %196 = tail call i32 @fflush(%struct._IO_FILE* %195) #1
  tail call void @lua_settop(%struct.lua_State* %L, i32 -2) #1
  br label %runargs.exit.thread

runargs.exit.thread:                              ; preds = %176, %l_message.exit.i.i, %report.exit.report.exit.thread7.loopexit_crit_edge.i, %dostring.exit.thread.i.8
  store i32 1, i32* %69, align 4, !tbaa !298
  br label %report.exit

.loopexit.loopexit:                               ; preds = %report.exit.thread.i
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %128
  store i32 0, i32* %69, align 4, !tbaa !298
  %197 = icmp eq i32 %.0.i.4202537, 0
  br i1 %197, label %.thread, label %.preheader.preheader

.preheader.preheader:                             ; preds = %.loopexit
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %.preheader
  %indvars.iv9.i.i = phi i64 [ %indvars.iv.next10.i.i, %.preheader ], [ 0, %.preheader.preheader ]
  %198 = getelementptr inbounds i8*, i8** %4, i64 %indvars.iv9.i.i
  %199 = load i8*, i8** %198, align 8, !tbaa !25
  %200 = icmp eq i8* %199, null
  %indvars.iv.next10.i.i = add nuw nsw i64 %indvars.iv9.i.i, 1
  br i1 %200, label %201, label %.preheader

; <label>:201                                     ; preds = %.preheader
  %indvars.iv9.i.i.lcssa = phi i64 [ %indvars.iv9.i.i, %.preheader ]
  %202 = trunc i64 %indvars.iv9.i.i.lcssa to i32
  %203 = add i32 %.0.i.4202537, 1
  %204 = sub nsw i32 %202, %203
  %205 = add nsw i32 %204, 3
  tail call void @luaL_checkstack(%struct.lua_State* %L, i32 %205, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.16.674, i64 0, i64 0)) #1
  %206 = icmp sgt i32 %202, %203
  br i1 %206, label %.lr.ph4.i.i, label %._crit_edge.5.i.i

.lr.ph4.i.i:                                      ; preds = %201
  %207 = sext i32 %203 to i64
  br label %208

; <label>:208                                     ; preds = %208, %.lr.ph4.i.i
  %indvars.iv6.i.i = phi i64 [ %207, %.lr.ph4.i.i ], [ %indvars.iv.next7.i.i, %208 ]
  %i.02.i.i = phi i32 [ %203, %.lr.ph4.i.i ], [ %211, %208 ]
  %209 = getelementptr inbounds i8*, i8** %4, i64 %indvars.iv6.i.i
  %210 = load i8*, i8** %209, align 8, !tbaa !25
  tail call void @lua_pushstring(%struct.lua_State* %L, i8* %210) #1
  %211 = add nsw i32 %i.02.i.i, 1
  %indvars.iv.next7.i.i = add nsw i64 %indvars.iv6.i.i, 1
  %exitcond8.i.i = icmp eq i32 %211, %202
  br i1 %exitcond8.i.i, label %._crit_edge.5.i.i.loopexit, label %208

._crit_edge.5.i.i.loopexit:                       ; preds = %208
  br label %._crit_edge.5.i.i

._crit_edge.5.i.i:                                ; preds = %._crit_edge.5.i.i.loopexit, %201
  tail call void @lua_createtable(%struct.lua_State* %L, i32 %204, i32 %203) #1
  %212 = icmp sgt i32 %202, 0
  br i1 %212, label %.lr.ph.i.i, label %getargs.exit.i

.lr.ph.i.i:                                       ; preds = %._crit_edge.5.i.i
  %213 = zext i32 %.0.i.4202537 to i64
  br label %214

; <label>:214                                     ; preds = %214, %.lr.ph.i.i
  %indvars.iv.i.i = phi i64 [ 0, %.lr.ph.i.i ], [ %indvars.iv.next.i.i, %214 ]
  %215 = getelementptr inbounds i8*, i8** %4, i64 %indvars.iv.i.i
  %216 = load i8*, i8** %215, align 8, !tbaa !25
  tail call void @lua_pushstring(%struct.lua_State* %L, i8* %216) #1
  %217 = sub i64 %indvars.iv.i.i, %213
  %218 = trunc i64 %217 to i32
  tail call void @lua_rawseti(%struct.lua_State* %L, i32 -2, i32 %218) #1
  %indvars.iv.next.i.i = add nuw nsw i64 %indvars.iv.i.i, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next.i.i to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %202
  br i1 %exitcond, label %getargs.exit.i.loopexit, label %214

getargs.exit.i.loopexit:                          ; preds = %214
  br label %getargs.exit.i

getargs.exit.i:                                   ; preds = %getargs.exit.i.loopexit, %._crit_edge.5.i.i
  tail call void @lua_setfield(%struct.lua_State* %L, i32 -10002, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.13.675, i64 0, i64 0)) #1
  %219 = sext i32 %.0.i.4202537 to i64
  %220 = getelementptr inbounds i8*, i8** %4, i64 %219
  %221 = load i8*, i8** %220, align 8, !tbaa !25
  %222 = load i8, i8* %221, align 1, !tbaa !76
  %223 = icmp eq i8 %222, 45
  br i1 %223, label %224, label %.thread.i

; <label>:224                                     ; preds = %getargs.exit.i
  %225 = getelementptr inbounds i8, i8* %221, i64 1
  %226 = load i8, i8* %225, align 1, !tbaa !76
  %phitmp.i = icmp eq i8 %226, 0
  br i1 %phitmp.i, label %227, label %.thread.i

; <label>:227                                     ; preds = %224
  %228 = add nsw i32 %.0.i.4202537, -1
  %229 = sext i32 %228 to i64
  %230 = getelementptr inbounds i8*, i8** %4, i64 %229
  %231 = load i8*, i8** %230, align 8, !tbaa !25
  %232 = load i8, i8* %231, align 1, !tbaa !76
  %233 = zext i8 %232 to i32
  %234 = sub nsw i32 45, %233
  %235 = icmp eq i32 %234, 0
  br i1 %235, label %236, label %247

; <label>:236                                     ; preds = %227
  %237 = getelementptr inbounds i8, i8* %231, i64 1
  %238 = load i8, i8* %237, align 1, !tbaa !76
  %239 = zext i8 %238 to i32
  %240 = sub nsw i32 45, %239
  %241 = icmp eq i32 %240, 0
  br i1 %241, label %242, label %247

; <label>:242                                     ; preds = %236
  %243 = getelementptr inbounds i8, i8* %231, i64 2
  %244 = load i8, i8* %243, align 1, !tbaa !76
  %245 = zext i8 %244 to i32
  %246 = sub nsw i32 0, %245
  br label %247

; <label>:247                                     ; preds = %242, %236, %227
  %__result4.0.i = phi i32 [ %246, %242 ], [ %240, %236 ], [ %234, %227 ]
  %phitmp16.i = icmp ne i32 %__result4.0.i, 0
  %..i = select i1 %phitmp16.i, i8* null, i8* %221
  br label %.thread.i

.thread.i:                                        ; preds = %247, %224, %getargs.exit.i
  %fname.0.i = phi i8* [ %221, %224 ], [ %..i, %247 ], [ %221, %getargs.exit.i ]
  %248 = tail call i32 @luaL_loadfile(%struct.lua_State* %L, i8* %fname.0.i) #1
  %249 = xor i32 %204, -1
  tail call void @lua_insert(%struct.lua_State* %L, i32 %249) #1
  %250 = icmp eq i32 %248, 0
  br i1 %250, label %251, label %.thread18.i

.thread18.i:                                      ; preds = %.thread.i
  tail call void @lua_settop(%struct.lua_State* %L, i32 %249) #1
  br label %254

; <label>:251                                     ; preds = %.thread.i
  %252 = tail call fastcc i32 @docall(%struct.lua_State* %L, i32 %204, i32 0) #1
  %253 = icmp eq i32 %252, 0
  br i1 %253, label %.thread23, label %254

.thread23:                                        ; preds = %251
  store i32 0, i32* %69, align 4, !tbaa !298
  br label %.thread

; <label>:254                                     ; preds = %251, %.thread18.i
  %status.019.i = phi i32 [ %248, %.thread18.i ], [ %252, %251 ]
  %255 = tail call i32 @lua_type(%struct.lua_State* %L, i32 -1) #1
  %256 = icmp eq i32 %255, 0
  br i1 %256, label %.thread24, label %257

.thread24:                                        ; preds = %254
  store i32 %status.019.i, i32* %69, align 4, !tbaa !298
  br label %report.exit

; <label>:257                                     ; preds = %254
  %258 = tail call i8* @lua_tolstring(%struct.lua_State* %L, i32 -1, i64* null) #1
  %259 = icmp eq i8* %258, null
  %..i.i.10 = select i1 %259, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.27.667, i64 0, i64 0), i8* %258
  %260 = load i8*, i8** @progname, align 8, !tbaa !25
  %261 = icmp eq i8* %260, null
  br i1 %261, label %265, label %262

; <label>:262                                     ; preds = %257
  %263 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !25
  %264 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %263, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2.663, i64 0, i64 0), i8* %260) #13
  br label %265

; <label>:265                                     ; preds = %257, %262
  %266 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !25
  %267 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %266, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3.664, i64 0, i64 0), i8* %..i.i.10) #13
  %268 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !25
  %269 = tail call i32 @fflush(%struct._IO_FILE* %268) #1
  tail call void @lua_settop(%struct.lua_State* %L, i32 -2) #1
  store i32 %status.019.i, i32* %69, align 4, !tbaa !298
  br label %report.exit

.thread:                                          ; preds = %.loopexit, %.thread23
  %270 = icmp eq i32 %has_i.3172831, 0
  br i1 %270, label %272, label %271

; <label>:271                                     ; preds = %.thread
  tail call fastcc void @dotty(%struct.lua_State* %L)
  br label %report.exit

; <label>:272                                     ; preds = %.thread
  %273 = or i32 %has_e.3192635, %.0.i.4202537
  %274 = or i32 %273, %has_v.2182733
  %275 = icmp eq i32 %274, 0
  br i1 %275, label %276, label %report.exit

; <label>:276                                     ; preds = %272
  %277 = tail call i32 @isatty(i32 0) #1
  %278 = icmp eq i32 %277, 0
  br i1 %278, label %284, label %279

; <label>:279                                     ; preds = %276
  %280 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !25
  %281 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %280, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3.664, i64 0, i64 0), i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.10.671, i64 0, i64 0)) #13
  %282 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !25
  %283 = tail call i32 @fflush(%struct._IO_FILE* %282) #1
  tail call fastcc void @dotty(%struct.lua_State* %L)
  br label %report.exit

; <label>:284                                     ; preds = %276
  %285 = tail call i32 @luaL_loadfile(%struct.lua_State* %L, i8* null) #1
  %286 = icmp eq i32 %285, 0
  br i1 %286, label %dofile.exit, label %.critedge

dofile.exit:                                      ; preds = %284
  %287 = tail call fastcc i32 @docall(%struct.lua_State* %L, i32 0, i32 1) #1
  %288 = icmp eq i32 %287, 0
  br i1 %288, label %report.exit, label %.critedge

.critedge:                                        ; preds = %dofile.exit, %284
  %289 = tail call i32 @lua_type(%struct.lua_State* %L, i32 -1) #1
  %290 = icmp eq i32 %289, 0
  br i1 %290, label %report.exit, label %291

; <label>:291                                     ; preds = %.critedge
  %292 = tail call i8* @lua_tolstring(%struct.lua_State* %L, i32 -1, i64* null) #1
  %293 = icmp eq i8* %292, null
  %..i.12 = select i1 %293, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.27.667, i64 0, i64 0), i8* %292
  %294 = load i8*, i8** @progname, align 8, !tbaa !25
  %295 = icmp eq i8* %294, null
  br i1 %295, label %l_message.exit, label %296

; <label>:296                                     ; preds = %291
  %297 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !25
  %298 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %297, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2.663, i64 0, i64 0), i8* %294) #13
  br label %l_message.exit

l_message.exit:                                   ; preds = %291, %296
  %299 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !25
  %300 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %299, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3.664, i64 0, i64 0), i8* %..i.12) #13
  %301 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !25
  %302 = tail call i32 @fflush(%struct._IO_FILE* %301) #1
  tail call void @lua_settop(%struct.lua_State* %L, i32 -2) #1
  br label %report.exit

report.exit:                                      ; preds = %265, %dofile.exit, %l_message.exit, %.critedge, %.thread24, %runargs.exit.thread, %271, %279, %272, %handle_luainit.exit, %collectargs.exit.thread
  ret i32 0
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @docall(%struct.lua_State* %L, i32 %narg, i32 %clear) #0 {
  %1 = tail call i32 @lua_gettop(%struct.lua_State* %L) #1
  %2 = sub nsw i32 %1, %narg
  tail call void @lua_pushcclosure(%struct.lua_State* %L, i32 (%struct.lua_State*)* nonnull @traceback, i32 0) #1
  tail call void @lua_insert(%struct.lua_State* %L, i32 %2) #1
  %3 = tail call void (i32)* @signal(i32 2, void (i32)* nonnull @laction) #1
  %not. = icmp eq i32 %clear, 0
  %4 = sext i1 %not. to i32
  %5 = tail call i32 @lua_pcall(%struct.lua_State* %L, i32 %narg, i32 %4, i32 %2) #1
  %6 = tail call void (i32)* @signal(i32 2, void (i32)* null) #1
  tail call void @lua_remove(%struct.lua_State* %L, i32 %2) #1
  %7 = icmp eq i32 %5, 0
  br i1 %7, label %10, label %8

; <label>:8                                       ; preds = %0
  %9 = tail call i32 @lua_gc(%struct.lua_State* %L, i32 2, i32 0) #1
  br label %10

; <label>:10                                      ; preds = %0, %8
  ret i32 %5
}

; Function Attrs: nounwind uwtable
define internal fastcc void @dotty(%struct.lua_State* %L) #0 {
  %lmsg.i.i = alloca i64, align 8
  %1 = load i64, i64* bitcast (i8** @progname to i64*), align 8, !tbaa !25
  store i8* null, i8** @progname, align 8, !tbaa !25
  call void @lua_settop(%struct.lua_State* %L, i32 0) #1
  %2 = call fastcc i32 @pushline(%struct.lua_State* %L, i32 1) #1
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %loadline.exit.thread, label %.preheader.i.lr.ph

.preheader.i.lr.ph:                               ; preds = %0
  %4 = bitcast i64* %lmsg.i.i to i8*
  br label %.preheader.i

.preheader.i:                                     ; preds = %.preheader.i.lr.ph, %.backedge
  %5 = call i8* @lua_tolstring(%struct.lua_State* %L, i32 1, i64* null) #1
  %6 = call i64 @lua_objlen(%struct.lua_State* %L, i32 1) #1
  %7 = call i32 @luaL_loadbuffer(%struct.lua_State* %L, i8* %5, i64 %6, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.20.676, i64 0, i64 0)) #1
  %8 = icmp eq i32 %7, 3
  br i1 %8, label %.lr.ph.i.preheader, label %loadline.exit

.lr.ph.i.preheader:                               ; preds = %.preheader.i
  br label %.lr.ph.i

.lr.ph.i:                                         ; preds = %.lr.ph.i.preheader, %18
  call void @llvm.lifetime.start(i64 8, i8* %4) #1
  %9 = call i8* @lua_tolstring(%struct.lua_State* %L, i32 -1, i64* nonnull %lmsg.i.i) #1
  %10 = load i64, i64* %lmsg.i.i, align 8, !tbaa !39
  %11 = getelementptr inbounds i8, i8* %9, i64 %10
  %12 = getelementptr inbounds i8, i8* %11, i64 -7
  %13 = call i8* @strstr(i8* %9, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.26.677, i64 0, i64 0)) #11
  %14 = icmp eq i8* %13, %12
  br i1 %14, label %15, label %loadline.exit.thread2

loadline.exit.thread2:                            ; preds = %.lr.ph.i
  call void @llvm.lifetime.end(i64 8, i8* %4) #1
  call void @lua_remove(%struct.lua_State* %L, i32 1) #1
  br label %.thread

; <label>:15                                      ; preds = %.lr.ph.i
  call void @lua_settop(%struct.lua_State* %L, i32 -2) #1
  call void @llvm.lifetime.end(i64 8, i8* %4) #1
  %16 = call fastcc i32 @pushline(%struct.lua_State* %L, i32 0) #1
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %loadline.exit.thread.loopexit, label %18

; <label>:18                                      ; preds = %15
  call void @lua_pushlstring(%struct.lua_State* %L, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.19.678, i64 0, i64 0), i64 1) #1
  call void @lua_insert(%struct.lua_State* %L, i32 -2) #1
  call void @lua_concat(%struct.lua_State* %L, i32 3) #1
  %19 = call i8* @lua_tolstring(%struct.lua_State* %L, i32 1, i64* null) #1
  %20 = call i64 @lua_objlen(%struct.lua_State* %L, i32 1) #1
  %21 = call i32 @luaL_loadbuffer(%struct.lua_State* %L, i8* %19, i64 %20, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.20.676, i64 0, i64 0)) #1
  %22 = icmp eq i32 %21, 3
  br i1 %22, label %.lr.ph.i, label %loadline.exit.loopexit

loadline.exit.loopexit:                           ; preds = %18
  %.lcssa = phi i32 [ %21, %18 ]
  br label %loadline.exit

loadline.exit:                                    ; preds = %loadline.exit.loopexit, %.preheader.i
  %23 = phi i32 [ %7, %.preheader.i ], [ %.lcssa, %loadline.exit.loopexit ]
  call void @lua_remove(%struct.lua_State* %L, i32 1) #1
  switch i32 %23, label %.thread [
    i32 -1, label %loadline.exit.thread.loopexit6
    i32 0, label %25
  ]

.thread:                                          ; preds = %loadline.exit, %loadline.exit.thread2
  %status.0.ph = phi i32 [ 3, %loadline.exit.thread2 ], [ %23, %loadline.exit ]
  %24 = icmp eq i32 %status.0.ph, 0
  br label %28

; <label>:25                                      ; preds = %loadline.exit
  %26 = call fastcc i32 @docall(%struct.lua_State* %L, i32 0, i32 0)
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %report.exit.thread, label %28

; <label>:28                                      ; preds = %.thread, %25
  %29 = phi i1 [ %24, %.thread ], [ false, %25 ]
  %30 = call i32 @lua_type(%struct.lua_State* %L, i32 -1) #1
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %report.exit, label %32

; <label>:32                                      ; preds = %28
  %33 = call i8* @lua_tolstring(%struct.lua_State* %L, i32 -1, i64* null) #1
  %34 = icmp eq i8* %33, null
  %..i = select i1 %34, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.27.667, i64 0, i64 0), i8* %33
  %35 = load i8*, i8** @progname, align 8, !tbaa !25
  %36 = icmp eq i8* %35, null
  br i1 %36, label %l_message.exit1, label %37

; <label>:37                                      ; preds = %32
  %38 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !25
  %39 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %38, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2.663, i64 0, i64 0), i8* %35) #13
  br label %l_message.exit1

l_message.exit1:                                  ; preds = %32, %37
  %40 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !25
  %41 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %40, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3.664, i64 0, i64 0), i8* %..i) #13
  %42 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !25
  %43 = call i32 @fflush(%struct._IO_FILE* %42) #1
  call void @lua_settop(%struct.lua_State* %L, i32 -2) #1
  br i1 %29, label %report.exit.thread, label %.backedge

report.exit:                                      ; preds = %28
  br i1 %29, label %report.exit.thread, label %.backedge

report.exit.thread:                               ; preds = %25, %l_message.exit1, %report.exit
  %44 = call i32 @lua_gettop(%struct.lua_State* %L) #1
  %45 = icmp sgt i32 %44, 0
  br i1 %45, label %46, label %.backedge

; <label>:46                                      ; preds = %report.exit.thread
  call void @lua_getfield(%struct.lua_State* %L, i32 -10002, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.17.679, i64 0, i64 0)) #1
  call void @lua_insert(%struct.lua_State* %L, i32 1) #1
  %47 = call i32 @lua_gettop(%struct.lua_State* %L) #1
  %48 = add nsw i32 %47, -1
  %49 = call i32 @lua_pcall(%struct.lua_State* %L, i32 %48, i32 0, i32 0) #1
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %.backedge, label %51

; <label>:51                                      ; preds = %46
  %52 = load i8*, i8** @progname, align 8, !tbaa !25
  %53 = call i8* @lua_tolstring(%struct.lua_State* %L, i32 -1, i64* null) #1
  %54 = call i8* (%struct.lua_State*, i8*, ...) @lua_pushfstring(%struct.lua_State* %L, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.18.680, i64 0, i64 0), i8* %53) #1
  %55 = icmp eq i8* %52, null
  br i1 %55, label %l_message.exit, label %56

; <label>:56                                      ; preds = %51
  %57 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !25
  %58 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %57, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2.663, i64 0, i64 0), i8* %52) #13
  br label %l_message.exit

l_message.exit:                                   ; preds = %51, %56
  %59 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !25
  %60 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %59, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3.664, i64 0, i64 0), i8* %54) #13
  %61 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !25
  %62 = call i32 @fflush(%struct._IO_FILE* %61) #1
  br label %.backedge

.backedge:                                        ; preds = %l_message.exit, %report.exit.thread, %report.exit, %46, %l_message.exit1
  call void @lua_settop(%struct.lua_State* %L, i32 0) #1
  %63 = call fastcc i32 @pushline(%struct.lua_State* %L, i32 1) #1
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %loadline.exit.thread.loopexit6, label %.preheader.i

loadline.exit.thread.loopexit:                    ; preds = %15
  br label %loadline.exit.thread

loadline.exit.thread.loopexit6:                   ; preds = %.backedge, %loadline.exit
  br label %loadline.exit.thread

loadline.exit.thread:                             ; preds = %loadline.exit.thread.loopexit6, %loadline.exit.thread.loopexit, %0
  call void @lua_settop(%struct.lua_State* %L, i32 0) #1
  %65 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !tbaa !25
  %fputc = call i32 @fputc(i32 10, %struct._IO_FILE* %65)
  %66 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !tbaa !25
  %67 = call i32 @fflush(%struct._IO_FILE* %66) #1
  store i64 %1, i64* bitcast (i8** @progname to i64*), align 8, !tbaa !25
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @pushline(%struct.lua_State* %L, i32 %firstline) #0 {
  %buffer = alloca [512 x i8], align 16
  %1 = getelementptr inbounds [512 x i8], [512 x i8]* %buffer, i64 0, i64 0
  call void @llvm.lifetime.start(i64 512, i8* %1) #1
  %2 = icmp ne i32 %firstline, 0
  %3 = select i1 %2, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.22.681, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.23.682, i64 0, i64 0)
  tail call void @lua_getfield(%struct.lua_State* %L, i32 -10002, i8* %3) #1
  %4 = tail call i8* @lua_tolstring(%struct.lua_State* %L, i32 -1, i64* null) #1
  %5 = icmp eq i8* %4, null
  %6 = select i1 %2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.24.683, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.25.684, i64 0, i64 0)
  %..i = select i1 %5, i8* %6, i8* %4
  tail call void @lua_settop(%struct.lua_State* %L, i32 -2) #1
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !tbaa !25
  %8 = tail call i32 @fputs(i8* %..i, %struct._IO_FILE* %7) #1
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !tbaa !25
  %10 = tail call i32 @fflush(%struct._IO_FILE* %9) #1
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !tbaa !25
  %12 = call i8* @fgets(i8* %1, i32 512, %struct._IO_FILE* %11) #1
  %13 = icmp eq i8* %12, null
  br i1 %13, label %30, label %14

; <label>:14                                      ; preds = %0
  %15 = call i64 @strlen(i8* %1) #11
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %23, label %17

; <label>:17                                      ; preds = %14
  %18 = add i64 %15, -1
  %19 = getelementptr inbounds [512 x i8], [512 x i8]* %buffer, i64 0, i64 %18
  %20 = load i8, i8* %19, align 1, !tbaa !76
  %21 = icmp eq i8 %20, 10
  br i1 %21, label %22, label %23

; <label>:22                                      ; preds = %17
  store i8 0, i8* %19, align 1, !tbaa !76
  br label %23

; <label>:23                                      ; preds = %14, %22, %17
  %24 = load i8, i8* %1, align 16
  %25 = icmp eq i8 %24, 61
  %or.cond = and i1 %2, %25
  br i1 %or.cond, label %26, label %29

; <label>:26                                      ; preds = %23
  %27 = getelementptr inbounds [512 x i8], [512 x i8]* %buffer, i64 0, i64 1
  %28 = call i8* (%struct.lua_State*, i8*, ...) @lua_pushfstring(%struct.lua_State* %L, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.21.685, i64 0, i64 0), i8* %27) #1
  br label %30

; <label>:29                                      ; preds = %23
  call void @lua_pushstring(%struct.lua_State* %L, i8* %1) #1
  br label %30

; <label>:30                                      ; preds = %26, %29, %0
  %.0 = phi i32 [ 0, %0 ], [ 1, %29 ], [ 1, %26 ]
  call void @llvm.lifetime.end(i64 512, i8* %1) #1
  ret i32 %.0
}

; Function Attrs: nounwind uwtable
define internal i32 @traceback(%struct.lua_State* %L) #0 {
  %1 = tail call i32 @lua_isstring(%struct.lua_State* %L, i32 1) #1
  %2 = icmp eq i32 %1, 0
  br i1 %2, label %12, label %3

; <label>:3                                       ; preds = %0
  tail call void @lua_getfield(%struct.lua_State* %L, i32 -10002, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6.687, i64 0, i64 0)) #1
  %4 = tail call i32 @lua_type(%struct.lua_State* %L, i32 -1) #1
  %5 = icmp eq i32 %4, 5
  br i1 %5, label %7, label %6

; <label>:6                                       ; preds = %3
  tail call void @lua_settop(%struct.lua_State* %L, i32 -2) #1
  br label %12

; <label>:7                                       ; preds = %3
  tail call void @lua_getfield(%struct.lua_State* %L, i32 -1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.7.688, i64 0, i64 0)) #1
  %8 = tail call i32 @lua_type(%struct.lua_State* %L, i32 -1) #1
  %9 = icmp eq i32 %8, 6
  br i1 %9, label %11, label %10

; <label>:10                                      ; preds = %7
  tail call void @lua_settop(%struct.lua_State* %L, i32 -3) #1
  br label %12

; <label>:11                                      ; preds = %7
  tail call void @lua_pushvalue(%struct.lua_State* %L, i32 1) #1
  tail call void @lua_pushinteger(%struct.lua_State* %L, i64 2) #1
  tail call void @lua_call(%struct.lua_State* %L, i32 2, i32 1) #1
  br label %12

; <label>:12                                      ; preds = %0, %11, %10, %6
  ret i32 1
}

; Function Attrs: nounwind uwtable
define internal void @laction(i32 %i) #0 {
  %1 = tail call void (i32)* @signal(i32 %i, void (i32)* null) #1
  %2 = load %struct.lua_State*, %struct.lua_State** @globalL, align 8, !tbaa !25
  %3 = tail call i32 @lua_sethook(%struct.lua_State* %2, void (%struct.lua_State*, %struct.lua_Debug*)* nonnull @lstop, i32 11, i32 1) #1
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @lstop(%struct.lua_State* %L, %struct.lua_Debug* nocapture readnone %ar) #0 {
  %1 = tail call i32 @lua_sethook(%struct.lua_State* %L, void (%struct.lua_State*, %struct.lua_Debug*)* null, i32 0, i32 0) #1
  %2 = tail call i32 (%struct.lua_State*, i8*, ...) @luaL_error(%struct.lua_State* %L, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8.686, i64 0, i64 0)) #1
  ret void
}

; Function Attrs: nounwind uwtable
define hidden %struct.Proto.358* @luaU_undump(%struct.lua_State.215* %L, %struct.Zio.359* %Z, %struct.Mbuffer* %buff, i8* %name) #0 {
  %h.i = alloca [12 x i8], align 4
  %s.i = alloca [12 x i8], align 1
  %S = alloca %struct.LoadState, align 8
  %1 = bitcast %struct.LoadState* %S to i8*
  call void @llvm.lifetime.start(i64 32, i8* %1) #1
  %2 = load i8, i8* %name, align 1, !tbaa !76
  switch i8 %2, label %8 [
    i8 64, label %3
    i8 61, label %3
    i8 27, label %6
  ]

; <label>:3                                       ; preds = %0, %0
  %4 = getelementptr inbounds i8, i8* %name, i64 1
  %5 = getelementptr inbounds %struct.LoadState, %struct.LoadState* %S, i64 0, i32 3
  store i8* %4, i8** %5, align 8, !tbaa !299
  br label %10

; <label>:6                                       ; preds = %0
  %7 = getelementptr inbounds %struct.LoadState, %struct.LoadState* %S, i64 0, i32 3
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.693, i64 0, i64 0), i8** %7, align 8, !tbaa !299
  br label %10

; <label>:8                                       ; preds = %0
  %9 = getelementptr inbounds %struct.LoadState, %struct.LoadState* %S, i64 0, i32 3
  store i8* %name, i8** %9, align 8, !tbaa !299
  br label %10

; <label>:10                                      ; preds = %6, %8, %3
  %11 = phi i8* [ getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.693, i64 0, i64 0), %6 ], [ %name, %8 ], [ %4, %3 ]
  %12 = getelementptr inbounds %struct.LoadState, %struct.LoadState* %S, i64 0, i32 0
  store %struct.lua_State.215* %L, %struct.lua_State.215** %12, align 8, !tbaa !301
  %13 = getelementptr inbounds %struct.LoadState, %struct.LoadState* %S, i64 0, i32 1
  store %struct.Zio.359* %Z, %struct.Zio.359** %13, align 8, !tbaa !302
  %14 = getelementptr inbounds %struct.LoadState, %struct.LoadState* %S, i64 0, i32 2
  store %struct.Mbuffer* %buff, %struct.Mbuffer** %14, align 8, !tbaa !303
  %15 = getelementptr inbounds [12 x i8], [12 x i8]* %h.i, i64 0, i64 0
  call void @llvm.lifetime.start(i64 12, i8* %15) #1
  %16 = getelementptr inbounds [12 x i8], [12 x i8]* %s.i, i64 0, i64 0
  call void @llvm.lifetime.start(i64 12, i8* %16) #1
  %17 = bitcast [12 x i8]* %h.i to i32*
  store i32 1635077147, i32* %17, align 4
  %18 = getelementptr inbounds [12 x i8], [12 x i8]* %h.i, i64 0, i64 4
  %19 = getelementptr inbounds [12 x i8], [12 x i8]* %h.i, i64 0, i64 5
  store i8 81, i8* %18, align 4, !tbaa !76
  %20 = getelementptr inbounds [12 x i8], [12 x i8]* %h.i, i64 0, i64 6
  store i8 0, i8* %19, align 1, !tbaa !76
  %21 = getelementptr inbounds [12 x i8], [12 x i8]* %h.i, i64 0, i64 7
  store i8 1, i8* %20, align 2, !tbaa !76
  %22 = getelementptr inbounds [12 x i8], [12 x i8]* %h.i, i64 0, i64 8
  store i8 4, i8* %21, align 1, !tbaa !76
  %23 = getelementptr inbounds [12 x i8], [12 x i8]* %h.i, i64 0, i64 9
  store i8 8, i8* %22, align 4, !tbaa !76
  %24 = getelementptr inbounds [12 x i8], [12 x i8]* %h.i, i64 0, i64 10
  store i8 4, i8* %23, align 1, !tbaa !76
  %25 = getelementptr inbounds [12 x i8], [12 x i8]* %h.i, i64 0, i64 11
  store i8 8, i8* %24, align 2, !tbaa !76
  store i8 0, i8* %25, align 1, !tbaa !76
  %26 = call i64 bitcast (i64 (%struct.Zio*, i8*, i64)* @luaZ_read to i64 (%struct.Zio.359*, i8*, i64)*)(%struct.Zio.359* %Z, i8* %16, i64 12) #1
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %LoadBlock.exit.i, label %28

; <label>:28                                      ; preds = %10
  %29 = call i8* (%struct.lua_State.215*, i8*, ...) @luaO_pushfstring(%struct.lua_State.215* %L, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5.694, i64 0, i64 0), i8* %11, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4.695, i64 0, i64 0)) #1
  %30 = load %struct.lua_State.215*, %struct.lua_State.215** %12, align 8, !tbaa !301
  call void bitcast (void (%struct.lua_State*, i32)* @luaD_throw to void (%struct.lua_State.215*, i32)*)(%struct.lua_State.215* %30, i32 3) #1
  br label %LoadBlock.exit.i

LoadBlock.exit.i:                                 ; preds = %28, %10
  %31 = call i32 @memcmp(i8* %15, i8* %16, i64 12) #11
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %LoadHeader.exit, label %33

; <label>:33                                      ; preds = %LoadBlock.exit.i
  %34 = load %struct.lua_State.215*, %struct.lua_State.215** %12, align 8, !tbaa !301
  %35 = getelementptr inbounds %struct.LoadState, %struct.LoadState* %S, i64 0, i32 3
  %36 = load i8*, i8** %35, align 8, !tbaa !299
  %37 = call i8* (%struct.lua_State.215*, i8*, ...) @luaO_pushfstring(%struct.lua_State.215* %34, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5.694, i64 0, i64 0), i8* %36, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3.696, i64 0, i64 0)) #1
  %38 = load %struct.lua_State.215*, %struct.lua_State.215** %12, align 8, !tbaa !301
  call void bitcast (void (%struct.lua_State*, i32)* @luaD_throw to void (%struct.lua_State.215*, i32)*)(%struct.lua_State.215* %38, i32 3) #1
  br label %LoadHeader.exit

LoadHeader.exit:                                  ; preds = %LoadBlock.exit.i, %33
  call void @llvm.lifetime.end(i64 12, i8* %16) #1
  call void @llvm.lifetime.end(i64 12, i8* %15) #1
  %39 = call %union.TString.210* bitcast (%union.TString* (%struct.lua_State*, i8*, i64)* @luaS_newlstr to %union.TString.210* (%struct.lua_State.215*, i8*, i64)*)(%struct.lua_State.215* %L, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2.697, i64 0, i64 0), i64 2) #1
  %40 = call fastcc %struct.Proto.358* @LoadFunction(%struct.LoadState* nonnull %S, %union.TString.210* %39)
  call void @llvm.lifetime.end(i64 32, i8* %1) #1
  ret %struct.Proto.358* %40
}

; Function Attrs: nounwind uwtable
define hidden void @luaU_header(i8* nocapture %h) #0 {
  %1 = bitcast i8* %h to i32*
  store i32 1635077147, i32* %1, align 1
  %2 = getelementptr inbounds i8, i8* %h, i64 4
  %3 = getelementptr inbounds i8, i8* %h, i64 5
  store i8 81, i8* %2, align 1, !tbaa !76
  %4 = getelementptr inbounds i8, i8* %h, i64 6
  store i8 0, i8* %3, align 1, !tbaa !76
  %5 = getelementptr inbounds i8, i8* %h, i64 7
  store i8 1, i8* %4, align 1, !tbaa !76
  %6 = getelementptr inbounds i8, i8* %h, i64 8
  store i8 4, i8* %5, align 1, !tbaa !76
  %7 = getelementptr inbounds i8, i8* %h, i64 9
  store i8 8, i8* %6, align 1, !tbaa !76
  %8 = getelementptr inbounds i8, i8* %h, i64 10
  store i8 4, i8* %7, align 1, !tbaa !76
  %9 = getelementptr inbounds i8, i8* %h, i64 11
  store i8 8, i8* %8, align 1, !tbaa !76
  store i8 0, i8* %9, align 1, !tbaa !76
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.Proto.358* @LoadFunction(%struct.LoadState* %S, %union.TString.210* %p) #0 {
  %x.i.10.i = alloca i32, align 4
  %size.i.i.24 = alloca i64, align 8
  %x.i.8.i = alloca double, align 8
  %x.i.5.i.25 = alloca i8, align 1
  %x.i.3.i = alloca i8, align 1
  %x.i.i.26 = alloca i32, align 4
  %size.i.17.i = alloca i64, align 8
  %x.i.13.i = alloca i32, align 4
  %x.i.9.i = alloca i32, align 4
  %x.i.5.i = alloca i32, align 4
  %size.i.i = alloca i64, align 8
  %x.i.1.i = alloca i32, align 4
  %x.i.i.17 = alloca i32, align 4
  %x.i.i = alloca i32, align 4
  %x.i.13 = alloca i8, align 1
  %x.i.10 = alloca i8, align 1
  %x.i.7 = alloca i8, align 1
  %x.i.5 = alloca i8, align 1
  %x.i.1 = alloca i32, align 4
  %x.i = alloca i32, align 4
  %size.i = alloca i64, align 8
  %1 = getelementptr inbounds %struct.LoadState, %struct.LoadState* %S, i64 0, i32 0
  %2 = load %struct.lua_State.215*, %struct.lua_State.215** %1, align 8, !tbaa !301
  %3 = getelementptr inbounds %struct.lua_State.215, %struct.lua_State.215* %2, i64 0, i32 15
  %4 = load i16, i16* %3, align 2, !tbaa !16
  %5 = add i16 %4, 1
  store i16 %5, i16* %3, align 2, !tbaa !16
  %6 = icmp ugt i16 %5, 200
  br i1 %6, label %7, label %12

; <label>:7                                       ; preds = %0
  %8 = getelementptr inbounds %struct.LoadState, %struct.LoadState* %S, i64 0, i32 3
  %9 = load i8*, i8** %8, align 8, !tbaa !299
  %10 = tail call i8* (%struct.lua_State.215*, i8*, ...) @luaO_pushfstring(%struct.lua_State.215* %2, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5.694, i64 0, i64 0), i8* %9, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6.698, i64 0, i64 0)) #1
  %11 = load %struct.lua_State.215*, %struct.lua_State.215** %1, align 8, !tbaa !301
  tail call void bitcast (void (%struct.lua_State*, i32)* @luaD_throw to void (%struct.lua_State.215*, i32)*)(%struct.lua_State.215* %11, i32 3) #1
  %.pre = load %struct.lua_State.215*, %struct.lua_State.215** %1, align 8, !tbaa !301
  br label %12

; <label>:12                                      ; preds = %7, %0
  %13 = phi %struct.lua_State.215* [ %.pre, %7 ], [ %2, %0 ]
  %14 = tail call %struct.Proto.358* bitcast (%struct.Proto.120* (%struct.lua_State.115*)* @luaF_newproto to %struct.Proto.358* (%struct.lua_State.215*)*)(%struct.lua_State.215* %13) #1
  %15 = load %struct.lua_State.215*, %struct.lua_State.215** %1, align 8, !tbaa !301
  %16 = getelementptr inbounds %struct.lua_State.215, %struct.lua_State.215* %15, i64 0, i32 4
  %17 = load %struct.lua_TValue.218*, %struct.lua_TValue.218** %16, align 8, !tbaa !1
  %18 = bitcast %struct.lua_TValue.218* %17 to %struct.Proto.358**
  store %struct.Proto.358* %14, %struct.Proto.358** %18, align 8, !tbaa !25
  %19 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %17, i64 0, i32 1
  store i32 9, i32* %19, align 4, !tbaa !10
  %20 = load %struct.lua_State.215*, %struct.lua_State.215** %1, align 8, !tbaa !301
  %21 = getelementptr inbounds %struct.lua_State.215, %struct.lua_State.215* %20, i64 0, i32 9
  %22 = bitcast %struct.lua_TValue.218** %21 to i64*
  %23 = load i64, i64* %22, align 8, !tbaa !12
  %24 = getelementptr inbounds %struct.lua_State.215, %struct.lua_State.215* %20, i64 0, i32 4
  %25 = bitcast %struct.lua_TValue.218** %24 to i64*
  %26 = load i64, i64* %25, align 8, !tbaa !1
  %27 = sub i64 %23, %26
  %28 = icmp slt i64 %27, 17
  %29 = inttoptr i64 %26 to %struct.lua_TValue.218*
  br i1 %28, label %30, label %31

; <label>:30                                      ; preds = %12
  tail call void bitcast (void (%struct.lua_State*, i32)* @luaD_growstack to void (%struct.lua_State.215*, i32)*)(%struct.lua_State.215* %20, i32 1) #1
  %.pre66 = load %struct.lua_State.215*, %struct.lua_State.215** %1, align 8, !tbaa !301
  %.phi.trans.insert = getelementptr inbounds %struct.lua_State.215, %struct.lua_State.215* %.pre66, i64 0, i32 4
  %.pre67 = load %struct.lua_TValue.218*, %struct.lua_TValue.218** %.phi.trans.insert, align 8, !tbaa !1
  br label %31

; <label>:31                                      ; preds = %12, %30
  %32 = phi %struct.lua_TValue.218* [ %29, %12 ], [ %.pre67, %30 ]
  %33 = phi %struct.lua_State.215* [ %20, %12 ], [ %.pre66, %30 ]
  %34 = getelementptr inbounds %struct.lua_State.215, %struct.lua_State.215* %33, i64 0, i32 4
  %35 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %32, i64 1
  store %struct.lua_TValue.218* %35, %struct.lua_TValue.218** %34, align 8, !tbaa !1
  %36 = bitcast i64* %size.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %36) #1
  %37 = getelementptr inbounds %struct.LoadState, %struct.LoadState* %S, i64 0, i32 1
  %38 = load %struct.Zio.359*, %struct.Zio.359** %37, align 8, !tbaa !302
  %39 = call i64 bitcast (i64 (%struct.Zio*, i8*, i64)* @luaZ_read to i64 (%struct.Zio.359*, i8*, i64)*)(%struct.Zio.359* %38, i8* %36, i64 8) #1
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %LoadBlock.exit, label %41

; <label>:41                                      ; preds = %31
  %42 = load %struct.lua_State.215*, %struct.lua_State.215** %1, align 8, !tbaa !301
  %43 = getelementptr inbounds %struct.LoadState, %struct.LoadState* %S, i64 0, i32 3
  %44 = load i8*, i8** %43, align 8, !tbaa !299
  %45 = call i8* (%struct.lua_State.215*, i8*, ...) @luaO_pushfstring(%struct.lua_State.215* %42, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5.694, i64 0, i64 0), i8* %44, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4.695, i64 0, i64 0)) #1
  %46 = load %struct.lua_State.215*, %struct.lua_State.215** %1, align 8, !tbaa !301
  call void bitcast (void (%struct.lua_State*, i32)* @luaD_throw to void (%struct.lua_State.215*, i32)*)(%struct.lua_State.215* %46, i32 3) #1
  br label %LoadBlock.exit

LoadBlock.exit:                                   ; preds = %31, %41
  %47 = load i64, i64* %size.i, align 8, !tbaa !39
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %LoadString.exit, label %49

; <label>:49                                      ; preds = %LoadBlock.exit
  %50 = load %struct.lua_State.215*, %struct.lua_State.215** %1, align 8, !tbaa !301
  %51 = getelementptr inbounds %struct.LoadState, %struct.LoadState* %S, i64 0, i32 2
  %52 = load %struct.Mbuffer*, %struct.Mbuffer** %51, align 8, !tbaa !303
  %53 = call i8* bitcast (i8* (%struct.lua_State*, %struct.Mbuffer*, i64)* @luaZ_openspace to i8* (%struct.lua_State.215*, %struct.Mbuffer*, i64)*)(%struct.lua_State.215* %50, %struct.Mbuffer* %52, i64 %47) #1
  %54 = load i64, i64* %size.i, align 8, !tbaa !39
  %55 = load %struct.Zio.359*, %struct.Zio.359** %37, align 8, !tbaa !302
  %56 = call i64 bitcast (i64 (%struct.Zio*, i8*, i64)* @luaZ_read to i64 (%struct.Zio.359*, i8*, i64)*)(%struct.Zio.359* %55, i8* %53, i64 %54) #1
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %LoadBlock.exit32, label %58

; <label>:58                                      ; preds = %49
  %59 = load %struct.lua_State.215*, %struct.lua_State.215** %1, align 8, !tbaa !301
  %60 = getelementptr inbounds %struct.LoadState, %struct.LoadState* %S, i64 0, i32 3
  %61 = load i8*, i8** %60, align 8, !tbaa !299
  %62 = call i8* (%struct.lua_State.215*, i8*, ...) @luaO_pushfstring(%struct.lua_State.215* %59, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5.694, i64 0, i64 0), i8* %61, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4.695, i64 0, i64 0)) #1
  %63 = load %struct.lua_State.215*, %struct.lua_State.215** %1, align 8, !tbaa !301
  call void bitcast (void (%struct.lua_State*, i32)* @luaD_throw to void (%struct.lua_State.215*, i32)*)(%struct.lua_State.215* %63, i32 3) #1
  br label %LoadBlock.exit32

LoadBlock.exit32:                                 ; preds = %49, %58
  %64 = load %struct.lua_State.215*, %struct.lua_State.215** %1, align 8, !tbaa !301
  %65 = load i64, i64* %size.i, align 8, !tbaa !39
  %66 = add i64 %65, -1
  %67 = call %union.TString.210* bitcast (%union.TString* (%struct.lua_State*, i8*, i64)* @luaS_newlstr to %union.TString.210* (%struct.lua_State.215*, i8*, i64)*)(%struct.lua_State.215* %64, i8* %53, i64 %66) #1
  br label %LoadString.exit

LoadString.exit:                                  ; preds = %LoadBlock.exit, %LoadBlock.exit32
  %.0.i = phi %union.TString.210* [ %67, %LoadBlock.exit32 ], [ null, %LoadBlock.exit ]
  call void @llvm.lifetime.end(i64 8, i8* %36) #1
  %68 = getelementptr inbounds %struct.Proto.358, %struct.Proto.358* %14, i64 0, i32 9
  %69 = icmp eq %union.TString.210* %.0.i, null
  %p. = select i1 %69, %union.TString.210* %p, %union.TString.210* %.0.i
  store %union.TString.210* %p., %union.TString.210** %68, align 8, !tbaa !133
  %70 = bitcast i32* %x.i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %70) #1
  %71 = load %struct.Zio.359*, %struct.Zio.359** %37, align 8, !tbaa !302
  %72 = call i64 bitcast (i64 (%struct.Zio*, i8*, i64)* @luaZ_read to i64 (%struct.Zio.359*, i8*, i64)*)(%struct.Zio.359* %71, i8* %70, i64 4) #1
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %LoadBlock.exit.i, label %74

; <label>:74                                      ; preds = %LoadString.exit
  %75 = load %struct.lua_State.215*, %struct.lua_State.215** %1, align 8, !tbaa !301
  %76 = getelementptr inbounds %struct.LoadState, %struct.LoadState* %S, i64 0, i32 3
  %77 = load i8*, i8** %76, align 8, !tbaa !299
  %78 = call i8* (%struct.lua_State.215*, i8*, ...) @luaO_pushfstring(%struct.lua_State.215* %75, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5.694, i64 0, i64 0), i8* %77, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4.695, i64 0, i64 0)) #1
  %79 = load %struct.lua_State.215*, %struct.lua_State.215** %1, align 8, !tbaa !301
  call void bitcast (void (%struct.lua_State*, i32)* @luaD_throw to void (%struct.lua_State.215*, i32)*)(%struct.lua_State.215* %79, i32 3) #1
  br label %LoadBlock.exit.i

LoadBlock.exit.i:                                 ; preds = %74, %LoadString.exit
  %80 = load i32, i32* %x.i, align 4, !tbaa !38
  %81 = icmp slt i32 %80, 0
  br i1 %81, label %82, label %LoadInt.exit

; <label>:82                                      ; preds = %LoadBlock.exit.i
  %83 = load %struct.lua_State.215*, %struct.lua_State.215** %1, align 8, !tbaa !301
  %84 = getelementptr inbounds %struct.LoadState, %struct.LoadState* %S, i64 0, i32 3
  %85 = load i8*, i8** %84, align 8, !tbaa !299
  %86 = call i8* (%struct.lua_State.215*, i8*, ...) @luaO_pushfstring(%struct.lua_State.215* %83, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5.694, i64 0, i64 0), i8* %85, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.8.699, i64 0, i64 0)) #1
  %87 = load %struct.lua_State.215*, %struct.lua_State.215** %1, align 8, !tbaa !301
  call void bitcast (void (%struct.lua_State*, i32)* @luaD_throw to void (%struct.lua_State.215*, i32)*)(%struct.lua_State.215* %87, i32 3) #1
  %.pre.i = load i32, i32* %x.i, align 4, !tbaa !38
  br label %LoadInt.exit

LoadInt.exit:                                     ; preds = %LoadBlock.exit.i, %82
  %88 = phi i32 [ %.pre.i, %82 ], [ %80, %LoadBlock.exit.i ]
  call void @llvm.lifetime.end(i64 4, i8* %70) #1
  %89 = getelementptr inbounds %struct.Proto.358, %struct.Proto.358* %14, i64 0, i32 16
  store i32 %88, i32* %89, align 4, !tbaa !165
  %90 = bitcast i32* %x.i.1 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %90) #1
  %91 = load %struct.Zio.359*, %struct.Zio.359** %37, align 8, !tbaa !302
  %92 = call i64 bitcast (i64 (%struct.Zio*, i8*, i64)* @luaZ_read to i64 (%struct.Zio.359*, i8*, i64)*)(%struct.Zio.359* %91, i8* %90, i64 4) #1
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %LoadBlock.exit.i.2, label %94

; <label>:94                                      ; preds = %LoadInt.exit
  %95 = load %struct.lua_State.215*, %struct.lua_State.215** %1, align 8, !tbaa !301
  %96 = getelementptr inbounds %struct.LoadState, %struct.LoadState* %S, i64 0, i32 3
  %97 = load i8*, i8** %96, align 8, !tbaa !299
  %98 = call i8* (%struct.lua_State.215*, i8*, ...) @luaO_pushfstring(%struct.lua_State.215* %95, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5.694, i64 0, i64 0), i8* %97, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4.695, i64 0, i64 0)) #1
  %99 = load %struct.lua_State.215*, %struct.lua_State.215** %1, align 8, !tbaa !301
  call void bitcast (void (%struct.lua_State*, i32)* @luaD_throw to void (%struct.lua_State.215*, i32)*)(%struct.lua_State.215* %99, i32 3) #1
  br label %LoadBlock.exit.i.2

LoadBlock.exit.i.2:                               ; preds = %94, %LoadInt.exit
  %100 = load i32, i32* %x.i.1, align 4, !tbaa !38
  %101 = icmp slt i32 %100, 0
  br i1 %101, label %102, label %LoadInt.exit4

; <label>:102                                     ; preds = %LoadBlock.exit.i.2
  %103 = load %struct.lua_State.215*, %struct.lua_State.215** %1, align 8, !tbaa !301
  %104 = getelementptr inbounds %struct.LoadState, %struct.LoadState* %S, i64 0, i32 3
  %105 = load i8*, i8** %104, align 8, !tbaa !299
  %106 = call i8* (%struct.lua_State.215*, i8*, ...) @luaO_pushfstring(%struct.lua_State.215* %103, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5.694, i64 0, i64 0), i8* %105, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.8.699, i64 0, i64 0)) #1
  %107 = load %struct.lua_State.215*, %struct.lua_State.215** %1, align 8, !tbaa !301
  call void bitcast (void (%struct.lua_State*, i32)* @luaD_throw to void (%struct.lua_State.215*, i32)*)(%struct.lua_State.215* %107, i32 3) #1
  %.pre.i.3 = load i32, i32* %x.i.1, align 4, !tbaa !38
  br label %LoadInt.exit4

LoadInt.exit4:                                    ; preds = %LoadBlock.exit.i.2, %102
  %108 = phi i32 [ %.pre.i.3, %102 ], [ %100, %LoadBlock.exit.i.2 ]
  call void @llvm.lifetime.end(i64 4, i8* %90) #1
  %109 = getelementptr inbounds %struct.Proto.358, %struct.Proto.358* %14, i64 0, i32 17
  store i32 %108, i32* %109, align 4, !tbaa !134
  call void @llvm.lifetime.start(i64 1, i8* nonnull %x.i.5) #1
  %110 = load %struct.Zio.359*, %struct.Zio.359** %37, align 8, !tbaa !302
  %111 = call i64 bitcast (i64 (%struct.Zio*, i8*, i64)* @luaZ_read to i64 (%struct.Zio.359*, i8*, i64)*)(%struct.Zio.359* %110, i8* nonnull %x.i.5, i64 1) #1
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %LoadChar.exit, label %113

; <label>:113                                     ; preds = %LoadInt.exit4
  %114 = load %struct.lua_State.215*, %struct.lua_State.215** %1, align 8, !tbaa !301
  %115 = getelementptr inbounds %struct.LoadState, %struct.LoadState* %S, i64 0, i32 3
  %116 = load i8*, i8** %115, align 8, !tbaa !299
  %117 = call i8* (%struct.lua_State.215*, i8*, ...) @luaO_pushfstring(%struct.lua_State.215* %114, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5.694, i64 0, i64 0), i8* %116, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4.695, i64 0, i64 0)) #1
  %118 = load %struct.lua_State.215*, %struct.lua_State.215** %1, align 8, !tbaa !301
  call void bitcast (void (%struct.lua_State*, i32)* @luaD_throw to void (%struct.lua_State.215*, i32)*)(%struct.lua_State.215* %118, i32 3) #1
  br label %LoadChar.exit

LoadChar.exit:                                    ; preds = %LoadInt.exit4, %113
  %119 = load i8, i8* %x.i.5, align 1, !tbaa !76
  call void @llvm.lifetime.end(i64 1, i8* nonnull %x.i.5) #1
  %120 = getelementptr inbounds %struct.Proto.358, %struct.Proto.358* %14, i64 0, i32 19
  store i8 %119, i8* %120, align 1, !tbaa !138
  call void @llvm.lifetime.start(i64 1, i8* nonnull %x.i.7) #1
  %121 = load %struct.Zio.359*, %struct.Zio.359** %37, align 8, !tbaa !302
  %122 = call i64 bitcast (i64 (%struct.Zio*, i8*, i64)* @luaZ_read to i64 (%struct.Zio.359*, i8*, i64)*)(%struct.Zio.359* %121, i8* nonnull %x.i.7, i64 1) #1
  %123 = icmp eq i64 %122, 0
  br i1 %123, label %LoadChar.exit9, label %124

; <label>:124                                     ; preds = %LoadChar.exit
  %125 = load %struct.lua_State.215*, %struct.lua_State.215** %1, align 8, !tbaa !301
  %126 = getelementptr inbounds %struct.LoadState, %struct.LoadState* %S, i64 0, i32 3
  %127 = load i8*, i8** %126, align 8, !tbaa !299
  %128 = call i8* (%struct.lua_State.215*, i8*, ...) @luaO_pushfstring(%struct.lua_State.215* %125, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5.694, i64 0, i64 0), i8* %127, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4.695, i64 0, i64 0)) #1
  %129 = load %struct.lua_State.215*, %struct.lua_State.215** %1, align 8, !tbaa !301
  call void bitcast (void (%struct.lua_State*, i32)* @luaD_throw to void (%struct.lua_State.215*, i32)*)(%struct.lua_State.215* %129, i32 3) #1
  br label %LoadChar.exit9

LoadChar.exit9:                                   ; preds = %LoadChar.exit, %124
  %130 = load i8, i8* %x.i.7, align 1, !tbaa !76
  call void @llvm.lifetime.end(i64 1, i8* nonnull %x.i.7) #1
  %131 = getelementptr inbounds %struct.Proto.358, %struct.Proto.358* %14, i64 0, i32 20
  store i8 %130, i8* %131, align 1, !tbaa !136
  call void @llvm.lifetime.start(i64 1, i8* nonnull %x.i.10) #1
  %132 = load %struct.Zio.359*, %struct.Zio.359** %37, align 8, !tbaa !302
  %133 = call i64 bitcast (i64 (%struct.Zio*, i8*, i64)* @luaZ_read to i64 (%struct.Zio.359*, i8*, i64)*)(%struct.Zio.359* %132, i8* nonnull %x.i.10, i64 1) #1
  %134 = icmp eq i64 %133, 0
  br i1 %134, label %LoadChar.exit12, label %135

; <label>:135                                     ; preds = %LoadChar.exit9
  %136 = load %struct.lua_State.215*, %struct.lua_State.215** %1, align 8, !tbaa !301
  %137 = getelementptr inbounds %struct.LoadState, %struct.LoadState* %S, i64 0, i32 3
  %138 = load i8*, i8** %137, align 8, !tbaa !299
  %139 = call i8* (%struct.lua_State.215*, i8*, ...) @luaO_pushfstring(%struct.lua_State.215* %136, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5.694, i64 0, i64 0), i8* %138, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4.695, i64 0, i64 0)) #1
  %140 = load %struct.lua_State.215*, %struct.lua_State.215** %1, align 8, !tbaa !301
  call void bitcast (void (%struct.lua_State*, i32)* @luaD_throw to void (%struct.lua_State.215*, i32)*)(%struct.lua_State.215* %140, i32 3) #1
  br label %LoadChar.exit12

LoadChar.exit12:                                  ; preds = %LoadChar.exit9, %135
  %141 = load i8, i8* %x.i.10, align 1, !tbaa !76
  call void @llvm.lifetime.end(i64 1, i8* nonnull %x.i.10) #1
  %142 = getelementptr inbounds %struct.Proto.358, %struct.Proto.358* %14, i64 0, i32 21
  store i8 %141, i8* %142, align 1, !tbaa !137
  call void @llvm.lifetime.start(i64 1, i8* nonnull %x.i.13) #1
  %143 = load %struct.Zio.359*, %struct.Zio.359** %37, align 8, !tbaa !302
  %144 = call i64 bitcast (i64 (%struct.Zio*, i8*, i64)* @luaZ_read to i64 (%struct.Zio.359*, i8*, i64)*)(%struct.Zio.359* %143, i8* nonnull %x.i.13, i64 1) #1
  %145 = icmp eq i64 %144, 0
  br i1 %145, label %LoadChar.exit15, label %146

; <label>:146                                     ; preds = %LoadChar.exit12
  %147 = load %struct.lua_State.215*, %struct.lua_State.215** %1, align 8, !tbaa !301
  %148 = getelementptr inbounds %struct.LoadState, %struct.LoadState* %S, i64 0, i32 3
  %149 = load i8*, i8** %148, align 8, !tbaa !299
  %150 = call i8* (%struct.lua_State.215*, i8*, ...) @luaO_pushfstring(%struct.lua_State.215* %147, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5.694, i64 0, i64 0), i8* %149, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4.695, i64 0, i64 0)) #1
  %151 = load %struct.lua_State.215*, %struct.lua_State.215** %1, align 8, !tbaa !301
  call void bitcast (void (%struct.lua_State*, i32)* @luaD_throw to void (%struct.lua_State.215*, i32)*)(%struct.lua_State.215* %151, i32 3) #1
  br label %LoadChar.exit15

LoadChar.exit15:                                  ; preds = %LoadChar.exit12, %146
  %152 = load i8, i8* %x.i.13, align 1, !tbaa !76
  call void @llvm.lifetime.end(i64 1, i8* nonnull %x.i.13) #1
  %153 = getelementptr inbounds %struct.Proto.358, %struct.Proto.358* %14, i64 0, i32 22
  store i8 %152, i8* %153, align 1, !tbaa !100
  %154 = bitcast i32* %x.i.i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %154) #1
  %155 = load %struct.Zio.359*, %struct.Zio.359** %37, align 8, !tbaa !302
  %156 = call i64 bitcast (i64 (%struct.Zio*, i8*, i64)* @luaZ_read to i64 (%struct.Zio.359*, i8*, i64)*)(%struct.Zio.359* %155, i8* %154, i64 4) #1
  %157 = icmp eq i64 %156, 0
  br i1 %157, label %LoadBlock.exit.i.i, label %158

; <label>:158                                     ; preds = %LoadChar.exit15
  %159 = load %struct.lua_State.215*, %struct.lua_State.215** %1, align 8, !tbaa !301
  %160 = getelementptr inbounds %struct.LoadState, %struct.LoadState* %S, i64 0, i32 3
  %161 = load i8*, i8** %160, align 8, !tbaa !299
  %162 = call i8* (%struct.lua_State.215*, i8*, ...) @luaO_pushfstring(%struct.lua_State.215* %159, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5.694, i64 0, i64 0), i8* %161, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4.695, i64 0, i64 0)) #1
  %163 = load %struct.lua_State.215*, %struct.lua_State.215** %1, align 8, !tbaa !301
  call void bitcast (void (%struct.lua_State*, i32)* @luaD_throw to void (%struct.lua_State.215*, i32)*)(%struct.lua_State.215* %163, i32 3) #1
  br label %LoadBlock.exit.i.i

LoadBlock.exit.i.i:                               ; preds = %158, %LoadChar.exit15
  %164 = load i32, i32* %x.i.i, align 4, !tbaa !38
  %165 = icmp slt i32 %164, 0
  br i1 %165, label %LoadInt.exit.i, label %LoadInt.exit.thread.i

LoadInt.exit.thread.i:                            ; preds = %LoadBlock.exit.i.i
  call void @llvm.lifetime.end(i64 4, i8* %154) #1
  %166 = load %struct.lua_State.215*, %struct.lua_State.215** %1, align 8, !tbaa !301
  br label %174

LoadInt.exit.i:                                   ; preds = %LoadBlock.exit.i.i
  %167 = load %struct.lua_State.215*, %struct.lua_State.215** %1, align 8, !tbaa !301
  %168 = getelementptr inbounds %struct.LoadState, %struct.LoadState* %S, i64 0, i32 3
  %169 = load i8*, i8** %168, align 8, !tbaa !299
  %170 = call i8* (%struct.lua_State.215*, i8*, ...) @luaO_pushfstring(%struct.lua_State.215* %167, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5.694, i64 0, i64 0), i8* %169, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.8.699, i64 0, i64 0)) #1
  %171 = load %struct.lua_State.215*, %struct.lua_State.215** %1, align 8, !tbaa !301
  call void bitcast (void (%struct.lua_State*, i32)* @luaD_throw to void (%struct.lua_State.215*, i32)*)(%struct.lua_State.215* %171, i32 3) #1
  %.pre.i.i = load i32, i32* %x.i.i, align 4, !tbaa !38
  call void @llvm.lifetime.end(i64 4, i8* %154) #1
  %172 = icmp sgt i32 %.pre.i.i, -2
  %173 = load %struct.lua_State.215*, %struct.lua_State.215** %1, align 8, !tbaa !301
  br i1 %172, label %174, label %180

; <label>:174                                     ; preds = %LoadInt.exit.i, %LoadInt.exit.thread.i
  %175 = phi %struct.lua_State.215* [ %166, %LoadInt.exit.thread.i ], [ %173, %LoadInt.exit.i ]
  %176 = phi i32 [ %164, %LoadInt.exit.thread.i ], [ %.pre.i.i, %LoadInt.exit.i ]
  %177 = sext i32 %176 to i64
  %178 = shl nsw i64 %177, 2
  %179 = call i8* bitcast (i8* (%struct.lua_State*, i8*, i64, i64)* @luaM_realloc_ to i8* (%struct.lua_State.215*, i8*, i64, i64)*)(%struct.lua_State.215* %175, i8* null, i64 0, i64 %178) #1
  br label %182

; <label>:180                                     ; preds = %LoadInt.exit.i
  %181 = call i8* bitcast (i8* (%struct.lua_State*)* @luaM_toobig to i8* (%struct.lua_State.215*)*)(%struct.lua_State.215* %173) #1
  br label %182

; <label>:182                                     ; preds = %180, %174
  %183 = phi i32 [ %176, %174 ], [ %.pre.i.i, %180 ]
  %184 = phi i8* [ %179, %174 ], [ %181, %180 ]
  %185 = getelementptr inbounds %struct.Proto.358, %struct.Proto.358* %14, i64 0, i32 4
  %186 = bitcast i32** %185 to i8**
  store i8* %184, i8** %186, align 8, !tbaa !93
  %187 = getelementptr inbounds %struct.Proto.358, %struct.Proto.358* %14, i64 0, i32 12
  store i32 %183, i32* %187, align 4, !tbaa !112
  %188 = sext i32 %183 to i64
  %189 = shl nsw i64 %188, 2
  %190 = load %struct.Zio.359*, %struct.Zio.359** %37, align 8, !tbaa !302
  %191 = call i64 bitcast (i64 (%struct.Zio*, i8*, i64)* @luaZ_read to i64 (%struct.Zio.359*, i8*, i64)*)(%struct.Zio.359* %190, i8* %184, i64 %189) #1
  %192 = icmp eq i64 %191, 0
  br i1 %192, label %LoadCode.exit, label %193

; <label>:193                                     ; preds = %182
  %194 = load %struct.lua_State.215*, %struct.lua_State.215** %1, align 8, !tbaa !301
  %195 = getelementptr inbounds %struct.LoadState, %struct.LoadState* %S, i64 0, i32 3
  %196 = load i8*, i8** %195, align 8, !tbaa !299
  %197 = call i8* (%struct.lua_State.215*, i8*, ...) @luaO_pushfstring(%struct.lua_State.215* %194, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5.694, i64 0, i64 0), i8* %196, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4.695, i64 0, i64 0)) #1
  %198 = load %struct.lua_State.215*, %struct.lua_State.215** %1, align 8, !tbaa !301
  call void bitcast (void (%struct.lua_State*, i32)* @luaD_throw to void (%struct.lua_State.215*, i32)*)(%struct.lua_State.215* %198, i32 3) #1
  br label %LoadCode.exit

LoadCode.exit:                                    ; preds = %182, %193
  %199 = bitcast i32* %x.i.i.26 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %199) #1
  %200 = load %struct.Zio.359*, %struct.Zio.359** %37, align 8, !tbaa !302
  %201 = call i64 bitcast (i64 (%struct.Zio*, i8*, i64)* @luaZ_read to i64 (%struct.Zio.359*, i8*, i64)*)(%struct.Zio.359* %200, i8* %199, i64 4) #1
  %202 = icmp eq i64 %201, 0
  br i1 %202, label %LoadBlock.exit.i.i.27, label %203

; <label>:203                                     ; preds = %LoadCode.exit
  %204 = load %struct.lua_State.215*, %struct.lua_State.215** %1, align 8, !tbaa !301
  %205 = getelementptr inbounds %struct.LoadState, %struct.LoadState* %S, i64 0, i32 3
  %206 = load i8*, i8** %205, align 8, !tbaa !299
  %207 = call i8* (%struct.lua_State.215*, i8*, ...) @luaO_pushfstring(%struct.lua_State.215* %204, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5.694, i64 0, i64 0), i8* %206, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4.695, i64 0, i64 0)) #1
  %208 = load %struct.lua_State.215*, %struct.lua_State.215** %1, align 8, !tbaa !301
  call void bitcast (void (%struct.lua_State*, i32)* @luaD_throw to void (%struct.lua_State.215*, i32)*)(%struct.lua_State.215* %208, i32 3) #1
  br label %LoadBlock.exit.i.i.27

LoadBlock.exit.i.i.27:                            ; preds = %203, %LoadCode.exit
  %209 = load i32, i32* %x.i.i.26, align 4, !tbaa !38
  %210 = icmp slt i32 %209, 0
  br i1 %210, label %LoadInt.exit.i.29, label %LoadInt.exit.i.29.thread

LoadInt.exit.i.29.thread:                         ; preds = %LoadBlock.exit.i.i.27
  call void @llvm.lifetime.end(i64 4, i8* %199) #1
  %211 = load %struct.lua_State.215*, %struct.lua_State.215** %1, align 8, !tbaa !301
  br label %223

LoadInt.exit.i.29:                                ; preds = %LoadBlock.exit.i.i.27
  %212 = load %struct.lua_State.215*, %struct.lua_State.215** %1, align 8, !tbaa !301
  %213 = getelementptr inbounds %struct.LoadState, %struct.LoadState* %S, i64 0, i32 3
  %214 = load i8*, i8** %213, align 8, !tbaa !299
  %215 = call i8* (%struct.lua_State.215*, i8*, ...) @luaO_pushfstring(%struct.lua_State.215* %212, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5.694, i64 0, i64 0), i8* %214, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.8.699, i64 0, i64 0)) #1
  %216 = load %struct.lua_State.215*, %struct.lua_State.215** %1, align 8, !tbaa !301
  call void bitcast (void (%struct.lua_State*, i32)* @luaD_throw to void (%struct.lua_State.215*, i32)*)(%struct.lua_State.215* %216, i32 3) #1
  %.pre.i.i.28 = load i32, i32* %x.i.i.26, align 4, !tbaa !38
  call void @llvm.lifetime.end(i64 4, i8* %199) #1
  %217 = icmp sgt i32 %.pre.i.i.28, -2
  %218 = load %struct.lua_State.215*, %struct.lua_State.215** %1, align 8, !tbaa !301
  br i1 %217, label %223, label %.thread

.thread:                                          ; preds = %LoadInt.exit.i.29
  %219 = call i8* bitcast (i8* (%struct.lua_State*)* @luaM_toobig to i8* (%struct.lua_State.215*)*)(%struct.lua_State.215* %218) #1
  %220 = getelementptr inbounds %struct.Proto.358, %struct.Proto.358* %14, i64 0, i32 3
  %221 = bitcast %struct.lua_TValue.218** %220 to i8**
  store i8* %219, i8** %221, align 8, !tbaa !116
  %222 = getelementptr inbounds %struct.Proto.358, %struct.Proto.358* %14, i64 0, i32 11
  store i32 %.pre.i.i.28, i32* %222, align 4, !tbaa !115
  br label %._crit_edge

; <label>:223                                     ; preds = %LoadInt.exit.i.29, %LoadInt.exit.i.29.thread
  %224 = phi %struct.lua_State.215* [ %211, %LoadInt.exit.i.29.thread ], [ %218, %LoadInt.exit.i.29 ]
  %225 = phi i32 [ %209, %LoadInt.exit.i.29.thread ], [ %.pre.i.i.28, %LoadInt.exit.i.29 ]
  %226 = sext i32 %225 to i64
  %227 = shl nsw i64 %226, 4
  %228 = call i8* bitcast (i8* (%struct.lua_State*, i8*, i64, i64)* @luaM_realloc_ to i8* (%struct.lua_State.215*, i8*, i64, i64)*)(%struct.lua_State.215* %224, i8* null, i64 0, i64 %227) #1
  %229 = getelementptr inbounds %struct.Proto.358, %struct.Proto.358* %14, i64 0, i32 3
  %230 = bitcast %struct.lua_TValue.218** %229 to i8**
  store i8* %228, i8** %230, align 8, !tbaa !116
  %231 = getelementptr inbounds %struct.Proto.358, %struct.Proto.358* %14, i64 0, i32 11
  store i32 %225, i32* %231, align 4, !tbaa !115
  %232 = icmp sgt i32 %225, 0
  %233 = bitcast i8* %228 to %struct.lua_TValue.218*
  br i1 %232, label %.lr.ph45.preheader, label %._crit_edge

.lr.ph45.preheader:                               ; preds = %223
  %234 = add i32 %225, -1
  %xtraiter81 = and i32 %225, 7
  %lcmp.mod82 = icmp eq i32 %xtraiter81, 0
  br i1 %lcmp.mod82, label %.lr.ph45.preheader.split, label %.lr.ph45.prol.preheader

.lr.ph45.prol.preheader:                          ; preds = %.lr.ph45.preheader
  br label %.lr.ph45.prol

.lr.ph45.prol:                                    ; preds = %.lr.ph45.prol.preheader, %.lr.ph45.prol
  %indvars.iv62.prol = phi i64 [ %indvars.iv.next63.prol, %.lr.ph45.prol ], [ 0, %.lr.ph45.prol.preheader ]
  %prol.iter83 = phi i32 [ %prol.iter83.sub, %.lr.ph45.prol ], [ %xtraiter81, %.lr.ph45.prol.preheader ]
  %235 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %233, i64 %indvars.iv62.prol, i32 1
  store i32 0, i32* %235, align 4, !tbaa !10
  %indvars.iv.next63.prol = add nuw nsw i64 %indvars.iv62.prol, 1
  %prol.iter83.sub = add i32 %prol.iter83, -1
  %prol.iter83.cmp = icmp eq i32 %prol.iter83.sub, 0
  br i1 %prol.iter83.cmp, label %.lr.ph45.preheader.split.loopexit, label %.lr.ph45.prol, !llvm.loop !304

.lr.ph45.preheader.split.loopexit:                ; preds = %.lr.ph45.prol
  %indvars.iv.next63.prol.lcssa = phi i64 [ %indvars.iv.next63.prol, %.lr.ph45.prol ]
  br label %.lr.ph45.preheader.split

.lr.ph45.preheader.split:                         ; preds = %.lr.ph45.preheader.split.loopexit, %.lr.ph45.preheader
  %indvars.iv62.unr = phi i64 [ 0, %.lr.ph45.preheader ], [ %indvars.iv.next63.prol.lcssa, %.lr.ph45.preheader.split.loopexit ]
  %236 = icmp ult i32 %234, 7
  br i1 %236, label %.preheader35, label %.lr.ph45.preheader.split.split

.lr.ph45.preheader.split.split:                   ; preds = %.lr.ph45.preheader.split
  br label %.lr.ph45

.preheader35.unr-lcssa:                           ; preds = %.lr.ph45
  br label %.preheader35

.preheader35:                                     ; preds = %.lr.ph45.preheader.split, %.preheader35.unr-lcssa
  br i1 %232, label %.lr.ph42, label %._crit_edge

.lr.ph42:                                         ; preds = %.preheader35
  %237 = getelementptr inbounds %struct.LoadState, %struct.LoadState* %S, i64 0, i32 3
  %238 = bitcast double* %x.i.8.i to i8*
  %239 = bitcast double* %x.i.8.i to i64*
  %240 = bitcast i64* %size.i.i.24 to i8*
  %241 = getelementptr inbounds %struct.LoadState, %struct.LoadState* %S, i64 0, i32 2
  br label %250

.lr.ph45:                                         ; preds = %.lr.ph45, %.lr.ph45.preheader.split.split
  %indvars.iv62 = phi i64 [ %indvars.iv62.unr, %.lr.ph45.preheader.split.split ], [ %indvars.iv.next63.7, %.lr.ph45 ]
  %242 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %233, i64 %indvars.iv62, i32 1
  store i32 0, i32* %242, align 4, !tbaa !10
  %indvars.iv.next63 = add nuw nsw i64 %indvars.iv62, 1
  %243 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %233, i64 %indvars.iv.next63, i32 1
  store i32 0, i32* %243, align 4, !tbaa !10
  %indvars.iv.next63.1 = add nsw i64 %indvars.iv62, 2
  %244 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %233, i64 %indvars.iv.next63.1, i32 1
  store i32 0, i32* %244, align 4, !tbaa !10
  %indvars.iv.next63.2 = add nsw i64 %indvars.iv62, 3
  %245 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %233, i64 %indvars.iv.next63.2, i32 1
  store i32 0, i32* %245, align 4, !tbaa !10
  %indvars.iv.next63.3 = add nsw i64 %indvars.iv62, 4
  %246 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %233, i64 %indvars.iv.next63.3, i32 1
  store i32 0, i32* %246, align 4, !tbaa !10
  %indvars.iv.next63.4 = add nsw i64 %indvars.iv62, 5
  %247 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %233, i64 %indvars.iv.next63.4, i32 1
  store i32 0, i32* %247, align 4, !tbaa !10
  %indvars.iv.next63.5 = add nsw i64 %indvars.iv62, 6
  %248 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %233, i64 %indvars.iv.next63.5, i32 1
  store i32 0, i32* %248, align 4, !tbaa !10
  %indvars.iv.next63.6 = add nsw i64 %indvars.iv62, 7
  %249 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %233, i64 %indvars.iv.next63.6, i32 1
  store i32 0, i32* %249, align 4, !tbaa !10
  %indvars.iv.next63.7 = add nsw i64 %indvars.iv62, 8
  %lftr.wideiv64.7 = trunc i64 %indvars.iv.next63.7 to i32
  %exitcond65.7 = icmp eq i32 %lftr.wideiv64.7, %225
  br i1 %exitcond65.7, label %.preheader35.unr-lcssa, label %.lr.ph45

; <label>:250                                     ; preds = %._crit_edge.68, %.lr.ph42
  %251 = phi %struct.lua_TValue.218* [ %233, %.lr.ph42 ], [ %.pre69, %._crit_edge.68 ]
  %indvars.iv58 = phi i64 [ 0, %.lr.ph42 ], [ %indvars.iv.next59, %._crit_edge.68 ]
  %252 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %251, i64 %indvars.iv58
  call void @llvm.lifetime.start(i64 1, i8* nonnull %x.i.3.i) #1
  %253 = load %struct.Zio.359*, %struct.Zio.359** %37, align 8, !tbaa !302
  %254 = call i64 bitcast (i64 (%struct.Zio*, i8*, i64)* @luaZ_read to i64 (%struct.Zio.359*, i8*, i64)*)(%struct.Zio.359* %253, i8* nonnull %x.i.3.i, i64 1) #1
  %255 = icmp eq i64 %254, 0
  br i1 %255, label %LoadChar.exit.i, label %256

; <label>:256                                     ; preds = %250
  %257 = load %struct.lua_State.215*, %struct.lua_State.215** %1, align 8, !tbaa !301
  %258 = load i8*, i8** %237, align 8, !tbaa !299
  %259 = call i8* (%struct.lua_State.215*, i8*, ...) @luaO_pushfstring(%struct.lua_State.215* %257, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5.694, i64 0, i64 0), i8* %258, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4.695, i64 0, i64 0)) #1
  %260 = load %struct.lua_State.215*, %struct.lua_State.215** %1, align 8, !tbaa !301
  call void bitcast (void (%struct.lua_State*, i32)* @luaD_throw to void (%struct.lua_State.215*, i32)*)(%struct.lua_State.215* %260, i32 3) #1
  br label %LoadChar.exit.i

LoadChar.exit.i:                                  ; preds = %256, %250
  %261 = load i8, i8* %x.i.3.i, align 1, !tbaa !76
  %262 = sext i8 %261 to i32
  call void @llvm.lifetime.end(i64 1, i8* nonnull %x.i.3.i) #1
  switch i32 %262, label %321 [
    i32 0, label %263
    i32 1, label %265
    i32 3, label %279
    i32 4, label %291
  ]

; <label>:263                                     ; preds = %LoadChar.exit.i
  %264 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %251, i64 %indvars.iv58, i32 1
  store i32 0, i32* %264, align 4, !tbaa !10
  br label %326

; <label>:265                                     ; preds = %LoadChar.exit.i
  call void @llvm.lifetime.start(i64 1, i8* nonnull %x.i.5.i.25) #1
  %266 = load %struct.Zio.359*, %struct.Zio.359** %37, align 8, !tbaa !302
  %267 = call i64 bitcast (i64 (%struct.Zio*, i8*, i64)* @luaZ_read to i64 (%struct.Zio.359*, i8*, i64)*)(%struct.Zio.359* %266, i8* nonnull %x.i.5.i.25, i64 1) #1
  %268 = icmp eq i64 %267, 0
  br i1 %268, label %LoadChar.exit7.i, label %269

; <label>:269                                     ; preds = %265
  %270 = load %struct.lua_State.215*, %struct.lua_State.215** %1, align 8, !tbaa !301
  %271 = load i8*, i8** %237, align 8, !tbaa !299
  %272 = call i8* (%struct.lua_State.215*, i8*, ...) @luaO_pushfstring(%struct.lua_State.215* %270, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5.694, i64 0, i64 0), i8* %271, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4.695, i64 0, i64 0)) #1
  %273 = load %struct.lua_State.215*, %struct.lua_State.215** %1, align 8, !tbaa !301
  call void bitcast (void (%struct.lua_State*, i32)* @luaD_throw to void (%struct.lua_State.215*, i32)*)(%struct.lua_State.215* %273, i32 3) #1
  br label %LoadChar.exit7.i

LoadChar.exit7.i:                                 ; preds = %269, %265
  %274 = load i8, i8* %x.i.5.i.25, align 1, !tbaa !76
  call void @llvm.lifetime.end(i64 1, i8* nonnull %x.i.5.i.25) #1
  %275 = icmp ne i8 %274, 0
  %276 = zext i1 %275 to i32
  %277 = bitcast %struct.lua_TValue.218* %252 to i32*
  store i32 %276, i32* %277, align 4, !tbaa !38
  %278 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %251, i64 %indvars.iv58, i32 1
  store i32 1, i32* %278, align 4, !tbaa !10
  br label %326

; <label>:279                                     ; preds = %LoadChar.exit.i
  call void @llvm.lifetime.start(i64 8, i8* %238) #1
  %280 = load %struct.Zio.359*, %struct.Zio.359** %37, align 8, !tbaa !302
  %281 = call i64 bitcast (i64 (%struct.Zio*, i8*, i64)* @luaZ_read to i64 (%struct.Zio.359*, i8*, i64)*)(%struct.Zio.359* %280, i8* %238, i64 8) #1
  %282 = icmp eq i64 %281, 0
  br i1 %282, label %LoadNumber.exit.i, label %283

; <label>:283                                     ; preds = %279
  %284 = load %struct.lua_State.215*, %struct.lua_State.215** %1, align 8, !tbaa !301
  %285 = load i8*, i8** %237, align 8, !tbaa !299
  %286 = call i8* (%struct.lua_State.215*, i8*, ...) @luaO_pushfstring(%struct.lua_State.215* %284, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5.694, i64 0, i64 0), i8* %285, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4.695, i64 0, i64 0)) #1
  %287 = load %struct.lua_State.215*, %struct.lua_State.215** %1, align 8, !tbaa !301
  call void bitcast (void (%struct.lua_State*, i32)* @luaD_throw to void (%struct.lua_State.215*, i32)*)(%struct.lua_State.215* %287, i32 3) #1
  br label %LoadNumber.exit.i

LoadNumber.exit.i:                                ; preds = %283, %279
  %288 = load i64, i64* %239, align 8, !tbaa !36
  call void @llvm.lifetime.end(i64 8, i8* %238) #1
  %289 = bitcast %struct.lua_TValue.218* %252 to i64*
  store i64 %288, i64* %289, align 8, !tbaa !36
  %290 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %251, i64 %indvars.iv58, i32 1
  store i32 3, i32* %290, align 4, !tbaa !10
  br label %326

; <label>:291                                     ; preds = %LoadChar.exit.i
  call void @llvm.lifetime.start(i64 8, i8* %240) #1
  %292 = load %struct.Zio.359*, %struct.Zio.359** %37, align 8, !tbaa !302
  %293 = call i64 bitcast (i64 (%struct.Zio*, i8*, i64)* @luaZ_read to i64 (%struct.Zio.359*, i8*, i64)*)(%struct.Zio.359* %292, i8* %240, i64 8) #1
  %294 = icmp eq i64 %293, 0
  br i1 %294, label %LoadBlock.exit33, label %295

; <label>:295                                     ; preds = %291
  %296 = load %struct.lua_State.215*, %struct.lua_State.215** %1, align 8, !tbaa !301
  %297 = load i8*, i8** %237, align 8, !tbaa !299
  %298 = call i8* (%struct.lua_State.215*, i8*, ...) @luaO_pushfstring(%struct.lua_State.215* %296, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5.694, i64 0, i64 0), i8* %297, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4.695, i64 0, i64 0)) #1
  %299 = load %struct.lua_State.215*, %struct.lua_State.215** %1, align 8, !tbaa !301
  call void bitcast (void (%struct.lua_State*, i32)* @luaD_throw to void (%struct.lua_State.215*, i32)*)(%struct.lua_State.215* %299, i32 3) #1
  br label %LoadBlock.exit33

LoadBlock.exit33:                                 ; preds = %291, %295
  %300 = load i64, i64* %size.i.i.24, align 8, !tbaa !39
  %301 = icmp eq i64 %300, 0
  br i1 %301, label %LoadString.exit.i.31, label %302

; <label>:302                                     ; preds = %LoadBlock.exit33
  %303 = load %struct.lua_State.215*, %struct.lua_State.215** %1, align 8, !tbaa !301
  %304 = load %struct.Mbuffer*, %struct.Mbuffer** %241, align 8, !tbaa !303
  %305 = call i8* bitcast (i8* (%struct.lua_State*, %struct.Mbuffer*, i64)* @luaZ_openspace to i8* (%struct.lua_State.215*, %struct.Mbuffer*, i64)*)(%struct.lua_State.215* %303, %struct.Mbuffer* %304, i64 %300) #1
  %306 = load i64, i64* %size.i.i.24, align 8, !tbaa !39
  %307 = load %struct.Zio.359*, %struct.Zio.359** %37, align 8, !tbaa !302
  %308 = call i64 bitcast (i64 (%struct.Zio*, i8*, i64)* @luaZ_read to i64 (%struct.Zio.359*, i8*, i64)*)(%struct.Zio.359* %307, i8* %305, i64 %306) #1
  %309 = icmp eq i64 %308, 0
  br i1 %309, label %LoadBlock.exit34, label %310

; <label>:310                                     ; preds = %302
  %311 = load %struct.lua_State.215*, %struct.lua_State.215** %1, align 8, !tbaa !301
  %312 = load i8*, i8** %237, align 8, !tbaa !299
  %313 = call i8* (%struct.lua_State.215*, i8*, ...) @luaO_pushfstring(%struct.lua_State.215* %311, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5.694, i64 0, i64 0), i8* %312, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4.695, i64 0, i64 0)) #1
  %314 = load %struct.lua_State.215*, %struct.lua_State.215** %1, align 8, !tbaa !301
  call void bitcast (void (%struct.lua_State*, i32)* @luaD_throw to void (%struct.lua_State.215*, i32)*)(%struct.lua_State.215* %314, i32 3) #1
  br label %LoadBlock.exit34

LoadBlock.exit34:                                 ; preds = %302, %310
  %315 = load %struct.lua_State.215*, %struct.lua_State.215** %1, align 8, !tbaa !301
  %316 = load i64, i64* %size.i.i.24, align 8, !tbaa !39
  %317 = add i64 %316, -1
  %318 = call %union.TString.210* bitcast (%union.TString* (%struct.lua_State*, i8*, i64)* @luaS_newlstr to %union.TString.210* (%struct.lua_State.215*, i8*, i64)*)(%struct.lua_State.215* %315, i8* %305, i64 %317) #1
  br label %LoadString.exit.i.31

LoadString.exit.i.31:                             ; preds = %LoadBlock.exit34, %LoadBlock.exit33
  %.0.i.i.30 = phi %union.TString.210* [ %318, %LoadBlock.exit34 ], [ null, %LoadBlock.exit33 ]
  call void @llvm.lifetime.end(i64 8, i8* %240) #1
  %319 = bitcast %struct.lua_TValue.218* %252 to %union.TString.210**
  store %union.TString.210* %.0.i.i.30, %union.TString.210** %319, align 8, !tbaa !25
  %320 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %251, i64 %indvars.iv58, i32 1
  store i32 4, i32* %320, align 4, !tbaa !10
  br label %326

; <label>:321                                     ; preds = %LoadChar.exit.i
  %322 = load %struct.lua_State.215*, %struct.lua_State.215** %1, align 8, !tbaa !301
  %323 = load i8*, i8** %237, align 8, !tbaa !299
  %324 = call i8* (%struct.lua_State.215*, i8*, ...) @luaO_pushfstring(%struct.lua_State.215* %322, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5.694, i64 0, i64 0), i8* %323, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.9.700, i64 0, i64 0)) #1
  %325 = load %struct.lua_State.215*, %struct.lua_State.215** %1, align 8, !tbaa !301
  call void bitcast (void (%struct.lua_State*, i32)* @luaD_throw to void (%struct.lua_State.215*, i32)*)(%struct.lua_State.215* %325, i32 3) #1
  br label %326

; <label>:326                                     ; preds = %321, %LoadString.exit.i.31, %LoadNumber.exit.i, %LoadChar.exit7.i, %263
  %indvars.iv.next59 = add nuw nsw i64 %indvars.iv58, 1
  %lftr.wideiv60 = trunc i64 %indvars.iv.next59 to i32
  %exitcond61 = icmp eq i32 %lftr.wideiv60, %225
  br i1 %exitcond61, label %._crit_edge.loopexit, label %._crit_edge.68

._crit_edge.68:                                   ; preds = %326
  %.pre69 = load %struct.lua_TValue.218*, %struct.lua_TValue.218** %229, align 8, !tbaa !116
  br label %250

._crit_edge.loopexit:                             ; preds = %326
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %223, %.thread, %.preheader35
  %327 = bitcast i32* %x.i.10.i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %327) #1
  %328 = load %struct.Zio.359*, %struct.Zio.359** %37, align 8, !tbaa !302
  %329 = call i64 bitcast (i64 (%struct.Zio*, i8*, i64)* @luaZ_read to i64 (%struct.Zio.359*, i8*, i64)*)(%struct.Zio.359* %328, i8* %327, i64 4) #1
  %330 = icmp eq i64 %329, 0
  br i1 %330, label %LoadBlock.exit.i.11.i, label %331

; <label>:331                                     ; preds = %._crit_edge
  %332 = load %struct.lua_State.215*, %struct.lua_State.215** %1, align 8, !tbaa !301
  %333 = getelementptr inbounds %struct.LoadState, %struct.LoadState* %S, i64 0, i32 3
  %334 = load i8*, i8** %333, align 8, !tbaa !299
  %335 = call i8* (%struct.lua_State.215*, i8*, ...) @luaO_pushfstring(%struct.lua_State.215* %332, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5.694, i64 0, i64 0), i8* %334, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4.695, i64 0, i64 0)) #1
  %336 = load %struct.lua_State.215*, %struct.lua_State.215** %1, align 8, !tbaa !301
  call void bitcast (void (%struct.lua_State*, i32)* @luaD_throw to void (%struct.lua_State.215*, i32)*)(%struct.lua_State.215* %336, i32 3) #1
  br label %LoadBlock.exit.i.11.i

LoadBlock.exit.i.11.i:                            ; preds = %331, %._crit_edge
  %337 = load i32, i32* %x.i.10.i, align 4, !tbaa !38
  %338 = icmp slt i32 %337, 0
  br i1 %338, label %LoadInt.exit13.i, label %LoadInt.exit13.i.thread

LoadInt.exit13.i.thread:                          ; preds = %LoadBlock.exit.i.11.i
  call void @llvm.lifetime.end(i64 4, i8* %327) #1
  %339 = load %struct.lua_State.215*, %struct.lua_State.215** %1, align 8, !tbaa !301
  br label %351

LoadInt.exit13.i:                                 ; preds = %LoadBlock.exit.i.11.i
  %340 = load %struct.lua_State.215*, %struct.lua_State.215** %1, align 8, !tbaa !301
  %341 = getelementptr inbounds %struct.LoadState, %struct.LoadState* %S, i64 0, i32 3
  %342 = load i8*, i8** %341, align 8, !tbaa !299
  %343 = call i8* (%struct.lua_State.215*, i8*, ...) @luaO_pushfstring(%struct.lua_State.215* %340, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5.694, i64 0, i64 0), i8* %342, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.8.699, i64 0, i64 0)) #1
  %344 = load %struct.lua_State.215*, %struct.lua_State.215** %1, align 8, !tbaa !301
  call void bitcast (void (%struct.lua_State*, i32)* @luaD_throw to void (%struct.lua_State.215*, i32)*)(%struct.lua_State.215* %344, i32 3) #1
  %.pre.i.12.i = load i32, i32* %x.i.10.i, align 4, !tbaa !38
  call void @llvm.lifetime.end(i64 4, i8* %327) #1
  %345 = icmp sgt i32 %.pre.i.12.i, -2
  %346 = load %struct.lua_State.215*, %struct.lua_State.215** %1, align 8, !tbaa !301
  br i1 %345, label %351, label %.thread72

.thread72:                                        ; preds = %LoadInt.exit13.i
  %347 = call i8* bitcast (i8* (%struct.lua_State*)* @luaM_toobig to i8* (%struct.lua_State.215*)*)(%struct.lua_State.215* %346) #1
  %348 = getelementptr inbounds %struct.Proto.358, %struct.Proto.358* %14, i64 0, i32 5
  %349 = bitcast %struct.Proto.358*** %348 to i8**
  store i8* %347, i8** %349, align 8, !tbaa !140
  %350 = getelementptr inbounds %struct.Proto.358, %struct.Proto.358* %14, i64 0, i32 14
  store i32 %.pre.i.12.i, i32* %350, align 4, !tbaa !139
  br label %LoadConstants.exit

; <label>:351                                     ; preds = %LoadInt.exit13.i, %LoadInt.exit13.i.thread
  %352 = phi %struct.lua_State.215* [ %339, %LoadInt.exit13.i.thread ], [ %346, %LoadInt.exit13.i ]
  %353 = phi i32 [ %337, %LoadInt.exit13.i.thread ], [ %.pre.i.12.i, %LoadInt.exit13.i ]
  %354 = sext i32 %353 to i64
  %355 = shl nsw i64 %354, 3
  %356 = call i8* bitcast (i8* (%struct.lua_State*, i8*, i64, i64)* @luaM_realloc_ to i8* (%struct.lua_State.215*, i8*, i64, i64)*)(%struct.lua_State.215* %352, i8* null, i64 0, i64 %355) #1
  %357 = getelementptr inbounds %struct.Proto.358, %struct.Proto.358* %14, i64 0, i32 5
  %358 = bitcast %struct.Proto.358*** %357 to i8**
  store i8* %356, i8** %358, align 8, !tbaa !140
  %359 = getelementptr inbounds %struct.Proto.358, %struct.Proto.358* %14, i64 0, i32 14
  store i32 %353, i32* %359, align 4, !tbaa !139
  %360 = icmp sgt i32 %353, 0
  br i1 %360, label %.lr.ph40, label %LoadConstants.exit

.lr.ph40:                                         ; preds = %351
  %361 = bitcast i8* %356 to %struct.Proto.358**
  store %struct.Proto.358* null, %struct.Proto.358** %361, align 8, !tbaa !25
  %exitcond57.73 = icmp eq i32 %353, 1
  br i1 %exitcond57.73, label %.preheader, label %._crit_edge.70.preheader

._crit_edge.70.preheader:                         ; preds = %.lr.ph40
  %362 = add i32 %353, 3
  %363 = add i32 %353, -2
  %xtraiter78 = and i32 %362, 3
  %lcmp.mod79 = icmp eq i32 %xtraiter78, 0
  br i1 %lcmp.mod79, label %._crit_edge.70.preheader.split, label %._crit_edge.70.prol.preheader

._crit_edge.70.prol.preheader:                    ; preds = %._crit_edge.70.preheader
  br label %._crit_edge.70.prol

._crit_edge.70.prol:                              ; preds = %._crit_edge.70.prol.preheader, %._crit_edge.70.prol
  %indvars.iv.next5574.prol = phi i64 [ %indvars.iv.next55.prol, %._crit_edge.70.prol ], [ 1, %._crit_edge.70.prol.preheader ]
  %prol.iter80 = phi i32 [ %prol.iter80.sub, %._crit_edge.70.prol ], [ %xtraiter78, %._crit_edge.70.prol.preheader ]
  %.pre71.prol = load %struct.Proto.358**, %struct.Proto.358*** %357, align 8, !tbaa !140
  %364 = getelementptr inbounds %struct.Proto.358*, %struct.Proto.358** %.pre71.prol, i64 %indvars.iv.next5574.prol
  store %struct.Proto.358* null, %struct.Proto.358** %364, align 8, !tbaa !25
  %indvars.iv.next55.prol = add nuw nsw i64 %indvars.iv.next5574.prol, 1
  %prol.iter80.sub = add i32 %prol.iter80, -1
  %prol.iter80.cmp = icmp eq i32 %prol.iter80.sub, 0
  br i1 %prol.iter80.cmp, label %._crit_edge.70.preheader.split.loopexit, label %._crit_edge.70.prol, !llvm.loop !305

._crit_edge.70.preheader.split.loopexit:          ; preds = %._crit_edge.70.prol
  %indvars.iv.next55.prol.lcssa = phi i64 [ %indvars.iv.next55.prol, %._crit_edge.70.prol ]
  br label %._crit_edge.70.preheader.split

._crit_edge.70.preheader.split:                   ; preds = %._crit_edge.70.preheader.split.loopexit, %._crit_edge.70.preheader
  %indvars.iv.next5574.unr = phi i64 [ 1, %._crit_edge.70.preheader ], [ %indvars.iv.next55.prol.lcssa, %._crit_edge.70.preheader.split.loopexit ]
  %365 = icmp ult i32 %363, 3
  br i1 %365, label %.preheader.loopexit, label %._crit_edge.70.preheader.split.split

._crit_edge.70.preheader.split.split:             ; preds = %._crit_edge.70.preheader.split
  br label %._crit_edge.70

.preheader.loopexit.unr-lcssa:                    ; preds = %._crit_edge.70
  br label %.preheader.loopexit

.preheader.loopexit:                              ; preds = %._crit_edge.70.preheader.split, %.preheader.loopexit.unr-lcssa
  br label %.preheader

.preheader:                                       ; preds = %.preheader.loopexit, %.lr.ph40
  br i1 %360, label %.lr.ph.preheader, label %LoadConstants.exit

.lr.ph.preheader:                                 ; preds = %.preheader
  br label %.lr.ph

._crit_edge.70:                                   ; preds = %._crit_edge.70, %._crit_edge.70.preheader.split.split
  %indvars.iv.next5574 = phi i64 [ %indvars.iv.next5574.unr, %._crit_edge.70.preheader.split.split ], [ %indvars.iv.next55.3, %._crit_edge.70 ]
  %.pre71 = load %struct.Proto.358**, %struct.Proto.358*** %357, align 8, !tbaa !140
  %366 = getelementptr inbounds %struct.Proto.358*, %struct.Proto.358** %.pre71, i64 %indvars.iv.next5574
  store %struct.Proto.358* null, %struct.Proto.358** %366, align 8, !tbaa !25
  %indvars.iv.next55 = add nuw nsw i64 %indvars.iv.next5574, 1
  %.pre71.1 = load %struct.Proto.358**, %struct.Proto.358*** %357, align 8, !tbaa !140
  %367 = getelementptr inbounds %struct.Proto.358*, %struct.Proto.358** %.pre71.1, i64 %indvars.iv.next55
  store %struct.Proto.358* null, %struct.Proto.358** %367, align 8, !tbaa !25
  %indvars.iv.next55.1 = add nsw i64 %indvars.iv.next5574, 2
  %.pre71.2 = load %struct.Proto.358**, %struct.Proto.358*** %357, align 8, !tbaa !140
  %368 = getelementptr inbounds %struct.Proto.358*, %struct.Proto.358** %.pre71.2, i64 %indvars.iv.next55.1
  store %struct.Proto.358* null, %struct.Proto.358** %368, align 8, !tbaa !25
  %indvars.iv.next55.2 = add nsw i64 %indvars.iv.next5574, 3
  %.pre71.3 = load %struct.Proto.358**, %struct.Proto.358*** %357, align 8, !tbaa !140
  %369 = getelementptr inbounds %struct.Proto.358*, %struct.Proto.358** %.pre71.3, i64 %indvars.iv.next55.2
  store %struct.Proto.358* null, %struct.Proto.358** %369, align 8, !tbaa !25
  %indvars.iv.next55.3 = add nsw i64 %indvars.iv.next5574, 4
  %lftr.wideiv56.3 = trunc i64 %indvars.iv.next55.3 to i32
  %exitcond57.3 = icmp eq i32 %lftr.wideiv56.3, %353
  br i1 %exitcond57.3, label %.preheader.loopexit.unr-lcssa, label %._crit_edge.70

.lr.ph:                                           ; preds = %.lr.ph.preheader, %.lr.ph
  %indvars.iv = phi i64 [ %indvars.iv.next, %.lr.ph ], [ 0, %.lr.ph.preheader ]
  %370 = load %union.TString.210*, %union.TString.210** %68, align 8, !tbaa !133
  %371 = call fastcc %struct.Proto.358* @LoadFunction(%struct.LoadState* %S, %union.TString.210* %370) #1
  %372 = load %struct.Proto.358**, %struct.Proto.358*** %357, align 8, !tbaa !140
  %373 = getelementptr inbounds %struct.Proto.358*, %struct.Proto.358** %372, i64 %indvars.iv
  store %struct.Proto.358* %371, %struct.Proto.358** %373, align 8, !tbaa !25
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %lftr.wideiv52 = trunc i64 %indvars.iv.next to i32
  %exitcond53 = icmp eq i32 %lftr.wideiv52, %353
  br i1 %exitcond53, label %LoadConstants.exit.loopexit, label %.lr.ph

LoadConstants.exit.loopexit:                      ; preds = %.lr.ph
  br label %LoadConstants.exit

LoadConstants.exit:                               ; preds = %LoadConstants.exit.loopexit, %351, %.thread72, %.preheader
  %374 = bitcast i32* %x.i.i.17 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %374) #1
  %375 = load %struct.Zio.359*, %struct.Zio.359** %37, align 8, !tbaa !302
  %376 = call i64 bitcast (i64 (%struct.Zio*, i8*, i64)* @luaZ_read to i64 (%struct.Zio.359*, i8*, i64)*)(%struct.Zio.359* %375, i8* %374, i64 4) #1
  %377 = icmp eq i64 %376, 0
  br i1 %377, label %LoadBlock.exit.i.i.18, label %378

; <label>:378                                     ; preds = %LoadConstants.exit
  %379 = load %struct.lua_State.215*, %struct.lua_State.215** %1, align 8, !tbaa !301
  %380 = getelementptr inbounds %struct.LoadState, %struct.LoadState* %S, i64 0, i32 3
  %381 = load i8*, i8** %380, align 8, !tbaa !299
  %382 = call i8* (%struct.lua_State.215*, i8*, ...) @luaO_pushfstring(%struct.lua_State.215* %379, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5.694, i64 0, i64 0), i8* %381, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4.695, i64 0, i64 0)) #1
  %383 = load %struct.lua_State.215*, %struct.lua_State.215** %1, align 8, !tbaa !301
  call void bitcast (void (%struct.lua_State*, i32)* @luaD_throw to void (%struct.lua_State.215*, i32)*)(%struct.lua_State.215* %383, i32 3) #1
  br label %LoadBlock.exit.i.i.18

LoadBlock.exit.i.i.18:                            ; preds = %378, %LoadConstants.exit
  %384 = load i32, i32* %x.i.i.17, align 4, !tbaa !38
  %385 = icmp slt i32 %384, 0
  br i1 %385, label %LoadInt.exit.i.21, label %LoadInt.exit.thread.i.19

LoadInt.exit.thread.i.19:                         ; preds = %LoadBlock.exit.i.i.18
  call void @llvm.lifetime.end(i64 4, i8* %374) #1
  %386 = load %struct.lua_State.215*, %struct.lua_State.215** %1, align 8, !tbaa !301
  br label %394

LoadInt.exit.i.21:                                ; preds = %LoadBlock.exit.i.i.18
  %387 = load %struct.lua_State.215*, %struct.lua_State.215** %1, align 8, !tbaa !301
  %388 = getelementptr inbounds %struct.LoadState, %struct.LoadState* %S, i64 0, i32 3
  %389 = load i8*, i8** %388, align 8, !tbaa !299
  %390 = call i8* (%struct.lua_State.215*, i8*, ...) @luaO_pushfstring(%struct.lua_State.215* %387, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5.694, i64 0, i64 0), i8* %389, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.8.699, i64 0, i64 0)) #1
  %391 = load %struct.lua_State.215*, %struct.lua_State.215** %1, align 8, !tbaa !301
  call void bitcast (void (%struct.lua_State*, i32)* @luaD_throw to void (%struct.lua_State.215*, i32)*)(%struct.lua_State.215* %391, i32 3) #1
  %.pre.i.i.20 = load i32, i32* %x.i.i.17, align 4, !tbaa !38
  call void @llvm.lifetime.end(i64 4, i8* %374) #1
  %392 = icmp sgt i32 %.pre.i.i.20, -2
  %393 = load %struct.lua_State.215*, %struct.lua_State.215** %1, align 8, !tbaa !301
  br i1 %392, label %394, label %400

; <label>:394                                     ; preds = %LoadInt.exit.i.21, %LoadInt.exit.thread.i.19
  %395 = phi %struct.lua_State.215* [ %386, %LoadInt.exit.thread.i.19 ], [ %393, %LoadInt.exit.i.21 ]
  %396 = phi i32 [ %384, %LoadInt.exit.thread.i.19 ], [ %.pre.i.i.20, %LoadInt.exit.i.21 ]
  %397 = sext i32 %396 to i64
  %398 = shl nsw i64 %397, 2
  %399 = call i8* bitcast (i8* (%struct.lua_State*, i8*, i64, i64)* @luaM_realloc_ to i8* (%struct.lua_State.215*, i8*, i64, i64)*)(%struct.lua_State.215* %395, i8* null, i64 0, i64 %398) #1
  br label %402

; <label>:400                                     ; preds = %LoadInt.exit.i.21
  %401 = call i8* bitcast (i8* (%struct.lua_State*)* @luaM_toobig to i8* (%struct.lua_State.215*)*)(%struct.lua_State.215* %393) #1
  br label %402

; <label>:402                                     ; preds = %400, %394
  %403 = phi i32 [ %396, %394 ], [ %.pre.i.i.20, %400 ]
  %404 = phi i8* [ %399, %394 ], [ %401, %400 ]
  %405 = getelementptr inbounds %struct.Proto.358, %struct.Proto.358* %14, i64 0, i32 6
  %406 = bitcast i32** %405 to i8**
  store i8* %404, i8** %406, align 8, !tbaa !111
  %407 = getelementptr inbounds %struct.Proto.358, %struct.Proto.358* %14, i64 0, i32 13
  store i32 %403, i32* %407, align 4, !tbaa !114
  %408 = sext i32 %403 to i64
  %409 = shl nsw i64 %408, 2
  %410 = load %struct.Zio.359*, %struct.Zio.359** %37, align 8, !tbaa !302
  %411 = call i64 bitcast (i64 (%struct.Zio*, i8*, i64)* @luaZ_read to i64 (%struct.Zio.359*, i8*, i64)*)(%struct.Zio.359* %410, i8* %404, i64 %409) #1
  %412 = icmp eq i64 %411, 0
  br i1 %412, label %LoadBlock.exit.i.22, label %413

; <label>:413                                     ; preds = %402
  %414 = load %struct.lua_State.215*, %struct.lua_State.215** %1, align 8, !tbaa !301
  %415 = getelementptr inbounds %struct.LoadState, %struct.LoadState* %S, i64 0, i32 3
  %416 = load i8*, i8** %415, align 8, !tbaa !299
  %417 = call i8* (%struct.lua_State.215*, i8*, ...) @luaO_pushfstring(%struct.lua_State.215* %414, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5.694, i64 0, i64 0), i8* %416, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4.695, i64 0, i64 0)) #1
  %418 = load %struct.lua_State.215*, %struct.lua_State.215** %1, align 8, !tbaa !301
  call void bitcast (void (%struct.lua_State*, i32)* @luaD_throw to void (%struct.lua_State.215*, i32)*)(%struct.lua_State.215* %418, i32 3) #1
  br label %LoadBlock.exit.i.22

LoadBlock.exit.i.22:                              ; preds = %413, %402
  %419 = bitcast i32* %x.i.1.i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %419) #1
  %420 = load %struct.Zio.359*, %struct.Zio.359** %37, align 8, !tbaa !302
  %421 = call i64 bitcast (i64 (%struct.Zio*, i8*, i64)* @luaZ_read to i64 (%struct.Zio.359*, i8*, i64)*)(%struct.Zio.359* %420, i8* %419, i64 4) #1
  %422 = icmp eq i64 %421, 0
  br i1 %422, label %LoadBlock.exit.i.2.i, label %423

; <label>:423                                     ; preds = %LoadBlock.exit.i.22
  %424 = load %struct.lua_State.215*, %struct.lua_State.215** %1, align 8, !tbaa !301
  %425 = getelementptr inbounds %struct.LoadState, %struct.LoadState* %S, i64 0, i32 3
  %426 = load i8*, i8** %425, align 8, !tbaa !299
  %427 = call i8* (%struct.lua_State.215*, i8*, ...) @luaO_pushfstring(%struct.lua_State.215* %424, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5.694, i64 0, i64 0), i8* %426, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4.695, i64 0, i64 0)) #1
  %428 = load %struct.lua_State.215*, %struct.lua_State.215** %1, align 8, !tbaa !301
  call void bitcast (void (%struct.lua_State*, i32)* @luaD_throw to void (%struct.lua_State.215*, i32)*)(%struct.lua_State.215* %428, i32 3) #1
  br label %LoadBlock.exit.i.2.i

LoadBlock.exit.i.2.i:                             ; preds = %423, %LoadBlock.exit.i.22
  %429 = load i32, i32* %x.i.1.i, align 4, !tbaa !38
  %430 = icmp slt i32 %429, 0
  br i1 %430, label %LoadInt.exit4.i, label %LoadInt.exit4.thread.i

LoadInt.exit4.thread.i:                           ; preds = %LoadBlock.exit.i.2.i
  call void @llvm.lifetime.end(i64 4, i8* %419) #1
  %431 = load %struct.lua_State.215*, %struct.lua_State.215** %1, align 8, !tbaa !301
  br label %443

LoadInt.exit4.i:                                  ; preds = %LoadBlock.exit.i.2.i
  %432 = load %struct.lua_State.215*, %struct.lua_State.215** %1, align 8, !tbaa !301
  %433 = getelementptr inbounds %struct.LoadState, %struct.LoadState* %S, i64 0, i32 3
  %434 = load i8*, i8** %433, align 8, !tbaa !299
  %435 = call i8* (%struct.lua_State.215*, i8*, ...) @luaO_pushfstring(%struct.lua_State.215* %432, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5.694, i64 0, i64 0), i8* %434, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.8.699, i64 0, i64 0)) #1
  %436 = load %struct.lua_State.215*, %struct.lua_State.215** %1, align 8, !tbaa !301
  call void bitcast (void (%struct.lua_State*, i32)* @luaD_throw to void (%struct.lua_State.215*, i32)*)(%struct.lua_State.215* %436, i32 3) #1
  %.pre.i.3.i = load i32, i32* %x.i.1.i, align 4, !tbaa !38
  call void @llvm.lifetime.end(i64 4, i8* %419) #1
  %437 = icmp sgt i32 %.pre.i.3.i, -2
  %438 = load %struct.lua_State.215*, %struct.lua_State.215** %1, align 8, !tbaa !301
  br i1 %437, label %443, label %.thread.i

.thread.i:                                        ; preds = %LoadInt.exit4.i
  %439 = call i8* bitcast (i8* (%struct.lua_State*)* @luaM_toobig to i8* (%struct.lua_State.215*)*)(%struct.lua_State.215* %438) #1
  %440 = getelementptr inbounds %struct.Proto.358, %struct.Proto.358* %14, i64 0, i32 7
  %441 = bitcast %struct.LocVar.357** %440 to i8**
  store i8* %439, i8** %441, align 8, !tbaa !167
  %442 = getelementptr inbounds %struct.Proto.358, %struct.Proto.358* %14, i64 0, i32 15
  store i32 %.pre.i.3.i, i32* %442, align 4, !tbaa !166
  br label %._crit_edge.31.i

; <label>:443                                     ; preds = %LoadInt.exit4.i, %LoadInt.exit4.thread.i
  %444 = phi %struct.lua_State.215* [ %431, %LoadInt.exit4.thread.i ], [ %438, %LoadInt.exit4.i ]
  %445 = phi i32 [ %429, %LoadInt.exit4.thread.i ], [ %.pre.i.3.i, %LoadInt.exit4.i ]
  %446 = sext i32 %445 to i64
  %447 = shl nsw i64 %446, 4
  %448 = call i8* bitcast (i8* (%struct.lua_State*, i8*, i64, i64)* @luaM_realloc_ to i8* (%struct.lua_State.215*, i8*, i64, i64)*)(%struct.lua_State.215* %444, i8* null, i64 0, i64 %447) #1
  %449 = getelementptr inbounds %struct.Proto.358, %struct.Proto.358* %14, i64 0, i32 7
  %450 = bitcast %struct.LocVar.357** %449 to i8**
  store i8* %448, i8** %450, align 8, !tbaa !167
  %451 = getelementptr inbounds %struct.Proto.358, %struct.Proto.358* %14, i64 0, i32 15
  store i32 %445, i32* %451, align 4, !tbaa !166
  %452 = icmp sgt i32 %445, 0
  %453 = bitcast i8* %448 to %struct.LocVar.357*
  br i1 %452, label %.lr.ph34.i.preheader, label %._crit_edge.31.i

.lr.ph34.i.preheader:                             ; preds = %443
  %454 = add i32 %445, -1
  %xtraiter75 = and i32 %445, 7
  %lcmp.mod76 = icmp eq i32 %xtraiter75, 0
  br i1 %lcmp.mod76, label %.lr.ph34.i.preheader.split, label %.lr.ph34.i.prol.preheader

.lr.ph34.i.prol.preheader:                        ; preds = %.lr.ph34.i.preheader
  br label %.lr.ph34.i.prol

.lr.ph34.i.prol:                                  ; preds = %.lr.ph34.i.prol.preheader, %.lr.ph34.i.prol
  %indvars.iv43.i.prol = phi i64 [ %indvars.iv.next44.i.prol, %.lr.ph34.i.prol ], [ 0, %.lr.ph34.i.prol.preheader ]
  %prol.iter77 = phi i32 [ %prol.iter77.sub, %.lr.ph34.i.prol ], [ %xtraiter75, %.lr.ph34.i.prol.preheader ]
  %455 = getelementptr inbounds %struct.LocVar.357, %struct.LocVar.357* %453, i64 %indvars.iv43.i.prol, i32 0
  store %union.TString.210* null, %union.TString.210** %455, align 8, !tbaa !168
  %indvars.iv.next44.i.prol = add nuw nsw i64 %indvars.iv43.i.prol, 1
  %prol.iter77.sub = add i32 %prol.iter77, -1
  %prol.iter77.cmp = icmp eq i32 %prol.iter77.sub, 0
  br i1 %prol.iter77.cmp, label %.lr.ph34.i.preheader.split.loopexit, label %.lr.ph34.i.prol, !llvm.loop !306

.lr.ph34.i.preheader.split.loopexit:              ; preds = %.lr.ph34.i.prol
  %indvars.iv.next44.i.prol.lcssa = phi i64 [ %indvars.iv.next44.i.prol, %.lr.ph34.i.prol ]
  br label %.lr.ph34.i.preheader.split

.lr.ph34.i.preheader.split:                       ; preds = %.lr.ph34.i.preheader.split.loopexit, %.lr.ph34.i.preheader
  %indvars.iv43.i.unr = phi i64 [ 0, %.lr.ph34.i.preheader ], [ %indvars.iv.next44.i.prol.lcssa, %.lr.ph34.i.preheader.split.loopexit ]
  %456 = icmp ult i32 %454, 7
  br i1 %456, label %.lr.ph30.i, label %.lr.ph34.i.preheader.split.split

.lr.ph34.i.preheader.split.split:                 ; preds = %.lr.ph34.i.preheader.split
  br label %.lr.ph34.i

.lr.ph30.i.unr-lcssa:                             ; preds = %.lr.ph34.i
  br label %.lr.ph30.i

.lr.ph30.i:                                       ; preds = %.lr.ph34.i.preheader.split, %.lr.ph30.i.unr-lcssa
  %457 = bitcast i64* %size.i.i to i8*
  %458 = bitcast i32* %x.i.5.i to i8*
  %459 = getelementptr inbounds %struct.LoadState, %struct.LoadState* %S, i64 0, i32 3
  %460 = bitcast i32* %x.i.9.i to i8*
  %461 = getelementptr inbounds %struct.LoadState, %struct.LoadState* %S, i64 0, i32 2
  br label %470

.lr.ph34.i:                                       ; preds = %.lr.ph34.i, %.lr.ph34.i.preheader.split.split
  %indvars.iv43.i = phi i64 [ %indvars.iv43.i.unr, %.lr.ph34.i.preheader.split.split ], [ %indvars.iv.next44.i.7, %.lr.ph34.i ]
  %462 = getelementptr inbounds %struct.LocVar.357, %struct.LocVar.357* %453, i64 %indvars.iv43.i, i32 0
  store %union.TString.210* null, %union.TString.210** %462, align 8, !tbaa !168
  %indvars.iv.next44.i = add nuw nsw i64 %indvars.iv43.i, 1
  %463 = getelementptr inbounds %struct.LocVar.357, %struct.LocVar.357* %453, i64 %indvars.iv.next44.i, i32 0
  store %union.TString.210* null, %union.TString.210** %463, align 8, !tbaa !168
  %indvars.iv.next44.i.1 = add nsw i64 %indvars.iv43.i, 2
  %464 = getelementptr inbounds %struct.LocVar.357, %struct.LocVar.357* %453, i64 %indvars.iv.next44.i.1, i32 0
  store %union.TString.210* null, %union.TString.210** %464, align 8, !tbaa !168
  %indvars.iv.next44.i.2 = add nsw i64 %indvars.iv43.i, 3
  %465 = getelementptr inbounds %struct.LocVar.357, %struct.LocVar.357* %453, i64 %indvars.iv.next44.i.2, i32 0
  store %union.TString.210* null, %union.TString.210** %465, align 8, !tbaa !168
  %indvars.iv.next44.i.3 = add nsw i64 %indvars.iv43.i, 4
  %466 = getelementptr inbounds %struct.LocVar.357, %struct.LocVar.357* %453, i64 %indvars.iv.next44.i.3, i32 0
  store %union.TString.210* null, %union.TString.210** %466, align 8, !tbaa !168
  %indvars.iv.next44.i.4 = add nsw i64 %indvars.iv43.i, 5
  %467 = getelementptr inbounds %struct.LocVar.357, %struct.LocVar.357* %453, i64 %indvars.iv.next44.i.4, i32 0
  store %union.TString.210* null, %union.TString.210** %467, align 8, !tbaa !168
  %indvars.iv.next44.i.5 = add nsw i64 %indvars.iv43.i, 6
  %468 = getelementptr inbounds %struct.LocVar.357, %struct.LocVar.357* %453, i64 %indvars.iv.next44.i.5, i32 0
  store %union.TString.210* null, %union.TString.210** %468, align 8, !tbaa !168
  %indvars.iv.next44.i.6 = add nsw i64 %indvars.iv43.i, 7
  %469 = getelementptr inbounds %struct.LocVar.357, %struct.LocVar.357* %453, i64 %indvars.iv.next44.i.6, i32 0
  store %union.TString.210* null, %union.TString.210** %469, align 8, !tbaa !168
  %indvars.iv.next44.i.7 = add nsw i64 %indvars.iv43.i, 8
  %lftr.wideiv50.7 = trunc i64 %indvars.iv.next44.i.7 to i32
  %exitcond51.7 = icmp eq i32 %lftr.wideiv50.7, %445
  br i1 %exitcond51.7, label %.lr.ph30.i.unr-lcssa, label %.lr.ph34.i

; <label>:470                                     ; preds = %LoadInt.exit12.i, %.lr.ph30.i
  %indvars.iv39.i = phi i64 [ 0, %.lr.ph30.i ], [ %indvars.iv.next40.i, %LoadInt.exit12.i ]
  call void @llvm.lifetime.start(i64 8, i8* %457) #1
  %471 = load %struct.Zio.359*, %struct.Zio.359** %37, align 8, !tbaa !302
  %472 = call i64 bitcast (i64 (%struct.Zio*, i8*, i64)* @luaZ_read to i64 (%struct.Zio.359*, i8*, i64)*)(%struct.Zio.359* %471, i8* %457, i64 8) #1
  %473 = icmp eq i64 %472, 0
  br i1 %473, label %LoadBlock.exit20.i, label %474

; <label>:474                                     ; preds = %470
  %475 = load %struct.lua_State.215*, %struct.lua_State.215** %1, align 8, !tbaa !301
  %476 = load i8*, i8** %459, align 8, !tbaa !299
  %477 = call i8* (%struct.lua_State.215*, i8*, ...) @luaO_pushfstring(%struct.lua_State.215* %475, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5.694, i64 0, i64 0), i8* %476, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4.695, i64 0, i64 0)) #1
  %478 = load %struct.lua_State.215*, %struct.lua_State.215** %1, align 8, !tbaa !301
  call void bitcast (void (%struct.lua_State*, i32)* @luaD_throw to void (%struct.lua_State.215*, i32)*)(%struct.lua_State.215* %478, i32 3) #1
  br label %LoadBlock.exit20.i

LoadBlock.exit20.i:                               ; preds = %474, %470
  %479 = load i64, i64* %size.i.i, align 8, !tbaa !39
  %480 = icmp eq i64 %479, 0
  br i1 %480, label %LoadString.exit.i, label %481

; <label>:481                                     ; preds = %LoadBlock.exit20.i
  %482 = load %struct.lua_State.215*, %struct.lua_State.215** %1, align 8, !tbaa !301
  %483 = load %struct.Mbuffer*, %struct.Mbuffer** %461, align 8, !tbaa !303
  %484 = call i8* bitcast (i8* (%struct.lua_State*, %struct.Mbuffer*, i64)* @luaZ_openspace to i8* (%struct.lua_State.215*, %struct.Mbuffer*, i64)*)(%struct.lua_State.215* %482, %struct.Mbuffer* %483, i64 %479) #1
  %485 = load i64, i64* %size.i.i, align 8, !tbaa !39
  %486 = load %struct.Zio.359*, %struct.Zio.359** %37, align 8, !tbaa !302
  %487 = call i64 bitcast (i64 (%struct.Zio*, i8*, i64)* @luaZ_read to i64 (%struct.Zio.359*, i8*, i64)*)(%struct.Zio.359* %486, i8* %484, i64 %485) #1
  %488 = icmp eq i64 %487, 0
  br i1 %488, label %LoadBlock.exit21.i, label %489

; <label>:489                                     ; preds = %481
  %490 = load %struct.lua_State.215*, %struct.lua_State.215** %1, align 8, !tbaa !301
  %491 = load i8*, i8** %459, align 8, !tbaa !299
  %492 = call i8* (%struct.lua_State.215*, i8*, ...) @luaO_pushfstring(%struct.lua_State.215* %490, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5.694, i64 0, i64 0), i8* %491, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4.695, i64 0, i64 0)) #1
  %493 = load %struct.lua_State.215*, %struct.lua_State.215** %1, align 8, !tbaa !301
  call void bitcast (void (%struct.lua_State*, i32)* @luaD_throw to void (%struct.lua_State.215*, i32)*)(%struct.lua_State.215* %493, i32 3) #1
  br label %LoadBlock.exit21.i

LoadBlock.exit21.i:                               ; preds = %489, %481
  %494 = load %struct.lua_State.215*, %struct.lua_State.215** %1, align 8, !tbaa !301
  %495 = load i64, i64* %size.i.i, align 8, !tbaa !39
  %496 = add i64 %495, -1
  %497 = call %union.TString.210* bitcast (%union.TString* (%struct.lua_State*, i8*, i64)* @luaS_newlstr to %union.TString.210* (%struct.lua_State.215*, i8*, i64)*)(%struct.lua_State.215* %494, i8* %484, i64 %496) #1
  br label %LoadString.exit.i

LoadString.exit.i:                                ; preds = %LoadBlock.exit21.i, %LoadBlock.exit20.i
  %.0.i.i = phi %union.TString.210* [ %497, %LoadBlock.exit21.i ], [ null, %LoadBlock.exit20.i ]
  call void @llvm.lifetime.end(i64 8, i8* %457) #1
  %498 = load %struct.LocVar.357*, %struct.LocVar.357** %449, align 8, !tbaa !167
  %499 = getelementptr inbounds %struct.LocVar.357, %struct.LocVar.357* %498, i64 %indvars.iv39.i, i32 0
  store %union.TString.210* %.0.i.i, %union.TString.210** %499, align 8, !tbaa !168
  call void @llvm.lifetime.start(i64 4, i8* %458) #1
  %500 = load %struct.Zio.359*, %struct.Zio.359** %37, align 8, !tbaa !302
  %501 = call i64 bitcast (i64 (%struct.Zio*, i8*, i64)* @luaZ_read to i64 (%struct.Zio.359*, i8*, i64)*)(%struct.Zio.359* %500, i8* %458, i64 4) #1
  %502 = icmp eq i64 %501, 0
  br i1 %502, label %LoadBlock.exit.i.6.i, label %503

; <label>:503                                     ; preds = %LoadString.exit.i
  %504 = load %struct.lua_State.215*, %struct.lua_State.215** %1, align 8, !tbaa !301
  %505 = load i8*, i8** %459, align 8, !tbaa !299
  %506 = call i8* (%struct.lua_State.215*, i8*, ...) @luaO_pushfstring(%struct.lua_State.215* %504, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5.694, i64 0, i64 0), i8* %505, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4.695, i64 0, i64 0)) #1
  %507 = load %struct.lua_State.215*, %struct.lua_State.215** %1, align 8, !tbaa !301
  call void bitcast (void (%struct.lua_State*, i32)* @luaD_throw to void (%struct.lua_State.215*, i32)*)(%struct.lua_State.215* %507, i32 3) #1
  br label %LoadBlock.exit.i.6.i

LoadBlock.exit.i.6.i:                             ; preds = %503, %LoadString.exit.i
  %508 = load i32, i32* %x.i.5.i, align 4, !tbaa !38
  %509 = icmp slt i32 %508, 0
  br i1 %509, label %510, label %LoadInt.exit8.i

; <label>:510                                     ; preds = %LoadBlock.exit.i.6.i
  %511 = load %struct.lua_State.215*, %struct.lua_State.215** %1, align 8, !tbaa !301
  %512 = load i8*, i8** %459, align 8, !tbaa !299
  %513 = call i8* (%struct.lua_State.215*, i8*, ...) @luaO_pushfstring(%struct.lua_State.215* %511, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5.694, i64 0, i64 0), i8* %512, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.8.699, i64 0, i64 0)) #1
  %514 = load %struct.lua_State.215*, %struct.lua_State.215** %1, align 8, !tbaa !301
  call void bitcast (void (%struct.lua_State*, i32)* @luaD_throw to void (%struct.lua_State.215*, i32)*)(%struct.lua_State.215* %514, i32 3) #1
  %.pre.i.7.i = load i32, i32* %x.i.5.i, align 4, !tbaa !38
  br label %LoadInt.exit8.i

LoadInt.exit8.i:                                  ; preds = %510, %LoadBlock.exit.i.6.i
  %515 = phi i32 [ %.pre.i.7.i, %510 ], [ %508, %LoadBlock.exit.i.6.i ]
  call void @llvm.lifetime.end(i64 4, i8* %458) #1
  %516 = load %struct.LocVar.357*, %struct.LocVar.357** %449, align 8, !tbaa !167
  %517 = getelementptr inbounds %struct.LocVar.357, %struct.LocVar.357* %516, i64 %indvars.iv39.i, i32 1
  store i32 %515, i32* %517, align 4, !tbaa !170
  call void @llvm.lifetime.start(i64 4, i8* %460) #1
  %518 = load %struct.Zio.359*, %struct.Zio.359** %37, align 8, !tbaa !302
  %519 = call i64 bitcast (i64 (%struct.Zio*, i8*, i64)* @luaZ_read to i64 (%struct.Zio.359*, i8*, i64)*)(%struct.Zio.359* %518, i8* %460, i64 4) #1
  %520 = icmp eq i64 %519, 0
  br i1 %520, label %LoadBlock.exit.i.10.i, label %521

; <label>:521                                     ; preds = %LoadInt.exit8.i
  %522 = load %struct.lua_State.215*, %struct.lua_State.215** %1, align 8, !tbaa !301
  %523 = load i8*, i8** %459, align 8, !tbaa !299
  %524 = call i8* (%struct.lua_State.215*, i8*, ...) @luaO_pushfstring(%struct.lua_State.215* %522, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5.694, i64 0, i64 0), i8* %523, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4.695, i64 0, i64 0)) #1
  %525 = load %struct.lua_State.215*, %struct.lua_State.215** %1, align 8, !tbaa !301
  call void bitcast (void (%struct.lua_State*, i32)* @luaD_throw to void (%struct.lua_State.215*, i32)*)(%struct.lua_State.215* %525, i32 3) #1
  br label %LoadBlock.exit.i.10.i

LoadBlock.exit.i.10.i:                            ; preds = %521, %LoadInt.exit8.i
  %526 = load i32, i32* %x.i.9.i, align 4, !tbaa !38
  %527 = icmp slt i32 %526, 0
  br i1 %527, label %528, label %LoadInt.exit12.i

; <label>:528                                     ; preds = %LoadBlock.exit.i.10.i
  %529 = load %struct.lua_State.215*, %struct.lua_State.215** %1, align 8, !tbaa !301
  %530 = load i8*, i8** %459, align 8, !tbaa !299
  %531 = call i8* (%struct.lua_State.215*, i8*, ...) @luaO_pushfstring(%struct.lua_State.215* %529, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5.694, i64 0, i64 0), i8* %530, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.8.699, i64 0, i64 0)) #1
  %532 = load %struct.lua_State.215*, %struct.lua_State.215** %1, align 8, !tbaa !301
  call void bitcast (void (%struct.lua_State*, i32)* @luaD_throw to void (%struct.lua_State.215*, i32)*)(%struct.lua_State.215* %532, i32 3) #1
  %.pre.i.11.i = load i32, i32* %x.i.9.i, align 4, !tbaa !38
  br label %LoadInt.exit12.i

LoadInt.exit12.i:                                 ; preds = %528, %LoadBlock.exit.i.10.i
  %533 = phi i32 [ %.pre.i.11.i, %528 ], [ %526, %LoadBlock.exit.i.10.i ]
  call void @llvm.lifetime.end(i64 4, i8* %460) #1
  %534 = load %struct.LocVar.357*, %struct.LocVar.357** %449, align 8, !tbaa !167
  %535 = getelementptr inbounds %struct.LocVar.357, %struct.LocVar.357* %534, i64 %indvars.iv39.i, i32 2
  store i32 %533, i32* %535, align 4, !tbaa !171
  %indvars.iv.next40.i = add nuw nsw i64 %indvars.iv39.i, 1
  %lftr.wideiv48 = trunc i64 %indvars.iv.next40.i to i32
  %exitcond49 = icmp eq i32 %lftr.wideiv48, %445
  br i1 %exitcond49, label %._crit_edge.31.i.loopexit, label %470

._crit_edge.31.i.loopexit:                        ; preds = %LoadInt.exit12.i
  br label %._crit_edge.31.i

._crit_edge.31.i:                                 ; preds = %._crit_edge.31.i.loopexit, %443, %.thread.i
  %536 = bitcast i32* %x.i.13.i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %536) #1
  %537 = load %struct.Zio.359*, %struct.Zio.359** %37, align 8, !tbaa !302
  %538 = call i64 bitcast (i64 (%struct.Zio*, i8*, i64)* @luaZ_read to i64 (%struct.Zio.359*, i8*, i64)*)(%struct.Zio.359* %537, i8* %536, i64 4) #1
  %539 = icmp eq i64 %538, 0
  br i1 %539, label %LoadBlock.exit.i.14.i, label %540

; <label>:540                                     ; preds = %._crit_edge.31.i
  %541 = load %struct.lua_State.215*, %struct.lua_State.215** %1, align 8, !tbaa !301
  %542 = getelementptr inbounds %struct.LoadState, %struct.LoadState* %S, i64 0, i32 3
  %543 = load i8*, i8** %542, align 8, !tbaa !299
  %544 = call i8* (%struct.lua_State.215*, i8*, ...) @luaO_pushfstring(%struct.lua_State.215* %541, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5.694, i64 0, i64 0), i8* %543, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4.695, i64 0, i64 0)) #1
  %545 = load %struct.lua_State.215*, %struct.lua_State.215** %1, align 8, !tbaa !301
  call void bitcast (void (%struct.lua_State*, i32)* @luaD_throw to void (%struct.lua_State.215*, i32)*)(%struct.lua_State.215* %545, i32 3) #1
  br label %LoadBlock.exit.i.14.i

LoadBlock.exit.i.14.i:                            ; preds = %540, %._crit_edge.31.i
  %546 = load i32, i32* %x.i.13.i, align 4, !tbaa !38
  %547 = icmp slt i32 %546, 0
  br i1 %547, label %LoadInt.exit16.i, label %LoadInt.exit16.thread.i

LoadInt.exit16.thread.i:                          ; preds = %LoadBlock.exit.i.14.i
  call void @llvm.lifetime.end(i64 4, i8* %536) #1
  %548 = load %struct.lua_State.215*, %struct.lua_State.215** %1, align 8, !tbaa !301
  br label %560

LoadInt.exit16.i:                                 ; preds = %LoadBlock.exit.i.14.i
  %549 = load %struct.lua_State.215*, %struct.lua_State.215** %1, align 8, !tbaa !301
  %550 = getelementptr inbounds %struct.LoadState, %struct.LoadState* %S, i64 0, i32 3
  %551 = load i8*, i8** %550, align 8, !tbaa !299
  %552 = call i8* (%struct.lua_State.215*, i8*, ...) @luaO_pushfstring(%struct.lua_State.215* %549, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5.694, i64 0, i64 0), i8* %551, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.8.699, i64 0, i64 0)) #1
  %553 = load %struct.lua_State.215*, %struct.lua_State.215** %1, align 8, !tbaa !301
  call void bitcast (void (%struct.lua_State*, i32)* @luaD_throw to void (%struct.lua_State.215*, i32)*)(%struct.lua_State.215* %553, i32 3) #1
  %.pre.i.15.i = load i32, i32* %x.i.13.i, align 4, !tbaa !38
  call void @llvm.lifetime.end(i64 4, i8* %536) #1
  %554 = icmp sgt i32 %.pre.i.15.i, -2
  %555 = load %struct.lua_State.215*, %struct.lua_State.215** %1, align 8, !tbaa !301
  br i1 %554, label %560, label %.thread48.i

.thread48.i:                                      ; preds = %LoadInt.exit16.i
  %556 = call i8* bitcast (i8* (%struct.lua_State*)* @luaM_toobig to i8* (%struct.lua_State.215*)*)(%struct.lua_State.215* %555) #1
  %557 = getelementptr inbounds %struct.Proto.358, %struct.Proto.358* %14, i64 0, i32 8
  %558 = bitcast %union.TString.210*** %557 to i8**
  store i8* %556, i8** %558, align 8, !tbaa !68
  %559 = getelementptr inbounds %struct.Proto.358, %struct.Proto.358* %14, i64 0, i32 10
  store i32 %.pre.i.15.i, i32* %559, align 4, !tbaa !65
  br label %LoadDebug.exit

; <label>:560                                     ; preds = %LoadInt.exit16.i, %LoadInt.exit16.thread.i
  %561 = phi %struct.lua_State.215* [ %548, %LoadInt.exit16.thread.i ], [ %555, %LoadInt.exit16.i ]
  %562 = phi i32 [ %546, %LoadInt.exit16.thread.i ], [ %.pre.i.15.i, %LoadInt.exit16.i ]
  %563 = sext i32 %562 to i64
  %564 = shl nsw i64 %563, 3
  %565 = call i8* bitcast (i8* (%struct.lua_State*, i8*, i64, i64)* @luaM_realloc_ to i8* (%struct.lua_State.215*, i8*, i64, i64)*)(%struct.lua_State.215* %561, i8* null, i64 0, i64 %564) #1
  %566 = getelementptr inbounds %struct.Proto.358, %struct.Proto.358* %14, i64 0, i32 8
  %567 = bitcast %union.TString.210*** %566 to i8**
  store i8* %565, i8** %567, align 8, !tbaa !68
  %568 = getelementptr inbounds %struct.Proto.358, %struct.Proto.358* %14, i64 0, i32 10
  store i32 %562, i32* %568, align 4, !tbaa !65
  %569 = icmp sgt i32 %562, 0
  br i1 %569, label %.lr.ph28.i, label %LoadDebug.exit

.lr.ph28.i:                                       ; preds = %560
  %570 = bitcast i8* %565 to %union.TString.210**
  store %union.TString.210* null, %union.TString.210** %570, align 8, !tbaa !25
  %exitcond38.i.36 = icmp eq i32 %562, 1
  br i1 %exitcond38.i.36, label %.lr.ph.i, label %._crit_edge.47.i.preheader

._crit_edge.47.i.preheader:                       ; preds = %.lr.ph28.i
  %571 = add i32 %562, 3
  %572 = add i32 %562, -2
  %xtraiter = and i32 %571, 3
  %lcmp.mod = icmp eq i32 %xtraiter, 0
  br i1 %lcmp.mod, label %._crit_edge.47.i.preheader.split, label %._crit_edge.47.i.prol.preheader

._crit_edge.47.i.prol.preheader:                  ; preds = %._crit_edge.47.i.preheader
  br label %._crit_edge.47.i.prol

._crit_edge.47.i.prol:                            ; preds = %._crit_edge.47.i.prol.preheader, %._crit_edge.47.i.prol
  %indvars.iv.next36.i37.prol = phi i64 [ %indvars.iv.next36.i.prol, %._crit_edge.47.i.prol ], [ 1, %._crit_edge.47.i.prol.preheader ]
  %prol.iter = phi i32 [ %prol.iter.sub, %._crit_edge.47.i.prol ], [ %xtraiter, %._crit_edge.47.i.prol.preheader ]
  %.pre.i.23.prol = load %union.TString.210**, %union.TString.210*** %566, align 8, !tbaa !68
  %573 = getelementptr inbounds %union.TString.210*, %union.TString.210** %.pre.i.23.prol, i64 %indvars.iv.next36.i37.prol
  store %union.TString.210* null, %union.TString.210** %573, align 8, !tbaa !25
  %indvars.iv.next36.i.prol = add nuw nsw i64 %indvars.iv.next36.i37.prol, 1
  %prol.iter.sub = add i32 %prol.iter, -1
  %prol.iter.cmp = icmp eq i32 %prol.iter.sub, 0
  br i1 %prol.iter.cmp, label %._crit_edge.47.i.preheader.split.loopexit, label %._crit_edge.47.i.prol, !llvm.loop !307

._crit_edge.47.i.preheader.split.loopexit:        ; preds = %._crit_edge.47.i.prol
  %indvars.iv.next36.i.prol.lcssa = phi i64 [ %indvars.iv.next36.i.prol, %._crit_edge.47.i.prol ]
  br label %._crit_edge.47.i.preheader.split

._crit_edge.47.i.preheader.split:                 ; preds = %._crit_edge.47.i.preheader.split.loopexit, %._crit_edge.47.i.preheader
  %indvars.iv.next36.i37.unr = phi i64 [ 1, %._crit_edge.47.i.preheader ], [ %indvars.iv.next36.i.prol.lcssa, %._crit_edge.47.i.preheader.split.loopexit ]
  %574 = icmp ult i32 %572, 3
  br i1 %574, label %.lr.ph.i.loopexit, label %._crit_edge.47.i.preheader.split.split

._crit_edge.47.i.preheader.split.split:           ; preds = %._crit_edge.47.i.preheader.split
  br label %._crit_edge.47.i

.lr.ph.i.loopexit.unr-lcssa:                      ; preds = %._crit_edge.47.i
  br label %.lr.ph.i.loopexit

.lr.ph.i.loopexit:                                ; preds = %._crit_edge.47.i.preheader.split, %.lr.ph.i.loopexit.unr-lcssa
  br label %.lr.ph.i

.lr.ph.i:                                         ; preds = %.lr.ph.i.loopexit, %.lr.ph28.i
  %575 = bitcast i64* %size.i.17.i to i8*
  %576 = getelementptr inbounds %struct.LoadState, %struct.LoadState* %S, i64 0, i32 2
  %577 = getelementptr inbounds %struct.LoadState, %struct.LoadState* %S, i64 0, i32 3
  br label %582

._crit_edge.47.i:                                 ; preds = %._crit_edge.47.i, %._crit_edge.47.i.preheader.split.split
  %indvars.iv.next36.i37 = phi i64 [ %indvars.iv.next36.i37.unr, %._crit_edge.47.i.preheader.split.split ], [ %indvars.iv.next36.i.3, %._crit_edge.47.i ]
  %.pre.i.23 = load %union.TString.210**, %union.TString.210*** %566, align 8, !tbaa !68
  %578 = getelementptr inbounds %union.TString.210*, %union.TString.210** %.pre.i.23, i64 %indvars.iv.next36.i37
  store %union.TString.210* null, %union.TString.210** %578, align 8, !tbaa !25
  %indvars.iv.next36.i = add nuw nsw i64 %indvars.iv.next36.i37, 1
  %.pre.i.23.1 = load %union.TString.210**, %union.TString.210*** %566, align 8, !tbaa !68
  %579 = getelementptr inbounds %union.TString.210*, %union.TString.210** %.pre.i.23.1, i64 %indvars.iv.next36.i
  store %union.TString.210* null, %union.TString.210** %579, align 8, !tbaa !25
  %indvars.iv.next36.i.1 = add nsw i64 %indvars.iv.next36.i37, 2
  %.pre.i.23.2 = load %union.TString.210**, %union.TString.210*** %566, align 8, !tbaa !68
  %580 = getelementptr inbounds %union.TString.210*, %union.TString.210** %.pre.i.23.2, i64 %indvars.iv.next36.i.1
  store %union.TString.210* null, %union.TString.210** %580, align 8, !tbaa !25
  %indvars.iv.next36.i.2 = add nsw i64 %indvars.iv.next36.i37, 3
  %.pre.i.23.3 = load %union.TString.210**, %union.TString.210*** %566, align 8, !tbaa !68
  %581 = getelementptr inbounds %union.TString.210*, %union.TString.210** %.pre.i.23.3, i64 %indvars.iv.next36.i.2
  store %union.TString.210* null, %union.TString.210** %581, align 8, !tbaa !25
  %indvars.iv.next36.i.3 = add nsw i64 %indvars.iv.next36.i37, 4
  %lftr.wideiv46.3 = trunc i64 %indvars.iv.next36.i.3 to i32
  %exitcond47.3 = icmp eq i32 %lftr.wideiv46.3, %562
  br i1 %exitcond47.3, label %.lr.ph.i.loopexit.unr-lcssa, label %._crit_edge.47.i

; <label>:582                                     ; preds = %LoadString.exit19.i, %.lr.ph.i
  %indvars.iv.i = phi i64 [ 0, %.lr.ph.i ], [ %indvars.iv.next.i, %LoadString.exit19.i ]
  call void @llvm.lifetime.start(i64 8, i8* %575) #1
  %583 = load %struct.Zio.359*, %struct.Zio.359** %37, align 8, !tbaa !302
  %584 = call i64 bitcast (i64 (%struct.Zio*, i8*, i64)* @luaZ_read to i64 (%struct.Zio.359*, i8*, i64)*)(%struct.Zio.359* %583, i8* %575, i64 8) #1
  %585 = icmp eq i64 %584, 0
  br i1 %585, label %LoadBlock.exit22.i, label %586

; <label>:586                                     ; preds = %582
  %587 = load %struct.lua_State.215*, %struct.lua_State.215** %1, align 8, !tbaa !301
  %588 = load i8*, i8** %577, align 8, !tbaa !299
  %589 = call i8* (%struct.lua_State.215*, i8*, ...) @luaO_pushfstring(%struct.lua_State.215* %587, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5.694, i64 0, i64 0), i8* %588, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4.695, i64 0, i64 0)) #1
  %590 = load %struct.lua_State.215*, %struct.lua_State.215** %1, align 8, !tbaa !301
  call void bitcast (void (%struct.lua_State*, i32)* @luaD_throw to void (%struct.lua_State.215*, i32)*)(%struct.lua_State.215* %590, i32 3) #1
  br label %LoadBlock.exit22.i

LoadBlock.exit22.i:                               ; preds = %586, %582
  %591 = load i64, i64* %size.i.17.i, align 8, !tbaa !39
  %592 = icmp eq i64 %591, 0
  br i1 %592, label %LoadString.exit19.i, label %593

; <label>:593                                     ; preds = %LoadBlock.exit22.i
  %594 = load %struct.lua_State.215*, %struct.lua_State.215** %1, align 8, !tbaa !301
  %595 = load %struct.Mbuffer*, %struct.Mbuffer** %576, align 8, !tbaa !303
  %596 = call i8* bitcast (i8* (%struct.lua_State*, %struct.Mbuffer*, i64)* @luaZ_openspace to i8* (%struct.lua_State.215*, %struct.Mbuffer*, i64)*)(%struct.lua_State.215* %594, %struct.Mbuffer* %595, i64 %591) #1
  %597 = load i64, i64* %size.i.17.i, align 8, !tbaa !39
  %598 = load %struct.Zio.359*, %struct.Zio.359** %37, align 8, !tbaa !302
  %599 = call i64 bitcast (i64 (%struct.Zio*, i8*, i64)* @luaZ_read to i64 (%struct.Zio.359*, i8*, i64)*)(%struct.Zio.359* %598, i8* %596, i64 %597) #1
  %600 = icmp eq i64 %599, 0
  br i1 %600, label %LoadBlock.exit23.i, label %601

; <label>:601                                     ; preds = %593
  %602 = load %struct.lua_State.215*, %struct.lua_State.215** %1, align 8, !tbaa !301
  %603 = load i8*, i8** %577, align 8, !tbaa !299
  %604 = call i8* (%struct.lua_State.215*, i8*, ...) @luaO_pushfstring(%struct.lua_State.215* %602, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5.694, i64 0, i64 0), i8* %603, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4.695, i64 0, i64 0)) #1
  %605 = load %struct.lua_State.215*, %struct.lua_State.215** %1, align 8, !tbaa !301
  call void bitcast (void (%struct.lua_State*, i32)* @luaD_throw to void (%struct.lua_State.215*, i32)*)(%struct.lua_State.215* %605, i32 3) #1
  br label %LoadBlock.exit23.i

LoadBlock.exit23.i:                               ; preds = %601, %593
  %606 = load %struct.lua_State.215*, %struct.lua_State.215** %1, align 8, !tbaa !301
  %607 = load i64, i64* %size.i.17.i, align 8, !tbaa !39
  %608 = add i64 %607, -1
  %609 = call %union.TString.210* bitcast (%union.TString* (%struct.lua_State*, i8*, i64)* @luaS_newlstr to %union.TString.210* (%struct.lua_State.215*, i8*, i64)*)(%struct.lua_State.215* %606, i8* %596, i64 %608) #1
  br label %LoadString.exit19.i

LoadString.exit19.i:                              ; preds = %LoadBlock.exit23.i, %LoadBlock.exit22.i
  %.0.i.18.i = phi %union.TString.210* [ %609, %LoadBlock.exit23.i ], [ null, %LoadBlock.exit22.i ]
  call void @llvm.lifetime.end(i64 8, i8* %575) #1
  %610 = load %union.TString.210**, %union.TString.210*** %566, align 8, !tbaa !68
  %611 = getelementptr inbounds %union.TString.210*, %union.TString.210** %610, i64 %indvars.iv.i
  store %union.TString.210* %.0.i.18.i, %union.TString.210** %611, align 8, !tbaa !25
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next.i to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %562
  br i1 %exitcond, label %LoadDebug.exit.loopexit, label %582

LoadDebug.exit.loopexit:                          ; preds = %LoadString.exit19.i
  br label %LoadDebug.exit

LoadDebug.exit:                                   ; preds = %LoadDebug.exit.loopexit, %.thread48.i, %560
  %612 = call i32 bitcast (i32 (%struct.Proto*)* @luaG_checkcode to i32 (%struct.Proto.358*)*)(%struct.Proto.358* %14) #1
  %613 = icmp eq i32 %612, 0
  br i1 %613, label %614, label %620

; <label>:614                                     ; preds = %LoadDebug.exit
  %615 = load %struct.lua_State.215*, %struct.lua_State.215** %1, align 8, !tbaa !301
  %616 = getelementptr inbounds %struct.LoadState, %struct.LoadState* %S, i64 0, i32 3
  %617 = load i8*, i8** %616, align 8, !tbaa !299
  %618 = call i8* (%struct.lua_State.215*, i8*, ...) @luaO_pushfstring(%struct.lua_State.215* %615, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5.694, i64 0, i64 0), i8* %617, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7.701, i64 0, i64 0)) #1
  %619 = load %struct.lua_State.215*, %struct.lua_State.215** %1, align 8, !tbaa !301
  call void bitcast (void (%struct.lua_State*, i32)* @luaD_throw to void (%struct.lua_State.215*, i32)*)(%struct.lua_State.215* %619, i32 3) #1
  br label %620

; <label>:620                                     ; preds = %LoadDebug.exit, %614
  %621 = load %struct.lua_State.215*, %struct.lua_State.215** %1, align 8, !tbaa !301
  %622 = getelementptr inbounds %struct.lua_State.215, %struct.lua_State.215* %621, i64 0, i32 4
  %623 = load %struct.lua_TValue.218*, %struct.lua_TValue.218** %622, align 8, !tbaa !1
  %624 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %623, i64 -1
  store %struct.lua_TValue.218* %624, %struct.lua_TValue.218** %622, align 8, !tbaa !1
  %625 = getelementptr inbounds %struct.lua_State.215, %struct.lua_State.215* %621, i64 0, i32 15
  %626 = load i16, i16* %625, align 2, !tbaa !16
  %627 = add i16 %626, -1
  store i16 %627, i16* %625, align 2, !tbaa !16
  ret %struct.Proto.358* %14
}

; Function Attrs: nounwind uwtable
define hidden %struct.lua_TValue.218* @luaV_tonumber(%struct.lua_TValue.218* readonly %obj, %struct.lua_TValue.218* %n) #0 {
  %num = alloca double, align 8
  %1 = bitcast double* %num to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1) #1
  %2 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %obj, i64 0, i32 1
  %3 = load i32, i32* %2, align 4, !tbaa !10
  switch i32 %3, label %16 [
    i32 3, label %17
    i32 4, label %4
  ]

; <label>:4                                       ; preds = %0
  %5 = bitcast %struct.lua_TValue.218* %obj to %union.TString.210**
  %6 = load %union.TString.210*, %union.TString.210** %5, align 8, !tbaa !25
  %7 = getelementptr inbounds %union.TString.210, %union.TString.210* %6, i64 1
  %8 = bitcast %union.TString.210* %7 to i8*
  %9 = call i32 @luaO_str2d(i8* %8, double* nonnull %num) #1
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %16, label %11

; <label>:11                                      ; preds = %4
  %12 = bitcast double* %num to i64*
  %13 = load i64, i64* %12, align 8, !tbaa !36
  %14 = bitcast %struct.lua_TValue.218* %n to i64*
  store i64 %13, i64* %14, align 8, !tbaa !36
  %15 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %n, i64 0, i32 1
  store i32 3, i32* %15, align 4, !tbaa !10
  br label %17

; <label>:16                                      ; preds = %0, %4
  br label %17

; <label>:17                                      ; preds = %0, %16, %11
  %.0 = phi %struct.lua_TValue.218* [ %n, %11 ], [ null, %16 ], [ %obj, %0 ]
  call void @llvm.lifetime.end(i64 8, i8* %1) #1
  ret %struct.lua_TValue.218* %.0
}

; Function Attrs: nounwind uwtable
define hidden i32 @luaV_tostring(%struct.lua_State.215* %L, %struct.lua_TValue.218* nocapture %obj) #0 {
  %s = alloca [32 x i8], align 16
  %1 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %obj, i64 0, i32 1
  %2 = load i32, i32* %1, align 4, !tbaa !10
  %3 = icmp eq i32 %2, 3
  br i1 %3, label %4, label %12

; <label>:4                                       ; preds = %0
  %5 = getelementptr inbounds [32 x i8], [32 x i8]* %s, i64 0, i64 0
  call void @llvm.lifetime.start(i64 32, i8* %5) #1
  %6 = bitcast %struct.lua_TValue.218* %obj to double*
  %7 = load double, double* %6, align 8, !tbaa !36
  %8 = call i32 (i8*, i8*, ...) @sprintf(i8* %5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.718, i64 0, i64 0), double %7) #1
  %9 = call i64 @strlen(i8* %5) #11
  %10 = call %union.TString.210* bitcast (%union.TString* (%struct.lua_State*, i8*, i64)* @luaS_newlstr to %union.TString.210* (%struct.lua_State.215*, i8*, i64)*)(%struct.lua_State.215* %L, i8* %5, i64 %9) #1
  %11 = bitcast %struct.lua_TValue.218* %obj to %union.TString.210**
  store %union.TString.210* %10, %union.TString.210** %11, align 8, !tbaa !25
  store i32 4, i32* %1, align 4, !tbaa !10
  call void @llvm.lifetime.end(i64 32, i8* %5) #1
  br label %12

; <label>:12                                      ; preds = %0, %4
  %.0 = phi i32 [ 1, %4 ], [ 0, %0 ]
  ret i32 %.0
}

; Function Attrs: nounwind uwtable
define hidden void @luaV_gettable(%struct.lua_State.215* %L, %struct.lua_TValue.218* %t, %struct.lua_TValue.218* %key, %struct.lua_TValue.218* %val) #0 {
  %1 = getelementptr inbounds %struct.lua_State.215, %struct.lua_State.215* %L, i64 0, i32 6
  %.phi.trans.insert = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %t, i64 0, i32 1
  %.pre = load i32, i32* %.phi.trans.insert, align 4, !tbaa !10
  br label %4

; <label>:2                                       ; preds = %.thread6
  %3 = icmp slt i32 %43, 100
  br i1 %3, label %4, label %96

; <label>:4                                       ; preds = %0, %2
  %5 = phi i32 [ %.pre, %0 ], [ %41, %2 ]
  %.0421 = phi %struct.lua_TValue.218* [ %t, %0 ], [ %tm.3, %2 ]
  %loop.020 = phi i32 [ 0, %0 ], [ %43, %2 ]
  %6 = icmp eq i32 %5, 5
  br i1 %6, label %7, label %34

; <label>:7                                       ; preds = %4
  %8 = bitcast %struct.lua_TValue.218* %.0421 to %struct.Table.208**
  %9 = load %struct.Table.208*, %struct.Table.208** %8, align 8, !tbaa !25
  %10 = tail call %struct.lua_TValue.218* bitcast (%struct.lua_TValue* (%struct.Table*, %struct.lua_TValue*)* @luaH_get to %struct.lua_TValue.218* (%struct.Table.208*, %struct.lua_TValue.218*)*)(%struct.Table.208* %9, %struct.lua_TValue.218* %key) #1
  %11 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %10, i64 0, i32 1
  %12 = load i32, i32* %11, align 4, !tbaa !10
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %.thread

; <label>:14                                      ; preds = %7
  %15 = getelementptr inbounds %struct.Table.208, %struct.Table.208* %9, i64 0, i32 5
  %16 = load %struct.Table.208*, %struct.Table.208** %15, align 8, !tbaa !47
  %17 = icmp eq %struct.Table.208* %16, null
  br i1 %17, label %.thread, label %18

; <label>:18                                      ; preds = %14
  %19 = getelementptr inbounds %struct.Table.208, %struct.Table.208* %16, i64 0, i32 3
  %20 = load i8, i8* %19, align 1, !tbaa !187
  %21 = and i8 %20, 1
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %23, label %.thread

; <label>:23                                      ; preds = %18
  %24 = load %struct.global_State.211*, %struct.global_State.211** %1, align 8, !tbaa !17
  %25 = getelementptr inbounds %struct.global_State.211, %struct.global_State.211* %24, i64 0, i32 24, i64 0
  %26 = load %union.TString.210*, %union.TString.210** %25, align 8, !tbaa !25
  %27 = tail call %struct.lua_TValue.218* bitcast (%struct.lua_TValue* (%struct.Table*, i32, %union.TString*)* @luaT_gettm to %struct.lua_TValue.218* (%struct.Table.208*, i32, %union.TString.210*)*)(%struct.Table.208* %16, i32 0, %union.TString.210* %26) #1
  %28 = icmp eq %struct.lua_TValue.218* %27, null
  br i1 %28, label %.thread, label %.thread6

.thread:                                          ; preds = %18, %14, %7, %23
  %.lcssa52 = phi i32* [ %11, %18 ], [ %11, %14 ], [ %11, %7 ], [ %11, %23 ]
  %.lcssa = phi %struct.lua_TValue.218* [ %10, %18 ], [ %10, %14 ], [ %10, %7 ], [ %10, %23 ]
  %29 = bitcast %struct.lua_TValue.218* %.lcssa to i64*
  %30 = bitcast %struct.lua_TValue.218* %val to i64*
  %31 = load i64, i64* %29, align 8
  store i64 %31, i64* %30, align 8
  %32 = load i32, i32* %.lcssa52, align 4, !tbaa !10
  %33 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %val, i64 0, i32 1
  store i32 %32, i32* %33, align 4, !tbaa !10
  br label %.thread9

; <label>:34                                      ; preds = %4
  %35 = tail call %struct.lua_TValue.218* bitcast (%struct.lua_TValue* (%struct.lua_State*, %struct.lua_TValue*, i32)* @luaT_gettmbyobj to %struct.lua_TValue.218* (%struct.lua_State.215*, %struct.lua_TValue.218*, i32)*)(%struct.lua_State.215* %L, %struct.lua_TValue.218* %.0421, i32 0) #1
  %36 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %35, i64 0, i32 1
  %37 = load i32, i32* %36, align 4, !tbaa !10
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %.thread6

; <label>:39                                      ; preds = %34
  tail call void bitcast (void (%struct.lua_State*, %struct.lua_TValue*, i8*)* @luaG_typeerror to void (%struct.lua_State.215*, %struct.lua_TValue.218*, i8*)*)(%struct.lua_State.215* %L, %struct.lua_TValue.218* %.0421, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.719, i64 0, i64 0)) #1
  br label %.thread6

.thread6:                                         ; preds = %23, %34, %39
  %tm.3 = phi %struct.lua_TValue.218* [ %35, %39 ], [ %35, %34 ], [ %27, %23 ]
  %40 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %tm.3, i64 0, i32 1
  %41 = load i32, i32* %40, align 4, !tbaa !10
  %42 = icmp eq i32 %41, 6
  %43 = add nuw nsw i32 %loop.020, 1
  br i1 %42, label %44, label %2

; <label>:44                                      ; preds = %.thread6
  %.lcssa54 = phi i32* [ %40, %.thread6 ]
  %tm.3.lcssa = phi %struct.lua_TValue.218* [ %tm.3, %.thread6 ]
  %.0421.lcssa50 = phi %struct.lua_TValue.218* [ %.0421, %.thread6 ]
  %45 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %.0421.lcssa50, i64 0, i32 1
  %46 = getelementptr inbounds %struct.lua_State.215, %struct.lua_State.215* %L, i64 0, i32 10
  %47 = bitcast %struct.lua_TValue.218** %46 to i64*
  %48 = load i64, i64* %47, align 8, !tbaa !50
  %49 = ptrtoint %struct.lua_TValue.218* %val to i64
  %50 = sub i64 %49, %48
  %51 = getelementptr inbounds %struct.lua_State.215, %struct.lua_State.215* %L, i64 0, i32 4
  %52 = load %struct.lua_TValue.218*, %struct.lua_TValue.218** %51, align 8, !tbaa !1
  %53 = bitcast %struct.lua_TValue.218* %tm.3.lcssa to i64*
  %54 = bitcast %struct.lua_TValue.218* %52 to i64*
  %55 = load i64, i64* %53, align 8
  store i64 %55, i64* %54, align 8
  %56 = load i32, i32* %.lcssa54, align 4, !tbaa !10
  %57 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %52, i64 0, i32 1
  store i32 %56, i32* %57, align 4, !tbaa !10
  %58 = load %struct.lua_TValue.218*, %struct.lua_TValue.218** %51, align 8, !tbaa !1
  %59 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %58, i64 1
  %60 = bitcast %struct.lua_TValue.218* %.0421.lcssa50 to i64*
  %61 = bitcast %struct.lua_TValue.218* %59 to i64*
  %62 = load i64, i64* %60, align 8
  store i64 %62, i64* %61, align 8
  %63 = load i32, i32* %45, align 4, !tbaa !10
  %64 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %58, i64 1, i32 1
  store i32 %63, i32* %64, align 4, !tbaa !10
  %65 = load %struct.lua_TValue.218*, %struct.lua_TValue.218** %51, align 8, !tbaa !1
  %66 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %65, i64 2
  %67 = bitcast %struct.lua_TValue.218* %key to i64*
  %68 = bitcast %struct.lua_TValue.218* %66 to i64*
  %69 = load i64, i64* %67, align 8
  store i64 %69, i64* %68, align 8
  %70 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %key, i64 0, i32 1
  %71 = load i32, i32* %70, align 4, !tbaa !10
  %72 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %65, i64 2, i32 1
  store i32 %71, i32* %72, align 4, !tbaa !10
  %73 = getelementptr inbounds %struct.lua_State.215, %struct.lua_State.215* %L, i64 0, i32 9
  %74 = bitcast %struct.lua_TValue.218** %73 to i64*
  %75 = load i64, i64* %74, align 8, !tbaa !12
  %76 = bitcast %struct.lua_TValue.218** %51 to i64*
  %77 = load i64, i64* %76, align 8, !tbaa !1
  %78 = sub i64 %75, %77
  %79 = icmp slt i64 %78, 49
  %80 = inttoptr i64 %77 to %struct.lua_TValue.218*
  br i1 %79, label %81, label %callTMres.exit

; <label>:81                                      ; preds = %44
  tail call void bitcast (void (%struct.lua_State*, i32)* @luaD_growstack to void (%struct.lua_State.215*, i32)*)(%struct.lua_State.215* %L, i32 3) #1
  %.pre.i = load %struct.lua_TValue.218*, %struct.lua_TValue.218** %51, align 8, !tbaa !1
  br label %callTMres.exit

callTMres.exit:                                   ; preds = %44, %81
  %82 = phi %struct.lua_TValue.218* [ %80, %44 ], [ %.pre.i, %81 ]
  %83 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %82, i64 3
  store %struct.lua_TValue.218* %83, %struct.lua_TValue.218** %51, align 8, !tbaa !1
  tail call void bitcast (void (%struct.lua_State*, %struct.lua_TValue*, i32)* @luaD_call to void (%struct.lua_State.215*, %struct.lua_TValue.218*, i32)*)(%struct.lua_State.215* %L, %struct.lua_TValue.218* %82, i32 1) #1
  %84 = bitcast %struct.lua_TValue.218** %46 to i8**
  %85 = load i8*, i8** %84, align 8, !tbaa !50
  %86 = getelementptr inbounds i8, i8* %85, i64 %50
  %87 = load %struct.lua_TValue.218*, %struct.lua_TValue.218** %51, align 8, !tbaa !1
  %88 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %87, i64 -1
  store %struct.lua_TValue.218* %88, %struct.lua_TValue.218** %51, align 8, !tbaa !1
  %89 = bitcast %struct.lua_TValue.218* %88 to i64*
  %90 = bitcast i8* %86 to i64*
  %91 = load i64, i64* %89, align 8
  store i64 %91, i64* %90, align 8
  %92 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %87, i64 -1, i32 1
  %93 = load i32, i32* %92, align 4, !tbaa !10
  %94 = getelementptr inbounds i8, i8* %86, i64 8
  %95 = bitcast i8* %94 to i32*
  store i32 %93, i32* %95, align 4, !tbaa !10
  br label %.thread9

; <label>:96                                      ; preds = %2
  tail call void (%struct.lua_State.215*, i8*, ...) bitcast (void (%struct.lua_State*, i8*, ...)* @luaG_runerror to void (%struct.lua_State.215*, i8*, ...)*)(%struct.lua_State.215* %L, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2.720, i64 0, i64 0)) #1
  br label %.thread9

.thread9:                                         ; preds = %.thread, %callTMres.exit, %96
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @luaV_settable(%struct.lua_State.215* %L, %struct.lua_TValue.218* %t, %struct.lua_TValue.218* %key, %struct.lua_TValue.218* nocapture readonly %val) #0 {
  %1 = getelementptr inbounds %struct.lua_State.215, %struct.lua_State.215* %L, i64 0, i32 6
  %.phi.trans.insert = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %t, i64 0, i32 1
  %.pre = load i32, i32* %.phi.trans.insert, align 4, !tbaa !10
  br label %4

; <label>:2                                       ; preds = %.thread9
  %3 = icmp slt i32 %58, 100
  br i1 %3, label %4, label %102

; <label>:4                                       ; preds = %0, %2
  %5 = phi i32 [ %.pre, %0 ], [ %56, %2 ]
  %.0425 = phi %struct.lua_TValue.218* [ %t, %0 ], [ %tm.3, %2 ]
  %loop.024 = phi i32 [ 0, %0 ], [ %58, %2 ]
  %6 = icmp eq i32 %5, 5
  br i1 %6, label %7, label %49

; <label>:7                                       ; preds = %4
  %8 = bitcast %struct.lua_TValue.218* %.0425 to %struct.Table.208**
  %9 = load %struct.Table.208*, %struct.Table.208** %8, align 8, !tbaa !25
  %10 = tail call %struct.lua_TValue.218* bitcast (%struct.lua_TValue* (%struct.lua_State*, %struct.Table*, %struct.lua_TValue*)* @luaH_set to %struct.lua_TValue.218* (%struct.lua_State.215*, %struct.Table.208*, %struct.lua_TValue.218*)*)(%struct.lua_State.215* %L, %struct.Table.208* %9, %struct.lua_TValue.218* %key) #1
  %11 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %10, i64 0, i32 1
  %12 = load i32, i32* %11, align 4, !tbaa !10
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %.thread

; <label>:14                                      ; preds = %7
  %15 = getelementptr inbounds %struct.Table.208, %struct.Table.208* %9, i64 0, i32 5
  %16 = load %struct.Table.208*, %struct.Table.208** %15, align 8, !tbaa !47
  %17 = icmp eq %struct.Table.208* %16, null
  br i1 %17, label %.thread, label %18

; <label>:18                                      ; preds = %14
  %19 = getelementptr inbounds %struct.Table.208, %struct.Table.208* %16, i64 0, i32 3
  %20 = load i8, i8* %19, align 1, !tbaa !187
  %21 = and i8 %20, 2
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %23, label %.thread

; <label>:23                                      ; preds = %18
  %24 = load %struct.global_State.211*, %struct.global_State.211** %1, align 8, !tbaa !17
  %25 = getelementptr inbounds %struct.global_State.211, %struct.global_State.211* %24, i64 0, i32 24, i64 1
  %26 = load %union.TString.210*, %union.TString.210** %25, align 8, !tbaa !25
  %27 = tail call %struct.lua_TValue.218* bitcast (%struct.lua_TValue* (%struct.Table*, i32, %union.TString*)* @luaT_gettm to %struct.lua_TValue.218* (%struct.Table.208*, i32, %union.TString.210*)*)(%struct.Table.208* %16, i32 1, %union.TString.210* %26) #1
  %28 = icmp eq %struct.lua_TValue.218* %27, null
  br i1 %28, label %.thread, label %.thread9

.thread:                                          ; preds = %18, %14, %23, %7
  %.lcssa61 = phi i32* [ %11, %18 ], [ %11, %14 ], [ %11, %23 ], [ %11, %7 ]
  %.lcssa60 = phi %struct.lua_TValue.218* [ %10, %18 ], [ %10, %14 ], [ %10, %23 ], [ %10, %7 ]
  %.lcssa = phi %struct.Table.208* [ %9, %18 ], [ %9, %14 ], [ %9, %23 ], [ %9, %7 ]
  %29 = bitcast %struct.lua_TValue.218* %val to i64*
  %30 = bitcast %struct.lua_TValue.218* %.lcssa60 to i64*
  %31 = load i64, i64* %29, align 8
  store i64 %31, i64* %30, align 8
  %32 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %val, i64 0, i32 1
  %33 = load i32, i32* %32, align 4, !tbaa !10
  store i32 %33, i32* %.lcssa61, align 4, !tbaa !10
  %34 = load i32, i32* %32, align 4, !tbaa !10
  %35 = icmp sgt i32 %34, 3
  br i1 %35, label %36, label %.thread12

; <label>:36                                      ; preds = %.thread
  %37 = bitcast %struct.lua_TValue.218* %val to %struct.GCheader.380**
  %38 = load %struct.GCheader.380*, %struct.GCheader.380** %37, align 8, !tbaa !25
  %39 = getelementptr inbounds %struct.GCheader.380, %struct.GCheader.380* %38, i64 0, i32 2
  %40 = load i8, i8* %39, align 1, !tbaa !33
  %41 = and i8 %40, 3
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %.thread12, label %43

; <label>:43                                      ; preds = %36
  %44 = getelementptr inbounds %struct.Table.208, %struct.Table.208* %.lcssa, i64 0, i32 2
  %45 = load i8, i8* %44, align 1, !tbaa !33
  %46 = and i8 %45, 4
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %.thread12, label %48

; <label>:48                                      ; preds = %43
  tail call void bitcast (void (%struct.lua_State*, %struct.Table*)* @luaC_barrierback to void (%struct.lua_State.215*, %struct.Table.208*)*)(%struct.lua_State.215* %L, %struct.Table.208* %.lcssa) #1
  br label %.thread12

; <label>:49                                      ; preds = %4
  %50 = tail call %struct.lua_TValue.218* bitcast (%struct.lua_TValue* (%struct.lua_State*, %struct.lua_TValue*, i32)* @luaT_gettmbyobj to %struct.lua_TValue.218* (%struct.lua_State.215*, %struct.lua_TValue.218*, i32)*)(%struct.lua_State.215* %L, %struct.lua_TValue.218* %.0425, i32 1) #1
  %51 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %50, i64 0, i32 1
  %52 = load i32, i32* %51, align 4, !tbaa !10
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %.thread9

; <label>:54                                      ; preds = %49
  tail call void bitcast (void (%struct.lua_State*, %struct.lua_TValue*, i8*)* @luaG_typeerror to void (%struct.lua_State.215*, %struct.lua_TValue.218*, i8*)*)(%struct.lua_State.215* %L, %struct.lua_TValue.218* %.0425, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.719, i64 0, i64 0)) #1
  br label %.thread9

.thread9:                                         ; preds = %23, %49, %54
  %tm.3 = phi %struct.lua_TValue.218* [ %50, %54 ], [ %50, %49 ], [ %27, %23 ]
  %55 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %tm.3, i64 0, i32 1
  %56 = load i32, i32* %55, align 4, !tbaa !10
  %57 = icmp eq i32 %56, 6
  %58 = add nuw nsw i32 %loop.024, 1
  br i1 %57, label %59, label %2

; <label>:59                                      ; preds = %.thread9
  %.lcssa63 = phi i32* [ %55, %.thread9 ]
  %tm.3.lcssa = phi %struct.lua_TValue.218* [ %tm.3, %.thread9 ]
  %.0425.lcssa58 = phi %struct.lua_TValue.218* [ %.0425, %.thread9 ]
  %60 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %.0425.lcssa58, i64 0, i32 1
  %61 = getelementptr inbounds %struct.lua_State.215, %struct.lua_State.215* %L, i64 0, i32 4
  %62 = load %struct.lua_TValue.218*, %struct.lua_TValue.218** %61, align 8, !tbaa !1
  %63 = bitcast %struct.lua_TValue.218* %tm.3.lcssa to i64*
  %64 = bitcast %struct.lua_TValue.218* %62 to i64*
  %65 = load i64, i64* %63, align 8
  store i64 %65, i64* %64, align 8
  %66 = load i32, i32* %.lcssa63, align 4, !tbaa !10
  %67 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %62, i64 0, i32 1
  store i32 %66, i32* %67, align 4, !tbaa !10
  %68 = load %struct.lua_TValue.218*, %struct.lua_TValue.218** %61, align 8, !tbaa !1
  %69 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %68, i64 1
  %70 = bitcast %struct.lua_TValue.218* %.0425.lcssa58 to i64*
  %71 = bitcast %struct.lua_TValue.218* %69 to i64*
  %72 = load i64, i64* %70, align 8
  store i64 %72, i64* %71, align 8
  %73 = load i32, i32* %60, align 4, !tbaa !10
  %74 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %68, i64 1, i32 1
  store i32 %73, i32* %74, align 4, !tbaa !10
  %75 = load %struct.lua_TValue.218*, %struct.lua_TValue.218** %61, align 8, !tbaa !1
  %76 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %75, i64 2
  %77 = bitcast %struct.lua_TValue.218* %key to i64*
  %78 = bitcast %struct.lua_TValue.218* %76 to i64*
  %79 = load i64, i64* %77, align 8
  store i64 %79, i64* %78, align 8
  %80 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %key, i64 0, i32 1
  %81 = load i32, i32* %80, align 4, !tbaa !10
  %82 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %75, i64 2, i32 1
  store i32 %81, i32* %82, align 4, !tbaa !10
  %83 = load %struct.lua_TValue.218*, %struct.lua_TValue.218** %61, align 8, !tbaa !1
  %84 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %83, i64 3
  %85 = bitcast %struct.lua_TValue.218* %val to i64*
  %86 = bitcast %struct.lua_TValue.218* %84 to i64*
  %87 = load i64, i64* %85, align 8
  store i64 %87, i64* %86, align 8
  %88 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %val, i64 0, i32 1
  %89 = load i32, i32* %88, align 4, !tbaa !10
  %90 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %83, i64 3, i32 1
  store i32 %89, i32* %90, align 4, !tbaa !10
  %91 = getelementptr inbounds %struct.lua_State.215, %struct.lua_State.215* %L, i64 0, i32 9
  %92 = bitcast %struct.lua_TValue.218** %91 to i64*
  %93 = load i64, i64* %92, align 8, !tbaa !12
  %94 = bitcast %struct.lua_TValue.218** %61 to i64*
  %95 = load i64, i64* %94, align 8, !tbaa !1
  %96 = sub i64 %93, %95
  %97 = icmp slt i64 %96, 65
  %98 = inttoptr i64 %95 to %struct.lua_TValue.218*
  br i1 %97, label %99, label %callTM.exit

; <label>:99                                      ; preds = %59
  tail call void bitcast (void (%struct.lua_State*, i32)* @luaD_growstack to void (%struct.lua_State.215*, i32)*)(%struct.lua_State.215* %L, i32 4) #1
  %.pre.i = load %struct.lua_TValue.218*, %struct.lua_TValue.218** %61, align 8, !tbaa !1
  br label %callTM.exit

callTM.exit:                                      ; preds = %59, %99
  %100 = phi %struct.lua_TValue.218* [ %98, %59 ], [ %.pre.i, %99 ]
  %101 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %100, i64 4
  store %struct.lua_TValue.218* %101, %struct.lua_TValue.218** %61, align 8, !tbaa !1
  tail call void bitcast (void (%struct.lua_State*, %struct.lua_TValue*, i32)* @luaD_call to void (%struct.lua_State.215*, %struct.lua_TValue.218*, i32)*)(%struct.lua_State.215* %L, %struct.lua_TValue.218* %100, i32 0) #1
  br label %.thread12

; <label>:102                                     ; preds = %2
  tail call void (%struct.lua_State.215*, i8*, ...) bitcast (void (%struct.lua_State*, i8*, ...)* @luaG_runerror to void (%struct.lua_State.215*, i8*, ...)*)(%struct.lua_State.215* %L, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3.721, i64 0, i64 0)) #1
  br label %.thread12

.thread12:                                        ; preds = %.thread, %48, %36, %43, %callTM.exit, %102
  ret void
}

; Function Attrs: nounwind uwtable
define hidden i32 @luaV_lessthan(%struct.lua_State.215* %L, %struct.lua_TValue.218* %l, %struct.lua_TValue.218* %r) #0 {
  %1 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %l, i64 0, i32 1
  %2 = load i32, i32* %1, align 4, !tbaa !10
  %3 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %r, i64 0, i32 1
  %4 = load i32, i32* %3, align 4, !tbaa !10
  %5 = icmp eq i32 %2, %4
  br i1 %5, label %8, label %6

; <label>:6                                       ; preds = %0
  %7 = tail call i32 bitcast (i32 (%struct.lua_State*, %struct.lua_TValue*, %struct.lua_TValue*)* @luaG_ordererror to i32 (%struct.lua_State.215*, %struct.lua_TValue.218*, %struct.lua_TValue.218*)*)(%struct.lua_State.215* %L, %struct.lua_TValue.218* %l, %struct.lua_TValue.218* %r) #1
  br label %118

; <label>:8                                       ; preds = %0
  switch i32 %2, label %47 [
    i32 3, label %9
    i32 4, label %16
  ]

; <label>:9                                       ; preds = %8
  %10 = bitcast %struct.lua_TValue.218* %l to double*
  %11 = load double, double* %10, align 8, !tbaa !36
  %12 = bitcast %struct.lua_TValue.218* %r to double*
  %13 = load double, double* %12, align 8, !tbaa !36
  %14 = fcmp olt double %11, %13
  %15 = zext i1 %14 to i32
  br label %118

; <label>:16                                      ; preds = %8
  %17 = bitcast %struct.lua_TValue.218* %l to %union.TString.210**
  %18 = load %union.TString.210*, %union.TString.210** %17, align 8, !tbaa !25
  %19 = bitcast %struct.lua_TValue.218* %r to %union.TString.210**
  %20 = load %union.TString.210*, %union.TString.210** %19, align 8, !tbaa !25
  %21 = getelementptr inbounds %union.TString.210, %union.TString.210* %18, i64 1
  %22 = bitcast %union.TString.210* %21 to i8*
  %23 = getelementptr inbounds %union.TString.210, %union.TString.210* %20, i64 1
  %24 = bitcast %union.TString.210* %23 to i8*
  %25 = tail call i32 @strcoll(i8* %22, i8* %24) #11
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %.lr.ph.i, label %l_strcmp.exit

.lr.ph.i:                                         ; preds = %16
  %27 = getelementptr inbounds %union.TString.210, %union.TString.210* %20, i64 0, i32 0, i32 5
  %28 = load i64, i64* %27, align 8, !tbaa !40
  %29 = getelementptr inbounds %union.TString.210, %union.TString.210* %18, i64 0, i32 0, i32 5
  %30 = load i64, i64* %29, align 8, !tbaa !40
  br label %31

; <label>:31                                      ; preds = %39, %.lr.ph.i
  %lr.013.i = phi i64 [ %28, %.lr.ph.i ], [ %44, %39 ]
  %r.012.i = phi i8* [ %24, %.lr.ph.i ], [ %43, %39 ]
  %ll.011.i = phi i64 [ %30, %.lr.ph.i ], [ %42, %39 ]
  %l.010.i = phi i8* [ %22, %.lr.ph.i ], [ %41, %39 ]
  %32 = tail call i64 @strlen(i8* %l.010.i) #11
  %33 = icmp eq i64 %32, %lr.013.i
  %34 = icmp eq i64 %32, %ll.011.i
  br i1 %33, label %35, label %38

; <label>:35                                      ; preds = %31
  %.lcssa = phi i1 [ %34, %31 ]
  %36 = zext i1 %.lcssa to i32
  %37 = xor i32 %36, 1
  br label %l_strcmp.exit

; <label>:38                                      ; preds = %31
  br i1 %34, label %l_strcmp.exit.loopexit, label %39

; <label>:39                                      ; preds = %38
  %40 = add i64 %32, 1
  %41 = getelementptr inbounds i8, i8* %l.010.i, i64 %40
  %42 = sub i64 %ll.011.i, %40
  %43 = getelementptr inbounds i8, i8* %r.012.i, i64 %40
  %44 = sub i64 %lr.013.i, %40
  %45 = tail call i32 @strcoll(i8* %41, i8* %43) #11
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %31, label %l_strcmp.exit.loopexit

l_strcmp.exit.loopexit:                           ; preds = %39, %38
  %.26.i.ph = phi i32 [ -1, %38 ], [ %45, %39 ]
  br label %l_strcmp.exit

l_strcmp.exit:                                    ; preds = %l_strcmp.exit.loopexit, %16, %35
  %.26.i = phi i32 [ %37, %35 ], [ %25, %16 ], [ %.26.i.ph, %l_strcmp.exit.loopexit ]
  %.lobit = lshr i32 %.26.i, 31
  br label %118

; <label>:47                                      ; preds = %8
  %48 = tail call %struct.lua_TValue.218* bitcast (%struct.lua_TValue* (%struct.lua_State*, %struct.lua_TValue*, i32)* @luaT_gettmbyobj to %struct.lua_TValue.218* (%struct.lua_State.215*, %struct.lua_TValue.218*, i32)*)(%struct.lua_State.215* %L, %struct.lua_TValue.218* %l, i32 13) #1
  %49 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %48, i64 0, i32 1
  %50 = load i32, i32* %49, align 4, !tbaa !10
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %call_orderTM.exit.thread, label %52

; <label>:52                                      ; preds = %47
  %53 = tail call %struct.lua_TValue.218* bitcast (%struct.lua_TValue* (%struct.lua_State*, %struct.lua_TValue*, i32)* @luaT_gettmbyobj to %struct.lua_TValue.218* (%struct.lua_State.215*, %struct.lua_TValue.218*, i32)*)(%struct.lua_State.215* %L, %struct.lua_TValue.218* %r, i32 13) #1
  %54 = tail call i32 @luaO_rawequalObj(%struct.lua_TValue.218* %48, %struct.lua_TValue.218* %53) #1
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %call_orderTM.exit.thread, label %56

; <label>:56                                      ; preds = %52
  %57 = getelementptr inbounds %struct.lua_State.215, %struct.lua_State.215* %L, i64 0, i32 4
  %58 = load %struct.lua_TValue.218*, %struct.lua_TValue.218** %57, align 8, !tbaa !1
  %59 = getelementptr inbounds %struct.lua_State.215, %struct.lua_State.215* %L, i64 0, i32 10
  %60 = bitcast %struct.lua_TValue.218** %59 to i64*
  %61 = load i64, i64* %60, align 8, !tbaa !50
  %62 = ptrtoint %struct.lua_TValue.218* %58 to i64
  %63 = sub i64 %62, %61
  %64 = bitcast %struct.lua_TValue.218* %48 to i64*
  %65 = bitcast %struct.lua_TValue.218* %58 to i64*
  %66 = load i64, i64* %64, align 8
  store i64 %66, i64* %65, align 8
  %67 = load i32, i32* %49, align 4, !tbaa !10
  %68 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %58, i64 0, i32 1
  store i32 %67, i32* %68, align 4, !tbaa !10
  %69 = load %struct.lua_TValue.218*, %struct.lua_TValue.218** %57, align 8, !tbaa !1
  %70 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %69, i64 1
  %71 = bitcast %struct.lua_TValue.218* %l to i64*
  %72 = bitcast %struct.lua_TValue.218* %70 to i64*
  %73 = load i64, i64* %71, align 8
  store i64 %73, i64* %72, align 8
  %74 = load i32, i32* %1, align 4, !tbaa !10
  %75 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %69, i64 1, i32 1
  store i32 %74, i32* %75, align 4, !tbaa !10
  %76 = load %struct.lua_TValue.218*, %struct.lua_TValue.218** %57, align 8, !tbaa !1
  %77 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %76, i64 2
  %78 = bitcast %struct.lua_TValue.218* %r to i64*
  %79 = bitcast %struct.lua_TValue.218* %77 to i64*
  %80 = load i64, i64* %78, align 8
  store i64 %80, i64* %79, align 8
  %81 = load i32, i32* %3, align 4, !tbaa !10
  %82 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %76, i64 2, i32 1
  store i32 %81, i32* %82, align 4, !tbaa !10
  %83 = getelementptr inbounds %struct.lua_State.215, %struct.lua_State.215* %L, i64 0, i32 9
  %84 = bitcast %struct.lua_TValue.218** %83 to i64*
  %85 = load i64, i64* %84, align 8, !tbaa !12
  %86 = bitcast %struct.lua_TValue.218** %57 to i64*
  %87 = load i64, i64* %86, align 8, !tbaa !1
  %88 = sub i64 %85, %87
  %89 = icmp slt i64 %88, 49
  %90 = inttoptr i64 %87 to %struct.lua_TValue.218*
  br i1 %89, label %91, label %callTMres.exit

; <label>:91                                      ; preds = %56
  tail call void bitcast (void (%struct.lua_State*, i32)* @luaD_growstack to void (%struct.lua_State.215*, i32)*)(%struct.lua_State.215* %L, i32 3) #1
  %.pre.i = load %struct.lua_TValue.218*, %struct.lua_TValue.218** %57, align 8, !tbaa !1
  br label %callTMres.exit

callTMres.exit:                                   ; preds = %56, %91
  %92 = phi %struct.lua_TValue.218* [ %90, %56 ], [ %.pre.i, %91 ]
  %93 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %92, i64 3
  store %struct.lua_TValue.218* %93, %struct.lua_TValue.218** %57, align 8, !tbaa !1
  tail call void bitcast (void (%struct.lua_State*, %struct.lua_TValue*, i32)* @luaD_call to void (%struct.lua_State.215*, %struct.lua_TValue.218*, i32)*)(%struct.lua_State.215* %L, %struct.lua_TValue.218* %92, i32 1) #1
  %94 = bitcast %struct.lua_TValue.218** %59 to i8**
  %95 = load i8*, i8** %94, align 8, !tbaa !50
  %96 = getelementptr inbounds i8, i8* %95, i64 %63
  %97 = load %struct.lua_TValue.218*, %struct.lua_TValue.218** %57, align 8, !tbaa !1
  %98 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %97, i64 -1
  store %struct.lua_TValue.218* %98, %struct.lua_TValue.218** %57, align 8, !tbaa !1
  %99 = bitcast %struct.lua_TValue.218* %98 to i64*
  %100 = bitcast i8* %96 to i64*
  %101 = load i64, i64* %99, align 8
  store i64 %101, i64* %100, align 8
  %102 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %97, i64 -1, i32 1
  %103 = load i32, i32* %102, align 4, !tbaa !10
  %104 = getelementptr inbounds i8, i8* %96, i64 8
  %105 = bitcast i8* %104 to i32*
  store i32 %103, i32* %105, align 4, !tbaa !10
  %106 = load %struct.lua_TValue.218*, %struct.lua_TValue.218** %57, align 8, !tbaa !1
  %107 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %106, i64 0, i32 1
  %108 = load i32, i32* %107, align 4, !tbaa !10
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %call_orderTM.exit, label %110

; <label>:110                                     ; preds = %callTMres.exit
  %111 = icmp eq i32 %108, 1
  br i1 %111, label %112, label %call_orderTM.exit

; <label>:112                                     ; preds = %110
  %113 = bitcast %struct.lua_TValue.218* %106 to i32*
  %114 = load i32, i32* %113, align 4, !tbaa !38
  %phitmp.i = icmp ne i32 %114, 0
  br label %call_orderTM.exit

call_orderTM.exit:                                ; preds = %callTMres.exit, %110, %112
  %115 = phi i1 [ false, %callTMres.exit ], [ true, %110 ], [ %phitmp.i, %112 ]
  %116 = zext i1 %115 to i32
  br label %118

call_orderTM.exit.thread:                         ; preds = %52, %47
  %117 = tail call i32 bitcast (i32 (%struct.lua_State*, %struct.lua_TValue*, %struct.lua_TValue*)* @luaG_ordererror to i32 (%struct.lua_State.215*, %struct.lua_TValue.218*, %struct.lua_TValue.218*)*)(%struct.lua_State.215* %L, %struct.lua_TValue.218* %l, %struct.lua_TValue.218* %r) #1
  br label %118

; <label>:118                                     ; preds = %call_orderTM.exit, %call_orderTM.exit.thread, %l_strcmp.exit, %9, %6
  %.0 = phi i32 [ %7, %6 ], [ %15, %9 ], [ %.lobit, %l_strcmp.exit ], [ %117, %call_orderTM.exit.thread ], [ %116, %call_orderTM.exit ]
  ret i32 %.0
}

; Function Attrs: nounwind uwtable
define hidden i32 @luaV_equalval(%struct.lua_State.215* %L, %struct.lua_TValue.218* nocapture readonly %t1, %struct.lua_TValue.218* nocapture readonly %t2) #0 {
  %1 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %t1, i64 0, i32 1
  %2 = load i32, i32* %1, align 4, !tbaa !10
  switch i32 %2, label %108 [
    i32 0, label %get_compTM.exit.thread
    i32 3, label %3
    i32 1, label %10
    i32 2, label %17
    i32 7, label %24
    i32 5, label %66
  ]

; <label>:3                                       ; preds = %0
  %4 = bitcast %struct.lua_TValue.218* %t1 to double*
  %5 = load double, double* %4, align 8, !tbaa !36
  %6 = bitcast %struct.lua_TValue.218* %t2 to double*
  %7 = load double, double* %6, align 8, !tbaa !36
  %8 = fcmp oeq double %5, %7
  %9 = zext i1 %8 to i32
  br label %get_compTM.exit.thread

; <label>:10                                      ; preds = %0
  %11 = bitcast %struct.lua_TValue.218* %t1 to i32*
  %12 = load i32, i32* %11, align 4, !tbaa !38
  %13 = bitcast %struct.lua_TValue.218* %t2 to i32*
  %14 = load i32, i32* %13, align 4, !tbaa !38
  %15 = icmp eq i32 %12, %14
  %16 = zext i1 %15 to i32
  br label %get_compTM.exit.thread

; <label>:17                                      ; preds = %0
  %18 = bitcast %struct.lua_TValue.218* %t1 to i8**
  %19 = load i8*, i8** %18, align 8, !tbaa !25
  %20 = bitcast %struct.lua_TValue.218* %t2 to i8**
  %21 = load i8*, i8** %20, align 8, !tbaa !25
  %22 = icmp eq i8* %19, %21
  %23 = zext i1 %22 to i32
  br label %get_compTM.exit.thread

; <label>:24                                      ; preds = %0
  %25 = bitcast %struct.lua_TValue.218* %t1 to %struct.anon.0.381**
  %26 = load %struct.anon.0.381*, %struct.anon.0.381** %25, align 8, !tbaa !25
  %27 = bitcast %struct.lua_TValue.218* %t2 to %struct.anon.0.381**
  %28 = load %struct.anon.0.381*, %struct.anon.0.381** %27, align 8, !tbaa !25
  %29 = icmp eq %struct.anon.0.381* %26, %28
  br i1 %29, label %get_compTM.exit.thread, label %30

; <label>:30                                      ; preds = %24
  %31 = getelementptr inbounds %struct.anon.0.381, %struct.anon.0.381* %26, i64 0, i32 3
  %32 = load %struct.Table.208*, %struct.Table.208** %31, align 8, !tbaa !49
  %33 = getelementptr inbounds %struct.anon.0.381, %struct.anon.0.381* %28, i64 0, i32 3
  %34 = load %struct.Table.208*, %struct.Table.208** %33, align 8, !tbaa !49
  %35 = icmp eq %struct.Table.208* %32, null
  br i1 %35, label %get_compTM.exit.thread, label %36

; <label>:36                                      ; preds = %30
  %37 = getelementptr inbounds %struct.Table.208, %struct.Table.208* %32, i64 0, i32 3
  %38 = load i8, i8* %37, align 1, !tbaa !187
  %39 = and i8 %38, 16
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %41, label %get_compTM.exit.thread

; <label>:41                                      ; preds = %36
  %42 = getelementptr inbounds %struct.lua_State.215, %struct.lua_State.215* %L, i64 0, i32 6
  %43 = load %struct.global_State.211*, %struct.global_State.211** %42, align 8, !tbaa !17
  %44 = getelementptr inbounds %struct.global_State.211, %struct.global_State.211* %43, i64 0, i32 24, i64 4
  %45 = load %union.TString.210*, %union.TString.210** %44, align 8, !tbaa !25
  %46 = tail call %struct.lua_TValue.218* bitcast (%struct.lua_TValue* (%struct.Table*, i32, %union.TString*)* @luaT_gettm to %struct.lua_TValue.218* (%struct.Table.208*, i32, %union.TString.210*)*)(%struct.Table.208* %32, i32 4, %union.TString.210* %45) #1
  %47 = icmp eq %struct.lua_TValue.218* %46, null
  br i1 %47, label %get_compTM.exit.thread, label %48

; <label>:48                                      ; preds = %41
  %49 = icmp eq %struct.Table.208* %32, %34
  br i1 %49, label %115, label %50

; <label>:50                                      ; preds = %48
  %51 = icmp eq %struct.Table.208* %34, null
  br i1 %51, label %get_compTM.exit.thread, label %52

; <label>:52                                      ; preds = %50
  %53 = getelementptr inbounds %struct.Table.208, %struct.Table.208* %34, i64 0, i32 3
  %54 = load i8, i8* %53, align 1, !tbaa !187
  %55 = and i8 %54, 16
  %56 = icmp eq i8 %55, 0
  br i1 %56, label %57, label %get_compTM.exit.thread

; <label>:57                                      ; preds = %52
  %58 = load %struct.global_State.211*, %struct.global_State.211** %42, align 8, !tbaa !17
  %59 = getelementptr inbounds %struct.global_State.211, %struct.global_State.211* %58, i64 0, i32 24, i64 4
  %60 = load %union.TString.210*, %union.TString.210** %59, align 8, !tbaa !25
  %61 = tail call %struct.lua_TValue.218* bitcast (%struct.lua_TValue* (%struct.Table*, i32, %union.TString*)* @luaT_gettm to %struct.lua_TValue.218* (%struct.Table.208*, i32, %union.TString.210*)*)(%struct.Table.208* %34, i32 4, %union.TString.210* %60) #1
  %62 = icmp eq %struct.lua_TValue.218* %61, null
  br i1 %62, label %get_compTM.exit.thread, label %63

; <label>:63                                      ; preds = %57
  %64 = tail call i32 @luaO_rawequalObj(%struct.lua_TValue.218* %46, %struct.lua_TValue.218* %61) #1
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %get_compTM.exit.thread, label %115

; <label>:66                                      ; preds = %0
  %67 = bitcast %struct.lua_TValue.218* %t1 to %struct.Table.208**
  %68 = load %struct.Table.208*, %struct.Table.208** %67, align 8, !tbaa !25
  %69 = bitcast %struct.lua_TValue.218* %t2 to %struct.Table.208**
  %70 = load %struct.Table.208*, %struct.Table.208** %69, align 8, !tbaa !25
  %71 = icmp eq %struct.Table.208* %68, %70
  br i1 %71, label %get_compTM.exit.thread, label %72

; <label>:72                                      ; preds = %66
  %73 = getelementptr inbounds %struct.Table.208, %struct.Table.208* %68, i64 0, i32 5
  %74 = load %struct.Table.208*, %struct.Table.208** %73, align 8, !tbaa !47
  %75 = getelementptr inbounds %struct.Table.208, %struct.Table.208* %70, i64 0, i32 5
  %76 = load %struct.Table.208*, %struct.Table.208** %75, align 8, !tbaa !47
  %77 = icmp eq %struct.Table.208* %74, null
  br i1 %77, label %get_compTM.exit.thread, label %78

; <label>:78                                      ; preds = %72
  %79 = getelementptr inbounds %struct.Table.208, %struct.Table.208* %74, i64 0, i32 3
  %80 = load i8, i8* %79, align 1, !tbaa !187
  %81 = and i8 %80, 16
  %82 = icmp eq i8 %81, 0
  br i1 %82, label %83, label %get_compTM.exit.thread

; <label>:83                                      ; preds = %78
  %84 = getelementptr inbounds %struct.lua_State.215, %struct.lua_State.215* %L, i64 0, i32 6
  %85 = load %struct.global_State.211*, %struct.global_State.211** %84, align 8, !tbaa !17
  %86 = getelementptr inbounds %struct.global_State.211, %struct.global_State.211* %85, i64 0, i32 24, i64 4
  %87 = load %union.TString.210*, %union.TString.210** %86, align 8, !tbaa !25
  %88 = tail call %struct.lua_TValue.218* bitcast (%struct.lua_TValue* (%struct.Table*, i32, %union.TString*)* @luaT_gettm to %struct.lua_TValue.218* (%struct.Table.208*, i32, %union.TString.210*)*)(%struct.Table.208* %74, i32 4, %union.TString.210* %87) #1
  %89 = icmp eq %struct.lua_TValue.218* %88, null
  br i1 %89, label %get_compTM.exit.thread, label %90

; <label>:90                                      ; preds = %83
  %91 = icmp eq %struct.Table.208* %74, %76
  br i1 %91, label %115, label %92

; <label>:92                                      ; preds = %90
  %93 = icmp eq %struct.Table.208* %76, null
  br i1 %93, label %get_compTM.exit.thread, label %94

; <label>:94                                      ; preds = %92
  %95 = getelementptr inbounds %struct.Table.208, %struct.Table.208* %76, i64 0, i32 3
  %96 = load i8, i8* %95, align 1, !tbaa !187
  %97 = and i8 %96, 16
  %98 = icmp eq i8 %97, 0
  br i1 %98, label %99, label %get_compTM.exit.thread

; <label>:99                                      ; preds = %94
  %100 = load %struct.global_State.211*, %struct.global_State.211** %84, align 8, !tbaa !17
  %101 = getelementptr inbounds %struct.global_State.211, %struct.global_State.211* %100, i64 0, i32 24, i64 4
  %102 = load %union.TString.210*, %union.TString.210** %101, align 8, !tbaa !25
  %103 = tail call %struct.lua_TValue.218* bitcast (%struct.lua_TValue* (%struct.Table*, i32, %union.TString*)* @luaT_gettm to %struct.lua_TValue.218* (%struct.Table.208*, i32, %union.TString.210*)*)(%struct.Table.208* %76, i32 4, %union.TString.210* %102) #1
  %104 = icmp eq %struct.lua_TValue.218* %103, null
  br i1 %104, label %get_compTM.exit.thread, label %105

; <label>:105                                     ; preds = %99
  %106 = tail call i32 @luaO_rawequalObj(%struct.lua_TValue.218* %88, %struct.lua_TValue.218* %103) #1
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %get_compTM.exit.thread, label %115

; <label>:108                                     ; preds = %0
  %109 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %t1, i64 0, i32 0, i32 0
  %110 = load %union.GCObject.216*, %union.GCObject.216** %109, align 8, !tbaa !25
  %111 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %t2, i64 0, i32 0, i32 0
  %112 = load %union.GCObject.216*, %union.GCObject.216** %111, align 8, !tbaa !25
  %113 = icmp eq %union.GCObject.216* %110, %112
  %114 = zext i1 %113 to i32
  br label %get_compTM.exit.thread

; <label>:115                                     ; preds = %48, %63, %90, %105
  %tm.0.ph = phi %struct.lua_TValue.218* [ %88, %105 ], [ %88, %90 ], [ %46, %63 ], [ %46, %48 ]
  %116 = getelementptr inbounds %struct.lua_State.215, %struct.lua_State.215* %L, i64 0, i32 4
  %117 = load %struct.lua_TValue.218*, %struct.lua_TValue.218** %116, align 8, !tbaa !1
  %118 = getelementptr inbounds %struct.lua_State.215, %struct.lua_State.215* %L, i64 0, i32 10
  %119 = bitcast %struct.lua_TValue.218** %118 to i64*
  %120 = load i64, i64* %119, align 8, !tbaa !50
  %121 = ptrtoint %struct.lua_TValue.218* %117 to i64
  %122 = sub i64 %121, %120
  %123 = bitcast %struct.lua_TValue.218* %tm.0.ph to i64*
  %124 = bitcast %struct.lua_TValue.218* %117 to i64*
  %125 = load i64, i64* %123, align 8
  store i64 %125, i64* %124, align 8
  %126 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %tm.0.ph, i64 0, i32 1
  %127 = load i32, i32* %126, align 4, !tbaa !10
  %128 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %117, i64 0, i32 1
  store i32 %127, i32* %128, align 4, !tbaa !10
  %129 = load %struct.lua_TValue.218*, %struct.lua_TValue.218** %116, align 8, !tbaa !1
  %130 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %129, i64 1
  %131 = bitcast %struct.lua_TValue.218* %t1 to i64*
  %132 = bitcast %struct.lua_TValue.218* %130 to i64*
  %133 = load i64, i64* %131, align 8
  store i64 %133, i64* %132, align 8
  %134 = load i32, i32* %1, align 4, !tbaa !10
  %135 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %129, i64 1, i32 1
  store i32 %134, i32* %135, align 4, !tbaa !10
  %136 = load %struct.lua_TValue.218*, %struct.lua_TValue.218** %116, align 8, !tbaa !1
  %137 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %136, i64 2
  %138 = bitcast %struct.lua_TValue.218* %t2 to i64*
  %139 = bitcast %struct.lua_TValue.218* %137 to i64*
  %140 = load i64, i64* %138, align 8
  store i64 %140, i64* %139, align 8
  %141 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %t2, i64 0, i32 1
  %142 = load i32, i32* %141, align 4, !tbaa !10
  %143 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %136, i64 2, i32 1
  store i32 %142, i32* %143, align 4, !tbaa !10
  %144 = getelementptr inbounds %struct.lua_State.215, %struct.lua_State.215* %L, i64 0, i32 9
  %145 = bitcast %struct.lua_TValue.218** %144 to i64*
  %146 = load i64, i64* %145, align 8, !tbaa !12
  %147 = bitcast %struct.lua_TValue.218** %116 to i64*
  %148 = load i64, i64* %147, align 8, !tbaa !1
  %149 = sub i64 %146, %148
  %150 = icmp slt i64 %149, 49
  %151 = inttoptr i64 %148 to %struct.lua_TValue.218*
  br i1 %150, label %152, label %callTMres.exit

; <label>:152                                     ; preds = %115
  tail call void bitcast (void (%struct.lua_State*, i32)* @luaD_growstack to void (%struct.lua_State.215*, i32)*)(%struct.lua_State.215* %L, i32 3) #1
  %.pre.i = load %struct.lua_TValue.218*, %struct.lua_TValue.218** %116, align 8, !tbaa !1
  br label %callTMres.exit

callTMres.exit:                                   ; preds = %115, %152
  %153 = phi %struct.lua_TValue.218* [ %151, %115 ], [ %.pre.i, %152 ]
  %154 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %153, i64 3
  store %struct.lua_TValue.218* %154, %struct.lua_TValue.218** %116, align 8, !tbaa !1
  tail call void bitcast (void (%struct.lua_State*, %struct.lua_TValue*, i32)* @luaD_call to void (%struct.lua_State.215*, %struct.lua_TValue.218*, i32)*)(%struct.lua_State.215* %L, %struct.lua_TValue.218* %153, i32 1) #1
  %155 = bitcast %struct.lua_TValue.218** %118 to i8**
  %156 = load i8*, i8** %155, align 8, !tbaa !50
  %157 = getelementptr inbounds i8, i8* %156, i64 %122
  %158 = load %struct.lua_TValue.218*, %struct.lua_TValue.218** %116, align 8, !tbaa !1
  %159 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %158, i64 -1
  store %struct.lua_TValue.218* %159, %struct.lua_TValue.218** %116, align 8, !tbaa !1
  %160 = bitcast %struct.lua_TValue.218* %159 to i64*
  %161 = bitcast i8* %157 to i64*
  %162 = load i64, i64* %160, align 8
  store i64 %162, i64* %161, align 8
  %163 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %158, i64 -1, i32 1
  %164 = load i32, i32* %163, align 4, !tbaa !10
  %165 = getelementptr inbounds i8, i8* %157, i64 8
  %166 = bitcast i8* %165 to i32*
  store i32 %164, i32* %166, align 4, !tbaa !10
  %167 = load %struct.lua_TValue.218*, %struct.lua_TValue.218** %116, align 8, !tbaa !1
  %168 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %167, i64 0, i32 1
  %169 = load i32, i32* %168, align 4, !tbaa !10
  %170 = icmp eq i32 %169, 0
  br i1 %170, label %176, label %171

; <label>:171                                     ; preds = %callTMres.exit
  %172 = icmp eq i32 %169, 1
  br i1 %172, label %173, label %176

; <label>:173                                     ; preds = %171
  %174 = bitcast %struct.lua_TValue.218* %167 to i32*
  %175 = load i32, i32* %174, align 4, !tbaa !38
  %phitmp = icmp ne i32 %175, 0
  br label %176

; <label>:176                                     ; preds = %171, %173, %callTMres.exit
  %177 = phi i1 [ false, %callTMres.exit ], [ true, %171 ], [ %phitmp, %173 ]
  %178 = zext i1 %177 to i32
  br label %get_compTM.exit.thread

get_compTM.exit.thread:                           ; preds = %105, %63, %94, %92, %78, %72, %99, %83, %52, %50, %36, %30, %57, %41, %66, %24, %0, %176, %108, %17, %10, %3
  %.0 = phi i32 [ %114, %108 ], [ %178, %176 ], [ %23, %17 ], [ %16, %10 ], [ %9, %3 ], [ 1, %0 ], [ 1, %24 ], [ 1, %66 ], [ 0, %41 ], [ 0, %57 ], [ 0, %30 ], [ 0, %36 ], [ 0, %50 ], [ 0, %52 ], [ 0, %83 ], [ 0, %99 ], [ 0, %72 ], [ 0, %78 ], [ 0, %92 ], [ 0, %94 ], [ 0, %63 ], [ 0, %105 ]
  ret i32 %.0
}

; Function Attrs: nounwind uwtable
define hidden void @luaV_concat(%struct.lua_State.215* %L, i32 %total, i32 %last) #0 {
  %s.i = alloca [32 x i8], align 16
  %1 = getelementptr inbounds %struct.lua_State.215, %struct.lua_State.215* %L, i64 0, i32 5
  %2 = getelementptr inbounds [32 x i8], [32 x i8]* %s.i, i64 0, i64 0
  %3 = getelementptr inbounds %struct.lua_State.215, %struct.lua_State.215* %L, i64 0, i32 6
  %4 = getelementptr inbounds %struct.lua_State.215, %struct.lua_State.215* %L, i64 0, i32 10
  %5 = bitcast %struct.lua_TValue.218** %4 to i64*
  %6 = getelementptr inbounds %struct.lua_State.215, %struct.lua_State.215* %L, i64 0, i32 4
  %7 = getelementptr inbounds %struct.lua_State.215, %struct.lua_State.215* %L, i64 0, i32 9
  %8 = bitcast %struct.lua_TValue.218** %7 to i64*
  %9 = bitcast %struct.lua_TValue.218** %6 to i64*
  %10 = bitcast %struct.lua_TValue.218** %4 to i8**
  br label %11

; <label>:11                                      ; preds = %luaV_tostring.exit8, %0
  %.03 = phi i32 [ %last, %0 ], [ %146, %luaV_tostring.exit8 ]
  %.0 = phi i32 [ %total, %0 ], [ %145, %luaV_tostring.exit8 ]
  %12 = load %struct.lua_TValue.218*, %struct.lua_TValue.218** %1, align 8, !tbaa !11
  %13 = sext i32 %.03 to i64
  %14 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %12, i64 %13
  %15 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %14, i64 1
  %16 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %15, i64 -2
  %17 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %16, i64 0, i32 1
  %18 = load i32, i32* %17, align 4, !tbaa !10
  %.off = add i32 %18, -3
  %switch = icmp ult i32 %.off, 2
  %19 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %15, i64 -1
  br i1 %switch, label %20, label %luaV_tostring.exit.thread

; <label>:20                                      ; preds = %11
  %21 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %19, i64 0, i32 1
  %22 = load i32, i32* %21, align 4, !tbaa !10
  switch i32 %22, label %luaV_tostring.exit.thread [
    i32 4, label %82
    i32 3, label %luaV_tostring.exit
  ]

luaV_tostring.exit:                               ; preds = %20
  call void @llvm.lifetime.start(i64 32, i8* %2) #1
  %23 = bitcast %struct.lua_TValue.218* %19 to double*
  %24 = load double, double* %23, align 8, !tbaa !36
  %25 = call i32 (i8*, i8*, ...) @sprintf(i8* %2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.718, i64 0, i64 0), double %24) #1
  %26 = call i64 @strlen(i8* %2) #11
  %27 = call %union.TString.210* bitcast (%union.TString* (%struct.lua_State*, i8*, i64)* @luaS_newlstr to %union.TString.210* (%struct.lua_State.215*, i8*, i64)*)(%struct.lua_State.215* %L, i8* %2, i64 %26) #1
  %28 = bitcast %struct.lua_TValue.218* %19 to %union.TString.210**
  store %union.TString.210* %27, %union.TString.210** %28, align 8, !tbaa !25
  store i32 4, i32* %21, align 4, !tbaa !10
  call void @llvm.lifetime.end(i64 32, i8* %2) #1
  br label %82

luaV_tostring.exit.thread:                        ; preds = %11, %20
  %29 = call %struct.lua_TValue.218* bitcast (%struct.lua_TValue* (%struct.lua_State*, %struct.lua_TValue*, i32)* @luaT_gettmbyobj to %struct.lua_TValue.218* (%struct.lua_State.215*, %struct.lua_TValue.218*, i32)*)(%struct.lua_State.215* %L, %struct.lua_TValue.218* %16, i32 15) #1
  %30 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %29, i64 0, i32 1
  %31 = load i32, i32* %30, align 4, !tbaa !10
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %.thread.i

; <label>:33                                      ; preds = %luaV_tostring.exit.thread
  %34 = call %struct.lua_TValue.218* bitcast (%struct.lua_TValue* (%struct.lua_State*, %struct.lua_TValue*, i32)* @luaT_gettmbyobj to %struct.lua_TValue.218* (%struct.lua_State.215*, %struct.lua_TValue.218*, i32)*)(%struct.lua_State.215* %L, %struct.lua_TValue.218* %19, i32 15) #1
  %.phi.trans.insert.i = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %34, i64 0, i32 1
  %.pre.i = load i32, i32* %.phi.trans.insert.i, align 4, !tbaa !10
  %35 = icmp eq i32 %.pre.i, 0
  br i1 %35, label %81, label %.thread.i

.thread.i:                                        ; preds = %33, %luaV_tostring.exit.thread
  %tm.01.i = phi %struct.lua_TValue.218* [ %34, %33 ], [ %29, %luaV_tostring.exit.thread ]
  %36 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %15, i64 -1
  %37 = load i64, i64* %5, align 8, !tbaa !50
  %38 = ptrtoint %struct.lua_TValue.218* %16 to i64
  %39 = sub i64 %38, %37
  %40 = load %struct.lua_TValue.218*, %struct.lua_TValue.218** %6, align 8, !tbaa !1
  %41 = bitcast %struct.lua_TValue.218* %tm.01.i to i64*
  %42 = bitcast %struct.lua_TValue.218* %40 to i64*
  %43 = load i64, i64* %41, align 8
  store i64 %43, i64* %42, align 8
  %44 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %tm.01.i, i64 0, i32 1
  %45 = load i32, i32* %44, align 4, !tbaa !10
  %46 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %40, i64 0, i32 1
  store i32 %45, i32* %46, align 4, !tbaa !10
  %47 = load %struct.lua_TValue.218*, %struct.lua_TValue.218** %6, align 8, !tbaa !1
  %48 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %47, i64 1
  %49 = bitcast %struct.lua_TValue.218* %16 to i64*
  %50 = bitcast %struct.lua_TValue.218* %48 to i64*
  %51 = load i64, i64* %49, align 8
  store i64 %51, i64* %50, align 8
  %52 = load i32, i32* %17, align 4, !tbaa !10
  %53 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %47, i64 1, i32 1
  store i32 %52, i32* %53, align 4, !tbaa !10
  %54 = load %struct.lua_TValue.218*, %struct.lua_TValue.218** %6, align 8, !tbaa !1
  %55 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %54, i64 2
  %56 = bitcast %struct.lua_TValue.218* %19 to i64*
  %57 = bitcast %struct.lua_TValue.218* %55 to i64*
  %58 = load i64, i64* %56, align 8
  store i64 %58, i64* %57, align 8
  %59 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %36, i64 0, i32 1
  %60 = load i32, i32* %59, align 4, !tbaa !10
  %61 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %54, i64 2, i32 1
  store i32 %60, i32* %61, align 4, !tbaa !10
  %62 = load i64, i64* %8, align 8, !tbaa !12
  %63 = load i64, i64* %9, align 8, !tbaa !1
  %64 = sub i64 %62, %63
  %65 = icmp slt i64 %64, 49
  %66 = inttoptr i64 %63 to %struct.lua_TValue.218*
  br i1 %65, label %67, label %call_binTM.exit

; <label>:67                                      ; preds = %.thread.i
  call void bitcast (void (%struct.lua_State*, i32)* @luaD_growstack to void (%struct.lua_State.215*, i32)*)(%struct.lua_State.215* %L, i32 3) #1
  %.pre.i.5 = load %struct.lua_TValue.218*, %struct.lua_TValue.218** %6, align 8, !tbaa !1
  br label %call_binTM.exit

call_binTM.exit:                                  ; preds = %67, %.thread.i
  %68 = phi %struct.lua_TValue.218* [ %66, %.thread.i ], [ %.pre.i.5, %67 ]
  %69 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %68, i64 3
  store %struct.lua_TValue.218* %69, %struct.lua_TValue.218** %6, align 8, !tbaa !1
  call void bitcast (void (%struct.lua_State*, %struct.lua_TValue*, i32)* @luaD_call to void (%struct.lua_State.215*, %struct.lua_TValue.218*, i32)*)(%struct.lua_State.215* %L, %struct.lua_TValue.218* %68, i32 1) #1
  %70 = load i8*, i8** %10, align 8, !tbaa !50
  %71 = getelementptr inbounds i8, i8* %70, i64 %39
  %72 = load %struct.lua_TValue.218*, %struct.lua_TValue.218** %6, align 8, !tbaa !1
  %73 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %72, i64 -1
  store %struct.lua_TValue.218* %73, %struct.lua_TValue.218** %6, align 8, !tbaa !1
  %74 = bitcast %struct.lua_TValue.218* %73 to i64*
  %75 = bitcast i8* %71 to i64*
  %76 = load i64, i64* %74, align 8
  store i64 %76, i64* %75, align 8
  %77 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %72, i64 -1, i32 1
  %78 = load i32, i32* %77, align 4, !tbaa !10
  %79 = getelementptr inbounds i8, i8* %71, i64 8
  %80 = bitcast i8* %79 to i32*
  store i32 %78, i32* %80, align 4, !tbaa !10
  br label %luaV_tostring.exit8

; <label>:81                                      ; preds = %33
  call void bitcast (void (%struct.lua_State*, %struct.lua_TValue*, %struct.lua_TValue*)* @luaG_concaterror to void (%struct.lua_State.215*, %struct.lua_TValue.218*, %struct.lua_TValue.218*)*)(%struct.lua_State.215* %L, %struct.lua_TValue.218* %16, %struct.lua_TValue.218* %19) #1
  br label %luaV_tostring.exit8

; <label>:82                                      ; preds = %20, %luaV_tostring.exit
  %83 = bitcast %struct.lua_TValue.218* %19 to %struct.anon.209**
  %84 = load %struct.anon.209*, %struct.anon.209** %83, align 8, !tbaa !25
  %85 = getelementptr inbounds %struct.anon.209, %struct.anon.209* %84, i64 0, i32 5
  %86 = load i64, i64* %85, align 8, !tbaa !40
  %87 = icmp eq i64 %86, 0
  br i1 %87, label %90, label %.preheader

.preheader:                                       ; preds = %82
  %88 = icmp sgt i32 %.0, 1
  br i1 %88, label %.lr.ph, label %.critedge

.lr.ph:                                           ; preds = %.preheader
  %89 = sext i32 %.0 to i64
  br label %99

; <label>:90                                      ; preds = %82
  %91 = load i32, i32* %17, align 4, !tbaa !10
  %cond = icmp eq i32 %91, 3
  br i1 %cond, label %92, label %luaV_tostring.exit8

; <label>:92                                      ; preds = %90
  call void @llvm.lifetime.start(i64 32, i8* %2) #1
  %93 = bitcast %struct.lua_TValue.218* %16 to double*
  %94 = load double, double* %93, align 8, !tbaa !36
  %95 = call i32 (i8*, i8*, ...) @sprintf(i8* %2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.718, i64 0, i64 0), double %94) #1
  %96 = call i64 @strlen(i8* %2) #11
  %97 = call %union.TString.210* bitcast (%union.TString* (%struct.lua_State*, i8*, i64)* @luaS_newlstr to %union.TString.210* (%struct.lua_State.215*, i8*, i64)*)(%struct.lua_State.215* %L, i8* %2, i64 %96) #1
  %98 = bitcast %struct.lua_TValue.218* %16 to %union.TString.210**
  store %union.TString.210* %97, %union.TString.210** %98, align 8, !tbaa !25
  store i32 4, i32* %17, align 4, !tbaa !10
  call void @llvm.lifetime.end(i64 32, i8* %2) #1
  br label %luaV_tostring.exit8

; <label>:99                                      ; preds = %.lr.ph, %118
  %indvars.iv = phi i64 [ 1, %.lr.ph ], [ %indvars.iv.next, %118 ]
  %tl.012 = phi i64 [ %86, %.lr.ph ], [ %119, %118 ]
  %100 = sub nsw i64 0, %indvars.iv
  %101 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %15, i64 %100
  %102 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %101, i64 -1
  %103 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %102, i64 0, i32 1
  %104 = load i32, i32* %103, align 4, !tbaa !10
  switch i32 %104, label %..critedge_crit_edge [
    i32 4, label %.critedge2
    i32 3, label %luaV_tostring.exit11
  ]

luaV_tostring.exit11:                             ; preds = %99
  call void @llvm.lifetime.start(i64 32, i8* %2) #1
  %105 = bitcast %struct.lua_TValue.218* %102 to double*
  %106 = load double, double* %105, align 8, !tbaa !36
  %107 = call i32 (i8*, i8*, ...) @sprintf(i8* %2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.718, i64 0, i64 0), double %106) #1
  %108 = call i64 @strlen(i8* %2) #11
  %109 = call %union.TString.210* bitcast (%union.TString* (%struct.lua_State*, i8*, i64)* @luaS_newlstr to %union.TString.210* (%struct.lua_State.215*, i8*, i64)*)(%struct.lua_State.215* %L, i8* %2, i64 %108) #1
  %110 = bitcast %struct.lua_TValue.218* %102 to %union.TString.210**
  store %union.TString.210* %109, %union.TString.210** %110, align 8, !tbaa !25
  store i32 4, i32* %103, align 4, !tbaa !10
  call void @llvm.lifetime.end(i64 32, i8* %2) #1
  br label %.critedge2

.critedge2:                                       ; preds = %99, %luaV_tostring.exit11
  %111 = bitcast %struct.lua_TValue.218* %102 to %struct.anon.209**
  %112 = load %struct.anon.209*, %struct.anon.209** %111, align 8, !tbaa !25
  %113 = getelementptr inbounds %struct.anon.209, %struct.anon.209* %112, i64 0, i32 5
  %114 = load i64, i64* %113, align 8, !tbaa !40
  %115 = sub i64 -3, %tl.012
  %116 = icmp ult i64 %114, %115
  br i1 %116, label %118, label %117

; <label>:117                                     ; preds = %.critedge2
  call void (%struct.lua_State.215*, i8*, ...) bitcast (void (%struct.lua_State*, i8*, ...)* @luaG_runerror to void (%struct.lua_State.215*, i8*, ...)*)(%struct.lua_State.215* %L, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.722, i64 0, i64 0)) #1
  br label %118

; <label>:118                                     ; preds = %.critedge2, %117
  %119 = add i64 %114, %tl.012
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %120 = icmp slt i64 %indvars.iv.next, %89
  br i1 %120, label %99, label %..critedge_crit_edge.15

..critedge_crit_edge:                             ; preds = %99
  %tl.012.lcssa = phi i64 [ %tl.012, %99 ]
  %indvars.iv.lcssa = phi i64 [ %indvars.iv, %99 ]
  %121 = trunc i64 %indvars.iv.lcssa to i32
  br label %.critedge

..critedge_crit_edge.15:                          ; preds = %118
  %indvars.iv.next.lcssa = phi i64 [ %indvars.iv.next, %118 ]
  %.lcssa = phi i64 [ %119, %118 ]
  %122 = trunc i64 %indvars.iv.next.lcssa to i32
  br label %.critedge

.critedge:                                        ; preds = %..critedge_crit_edge.15, %..critedge_crit_edge, %.preheader
  %n.0.lcssa = phi i32 [ %121, %..critedge_crit_edge ], [ %122, %..critedge_crit_edge.15 ], [ 1, %.preheader ]
  %tl.0.lcssa = phi i64 [ %tl.012.lcssa, %..critedge_crit_edge ], [ %.lcssa, %..critedge_crit_edge.15 ], [ %86, %.preheader ]
  %123 = load %struct.global_State.211*, %struct.global_State.211** %3, align 8, !tbaa !17
  %124 = getelementptr inbounds %struct.global_State.211, %struct.global_State.211* %123, i64 0, i32 12
  %125 = call i8* bitcast (i8* (%struct.lua_State*, %struct.Mbuffer*, i64)* @luaZ_openspace to i8* (%struct.lua_State.215*, %struct.Mbuffer*, i64)*)(%struct.lua_State.215* %L, %struct.Mbuffer* %124, i64 %tl.0.lcssa) #1
  %126 = icmp sgt i32 %n.0.lcssa, 0
  %127 = sext i32 %n.0.lcssa to i64
  br i1 %126, label %.lr.ph20.preheader, label %._crit_edge

.lr.ph20.preheader:                               ; preds = %.critedge
  br label %.lr.ph20

.lr.ph20:                                         ; preds = %.lr.ph20.preheader, %.lr.ph20
  %indvars.iv26 = phi i64 [ %indvars.iv.next27, %.lr.ph20 ], [ %127, %.lr.ph20.preheader ]
  %tl.118 = phi i64 [ %137, %.lr.ph20 ], [ 0, %.lr.ph20.preheader ]
  %128 = sub nsw i64 0, %indvars.iv26
  %129 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %15, i64 %128
  %130 = bitcast %struct.lua_TValue.218* %129 to %union.TString.210**
  %131 = load %union.TString.210*, %union.TString.210** %130, align 8, !tbaa !25
  %132 = getelementptr inbounds %union.TString.210, %union.TString.210* %131, i64 0, i32 0, i32 5
  %133 = load i64, i64* %132, align 8, !tbaa !40
  %134 = getelementptr inbounds i8, i8* %125, i64 %tl.118
  %135 = getelementptr inbounds %union.TString.210, %union.TString.210* %131, i64 1
  %136 = bitcast %union.TString.210* %135 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %134, i8* %136, i64 %133, i32 1, i1 false)
  %137 = add i64 %133, %tl.118
  %indvars.iv.next27 = add nsw i64 %indvars.iv26, -1
  %138 = icmp sgt i64 %indvars.iv26, 1
  br i1 %138, label %.lr.ph20, label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %.lr.ph20
  %.lcssa41 = phi i64 [ %137, %.lr.ph20 ]
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %.critedge
  %tl.1.lcssa = phi i64 [ 0, %.critedge ], [ %.lcssa41, %._crit_edge.loopexit ]
  %139 = sub nsw i64 0, %127
  %140 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %15, i64 %139
  %141 = call %union.TString.210* bitcast (%union.TString* (%struct.lua_State*, i8*, i64)* @luaS_newlstr to %union.TString.210* (%struct.lua_State.215*, i8*, i64)*)(%struct.lua_State.215* %L, i8* %125, i64 %tl.1.lcssa) #1
  %142 = bitcast %struct.lua_TValue.218* %140 to %union.TString.210**
  store %union.TString.210* %141, %union.TString.210** %142, align 8, !tbaa !25
  %143 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %140, i64 0, i32 1
  store i32 4, i32* %143, align 4, !tbaa !10
  br label %luaV_tostring.exit8

luaV_tostring.exit8:                              ; preds = %90, %92, %call_binTM.exit, %._crit_edge, %81
  %n.1 = phi i32 [ %n.0.lcssa, %._crit_edge ], [ 2, %call_binTM.exit ], [ 2, %81 ], [ 2, %92 ], [ 2, %90 ]
  %144 = add nsw i32 %n.1, -1
  %145 = sub nsw i32 %.0, %144
  %146 = sub nsw i32 %.03, %144
  %147 = icmp sgt i32 %145, 1
  br i1 %147, label %11, label %148

; <label>:148                                     ; preds = %luaV_tostring.exit8
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @luaV_execute(%struct.lua_State.215* %L, i32 %nexeccalls) #0 {
  %num.i.204 = alloca double, align 8
  %num.i.201 = alloca double, align 8
  %num.i.190 = alloca double, align 8
  %num.i.187 = alloca double, align 8
  %num.i.176 = alloca double, align 8
  %num.i.173 = alloca double, align 8
  %num.i.162 = alloca double, align 8
  %num.i.159 = alloca double, align 8
  %num.i.148 = alloca double, align 8
  %num.i.145 = alloca double, align 8
  %num.i.134 = alloca double, align 8
  %num.i.131 = alloca double, align 8
  %num.i.120 = alloca double, align 8
  %num.i.117 = alloca double, align 8
  %num.i.114 = alloca double, align 8
  %num.i.111 = alloca double, align 8
  %num.i = alloca double, align 8
  %tempb.i.105 = alloca %struct.lua_TValue.218, align 8
  %tempb.i.102 = alloca %struct.lua_TValue.218, align 8
  %tempc.i.103 = alloca %struct.lua_TValue.218, align 8
  %tempb.i.99 = alloca %struct.lua_TValue.218, align 8
  %tempc.i.100 = alloca %struct.lua_TValue.218, align 8
  %tempb.i.96 = alloca %struct.lua_TValue.218, align 8
  %tempc.i.97 = alloca %struct.lua_TValue.218, align 8
  %tempb.i.93 = alloca %struct.lua_TValue.218, align 8
  %tempc.i.94 = alloca %struct.lua_TValue.218, align 8
  %tempb.i.90 = alloca %struct.lua_TValue.218, align 8
  %tempc.i.91 = alloca %struct.lua_TValue.218, align 8
  %tempb.i = alloca %struct.lua_TValue.218, align 8
  %tempc.i = alloca %struct.lua_TValue.218, align 8
  %g = alloca %struct.lua_TValue.218, align 8
  %g7 = alloca %struct.lua_TValue.218, align 8
  %1 = getelementptr inbounds %struct.lua_State.215, %struct.lua_State.215* %L, i64 0, i32 8
  %2 = getelementptr inbounds %struct.lua_State.215, %struct.lua_State.215* %L, i64 0, i32 7
  %3 = getelementptr inbounds %struct.lua_State.215, %struct.lua_State.215* %L, i64 0, i32 5
  %4 = getelementptr inbounds %struct.lua_State.215, %struct.lua_State.215* %L, i64 0, i32 17
  %5 = bitcast %struct.lua_TValue.218* %g to i8*
  %6 = bitcast %struct.lua_TValue.218* %g to i64*
  %7 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %g, i64 0, i32 1
  %8 = bitcast %struct.lua_TValue.218* %g7 to i8*
  %9 = bitcast %struct.lua_TValue.218* %g7 to i64*
  %10 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %g7, i64 0, i32 1
  %11 = getelementptr inbounds %struct.lua_State.215, %struct.lua_State.215* %L, i64 0, i32 6
  %12 = bitcast %struct.lua_TValue.218* %tempb.i to i8*
  %13 = bitcast %struct.lua_TValue.218* %tempc.i to i8*
  %14 = bitcast double* %num.i.117 to i8*
  %15 = getelementptr inbounds %struct.lua_State.215, %struct.lua_State.215* %L, i64 0, i32 10
  %16 = bitcast %struct.lua_TValue.218** %15 to i64*
  %17 = getelementptr inbounds %struct.lua_State.215, %struct.lua_State.215* %L, i64 0, i32 4
  %18 = getelementptr inbounds %struct.lua_State.215, %struct.lua_State.215* %L, i64 0, i32 9
  %19 = bitcast %struct.lua_TValue.218** %18 to i64*
  %20 = bitcast %struct.lua_TValue.218** %17 to i64*
  %21 = bitcast %struct.lua_TValue.218** %15 to i8**
  %22 = bitcast double* %num.i.120 to i8*
  %23 = bitcast double* %num.i.120 to i64*
  %24 = bitcast %struct.lua_TValue.218* %tempc.i to i64*
  %25 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %tempc.i, i64 0, i32 1
  %26 = bitcast double* %num.i.117 to i64*
  %27 = bitcast %struct.lua_TValue.218* %tempb.i to i64*
  %28 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %tempb.i, i64 0, i32 1
  %29 = bitcast %struct.lua_TValue.218* %tempb.i.90 to i8*
  %30 = bitcast %struct.lua_TValue.218* %tempc.i.91 to i8*
  %31 = bitcast double* %num.i.131 to i8*
  %32 = bitcast double* %num.i.134 to i8*
  %33 = bitcast double* %num.i.134 to i64*
  %34 = bitcast %struct.lua_TValue.218* %tempc.i.91 to i64*
  %35 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %tempc.i.91, i64 0, i32 1
  %36 = bitcast double* %num.i.131 to i64*
  %37 = bitcast %struct.lua_TValue.218* %tempb.i.90 to i64*
  %38 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %tempb.i.90, i64 0, i32 1
  %39 = bitcast %struct.lua_TValue.218* %tempb.i.93 to i8*
  %40 = bitcast %struct.lua_TValue.218* %tempc.i.94 to i8*
  %41 = bitcast double* %num.i.145 to i8*
  %42 = bitcast double* %num.i.148 to i8*
  %43 = bitcast double* %num.i.148 to i64*
  %44 = bitcast %struct.lua_TValue.218* %tempc.i.94 to i64*
  %45 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %tempc.i.94, i64 0, i32 1
  %46 = bitcast double* %num.i.145 to i64*
  %47 = bitcast %struct.lua_TValue.218* %tempb.i.93 to i64*
  %48 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %tempb.i.93, i64 0, i32 1
  %49 = bitcast %struct.lua_TValue.218* %tempb.i.96 to i8*
  %50 = bitcast %struct.lua_TValue.218* %tempc.i.97 to i8*
  %51 = bitcast double* %num.i.159 to i8*
  %52 = bitcast double* %num.i.162 to i8*
  %53 = bitcast double* %num.i.162 to i64*
  %54 = bitcast %struct.lua_TValue.218* %tempc.i.97 to i64*
  %55 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %tempc.i.97, i64 0, i32 1
  %56 = bitcast double* %num.i.159 to i64*
  %57 = bitcast %struct.lua_TValue.218* %tempb.i.96 to i64*
  %58 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %tempb.i.96, i64 0, i32 1
  %59 = bitcast %struct.lua_TValue.218* %tempb.i.99 to i8*
  %60 = bitcast %struct.lua_TValue.218* %tempc.i.100 to i8*
  %61 = bitcast double* %num.i.173 to i8*
  %62 = bitcast double* %num.i.176 to i8*
  %63 = bitcast double* %num.i.176 to i64*
  %64 = bitcast %struct.lua_TValue.218* %tempc.i.100 to i64*
  %65 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %tempc.i.100, i64 0, i32 1
  %66 = bitcast double* %num.i.173 to i64*
  %67 = bitcast %struct.lua_TValue.218* %tempb.i.99 to i64*
  %68 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %tempb.i.99, i64 0, i32 1
  %69 = bitcast %struct.lua_TValue.218* %tempb.i.102 to i8*
  %70 = bitcast %struct.lua_TValue.218* %tempc.i.103 to i8*
  %71 = bitcast double* %num.i.187 to i8*
  %72 = bitcast double* %num.i.190 to i8*
  %73 = bitcast double* %num.i.190 to i64*
  %74 = bitcast %struct.lua_TValue.218* %tempc.i.103 to i64*
  %75 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %tempc.i.103, i64 0, i32 1
  %76 = bitcast double* %num.i.187 to i64*
  %77 = bitcast %struct.lua_TValue.218* %tempb.i.102 to i64*
  %78 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %tempb.i.102, i64 0, i32 1
  %79 = bitcast %struct.lua_TValue.218* %tempb.i.105 to i8*
  %80 = bitcast double* %num.i.201 to i8*
  %81 = bitcast double* %num.i.204 to i8*
  %82 = bitcast double* %num.i.201 to i64*
  %83 = bitcast %struct.lua_TValue.218* %tempb.i.105 to i64*
  %84 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %tempb.i.105, i64 0, i32 1
  %85 = load i64, i64* bitcast (%struct.lua_TValue.218* @luaO_nilobject_ to i64*), align 8
  %86 = load i32, i32* getelementptr inbounds (%struct.lua_TValue.218, %struct.lua_TValue.218* @luaO_nilobject_, i64 0, i32 1), align 8, !tbaa !10
  %87 = bitcast double* %num.i.114 to i8*
  %88 = bitcast double* %num.i.114 to i64*
  %89 = bitcast double* %num.i.111 to i8*
  %90 = bitcast double* %num.i.111 to i64*
  %91 = bitcast double* %num.i to i8*
  %92 = bitcast double* %num.i to i64*
  %93 = getelementptr inbounds %struct.lua_State.215, %struct.lua_State.215* %L, i64 0, i32 20
  %94 = getelementptr inbounds %struct.lua_State.215, %struct.lua_State.215* %L, i64 0, i32 3
  %95 = getelementptr inbounds %struct.lua_State.215, %struct.lua_State.215* %L, i64 0, i32 19
  %96 = getelementptr inbounds %struct.lua_State.215, %struct.lua_State.215* %L, i64 0, i32 24
  %97 = bitcast i32** %1 to i64*
  %98 = bitcast %struct.lua_TValue.218* %tempb.i.105 to double*
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %0
  %.0.ph = phi i32 [ %nexeccalls, %0 ], [ %.0.ph.be, %.outer.backedge ]
  %.pre = load i32*, i32** %1, align 8, !tbaa !131
  %.pre330 = load %struct.CallInfo.212*, %struct.CallInfo.212** %2, align 8, !tbaa !13
  br label %99

; <label>:99                                      ; preds = %.outer, %._crit_edge.289
  %100 = phi %struct.CallInfo.212* [ %.pre330, %.outer ], [ %1677, %._crit_edge.289 ]
  %101 = phi i32* [ %.pre, %.outer ], [ %1678, %._crit_edge.289 ]
  %102 = getelementptr inbounds %struct.CallInfo.212, %struct.CallInfo.212* %100, i64 0, i32 1
  %103 = bitcast %struct.lua_TValue.218** %102 to %struct.LClosure.384***
  %104 = load %struct.LClosure.384**, %struct.LClosure.384*** %103, align 8, !tbaa !28
  %105 = load %struct.LClosure.384*, %struct.LClosure.384** %104, align 8, !tbaa !25
  %106 = load %struct.lua_TValue.218*, %struct.lua_TValue.218** %3, align 8, !tbaa !11
  %107 = getelementptr inbounds %struct.LClosure.384, %struct.LClosure.384* %105, i64 0, i32 7
  %108 = load %struct.Proto.383*, %struct.Proto.383** %107, align 8, !tbaa !57
  %109 = getelementptr inbounds %struct.Proto.383, %struct.Proto.383* %108, i64 0, i32 3
  %110 = load %struct.lua_TValue.218*, %struct.lua_TValue.218** %109, align 8, !tbaa !116
  %111 = getelementptr inbounds %struct.LClosure.384, %struct.LClosure.384* %105, i64 0, i32 6
  %112 = bitcast %struct.Table.208** %111 to i64*
  br label %.thread232

.thread232.loopexit:                              ; preds = %215
  br label %.thread232.backedge

.thread232.loopexit412:                           ; preds = %1896
  br label %.thread232.backedge

.thread232.loopexit413:                           ; preds = %2003
  br label %.thread232.backedge

.thread232:                                       ; preds = %.thread232.backedge, %99
  %pc.0 = phi i32* [ %101, %99 ], [ %pc.0.be, %.thread232.backedge ]
  %base.0 = phi %struct.lua_TValue.218* [ %106, %99 ], [ %base.0.be, %.thread232.backedge ]
  %113 = getelementptr inbounds i32, i32* %pc.0, i64 1
  %114 = load i32, i32* %pc.0, align 4, !tbaa !38
  %115 = load i8, i8* %4, align 1, !tbaa !127
  %116 = and i8 %115, 12
  %117 = icmp eq i8 %116, 0
  br i1 %117, label %178, label %118

; <label>:118                                     ; preds = %.thread232
  %119 = load i32, i32* %93, align 4, !tbaa !126
  %120 = add nsw i32 %119, -1
  store i32 %120, i32* %93, align 4, !tbaa !126
  %121 = icmp eq i32 %120, 0
  %.not = xor i1 %121, true
  %122 = and i8 %115, 4
  %123 = icmp eq i8 %122, 0
  %or.cond = and i1 %123, %.not
  br i1 %or.cond, label %178, label %124

; <label>:124                                     ; preds = %118
  %125 = load i32*, i32** %1, align 8, !tbaa !131
  store i32* %113, i32** %1, align 8, !tbaa !131
  %126 = zext i8 %115 to i32
  %127 = and i32 %126, 8
  %128 = icmp eq i32 %127, 0
  %.not380 = xor i1 %121, true
  %brmerge = or i1 %128, %.not380
  br i1 %brmerge, label %131, label %129

; <label>:129                                     ; preds = %124
  %130 = load i32, i32* %95, align 4, !tbaa !125
  store i32 %130, i32* %93, align 4, !tbaa !126
  call void bitcast (void (%struct.lua_State*, i32, i32)* @luaD_callhook to void (%struct.lua_State.215*, i32, i32)*)(%struct.lua_State.215* %L, i32 3, i32 -1) #1
  br label %131

; <label>:131                                     ; preds = %124, %129
  %132 = and i32 %126, 4
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %traceexec.exit, label %134

; <label>:134                                     ; preds = %131
  %135 = load %struct.CallInfo.212*, %struct.CallInfo.212** %2, align 8, !tbaa !13
  %136 = getelementptr inbounds %struct.CallInfo.212, %struct.CallInfo.212* %135, i64 0, i32 1
  %137 = bitcast %struct.lua_TValue.218** %136 to %struct.LClosure.384***
  %138 = load %struct.LClosure.384**, %struct.LClosure.384*** %137, align 8, !tbaa !28
  %139 = load %struct.LClosure.384*, %struct.LClosure.384** %138, align 8, !tbaa !25
  %140 = getelementptr inbounds %struct.LClosure.384, %struct.LClosure.384* %139, i64 0, i32 7
  %141 = load %struct.Proto.383*, %struct.Proto.383** %140, align 8, !tbaa !57
  %142 = getelementptr inbounds %struct.Proto.383, %struct.Proto.383* %141, i64 0, i32 4
  %143 = bitcast i32** %142 to i64*
  %144 = load i64, i64* %143, align 8, !tbaa !93
  %145 = ptrtoint i32* %113 to i64
  %146 = sub i64 %145, %144
  %147 = lshr exact i64 %146, 2
  %148 = trunc i64 %147 to i32
  %149 = add nsw i32 %148, -1
  %150 = getelementptr inbounds %struct.Proto.383, %struct.Proto.383* %141, i64 0, i32 6
  %151 = load i32*, i32** %150, align 8, !tbaa !111
  %152 = icmp eq i32* %151, null
  br i1 %152, label %157, label %153

; <label>:153                                     ; preds = %134
  %154 = sext i32 %149 to i64
  %155 = getelementptr inbounds i32, i32* %151, i64 %154
  %156 = load i32, i32* %155, align 4, !tbaa !38
  br label %157

; <label>:157                                     ; preds = %153, %134
  %158 = phi i32 [ %156, %153 ], [ 0, %134 ]
  %159 = icmp ne i32 %149, 0
  %160 = icmp ult i32* %125, %113
  %or.cond.i = and i1 %160, %159
  br i1 %or.cond.i, label %161, label %172

; <label>:161                                     ; preds = %157
  br i1 %152, label %169, label %162

; <label>:162                                     ; preds = %161
  %163 = ptrtoint i32* %125 to i64
  %164 = sub i64 %163, %144
  %165 = shl i64 %164, 30
  %sext.i = add i64 %165, -4294967296
  %166 = ashr exact i64 %sext.i, 32
  %167 = getelementptr inbounds i32, i32* %151, i64 %166
  %168 = load i32, i32* %167, align 4, !tbaa !38
  br label %169

; <label>:169                                     ; preds = %162, %161
  %170 = phi i32 [ %168, %162 ], [ 0, %161 ]
  %171 = icmp eq i32 %158, %170
  br i1 %171, label %traceexec.exit, label %172

; <label>:172                                     ; preds = %169, %157
  call void bitcast (void (%struct.lua_State*, i32, i32)* @luaD_callhook to void (%struct.lua_State.215*, i32, i32)*)(%struct.lua_State.215* %L, i32 2, i32 %158) #1
  br label %traceexec.exit

traceexec.exit:                                   ; preds = %131, %169, %172
  %173 = load i8, i8* %94, align 1, !tbaa !59
  %174 = icmp eq i8 %173, 1
  br i1 %174, label %175, label %176

; <label>:175                                     ; preds = %traceexec.exit
  %pc.0.lcssa = phi i32* [ %pc.0, %traceexec.exit ]
  store i32* %pc.0.lcssa, i32** %1, align 8, !tbaa !131
  br label %.loopexit

; <label>:176                                     ; preds = %traceexec.exit
  %177 = load %struct.lua_TValue.218*, %struct.lua_TValue.218** %3, align 8, !tbaa !11
  br label %178

; <label>:178                                     ; preds = %118, %.thread232, %176
  %base.1 = phi %struct.lua_TValue.218* [ %177, %176 ], [ %base.0, %.thread232 ], [ %base.0, %118 ]
  %179 = lshr i32 %114, 6
  %180 = and i32 %179, 255
  %181 = zext i32 %180 to i64
  %182 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %base.1, i64 %181
  %183 = and i32 %114, 63
  switch i32 %183, label %.thread232.backedge [
    i32 0, label %184
    i32 1, label %194
    i32 2, label %204
    i32 3, label %211
    i32 4, label %219
    i32 5, label %232
    i32 6, label %238
    i32 7, label %253
    i32 8, label %259
    i32 9, label %288
    i32 10, label %309
    i32 11, label %327
    i32 12, label %349
    i32 13, label %468
    i32 14, label %587
    i32 15, label %706
    i32 16, label %825
    i32 17, label %950
    i32 18, label %1069
    i32 19, label %1157
    i32 20, label %1175
    i32 21, label %1247
    i32 22, label %1271
    i32 23, label %1276
    i32 24, label %1317
    i32 25, label %1348
    i32 26, label %1553
    i32 27, label %1577
    i32 28, label %1608
    i32 29, label %1630
    i32 30, label %1681
    i32 31, label %1703
    i32 32, label %1727
    i32 33, label %1784
    i32 34, label %1834
    i32 35, label %1898
    i32 36, label %1899
    i32 37, label %1948
  ]

; <label>:184                                     ; preds = %178
  %185 = lshr i32 %114, 23
  %186 = zext i32 %185 to i64
  %187 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %base.1, i64 %186
  %188 = bitcast %struct.lua_TValue.218* %187 to i64*
  %189 = bitcast %struct.lua_TValue.218* %182 to i64*
  %190 = load i64, i64* %188, align 8
  store i64 %190, i64* %189, align 8
  %191 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %base.1, i64 %186, i32 1
  %192 = load i32, i32* %191, align 4, !tbaa !10
  %193 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %base.1, i64 %181, i32 1
  store i32 %192, i32* %193, align 4, !tbaa !10
  br label %.thread232.backedge

; <label>:194                                     ; preds = %178
  %195 = lshr i32 %114, 14
  %196 = zext i32 %195 to i64
  %197 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %110, i64 %196
  %198 = bitcast %struct.lua_TValue.218* %197 to i64*
  %199 = bitcast %struct.lua_TValue.218* %182 to i64*
  %200 = load i64, i64* %198, align 8
  store i64 %200, i64* %199, align 8
  %201 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %110, i64 %196, i32 1
  %202 = load i32, i32* %201, align 4, !tbaa !10
  %203 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %base.1, i64 %181, i32 1
  store i32 %202, i32* %203, align 4, !tbaa !10
  br label %.thread232.backedge

; <label>:204                                     ; preds = %178
  %205 = lshr i32 %114, 23
  %206 = bitcast %struct.lua_TValue.218* %182 to i32*
  store i32 %205, i32* %206, align 4, !tbaa !38
  %207 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %base.1, i64 %181, i32 1
  store i32 1, i32* %207, align 4, !tbaa !10
  %208 = and i32 %114, 8372224
  %209 = icmp eq i32 %208, 0
  %210 = getelementptr inbounds i32, i32* %pc.0, i64 2
  %. = select i1 %209, i32* %113, i32* %210
  br label %.thread232.backedge

; <label>:211                                     ; preds = %178
  %212 = lshr i32 %114, 23
  %213 = zext i32 %212 to i64
  %214 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %base.1, i64 %213
  br label %215

; <label>:215                                     ; preds = %215, %211
  %rb.0 = phi %struct.lua_TValue.218* [ %214, %211 ], [ %216, %215 ]
  %216 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %rb.0, i64 -1
  %217 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %rb.0, i64 0, i32 1
  store i32 0, i32* %217, align 4, !tbaa !10
  %218 = icmp ult %struct.lua_TValue.218* %216, %182
  br i1 %218, label %.thread232.loopexit, label %215

; <label>:219                                     ; preds = %178
  %220 = lshr i32 %114, 23
  %221 = zext i32 %220 to i64
  %222 = getelementptr inbounds %struct.LClosure.384, %struct.LClosure.384* %105, i64 0, i32 8, i64 %221
  %223 = load %struct.UpVal.204*, %struct.UpVal.204** %222, align 8, !tbaa !25
  %224 = getelementptr inbounds %struct.UpVal.204, %struct.UpVal.204* %223, i64 0, i32 3
  %225 = load %struct.lua_TValue.218*, %struct.lua_TValue.218** %224, align 8, !tbaa !67
  %226 = bitcast %struct.lua_TValue.218* %225 to i64*
  %227 = bitcast %struct.lua_TValue.218* %182 to i64*
  %228 = load i64, i64* %226, align 8
  store i64 %228, i64* %227, align 8
  %229 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %225, i64 0, i32 1
  %230 = load i32, i32* %229, align 4, !tbaa !10
  %231 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %base.1, i64 %181, i32 1
  store i32 %230, i32* %231, align 4, !tbaa !10
  br label %.thread232.backedge

; <label>:232                                     ; preds = %178
  call void @llvm.lifetime.start(i64 16, i8* %5) #1
  %233 = lshr i32 %114, 14
  %234 = zext i32 %233 to i64
  %235 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %110, i64 %234
  %236 = load i64, i64* %112, align 8, !tbaa !172
  store i64 %236, i64* %6, align 8, !tbaa !25
  store i32 5, i32* %7, align 8, !tbaa !10
  store i32* %113, i32** %1, align 8, !tbaa !131
  call void @luaV_gettable(%struct.lua_State.215* %L, %struct.lua_TValue.218* nonnull %g, %struct.lua_TValue.218* %235, %struct.lua_TValue.218* %182)
  %237 = load %struct.lua_TValue.218*, %struct.lua_TValue.218** %3, align 8, !tbaa !11
  call void @llvm.lifetime.end(i64 16, i8* %5) #1
  br label %.thread232.backedge

; <label>:238                                     ; preds = %178
  store i32* %113, i32** %1, align 8, !tbaa !131
  %239 = lshr i32 %114, 23
  %240 = zext i32 %239 to i64
  %241 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %base.1, i64 %240
  %242 = lshr i32 %114, 14
  %243 = and i32 %242, 256
  %244 = icmp eq i32 %243, 0
  %245 = and i32 %242, 255
  %246 = zext i32 %245 to i64
  %247 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %110, i64 %246
  %248 = and i32 %242, 511
  %249 = zext i32 %248 to i64
  %250 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %base.1, i64 %249
  %251 = select i1 %244, %struct.lua_TValue.218* %250, %struct.lua_TValue.218* %247
  call void @luaV_gettable(%struct.lua_State.215* %L, %struct.lua_TValue.218* %241, %struct.lua_TValue.218* %251, %struct.lua_TValue.218* %182)
  %252 = load %struct.lua_TValue.218*, %struct.lua_TValue.218** %3, align 8, !tbaa !11
  br label %.thread232.backedge

; <label>:253                                     ; preds = %178
  call void @llvm.lifetime.start(i64 16, i8* %8) #1
  %254 = load i64, i64* %112, align 8, !tbaa !172
  store i64 %254, i64* %9, align 8, !tbaa !25
  store i32 5, i32* %10, align 8, !tbaa !10
  store i32* %113, i32** %1, align 8, !tbaa !131
  %255 = lshr i32 %114, 14
  %256 = zext i32 %255 to i64
  %257 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %110, i64 %256
  call void @luaV_settable(%struct.lua_State.215* %L, %struct.lua_TValue.218* nonnull %g7, %struct.lua_TValue.218* %257, %struct.lua_TValue.218* %182)
  %258 = load %struct.lua_TValue.218*, %struct.lua_TValue.218** %3, align 8, !tbaa !11
  call void @llvm.lifetime.end(i64 16, i8* %8) #1
  br label %.thread232.backedge

; <label>:259                                     ; preds = %178
  %260 = lshr i32 %114, 23
  %261 = zext i32 %260 to i64
  %262 = getelementptr inbounds %struct.LClosure.384, %struct.LClosure.384* %105, i64 0, i32 8, i64 %261
  %263 = load %struct.UpVal.204*, %struct.UpVal.204** %262, align 8, !tbaa !25
  %264 = getelementptr inbounds %struct.UpVal.204, %struct.UpVal.204* %263, i64 0, i32 3
  %265 = load %struct.lua_TValue.218*, %struct.lua_TValue.218** %264, align 8, !tbaa !67
  %266 = bitcast %struct.lua_TValue.218* %182 to i64*
  %267 = bitcast %struct.lua_TValue.218* %265 to i64*
  %268 = load i64, i64* %266, align 8
  store i64 %268, i64* %267, align 8
  %269 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %base.1, i64 %181, i32 1
  %270 = load i32, i32* %269, align 4, !tbaa !10
  %271 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %265, i64 0, i32 1
  store i32 %270, i32* %271, align 4, !tbaa !10
  %272 = load i32, i32* %269, align 4, !tbaa !10
  %273 = icmp sgt i32 %272, 3
  br i1 %273, label %274, label %.thread232.backedge

; <label>:274                                     ; preds = %259
  %275 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %182, i64 0, i32 0, i32 0
  %276 = load %union.GCObject.216*, %union.GCObject.216** %275, align 8, !tbaa !25
  %277 = getelementptr inbounds %union.GCObject.216, %union.GCObject.216* %276, i64 0, i32 0, i32 2
  %278 = load i8, i8* %277, align 1, !tbaa !33
  %279 = and i8 %278, 3
  %280 = icmp eq i8 %279, 0
  br i1 %280, label %.thread232.backedge, label %281

; <label>:281                                     ; preds = %274
  %282 = getelementptr inbounds %struct.UpVal.204, %struct.UpVal.204* %263, i64 0, i32 2
  %283 = load i8, i8* %282, align 1, !tbaa !33
  %284 = and i8 %283, 4
  %285 = icmp eq i8 %284, 0
  br i1 %285, label %.thread232.backedge, label %286

; <label>:286                                     ; preds = %281
  %287 = bitcast %struct.UpVal.204* %263 to %union.GCObject.216*
  call void bitcast (void (%struct.lua_State*, %union.GCObject*, %union.GCObject*)* @luaC_barrierf to void (%struct.lua_State.215*, %union.GCObject.216*, %union.GCObject.216*)*)(%struct.lua_State.215* %L, %union.GCObject.216* %287, %union.GCObject.216* %276) #1
  br label %.thread232.backedge

; <label>:288                                     ; preds = %178
  store i32* %113, i32** %1, align 8, !tbaa !131
  %289 = lshr i32 %114, 23
  %290 = and i32 %289, 256
  %291 = icmp eq i32 %290, 0
  %292 = and i32 %289, 255
  %293 = zext i32 %292 to i64
  %294 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %110, i64 %293
  %295 = zext i32 %289 to i64
  %296 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %base.1, i64 %295
  %297 = select i1 %291, %struct.lua_TValue.218* %296, %struct.lua_TValue.218* %294
  %298 = lshr i32 %114, 14
  %299 = and i32 %298, 256
  %300 = icmp eq i32 %299, 0
  %301 = and i32 %298, 255
  %302 = zext i32 %301 to i64
  %303 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %110, i64 %302
  %304 = and i32 %298, 511
  %305 = zext i32 %304 to i64
  %306 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %base.1, i64 %305
  %307 = select i1 %300, %struct.lua_TValue.218* %306, %struct.lua_TValue.218* %303
  call void @luaV_settable(%struct.lua_State.215* %L, %struct.lua_TValue.218* %182, %struct.lua_TValue.218* %297, %struct.lua_TValue.218* %307)
  %308 = load %struct.lua_TValue.218*, %struct.lua_TValue.218** %3, align 8, !tbaa !11
  br label %.thread232.backedge

; <label>:309                                     ; preds = %178
  %310 = lshr i32 %114, 23
  %311 = lshr i32 %114, 14
  %312 = and i32 %311, 511
  %313 = call i32 @luaO_fb2int(i32 %310) #1
  %314 = call i32 @luaO_fb2int(i32 %312) #1
  %315 = call %struct.Table.208* bitcast (%struct.Table* (%struct.lua_State*, i32, i32)* @luaH_new to %struct.Table.208* (%struct.lua_State.215*, i32, i32)*)(%struct.lua_State.215* %L, i32 %313, i32 %314) #1
  %316 = bitcast %struct.lua_TValue.218* %182 to %struct.Table.208**
  store %struct.Table.208* %315, %struct.Table.208** %316, align 8, !tbaa !25
  %317 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %base.1, i64 %181, i32 1
  store i32 5, i32* %317, align 4, !tbaa !10
  store i32* %113, i32** %1, align 8, !tbaa !131
  %318 = load %struct.global_State.211*, %struct.global_State.211** %11, align 8, !tbaa !17
  %319 = getelementptr inbounds %struct.global_State.211, %struct.global_State.211* %318, i64 0, i32 14
  %320 = load i64, i64* %319, align 8, !tbaa !23
  %321 = getelementptr inbounds %struct.global_State.211, %struct.global_State.211* %318, i64 0, i32 13
  %322 = load i64, i64* %321, align 8, !tbaa !24
  %323 = icmp ult i64 %320, %322
  br i1 %323, label %325, label %324

; <label>:324                                     ; preds = %309
  call void bitcast (void (%struct.lua_State*)* @luaC_step to void (%struct.lua_State.215*)*)(%struct.lua_State.215* %L) #1
  br label %325

; <label>:325                                     ; preds = %309, %324
  %326 = load %struct.lua_TValue.218*, %struct.lua_TValue.218** %3, align 8, !tbaa !11
  br label %.thread232.backedge

; <label>:327                                     ; preds = %178
  %328 = lshr i32 %114, 23
  %329 = zext i32 %328 to i64
  %330 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %base.1, i64 %329
  %331 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %182, i64 1
  %332 = bitcast %struct.lua_TValue.218* %330 to i64*
  %333 = bitcast %struct.lua_TValue.218* %331 to i64*
  %334 = load i64, i64* %332, align 8
  store i64 %334, i64* %333, align 8
  %335 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %base.1, i64 %329, i32 1
  %336 = load i32, i32* %335, align 4, !tbaa !10
  %337 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %331, i64 0, i32 1
  store i32 %336, i32* %337, align 4, !tbaa !10
  store i32* %113, i32** %1, align 8, !tbaa !131
  %338 = lshr i32 %114, 14
  %339 = and i32 %338, 256
  %340 = icmp eq i32 %339, 0
  %341 = and i32 %338, 255
  %342 = zext i32 %341 to i64
  %343 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %110, i64 %342
  %344 = and i32 %338, 511
  %345 = zext i32 %344 to i64
  %346 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %base.1, i64 %345
  %347 = select i1 %340, %struct.lua_TValue.218* %346, %struct.lua_TValue.218* %343
  call void @luaV_gettable(%struct.lua_State.215* %L, %struct.lua_TValue.218* %330, %struct.lua_TValue.218* %347, %struct.lua_TValue.218* %182)
  %348 = load %struct.lua_TValue.218*, %struct.lua_TValue.218** %3, align 8, !tbaa !11
  br label %.thread232.backedge

; <label>:349                                     ; preds = %178
  %350 = lshr i32 %114, 23
  %351 = and i32 %350, 256
  %352 = icmp eq i32 %351, 0
  %353 = and i32 %350, 255
  %354 = zext i32 %353 to i64
  %355 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %110, i64 %354
  %356 = zext i32 %350 to i64
  %357 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %base.1, i64 %356
  %358 = select i1 %352, %struct.lua_TValue.218* %357, %struct.lua_TValue.218* %355
  %359 = lshr i32 %114, 14
  %360 = and i32 %359, 256
  %361 = icmp eq i32 %360, 0
  %362 = and i32 %359, 255
  %363 = zext i32 %362 to i64
  %364 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %110, i64 %363
  %365 = and i32 %359, 511
  %366 = zext i32 %365 to i64
  %367 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %base.1, i64 %366
  %368 = select i1 %361, %struct.lua_TValue.218* %367, %struct.lua_TValue.218* %364
  %369 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %358, i64 0, i32 1
  %370 = load i32, i32* %369, align 4, !tbaa !10
  %371 = icmp eq i32 %370, 3
  br i1 %371, label %372, label %384

; <label>:372                                     ; preds = %349
  %373 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %368, i64 0, i32 1
  %374 = load i32, i32* %373, align 4, !tbaa !10
  %375 = icmp eq i32 %374, 3
  br i1 %375, label %376, label %.thread

.thread:                                          ; preds = %372
  store i32* %113, i32** %1, align 8, !tbaa !131
  call void @llvm.lifetime.start(i64 16, i8* %12) #1
  call void @llvm.lifetime.start(i64 16, i8* %13) #1
  call void @llvm.lifetime.start(i64 8, i8* %14) #1
  br label %394

; <label>:376                                     ; preds = %372
  %377 = bitcast %struct.lua_TValue.218* %358 to double*
  %378 = load double, double* %377, align 8, !tbaa !36
  %379 = bitcast %struct.lua_TValue.218* %368 to double*
  %380 = load double, double* %379, align 8, !tbaa !36
  %381 = fadd double %378, %380
  %382 = bitcast %struct.lua_TValue.218* %182 to double*
  store double %381, double* %382, align 8, !tbaa !36
  %383 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %base.1, i64 %181, i32 1
  store i32 3, i32* %383, align 4, !tbaa !10
  br label %.thread232.backedge

; <label>:384                                     ; preds = %349
  store i32* %113, i32** %1, align 8, !tbaa !131
  call void @llvm.lifetime.start(i64 16, i8* %12) #1
  call void @llvm.lifetime.start(i64 16, i8* %13) #1
  call void @llvm.lifetime.start(i64 8, i8* %14) #1
  %cond = icmp eq i32 %370, 4
  br i1 %cond, label %385, label %luaV_tonumber.exit119

; <label>:385                                     ; preds = %384
  %386 = bitcast %struct.lua_TValue.218* %358 to %union.TString.210**
  %387 = load %union.TString.210*, %union.TString.210** %386, align 8, !tbaa !25
  %388 = getelementptr inbounds %union.TString.210, %union.TString.210* %387, i64 1
  %389 = bitcast %union.TString.210* %388 to i8*
  %390 = call i32 @luaO_str2d(i8* %389, double* nonnull %num.i.117) #1
  %391 = icmp eq i32 %390, 0
  br i1 %391, label %luaV_tonumber.exit119, label %392

; <label>:392                                     ; preds = %385
  %393 = load i64, i64* %26, align 8, !tbaa !36
  store i64 %393, i64* %27, align 8, !tbaa !36
  store i32 3, i32* %28, align 8, !tbaa !10
  br label %394

luaV_tonumber.exit119:                            ; preds = %384, %385
  call void @llvm.lifetime.end(i64 8, i8* %14) #1
  br label %414

; <label>:394                                     ; preds = %.thread, %392
  %.0.i.118.ph = phi %struct.lua_TValue.218* [ %tempb.i, %392 ], [ %358, %.thread ]
  call void @llvm.lifetime.end(i64 8, i8* %14) #1
  call void @llvm.lifetime.start(i64 8, i8* %22) #1
  %395 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %368, i64 0, i32 1
  %396 = load i32, i32* %395, align 4, !tbaa !10
  switch i32 %396, label %luaV_tonumber.exit122 [
    i32 3, label %406
    i32 4, label %397
  ]

; <label>:397                                     ; preds = %394
  %398 = bitcast %struct.lua_TValue.218* %368 to %union.TString.210**
  %399 = load %union.TString.210*, %union.TString.210** %398, align 8, !tbaa !25
  %400 = getelementptr inbounds %union.TString.210, %union.TString.210* %399, i64 1
  %401 = bitcast %union.TString.210* %400 to i8*
  %402 = call i32 @luaO_str2d(i8* %401, double* nonnull %num.i.120) #1
  %403 = icmp eq i32 %402, 0
  br i1 %403, label %luaV_tonumber.exit122, label %404

; <label>:404                                     ; preds = %397
  %405 = load i64, i64* %23, align 8, !tbaa !36
  store i64 %405, i64* %24, align 8, !tbaa !36
  store i32 3, i32* %25, align 8, !tbaa !10
  br label %406

luaV_tonumber.exit122:                            ; preds = %394, %397
  call void @llvm.lifetime.end(i64 8, i8* %22) #1
  br label %414

; <label>:406                                     ; preds = %404, %394
  %.0.i.121.ph = phi %struct.lua_TValue.218* [ %368, %394 ], [ %tempc.i, %404 ]
  call void @llvm.lifetime.end(i64 8, i8* %22) #1
  %407 = bitcast %struct.lua_TValue.218* %.0.i.118.ph to double*
  %408 = load double, double* %407, align 8, !tbaa !36
  %409 = bitcast %struct.lua_TValue.218* %.0.i.121.ph to double*
  %410 = load double, double* %409, align 8, !tbaa !36
  %411 = fadd double %408, %410
  %412 = bitcast %struct.lua_TValue.218* %182 to double*
  store double %411, double* %412, align 8, !tbaa !36
  %413 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %base.1, i64 %181, i32 1
  store i32 3, i32* %413, align 4, !tbaa !10
  br label %Arith.exit

; <label>:414                                     ; preds = %luaV_tonumber.exit122, %luaV_tonumber.exit119
  %415 = call %struct.lua_TValue.218* bitcast (%struct.lua_TValue* (%struct.lua_State*, %struct.lua_TValue*, i32)* @luaT_gettmbyobj to %struct.lua_TValue.218* (%struct.lua_State.215*, %struct.lua_TValue.218*, i32)*)(%struct.lua_State.215* %L, %struct.lua_TValue.218* %358, i32 5) #1
  %416 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %415, i64 0, i32 1
  %417 = load i32, i32* %416, align 4, !tbaa !10
  %418 = icmp eq i32 %417, 0
  br i1 %418, label %419, label %.thread.i.126

; <label>:419                                     ; preds = %414
  %420 = call %struct.lua_TValue.218* bitcast (%struct.lua_TValue* (%struct.lua_State*, %struct.lua_TValue*, i32)* @luaT_gettmbyobj to %struct.lua_TValue.218* (%struct.lua_State.215*, %struct.lua_TValue.218*, i32)*)(%struct.lua_State.215* %L, %struct.lua_TValue.218* %368, i32 5) #1
  %.phi.trans.insert.i.123 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %420, i64 0, i32 1
  %.pre.i.124 = load i32, i32* %.phi.trans.insert.i.123, align 4, !tbaa !10
  %421 = icmp eq i32 %.pre.i.124, 0
  br i1 %421, label %466, label %.thread.i.126

.thread.i.126:                                    ; preds = %419, %414
  %tm.01.i.125 = phi %struct.lua_TValue.218* [ %420, %419 ], [ %415, %414 ]
  %422 = load i64, i64* %16, align 8, !tbaa !50
  %423 = ptrtoint %struct.lua_TValue.218* %182 to i64
  %424 = sub i64 %423, %422
  %425 = load %struct.lua_TValue.218*, %struct.lua_TValue.218** %17, align 8, !tbaa !1
  %426 = bitcast %struct.lua_TValue.218* %tm.01.i.125 to i64*
  %427 = bitcast %struct.lua_TValue.218* %425 to i64*
  %428 = load i64, i64* %426, align 8
  store i64 %428, i64* %427, align 8
  %429 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %tm.01.i.125, i64 0, i32 1
  %430 = load i32, i32* %429, align 4, !tbaa !10
  %431 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %425, i64 0, i32 1
  store i32 %430, i32* %431, align 4, !tbaa !10
  %432 = load %struct.lua_TValue.218*, %struct.lua_TValue.218** %17, align 8, !tbaa !1
  %433 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %432, i64 1
  %434 = bitcast %struct.lua_TValue.218* %358 to i64*
  %435 = bitcast %struct.lua_TValue.218* %433 to i64*
  %436 = load i64, i64* %434, align 8
  store i64 %436, i64* %435, align 8
  %437 = load i32, i32* %369, align 4, !tbaa !10
  %438 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %432, i64 1, i32 1
  store i32 %437, i32* %438, align 4, !tbaa !10
  %439 = load %struct.lua_TValue.218*, %struct.lua_TValue.218** %17, align 8, !tbaa !1
  %440 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %439, i64 2
  %441 = bitcast %struct.lua_TValue.218* %368 to i64*
  %442 = bitcast %struct.lua_TValue.218* %440 to i64*
  %443 = load i64, i64* %441, align 8
  store i64 %443, i64* %442, align 8
  %444 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %368, i64 0, i32 1
  %445 = load i32, i32* %444, align 4, !tbaa !10
  %446 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %439, i64 2, i32 1
  store i32 %445, i32* %446, align 4, !tbaa !10
  %447 = load i64, i64* %19, align 8, !tbaa !12
  %448 = load i64, i64* %20, align 8, !tbaa !1
  %449 = sub i64 %447, %448
  %450 = icmp slt i64 %449, 49
  %451 = inttoptr i64 %448 to %struct.lua_TValue.218*
  br i1 %450, label %452, label %call_binTM.exit128

; <label>:452                                     ; preds = %.thread.i.126
  call void bitcast (void (%struct.lua_State*, i32)* @luaD_growstack to void (%struct.lua_State.215*, i32)*)(%struct.lua_State.215* %L, i32 3) #1
  %.pre.i.129 = load %struct.lua_TValue.218*, %struct.lua_TValue.218** %17, align 8, !tbaa !1
  br label %call_binTM.exit128

call_binTM.exit128:                               ; preds = %452, %.thread.i.126
  %453 = phi %struct.lua_TValue.218* [ %451, %.thread.i.126 ], [ %.pre.i.129, %452 ]
  %454 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %453, i64 3
  store %struct.lua_TValue.218* %454, %struct.lua_TValue.218** %17, align 8, !tbaa !1
  call void bitcast (void (%struct.lua_State*, %struct.lua_TValue*, i32)* @luaD_call to void (%struct.lua_State.215*, %struct.lua_TValue.218*, i32)*)(%struct.lua_State.215* %L, %struct.lua_TValue.218* %453, i32 1) #1
  %455 = load i8*, i8** %21, align 8, !tbaa !50
  %456 = getelementptr inbounds i8, i8* %455, i64 %424
  %457 = load %struct.lua_TValue.218*, %struct.lua_TValue.218** %17, align 8, !tbaa !1
  %458 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %457, i64 -1
  store %struct.lua_TValue.218* %458, %struct.lua_TValue.218** %17, align 8, !tbaa !1
  %459 = bitcast %struct.lua_TValue.218* %458 to i64*
  %460 = bitcast i8* %456 to i64*
  %461 = load i64, i64* %459, align 8
  store i64 %461, i64* %460, align 8
  %462 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %457, i64 -1, i32 1
  %463 = load i32, i32* %462, align 4, !tbaa !10
  %464 = getelementptr inbounds i8, i8* %456, i64 8
  %465 = bitcast i8* %464 to i32*
  store i32 %463, i32* %465, align 4, !tbaa !10
  br label %Arith.exit

; <label>:466                                     ; preds = %419
  call void bitcast (void (%struct.lua_State*, %struct.lua_TValue*, %struct.lua_TValue*)* @luaG_aritherror to void (%struct.lua_State.215*, %struct.lua_TValue.218*, %struct.lua_TValue.218*)*)(%struct.lua_State.215* %L, %struct.lua_TValue.218* %358, %struct.lua_TValue.218* %368) #1
  br label %Arith.exit

Arith.exit:                                       ; preds = %call_binTM.exit128, %406, %466
  call void @llvm.lifetime.end(i64 16, i8* %13) #1
  call void @llvm.lifetime.end(i64 16, i8* %12) #1
  %467 = load %struct.lua_TValue.218*, %struct.lua_TValue.218** %3, align 8, !tbaa !11
  br label %.thread232.backedge

; <label>:468                                     ; preds = %178
  %469 = lshr i32 %114, 23
  %470 = and i32 %469, 256
  %471 = icmp eq i32 %470, 0
  %472 = and i32 %469, 255
  %473 = zext i32 %472 to i64
  %474 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %110, i64 %473
  %475 = zext i32 %469 to i64
  %476 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %base.1, i64 %475
  %477 = select i1 %471, %struct.lua_TValue.218* %476, %struct.lua_TValue.218* %474
  %478 = lshr i32 %114, 14
  %479 = and i32 %478, 256
  %480 = icmp eq i32 %479, 0
  %481 = and i32 %478, 255
  %482 = zext i32 %481 to i64
  %483 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %110, i64 %482
  %484 = and i32 %478, 511
  %485 = zext i32 %484 to i64
  %486 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %base.1, i64 %485
  %487 = select i1 %480, %struct.lua_TValue.218* %486, %struct.lua_TValue.218* %483
  %488 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %477, i64 0, i32 1
  %489 = load i32, i32* %488, align 4, !tbaa !10
  %490 = icmp eq i32 %489, 3
  br i1 %490, label %491, label %503

; <label>:491                                     ; preds = %468
  %492 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %487, i64 0, i32 1
  %493 = load i32, i32* %492, align 4, !tbaa !10
  %494 = icmp eq i32 %493, 3
  br i1 %494, label %495, label %.thread334

.thread334:                                       ; preds = %491
  store i32* %113, i32** %1, align 8, !tbaa !131
  call void @llvm.lifetime.start(i64 16, i8* %29) #1
  call void @llvm.lifetime.start(i64 16, i8* %30) #1
  call void @llvm.lifetime.start(i64 8, i8* %31) #1
  br label %513

; <label>:495                                     ; preds = %491
  %496 = bitcast %struct.lua_TValue.218* %477 to double*
  %497 = load double, double* %496, align 8, !tbaa !36
  %498 = bitcast %struct.lua_TValue.218* %487 to double*
  %499 = load double, double* %498, align 8, !tbaa !36
  %500 = fsub double %497, %499
  %501 = bitcast %struct.lua_TValue.218* %182 to double*
  store double %500, double* %501, align 8, !tbaa !36
  %502 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %base.1, i64 %181, i32 1
  store i32 3, i32* %502, align 4, !tbaa !10
  br label %.thread232.backedge

; <label>:503                                     ; preds = %468
  store i32* %113, i32** %1, align 8, !tbaa !131
  call void @llvm.lifetime.start(i64 16, i8* %29) #1
  call void @llvm.lifetime.start(i64 16, i8* %30) #1
  call void @llvm.lifetime.start(i64 8, i8* %31) #1
  %cond339 = icmp eq i32 %489, 4
  br i1 %cond339, label %504, label %luaV_tonumber.exit133

; <label>:504                                     ; preds = %503
  %505 = bitcast %struct.lua_TValue.218* %477 to %union.TString.210**
  %506 = load %union.TString.210*, %union.TString.210** %505, align 8, !tbaa !25
  %507 = getelementptr inbounds %union.TString.210, %union.TString.210* %506, i64 1
  %508 = bitcast %union.TString.210* %507 to i8*
  %509 = call i32 @luaO_str2d(i8* %508, double* nonnull %num.i.131) #1
  %510 = icmp eq i32 %509, 0
  br i1 %510, label %luaV_tonumber.exit133, label %511

; <label>:511                                     ; preds = %504
  %512 = load i64, i64* %36, align 8, !tbaa !36
  store i64 %512, i64* %37, align 8, !tbaa !36
  store i32 3, i32* %38, align 8, !tbaa !10
  br label %513

luaV_tonumber.exit133:                            ; preds = %503, %504
  call void @llvm.lifetime.end(i64 8, i8* %31) #1
  br label %533

; <label>:513                                     ; preds = %.thread334, %511
  %.0.i.132.ph = phi %struct.lua_TValue.218* [ %tempb.i.90, %511 ], [ %477, %.thread334 ]
  call void @llvm.lifetime.end(i64 8, i8* %31) #1
  call void @llvm.lifetime.start(i64 8, i8* %32) #1
  %514 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %487, i64 0, i32 1
  %515 = load i32, i32* %514, align 4, !tbaa !10
  switch i32 %515, label %luaV_tonumber.exit136 [
    i32 3, label %525
    i32 4, label %516
  ]

; <label>:516                                     ; preds = %513
  %517 = bitcast %struct.lua_TValue.218* %487 to %union.TString.210**
  %518 = load %union.TString.210*, %union.TString.210** %517, align 8, !tbaa !25
  %519 = getelementptr inbounds %union.TString.210, %union.TString.210* %518, i64 1
  %520 = bitcast %union.TString.210* %519 to i8*
  %521 = call i32 @luaO_str2d(i8* %520, double* nonnull %num.i.134) #1
  %522 = icmp eq i32 %521, 0
  br i1 %522, label %luaV_tonumber.exit136, label %523

; <label>:523                                     ; preds = %516
  %524 = load i64, i64* %33, align 8, !tbaa !36
  store i64 %524, i64* %34, align 8, !tbaa !36
  store i32 3, i32* %35, align 8, !tbaa !10
  br label %525

luaV_tonumber.exit136:                            ; preds = %513, %516
  call void @llvm.lifetime.end(i64 8, i8* %32) #1
  br label %533

; <label>:525                                     ; preds = %523, %513
  %.0.i.135.ph = phi %struct.lua_TValue.218* [ %487, %513 ], [ %tempc.i.91, %523 ]
  call void @llvm.lifetime.end(i64 8, i8* %32) #1
  %526 = bitcast %struct.lua_TValue.218* %.0.i.132.ph to double*
  %527 = load double, double* %526, align 8, !tbaa !36
  %528 = bitcast %struct.lua_TValue.218* %.0.i.135.ph to double*
  %529 = load double, double* %528, align 8, !tbaa !36
  %530 = fsub double %527, %529
  %531 = bitcast %struct.lua_TValue.218* %182 to double*
  store double %530, double* %531, align 8, !tbaa !36
  %532 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %base.1, i64 %181, i32 1
  store i32 3, i32* %532, align 4, !tbaa !10
  br label %Arith.exit92

; <label>:533                                     ; preds = %luaV_tonumber.exit136, %luaV_tonumber.exit133
  %534 = call %struct.lua_TValue.218* bitcast (%struct.lua_TValue* (%struct.lua_State*, %struct.lua_TValue*, i32)* @luaT_gettmbyobj to %struct.lua_TValue.218* (%struct.lua_State.215*, %struct.lua_TValue.218*, i32)*)(%struct.lua_State.215* %L, %struct.lua_TValue.218* %477, i32 6) #1
  %535 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %534, i64 0, i32 1
  %536 = load i32, i32* %535, align 4, !tbaa !10
  %537 = icmp eq i32 %536, 0
  br i1 %537, label %538, label %.thread.i.140

; <label>:538                                     ; preds = %533
  %539 = call %struct.lua_TValue.218* bitcast (%struct.lua_TValue* (%struct.lua_State*, %struct.lua_TValue*, i32)* @luaT_gettmbyobj to %struct.lua_TValue.218* (%struct.lua_State.215*, %struct.lua_TValue.218*, i32)*)(%struct.lua_State.215* %L, %struct.lua_TValue.218* %487, i32 6) #1
  %.phi.trans.insert.i.137 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %539, i64 0, i32 1
  %.pre.i.138 = load i32, i32* %.phi.trans.insert.i.137, align 4, !tbaa !10
  %540 = icmp eq i32 %.pre.i.138, 0
  br i1 %540, label %585, label %.thread.i.140

.thread.i.140:                                    ; preds = %538, %533
  %tm.01.i.139 = phi %struct.lua_TValue.218* [ %539, %538 ], [ %534, %533 ]
  %541 = load i64, i64* %16, align 8, !tbaa !50
  %542 = ptrtoint %struct.lua_TValue.218* %182 to i64
  %543 = sub i64 %542, %541
  %544 = load %struct.lua_TValue.218*, %struct.lua_TValue.218** %17, align 8, !tbaa !1
  %545 = bitcast %struct.lua_TValue.218* %tm.01.i.139 to i64*
  %546 = bitcast %struct.lua_TValue.218* %544 to i64*
  %547 = load i64, i64* %545, align 8
  store i64 %547, i64* %546, align 8
  %548 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %tm.01.i.139, i64 0, i32 1
  %549 = load i32, i32* %548, align 4, !tbaa !10
  %550 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %544, i64 0, i32 1
  store i32 %549, i32* %550, align 4, !tbaa !10
  %551 = load %struct.lua_TValue.218*, %struct.lua_TValue.218** %17, align 8, !tbaa !1
  %552 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %551, i64 1
  %553 = bitcast %struct.lua_TValue.218* %477 to i64*
  %554 = bitcast %struct.lua_TValue.218* %552 to i64*
  %555 = load i64, i64* %553, align 8
  store i64 %555, i64* %554, align 8
  %556 = load i32, i32* %488, align 4, !tbaa !10
  %557 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %551, i64 1, i32 1
  store i32 %556, i32* %557, align 4, !tbaa !10
  %558 = load %struct.lua_TValue.218*, %struct.lua_TValue.218** %17, align 8, !tbaa !1
  %559 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %558, i64 2
  %560 = bitcast %struct.lua_TValue.218* %487 to i64*
  %561 = bitcast %struct.lua_TValue.218* %559 to i64*
  %562 = load i64, i64* %560, align 8
  store i64 %562, i64* %561, align 8
  %563 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %487, i64 0, i32 1
  %564 = load i32, i32* %563, align 4, !tbaa !10
  %565 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %558, i64 2, i32 1
  store i32 %564, i32* %565, align 4, !tbaa !10
  %566 = load i64, i64* %19, align 8, !tbaa !12
  %567 = load i64, i64* %20, align 8, !tbaa !1
  %568 = sub i64 %566, %567
  %569 = icmp slt i64 %568, 49
  %570 = inttoptr i64 %567 to %struct.lua_TValue.218*
  br i1 %569, label %571, label %call_binTM.exit142

; <label>:571                                     ; preds = %.thread.i.140
  call void bitcast (void (%struct.lua_State*, i32)* @luaD_growstack to void (%struct.lua_State.215*, i32)*)(%struct.lua_State.215* %L, i32 3) #1
  %.pre.i.143 = load %struct.lua_TValue.218*, %struct.lua_TValue.218** %17, align 8, !tbaa !1
  br label %call_binTM.exit142

call_binTM.exit142:                               ; preds = %571, %.thread.i.140
  %572 = phi %struct.lua_TValue.218* [ %570, %.thread.i.140 ], [ %.pre.i.143, %571 ]
  %573 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %572, i64 3
  store %struct.lua_TValue.218* %573, %struct.lua_TValue.218** %17, align 8, !tbaa !1
  call void bitcast (void (%struct.lua_State*, %struct.lua_TValue*, i32)* @luaD_call to void (%struct.lua_State.215*, %struct.lua_TValue.218*, i32)*)(%struct.lua_State.215* %L, %struct.lua_TValue.218* %572, i32 1) #1
  %574 = load i8*, i8** %21, align 8, !tbaa !50
  %575 = getelementptr inbounds i8, i8* %574, i64 %543
  %576 = load %struct.lua_TValue.218*, %struct.lua_TValue.218** %17, align 8, !tbaa !1
  %577 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %576, i64 -1
  store %struct.lua_TValue.218* %577, %struct.lua_TValue.218** %17, align 8, !tbaa !1
  %578 = bitcast %struct.lua_TValue.218* %577 to i64*
  %579 = bitcast i8* %575 to i64*
  %580 = load i64, i64* %578, align 8
  store i64 %580, i64* %579, align 8
  %581 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %576, i64 -1, i32 1
  %582 = load i32, i32* %581, align 4, !tbaa !10
  %583 = getelementptr inbounds i8, i8* %575, i64 8
  %584 = bitcast i8* %583 to i32*
  store i32 %582, i32* %584, align 4, !tbaa !10
  br label %Arith.exit92

; <label>:585                                     ; preds = %538
  call void bitcast (void (%struct.lua_State*, %struct.lua_TValue*, %struct.lua_TValue*)* @luaG_aritherror to void (%struct.lua_State.215*, %struct.lua_TValue.218*, %struct.lua_TValue.218*)*)(%struct.lua_State.215* %L, %struct.lua_TValue.218* %477, %struct.lua_TValue.218* %487) #1
  br label %Arith.exit92

Arith.exit92:                                     ; preds = %call_binTM.exit142, %525, %585
  call void @llvm.lifetime.end(i64 16, i8* %30) #1
  call void @llvm.lifetime.end(i64 16, i8* %29) #1
  %586 = load %struct.lua_TValue.218*, %struct.lua_TValue.218** %3, align 8, !tbaa !11
  br label %.thread232.backedge

; <label>:587                                     ; preds = %178
  %588 = lshr i32 %114, 23
  %589 = and i32 %588, 256
  %590 = icmp eq i32 %589, 0
  %591 = and i32 %588, 255
  %592 = zext i32 %591 to i64
  %593 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %110, i64 %592
  %594 = zext i32 %588 to i64
  %595 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %base.1, i64 %594
  %596 = select i1 %590, %struct.lua_TValue.218* %595, %struct.lua_TValue.218* %593
  %597 = lshr i32 %114, 14
  %598 = and i32 %597, 256
  %599 = icmp eq i32 %598, 0
  %600 = and i32 %597, 255
  %601 = zext i32 %600 to i64
  %602 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %110, i64 %601
  %603 = and i32 %597, 511
  %604 = zext i32 %603 to i64
  %605 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %base.1, i64 %604
  %606 = select i1 %599, %struct.lua_TValue.218* %605, %struct.lua_TValue.218* %602
  %607 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %596, i64 0, i32 1
  %608 = load i32, i32* %607, align 4, !tbaa !10
  %609 = icmp eq i32 %608, 3
  br i1 %609, label %610, label %622

; <label>:610                                     ; preds = %587
  %611 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %606, i64 0, i32 1
  %612 = load i32, i32* %611, align 4, !tbaa !10
  %613 = icmp eq i32 %612, 3
  br i1 %613, label %614, label %.thread335

.thread335:                                       ; preds = %610
  store i32* %113, i32** %1, align 8, !tbaa !131
  call void @llvm.lifetime.start(i64 16, i8* %39) #1
  call void @llvm.lifetime.start(i64 16, i8* %40) #1
  call void @llvm.lifetime.start(i64 8, i8* %41) #1
  br label %632

; <label>:614                                     ; preds = %610
  %615 = bitcast %struct.lua_TValue.218* %596 to double*
  %616 = load double, double* %615, align 8, !tbaa !36
  %617 = bitcast %struct.lua_TValue.218* %606 to double*
  %618 = load double, double* %617, align 8, !tbaa !36
  %619 = fmul double %616, %618
  %620 = bitcast %struct.lua_TValue.218* %182 to double*
  store double %619, double* %620, align 8, !tbaa !36
  %621 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %base.1, i64 %181, i32 1
  store i32 3, i32* %621, align 4, !tbaa !10
  br label %.thread232.backedge

; <label>:622                                     ; preds = %587
  store i32* %113, i32** %1, align 8, !tbaa !131
  call void @llvm.lifetime.start(i64 16, i8* %39) #1
  call void @llvm.lifetime.start(i64 16, i8* %40) #1
  call void @llvm.lifetime.start(i64 8, i8* %41) #1
  %cond340 = icmp eq i32 %608, 4
  br i1 %cond340, label %623, label %luaV_tonumber.exit147

; <label>:623                                     ; preds = %622
  %624 = bitcast %struct.lua_TValue.218* %596 to %union.TString.210**
  %625 = load %union.TString.210*, %union.TString.210** %624, align 8, !tbaa !25
  %626 = getelementptr inbounds %union.TString.210, %union.TString.210* %625, i64 1
  %627 = bitcast %union.TString.210* %626 to i8*
  %628 = call i32 @luaO_str2d(i8* %627, double* nonnull %num.i.145) #1
  %629 = icmp eq i32 %628, 0
  br i1 %629, label %luaV_tonumber.exit147, label %630

; <label>:630                                     ; preds = %623
  %631 = load i64, i64* %46, align 8, !tbaa !36
  store i64 %631, i64* %47, align 8, !tbaa !36
  store i32 3, i32* %48, align 8, !tbaa !10
  br label %632

luaV_tonumber.exit147:                            ; preds = %622, %623
  call void @llvm.lifetime.end(i64 8, i8* %41) #1
  br label %652

; <label>:632                                     ; preds = %.thread335, %630
  %.0.i.146.ph = phi %struct.lua_TValue.218* [ %tempb.i.93, %630 ], [ %596, %.thread335 ]
  call void @llvm.lifetime.end(i64 8, i8* %41) #1
  call void @llvm.lifetime.start(i64 8, i8* %42) #1
  %633 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %606, i64 0, i32 1
  %634 = load i32, i32* %633, align 4, !tbaa !10
  switch i32 %634, label %luaV_tonumber.exit150 [
    i32 3, label %644
    i32 4, label %635
  ]

; <label>:635                                     ; preds = %632
  %636 = bitcast %struct.lua_TValue.218* %606 to %union.TString.210**
  %637 = load %union.TString.210*, %union.TString.210** %636, align 8, !tbaa !25
  %638 = getelementptr inbounds %union.TString.210, %union.TString.210* %637, i64 1
  %639 = bitcast %union.TString.210* %638 to i8*
  %640 = call i32 @luaO_str2d(i8* %639, double* nonnull %num.i.148) #1
  %641 = icmp eq i32 %640, 0
  br i1 %641, label %luaV_tonumber.exit150, label %642

; <label>:642                                     ; preds = %635
  %643 = load i64, i64* %43, align 8, !tbaa !36
  store i64 %643, i64* %44, align 8, !tbaa !36
  store i32 3, i32* %45, align 8, !tbaa !10
  br label %644

luaV_tonumber.exit150:                            ; preds = %632, %635
  call void @llvm.lifetime.end(i64 8, i8* %42) #1
  br label %652

; <label>:644                                     ; preds = %642, %632
  %.0.i.149.ph = phi %struct.lua_TValue.218* [ %606, %632 ], [ %tempc.i.94, %642 ]
  call void @llvm.lifetime.end(i64 8, i8* %42) #1
  %645 = bitcast %struct.lua_TValue.218* %.0.i.146.ph to double*
  %646 = load double, double* %645, align 8, !tbaa !36
  %647 = bitcast %struct.lua_TValue.218* %.0.i.149.ph to double*
  %648 = load double, double* %647, align 8, !tbaa !36
  %649 = fmul double %646, %648
  %650 = bitcast %struct.lua_TValue.218* %182 to double*
  store double %649, double* %650, align 8, !tbaa !36
  %651 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %base.1, i64 %181, i32 1
  store i32 3, i32* %651, align 4, !tbaa !10
  br label %Arith.exit95

; <label>:652                                     ; preds = %luaV_tonumber.exit150, %luaV_tonumber.exit147
  %653 = call %struct.lua_TValue.218* bitcast (%struct.lua_TValue* (%struct.lua_State*, %struct.lua_TValue*, i32)* @luaT_gettmbyobj to %struct.lua_TValue.218* (%struct.lua_State.215*, %struct.lua_TValue.218*, i32)*)(%struct.lua_State.215* %L, %struct.lua_TValue.218* %596, i32 7) #1
  %654 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %653, i64 0, i32 1
  %655 = load i32, i32* %654, align 4, !tbaa !10
  %656 = icmp eq i32 %655, 0
  br i1 %656, label %657, label %.thread.i.154

; <label>:657                                     ; preds = %652
  %658 = call %struct.lua_TValue.218* bitcast (%struct.lua_TValue* (%struct.lua_State*, %struct.lua_TValue*, i32)* @luaT_gettmbyobj to %struct.lua_TValue.218* (%struct.lua_State.215*, %struct.lua_TValue.218*, i32)*)(%struct.lua_State.215* %L, %struct.lua_TValue.218* %606, i32 7) #1
  %.phi.trans.insert.i.151 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %658, i64 0, i32 1
  %.pre.i.152 = load i32, i32* %.phi.trans.insert.i.151, align 4, !tbaa !10
  %659 = icmp eq i32 %.pre.i.152, 0
  br i1 %659, label %704, label %.thread.i.154

.thread.i.154:                                    ; preds = %657, %652
  %tm.01.i.153 = phi %struct.lua_TValue.218* [ %658, %657 ], [ %653, %652 ]
  %660 = load i64, i64* %16, align 8, !tbaa !50
  %661 = ptrtoint %struct.lua_TValue.218* %182 to i64
  %662 = sub i64 %661, %660
  %663 = load %struct.lua_TValue.218*, %struct.lua_TValue.218** %17, align 8, !tbaa !1
  %664 = bitcast %struct.lua_TValue.218* %tm.01.i.153 to i64*
  %665 = bitcast %struct.lua_TValue.218* %663 to i64*
  %666 = load i64, i64* %664, align 8
  store i64 %666, i64* %665, align 8
  %667 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %tm.01.i.153, i64 0, i32 1
  %668 = load i32, i32* %667, align 4, !tbaa !10
  %669 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %663, i64 0, i32 1
  store i32 %668, i32* %669, align 4, !tbaa !10
  %670 = load %struct.lua_TValue.218*, %struct.lua_TValue.218** %17, align 8, !tbaa !1
  %671 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %670, i64 1
  %672 = bitcast %struct.lua_TValue.218* %596 to i64*
  %673 = bitcast %struct.lua_TValue.218* %671 to i64*
  %674 = load i64, i64* %672, align 8
  store i64 %674, i64* %673, align 8
  %675 = load i32, i32* %607, align 4, !tbaa !10
  %676 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %670, i64 1, i32 1
  store i32 %675, i32* %676, align 4, !tbaa !10
  %677 = load %struct.lua_TValue.218*, %struct.lua_TValue.218** %17, align 8, !tbaa !1
  %678 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %677, i64 2
  %679 = bitcast %struct.lua_TValue.218* %606 to i64*
  %680 = bitcast %struct.lua_TValue.218* %678 to i64*
  %681 = load i64, i64* %679, align 8
  store i64 %681, i64* %680, align 8
  %682 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %606, i64 0, i32 1
  %683 = load i32, i32* %682, align 4, !tbaa !10
  %684 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %677, i64 2, i32 1
  store i32 %683, i32* %684, align 4, !tbaa !10
  %685 = load i64, i64* %19, align 8, !tbaa !12
  %686 = load i64, i64* %20, align 8, !tbaa !1
  %687 = sub i64 %685, %686
  %688 = icmp slt i64 %687, 49
  %689 = inttoptr i64 %686 to %struct.lua_TValue.218*
  br i1 %688, label %690, label %call_binTM.exit156

; <label>:690                                     ; preds = %.thread.i.154
  call void bitcast (void (%struct.lua_State*, i32)* @luaD_growstack to void (%struct.lua_State.215*, i32)*)(%struct.lua_State.215* %L, i32 3) #1
  %.pre.i.157 = load %struct.lua_TValue.218*, %struct.lua_TValue.218** %17, align 8, !tbaa !1
  br label %call_binTM.exit156

call_binTM.exit156:                               ; preds = %690, %.thread.i.154
  %691 = phi %struct.lua_TValue.218* [ %689, %.thread.i.154 ], [ %.pre.i.157, %690 ]
  %692 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %691, i64 3
  store %struct.lua_TValue.218* %692, %struct.lua_TValue.218** %17, align 8, !tbaa !1
  call void bitcast (void (%struct.lua_State*, %struct.lua_TValue*, i32)* @luaD_call to void (%struct.lua_State.215*, %struct.lua_TValue.218*, i32)*)(%struct.lua_State.215* %L, %struct.lua_TValue.218* %691, i32 1) #1
  %693 = load i8*, i8** %21, align 8, !tbaa !50
  %694 = getelementptr inbounds i8, i8* %693, i64 %662
  %695 = load %struct.lua_TValue.218*, %struct.lua_TValue.218** %17, align 8, !tbaa !1
  %696 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %695, i64 -1
  store %struct.lua_TValue.218* %696, %struct.lua_TValue.218** %17, align 8, !tbaa !1
  %697 = bitcast %struct.lua_TValue.218* %696 to i64*
  %698 = bitcast i8* %694 to i64*
  %699 = load i64, i64* %697, align 8
  store i64 %699, i64* %698, align 8
  %700 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %695, i64 -1, i32 1
  %701 = load i32, i32* %700, align 4, !tbaa !10
  %702 = getelementptr inbounds i8, i8* %694, i64 8
  %703 = bitcast i8* %702 to i32*
  store i32 %701, i32* %703, align 4, !tbaa !10
  br label %Arith.exit95

; <label>:704                                     ; preds = %657
  call void bitcast (void (%struct.lua_State*, %struct.lua_TValue*, %struct.lua_TValue*)* @luaG_aritherror to void (%struct.lua_State.215*, %struct.lua_TValue.218*, %struct.lua_TValue.218*)*)(%struct.lua_State.215* %L, %struct.lua_TValue.218* %596, %struct.lua_TValue.218* %606) #1
  br label %Arith.exit95

Arith.exit95:                                     ; preds = %call_binTM.exit156, %644, %704
  call void @llvm.lifetime.end(i64 16, i8* %40) #1
  call void @llvm.lifetime.end(i64 16, i8* %39) #1
  %705 = load %struct.lua_TValue.218*, %struct.lua_TValue.218** %3, align 8, !tbaa !11
  br label %.thread232.backedge

; <label>:706                                     ; preds = %178
  %707 = lshr i32 %114, 23
  %708 = and i32 %707, 256
  %709 = icmp eq i32 %708, 0
  %710 = and i32 %707, 255
  %711 = zext i32 %710 to i64
  %712 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %110, i64 %711
  %713 = zext i32 %707 to i64
  %714 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %base.1, i64 %713
  %715 = select i1 %709, %struct.lua_TValue.218* %714, %struct.lua_TValue.218* %712
  %716 = lshr i32 %114, 14
  %717 = and i32 %716, 256
  %718 = icmp eq i32 %717, 0
  %719 = and i32 %716, 255
  %720 = zext i32 %719 to i64
  %721 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %110, i64 %720
  %722 = and i32 %716, 511
  %723 = zext i32 %722 to i64
  %724 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %base.1, i64 %723
  %725 = select i1 %718, %struct.lua_TValue.218* %724, %struct.lua_TValue.218* %721
  %726 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %715, i64 0, i32 1
  %727 = load i32, i32* %726, align 4, !tbaa !10
  %728 = icmp eq i32 %727, 3
  br i1 %728, label %729, label %741

; <label>:729                                     ; preds = %706
  %730 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %725, i64 0, i32 1
  %731 = load i32, i32* %730, align 4, !tbaa !10
  %732 = icmp eq i32 %731, 3
  br i1 %732, label %733, label %.thread336

.thread336:                                       ; preds = %729
  store i32* %113, i32** %1, align 8, !tbaa !131
  call void @llvm.lifetime.start(i64 16, i8* %49) #1
  call void @llvm.lifetime.start(i64 16, i8* %50) #1
  call void @llvm.lifetime.start(i64 8, i8* %51) #1
  br label %751

; <label>:733                                     ; preds = %729
  %734 = bitcast %struct.lua_TValue.218* %715 to double*
  %735 = load double, double* %734, align 8, !tbaa !36
  %736 = bitcast %struct.lua_TValue.218* %725 to double*
  %737 = load double, double* %736, align 8, !tbaa !36
  %738 = fdiv double %735, %737
  %739 = bitcast %struct.lua_TValue.218* %182 to double*
  store double %738, double* %739, align 8, !tbaa !36
  %740 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %base.1, i64 %181, i32 1
  store i32 3, i32* %740, align 4, !tbaa !10
  br label %.thread232.backedge

; <label>:741                                     ; preds = %706
  store i32* %113, i32** %1, align 8, !tbaa !131
  call void @llvm.lifetime.start(i64 16, i8* %49) #1
  call void @llvm.lifetime.start(i64 16, i8* %50) #1
  call void @llvm.lifetime.start(i64 8, i8* %51) #1
  %cond341 = icmp eq i32 %727, 4
  br i1 %cond341, label %742, label %luaV_tonumber.exit161

; <label>:742                                     ; preds = %741
  %743 = bitcast %struct.lua_TValue.218* %715 to %union.TString.210**
  %744 = load %union.TString.210*, %union.TString.210** %743, align 8, !tbaa !25
  %745 = getelementptr inbounds %union.TString.210, %union.TString.210* %744, i64 1
  %746 = bitcast %union.TString.210* %745 to i8*
  %747 = call i32 @luaO_str2d(i8* %746, double* nonnull %num.i.159) #1
  %748 = icmp eq i32 %747, 0
  br i1 %748, label %luaV_tonumber.exit161, label %749

; <label>:749                                     ; preds = %742
  %750 = load i64, i64* %56, align 8, !tbaa !36
  store i64 %750, i64* %57, align 8, !tbaa !36
  store i32 3, i32* %58, align 8, !tbaa !10
  br label %751

luaV_tonumber.exit161:                            ; preds = %741, %742
  call void @llvm.lifetime.end(i64 8, i8* %51) #1
  br label %771

; <label>:751                                     ; preds = %.thread336, %749
  %.0.i.160.ph = phi %struct.lua_TValue.218* [ %tempb.i.96, %749 ], [ %715, %.thread336 ]
  call void @llvm.lifetime.end(i64 8, i8* %51) #1
  call void @llvm.lifetime.start(i64 8, i8* %52) #1
  %752 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %725, i64 0, i32 1
  %753 = load i32, i32* %752, align 4, !tbaa !10
  switch i32 %753, label %luaV_tonumber.exit164 [
    i32 3, label %763
    i32 4, label %754
  ]

; <label>:754                                     ; preds = %751
  %755 = bitcast %struct.lua_TValue.218* %725 to %union.TString.210**
  %756 = load %union.TString.210*, %union.TString.210** %755, align 8, !tbaa !25
  %757 = getelementptr inbounds %union.TString.210, %union.TString.210* %756, i64 1
  %758 = bitcast %union.TString.210* %757 to i8*
  %759 = call i32 @luaO_str2d(i8* %758, double* nonnull %num.i.162) #1
  %760 = icmp eq i32 %759, 0
  br i1 %760, label %luaV_tonumber.exit164, label %761

; <label>:761                                     ; preds = %754
  %762 = load i64, i64* %53, align 8, !tbaa !36
  store i64 %762, i64* %54, align 8, !tbaa !36
  store i32 3, i32* %55, align 8, !tbaa !10
  br label %763

luaV_tonumber.exit164:                            ; preds = %751, %754
  call void @llvm.lifetime.end(i64 8, i8* %52) #1
  br label %771

; <label>:763                                     ; preds = %761, %751
  %.0.i.163.ph = phi %struct.lua_TValue.218* [ %725, %751 ], [ %tempc.i.97, %761 ]
  call void @llvm.lifetime.end(i64 8, i8* %52) #1
  %764 = bitcast %struct.lua_TValue.218* %.0.i.160.ph to double*
  %765 = load double, double* %764, align 8, !tbaa !36
  %766 = bitcast %struct.lua_TValue.218* %.0.i.163.ph to double*
  %767 = load double, double* %766, align 8, !tbaa !36
  %768 = fdiv double %765, %767
  %769 = bitcast %struct.lua_TValue.218* %182 to double*
  store double %768, double* %769, align 8, !tbaa !36
  %770 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %base.1, i64 %181, i32 1
  store i32 3, i32* %770, align 4, !tbaa !10
  br label %Arith.exit98

; <label>:771                                     ; preds = %luaV_tonumber.exit164, %luaV_tonumber.exit161
  %772 = call %struct.lua_TValue.218* bitcast (%struct.lua_TValue* (%struct.lua_State*, %struct.lua_TValue*, i32)* @luaT_gettmbyobj to %struct.lua_TValue.218* (%struct.lua_State.215*, %struct.lua_TValue.218*, i32)*)(%struct.lua_State.215* %L, %struct.lua_TValue.218* %715, i32 8) #1
  %773 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %772, i64 0, i32 1
  %774 = load i32, i32* %773, align 4, !tbaa !10
  %775 = icmp eq i32 %774, 0
  br i1 %775, label %776, label %.thread.i.168

; <label>:776                                     ; preds = %771
  %777 = call %struct.lua_TValue.218* bitcast (%struct.lua_TValue* (%struct.lua_State*, %struct.lua_TValue*, i32)* @luaT_gettmbyobj to %struct.lua_TValue.218* (%struct.lua_State.215*, %struct.lua_TValue.218*, i32)*)(%struct.lua_State.215* %L, %struct.lua_TValue.218* %725, i32 8) #1
  %.phi.trans.insert.i.165 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %777, i64 0, i32 1
  %.pre.i.166 = load i32, i32* %.phi.trans.insert.i.165, align 4, !tbaa !10
  %778 = icmp eq i32 %.pre.i.166, 0
  br i1 %778, label %823, label %.thread.i.168

.thread.i.168:                                    ; preds = %776, %771
  %tm.01.i.167 = phi %struct.lua_TValue.218* [ %777, %776 ], [ %772, %771 ]
  %779 = load i64, i64* %16, align 8, !tbaa !50
  %780 = ptrtoint %struct.lua_TValue.218* %182 to i64
  %781 = sub i64 %780, %779
  %782 = load %struct.lua_TValue.218*, %struct.lua_TValue.218** %17, align 8, !tbaa !1
  %783 = bitcast %struct.lua_TValue.218* %tm.01.i.167 to i64*
  %784 = bitcast %struct.lua_TValue.218* %782 to i64*
  %785 = load i64, i64* %783, align 8
  store i64 %785, i64* %784, align 8
  %786 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %tm.01.i.167, i64 0, i32 1
  %787 = load i32, i32* %786, align 4, !tbaa !10
  %788 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %782, i64 0, i32 1
  store i32 %787, i32* %788, align 4, !tbaa !10
  %789 = load %struct.lua_TValue.218*, %struct.lua_TValue.218** %17, align 8, !tbaa !1
  %790 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %789, i64 1
  %791 = bitcast %struct.lua_TValue.218* %715 to i64*
  %792 = bitcast %struct.lua_TValue.218* %790 to i64*
  %793 = load i64, i64* %791, align 8
  store i64 %793, i64* %792, align 8
  %794 = load i32, i32* %726, align 4, !tbaa !10
  %795 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %789, i64 1, i32 1
  store i32 %794, i32* %795, align 4, !tbaa !10
  %796 = load %struct.lua_TValue.218*, %struct.lua_TValue.218** %17, align 8, !tbaa !1
  %797 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %796, i64 2
  %798 = bitcast %struct.lua_TValue.218* %725 to i64*
  %799 = bitcast %struct.lua_TValue.218* %797 to i64*
  %800 = load i64, i64* %798, align 8
  store i64 %800, i64* %799, align 8
  %801 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %725, i64 0, i32 1
  %802 = load i32, i32* %801, align 4, !tbaa !10
  %803 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %796, i64 2, i32 1
  store i32 %802, i32* %803, align 4, !tbaa !10
  %804 = load i64, i64* %19, align 8, !tbaa !12
  %805 = load i64, i64* %20, align 8, !tbaa !1
  %806 = sub i64 %804, %805
  %807 = icmp slt i64 %806, 49
  %808 = inttoptr i64 %805 to %struct.lua_TValue.218*
  br i1 %807, label %809, label %call_binTM.exit170

; <label>:809                                     ; preds = %.thread.i.168
  call void bitcast (void (%struct.lua_State*, i32)* @luaD_growstack to void (%struct.lua_State.215*, i32)*)(%struct.lua_State.215* %L, i32 3) #1
  %.pre.i.171 = load %struct.lua_TValue.218*, %struct.lua_TValue.218** %17, align 8, !tbaa !1
  br label %call_binTM.exit170

call_binTM.exit170:                               ; preds = %809, %.thread.i.168
  %810 = phi %struct.lua_TValue.218* [ %808, %.thread.i.168 ], [ %.pre.i.171, %809 ]
  %811 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %810, i64 3
  store %struct.lua_TValue.218* %811, %struct.lua_TValue.218** %17, align 8, !tbaa !1
  call void bitcast (void (%struct.lua_State*, %struct.lua_TValue*, i32)* @luaD_call to void (%struct.lua_State.215*, %struct.lua_TValue.218*, i32)*)(%struct.lua_State.215* %L, %struct.lua_TValue.218* %810, i32 1) #1
  %812 = load i8*, i8** %21, align 8, !tbaa !50
  %813 = getelementptr inbounds i8, i8* %812, i64 %781
  %814 = load %struct.lua_TValue.218*, %struct.lua_TValue.218** %17, align 8, !tbaa !1
  %815 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %814, i64 -1
  store %struct.lua_TValue.218* %815, %struct.lua_TValue.218** %17, align 8, !tbaa !1
  %816 = bitcast %struct.lua_TValue.218* %815 to i64*
  %817 = bitcast i8* %813 to i64*
  %818 = load i64, i64* %816, align 8
  store i64 %818, i64* %817, align 8
  %819 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %814, i64 -1, i32 1
  %820 = load i32, i32* %819, align 4, !tbaa !10
  %821 = getelementptr inbounds i8, i8* %813, i64 8
  %822 = bitcast i8* %821 to i32*
  store i32 %820, i32* %822, align 4, !tbaa !10
  br label %Arith.exit98

; <label>:823                                     ; preds = %776
  call void bitcast (void (%struct.lua_State*, %struct.lua_TValue*, %struct.lua_TValue*)* @luaG_aritherror to void (%struct.lua_State.215*, %struct.lua_TValue.218*, %struct.lua_TValue.218*)*)(%struct.lua_State.215* %L, %struct.lua_TValue.218* %715, %struct.lua_TValue.218* %725) #1
  br label %Arith.exit98

Arith.exit98:                                     ; preds = %call_binTM.exit170, %763, %823
  call void @llvm.lifetime.end(i64 16, i8* %50) #1
  call void @llvm.lifetime.end(i64 16, i8* %49) #1
  %824 = load %struct.lua_TValue.218*, %struct.lua_TValue.218** %3, align 8, !tbaa !11
  br label %.thread232.backedge

; <label>:825                                     ; preds = %178
  %826 = lshr i32 %114, 23
  %827 = and i32 %826, 256
  %828 = icmp eq i32 %827, 0
  %829 = and i32 %826, 255
  %830 = zext i32 %829 to i64
  %831 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %110, i64 %830
  %832 = zext i32 %826 to i64
  %833 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %base.1, i64 %832
  %834 = select i1 %828, %struct.lua_TValue.218* %833, %struct.lua_TValue.218* %831
  %835 = lshr i32 %114, 14
  %836 = and i32 %835, 256
  %837 = icmp eq i32 %836, 0
  %838 = and i32 %835, 255
  %839 = zext i32 %838 to i64
  %840 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %110, i64 %839
  %841 = and i32 %835, 511
  %842 = zext i32 %841 to i64
  %843 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %base.1, i64 %842
  %844 = select i1 %837, %struct.lua_TValue.218* %843, %struct.lua_TValue.218* %840
  %845 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %834, i64 0, i32 1
  %846 = load i32, i32* %845, align 4, !tbaa !10
  %847 = icmp eq i32 %846, 3
  br i1 %847, label %848, label %863

; <label>:848                                     ; preds = %825
  %849 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %844, i64 0, i32 1
  %850 = load i32, i32* %849, align 4, !tbaa !10
  %851 = icmp eq i32 %850, 3
  br i1 %851, label %852, label %.thread337

.thread337:                                       ; preds = %848
  store i32* %113, i32** %1, align 8, !tbaa !131
  call void @llvm.lifetime.start(i64 16, i8* %59) #1
  call void @llvm.lifetime.start(i64 16, i8* %60) #1
  call void @llvm.lifetime.start(i64 8, i8* %61) #1
  br label %873

; <label>:852                                     ; preds = %848
  %853 = bitcast %struct.lua_TValue.218* %834 to double*
  %854 = load double, double* %853, align 8, !tbaa !36
  %855 = bitcast %struct.lua_TValue.218* %844 to double*
  %856 = load double, double* %855, align 8, !tbaa !36
  %857 = fdiv double %854, %856
  %858 = call double @floor(double %857) #12
  %859 = fmul double %856, %858
  %860 = fsub double %854, %859
  %861 = bitcast %struct.lua_TValue.218* %182 to double*
  store double %860, double* %861, align 8, !tbaa !36
  %862 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %base.1, i64 %181, i32 1
  store i32 3, i32* %862, align 4, !tbaa !10
  br label %.thread232.backedge

; <label>:863                                     ; preds = %825
  store i32* %113, i32** %1, align 8, !tbaa !131
  call void @llvm.lifetime.start(i64 16, i8* %59) #1
  call void @llvm.lifetime.start(i64 16, i8* %60) #1
  call void @llvm.lifetime.start(i64 8, i8* %61) #1
  %cond342 = icmp eq i32 %846, 4
  br i1 %cond342, label %864, label %luaV_tonumber.exit175

; <label>:864                                     ; preds = %863
  %865 = bitcast %struct.lua_TValue.218* %834 to %union.TString.210**
  %866 = load %union.TString.210*, %union.TString.210** %865, align 8, !tbaa !25
  %867 = getelementptr inbounds %union.TString.210, %union.TString.210* %866, i64 1
  %868 = bitcast %union.TString.210* %867 to i8*
  %869 = call i32 @luaO_str2d(i8* %868, double* nonnull %num.i.173) #1
  %870 = icmp eq i32 %869, 0
  br i1 %870, label %luaV_tonumber.exit175, label %871

; <label>:871                                     ; preds = %864
  %872 = load i64, i64* %66, align 8, !tbaa !36
  store i64 %872, i64* %67, align 8, !tbaa !36
  store i32 3, i32* %68, align 8, !tbaa !10
  br label %873

luaV_tonumber.exit175:                            ; preds = %863, %864
  call void @llvm.lifetime.end(i64 8, i8* %61) #1
  br label %896

; <label>:873                                     ; preds = %.thread337, %871
  %.0.i.174.ph = phi %struct.lua_TValue.218* [ %tempb.i.99, %871 ], [ %834, %.thread337 ]
  call void @llvm.lifetime.end(i64 8, i8* %61) #1
  call void @llvm.lifetime.start(i64 8, i8* %62) #1
  %874 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %844, i64 0, i32 1
  %875 = load i32, i32* %874, align 4, !tbaa !10
  switch i32 %875, label %luaV_tonumber.exit178 [
    i32 3, label %885
    i32 4, label %876
  ]

; <label>:876                                     ; preds = %873
  %877 = bitcast %struct.lua_TValue.218* %844 to %union.TString.210**
  %878 = load %union.TString.210*, %union.TString.210** %877, align 8, !tbaa !25
  %879 = getelementptr inbounds %union.TString.210, %union.TString.210* %878, i64 1
  %880 = bitcast %union.TString.210* %879 to i8*
  %881 = call i32 @luaO_str2d(i8* %880, double* nonnull %num.i.176) #1
  %882 = icmp eq i32 %881, 0
  br i1 %882, label %luaV_tonumber.exit178, label %883

; <label>:883                                     ; preds = %876
  %884 = load i64, i64* %63, align 8, !tbaa !36
  store i64 %884, i64* %64, align 8, !tbaa !36
  store i32 3, i32* %65, align 8, !tbaa !10
  br label %885

luaV_tonumber.exit178:                            ; preds = %873, %876
  call void @llvm.lifetime.end(i64 8, i8* %62) #1
  br label %896

; <label>:885                                     ; preds = %883, %873
  %.0.i.177.ph = phi %struct.lua_TValue.218* [ %844, %873 ], [ %tempc.i.100, %883 ]
  call void @llvm.lifetime.end(i64 8, i8* %62) #1
  %886 = bitcast %struct.lua_TValue.218* %.0.i.174.ph to double*
  %887 = load double, double* %886, align 8, !tbaa !36
  %888 = bitcast %struct.lua_TValue.218* %.0.i.177.ph to double*
  %889 = load double, double* %888, align 8, !tbaa !36
  %890 = fdiv double %887, %889
  %891 = call double @floor(double %890) #12
  %892 = fmul double %889, %891
  %893 = fsub double %887, %892
  %894 = bitcast %struct.lua_TValue.218* %182 to double*
  store double %893, double* %894, align 8, !tbaa !36
  %895 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %base.1, i64 %181, i32 1
  store i32 3, i32* %895, align 4, !tbaa !10
  br label %Arith.exit101

; <label>:896                                     ; preds = %luaV_tonumber.exit178, %luaV_tonumber.exit175
  %897 = call %struct.lua_TValue.218* bitcast (%struct.lua_TValue* (%struct.lua_State*, %struct.lua_TValue*, i32)* @luaT_gettmbyobj to %struct.lua_TValue.218* (%struct.lua_State.215*, %struct.lua_TValue.218*, i32)*)(%struct.lua_State.215* %L, %struct.lua_TValue.218* %834, i32 9) #1
  %898 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %897, i64 0, i32 1
  %899 = load i32, i32* %898, align 4, !tbaa !10
  %900 = icmp eq i32 %899, 0
  br i1 %900, label %901, label %.thread.i.182

; <label>:901                                     ; preds = %896
  %902 = call %struct.lua_TValue.218* bitcast (%struct.lua_TValue* (%struct.lua_State*, %struct.lua_TValue*, i32)* @luaT_gettmbyobj to %struct.lua_TValue.218* (%struct.lua_State.215*, %struct.lua_TValue.218*, i32)*)(%struct.lua_State.215* %L, %struct.lua_TValue.218* %844, i32 9) #1
  %.phi.trans.insert.i.179 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %902, i64 0, i32 1
  %.pre.i.180 = load i32, i32* %.phi.trans.insert.i.179, align 4, !tbaa !10
  %903 = icmp eq i32 %.pre.i.180, 0
  br i1 %903, label %948, label %.thread.i.182

.thread.i.182:                                    ; preds = %901, %896
  %tm.01.i.181 = phi %struct.lua_TValue.218* [ %902, %901 ], [ %897, %896 ]
  %904 = load i64, i64* %16, align 8, !tbaa !50
  %905 = ptrtoint %struct.lua_TValue.218* %182 to i64
  %906 = sub i64 %905, %904
  %907 = load %struct.lua_TValue.218*, %struct.lua_TValue.218** %17, align 8, !tbaa !1
  %908 = bitcast %struct.lua_TValue.218* %tm.01.i.181 to i64*
  %909 = bitcast %struct.lua_TValue.218* %907 to i64*
  %910 = load i64, i64* %908, align 8
  store i64 %910, i64* %909, align 8
  %911 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %tm.01.i.181, i64 0, i32 1
  %912 = load i32, i32* %911, align 4, !tbaa !10
  %913 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %907, i64 0, i32 1
  store i32 %912, i32* %913, align 4, !tbaa !10
  %914 = load %struct.lua_TValue.218*, %struct.lua_TValue.218** %17, align 8, !tbaa !1
  %915 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %914, i64 1
  %916 = bitcast %struct.lua_TValue.218* %834 to i64*
  %917 = bitcast %struct.lua_TValue.218* %915 to i64*
  %918 = load i64, i64* %916, align 8
  store i64 %918, i64* %917, align 8
  %919 = load i32, i32* %845, align 4, !tbaa !10
  %920 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %914, i64 1, i32 1
  store i32 %919, i32* %920, align 4, !tbaa !10
  %921 = load %struct.lua_TValue.218*, %struct.lua_TValue.218** %17, align 8, !tbaa !1
  %922 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %921, i64 2
  %923 = bitcast %struct.lua_TValue.218* %844 to i64*
  %924 = bitcast %struct.lua_TValue.218* %922 to i64*
  %925 = load i64, i64* %923, align 8
  store i64 %925, i64* %924, align 8
  %926 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %844, i64 0, i32 1
  %927 = load i32, i32* %926, align 4, !tbaa !10
  %928 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %921, i64 2, i32 1
  store i32 %927, i32* %928, align 4, !tbaa !10
  %929 = load i64, i64* %19, align 8, !tbaa !12
  %930 = load i64, i64* %20, align 8, !tbaa !1
  %931 = sub i64 %929, %930
  %932 = icmp slt i64 %931, 49
  %933 = inttoptr i64 %930 to %struct.lua_TValue.218*
  br i1 %932, label %934, label %call_binTM.exit184

; <label>:934                                     ; preds = %.thread.i.182
  call void bitcast (void (%struct.lua_State*, i32)* @luaD_growstack to void (%struct.lua_State.215*, i32)*)(%struct.lua_State.215* %L, i32 3) #1
  %.pre.i.185 = load %struct.lua_TValue.218*, %struct.lua_TValue.218** %17, align 8, !tbaa !1
  br label %call_binTM.exit184

call_binTM.exit184:                               ; preds = %934, %.thread.i.182
  %935 = phi %struct.lua_TValue.218* [ %933, %.thread.i.182 ], [ %.pre.i.185, %934 ]
  %936 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %935, i64 3
  store %struct.lua_TValue.218* %936, %struct.lua_TValue.218** %17, align 8, !tbaa !1
  call void bitcast (void (%struct.lua_State*, %struct.lua_TValue*, i32)* @luaD_call to void (%struct.lua_State.215*, %struct.lua_TValue.218*, i32)*)(%struct.lua_State.215* %L, %struct.lua_TValue.218* %935, i32 1) #1
  %937 = load i8*, i8** %21, align 8, !tbaa !50
  %938 = getelementptr inbounds i8, i8* %937, i64 %906
  %939 = load %struct.lua_TValue.218*, %struct.lua_TValue.218** %17, align 8, !tbaa !1
  %940 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %939, i64 -1
  store %struct.lua_TValue.218* %940, %struct.lua_TValue.218** %17, align 8, !tbaa !1
  %941 = bitcast %struct.lua_TValue.218* %940 to i64*
  %942 = bitcast i8* %938 to i64*
  %943 = load i64, i64* %941, align 8
  store i64 %943, i64* %942, align 8
  %944 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %939, i64 -1, i32 1
  %945 = load i32, i32* %944, align 4, !tbaa !10
  %946 = getelementptr inbounds i8, i8* %938, i64 8
  %947 = bitcast i8* %946 to i32*
  store i32 %945, i32* %947, align 4, !tbaa !10
  br label %Arith.exit101

; <label>:948                                     ; preds = %901
  call void bitcast (void (%struct.lua_State*, %struct.lua_TValue*, %struct.lua_TValue*)* @luaG_aritherror to void (%struct.lua_State.215*, %struct.lua_TValue.218*, %struct.lua_TValue.218*)*)(%struct.lua_State.215* %L, %struct.lua_TValue.218* %834, %struct.lua_TValue.218* %844) #1
  br label %Arith.exit101

Arith.exit101:                                    ; preds = %call_binTM.exit184, %885, %948
  call void @llvm.lifetime.end(i64 16, i8* %60) #1
  call void @llvm.lifetime.end(i64 16, i8* %59) #1
  %949 = load %struct.lua_TValue.218*, %struct.lua_TValue.218** %3, align 8, !tbaa !11
  br label %.thread232.backedge

; <label>:950                                     ; preds = %178
  %951 = lshr i32 %114, 23
  %952 = and i32 %951, 256
  %953 = icmp eq i32 %952, 0
  %954 = and i32 %951, 255
  %955 = zext i32 %954 to i64
  %956 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %110, i64 %955
  %957 = zext i32 %951 to i64
  %958 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %base.1, i64 %957
  %959 = select i1 %953, %struct.lua_TValue.218* %958, %struct.lua_TValue.218* %956
  %960 = lshr i32 %114, 14
  %961 = and i32 %960, 256
  %962 = icmp eq i32 %961, 0
  %963 = and i32 %960, 255
  %964 = zext i32 %963 to i64
  %965 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %110, i64 %964
  %966 = and i32 %960, 511
  %967 = zext i32 %966 to i64
  %968 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %base.1, i64 %967
  %969 = select i1 %962, %struct.lua_TValue.218* %968, %struct.lua_TValue.218* %965
  %970 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %959, i64 0, i32 1
  %971 = load i32, i32* %970, align 4, !tbaa !10
  %972 = icmp eq i32 %971, 3
  br i1 %972, label %973, label %985

; <label>:973                                     ; preds = %950
  %974 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %969, i64 0, i32 1
  %975 = load i32, i32* %974, align 4, !tbaa !10
  %976 = icmp eq i32 %975, 3
  br i1 %976, label %977, label %.thread338

.thread338:                                       ; preds = %973
  store i32* %113, i32** %1, align 8, !tbaa !131
  call void @llvm.lifetime.start(i64 16, i8* %69) #1
  call void @llvm.lifetime.start(i64 16, i8* %70) #1
  call void @llvm.lifetime.start(i64 8, i8* %71) #1
  br label %995

; <label>:977                                     ; preds = %973
  %978 = bitcast %struct.lua_TValue.218* %959 to double*
  %979 = load double, double* %978, align 8, !tbaa !36
  %980 = bitcast %struct.lua_TValue.218* %969 to double*
  %981 = load double, double* %980, align 8, !tbaa !36
  %982 = call double @pow(double %979, double %981) #1
  %983 = bitcast %struct.lua_TValue.218* %182 to double*
  store double %982, double* %983, align 8, !tbaa !36
  %984 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %base.1, i64 %181, i32 1
  store i32 3, i32* %984, align 4, !tbaa !10
  br label %.thread232.backedge

; <label>:985                                     ; preds = %950
  store i32* %113, i32** %1, align 8, !tbaa !131
  call void @llvm.lifetime.start(i64 16, i8* %69) #1
  call void @llvm.lifetime.start(i64 16, i8* %70) #1
  call void @llvm.lifetime.start(i64 8, i8* %71) #1
  %cond343 = icmp eq i32 %971, 4
  br i1 %cond343, label %986, label %luaV_tonumber.exit189

; <label>:986                                     ; preds = %985
  %987 = bitcast %struct.lua_TValue.218* %959 to %union.TString.210**
  %988 = load %union.TString.210*, %union.TString.210** %987, align 8, !tbaa !25
  %989 = getelementptr inbounds %union.TString.210, %union.TString.210* %988, i64 1
  %990 = bitcast %union.TString.210* %989 to i8*
  %991 = call i32 @luaO_str2d(i8* %990, double* nonnull %num.i.187) #1
  %992 = icmp eq i32 %991, 0
  br i1 %992, label %luaV_tonumber.exit189, label %993

; <label>:993                                     ; preds = %986
  %994 = load i64, i64* %76, align 8, !tbaa !36
  store i64 %994, i64* %77, align 8, !tbaa !36
  store i32 3, i32* %78, align 8, !tbaa !10
  br label %995

luaV_tonumber.exit189:                            ; preds = %985, %986
  call void @llvm.lifetime.end(i64 8, i8* %71) #1
  br label %1015

; <label>:995                                     ; preds = %.thread338, %993
  %.0.i.188.ph = phi %struct.lua_TValue.218* [ %tempb.i.102, %993 ], [ %959, %.thread338 ]
  call void @llvm.lifetime.end(i64 8, i8* %71) #1
  call void @llvm.lifetime.start(i64 8, i8* %72) #1
  %996 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %969, i64 0, i32 1
  %997 = load i32, i32* %996, align 4, !tbaa !10
  switch i32 %997, label %luaV_tonumber.exit192 [
    i32 3, label %1007
    i32 4, label %998
  ]

; <label>:998                                     ; preds = %995
  %999 = bitcast %struct.lua_TValue.218* %969 to %union.TString.210**
  %1000 = load %union.TString.210*, %union.TString.210** %999, align 8, !tbaa !25
  %1001 = getelementptr inbounds %union.TString.210, %union.TString.210* %1000, i64 1
  %1002 = bitcast %union.TString.210* %1001 to i8*
  %1003 = call i32 @luaO_str2d(i8* %1002, double* nonnull %num.i.190) #1
  %1004 = icmp eq i32 %1003, 0
  br i1 %1004, label %luaV_tonumber.exit192, label %1005

; <label>:1005                                    ; preds = %998
  %1006 = load i64, i64* %73, align 8, !tbaa !36
  store i64 %1006, i64* %74, align 8, !tbaa !36
  store i32 3, i32* %75, align 8, !tbaa !10
  br label %1007

luaV_tonumber.exit192:                            ; preds = %995, %998
  call void @llvm.lifetime.end(i64 8, i8* %72) #1
  br label %1015

; <label>:1007                                    ; preds = %1005, %995
  %.0.i.191.ph = phi %struct.lua_TValue.218* [ %969, %995 ], [ %tempc.i.103, %1005 ]
  call void @llvm.lifetime.end(i64 8, i8* %72) #1
  %1008 = bitcast %struct.lua_TValue.218* %.0.i.188.ph to double*
  %1009 = load double, double* %1008, align 8, !tbaa !36
  %1010 = bitcast %struct.lua_TValue.218* %.0.i.191.ph to double*
  %1011 = load double, double* %1010, align 8, !tbaa !36
  %1012 = call double @pow(double %1009, double %1011) #1
  %1013 = bitcast %struct.lua_TValue.218* %182 to double*
  store double %1012, double* %1013, align 8, !tbaa !36
  %1014 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %base.1, i64 %181, i32 1
  store i32 3, i32* %1014, align 4, !tbaa !10
  br label %Arith.exit104

; <label>:1015                                    ; preds = %luaV_tonumber.exit192, %luaV_tonumber.exit189
  %1016 = call %struct.lua_TValue.218* bitcast (%struct.lua_TValue* (%struct.lua_State*, %struct.lua_TValue*, i32)* @luaT_gettmbyobj to %struct.lua_TValue.218* (%struct.lua_State.215*, %struct.lua_TValue.218*, i32)*)(%struct.lua_State.215* %L, %struct.lua_TValue.218* %959, i32 10) #1
  %1017 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %1016, i64 0, i32 1
  %1018 = load i32, i32* %1017, align 4, !tbaa !10
  %1019 = icmp eq i32 %1018, 0
  br i1 %1019, label %1020, label %.thread.i.196

; <label>:1020                                    ; preds = %1015
  %1021 = call %struct.lua_TValue.218* bitcast (%struct.lua_TValue* (%struct.lua_State*, %struct.lua_TValue*, i32)* @luaT_gettmbyobj to %struct.lua_TValue.218* (%struct.lua_State.215*, %struct.lua_TValue.218*, i32)*)(%struct.lua_State.215* %L, %struct.lua_TValue.218* %969, i32 10) #1
  %.phi.trans.insert.i.193 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %1021, i64 0, i32 1
  %.pre.i.194 = load i32, i32* %.phi.trans.insert.i.193, align 4, !tbaa !10
  %1022 = icmp eq i32 %.pre.i.194, 0
  br i1 %1022, label %1067, label %.thread.i.196

.thread.i.196:                                    ; preds = %1020, %1015
  %tm.01.i.195 = phi %struct.lua_TValue.218* [ %1021, %1020 ], [ %1016, %1015 ]
  %1023 = load i64, i64* %16, align 8, !tbaa !50
  %1024 = ptrtoint %struct.lua_TValue.218* %182 to i64
  %1025 = sub i64 %1024, %1023
  %1026 = load %struct.lua_TValue.218*, %struct.lua_TValue.218** %17, align 8, !tbaa !1
  %1027 = bitcast %struct.lua_TValue.218* %tm.01.i.195 to i64*
  %1028 = bitcast %struct.lua_TValue.218* %1026 to i64*
  %1029 = load i64, i64* %1027, align 8
  store i64 %1029, i64* %1028, align 8
  %1030 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %tm.01.i.195, i64 0, i32 1
  %1031 = load i32, i32* %1030, align 4, !tbaa !10
  %1032 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %1026, i64 0, i32 1
  store i32 %1031, i32* %1032, align 4, !tbaa !10
  %1033 = load %struct.lua_TValue.218*, %struct.lua_TValue.218** %17, align 8, !tbaa !1
  %1034 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %1033, i64 1
  %1035 = bitcast %struct.lua_TValue.218* %959 to i64*
  %1036 = bitcast %struct.lua_TValue.218* %1034 to i64*
  %1037 = load i64, i64* %1035, align 8
  store i64 %1037, i64* %1036, align 8
  %1038 = load i32, i32* %970, align 4, !tbaa !10
  %1039 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %1033, i64 1, i32 1
  store i32 %1038, i32* %1039, align 4, !tbaa !10
  %1040 = load %struct.lua_TValue.218*, %struct.lua_TValue.218** %17, align 8, !tbaa !1
  %1041 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %1040, i64 2
  %1042 = bitcast %struct.lua_TValue.218* %969 to i64*
  %1043 = bitcast %struct.lua_TValue.218* %1041 to i64*
  %1044 = load i64, i64* %1042, align 8
  store i64 %1044, i64* %1043, align 8
  %1045 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %969, i64 0, i32 1
  %1046 = load i32, i32* %1045, align 4, !tbaa !10
  %1047 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %1040, i64 2, i32 1
  store i32 %1046, i32* %1047, align 4, !tbaa !10
  %1048 = load i64, i64* %19, align 8, !tbaa !12
  %1049 = load i64, i64* %20, align 8, !tbaa !1
  %1050 = sub i64 %1048, %1049
  %1051 = icmp slt i64 %1050, 49
  %1052 = inttoptr i64 %1049 to %struct.lua_TValue.218*
  br i1 %1051, label %1053, label %call_binTM.exit198

; <label>:1053                                    ; preds = %.thread.i.196
  call void bitcast (void (%struct.lua_State*, i32)* @luaD_growstack to void (%struct.lua_State.215*, i32)*)(%struct.lua_State.215* %L, i32 3) #1
  %.pre.i.199 = load %struct.lua_TValue.218*, %struct.lua_TValue.218** %17, align 8, !tbaa !1
  br label %call_binTM.exit198

call_binTM.exit198:                               ; preds = %1053, %.thread.i.196
  %1054 = phi %struct.lua_TValue.218* [ %1052, %.thread.i.196 ], [ %.pre.i.199, %1053 ]
  %1055 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %1054, i64 3
  store %struct.lua_TValue.218* %1055, %struct.lua_TValue.218** %17, align 8, !tbaa !1
  call void bitcast (void (%struct.lua_State*, %struct.lua_TValue*, i32)* @luaD_call to void (%struct.lua_State.215*, %struct.lua_TValue.218*, i32)*)(%struct.lua_State.215* %L, %struct.lua_TValue.218* %1054, i32 1) #1
  %1056 = load i8*, i8** %21, align 8, !tbaa !50
  %1057 = getelementptr inbounds i8, i8* %1056, i64 %1025
  %1058 = load %struct.lua_TValue.218*, %struct.lua_TValue.218** %17, align 8, !tbaa !1
  %1059 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %1058, i64 -1
  store %struct.lua_TValue.218* %1059, %struct.lua_TValue.218** %17, align 8, !tbaa !1
  %1060 = bitcast %struct.lua_TValue.218* %1059 to i64*
  %1061 = bitcast i8* %1057 to i64*
  %1062 = load i64, i64* %1060, align 8
  store i64 %1062, i64* %1061, align 8
  %1063 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %1058, i64 -1, i32 1
  %1064 = load i32, i32* %1063, align 4, !tbaa !10
  %1065 = getelementptr inbounds i8, i8* %1057, i64 8
  %1066 = bitcast i8* %1065 to i32*
  store i32 %1064, i32* %1066, align 4, !tbaa !10
  br label %Arith.exit104

; <label>:1067                                    ; preds = %1020
  call void bitcast (void (%struct.lua_State*, %struct.lua_TValue*, %struct.lua_TValue*)* @luaG_aritherror to void (%struct.lua_State.215*, %struct.lua_TValue.218*, %struct.lua_TValue.218*)*)(%struct.lua_State.215* %L, %struct.lua_TValue.218* %959, %struct.lua_TValue.218* %969) #1
  br label %Arith.exit104

Arith.exit104:                                    ; preds = %call_binTM.exit198, %1007, %1067
  call void @llvm.lifetime.end(i64 16, i8* %70) #1
  call void @llvm.lifetime.end(i64 16, i8* %69) #1
  %1068 = load %struct.lua_TValue.218*, %struct.lua_TValue.218** %3, align 8, !tbaa !11
  br label %.thread232.backedge

; <label>:1069                                    ; preds = %178
  %1070 = lshr i32 %114, 23
  %1071 = zext i32 %1070 to i64
  %1072 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %base.1, i64 %1071
  %1073 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %base.1, i64 %1071, i32 1
  %1074 = load i32, i32* %1073, align 4, !tbaa !10
  %1075 = icmp eq i32 %1074, 3
  br i1 %1075, label %1076, label %1082

; <label>:1076                                    ; preds = %1069
  %1077 = bitcast %struct.lua_TValue.218* %1072 to double*
  %1078 = load double, double* %1077, align 8, !tbaa !36
  %1079 = fsub double -0.000000e+00, %1078
  %1080 = bitcast %struct.lua_TValue.218* %182 to double*
  store double %1079, double* %1080, align 8, !tbaa !36
  %1081 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %base.1, i64 %181, i32 1
  store i32 3, i32* %1081, align 4, !tbaa !10
  br label %.thread232.backedge

; <label>:1082                                    ; preds = %1069
  store i32* %113, i32** %1, align 8, !tbaa !131
  call void @llvm.lifetime.start(i64 16, i8* %79) #1
  call void @llvm.lifetime.start(i64 8, i8* %80) #1
  %cond344 = icmp eq i32 %1074, 4
  br i1 %cond344, label %1083, label %luaV_tonumber.exit203

; <label>:1083                                    ; preds = %1082
  %1084 = bitcast %struct.lua_TValue.218* %1072 to %union.TString.210**
  %1085 = load %union.TString.210*, %union.TString.210** %1084, align 8, !tbaa !25
  %1086 = getelementptr inbounds %union.TString.210, %union.TString.210* %1085, i64 1
  %1087 = bitcast %union.TString.210* %1086 to i8*
  %1088 = call i32 @luaO_str2d(i8* %1087, double* nonnull %num.i.201) #1
  %1089 = icmp eq i32 %1088, 0
  br i1 %1089, label %luaV_tonumber.exit203, label %1090

; <label>:1090                                    ; preds = %1083
  %1091 = load i64, i64* %82, align 8, !tbaa !36
  store i64 %1091, i64* %83, align 8, !tbaa !36
  store i32 3, i32* %84, align 8, !tbaa !10
  call void @llvm.lifetime.end(i64 8, i8* %80) #1
  call void @llvm.lifetime.start(i64 8, i8* %81) #1
  %1092 = load i32, i32* %1073, align 4, !tbaa !10
  switch i32 %1092, label %luaV_tonumber.exit206 [
    i32 3, label %1100
    i32 4, label %1093
  ]

luaV_tonumber.exit203:                            ; preds = %1082, %1083
  call void @llvm.lifetime.end(i64 8, i8* %80) #1
  br label %1105

; <label>:1093                                    ; preds = %1090
  %1094 = bitcast %struct.lua_TValue.218* %1072 to %union.TString.210**
  %1095 = load %union.TString.210*, %union.TString.210** %1094, align 8, !tbaa !25
  %1096 = getelementptr inbounds %union.TString.210, %union.TString.210* %1095, i64 1
  %1097 = bitcast %union.TString.210* %1096 to i8*
  %1098 = call i32 @luaO_str2d(i8* %1097, double* nonnull %num.i.204) #1
  %1099 = icmp eq i32 %1098, 0
  br i1 %1099, label %luaV_tonumber.exit206, label %1100

luaV_tonumber.exit206:                            ; preds = %1090, %1093
  call void @llvm.lifetime.end(i64 8, i8* %81) #1
  br label %1105

; <label>:1100                                    ; preds = %1093, %1090
  call void @llvm.lifetime.end(i64 8, i8* %81) #1
  %1101 = load double, double* %98, align 8, !tbaa !36
  %1102 = fsub double -0.000000e+00, %1101
  %1103 = bitcast %struct.lua_TValue.218* %182 to double*
  store double %1102, double* %1103, align 8, !tbaa !36
  %1104 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %base.1, i64 %181, i32 1
  store i32 3, i32* %1104, align 4, !tbaa !10
  br label %Arith.exit107

; <label>:1105                                    ; preds = %luaV_tonumber.exit206, %luaV_tonumber.exit203
  %1106 = call %struct.lua_TValue.218* bitcast (%struct.lua_TValue* (%struct.lua_State*, %struct.lua_TValue*, i32)* @luaT_gettmbyobj to %struct.lua_TValue.218* (%struct.lua_State.215*, %struct.lua_TValue.218*, i32)*)(%struct.lua_State.215* %L, %struct.lua_TValue.218* %1072, i32 11) #1
  %1107 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %1106, i64 0, i32 1
  %1108 = load i32, i32* %1107, align 4, !tbaa !10
  %1109 = icmp eq i32 %1108, 0
  br i1 %1109, label %1110, label %.thread.i.210

; <label>:1110                                    ; preds = %1105
  %1111 = call %struct.lua_TValue.218* bitcast (%struct.lua_TValue* (%struct.lua_State*, %struct.lua_TValue*, i32)* @luaT_gettmbyobj to %struct.lua_TValue.218* (%struct.lua_State.215*, %struct.lua_TValue.218*, i32)*)(%struct.lua_State.215* %L, %struct.lua_TValue.218* %1072, i32 11) #1
  %.phi.trans.insert.i.207 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %1111, i64 0, i32 1
  %.pre.i.208 = load i32, i32* %.phi.trans.insert.i.207, align 4, !tbaa !10
  %1112 = icmp eq i32 %.pre.i.208, 0
  br i1 %1112, label %1155, label %.thread.i.210

.thread.i.210:                                    ; preds = %1110, %1105
  %tm.01.i.209 = phi %struct.lua_TValue.218* [ %1111, %1110 ], [ %1106, %1105 ]
  %1113 = load i64, i64* %16, align 8, !tbaa !50
  %1114 = ptrtoint %struct.lua_TValue.218* %182 to i64
  %1115 = sub i64 %1114, %1113
  %1116 = load %struct.lua_TValue.218*, %struct.lua_TValue.218** %17, align 8, !tbaa !1
  %1117 = bitcast %struct.lua_TValue.218* %tm.01.i.209 to i64*
  %1118 = bitcast %struct.lua_TValue.218* %1116 to i64*
  %1119 = load i64, i64* %1117, align 8
  store i64 %1119, i64* %1118, align 8
  %1120 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %tm.01.i.209, i64 0, i32 1
  %1121 = load i32, i32* %1120, align 4, !tbaa !10
  %1122 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %1116, i64 0, i32 1
  store i32 %1121, i32* %1122, align 4, !tbaa !10
  %1123 = load %struct.lua_TValue.218*, %struct.lua_TValue.218** %17, align 8, !tbaa !1
  %1124 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %1123, i64 1
  %1125 = bitcast %struct.lua_TValue.218* %1072 to i64*
  %1126 = bitcast %struct.lua_TValue.218* %1124 to i64*
  %1127 = load i64, i64* %1125, align 8
  store i64 %1127, i64* %1126, align 8
  %1128 = load i32, i32* %1073, align 4, !tbaa !10
  %1129 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %1123, i64 1, i32 1
  store i32 %1128, i32* %1129, align 4, !tbaa !10
  %1130 = load %struct.lua_TValue.218*, %struct.lua_TValue.218** %17, align 8, !tbaa !1
  %1131 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %1130, i64 2
  %1132 = bitcast %struct.lua_TValue.218* %1131 to i64*
  %1133 = load i64, i64* %1125, align 8
  store i64 %1133, i64* %1132, align 8
  %1134 = load i32, i32* %1073, align 4, !tbaa !10
  %1135 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %1130, i64 2, i32 1
  store i32 %1134, i32* %1135, align 4, !tbaa !10
  %1136 = load i64, i64* %19, align 8, !tbaa !12
  %1137 = load i64, i64* %20, align 8, !tbaa !1
  %1138 = sub i64 %1136, %1137
  %1139 = icmp slt i64 %1138, 49
  %1140 = inttoptr i64 %1137 to %struct.lua_TValue.218*
  br i1 %1139, label %1141, label %call_binTM.exit212

; <label>:1141                                    ; preds = %.thread.i.210
  call void bitcast (void (%struct.lua_State*, i32)* @luaD_growstack to void (%struct.lua_State.215*, i32)*)(%struct.lua_State.215* %L, i32 3) #1
  %.pre.i.213 = load %struct.lua_TValue.218*, %struct.lua_TValue.218** %17, align 8, !tbaa !1
  br label %call_binTM.exit212

call_binTM.exit212:                               ; preds = %1141, %.thread.i.210
  %1142 = phi %struct.lua_TValue.218* [ %1140, %.thread.i.210 ], [ %.pre.i.213, %1141 ]
  %1143 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %1142, i64 3
  store %struct.lua_TValue.218* %1143, %struct.lua_TValue.218** %17, align 8, !tbaa !1
  call void bitcast (void (%struct.lua_State*, %struct.lua_TValue*, i32)* @luaD_call to void (%struct.lua_State.215*, %struct.lua_TValue.218*, i32)*)(%struct.lua_State.215* %L, %struct.lua_TValue.218* %1142, i32 1) #1
  %1144 = load i8*, i8** %21, align 8, !tbaa !50
  %1145 = getelementptr inbounds i8, i8* %1144, i64 %1115
  %1146 = load %struct.lua_TValue.218*, %struct.lua_TValue.218** %17, align 8, !tbaa !1
  %1147 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %1146, i64 -1
  store %struct.lua_TValue.218* %1147, %struct.lua_TValue.218** %17, align 8, !tbaa !1
  %1148 = bitcast %struct.lua_TValue.218* %1147 to i64*
  %1149 = bitcast i8* %1145 to i64*
  %1150 = load i64, i64* %1148, align 8
  store i64 %1150, i64* %1149, align 8
  %1151 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %1146, i64 -1, i32 1
  %1152 = load i32, i32* %1151, align 4, !tbaa !10
  %1153 = getelementptr inbounds i8, i8* %1145, i64 8
  %1154 = bitcast i8* %1153 to i32*
  store i32 %1152, i32* %1154, align 4, !tbaa !10
  br label %Arith.exit107

; <label>:1155                                    ; preds = %1110
  call void bitcast (void (%struct.lua_State*, %struct.lua_TValue*, %struct.lua_TValue*)* @luaG_aritherror to void (%struct.lua_State.215*, %struct.lua_TValue.218*, %struct.lua_TValue.218*)*)(%struct.lua_State.215* %L, %struct.lua_TValue.218* %1072, %struct.lua_TValue.218* %1072) #1
  br label %Arith.exit107

Arith.exit107:                                    ; preds = %call_binTM.exit212, %1100, %1155
  call void @llvm.lifetime.end(i64 16, i8* %79) #1
  %1156 = load %struct.lua_TValue.218*, %struct.lua_TValue.218** %3, align 8, !tbaa !11
  br label %.thread232.backedge

; <label>:1157                                    ; preds = %178
  %1158 = lshr i32 %114, 23
  %1159 = zext i32 %1158 to i64
  %1160 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %base.1, i64 %1159, i32 1
  %1161 = load i32, i32* %1160, align 4, !tbaa !10
  %1162 = icmp eq i32 %1161, 0
  br i1 %1162, label %1170, label %1163

; <label>:1163                                    ; preds = %1157
  %1164 = icmp eq i32 %1161, 1
  br i1 %1164, label %1165, label %1170

; <label>:1165                                    ; preds = %1163
  %1166 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %base.1, i64 %1159, i32 0
  %1167 = bitcast %union.Value.217* %1166 to i32*
  %1168 = load i32, i32* %1167, align 4, !tbaa !38
  %1169 = icmp eq i32 %1168, 0
  br label %1170

; <label>:1170                                    ; preds = %1163, %1165, %1157
  %1171 = phi i1 [ true, %1157 ], [ false, %1163 ], [ %1169, %1165 ]
  %1172 = zext i1 %1171 to i32
  %1173 = bitcast %struct.lua_TValue.218* %182 to i32*
  store i32 %1172, i32* %1173, align 4, !tbaa !38
  %1174 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %base.1, i64 %181, i32 1
  store i32 1, i32* %1174, align 4, !tbaa !10
  br label %.thread232.backedge

; <label>:1175                                    ; preds = %178
  %1176 = lshr i32 %114, 23
  %1177 = zext i32 %1176 to i64
  %1178 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %base.1, i64 %1177
  %1179 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %base.1, i64 %1177, i32 1
  %1180 = load i32, i32* %1179, align 4, !tbaa !10
  switch i32 %1180, label %1196 [
    i32 5, label %1181
    i32 4, label %1188
  ]

; <label>:1181                                    ; preds = %1175
  %1182 = bitcast %struct.lua_TValue.218* %1178 to %struct.Table.208**
  %1183 = load %struct.Table.208*, %struct.Table.208** %1182, align 8, !tbaa !25
  %1184 = call i32 bitcast (i32 (%struct.Table*)* @luaH_getn to i32 (%struct.Table.208*)*)(%struct.Table.208* %1183) #1
  %1185 = sitofp i32 %1184 to double
  %1186 = bitcast %struct.lua_TValue.218* %182 to double*
  store double %1185, double* %1186, align 8, !tbaa !36
  %1187 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %base.1, i64 %181, i32 1
  store i32 3, i32* %1187, align 4, !tbaa !10
  br label %.thread232.backedge

; <label>:1188                                    ; preds = %1175
  %1189 = bitcast %struct.lua_TValue.218* %1178 to %struct.anon.209**
  %1190 = load %struct.anon.209*, %struct.anon.209** %1189, align 8, !tbaa !25
  %1191 = getelementptr inbounds %struct.anon.209, %struct.anon.209* %1190, i64 0, i32 5
  %1192 = load i64, i64* %1191, align 8, !tbaa !40
  %1193 = uitofp i64 %1192 to double
  %1194 = bitcast %struct.lua_TValue.218* %182 to double*
  store double %1193, double* %1194, align 8, !tbaa !36
  %1195 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %base.1, i64 %181, i32 1
  store i32 3, i32* %1195, align 4, !tbaa !10
  br label %.thread232.backedge

; <label>:1196                                    ; preds = %1175
  store i32* %113, i32** %1, align 8, !tbaa !131
  %1197 = call %struct.lua_TValue.218* bitcast (%struct.lua_TValue* (%struct.lua_State*, %struct.lua_TValue*, i32)* @luaT_gettmbyobj to %struct.lua_TValue.218* (%struct.lua_State.215*, %struct.lua_TValue.218*, i32)*)(%struct.lua_State.215* %L, %struct.lua_TValue.218* %1178, i32 12) #1
  %1198 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %1197, i64 0, i32 1
  %1199 = load i32, i32* %1198, align 4, !tbaa !10
  %1200 = icmp eq i32 %1199, 0
  br i1 %1200, label %1201, label %.thread.i

; <label>:1201                                    ; preds = %1196
  %1202 = call %struct.lua_TValue.218* bitcast (%struct.lua_TValue* (%struct.lua_State*, %struct.lua_TValue*, i32)* @luaT_gettmbyobj to %struct.lua_TValue.218* (%struct.lua_State.215*, %struct.lua_TValue.218*, i32)*)(%struct.lua_State.215* %L, %struct.lua_TValue.218* nonnull @luaO_nilobject_, i32 12) #1
  %.phi.trans.insert.i = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %1202, i64 0, i32 1
  %.pre.i = load i32, i32* %.phi.trans.insert.i, align 4, !tbaa !10
  %1203 = icmp eq i32 %.pre.i, 0
  br i1 %1203, label %1244, label %.thread.i

.thread.i:                                        ; preds = %1201, %1196
  %tm.01.i = phi %struct.lua_TValue.218* [ %1202, %1201 ], [ %1197, %1196 ]
  %1204 = load i64, i64* %16, align 8, !tbaa !50
  %1205 = ptrtoint %struct.lua_TValue.218* %182 to i64
  %1206 = sub i64 %1205, %1204
  %1207 = load %struct.lua_TValue.218*, %struct.lua_TValue.218** %17, align 8, !tbaa !1
  %1208 = bitcast %struct.lua_TValue.218* %tm.01.i to i64*
  %1209 = bitcast %struct.lua_TValue.218* %1207 to i64*
  %1210 = load i64, i64* %1208, align 8
  store i64 %1210, i64* %1209, align 8
  %1211 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %tm.01.i, i64 0, i32 1
  %1212 = load i32, i32* %1211, align 4, !tbaa !10
  %1213 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %1207, i64 0, i32 1
  store i32 %1212, i32* %1213, align 4, !tbaa !10
  %1214 = load %struct.lua_TValue.218*, %struct.lua_TValue.218** %17, align 8, !tbaa !1
  %1215 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %1214, i64 1
  %1216 = bitcast %struct.lua_TValue.218* %1178 to i64*
  %1217 = bitcast %struct.lua_TValue.218* %1215 to i64*
  %1218 = load i64, i64* %1216, align 8
  store i64 %1218, i64* %1217, align 8
  %1219 = load i32, i32* %1179, align 4, !tbaa !10
  %1220 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %1214, i64 1, i32 1
  store i32 %1219, i32* %1220, align 4, !tbaa !10
  %1221 = load %struct.lua_TValue.218*, %struct.lua_TValue.218** %17, align 8, !tbaa !1
  %1222 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %1221, i64 2
  %1223 = bitcast %struct.lua_TValue.218* %1222 to i64*
  store i64 %85, i64* %1223, align 8
  %1224 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %1221, i64 2, i32 1
  store i32 %86, i32* %1224, align 4, !tbaa !10
  %1225 = load i64, i64* %19, align 8, !tbaa !12
  %1226 = load i64, i64* %20, align 8, !tbaa !1
  %1227 = sub i64 %1225, %1226
  %1228 = icmp slt i64 %1227, 49
  %1229 = inttoptr i64 %1226 to %struct.lua_TValue.218*
  br i1 %1228, label %1230, label %call_binTM.exit

; <label>:1230                                    ; preds = %.thread.i
  call void bitcast (void (%struct.lua_State*, i32)* @luaD_growstack to void (%struct.lua_State.215*, i32)*)(%struct.lua_State.215* %L, i32 3) #1
  %.pre.i.108 = load %struct.lua_TValue.218*, %struct.lua_TValue.218** %17, align 8, !tbaa !1
  br label %call_binTM.exit

call_binTM.exit:                                  ; preds = %1230, %.thread.i
  %1231 = phi %struct.lua_TValue.218* [ %1229, %.thread.i ], [ %.pre.i.108, %1230 ]
  %1232 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %1231, i64 3
  store %struct.lua_TValue.218* %1232, %struct.lua_TValue.218** %17, align 8, !tbaa !1
  call void bitcast (void (%struct.lua_State*, %struct.lua_TValue*, i32)* @luaD_call to void (%struct.lua_State.215*, %struct.lua_TValue.218*, i32)*)(%struct.lua_State.215* %L, %struct.lua_TValue.218* %1231, i32 1) #1
  %1233 = load i8*, i8** %21, align 8, !tbaa !50
  %1234 = getelementptr inbounds i8, i8* %1233, i64 %1206
  %1235 = load %struct.lua_TValue.218*, %struct.lua_TValue.218** %17, align 8, !tbaa !1
  %1236 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %1235, i64 -1
  store %struct.lua_TValue.218* %1236, %struct.lua_TValue.218** %17, align 8, !tbaa !1
  %1237 = bitcast %struct.lua_TValue.218* %1236 to i64*
  %1238 = bitcast i8* %1234 to i64*
  %1239 = load i64, i64* %1237, align 8
  store i64 %1239, i64* %1238, align 8
  %1240 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %1235, i64 -1, i32 1
  %1241 = load i32, i32* %1240, align 4, !tbaa !10
  %1242 = getelementptr inbounds i8, i8* %1234, i64 8
  %1243 = bitcast i8* %1242 to i32*
  store i32 %1241, i32* %1243, align 4, !tbaa !10
  br label %1245

; <label>:1244                                    ; preds = %1201
  call void bitcast (void (%struct.lua_State*, %struct.lua_TValue*, i8*)* @luaG_typeerror to void (%struct.lua_State.215*, %struct.lua_TValue.218*, i8*)*)(%struct.lua_State.215* %L, %struct.lua_TValue.218* %1178, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.723, i64 0, i64 0)) #1
  br label %1245

; <label>:1245                                    ; preds = %call_binTM.exit, %1244
  %1246 = load %struct.lua_TValue.218*, %struct.lua_TValue.218** %3, align 8, !tbaa !11
  br label %.thread232.backedge

; <label>:1247                                    ; preds = %178
  %1248 = lshr i32 %114, 23
  %1249 = lshr i32 %114, 14
  %1250 = and i32 %1249, 511
  store i32* %113, i32** %1, align 8, !tbaa !131
  %1251 = sub nsw i32 1, %1248
  %1252 = add nsw i32 %1251, %1250
  call void @luaV_concat(%struct.lua_State.215* %L, i32 %1252, i32 %1250)
  %1253 = load %struct.global_State.211*, %struct.global_State.211** %11, align 8, !tbaa !17
  %1254 = getelementptr inbounds %struct.global_State.211, %struct.global_State.211* %1253, i64 0, i32 14
  %1255 = load i64, i64* %1254, align 8, !tbaa !23
  %1256 = getelementptr inbounds %struct.global_State.211, %struct.global_State.211* %1253, i64 0, i32 13
  %1257 = load i64, i64* %1256, align 8, !tbaa !24
  %1258 = icmp ult i64 %1255, %1257
  br i1 %1258, label %1260, label %1259

; <label>:1259                                    ; preds = %1247
  call void bitcast (void (%struct.lua_State*)* @luaC_step to void (%struct.lua_State.215*)*)(%struct.lua_State.215* %L) #1
  br label %1260

; <label>:1260                                    ; preds = %1247, %1259
  %1261 = load %struct.lua_TValue.218*, %struct.lua_TValue.218** %3, align 8, !tbaa !11
  %1262 = zext i32 %1248 to i64
  %1263 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %1261, i64 %1262
  %1264 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %1261, i64 %181
  %1265 = bitcast %struct.lua_TValue.218* %1263 to i64*
  %1266 = bitcast %struct.lua_TValue.218* %1264 to i64*
  %1267 = load i64, i64* %1265, align 8
  store i64 %1267, i64* %1266, align 8
  %1268 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %1261, i64 %1262, i32 1
  %1269 = load i32, i32* %1268, align 4, !tbaa !10
  %1270 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %1261, i64 %181, i32 1
  store i32 %1269, i32* %1270, align 4, !tbaa !10
  br label %.thread232.backedge

; <label>:1271                                    ; preds = %178
  %1272 = lshr i32 %114, 14
  %1273 = add nsw i32 %1272, -131071
  %1274 = sext i32 %1273 to i64
  %1275 = getelementptr inbounds i32, i32* %113, i64 %1274
  br label %.thread232.backedge

; <label>:1276                                    ; preds = %178
  %1277 = lshr i32 %114, 23
  %1278 = and i32 %1277, 256
  %1279 = icmp eq i32 %1278, 0
  %1280 = and i32 %1277, 255
  %1281 = zext i32 %1280 to i64
  %1282 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %110, i64 %1281
  %1283 = zext i32 %1277 to i64
  %1284 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %base.1, i64 %1283
  %1285 = select i1 %1279, %struct.lua_TValue.218* %1284, %struct.lua_TValue.218* %1282
  %1286 = lshr i32 %114, 14
  %1287 = and i32 %1286, 256
  %1288 = icmp eq i32 %1287, 0
  %1289 = and i32 %1286, 255
  %1290 = zext i32 %1289 to i64
  %1291 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %110, i64 %1290
  %1292 = and i32 %1286, 511
  %1293 = zext i32 %1292 to i64
  %1294 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %base.1, i64 %1293
  %1295 = select i1 %1288, %struct.lua_TValue.218* %1294, %struct.lua_TValue.218* %1291
  store i32* %113, i32** %1, align 8, !tbaa !131
  %1296 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %1285, i64 0, i32 1
  %1297 = load i32, i32* %1296, align 4, !tbaa !10
  %1298 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %1295, i64 0, i32 1
  %1299 = load i32, i32* %1298, align 4, !tbaa !10
  %1300 = icmp eq i32 %1297, %1299
  br i1 %1300, label %1301, label %1304

; <label>:1301                                    ; preds = %1276
  %1302 = call i32 @luaV_equalval(%struct.lua_State.215* %L, %struct.lua_TValue.218* %1285, %struct.lua_TValue.218* %1295)
  %1303 = icmp ne i32 %1302, 0
  br label %1304

; <label>:1304                                    ; preds = %1301, %1276
  %1305 = phi i1 [ false, %1276 ], [ %1303, %1301 ]
  %1306 = zext i1 %1305 to i32
  %1307 = icmp eq i32 %1306, %180
  br i1 %1307, label %1308, label %1314

; <label>:1308                                    ; preds = %1304
  %1309 = load i32, i32* %113, align 4, !tbaa !38
  %1310 = lshr i32 %1309, 14
  %1311 = add nsw i32 %1310, -131071
  %1312 = sext i32 %1311 to i64
  %1313 = getelementptr inbounds i32, i32* %113, i64 %1312
  br label %1314

; <label>:1314                                    ; preds = %1308, %1304
  %pc.2 = phi i32* [ %1313, %1308 ], [ %113, %1304 ]
  %1315 = load %struct.lua_TValue.218*, %struct.lua_TValue.218** %3, align 8, !tbaa !11
  %1316 = getelementptr inbounds i32, i32* %pc.2, i64 1
  br label %.thread232.backedge

; <label>:1317                                    ; preds = %178
  store i32* %113, i32** %1, align 8, !tbaa !131
  %1318 = lshr i32 %114, 23
  %1319 = and i32 %1318, 256
  %1320 = icmp eq i32 %1319, 0
  %1321 = and i32 %1318, 255
  %1322 = zext i32 %1321 to i64
  %1323 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %110, i64 %1322
  %1324 = zext i32 %1318 to i64
  %1325 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %base.1, i64 %1324
  %1326 = select i1 %1320, %struct.lua_TValue.218* %1325, %struct.lua_TValue.218* %1323
  %1327 = lshr i32 %114, 14
  %1328 = and i32 %1327, 256
  %1329 = icmp eq i32 %1328, 0
  %1330 = and i32 %1327, 255
  %1331 = zext i32 %1330 to i64
  %1332 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %110, i64 %1331
  %1333 = and i32 %1327, 511
  %1334 = zext i32 %1333 to i64
  %1335 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %base.1, i64 %1334
  %1336 = select i1 %1329, %struct.lua_TValue.218* %1335, %struct.lua_TValue.218* %1332
  %1337 = call i32 @luaV_lessthan(%struct.lua_State.215* %L, %struct.lua_TValue.218* %1326, %struct.lua_TValue.218* %1336)
  %1338 = icmp eq i32 %1337, %180
  br i1 %1338, label %1339, label %1345

; <label>:1339                                    ; preds = %1317
  %1340 = load i32, i32* %113, align 4, !tbaa !38
  %1341 = lshr i32 %1340, 14
  %1342 = add nsw i32 %1341, -131071
  %1343 = sext i32 %1342 to i64
  %1344 = getelementptr inbounds i32, i32* %113, i64 %1343
  br label %1345

; <label>:1345                                    ; preds = %1339, %1317
  %pc.3 = phi i32* [ %1344, %1339 ], [ %113, %1317 ]
  %1346 = load %struct.lua_TValue.218*, %struct.lua_TValue.218** %3, align 8, !tbaa !11
  %1347 = getelementptr inbounds i32, i32* %pc.3, i64 1
  br label %.thread232.backedge

; <label>:1348                                    ; preds = %178
  store i32* %113, i32** %1, align 8, !tbaa !131
  %1349 = lshr i32 %114, 23
  %1350 = and i32 %1349, 256
  %1351 = icmp eq i32 %1350, 0
  %1352 = and i32 %1349, 255
  %1353 = zext i32 %1352 to i64
  %1354 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %110, i64 %1353
  %1355 = zext i32 %1349 to i64
  %1356 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %base.1, i64 %1355
  %1357 = select i1 %1351, %struct.lua_TValue.218* %1356, %struct.lua_TValue.218* %1354
  %1358 = lshr i32 %114, 14
  %1359 = and i32 %1358, 256
  %1360 = icmp eq i32 %1359, 0
  %1361 = and i32 %1358, 255
  %1362 = zext i32 %1361 to i64
  %1363 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %110, i64 %1362
  %1364 = and i32 %1358, 511
  %1365 = zext i32 %1364 to i64
  %1366 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %base.1, i64 %1365
  %1367 = select i1 %1360, %struct.lua_TValue.218* %1366, %struct.lua_TValue.218* %1363
  %1368 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %1357, i64 0, i32 1
  %1369 = load i32, i32* %1368, align 4, !tbaa !10
  %1370 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %1367, i64 0, i32 1
  %1371 = load i32, i32* %1370, align 4, !tbaa !10
  %1372 = icmp eq i32 %1369, %1371
  br i1 %1372, label %1375, label %1373

; <label>:1373                                    ; preds = %1348
  %1374 = call i32 bitcast (i32 (%struct.lua_State*, %struct.lua_TValue*, %struct.lua_TValue*)* @luaG_ordererror to i32 (%struct.lua_State.215*, %struct.lua_TValue.218*, %struct.lua_TValue.218*)*)(%struct.lua_State.215* %L, %struct.lua_TValue.218* %1357, %struct.lua_TValue.218* %1367) #1
  br label %lessequal.exit

; <label>:1375                                    ; preds = %1348
  switch i32 %1369, label %1416 [
    i32 3, label %1376
    i32 4, label %1383
  ]

; <label>:1376                                    ; preds = %1375
  %1377 = bitcast %struct.lua_TValue.218* %1357 to double*
  %1378 = load double, double* %1377, align 8, !tbaa !36
  %1379 = bitcast %struct.lua_TValue.218* %1367 to double*
  %1380 = load double, double* %1379, align 8, !tbaa !36
  %1381 = fcmp ole double %1378, %1380
  %1382 = zext i1 %1381 to i32
  br label %lessequal.exit

; <label>:1383                                    ; preds = %1375
  %1384 = bitcast %struct.lua_TValue.218* %1357 to %union.TString.210**
  %1385 = load %union.TString.210*, %union.TString.210** %1384, align 8, !tbaa !25
  %1386 = bitcast %struct.lua_TValue.218* %1367 to %union.TString.210**
  %1387 = load %union.TString.210*, %union.TString.210** %1386, align 8, !tbaa !25
  %1388 = getelementptr inbounds %union.TString.210, %union.TString.210* %1385, i64 1
  %1389 = bitcast %union.TString.210* %1388 to i8*
  %1390 = getelementptr inbounds %union.TString.210, %union.TString.210* %1387, i64 1
  %1391 = bitcast %union.TString.210* %1390 to i8*
  %1392 = call i32 @strcoll(i8* %1389, i8* %1391) #11
  %1393 = icmp eq i32 %1392, 0
  br i1 %1393, label %.lr.ph.i.i, label %l_strcmp.exit.i

.lr.ph.i.i:                                       ; preds = %1383
  %1394 = getelementptr inbounds %union.TString.210, %union.TString.210* %1387, i64 0, i32 0, i32 5
  %1395 = load i64, i64* %1394, align 8, !tbaa !40
  %1396 = getelementptr inbounds %union.TString.210, %union.TString.210* %1385, i64 0, i32 0, i32 5
  %1397 = load i64, i64* %1396, align 8, !tbaa !40
  br label %1398

; <label>:1398                                    ; preds = %1406, %.lr.ph.i.i
  %lr.013.i.i = phi i64 [ %1395, %.lr.ph.i.i ], [ %1411, %1406 ]
  %r.012.i.i = phi i8* [ %1391, %.lr.ph.i.i ], [ %1410, %1406 ]
  %ll.011.i.i = phi i64 [ %1397, %.lr.ph.i.i ], [ %1409, %1406 ]
  %l.010.i.i = phi i8* [ %1389, %.lr.ph.i.i ], [ %1408, %1406 ]
  %1399 = call i64 @strlen(i8* %l.010.i.i) #11
  %1400 = icmp eq i64 %1399, %lr.013.i.i
  %1401 = icmp eq i64 %1399, %ll.011.i.i
  br i1 %1400, label %1402, label %1405

; <label>:1402                                    ; preds = %1398
  %.lcssa = phi i1 [ %1401, %1398 ]
  %1403 = zext i1 %.lcssa to i32
  %1404 = xor i32 %1403, 1
  br label %l_strcmp.exit.i

; <label>:1405                                    ; preds = %1398
  br i1 %1401, label %l_strcmp.exit.i.loopexit, label %1406

; <label>:1406                                    ; preds = %1405
  %1407 = add i64 %1399, 1
  %1408 = getelementptr inbounds i8, i8* %l.010.i.i, i64 %1407
  %1409 = sub i64 %ll.011.i.i, %1407
  %1410 = getelementptr inbounds i8, i8* %r.012.i.i, i64 %1407
  %1411 = sub i64 %lr.013.i.i, %1407
  %1412 = call i32 @strcoll(i8* %1408, i8* %1410) #11
  %1413 = icmp eq i32 %1412, 0
  br i1 %1413, label %1398, label %l_strcmp.exit.i.loopexit

l_strcmp.exit.i.loopexit:                         ; preds = %1405, %1406
  %.26.i.i.ph = phi i32 [ -1, %1405 ], [ %1412, %1406 ]
  br label %l_strcmp.exit.i

l_strcmp.exit.i:                                  ; preds = %l_strcmp.exit.i.loopexit, %1402, %1383
  %.26.i.i = phi i32 [ %1404, %1402 ], [ %1392, %1383 ], [ %.26.i.i.ph, %l_strcmp.exit.i.loopexit ]
  %1414 = icmp slt i32 %.26.i.i, 1
  %1415 = zext i1 %1414 to i32
  br label %lessequal.exit

; <label>:1416                                    ; preds = %1375
  %1417 = call %struct.lua_TValue.218* bitcast (%struct.lua_TValue* (%struct.lua_State*, %struct.lua_TValue*, i32)* @luaT_gettmbyobj to %struct.lua_TValue.218* (%struct.lua_State.215*, %struct.lua_TValue.218*, i32)*)(%struct.lua_State.215* %L, %struct.lua_TValue.218* %1357, i32 14) #1
  %1418 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %1417, i64 0, i32 1
  %1419 = load i32, i32* %1418, align 4, !tbaa !10
  %1420 = icmp eq i32 %1419, 0
  br i1 %1420, label %call_orderTM.exit.thread.i, label %1421

; <label>:1421                                    ; preds = %1416
  %1422 = call %struct.lua_TValue.218* bitcast (%struct.lua_TValue* (%struct.lua_State*, %struct.lua_TValue*, i32)* @luaT_gettmbyobj to %struct.lua_TValue.218* (%struct.lua_State.215*, %struct.lua_TValue.218*, i32)*)(%struct.lua_State.215* %L, %struct.lua_TValue.218* %1367, i32 14) #1
  %1423 = call i32 @luaO_rawequalObj(%struct.lua_TValue.218* %1417, %struct.lua_TValue.218* %1422) #1
  %1424 = icmp eq i32 %1423, 0
  br i1 %1424, label %call_orderTM.exit.thread.i, label %1425

; <label>:1425                                    ; preds = %1421
  %1426 = load %struct.lua_TValue.218*, %struct.lua_TValue.218** %17, align 8, !tbaa !1
  %1427 = load i64, i64* %16, align 8, !tbaa !50
  %1428 = ptrtoint %struct.lua_TValue.218* %1426 to i64
  %1429 = sub i64 %1428, %1427
  %1430 = bitcast %struct.lua_TValue.218* %1417 to i64*
  %1431 = bitcast %struct.lua_TValue.218* %1426 to i64*
  %1432 = load i64, i64* %1430, align 8
  store i64 %1432, i64* %1431, align 8
  %1433 = load i32, i32* %1418, align 4, !tbaa !10
  %1434 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %1426, i64 0, i32 1
  store i32 %1433, i32* %1434, align 4, !tbaa !10
  %1435 = load %struct.lua_TValue.218*, %struct.lua_TValue.218** %17, align 8, !tbaa !1
  %1436 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %1435, i64 1
  %1437 = bitcast %struct.lua_TValue.218* %1357 to i64*
  %1438 = bitcast %struct.lua_TValue.218* %1436 to i64*
  %1439 = load i64, i64* %1437, align 8
  store i64 %1439, i64* %1438, align 8
  %1440 = load i32, i32* %1368, align 4, !tbaa !10
  %1441 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %1435, i64 1, i32 1
  store i32 %1440, i32* %1441, align 4, !tbaa !10
  %1442 = load %struct.lua_TValue.218*, %struct.lua_TValue.218** %17, align 8, !tbaa !1
  %1443 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %1442, i64 2
  %1444 = bitcast %struct.lua_TValue.218* %1367 to i64*
  %1445 = bitcast %struct.lua_TValue.218* %1443 to i64*
  %1446 = load i64, i64* %1444, align 8
  store i64 %1446, i64* %1445, align 8
  %1447 = load i32, i32* %1370, align 4, !tbaa !10
  %1448 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %1442, i64 2, i32 1
  store i32 %1447, i32* %1448, align 4, !tbaa !10
  %1449 = load i64, i64* %19, align 8, !tbaa !12
  %1450 = load i64, i64* %20, align 8, !tbaa !1
  %1451 = sub i64 %1449, %1450
  %1452 = icmp slt i64 %1451, 49
  %1453 = inttoptr i64 %1450 to %struct.lua_TValue.218*
  br i1 %1452, label %1454, label %callTMres.exit.i

; <label>:1454                                    ; preds = %1425
  call void bitcast (void (%struct.lua_State*, i32)* @luaD_growstack to void (%struct.lua_State.215*, i32)*)(%struct.lua_State.215* %L, i32 3) #1
  %.pre.i.i = load %struct.lua_TValue.218*, %struct.lua_TValue.218** %17, align 8, !tbaa !1
  br label %callTMres.exit.i

callTMres.exit.i:                                 ; preds = %1454, %1425
  %1455 = phi %struct.lua_TValue.218* [ %1453, %1425 ], [ %.pre.i.i, %1454 ]
  %1456 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %1455, i64 3
  store %struct.lua_TValue.218* %1456, %struct.lua_TValue.218** %17, align 8, !tbaa !1
  call void bitcast (void (%struct.lua_State*, %struct.lua_TValue*, i32)* @luaD_call to void (%struct.lua_State.215*, %struct.lua_TValue.218*, i32)*)(%struct.lua_State.215* %L, %struct.lua_TValue.218* %1455, i32 1) #1
  %1457 = load i8*, i8** %21, align 8, !tbaa !50
  %1458 = getelementptr inbounds i8, i8* %1457, i64 %1429
  %1459 = load %struct.lua_TValue.218*, %struct.lua_TValue.218** %17, align 8, !tbaa !1
  %1460 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %1459, i64 -1
  store %struct.lua_TValue.218* %1460, %struct.lua_TValue.218** %17, align 8, !tbaa !1
  %1461 = bitcast %struct.lua_TValue.218* %1460 to i64*
  %1462 = bitcast i8* %1458 to i64*
  %1463 = load i64, i64* %1461, align 8
  store i64 %1463, i64* %1462, align 8
  %1464 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %1459, i64 -1, i32 1
  %1465 = load i32, i32* %1464, align 4, !tbaa !10
  %1466 = getelementptr inbounds i8, i8* %1458, i64 8
  %1467 = bitcast i8* %1466 to i32*
  store i32 %1465, i32* %1467, align 4, !tbaa !10
  %1468 = load %struct.lua_TValue.218*, %struct.lua_TValue.218** %17, align 8, !tbaa !1
  %1469 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %1468, i64 0, i32 1
  %1470 = load i32, i32* %1469, align 4, !tbaa !10
  %1471 = icmp eq i32 %1470, 0
  br i1 %1471, label %call_orderTM.exit.i, label %1472

; <label>:1472                                    ; preds = %callTMres.exit.i
  %1473 = icmp eq i32 %1470, 1
  br i1 %1473, label %1474, label %call_orderTM.exit.i

; <label>:1474                                    ; preds = %1472
  %1475 = bitcast %struct.lua_TValue.218* %1468 to i32*
  %1476 = load i32, i32* %1475, align 4, !tbaa !38
  %phitmp.i.i = icmp ne i32 %1476, 0
  br label %call_orderTM.exit.i

call_orderTM.exit.i:                              ; preds = %1474, %1472, %callTMres.exit.i
  %1477 = phi i1 [ false, %callTMres.exit.i ], [ true, %1472 ], [ %phitmp.i.i, %1474 ]
  %1478 = zext i1 %1477 to i32
  br label %lessequal.exit

call_orderTM.exit.thread.i:                       ; preds = %1421, %1416
  %1479 = call %struct.lua_TValue.218* bitcast (%struct.lua_TValue* (%struct.lua_State*, %struct.lua_TValue*, i32)* @luaT_gettmbyobj to %struct.lua_TValue.218* (%struct.lua_State.215*, %struct.lua_TValue.218*, i32)*)(%struct.lua_State.215* %L, %struct.lua_TValue.218* %1367, i32 13) #1
  %1480 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %1479, i64 0, i32 1
  %1481 = load i32, i32* %1480, align 4, !tbaa !10
  %1482 = icmp eq i32 %1481, 0
  br i1 %1482, label %call_orderTM.exit3.thread.i, label %1483

; <label>:1483                                    ; preds = %call_orderTM.exit.thread.i
  %1484 = call %struct.lua_TValue.218* bitcast (%struct.lua_TValue* (%struct.lua_State*, %struct.lua_TValue*, i32)* @luaT_gettmbyobj to %struct.lua_TValue.218* (%struct.lua_State.215*, %struct.lua_TValue.218*, i32)*)(%struct.lua_State.215* %L, %struct.lua_TValue.218* %1357, i32 13) #1
  %1485 = call i32 @luaO_rawequalObj(%struct.lua_TValue.218* %1479, %struct.lua_TValue.218* %1484) #1
  %1486 = icmp eq i32 %1485, 0
  br i1 %1486, label %call_orderTM.exit3.thread.i, label %1487

; <label>:1487                                    ; preds = %1483
  %1488 = load %struct.lua_TValue.218*, %struct.lua_TValue.218** %17, align 8, !tbaa !1
  %1489 = load i64, i64* %16, align 8, !tbaa !50
  %1490 = ptrtoint %struct.lua_TValue.218* %1488 to i64
  %1491 = sub i64 %1490, %1489
  %1492 = bitcast %struct.lua_TValue.218* %1479 to i64*
  %1493 = bitcast %struct.lua_TValue.218* %1488 to i64*
  %1494 = load i64, i64* %1492, align 8
  store i64 %1494, i64* %1493, align 8
  %1495 = load i32, i32* %1480, align 4, !tbaa !10
  %1496 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %1488, i64 0, i32 1
  store i32 %1495, i32* %1496, align 4, !tbaa !10
  %1497 = load %struct.lua_TValue.218*, %struct.lua_TValue.218** %17, align 8, !tbaa !1
  %1498 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %1497, i64 1
  %1499 = bitcast %struct.lua_TValue.218* %1367 to i64*
  %1500 = bitcast %struct.lua_TValue.218* %1498 to i64*
  %1501 = load i64, i64* %1499, align 8
  store i64 %1501, i64* %1500, align 8
  %1502 = load i32, i32* %1370, align 4, !tbaa !10
  %1503 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %1497, i64 1, i32 1
  store i32 %1502, i32* %1503, align 4, !tbaa !10
  %1504 = load %struct.lua_TValue.218*, %struct.lua_TValue.218** %17, align 8, !tbaa !1
  %1505 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %1504, i64 2
  %1506 = bitcast %struct.lua_TValue.218* %1357 to i64*
  %1507 = bitcast %struct.lua_TValue.218* %1505 to i64*
  %1508 = load i64, i64* %1506, align 8
  store i64 %1508, i64* %1507, align 8
  %1509 = load i32, i32* %1368, align 4, !tbaa !10
  %1510 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %1504, i64 2, i32 1
  store i32 %1509, i32* %1510, align 4, !tbaa !10
  %1511 = load i64, i64* %19, align 8, !tbaa !12
  %1512 = load i64, i64* %20, align 8, !tbaa !1
  %1513 = sub i64 %1511, %1512
  %1514 = icmp slt i64 %1513, 49
  %1515 = inttoptr i64 %1512 to %struct.lua_TValue.218*
  br i1 %1514, label %1516, label %callTMres.exit5.i

; <label>:1516                                    ; preds = %1487
  call void bitcast (void (%struct.lua_State*, i32)* @luaD_growstack to void (%struct.lua_State.215*, i32)*)(%struct.lua_State.215* %L, i32 3) #1
  %.pre.i.4.i = load %struct.lua_TValue.218*, %struct.lua_TValue.218** %17, align 8, !tbaa !1
  br label %callTMres.exit5.i

callTMres.exit5.i:                                ; preds = %1516, %1487
  %1517 = phi %struct.lua_TValue.218* [ %1515, %1487 ], [ %.pre.i.4.i, %1516 ]
  %1518 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %1517, i64 3
  store %struct.lua_TValue.218* %1518, %struct.lua_TValue.218** %17, align 8, !tbaa !1
  call void bitcast (void (%struct.lua_State*, %struct.lua_TValue*, i32)* @luaD_call to void (%struct.lua_State.215*, %struct.lua_TValue.218*, i32)*)(%struct.lua_State.215* %L, %struct.lua_TValue.218* %1517, i32 1) #1
  %1519 = load i8*, i8** %21, align 8, !tbaa !50
  %1520 = getelementptr inbounds i8, i8* %1519, i64 %1491
  %1521 = load %struct.lua_TValue.218*, %struct.lua_TValue.218** %17, align 8, !tbaa !1
  %1522 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %1521, i64 -1
  store %struct.lua_TValue.218* %1522, %struct.lua_TValue.218** %17, align 8, !tbaa !1
  %1523 = bitcast %struct.lua_TValue.218* %1522 to i64*
  %1524 = bitcast i8* %1520 to i64*
  %1525 = load i64, i64* %1523, align 8
  store i64 %1525, i64* %1524, align 8
  %1526 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %1521, i64 -1, i32 1
  %1527 = load i32, i32* %1526, align 4, !tbaa !10
  %1528 = getelementptr inbounds i8, i8* %1520, i64 8
  %1529 = bitcast i8* %1528 to i32*
  store i32 %1527, i32* %1529, align 4, !tbaa !10
  %1530 = load %struct.lua_TValue.218*, %struct.lua_TValue.218** %17, align 8, !tbaa !1
  %1531 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %1530, i64 0, i32 1
  %1532 = load i32, i32* %1531, align 4, !tbaa !10
  %1533 = icmp eq i32 %1532, 0
  br i1 %1533, label %call_orderTM.exit3.i, label %1534

; <label>:1534                                    ; preds = %callTMres.exit5.i
  %1535 = icmp eq i32 %1532, 1
  br i1 %1535, label %1536, label %call_orderTM.exit3.i

; <label>:1536                                    ; preds = %1534
  %1537 = bitcast %struct.lua_TValue.218* %1530 to i32*
  %1538 = load i32, i32* %1537, align 4, !tbaa !38
  %phitmp.i.1.i = icmp ne i32 %1538, 0
  br label %call_orderTM.exit3.i

call_orderTM.exit3.i:                             ; preds = %1536, %1534, %callTMres.exit5.i
  %1539 = phi i1 [ false, %callTMres.exit5.i ], [ true, %1534 ], [ %phitmp.i.1.i, %1536 ]
  %1540 = zext i1 %1539 to i32
  %1541 = xor i32 %1540, 1
  br label %lessequal.exit

call_orderTM.exit3.thread.i:                      ; preds = %1483, %call_orderTM.exit.thread.i
  %1542 = call i32 bitcast (i32 (%struct.lua_State*, %struct.lua_TValue*, %struct.lua_TValue*)* @luaG_ordererror to i32 (%struct.lua_State.215*, %struct.lua_TValue.218*, %struct.lua_TValue.218*)*)(%struct.lua_State.215* %L, %struct.lua_TValue.218* %1357, %struct.lua_TValue.218* %1367) #1
  br label %lessequal.exit

lessequal.exit:                                   ; preds = %1373, %1376, %l_strcmp.exit.i, %call_orderTM.exit.i, %call_orderTM.exit3.i, %call_orderTM.exit3.thread.i
  %.0.i.109 = phi i32 [ %1374, %1373 ], [ %1382, %1376 ], [ %1415, %l_strcmp.exit.i ], [ %1541, %call_orderTM.exit3.i ], [ %1542, %call_orderTM.exit3.thread.i ], [ %1478, %call_orderTM.exit.i ]
  %1543 = icmp eq i32 %.0.i.109, %180
  br i1 %1543, label %1544, label %1550

; <label>:1544                                    ; preds = %lessequal.exit
  %1545 = load i32, i32* %113, align 4, !tbaa !38
  %1546 = lshr i32 %1545, 14
  %1547 = add nsw i32 %1546, -131071
  %1548 = sext i32 %1547 to i64
  %1549 = getelementptr inbounds i32, i32* %113, i64 %1548
  br label %1550

; <label>:1550                                    ; preds = %1544, %lessequal.exit
  %pc.4 = phi i32* [ %1549, %1544 ], [ %113, %lessequal.exit ]
  %1551 = load %struct.lua_TValue.218*, %struct.lua_TValue.218** %3, align 8, !tbaa !11
  %1552 = getelementptr inbounds i32, i32* %pc.4, i64 1
  br label %.thread232.backedge

; <label>:1553                                    ; preds = %178
  %1554 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %base.1, i64 %181, i32 1
  %1555 = load i32, i32* %1554, align 4, !tbaa !10
  %1556 = icmp eq i32 %1555, 0
  br i1 %1556, label %1563, label %1557

; <label>:1557                                    ; preds = %1553
  %1558 = icmp eq i32 %1555, 1
  br i1 %1558, label %1559, label %1563

; <label>:1559                                    ; preds = %1557
  %1560 = bitcast %struct.lua_TValue.218* %182 to i32*
  %1561 = load i32, i32* %1560, align 4, !tbaa !38
  %1562 = icmp eq i32 %1561, 0
  br label %1563

; <label>:1563                                    ; preds = %1557, %1559, %1553
  %1564 = phi i1 [ true, %1553 ], [ false, %1557 ], [ %1562, %1559 ]
  %1565 = zext i1 %1564 to i32
  %1566 = lshr i32 %114, 14
  %1567 = and i32 %1566, 511
  %1568 = icmp eq i32 %1565, %1567
  br i1 %1568, label %1575, label %1569

; <label>:1569                                    ; preds = %1563
  %1570 = load i32, i32* %113, align 4, !tbaa !38
  %1571 = lshr i32 %1570, 14
  %1572 = add nsw i32 %1571, -131071
  %1573 = sext i32 %1572 to i64
  %1574 = getelementptr inbounds i32, i32* %113, i64 %1573
  br label %1575

; <label>:1575                                    ; preds = %1563, %1569
  %pc.5 = phi i32* [ %1574, %1569 ], [ %113, %1563 ]
  %1576 = getelementptr inbounds i32, i32* %pc.5, i64 1
  br label %.thread232.backedge

; <label>:1577                                    ; preds = %178
  %1578 = lshr i32 %114, 23
  %1579 = zext i32 %1578 to i64
  %1580 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %base.1, i64 %1579
  %1581 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %base.1, i64 %1579, i32 1
  %1582 = load i32, i32* %1581, align 4, !tbaa !10
  %1583 = icmp eq i32 %1582, 0
  br i1 %1583, label %1590, label %1584

; <label>:1584                                    ; preds = %1577
  %1585 = icmp eq i32 %1582, 1
  br i1 %1585, label %1586, label %1590

; <label>:1586                                    ; preds = %1584
  %1587 = bitcast %struct.lua_TValue.218* %1580 to i32*
  %1588 = load i32, i32* %1587, align 4, !tbaa !38
  %1589 = icmp eq i32 %1588, 0
  br label %1590

; <label>:1590                                    ; preds = %1584, %1586, %1577
  %1591 = phi i1 [ true, %1577 ], [ false, %1584 ], [ %1589, %1586 ]
  %1592 = zext i1 %1591 to i32
  %1593 = lshr i32 %114, 14
  %1594 = and i32 %1593, 511
  %1595 = icmp eq i32 %1592, %1594
  br i1 %1595, label %1606, label %1596

; <label>:1596                                    ; preds = %1590
  %1597 = bitcast %struct.lua_TValue.218* %1580 to i64*
  %1598 = bitcast %struct.lua_TValue.218* %182 to i64*
  %1599 = load i64, i64* %1597, align 8
  store i64 %1599, i64* %1598, align 8
  %1600 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %base.1, i64 %181, i32 1
  store i32 %1582, i32* %1600, align 4, !tbaa !10
  %1601 = load i32, i32* %113, align 4, !tbaa !38
  %1602 = lshr i32 %1601, 14
  %1603 = add nsw i32 %1602, -131071
  %1604 = sext i32 %1603 to i64
  %1605 = getelementptr inbounds i32, i32* %113, i64 %1604
  br label %1606

; <label>:1606                                    ; preds = %1590, %1596
  %pc.6 = phi i32* [ %1605, %1596 ], [ %113, %1590 ]
  %1607 = getelementptr inbounds i32, i32* %pc.6, i64 1
  br label %.thread232.backedge

; <label>:1608                                    ; preds = %178
  %1609 = lshr i32 %114, 23
  %1610 = lshr i32 %114, 14
  %1611 = and i32 %1610, 511
  %1612 = add nsw i32 %1611, -1
  %1613 = icmp eq i32 %1609, 0
  br i1 %1613, label %1617, label %1614

; <label>:1614                                    ; preds = %1608
  %1615 = zext i32 %1609 to i64
  %1616 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %182, i64 %1615
  store %struct.lua_TValue.218* %1616, %struct.lua_TValue.218** %17, align 8, !tbaa !1
  br label %1617

; <label>:1617                                    ; preds = %1608, %1614
  store i32* %113, i32** %1, align 8, !tbaa !131
  %1618 = call i32 bitcast (i32 (%struct.lua_State*, %struct.lua_TValue*, i32)* @luaD_precall to i32 (%struct.lua_State.215*, %struct.lua_TValue.218*, i32)*)(%struct.lua_State.215* %L, %struct.lua_TValue.218* %182, i32 %1612) #1
  switch i32 %1618, label %.loopexit.loopexit [
    i32 0, label %1619
    i32 1, label %1621
  ]

; <label>:1619                                    ; preds = %1617
  %1620 = add nsw i32 %.0.ph, 1
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %1619, %1698, %1696
  %.0.ph.be = phi i32 [ %1694, %1696 ], [ %1694, %1698 ], [ %1620, %1619 ]
  br label %.outer

; <label>:1621                                    ; preds = %1617
  %1622 = icmp eq i32 %1611, 0
  br i1 %1622, label %1628, label %1623

; <label>:1623                                    ; preds = %1621
  %1624 = load %struct.CallInfo.212*, %struct.CallInfo.212** %2, align 8, !tbaa !13
  %1625 = getelementptr inbounds %struct.CallInfo.212, %struct.CallInfo.212* %1624, i64 0, i32 2
  %1626 = bitcast %struct.lua_TValue.218** %1625 to i64*
  %1627 = load i64, i64* %1626, align 8, !tbaa !14
  store i64 %1627, i64* %20, align 8, !tbaa !1
  br label %1628

; <label>:1628                                    ; preds = %1621, %1623
  %1629 = load %struct.lua_TValue.218*, %struct.lua_TValue.218** %3, align 8, !tbaa !11
  br label %.thread232.backedge

; <label>:1630                                    ; preds = %178
  %1631 = lshr i32 %114, 23
  %1632 = icmp eq i32 %1631, 0
  br i1 %1632, label %1636, label %1633

; <label>:1633                                    ; preds = %1630
  %1634 = zext i32 %1631 to i64
  %1635 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %182, i64 %1634
  store %struct.lua_TValue.218* %1635, %struct.lua_TValue.218** %17, align 8, !tbaa !1
  br label %1636

; <label>:1636                                    ; preds = %1630, %1633
  store i32* %113, i32** %1, align 8, !tbaa !131
  %1637 = call i32 bitcast (i32 (%struct.lua_State*, %struct.lua_TValue*, i32)* @luaD_precall to i32 (%struct.lua_State.215*, %struct.lua_TValue.218*, i32)*)(%struct.lua_State.215* %L, %struct.lua_TValue.218* %182, i32 -1) #1
  switch i32 %1637, label %.loopexit.loopexit [
    i32 0, label %1638
    i32 1, label %1679
  ]

; <label>:1638                                    ; preds = %1636
  %1639 = load %struct.CallInfo.212*, %struct.CallInfo.212** %2, align 8, !tbaa !13
  %1640 = getelementptr inbounds %struct.CallInfo.212, %struct.CallInfo.212* %1639, i64 -1, i32 1
  %1641 = load %struct.lua_TValue.218*, %struct.lua_TValue.218** %1640, align 8, !tbaa !28
  %1642 = getelementptr inbounds %struct.CallInfo.212, %struct.CallInfo.212* %1639, i64 0, i32 1
  %1643 = load %struct.lua_TValue.218*, %struct.lua_TValue.218** %1642, align 8, !tbaa !28
  %1644 = load %union.GCObject.216*, %union.GCObject.216** %96, align 8, !tbaa !186
  %1645 = icmp eq %union.GCObject.216* %1644, null
  %.pre333 = getelementptr inbounds %struct.CallInfo.212, %struct.CallInfo.212* %1639, i64 -1, i32 0
  br i1 %1645, label %._crit_edge.332, label %1646

; <label>:1646                                    ; preds = %1638
  %1647 = load %struct.lua_TValue.218*, %struct.lua_TValue.218** %.pre333, align 8, !tbaa !132
  call void bitcast (void (%struct.lua_State.115*, %struct.lua_TValue.101*)* @luaF_close to void (%struct.lua_State.215*, %struct.lua_TValue.218*)*)(%struct.lua_State.215* %L, %struct.lua_TValue.218* %1647) #1
  %.pre331 = load %struct.lua_TValue.218*, %struct.lua_TValue.218** %1640, align 8, !tbaa !28
  br label %._crit_edge.332

._crit_edge.332:                                  ; preds = %1638, %1646
  %1648 = phi %struct.lua_TValue.218* [ %.pre331, %1646 ], [ %1641, %1638 ]
  %1649 = bitcast %struct.CallInfo.212* %1639 to i64*
  %1650 = load i64, i64* %1649, align 8, !tbaa !132
  %1651 = ptrtoint %struct.lua_TValue.218* %1643 to i64
  %1652 = sub i64 %1650, %1651
  %1653 = ashr exact i64 %1652, 4
  %1654 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %1648, i64 %1653
  store %struct.lua_TValue.218* %1654, %struct.lua_TValue.218** %.pre333, align 8, !tbaa !132
  store %struct.lua_TValue.218* %1654, %struct.lua_TValue.218** %3, align 8, !tbaa !11
  %1655 = load %struct.lua_TValue.218*, %struct.lua_TValue.218** %17, align 8, !tbaa !1
  %1656 = icmp ult %struct.lua_TValue.218* %1643, %1655
  br i1 %1656, label %.lr.ph288.preheader, label %._crit_edge.289

.lr.ph288.preheader:                              ; preds = %._crit_edge.332
  br label %.lr.ph288

.lr.ph288:                                        ; preds = %.lr.ph288.preheader, %.lr.ph288
  %indvars.iv328 = phi i64 [ %indvars.iv.next329, %.lr.ph288 ], [ 0, %.lr.ph288.preheader ]
  %1657 = phi %struct.lua_TValue.218* [ %1668, %.lr.ph288 ], [ %1641, %.lr.ph288.preheader ]
  %1658 = phi %struct.lua_TValue.218* [ %1665, %.lr.ph288 ], [ %1643, %.lr.ph288.preheader ]
  %1659 = bitcast %struct.lua_TValue.218* %1658 to i64*
  %1660 = bitcast %struct.lua_TValue.218* %1657 to i64*
  %1661 = load i64, i64* %1659, align 8
  store i64 %1661, i64* %1660, align 8
  %1662 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %1643, i64 %indvars.iv328, i32 1
  %1663 = load i32, i32* %1662, align 4, !tbaa !10
  %1664 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %1641, i64 %indvars.iv328, i32 1
  store i32 %1663, i32* %1664, align 4, !tbaa !10
  %indvars.iv.next329 = add nuw nsw i64 %indvars.iv328, 1
  %1665 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %1643, i64 %indvars.iv.next329
  %1666 = load %struct.lua_TValue.218*, %struct.lua_TValue.218** %17, align 8, !tbaa !1
  %1667 = icmp ult %struct.lua_TValue.218* %1665, %1666
  %1668 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %1641, i64 %indvars.iv.next329
  br i1 %1667, label %.lr.ph288, label %._crit_edge.289.loopexit

._crit_edge.289.loopexit:                         ; preds = %.lr.ph288
  %.lcssa470 = phi %struct.lua_TValue.218* [ %1668, %.lr.ph288 ]
  br label %._crit_edge.289

._crit_edge.289:                                  ; preds = %._crit_edge.289.loopexit, %._crit_edge.332
  %.lcssa268 = phi %struct.lua_TValue.218* [ %1641, %._crit_edge.332 ], [ %.lcssa470, %._crit_edge.289.loopexit ]
  store %struct.lua_TValue.218* %.lcssa268, %struct.lua_TValue.218** %17, align 8, !tbaa !1
  %1669 = getelementptr inbounds %struct.CallInfo.212, %struct.CallInfo.212* %1639, i64 -1, i32 2
  store %struct.lua_TValue.218* %.lcssa268, %struct.lua_TValue.218** %1669, align 8, !tbaa !14
  %1670 = load i64, i64* %97, align 8, !tbaa !131
  %1671 = getelementptr inbounds %struct.CallInfo.212, %struct.CallInfo.212* %1639, i64 -1, i32 3
  %1672 = bitcast i32** %1671 to i64*
  store i64 %1670, i64* %1672, align 8, !tbaa !130
  %1673 = getelementptr inbounds %struct.CallInfo.212, %struct.CallInfo.212* %1639, i64 -1, i32 5
  %1674 = load i32, i32* %1673, align 4, !tbaa !128
  %1675 = add nsw i32 %1674, 1
  store i32 %1675, i32* %1673, align 4, !tbaa !128
  %1676 = load %struct.CallInfo.212*, %struct.CallInfo.212** %2, align 8, !tbaa !13
  %1677 = getelementptr inbounds %struct.CallInfo.212, %struct.CallInfo.212* %1676, i64 -1
  store %struct.CallInfo.212* %1677, %struct.CallInfo.212** %2, align 8, !tbaa !13
  %1678 = inttoptr i64 %1670 to i32*
  br label %99

; <label>:1679                                    ; preds = %1636
  %1680 = load %struct.lua_TValue.218*, %struct.lua_TValue.218** %3, align 8, !tbaa !11
  br label %.thread232.backedge

; <label>:1681                                    ; preds = %178
  %.lcssa465 = phi %struct.lua_TValue.218* [ %182, %178 ]
  %base.1.lcssa = phi %struct.lua_TValue.218* [ %base.1, %178 ]
  %.lcssa456 = phi i32 [ %114, %178 ]
  %.lcssa450 = phi i32* [ %113, %178 ]
  %1682 = lshr i32 %.lcssa456, 23
  %1683 = icmp eq i32 %1682, 0
  br i1 %1683, label %1688, label %1684

; <label>:1684                                    ; preds = %1681
  %1685 = zext i32 %1682 to i64
  %1686 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %.lcssa465, i64 %1685
  %1687 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %1686, i64 -1
  store %struct.lua_TValue.218* %1687, %struct.lua_TValue.218** %17, align 8, !tbaa !1
  br label %1688

; <label>:1688                                    ; preds = %1681, %1684
  %1689 = load %union.GCObject.216*, %union.GCObject.216** %96, align 8, !tbaa !186
  %1690 = icmp eq %union.GCObject.216* %1689, null
  br i1 %1690, label %1692, label %1691

; <label>:1691                                    ; preds = %1688
  call void bitcast (void (%struct.lua_State.115*, %struct.lua_TValue.101*)* @luaF_close to void (%struct.lua_State.215*, %struct.lua_TValue.218*)*)(%struct.lua_State.215* %L, %struct.lua_TValue.218* %base.1.lcssa) #1
  br label %1692

; <label>:1692                                    ; preds = %1688, %1691
  store i32* %.lcssa450, i32** %1, align 8, !tbaa !131
  %1693 = call i32 bitcast (i32 (%struct.lua_State*, %struct.lua_TValue*)* @luaD_poscall to i32 (%struct.lua_State.215*, %struct.lua_TValue.218*)*)(%struct.lua_State.215* %L, %struct.lua_TValue.218* %.lcssa465) #1
  %1694 = add nsw i32 %.0.ph, -1
  %1695 = icmp eq i32 %1694, 0
  br i1 %1695, label %.loopexit.loopexit414, label %1696

; <label>:1696                                    ; preds = %1692
  %1697 = icmp eq i32 %1693, 0
  br i1 %1697, label %.outer.backedge, label %1698

; <label>:1698                                    ; preds = %1696
  %1699 = load %struct.CallInfo.212*, %struct.CallInfo.212** %2, align 8, !tbaa !13
  %1700 = getelementptr inbounds %struct.CallInfo.212, %struct.CallInfo.212* %1699, i64 0, i32 2
  %1701 = bitcast %struct.lua_TValue.218** %1700 to i64*
  %1702 = load i64, i64* %1701, align 8, !tbaa !14
  store i64 %1702, i64* %20, align 8, !tbaa !1
  br label %.outer.backedge

; <label>:1703                                    ; preds = %178
  %1704 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %182, i64 2
  %1705 = bitcast %struct.lua_TValue.218* %1704 to double*
  %1706 = load double, double* %1705, align 8, !tbaa !36
  %1707 = bitcast %struct.lua_TValue.218* %182 to double*
  %1708 = load double, double* %1707, align 8, !tbaa !36
  %1709 = fadd double %1706, %1708
  %1710 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %182, i64 1
  %1711 = bitcast %struct.lua_TValue.218* %1710 to double*
  %1712 = load double, double* %1711, align 8, !tbaa !36
  %1713 = fcmp ogt double %1706, 0.000000e+00
  br i1 %1713, label %1714, label %1716

; <label>:1714                                    ; preds = %1703
  %1715 = fcmp ugt double %1709, %1712
  br i1 %1715, label %.thread232.backedge, label %1718

; <label>:1716                                    ; preds = %1703
  %1717 = fcmp ugt double %1712, %1709
  br i1 %1717, label %.thread232.backedge, label %1718

; <label>:1718                                    ; preds = %1714, %1716
  %1719 = lshr i32 %114, 14
  %1720 = add nsw i32 %1719, -131071
  %1721 = sext i32 %1720 to i64
  %1722 = getelementptr inbounds i32, i32* %113, i64 %1721
  store double %1709, double* %1707, align 8, !tbaa !36
  %1723 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %base.1, i64 %181, i32 1
  store i32 3, i32* %1723, align 4, !tbaa !10
  %1724 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %182, i64 3
  %1725 = bitcast %struct.lua_TValue.218* %1724 to double*
  store double %1709, double* %1725, align 8, !tbaa !36
  %1726 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %1724, i64 0, i32 1
  store i32 3, i32* %1726, align 4, !tbaa !10
  br label %.thread232.backedge

; <label>:1727                                    ; preds = %178
  %1728 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %182, i64 1
  %1729 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %182, i64 2
  store i32* %113, i32** %1, align 8, !tbaa !131
  %1730 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %base.1, i64 %181, i32 1
  %1731 = load i32, i32* %1730, align 4, !tbaa !10
  %1732 = icmp eq i32 %1731, 3
  br i1 %1732, label %1744, label %1733

; <label>:1733                                    ; preds = %1727
  call void @llvm.lifetime.start(i64 8, i8* %91) #1
  %cond345 = icmp eq i32 %1731, 4
  br i1 %cond345, label %1734, label %1743

; <label>:1734                                    ; preds = %1733
  %1735 = bitcast %struct.lua_TValue.218* %182 to %union.TString.210**
  %1736 = load %union.TString.210*, %union.TString.210** %1735, align 8, !tbaa !25
  %1737 = getelementptr inbounds %union.TString.210, %union.TString.210* %1736, i64 1
  %1738 = bitcast %union.TString.210* %1737 to i8*
  %1739 = call i32 @luaO_str2d(i8* %1738, double* nonnull %num.i) #1
  %1740 = icmp eq i32 %1739, 0
  br i1 %1740, label %1743, label %luaV_tonumber.exit.thread

luaV_tonumber.exit.thread:                        ; preds = %1734
  %1741 = load i64, i64* %92, align 8, !tbaa !36
  %1742 = bitcast %struct.lua_TValue.218* %182 to i64*
  store i64 %1741, i64* %1742, align 8, !tbaa !36
  store i32 3, i32* %1730, align 4, !tbaa !10
  call void @llvm.lifetime.end(i64 8, i8* %91) #1
  br label %1744

; <label>:1743                                    ; preds = %1733, %1734
  call void @llvm.lifetime.end(i64 8, i8* %91) #1
  call void (%struct.lua_State.215*, i8*, ...) bitcast (void (%struct.lua_State*, i8*, ...)* @luaG_runerror to void (%struct.lua_State.215*, i8*, ...)*)(%struct.lua_State.215* %L, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.6.724, i64 0, i64 0)) #1
  br label %1774

; <label>:1744                                    ; preds = %luaV_tonumber.exit.thread, %1727
  %1745 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %1728, i64 0, i32 1
  %1746 = load i32, i32* %1745, align 4, !tbaa !10
  %1747 = icmp eq i32 %1746, 3
  br i1 %1747, label %1759, label %1748

; <label>:1748                                    ; preds = %1744
  call void @llvm.lifetime.start(i64 8, i8* %89) #1
  %cond346 = icmp eq i32 %1746, 4
  br i1 %cond346, label %1749, label %1758

; <label>:1749                                    ; preds = %1748
  %1750 = bitcast %struct.lua_TValue.218* %1728 to %union.TString.210**
  %1751 = load %union.TString.210*, %union.TString.210** %1750, align 8, !tbaa !25
  %1752 = getelementptr inbounds %union.TString.210, %union.TString.210* %1751, i64 1
  %1753 = bitcast %union.TString.210* %1752 to i8*
  %1754 = call i32 @luaO_str2d(i8* %1753, double* nonnull %num.i.111) #1
  %1755 = icmp eq i32 %1754, 0
  br i1 %1755, label %1758, label %luaV_tonumber.exit113.thread

luaV_tonumber.exit113.thread:                     ; preds = %1749
  %1756 = load i64, i64* %90, align 8, !tbaa !36
  %1757 = bitcast %struct.lua_TValue.218* %1728 to i64*
  store i64 %1756, i64* %1757, align 8, !tbaa !36
  store i32 3, i32* %1745, align 4, !tbaa !10
  call void @llvm.lifetime.end(i64 8, i8* %89) #1
  br label %1759

; <label>:1758                                    ; preds = %1748, %1749
  call void @llvm.lifetime.end(i64 8, i8* %89) #1
  call void (%struct.lua_State.215*, i8*, ...) bitcast (void (%struct.lua_State*, i8*, ...)* @luaG_runerror to void (%struct.lua_State.215*, i8*, ...)*)(%struct.lua_State.215* %L, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.7.725, i64 0, i64 0)) #1
  br label %1774

; <label>:1759                                    ; preds = %luaV_tonumber.exit113.thread, %1744
  %1760 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %1729, i64 0, i32 1
  %1761 = load i32, i32* %1760, align 4, !tbaa !10
  %1762 = icmp eq i32 %1761, 3
  br i1 %1762, label %1774, label %1763

; <label>:1763                                    ; preds = %1759
  call void @llvm.lifetime.start(i64 8, i8* %87) #1
  %cond347 = icmp eq i32 %1761, 4
  br i1 %cond347, label %1764, label %1773

; <label>:1764                                    ; preds = %1763
  %1765 = bitcast %struct.lua_TValue.218* %1729 to %union.TString.210**
  %1766 = load %union.TString.210*, %union.TString.210** %1765, align 8, !tbaa !25
  %1767 = getelementptr inbounds %union.TString.210, %union.TString.210* %1766, i64 1
  %1768 = bitcast %union.TString.210* %1767 to i8*
  %1769 = call i32 @luaO_str2d(i8* %1768, double* nonnull %num.i.114) #1
  %1770 = icmp eq i32 %1769, 0
  br i1 %1770, label %1773, label %luaV_tonumber.exit116.thread

luaV_tonumber.exit116.thread:                     ; preds = %1764
  %1771 = load i64, i64* %88, align 8, !tbaa !36
  %1772 = bitcast %struct.lua_TValue.218* %1729 to i64*
  store i64 %1771, i64* %1772, align 8, !tbaa !36
  store i32 3, i32* %1760, align 4, !tbaa !10
  call void @llvm.lifetime.end(i64 8, i8* %87) #1
  br label %1774

; <label>:1773                                    ; preds = %1763, %1764
  call void @llvm.lifetime.end(i64 8, i8* %87) #1
  call void (%struct.lua_State.215*, i8*, ...) bitcast (void (%struct.lua_State*, i8*, ...)* @luaG_runerror to void (%struct.lua_State.215*, i8*, ...)*)(%struct.lua_State.215* %L, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.8.726, i64 0, i64 0)) #1
  unreachable

; <label>:1774                                    ; preds = %luaV_tonumber.exit116.thread, %1758, %1759, %1743
  %1775 = bitcast %struct.lua_TValue.218* %182 to double*
  %1776 = load double, double* %1775, align 8, !tbaa !36
  %1777 = bitcast %struct.lua_TValue.218* %1729 to double*
  %1778 = load double, double* %1777, align 8, !tbaa !36
  %1779 = fsub double %1776, %1778
  store double %1779, double* %1775, align 8, !tbaa !36
  store i32 3, i32* %1730, align 4, !tbaa !10
  %1780 = lshr i32 %114, 14
  %1781 = add nsw i32 %1780, -131071
  %1782 = sext i32 %1781 to i64
  %1783 = getelementptr inbounds i32, i32* %113, i64 %1782
  br label %.thread232.backedge

; <label>:1784                                    ; preds = %178
  %1785 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %182, i64 3
  %1786 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %182, i64 2
  %1787 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %1785, i64 2
  %1788 = bitcast %struct.lua_TValue.218* %1786 to i64*
  %1789 = bitcast %struct.lua_TValue.218* %1787 to i64*
  %1790 = load i64, i64* %1788, align 8
  store i64 %1790, i64* %1789, align 8
  %1791 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %1786, i64 0, i32 1
  %1792 = load i32, i32* %1791, align 4, !tbaa !10
  %1793 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %1787, i64 0, i32 1
  store i32 %1792, i32* %1793, align 4, !tbaa !10
  %1794 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %182, i64 1
  %1795 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %1785, i64 1
  %1796 = bitcast %struct.lua_TValue.218* %1794 to i64*
  %1797 = bitcast %struct.lua_TValue.218* %1795 to i64*
  %1798 = load i64, i64* %1796, align 8
  store i64 %1798, i64* %1797, align 8
  %1799 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %1794, i64 0, i32 1
  %1800 = load i32, i32* %1799, align 4, !tbaa !10
  %1801 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %1795, i64 0, i32 1
  store i32 %1800, i32* %1801, align 4, !tbaa !10
  %1802 = bitcast %struct.lua_TValue.218* %182 to i64*
  %1803 = bitcast %struct.lua_TValue.218* %1785 to i64*
  %1804 = load i64, i64* %1802, align 8
  store i64 %1804, i64* %1803, align 8
  %1805 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %base.1, i64 %181, i32 1
  %1806 = load i32, i32* %1805, align 4, !tbaa !10
  %1807 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %1785, i64 0, i32 1
  store i32 %1806, i32* %1807, align 4, !tbaa !10
  %1808 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %1785, i64 3
  store %struct.lua_TValue.218* %1808, %struct.lua_TValue.218** %17, align 8, !tbaa !1
  store i32* %113, i32** %1, align 8, !tbaa !131
  %1809 = lshr i32 %114, 14
  %1810 = and i32 %1809, 511
  call void bitcast (void (%struct.lua_State*, %struct.lua_TValue*, i32)* @luaD_call to void (%struct.lua_State.215*, %struct.lua_TValue.218*, i32)*)(%struct.lua_State.215* %L, %struct.lua_TValue.218* %1785, i32 %1810) #1
  %1811 = load %struct.lua_TValue.218*, %struct.lua_TValue.218** %3, align 8, !tbaa !11
  %1812 = load %struct.CallInfo.212*, %struct.CallInfo.212** %2, align 8, !tbaa !13
  %1813 = getelementptr inbounds %struct.CallInfo.212, %struct.CallInfo.212* %1812, i64 0, i32 2
  %1814 = bitcast %struct.lua_TValue.218** %1813 to i64*
  %1815 = load i64, i64* %1814, align 8, !tbaa !14
  store i64 %1815, i64* %20, align 8, !tbaa !1
  %1816 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %1811, i64 %181
  %1817 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %1816, i64 3
  %1818 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %1817, i64 0, i32 1
  %1819 = load i32, i32* %1818, align 4, !tbaa !10
  %1820 = icmp eq i32 %1819, 0
  br i1 %1820, label %1832, label %1821

; <label>:1821                                    ; preds = %1784
  %1822 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %1817, i64 -1
  %1823 = bitcast %struct.lua_TValue.218* %1817 to i64*
  %1824 = bitcast %struct.lua_TValue.218* %1822 to i64*
  %1825 = load i64, i64* %1823, align 8
  store i64 %1825, i64* %1824, align 8
  %1826 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %1822, i64 0, i32 1
  store i32 %1819, i32* %1826, align 4, !tbaa !10
  %1827 = load i32, i32* %113, align 4, !tbaa !38
  %1828 = lshr i32 %1827, 14
  %1829 = add nsw i32 %1828, -131071
  %1830 = sext i32 %1829 to i64
  %1831 = getelementptr inbounds i32, i32* %113, i64 %1830
  br label %1832

; <label>:1832                                    ; preds = %1821, %1784
  %pc.8 = phi i32* [ %113, %1784 ], [ %1831, %1821 ]
  %1833 = getelementptr inbounds i32, i32* %pc.8, i64 1
  br label %.thread232.backedge

; <label>:1834                                    ; preds = %178
  %1835 = lshr i32 %114, 23
  %1836 = lshr i32 %114, 14
  %1837 = and i32 %1836, 511
  %1838 = icmp eq i32 %1835, 0
  br i1 %1838, label %1839, label %1850

; <label>:1839                                    ; preds = %1834
  %1840 = load i64, i64* %20, align 8, !tbaa !1
  %1841 = ptrtoint %struct.lua_TValue.218* %182 to i64
  %1842 = sub i64 %1840, %1841
  %1843 = lshr exact i64 %1842, 4
  %1844 = trunc i64 %1843 to i32
  %1845 = add nsw i32 %1844, -1
  %1846 = load %struct.CallInfo.212*, %struct.CallInfo.212** %2, align 8, !tbaa !13
  %1847 = getelementptr inbounds %struct.CallInfo.212, %struct.CallInfo.212* %1846, i64 0, i32 2
  %1848 = bitcast %struct.lua_TValue.218** %1847 to i64*
  %1849 = load i64, i64* %1848, align 8, !tbaa !14
  store i64 %1849, i64* %20, align 8, !tbaa !1
  br label %1850

; <label>:1850                                    ; preds = %1839, %1834
  %n.0 = phi i32 [ %1845, %1839 ], [ %1835, %1834 ]
  %1851 = icmp eq i32 %1837, 0
  br i1 %1851, label %1852, label %1855

; <label>:1852                                    ; preds = %1850
  %1853 = getelementptr inbounds i32, i32* %pc.0, i64 2
  %1854 = load i32, i32* %113, align 4, !tbaa !38
  br label %1855

; <label>:1855                                    ; preds = %1852, %1850
  %c75.0 = phi i32 [ %1854, %1852 ], [ %1837, %1850 ]
  %pc.9 = phi i32* [ %1853, %1852 ], [ %113, %1850 ]
  %1856 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %base.1, i64 %181, i32 1
  %1857 = load i32, i32* %1856, align 4, !tbaa !10
  %1858 = icmp eq i32 %1857, 5
  br i1 %1858, label %1859, label %.thread232.backedge

; <label>:1859                                    ; preds = %1855
  %1860 = bitcast %struct.lua_TValue.218* %182 to %struct.Table.208**
  %1861 = load %struct.Table.208*, %struct.Table.208** %1860, align 8, !tbaa !25
  %1862 = mul i32 %c75.0, 50
  %1863 = add i32 %n.0, -50
  %1864 = add i32 %1863, %1862
  %1865 = getelementptr inbounds %struct.Table.208, %struct.Table.208* %1861, i64 0, i32 10
  %1866 = load i32, i32* %1865, align 4, !tbaa !206
  %1867 = icmp sgt i32 %1864, %1866
  br i1 %1867, label %1868, label %.preheader

; <label>:1868                                    ; preds = %1859
  call void bitcast (void (%struct.lua_State*, %struct.Table*, i32)* @luaH_resizearray to void (%struct.lua_State.215*, %struct.Table.208*, i32)*)(%struct.lua_State.215* %L, %struct.Table.208* %1861, i32 %1864) #1
  br label %.preheader

.preheader:                                       ; preds = %1868, %1859
  %1869 = icmp sgt i32 %n.0, 0
  br i1 %1869, label %.lr.ph285, label %.thread232.backedge

.lr.ph285:                                        ; preds = %.preheader
  %1870 = getelementptr inbounds %struct.Table.208, %struct.Table.208* %1861, i64 0, i32 2
  %1871 = sext i32 %n.0 to i64
  br label %1872

; <label>:1872                                    ; preds = %.lr.ph285, %1896
  %indvars.iv326 = phi i64 [ %1871, %.lr.ph285 ], [ %indvars.iv.next327, %1896 ]
  %last.0284 = phi i32 [ %1864, %.lr.ph285 ], [ %1874, %1896 ]
  %1873 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %182, i64 %indvars.iv326
  %1874 = add nsw i32 %last.0284, -1
  %1875 = call %struct.lua_TValue.218* bitcast (%struct.lua_TValue* (%struct.lua_State*, %struct.Table*, i32)* @luaH_setnum to %struct.lua_TValue.218* (%struct.lua_State.215*, %struct.Table.208*, i32)*)(%struct.lua_State.215* %L, %struct.Table.208* %1861, i32 %last.0284) #1
  %1876 = bitcast %struct.lua_TValue.218* %1873 to i64*
  %1877 = bitcast %struct.lua_TValue.218* %1875 to i64*
  %1878 = load i64, i64* %1876, align 8
  store i64 %1878, i64* %1877, align 8
  %1879 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %1873, i64 0, i32 1
  %1880 = load i32, i32* %1879, align 4, !tbaa !10
  %1881 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %1875, i64 0, i32 1
  store i32 %1880, i32* %1881, align 4, !tbaa !10
  %1882 = load i32, i32* %1879, align 4, !tbaa !10
  %1883 = icmp sgt i32 %1882, 3
  br i1 %1883, label %1884, label %1896

; <label>:1884                                    ; preds = %1872
  %1885 = bitcast %struct.lua_TValue.218* %1873 to %struct.GCheader.380**
  %1886 = load %struct.GCheader.380*, %struct.GCheader.380** %1885, align 8, !tbaa !25
  %1887 = getelementptr inbounds %struct.GCheader.380, %struct.GCheader.380* %1886, i64 0, i32 2
  %1888 = load i8, i8* %1887, align 1, !tbaa !33
  %1889 = and i8 %1888, 3
  %1890 = icmp eq i8 %1889, 0
  br i1 %1890, label %1896, label %1891

; <label>:1891                                    ; preds = %1884
  %1892 = load i8, i8* %1870, align 1, !tbaa !33
  %1893 = and i8 %1892, 4
  %1894 = icmp eq i8 %1893, 0
  br i1 %1894, label %1896, label %1895

; <label>:1895                                    ; preds = %1891
  call void bitcast (void (%struct.lua_State*, %struct.Table*)* @luaC_barrierback to void (%struct.lua_State.215*, %struct.Table.208*)*)(%struct.lua_State.215* %L, %struct.Table.208* %1861) #1
  br label %1896

; <label>:1896                                    ; preds = %1891, %1884, %1895, %1872
  %indvars.iv.next327 = add nsw i64 %indvars.iv326, -1
  %1897 = icmp sgt i64 %indvars.iv326, 1
  br i1 %1897, label %1872, label %.thread232.loopexit412

; <label>:1898                                    ; preds = %178
  call void bitcast (void (%struct.lua_State.115*, %struct.lua_TValue.101*)* @luaF_close to void (%struct.lua_State.215*, %struct.lua_TValue.218*)*)(%struct.lua_State.215* %L, %struct.lua_TValue.218* %182) #1
  br label %.thread232.backedge

; <label>:1899                                    ; preds = %178
  %1900 = lshr i32 %114, 14
  %1901 = zext i32 %1900 to i64
  %1902 = load %struct.Proto.383*, %struct.Proto.383** %107, align 8, !tbaa !57
  %1903 = getelementptr inbounds %struct.Proto.383, %struct.Proto.383* %1902, i64 0, i32 5
  %1904 = load %struct.Proto.383**, %struct.Proto.383*** %1903, align 8, !tbaa !140
  %1905 = getelementptr inbounds %struct.Proto.383*, %struct.Proto.383** %1904, i64 %1901
  %1906 = load %struct.Proto.383*, %struct.Proto.383** %1905, align 8, !tbaa !25
  %1907 = getelementptr inbounds %struct.Proto.383, %struct.Proto.383* %1906, i64 0, i32 19
  %1908 = load i8, i8* %1907, align 1, !tbaa !138
  %1909 = zext i8 %1908 to i32
  %1910 = load %struct.Table.208*, %struct.Table.208** %111, align 8, !tbaa !172
  %1911 = call %union.Closure.379* bitcast (%union.Closure.118* (%struct.lua_State.115*, i32, %struct.Table.108*)* @luaF_newLclosure to %union.Closure.379* (%struct.lua_State.215*, i32, %struct.Table.208*)*)(%struct.lua_State.215* %L, i32 %1909, %struct.Table.208* %1910) #1
  %1912 = getelementptr inbounds %union.Closure.379, %union.Closure.379* %1911, i64 0, i32 0, i32 7
  %1913 = bitcast i32 (%struct.lua_State.215*)** %1912 to %struct.Proto.383**
  store %struct.Proto.383* %1906, %struct.Proto.383** %1913, align 8, !tbaa !57
  %1914 = icmp eq i8 %1908, 0
  br i1 %1914, label %1936, label %.lr.ph282

.lr.ph282:                                        ; preds = %1899
  %1915 = getelementptr inbounds %union.Closure.379, %union.Closure.379* %1911, i64 0, i32 0, i32 8
  %1916 = bitcast [1 x %struct.lua_TValue.218]* %1915 to [1 x %struct.UpVal.204*]*
  %1917 = zext i8 %1908 to i64
  br label %1918

; <label>:1918                                    ; preds = %1934, %.lr.ph282
  %indvars.iv321 = phi i64 [ 0, %.lr.ph282 ], [ %indvars.iv.next322, %1934 ]
  %pc.10281 = phi i32* [ %113, %.lr.ph282 ], [ %1935, %1934 ]
  %1919 = load i32, i32* %pc.10281, align 4, !tbaa !38
  %1920 = and i32 %1919, 63
  %1921 = icmp eq i32 %1920, 4
  %1922 = lshr i32 %1919, 23
  %1923 = zext i32 %1922 to i64
  br i1 %1921, label %1924, label %1930

; <label>:1924                                    ; preds = %1918
  %1925 = getelementptr inbounds %struct.LClosure.384, %struct.LClosure.384* %105, i64 0, i32 8, i64 %1923
  %1926 = bitcast %struct.UpVal.204** %1925 to i64*
  %1927 = load i64, i64* %1926, align 8, !tbaa !25
  %1928 = getelementptr inbounds [1 x %struct.UpVal.204*], [1 x %struct.UpVal.204*]* %1916, i64 0, i64 %indvars.iv321
  %1929 = bitcast %struct.UpVal.204** %1928 to i64*
  store i64 %1927, i64* %1929, align 8, !tbaa !25
  br label %1934

; <label>:1930                                    ; preds = %1918
  %1931 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %base.1, i64 %1923
  %1932 = call %struct.UpVal.204* bitcast (%struct.UpVal.105* (%struct.lua_State.115*, %struct.lua_TValue.101*)* @luaF_findupval to %struct.UpVal.204* (%struct.lua_State.215*, %struct.lua_TValue.218*)*)(%struct.lua_State.215* %L, %struct.lua_TValue.218* %1931) #1
  %1933 = getelementptr inbounds [1 x %struct.UpVal.204*], [1 x %struct.UpVal.204*]* %1916, i64 0, i64 %indvars.iv321
  store %struct.UpVal.204* %1932, %struct.UpVal.204** %1933, align 8, !tbaa !25
  br label %1934

; <label>:1934                                    ; preds = %1924, %1930
  %indvars.iv.next322 = add nuw nsw i64 %indvars.iv321, 1
  %1935 = getelementptr inbounds i32, i32* %pc.10281, i64 1
  %lftr.wideiv324 = trunc i64 %indvars.iv.next322 to i32
  %exitcond325 = icmp eq i32 %lftr.wideiv324, %1909
  br i1 %exitcond325, label %._crit_edge, label %1918

._crit_edge:                                      ; preds = %1934
  %scevgep323 = getelementptr i32, i32* %113, i64 %1917
  br label %1936

; <label>:1936                                    ; preds = %1899, %._crit_edge
  %pc.10.lcssa = phi i32* [ %scevgep323, %._crit_edge ], [ %113, %1899 ]
  %1937 = bitcast %struct.lua_TValue.218* %182 to %union.Closure.379**
  store %union.Closure.379* %1911, %union.Closure.379** %1937, align 8, !tbaa !25
  %1938 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %base.1, i64 %181, i32 1
  store i32 6, i32* %1938, align 4, !tbaa !10
  store i32* %pc.10.lcssa, i32** %1, align 8, !tbaa !131
  %1939 = load %struct.global_State.211*, %struct.global_State.211** %11, align 8, !tbaa !17
  %1940 = getelementptr inbounds %struct.global_State.211, %struct.global_State.211* %1939, i64 0, i32 14
  %1941 = load i64, i64* %1940, align 8, !tbaa !23
  %1942 = getelementptr inbounds %struct.global_State.211, %struct.global_State.211* %1939, i64 0, i32 13
  %1943 = load i64, i64* %1942, align 8, !tbaa !24
  %1944 = icmp ult i64 %1941, %1943
  br i1 %1944, label %1946, label %1945

; <label>:1945                                    ; preds = %1936
  call void bitcast (void (%struct.lua_State*)* @luaC_step to void (%struct.lua_State.215*)*)(%struct.lua_State.215* %L) #1
  br label %1946

; <label>:1946                                    ; preds = %1936, %1945
  %1947 = load %struct.lua_TValue.218*, %struct.lua_TValue.218** %3, align 8, !tbaa !11
  br label %.thread232.backedge

; <label>:1948                                    ; preds = %178
  %1949 = lshr i32 %114, 23
  %1950 = add nsw i32 %1949, -1
  %1951 = load %struct.CallInfo.212*, %struct.CallInfo.212** %2, align 8, !tbaa !13
  %1952 = getelementptr inbounds %struct.CallInfo.212, %struct.CallInfo.212* %1951, i64 0, i32 0
  %1953 = bitcast %struct.CallInfo.212* %1951 to i64*
  %1954 = load i64, i64* %1953, align 8, !tbaa !132
  %1955 = getelementptr inbounds %struct.CallInfo.212, %struct.CallInfo.212* %1951, i64 0, i32 1
  %1956 = bitcast %struct.lua_TValue.218** %1955 to i64*
  %1957 = load i64, i64* %1956, align 8, !tbaa !28
  %1958 = sub i64 %1954, %1957
  %1959 = lshr exact i64 %1958, 4
  %1960 = trunc i64 %1959 to i32
  %1961 = load %struct.Proto.383*, %struct.Proto.383** %107, align 8, !tbaa !57
  %1962 = getelementptr inbounds %struct.Proto.383, %struct.Proto.383* %1961, i64 0, i32 20
  %1963 = load i8, i8* %1962, align 1, !tbaa !136
  %1964 = zext i8 %1963 to i32
  %1965 = sub nsw i32 %1960, %1964
  %1966 = add nsw i32 %1965, -1
  %1967 = icmp eq i32 %1949, 0
  br i1 %1967, label %1968, label %1981

; <label>:1968                                    ; preds = %1948
  store i32* %113, i32** %1, align 8, !tbaa !131
  %1969 = load i64, i64* %19, align 8, !tbaa !12
  %1970 = load i64, i64* %20, align 8, !tbaa !1
  %1971 = sub i64 %1969, %1970
  %1972 = shl nsw i32 %1966, 4
  %1973 = sext i32 %1972 to i64
  %1974 = icmp sgt i64 %1971, %1973
  br i1 %1974, label %1976, label %1975

; <label>:1975                                    ; preds = %1968
  call void bitcast (void (%struct.lua_State*, i32)* @luaD_growstack to void (%struct.lua_State.215*, i32)*)(%struct.lua_State.215* %L, i32 %1966) #1
  br label %1976

; <label>:1976                                    ; preds = %1968, %1975
  %1977 = load %struct.lua_TValue.218*, %struct.lua_TValue.218** %3, align 8, !tbaa !11
  %1978 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %1977, i64 %181
  %1979 = sext i32 %1966 to i64
  %1980 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %1978, i64 %1979
  store %struct.lua_TValue.218* %1980, %struct.lua_TValue.218** %17, align 8, !tbaa !1
  br label %1981

; <label>:1981                                    ; preds = %1976, %1948
  %b79.0 = phi i32 [ %1966, %1976 ], [ %1950, %1948 ]
  %1982 = phi %struct.lua_TValue.218* [ %1977, %1976 ], [ %base.1, %1948 ]
  %1983 = icmp sgt i32 %b79.0, 0
  br i1 %1983, label %.lr.ph, label %.thread232.backedge

.thread232.backedge:                              ; preds = %1981, %.preheader, %1946, %1898, %1832, %1774, %1606, %1575, %1550, %1345, %1314, %1271, %1260, %1170, %327, %325, %288, %253, %238, %232, %219, %204, %194, %184, %281, %274, %286, %259, %Arith.exit, %376, %Arith.exit92, %495, %Arith.exit95, %614, %Arith.exit98, %733, %Arith.exit101, %852, %Arith.exit104, %977, %Arith.exit107, %1076, %1245, %1188, %1181, %1628, %1679, %1714, %1716, %1718, %178, %1855, %.thread232.loopexit, %.thread232.loopexit412, %.thread232.loopexit413
  %pc.0.be = phi i32* [ %113, %178 ], [ %113, %1716 ], [ %113, %1714 ], [ %1722, %1718 ], [ %113, %1679 ], [ %113, %1628 ], [ %113, %1181 ], [ %113, %1188 ], [ %113, %1245 ], [ %113, %1076 ], [ %113, %Arith.exit107 ], [ %113, %977 ], [ %113, %Arith.exit104 ], [ %113, %852 ], [ %113, %Arith.exit101 ], [ %113, %733 ], [ %113, %Arith.exit98 ], [ %113, %614 ], [ %113, %Arith.exit95 ], [ %113, %495 ], [ %113, %Arith.exit92 ], [ %113, %376 ], [ %113, %Arith.exit ], [ %113, %259 ], [ %113, %286 ], [ %113, %274 ], [ %113, %281 ], [ %113, %184 ], [ %113, %194 ], [ %., %204 ], [ %113, %219 ], [ %113, %232 ], [ %113, %238 ], [ %113, %253 ], [ %113, %288 ], [ %113, %325 ], [ %113, %327 ], [ %113, %1170 ], [ %113, %1260 ], [ %1275, %1271 ], [ %1316, %1314 ], [ %1347, %1345 ], [ %1552, %1550 ], [ %1576, %1575 ], [ %1607, %1606 ], [ %1783, %1774 ], [ %1833, %1832 ], [ %113, %1898 ], [ %pc.10.lcssa, %1946 ], [ %pc.9, %1855 ], [ %pc.9, %.preheader ], [ %113, %1981 ], [ %113, %.thread232.loopexit ], [ %pc.9, %.thread232.loopexit412 ], [ %113, %.thread232.loopexit413 ]
  %base.0.be = phi %struct.lua_TValue.218* [ %base.1, %178 ], [ %base.1, %1716 ], [ %base.1, %1714 ], [ %base.1, %1718 ], [ %1680, %1679 ], [ %1629, %1628 ], [ %base.1, %1181 ], [ %base.1, %1188 ], [ %1246, %1245 ], [ %base.1, %1076 ], [ %1156, %Arith.exit107 ], [ %base.1, %977 ], [ %1068, %Arith.exit104 ], [ %base.1, %852 ], [ %949, %Arith.exit101 ], [ %base.1, %733 ], [ %824, %Arith.exit98 ], [ %base.1, %614 ], [ %705, %Arith.exit95 ], [ %base.1, %495 ], [ %586, %Arith.exit92 ], [ %base.1, %376 ], [ %467, %Arith.exit ], [ %base.1, %259 ], [ %base.1, %286 ], [ %base.1, %274 ], [ %base.1, %281 ], [ %base.1, %184 ], [ %base.1, %194 ], [ %base.1, %204 ], [ %base.1, %219 ], [ %237, %232 ], [ %252, %238 ], [ %258, %253 ], [ %308, %288 ], [ %326, %325 ], [ %348, %327 ], [ %base.1, %1170 ], [ %1261, %1260 ], [ %base.1, %1271 ], [ %1315, %1314 ], [ %1346, %1345 ], [ %1551, %1550 ], [ %base.1, %1575 ], [ %base.1, %1606 ], [ %base.1, %1774 ], [ %1811, %1832 ], [ %base.1, %1898 ], [ %1947, %1946 ], [ %base.1, %1855 ], [ %base.1, %.preheader ], [ %1982, %1981 ], [ %base.1, %.thread232.loopexit ], [ %base.1, %.thread232.loopexit412 ], [ %1982, %.thread232.loopexit413 ]
  br label %.thread232

.lr.ph:                                           ; preds = %1981
  %1984 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %1982, i64 %181
  %1985 = sext i32 %1966 to i64
  %1986 = sub nsw i64 0, %1985
  br label %1987

; <label>:1987                                    ; preds = %2003, %.lr.ph
  %indvars.iv = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next, %2003 ]
  %1988 = icmp slt i64 %indvars.iv, %1985
  br i1 %1988, label %1989, label %2000

; <label>:1989                                    ; preds = %1987
  %1990 = load %struct.lua_TValue.218*, %struct.lua_TValue.218** %1952, align 8, !tbaa !132
  %1991 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %1990, i64 %1986
  %1992 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %1991, i64 %indvars.iv
  %1993 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %1984, i64 %indvars.iv
  %1994 = bitcast %struct.lua_TValue.218* %1992 to i64*
  %1995 = bitcast %struct.lua_TValue.218* %1993 to i64*
  %1996 = load i64, i64* %1994, align 8
  store i64 %1996, i64* %1995, align 8
  %1997 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %1992, i64 0, i32 1
  %1998 = load i32, i32* %1997, align 4, !tbaa !10
  %1999 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %1993, i64 0, i32 1
  store i32 %1998, i32* %1999, align 4, !tbaa !10
  br label %2003

; <label>:2000                                    ; preds = %1987
  %2001 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %1984, i64 %indvars.iv
  %2002 = getelementptr inbounds %struct.lua_TValue.218, %struct.lua_TValue.218* %2001, i64 0, i32 1
  store i32 0, i32* %2002, align 4, !tbaa !10
  br label %2003

; <label>:2003                                    ; preds = %1989, %2000
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %b79.0
  br i1 %exitcond, label %.thread232.loopexit413, label %1987

.loopexit.loopexit:                               ; preds = %1636, %1617
  br label %.loopexit

.loopexit.loopexit414:                            ; preds = %1692
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit414, %.loopexit.loopexit, %175
  ret void
}

; Function Attrs: nounwind readonly
declare i32 @strcoll(i8* nocapture, i8* nocapture) #4

; Function Attrs: nounwind uwtable
define hidden i32 @luaZ_fill(%struct.Zio* nocapture %z) #0 {
  %size = alloca i64, align 8
  %1 = bitcast i64* %size to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1) #1
  %2 = getelementptr inbounds %struct.Zio, %struct.Zio* %z, i64 0, i32 4
  %3 = load %struct.lua_State*, %struct.lua_State** %2, align 8, !tbaa !308
  %4 = getelementptr inbounds %struct.Zio, %struct.Zio* %z, i64 0, i32 2
  %5 = load i8* (%struct.lua_State*, i8*, i64*)*, i8* (%struct.lua_State*, i8*, i64*)** %4, align 8, !tbaa !309
  %6 = getelementptr inbounds %struct.Zio, %struct.Zio* %z, i64 0, i32 3
  %7 = load i8*, i8** %6, align 8, !tbaa !310
  %8 = call i8* %5(%struct.lua_State* %3, i8* %7, i64* nonnull %size) #1
  %9 = icmp eq i8* %8, null
  %10 = load i64, i64* %size, align 8
  %11 = icmp eq i64 %10, 0
  %or.cond = or i1 %9, %11
  br i1 %or.cond, label %19, label %12

; <label>:12                                      ; preds = %0
  %13 = add i64 %10, -1
  %14 = getelementptr inbounds %struct.Zio, %struct.Zio* %z, i64 0, i32 0
  store i64 %13, i64* %14, align 8, !tbaa !228
  %15 = getelementptr inbounds %struct.Zio, %struct.Zio* %z, i64 0, i32 1
  %16 = getelementptr inbounds i8, i8* %8, i64 1
  store i8* %16, i8** %15, align 8, !tbaa !230
  %17 = load i8, i8* %8, align 1, !tbaa !76
  %18 = zext i8 %17 to i32
  br label %19

; <label>:19                                      ; preds = %0, %12
  %.0 = phi i32 [ %18, %12 ], [ -1, %0 ]
  call void @llvm.lifetime.end(i64 8, i8* %1) #1
  ret i32 %.0
}

; Function Attrs: nounwind uwtable
define hidden i32 @luaZ_lookahead(%struct.Zio* nocapture %z) #0 {
  %size.i = alloca i64, align 8
  %1 = getelementptr inbounds %struct.Zio, %struct.Zio* %z, i64 0, i32 0
  %2 = load i64, i64* %1, align 8, !tbaa !228
  %3 = icmp eq i64 %2, 0
  br i1 %3, label %4, label %._crit_edge

._crit_edge:                                      ; preds = %0
  %.phi.trans.insert = getelementptr inbounds %struct.Zio, %struct.Zio* %z, i64 0, i32 1
  %.pre = load i8*, i8** %.phi.trans.insert, align 8, !tbaa !230
  br label %17

; <label>:4                                       ; preds = %0
  %5 = bitcast i64* %size.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5) #1
  %6 = getelementptr inbounds %struct.Zio, %struct.Zio* %z, i64 0, i32 4
  %7 = load %struct.lua_State*, %struct.lua_State** %6, align 8, !tbaa !308
  %8 = getelementptr inbounds %struct.Zio, %struct.Zio* %z, i64 0, i32 2
  %9 = load i8* (%struct.lua_State*, i8*, i64*)*, i8* (%struct.lua_State*, i8*, i64*)** %8, align 8, !tbaa !309
  %10 = getelementptr inbounds %struct.Zio, %struct.Zio* %z, i64 0, i32 3
  %11 = load i8*, i8** %10, align 8, !tbaa !310
  %12 = call i8* %9(%struct.lua_State* %7, i8* %11, i64* nonnull %size.i) #1
  %13 = icmp eq i8* %12, null
  %14 = load i64, i64* %size.i, align 8
  %15 = icmp eq i64 %14, 0
  %or.cond.i = or i1 %13, %15
  br i1 %or.cond.i, label %luaZ_fill.exit.thread, label %luaZ_fill.exit

luaZ_fill.exit.thread:                            ; preds = %4
  call void @llvm.lifetime.end(i64 8, i8* %5) #1
  br label %21

luaZ_fill.exit:                                   ; preds = %4
  %16 = getelementptr inbounds %struct.Zio, %struct.Zio* %z, i64 0, i32 1
  call void @llvm.lifetime.end(i64 8, i8* %5) #1
  store i64 %14, i64* %1, align 8, !tbaa !228
  store i8* %12, i8** %16, align 8, !tbaa !230
  br label %17

; <label>:17                                      ; preds = %._crit_edge, %luaZ_fill.exit
  %18 = phi i8* [ %.pre, %._crit_edge ], [ %12, %luaZ_fill.exit ]
  %19 = load i8, i8* %18, align 1, !tbaa !76
  %20 = zext i8 %19 to i32
  br label %21

; <label>:21                                      ; preds = %luaZ_fill.exit.thread, %17
  %.0 = phi i32 [ %20, %17 ], [ -1, %luaZ_fill.exit.thread ]
  ret i32 %.0
}

; Function Attrs: nounwind uwtable
define hidden void @luaZ_init(%struct.lua_State* %L, %struct.Zio* nocapture %z, i8* (%struct.lua_State*, i8*, i64*)* %reader, i8* %data) #0 {
  %1 = getelementptr inbounds %struct.Zio, %struct.Zio* %z, i64 0, i32 4
  store %struct.lua_State* %L, %struct.lua_State** %1, align 8, !tbaa !308
  %2 = getelementptr inbounds %struct.Zio, %struct.Zio* %z, i64 0, i32 2
  store i8* (%struct.lua_State*, i8*, i64*)* %reader, i8* (%struct.lua_State*, i8*, i64*)** %2, align 8, !tbaa !309
  %3 = getelementptr inbounds %struct.Zio, %struct.Zio* %z, i64 0, i32 3
  store i8* %data, i8** %3, align 8, !tbaa !310
  %4 = bitcast %struct.Zio* %z to i8*
  call void @llvm.memset.p0i8.i64(i8* %4, i8 0, i64 16, i32 8, i1 false)
  ret void
}

; Function Attrs: nounwind uwtable
define hidden i64 @luaZ_read(%struct.Zio* nocapture %z, i8* nocapture %b, i64 %n) #0 {
  %size.i.i = alloca i64, align 8
  %1 = icmp eq i64 %n, 0
  br i1 %1, label %.thread, label %.lr.ph

.lr.ph:                                           ; preds = %0
  %2 = getelementptr inbounds %struct.Zio, %struct.Zio* %z, i64 0, i32 0
  %3 = bitcast i64* %size.i.i to i8*
  %4 = getelementptr inbounds %struct.Zio, %struct.Zio* %z, i64 0, i32 4
  %5 = getelementptr inbounds %struct.Zio, %struct.Zio* %z, i64 0, i32 2
  %6 = getelementptr inbounds %struct.Zio, %struct.Zio* %z, i64 0, i32 3
  %7 = getelementptr inbounds %struct.Zio, %struct.Zio* %z, i64 0, i32 1
  %.pre = load i64, i64* %2, align 8, !tbaa !228
  br label %8

; <label>:8                                       ; preds = %.lr.ph, %luaZ_lookahead.exit
  %9 = phi i64 [ %.pre, %.lr.ph ], [ %23, %luaZ_lookahead.exit ]
  %.028 = phi i64 [ %n, %.lr.ph ], [ %27, %luaZ_lookahead.exit ]
  %.047 = phi i8* [ %b, %.lr.ph ], [ %26, %luaZ_lookahead.exit ]
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %11, label %.luaZ_lookahead.exit_crit_edge

.luaZ_lookahead.exit_crit_edge:                   ; preds = %8
  %.pre10 = load i8*, i8** %7, align 8, !tbaa !230
  br label %luaZ_lookahead.exit

; <label>:11                                      ; preds = %8
  call void @llvm.lifetime.start(i64 8, i8* %3) #1
  %12 = load %struct.lua_State*, %struct.lua_State** %4, align 8, !tbaa !308
  %13 = load i8* (%struct.lua_State*, i8*, i64*)*, i8* (%struct.lua_State*, i8*, i64*)** %5, align 8, !tbaa !309
  %14 = load i8*, i8** %6, align 8, !tbaa !310
  %15 = call i8* %13(%struct.lua_State* %12, i8* %14, i64* nonnull %size.i.i) #1
  %16 = icmp eq i8* %15, null
  %17 = load i64, i64* %size.i.i, align 8
  %18 = icmp eq i64 %17, 0
  %or.cond.i.i = or i1 %16, %18
  call void @llvm.lifetime.end(i64 8, i8* %3) #1
  br i1 %or.cond.i.i, label %.thread.loopexit, label %luaZ_fill.exit.i

luaZ_fill.exit.i:                                 ; preds = %11
  store i64 %17, i64* %2, align 8, !tbaa !228
  store i8* %15, i8** %7, align 8, !tbaa !230
  br label %luaZ_lookahead.exit

luaZ_lookahead.exit:                              ; preds = %.luaZ_lookahead.exit_crit_edge, %luaZ_fill.exit.i
  %19 = phi i8* [ %15, %luaZ_fill.exit.i ], [ %.pre10, %.luaZ_lookahead.exit_crit_edge ]
  %20 = phi i64 [ %17, %luaZ_fill.exit.i ], [ %9, %.luaZ_lookahead.exit_crit_edge ]
  %21 = icmp ugt i64 %.028, %20
  %..02 = select i1 %21, i64 %20, i64 %.028
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %.047, i8* %19, i64 %..02, i32 1, i1 false)
  %22 = load i64, i64* %2, align 8, !tbaa !228
  %23 = sub i64 %22, %..02
  store i64 %23, i64* %2, align 8, !tbaa !228
  %24 = load i8*, i8** %7, align 8, !tbaa !230
  %25 = getelementptr inbounds i8, i8* %24, i64 %..02
  store i8* %25, i8** %7, align 8, !tbaa !230
  %26 = getelementptr inbounds i8, i8* %.047, i64 %..02
  %27 = sub i64 %.028, %..02
  %28 = icmp eq i64 %.028, %..02
  br i1 %28, label %.thread.loopexit, label %8

.thread.loopexit:                                 ; preds = %11, %luaZ_lookahead.exit
  %.2.ph = phi i64 [ 0, %luaZ_lookahead.exit ], [ %.028, %11 ]
  br label %.thread

.thread:                                          ; preds = %.thread.loopexit, %0
  %.2 = phi i64 [ 0, %0 ], [ %.2.ph, %.thread.loopexit ]
  ret i64 %.2
}

; Function Attrs: nounwind uwtable
define hidden i8* @luaZ_openspace(%struct.lua_State* %L, %struct.Mbuffer* nocapture %buff, i64 %n) #0 {
  %1 = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %buff, i64 0, i32 2
  %2 = load i64, i64* %1, align 8, !tbaa !158
  %3 = icmp ult i64 %2, %n
  br i1 %3, label %4, label %._crit_edge

._crit_edge:                                      ; preds = %0
  %.phi.trans.insert = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %buff, i64 0, i32 0
  %.pre = load i8*, i8** %.phi.trans.insert, align 8, !tbaa !157
  br label %16

; <label>:4                                       ; preds = %0
  %5 = icmp ult i64 %n, 32
  %.n = select i1 %5, i64 32, i64 %n
  %6 = add i64 %.n, 1
  %7 = icmp ult i64 %6, -2
  br i1 %7, label %8, label %12

; <label>:8                                       ; preds = %4
  %9 = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %buff, i64 0, i32 0
  %10 = load i8*, i8** %9, align 8, !tbaa !157
  %11 = tail call i8* @luaM_realloc_(%struct.lua_State* %L, i8* %10, i64 %2, i64 %.n) #1
  br label %14

; <label>:12                                      ; preds = %4
  %13 = tail call i8* @luaM_toobig(%struct.lua_State* %L) #1
  %.pre1 = getelementptr inbounds %struct.Mbuffer, %struct.Mbuffer* %buff, i64 0, i32 0
  br label %14

; <label>:14                                      ; preds = %12, %8
  %.pre-phi = phi i8** [ %.pre1, %12 ], [ %9, %8 ]
  %15 = phi i8* [ %13, %12 ], [ %11, %8 ]
  store i8* %15, i8** %.pre-phi, align 8, !tbaa !157
  store i64 %.n, i64* %1, align 8, !tbaa !158
  br label %16

; <label>:16                                      ; preds = %._crit_edge, %14
  %17 = phi i8* [ %.pre, %._crit_edge ], [ %15, %14 ]
  ret i8* %17
}

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind }
attributes #2 = { nounwind readonly uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readonly "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind returns_twice "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind readonly }
attributes #12 = { nounwind readnone }
attributes #13 = { cold nounwind }
attributes #14 = { cold }
attributes #15 = { noreturn nounwind }
attributes #16 = { nounwind returns_twice }

!llvm.ident = !{!0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0}

!0 = !{!"clang version 3.7.1 (tags/RELEASE_371/final)"}
!1 = !{!2, !3, i64 16}
!2 = !{!"lua_State", !3, i64 0, !4, i64 8, !4, i64 9, !4, i64 10, !3, i64 16, !3, i64 24, !3, i64 32, !3, i64 40, !3, i64 48, !3, i64 56, !3, i64 64, !3, i64 72, !3, i64 80, !6, i64 88, !6, i64 92, !7, i64 96, !7, i64 98, !4, i64 100, !4, i64 101, !6, i64 104, !6, i64 108, !3, i64 112, !8, i64 120, !8, i64 136, !3, i64 152, !3, i64 160, !3, i64 168, !9, i64 176}
!3 = !{!"any pointer", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
!6 = !{!"int", !4, i64 0}
!7 = !{!"short", !4, i64 0}
!8 = !{!"lua_TValue", !4, i64 0, !6, i64 8}
!9 = !{!"long", !4, i64 0}
!10 = !{!8, !6, i64 8}
!11 = !{!2, !3, i64 24}
!12 = !{!2, !3, i64 56}
!13 = !{!2, !3, i64 40}
!14 = !{!15, !3, i64 16}
!15 = !{!"CallInfo", !3, i64 0, !3, i64 8, !3, i64 16, !3, i64 24, !6, i64 32, !6, i64 36}
!16 = !{!2, !7, i64 96}
!17 = !{!2, !3, i64 32}
!18 = !{!19, !3, i64 152}
!19 = !{!"global_State", !20, i64 0, !3, i64 16, !3, i64 24, !4, i64 32, !4, i64 33, !6, i64 36, !3, i64 40, !3, i64 48, !3, i64 56, !3, i64 64, !3, i64 72, !3, i64 80, !21, i64 88, !9, i64 112, !9, i64 120, !9, i64 128, !9, i64 136, !6, i64 144, !6, i64 148, !3, i64 152, !8, i64 160, !3, i64 176, !22, i64 184, !4, i64 224, !4, i64 296}
!20 = !{!"stringtable", !3, i64 0, !6, i64 8, !6, i64 12}
!21 = !{!"Mbuffer", !3, i64 0, !9, i64 8, !9, i64 16}
!22 = !{!"UpVal", !3, i64 0, !4, i64 8, !4, i64 9, !3, i64 16, !4, i64 24}
!23 = !{!19, !9, i64 120}
!24 = !{!19, !9, i64 112}
!25 = !{!3, !3, i64 0}
!26 = distinct !{!26, !27}
!27 = !{!"llvm.loop.unroll.disable"}
!28 = !{!15, !3, i64 8}
!29 = !{!30, !3, i64 24}
!30 = !{!"CClosure", !3, i64 0, !4, i64 8, !4, i64 9, !4, i64 10, !4, i64 11, !3, i64 16, !3, i64 24, !3, i64 32, !4, i64 40}
!31 = !{!30, !4, i64 11}
!32 = !{!2, !3, i64 80}
!33 = !{!34, !4, i64 9}
!34 = !{!"GCheader", !3, i64 0, !4, i64 8, !4, i64 9}
!35 = !{!30, !4, i64 10}
!36 = !{!37, !37, i64 0}
!37 = !{!"double", !4, i64 0}
!38 = !{!6, !6, i64 0}
!39 = !{!9, !9, i64 0}
!40 = !{!41, !9, i64 16}
!41 = !{!"", !3, i64 0, !4, i64 8, !4, i64 9, !4, i64 10, !6, i64 12, !9, i64 16}
!42 = !{!43, !9, i64 32}
!43 = !{!"", !3, i64 0, !4, i64 8, !4, i64 9, !3, i64 16, !3, i64 24, !9, i64 32}
!44 = !{!30, !3, i64 32}
!45 = !{!19, !3, i64 176}
!46 = !{!43, !3, i64 24}
!47 = !{!48, !3, i64 16}
!48 = !{!"Table", !3, i64 0, !4, i64 8, !4, i64 9, !4, i64 10, !4, i64 11, !3, i64 16, !3, i64 24, !3, i64 32, !3, i64 40, !3, i64 48, !6, i64 56}
!49 = !{!43, !3, i64 16}
!50 = !{!2, !3, i64 64}
!51 = !{!52, !3, i64 0}
!52 = !{!"CallS", !3, i64 0, !6, i64 8}
!53 = !{!52, !6, i64 8}
!54 = !{!55, !3, i64 0}
!55 = !{!"CCallS", !3, i64 0, !3, i64 8}
!56 = !{!55, !3, i64 8}
!57 = !{!58, !3, i64 32}
!58 = !{!"LClosure", !3, i64 0, !4, i64 8, !4, i64 9, !4, i64 10, !4, i64 11, !3, i64 16, !3, i64 24, !3, i64 32, !4, i64 40}
!59 = !{!2, !4, i64 10}
!60 = !{!19, !4, i64 33}
!61 = !{!19, !6, i64 144}
!62 = !{!19, !6, i64 148}
!63 = !{!19, !3, i64 24}
!64 = !{!19, !3, i64 16}
!65 = !{!66, !6, i64 72}
!66 = !{!"Proto", !3, i64 0, !4, i64 8, !4, i64 9, !3, i64 16, !3, i64 24, !3, i64 32, !3, i64 40, !3, i64 48, !3, i64 56, !3, i64 64, !6, i64 72, !6, i64 76, !6, i64 80, !6, i64 84, !6, i64 88, !6, i64 92, !6, i64 96, !6, i64 100, !3, i64 104, !4, i64 112, !4, i64 113, !4, i64 114, !4, i64 115}
!67 = !{!22, !3, i64 16}
!68 = !{!66, !3, i64 56}
!69 = !{!70, !3, i64 16}
!70 = !{!"lua_Debug", !6, i64 0, !3, i64 8, !3, i64 16, !3, i64 24, !3, i64 32, !6, i64 40, !6, i64 44, !6, i64 48, !6, i64 52, !4, i64 56, !6, i64 116}
!71 = !{!70, !3, i64 8}
!72 = !{!70, !6, i64 40}
!73 = !{!74, !3, i64 0}
!74 = !{!"luaL_Reg", !3, i64 0, !3, i64 8}
!75 = !{!74, !3, i64 8}
!76 = !{!4, !4, i64 0}
!77 = !{!78, !3, i64 16}
!78 = !{!"luaL_Buffer", !3, i64 0, !6, i64 8, !3, i64 16, !4, i64 24}
!79 = !{!78, !3, i64 0}
!80 = !{!78, !6, i64 8}
!81 = !{!82, !6, i64 0}
!82 = !{!"LoadF", !6, i64 0, !3, i64 8, !4, i64 16}
!83 = !{!82, !3, i64 8}
!84 = !{!85, !3, i64 0}
!85 = !{!"LoadS", !3, i64 0, !9, i64 8}
!86 = !{!85, !9, i64 8}
!87 = !{!7, !7, i64 0}
!88 = !{!89, !6, i64 48}
!89 = !{!"FuncState", !3, i64 0, !3, i64 8, !3, i64 16, !3, i64 24, !3, i64 32, !3, i64 40, !6, i64 48, !6, i64 52, !6, i64 56, !6, i64 60, !6, i64 64, !6, i64 68, !7, i64 72, !4, i64 74, !4, i64 75, !4, i64 196}
!90 = !{!89, !6, i64 52}
!91 = !{!89, !4, i64 74}
!92 = !{!89, !3, i64 0}
!93 = !{!66, !3, i64 24}
!94 = !{!89, !3, i64 24}
!95 = !{!96, !6, i64 8}
!96 = !{!"LexState", !6, i64 0, !6, i64 4, !6, i64 8, !97, i64 16, !97, i64 32, !3, i64 48, !3, i64 56, !3, i64 64, !3, i64 72, !3, i64 80, !4, i64 88}
!97 = !{!"Token", !6, i64 0, !4, i64 8}
!98 = !{!89, !6, i64 56}
!99 = !{!89, !6, i64 60}
!100 = !{!66, !4, i64 115}
!101 = !{!102, !4, i64 0}
!102 = !{!"expdesc", !4, i64 0, !4, i64 8, !6, i64 16, !6, i64 20}
!103 = !{!104, !6, i64 0}
!104 = !{!"", !6, i64 0, !6, i64 4}
!105 = !{!104, !6, i64 4}
!106 = !{!102, !6, i64 16}
!107 = !{!102, !6, i64 20}
!108 = !{!89, !6, i64 64}
!109 = !{!89, !3, i64 8}
!110 = !{i64 0, i64 4, !76, i64 8, i64 4, !38, i64 12, i64 4, !38, i64 8, i64 8, !36, i64 16, i64 4, !38, i64 20, i64 4, !38}
!111 = !{!66, !3, i64 40}
!112 = !{!66, !6, i64 80}
!113 = !{!89, !3, i64 32}
!114 = !{!66, !6, i64 84}
!115 = !{!66, !6, i64 76}
!116 = !{!66, !3, i64 16}
!117 = distinct !{!117, !27}
!118 = !{!70, !3, i64 32}
!119 = !{!70, !6, i64 48}
!120 = !{!70, !6, i64 52}
!121 = !{!70, !3, i64 24}
!122 = !{!70, !6, i64 44}
!123 = !{!70, !6, i64 0}
!124 = !{!2, !3, i64 112}
!125 = !{!2, !6, i64 104}
!126 = !{!2, !6, i64 108}
!127 = !{!2, !4, i64 100}
!128 = !{!15, !6, i64 36}
!129 = !{!70, !6, i64 116}
!130 = !{!15, !3, i64 24}
!131 = !{!2, !3, i64 48}
!132 = !{!15, !3, i64 0}
!133 = !{!66, !3, i64 64}
!134 = !{!66, !6, i64 100}
!135 = !{!2, !9, i64 176}
!136 = !{!66, !4, i64 113}
!137 = !{!66, !4, i64 114}
!138 = !{!66, !4, i64 112}
!139 = !{!66, !6, i64 88}
!140 = !{!66, !3, i64 32}
!141 = !{!2, !3, i64 168}
!142 = !{!143, !6, i64 208}
!143 = !{!"lua_longjmp", !3, i64 0, !4, i64 8, !6, i64 208}
!144 = !{!2, !7, i64 98}
!145 = !{!2, !4, i64 101}
!146 = !{!2, !6, i64 92}
!147 = !{!2, !3, i64 72}
!148 = !{!143, !3, i64 0}
!149 = !{!2, !6, i64 88}
!150 = !{!58, !4, i64 10}
!151 = distinct !{!151, !27}
!152 = !{!15, !6, i64 32}
!153 = distinct !{!153, !27}
!154 = !{!155, !3, i64 0}
!155 = !{!"SParser", !3, i64 0, !21, i64 8, !3, i64 32}
!156 = !{!155, !3, i64 32}
!157 = !{!21, !3, i64 0}
!158 = !{!21, !9, i64 16}
!159 = !{!160, !3, i64 0}
!160 = !{!"", !3, i64 0, !3, i64 8, !3, i64 16, !6, i64 24, !6, i64 28}
!161 = !{!160, !3, i64 8}
!162 = !{!160, !3, i64 16}
!163 = !{!160, !6, i64 24}
!164 = !{!160, !6, i64 28}
!165 = !{!66, !6, i64 96}
!166 = !{!66, !6, i64 92}
!167 = !{!66, !3, i64 48}
!168 = !{!169, !3, i64 0}
!169 = !{!"LocVar", !3, i64 0, !6, i64 8, !6, i64 12}
!170 = !{!169, !6, i64 8}
!171 = !{!169, !6, i64 12}
!172 = !{!58, !3, i64 24}
!173 = !{!58, !4, i64 11}
!174 = distinct !{!174, !175, !176}
!175 = !{!"llvm.loop.vectorize.width", i32 1}
!176 = !{!"llvm.loop.interleave.count", i32 1}
!177 = distinct !{!177, !178, !175, !176}
!178 = !{!"llvm.loop.unroll.runtime.disable"}
!179 = !{!19, !4, i64 32}
!180 = !{!22, !4, i64 8}
!181 = !{!22, !4, i64 9}
!182 = !{!22, !3, i64 0}
!183 = !{!184, !3, i64 0}
!184 = !{!"", !3, i64 0, !3, i64 8}
!185 = !{!184, !3, i64 8}
!186 = !{!2, !3, i64 152}
!187 = !{!48, !4, i64 10}
!188 = !{!43, !4, i64 9}
!189 = !{!34, !3, i64 0}
!190 = !{!19, !3, i64 80}
!191 = !{!19, !6, i64 12}
!192 = !{!19, !3, i64 0}
!193 = !{!19, !9, i64 136}
!194 = !{!19, !9, i64 128}
!195 = !{!19, !6, i64 36}
!196 = !{!19, !3, i64 48}
!197 = !{!19, !3, i64 64}
!198 = !{!48, !3, i64 48}
!199 = !{!19, !3, i64 40}
!200 = !{!34, !4, i64 8}
!201 = !{!43, !3, i64 0}
!202 = !{!2, !3, i64 0}
!203 = !{!19, !6, i64 8}
!204 = !{!19, !3, i64 56}
!205 = !{!19, !3, i64 72}
!206 = !{!48, !6, i64 56}
!207 = !{!48, !4, i64 9}
!208 = !{!48, !3, i64 24}
!209 = !{!41, !4, i64 9}
!210 = !{!48, !4, i64 11}
!211 = !{!48, !3, i64 32}
!212 = !{!213, !6, i64 8}
!213 = !{!"", !4, i64 0, !6, i64 8, !3, i64 16}
!214 = !{!30, !3, i64 16}
!215 = !{!2, !3, i64 160}
!216 = !{!66, !3, i64 104}
!217 = !{!41, !4, i64 10}
!218 = !{!96, !3, i64 56}
!219 = !{!96, !3, i64 80}
!220 = !{!96, !6, i64 4}
!221 = !{!96, !3, i64 72}
!222 = !{!21, !9, i64 8}
!223 = !{!96, !6, i64 16}
!224 = !{!96, !3, i64 48}
!225 = !{!96, !4, i64 88}
!226 = !{!96, !6, i64 32}
!227 = !{!96, !3, i64 64}
!228 = !{!229, !9, i64 0}
!229 = !{!"Zio", !9, i64 0, !3, i64 8, !3, i64 16, !3, i64 24, !3, i64 32}
!230 = !{!229, !3, i64 8}
!231 = !{!96, !6, i64 0}
!232 = !{i64 0, i64 4, !38, i64 8, i64 8, !36, i64 8, i64 8, !25}
!233 = !{!234, !3, i64 0}
!234 = !{!"lconv", !3, i64 0, !3, i64 8, !3, i64 16, !3, i64 24, !3, i64 32, !3, i64 40, !3, i64 48, !3, i64 56, !3, i64 64, !3, i64 72, !4, i64 80, !4, i64 81, !4, i64 82, !4, i64 83, !4, i64 84, !4, i64 85, !4, i64 86, !4, i64 87, !4, i64 88, !4, i64 89, !4, i64 90, !4, i64 91, !4, i64 92, !4, i64 93}
!235 = !{!236, !6, i64 0}
!236 = !{!"tm", !6, i64 0, !6, i64 4, !6, i64 8, !6, i64 12, !6, i64 16, !6, i64 20, !6, i64 24, !6, i64 28, !6, i64 32, !9, i64 40, !3, i64 48}
!237 = !{!236, !6, i64 4}
!238 = !{!236, !6, i64 8}
!239 = !{!236, !6, i64 12}
!240 = !{!236, !6, i64 16}
!241 = !{!236, !6, i64 20}
!242 = !{!236, !6, i64 24}
!243 = !{!236, !6, i64 28}
!244 = !{!236, !6, i64 32}
!245 = !{!89, !3, i64 16}
!246 = !{!89, !3, i64 40}
!247 = !{!248, !6, i64 8}
!248 = !{!"BlockCnt", !3, i64 0, !6, i64 8, !4, i64 12, !4, i64 13, !4, i64 14}
!249 = !{!248, !4, i64 14}
!250 = !{!248, !4, i64 12}
!251 = !{!248, !4, i64 13}
!252 = !{!248, !3, i64 0}
!253 = !{!254, !4, i64 8}
!254 = !{!"LHS_assign", !3, i64 0, !102, i64 8}
!255 = !{!254, !3, i64 0}
!256 = !{!89, !6, i64 68}
!257 = !{!89, !7, i64 72}
!258 = !{!259, !4, i64 0}
!259 = !{!"", !4, i64 0, !4, i64 1}
!260 = !{!259, !4, i64 1}
!261 = distinct !{!261, !27}
!262 = !{!263, !4, i64 0}
!263 = !{!"upvaldesc", !4, i64 0, !4, i64 1}
!264 = !{!263, !4, i64 1}
!265 = distinct !{!265, !27}
!266 = distinct !{!266, !27}
!267 = !{!268, !6, i64 40}
!268 = !{!"ConsControl", !102, i64 0, !3, i64 24, !6, i64 32, !6, i64 36, !6, i64 40}
!269 = !{!268, !6, i64 32}
!270 = !{!268, !6, i64 36}
!271 = !{!268, !3, i64 24}
!272 = !{!268, !4, i64 0}
!273 = !{!2, !4, i64 8}
!274 = !{!2, !4, i64 9}
!275 = !{!20, !6, i64 12}
!276 = !{!20, !3, i64 0}
!277 = !{!41, !6, i64 12}
!278 = !{!41, !4, i64 8}
!279 = !{!41, !3, i64 0}
!280 = !{!20, !6, i64 8}
!281 = !{!43, !4, i64 8}
!282 = !{!283, !3, i64 16}
!283 = !{!"MatchState", !3, i64 0, !3, i64 8, !3, i64 16, !6, i64 24, !4, i64 32}
!284 = !{!283, !3, i64 0}
!285 = !{!283, !3, i64 8}
!286 = !{!283, !6, i64 24}
!287 = !{!288, !9, i64 8}
!288 = !{!"", !3, i64 0, !9, i64 8}
!289 = !{!288, !3, i64 0}
!290 = !{!213, !3, i64 16}
!291 = distinct !{!291, !27}
!292 = distinct !{!292, !27}
!293 = !{!48, !3, i64 40}
!294 = !{i64 0, i64 8, !25, i64 0, i64 8, !25, i64 0, i64 8, !36, i64 0, i64 4, !38, i64 8, i64 4, !38, i64 16, i64 8, !25, i64 16, i64 8, !25, i64 16, i64 8, !36, i64 16, i64 4, !38, i64 24, i64 4, !38, i64 32, i64 8, !25, i64 16, i64 8, !25, i64 16, i64 8, !25, i64 16, i64 8, !36, i64 16, i64 4, !38, i64 24, i64 4, !38}
!295 = !{!296, !6, i64 0}
!296 = !{!"Smain", !6, i64 0, !3, i64 8, !6, i64 16}
!297 = !{!296, !3, i64 8}
!298 = !{!296, !6, i64 16}
!299 = !{!300, !3, i64 24}
!300 = !{!"", !3, i64 0, !3, i64 8, !3, i64 16, !3, i64 24}
!301 = !{!300, !3, i64 0}
!302 = !{!300, !3, i64 8}
!303 = !{!300, !3, i64 16}
!304 = distinct !{!304, !27}
!305 = distinct !{!305, !27}
!306 = distinct !{!306, !27}
!307 = distinct !{!307, !27}
!308 = !{!229, !3, i64 32}
!309 = !{!229, !3, i64 16}
!310 = !{!229, !3, i64 24}
