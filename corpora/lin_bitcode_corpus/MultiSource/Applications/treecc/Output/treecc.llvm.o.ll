; ModuleID = 'treecc.llvm.o'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%struct.TreeCCNonVirtual = type { void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, %struct._tagTreeCCOperation*)*, void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, %struct._tagTreeCCOperation*)*, void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, %struct._tagTreeCCOperation*, i32)*, void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, i8*, i32, i32)*, void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, %struct._tagTreeCCNode*, i32)*, void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, i32)*, void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, %struct._tagTreeCCOperationCase*, i32)*, void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, %struct._tagTreeCCOperationCase*, i32, i32)*, void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, %struct._tagTreeCCOperationCase*, i32)*, void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, %struct._tagTreeCCOperationCase*, i32, i32)*, void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, i32)*, void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, i32)*, void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, %struct._tagTreeCCOperation*)*, void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, %struct._tagTreeCCOperation*)* }
%struct._tagTreeCCContext = type { [512 x %struct._tagTreeCCNode*], [512 x %struct._tagTreeCCOperation*], %struct.TreeCCInput*, %struct._tagTreeCCStream*, %struct._tagTreeCCStream*, %struct._tagTreeCCStream*, %struct._tagTreeCCStream*, %struct._tagTreeCCStream*, i16, i8*, i8*, i8*, i32, i32, i32, i8*, i8* }
%struct._tagTreeCCNode = type { %struct._tagTreeCCNode*, %struct._tagTreeCCNode*, %struct._tagTreeCCNode*, %struct._tagTreeCCNode*, i8*, i32, i32, i32, i8*, i64, %struct._tagTreeCCField*, %struct._tagTreeCCVirtual*, %struct._tagTreeCCNode*, %struct._tagTreeCCStream*, %struct._tagTreeCCStream* }
%struct._tagTreeCCField = type { i8*, i8*, i8*, i32, i8*, i64, %struct._tagTreeCCField* }
%struct._tagTreeCCVirtual = type { i8*, i8*, %struct._tagTreeCCParam*, %struct._tagTreeCCOperation*, %struct._tagTreeCCVirtual* }
%struct._tagTreeCCParam = type { i8*, i8*, i32, i32, %struct._tagTreeCCParam* }
%struct.TreeCCInput = type { i32, i8*, i8*, %struct._IO_FILE*, i8*, i64, i64, i32, i32, i32, i32, [1024 x i8] }
%struct._tagTreeCCStream = type { %struct._tagTreeCCContext*, i8*, i8*, i64, %struct._tagTreeCCStreamBuf*, %struct._tagTreeCCStreamBuf*, i32, i8, %struct._tagTreeCCStreamDefn*, %struct._tagTreeCCStreamDefn*, %struct._tagTreeCCStream* }
%struct._tagTreeCCStreamBuf = type { [2048 x i8], %struct._tagTreeCCStreamBuf* }
%struct._tagTreeCCStreamDefn = type { i8*, i8*, i64, i32, i32, %struct._tagTreeCCStreamDefn* }
%struct._tagTreeCCOperation = type { i8*, i8*, i8*, i8*, %struct._tagTreeCCParam*, i32, i32, i8*, i64, %struct._tagTreeCCOperation*, %struct._tagTreeCCOperationCase*, %struct._tagTreeCCOperationCase*, %struct._tagTreeCCOperationCase**, i32, %struct._tagTreeCCStream*, %struct._tagTreeCCStream* }
%struct._tagTreeCCOperationCase = type { %struct._tagTreeCCTrigger*, i8*, %struct._tagTreeCCOperation*, i32, i8*, i64, i8*, i64, %struct._tagTreeCCOperationCase*, %struct._tagTreeCCOperationCase* }
%struct._tagTreeCCTrigger = type { %struct._tagTreeCCNode*, %struct._tagTreeCCTrigger* }
%struct.anon = type { i8*, i32 }
%struct.anon.180 = type { i8*, i32 (%struct._tagTreeCCContext*, i8*, i32)*, i32 }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }

@.str = private unnamed_addr constant [3 x i8] c"yy\00", align 1
@.str.1 = private unnamed_addr constant [12 x i8] c"YYNODESTATE\00", align 1
@TreeCCErrorFile = global %struct._IO_FILE* null, align 8
@TreeCCErrorStripPath = global i32 0, align 4
@stdout = external global %struct._IO_FILE*, align 8
@stderr = external global %struct._IO_FILE*, align 8
@.str.3 = private unnamed_addr constant [11 x i8] c"line %ld: \00", align 1
@.str.1.4 = private unnamed_addr constant [3 x i8] c": \00", align 1
@.str.2 = private unnamed_addr constant [26 x i8] c"virtual memory exhausted\0A\00", align 1
@.str.3.5 = private unnamed_addr constant [6 x i8] c"%ld: \00", align 1
@TreeCCNonVirtualFuncsC = constant %struct.TreeCCNonVirtual { void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, %struct._tagTreeCCOperation*)* @C_GenStart, void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, %struct._tagTreeCCOperation*)* @C_GenEntry, void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, %struct._tagTreeCCOperation*, i32)* @C_GenSplitEntry, void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, i8*, i32, i32)* @C_GenSwitchHead, void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, %struct._tagTreeCCNode*, i32)* @C_GenSelector, void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, i32)* @C_GenEndSelectors, void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, %struct._tagTreeCCOperationCase*, i32)* @C_GenCaseFunc, void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, %struct._tagTreeCCOperationCase*, i32, i32)* @C_GenCaseCall, void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, %struct._tagTreeCCOperationCase*, i32)* @C_GenCaseInline, void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, %struct._tagTreeCCOperationCase*, i32, i32)* @C_GenCaseSplit, void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, i32)* @C_GenEndCase, void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, i32)* @C_GenEndSwitch, void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, %struct._tagTreeCCOperation*)* @C_GenExit, void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, %struct._tagTreeCCOperation*)* @C_GenEnd }, align 8
@.str.6 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.42 = private unnamed_addr constant [20 x i8] c"#ifdef __cplusplus\0A\00", align 1
@.str.43 = private unnamed_addr constant [14 x i8] c"extern \22C\22 {\0A\00", align 1
@.str.44 = private unnamed_addr constant [8 x i8] c"#endif\0A\00", align 1
@.str.1.7 = private unnamed_addr constant [12 x i8] c"c_gc_skel.h\00", align 1
@.str.2.8 = private unnamed_addr constant [9 x i8] c"c_skel.h\00", align 1
@.str.83 = private unnamed_addr constant [16 x i8] c"#ifndef %skind\0A\00", align 1
@.str.84 = private unnamed_addr constant [53 x i8] c"#define %skind(node__) ((node__)->vtable__->kind__)\0A\00", align 1
@.str.85 = private unnamed_addr constant [43 x i8] c"#define %skind(node__) ((node__)->kind__)\0A\00", align 1
@.str.86 = private unnamed_addr constant [9 x i8] c"#endif\0A\0A\00", align 1
@.str.87 = private unnamed_addr constant [20 x i8] c"#ifndef %skindname\0A\00", align 1
@.str.88 = private unnamed_addr constant [57 x i8] c"#define %skindname(node__) ((node__)->vtable__->name__)\0A\00", align 1
@.str.89 = private unnamed_addr constant [18 x i8] c"#ifndef %skindof\0A\00", align 1
@.str.90 = private unnamed_addr constant [42 x i8] c"#define %skindof(type__) (type__##_kind)\0A\00", align 1
@.str.91 = private unnamed_addr constant [15 x i8] c"#ifndef %sisa\0A\00", align 1
@.str.92 = private unnamed_addr constant [55 x i8] c"extern int %sisa__(const void *vtable__, int kind__);\0A\00", align 1
@.str.93 = private unnamed_addr constant [32 x i8] c"#define %sisa(node__,type__) \5C\0A\00", align 1
@.str.94 = private unnamed_addr constant [49 x i8] c"\09(%sisa__((node__)->vtable__, (type__##_kind)))\0A\00", align 1
@.str.95 = private unnamed_addr constant [23 x i8] c"#ifndef %sgetfilename\0A\00", align 1
@.str.96 = private unnamed_addr constant [54 x i8] c"#define %sgetfilename(node__) ((node__)->filename__)\0A\00", align 1
@.str.97 = private unnamed_addr constant [22 x i8] c"#ifndef %sgetlinenum\0A\00", align 1
@.str.98 = private unnamed_addr constant [52 x i8] c"#define %sgetlinenum(node__) ((node__)->linenum__)\0A\00", align 1
@.str.99 = private unnamed_addr constant [23 x i8] c"#ifndef %ssetfilename\0A\00", align 1
@.str.100 = private unnamed_addr constant [42 x i8] c"#define %ssetfilename(node__, value__) \5C\0A\00", align 1
@.str.101 = private unnamed_addr constant [37 x i8] c"\09((node__)->filename__ = (value__))\0A\00", align 1
@.str.102 = private unnamed_addr constant [22 x i8] c"#ifndef %ssetlinenum\0A\00", align 1
@.str.103 = private unnamed_addr constant [41 x i8] c"#define %ssetlinenum(node__, value__) \5C\0A\00", align 1
@.str.104 = private unnamed_addr constant [36 x i8] c"\09((node__)->linenum__ = (value__))\0A\00", align 1
@.str.105 = private unnamed_addr constant [31 x i8] c"#ifndef %stracklines_declared\0A\00", align 1
@.str.106 = private unnamed_addr constant [29 x i8] c"extern char *%scurrfilename(\00", align 1
@.str.81 = private unnamed_addr constant [12 x i8] c"%s *state__\00", align 1
@.str.11 = private unnamed_addr constant [5 x i8] c"void\00", align 1
@.str.34 = private unnamed_addr constant [4 x i8] c");\0A\00", align 1
@.str.107 = private unnamed_addr constant [27 x i8] c"extern long %scurrlinenum(\00", align 1
@.str.108 = private unnamed_addr constant [33 x i8] c"#define %stracklines_declared 1\0A\00", align 1
@.str.109 = private unnamed_addr constant [28 x i8] c"#ifndef %snodeops_declared\0A\00", align 1
@.str.110 = private unnamed_addr constant [24 x i8] c"extern void %snodeinit(\00", align 1
@.str.111 = private unnamed_addr constant [26 x i8] c"extern void *%snodealloc(\00", align 1
@.str.112 = private unnamed_addr constant [14 x i8] c"%s *state__, \00", align 1
@.str.113 = private unnamed_addr constant [20 x i8] c"unsigned int size__\00", align 1
@.str.114 = private unnamed_addr constant [23 x i8] c"extern int %snodepush(\00", align 1
@.str.115 = private unnamed_addr constant [23 x i8] c"extern void %snodepop(\00", align 1
@.str.116 = private unnamed_addr constant [25 x i8] c"extern void %snodeclear(\00", align 1
@.str.117 = private unnamed_addr constant [26 x i8] c"extern void %snodefailed(\00", align 1
@.str.118 = private unnamed_addr constant [30 x i8] c"#define %snodeops_declared 1\0A\00", align 1
@.str.57 = private unnamed_addr constant [22 x i8] c"struct %s_vtable__ {\0A\00", align 1
@.str.58 = private unnamed_addr constant [38 x i8] c"\09const struct %s_vtable__ *parent__;\0A\00", align 1
@.str.53 = private unnamed_addr constant [14 x i8] c"\09int kind__;\0A\00", align 1
@.str.56 = private unnamed_addr constant [5 x i8] c"};\0A\0A\00", align 1
@.str.150 = private unnamed_addr constant [47 x i8] c"int %sisa__(const void *vtable__, int kind__)\0A\00", align 1
@.str.13 = private unnamed_addr constant [3 x i8] c"{\0A\00", align 1
@.str.151 = private unnamed_addr constant [32 x i8] c"\09const struct %s_vtable__ *vt;\0A\00", align 1
@.str.152 = private unnamed_addr constant [45 x i8] c"\09vt = (const struct %s_vtable__ *)vtable__;\0A\00", align 1
@.str.153 = private unnamed_addr constant [19 x i8] c"\09while(vt != 0) {\0A\00", align 1
@.str.154 = private unnamed_addr constant [28 x i8] c"\09\09if(vt->kind__ == kind__)\0A\00", align 1
@.str.155 = private unnamed_addr constant [14 x i8] c"\09\09\09return 1;\0A\00", align 1
@.str.156 = private unnamed_addr constant [22 x i8] c"\09\09vt = vt->parent__;\0A\00", align 1
@.str.157 = private unnamed_addr constant [4 x i8] c"\09}\0A\00", align 1
@.str.40 = private unnamed_addr constant [12 x i8] c"\09return 0;\0A\00", align 1
@.str.41 = private unnamed_addr constant [4 x i8] c"}\0A\0A\00", align 1
@.str.158 = private unnamed_addr constant [4 x i8] c"};\0A\00", align 1
@.str.39 = private unnamed_addr constant [15 x i8] c"\09return (%s);\0A\00", align 1
@.str.18 = private unnamed_addr constant [5 x i8] c"\09\09\09\09\00", align 1
@.str.19 = private unnamed_addr constant [2 x i8] c"\09\00", align 1
@.str.20 = private unnamed_addr constant [3 x i8] c"\09\09\00", align 1
@.str.21 = private unnamed_addr constant [4 x i8] c"\09\09\09\00", align 1
@.str.38 = private unnamed_addr constant [17 x i8] c"default: break;\0A\00", align 1
@.str.30 = private unnamed_addr constant [3 x i8] c"}\0A\00", align 1
@.str.37 = private unnamed_addr constant [9 x i8] c"break;\0A\0A\00", align 1
@.str.31 = private unnamed_addr constant [8 x i8] c"return \00", align 1
@.str.36 = private unnamed_addr constant [15 x i8] c"%s_split_%d__(\00", align 1
@.str.6.9 = private unnamed_addr constant [3 x i8] c", \00", align 1
@.str.33 = private unnamed_addr constant [7 x i8] c"(%s *)\00", align 1
@.str.8 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.9 = private unnamed_addr constant [6 x i8] c"P%d__\00", align 1
@.str.10 = private unnamed_addr constant [3 x i8] c"__\00", align 1
@.str.35 = private unnamed_addr constant [22 x i8] c"%s *%s = (%s *)%s__;\0A\00", align 1
@.str.29 = private unnamed_addr constant [2 x i8] c"{\00", align 1
@.str.32 = private unnamed_addr constant [9 x i8] c"%s_%d__(\00", align 1
@.str.24 = private unnamed_addr constant [19 x i8] c"static %s %s_%d__(\00", align 1
@.str.25 = private unnamed_addr constant [2 x i8] c"*\00", align 1
@.str.26 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.27 = private unnamed_addr constant [8 x i8] c"%s %s%s\00", align 1
@.str.28 = private unnamed_addr constant [11 x i8] c"%s %sP%d__\00", align 1
@.str.12 = private unnamed_addr constant [3 x i8] c")\0A\00", align 1
@.str.22 = private unnamed_addr constant [10 x i8] c"case %s:\0A\00", align 1
@.str.23 = private unnamed_addr constant [15 x i8] c"case %s_kind:\0A\00", align 1
@.str.14 = private unnamed_addr constant [12 x i8] c"switch(%s)\0A\00", align 1
@.str.15 = private unnamed_addr constant [32 x i8] c"switch(%s__->vtable__->kind__)\0A\00", align 1
@.str.16 = private unnamed_addr constant [22 x i8] c"switch(%s__->kind__)\0A\00", align 1
@.str.17 = private unnamed_addr constant [25 x i8] c"switch(%s__->getKind())\0A\00", align 1
@.str.3.10 = private unnamed_addr constant [18 x i8] c"%s %s_split_%d__(\00", align 1
@.str.4 = private unnamed_addr constant [7 x i8] c"%s %s(\00", align 1
@.str.5 = private unnamed_addr constant [11 x i8] c"%s %s::%s(\00", align 1
@.str.7 = private unnamed_addr constant [4 x i8] c"%s \00", align 1
@.str.133 = private unnamed_addr constant [15 x i8] c"%s *%s_create(\00", align 1
@.str.134 = private unnamed_addr constant [36 x i8] c"\09static struct %s__ instance__ = {\0A\00", align 1
@.str.135 = private unnamed_addr constant [13 x i8] c"\09\09&%s_vt__,\0A\00", align 1
@.str.136 = private unnamed_addr constant [11 x i8] c"\09\09%s_kind\0A\00", align 1
@.str.137 = private unnamed_addr constant [5 x i8] c"\09};\0A\00", align 1
@.str.138 = private unnamed_addr constant [28 x i8] c"\09return (%s *)&instance__;\0A\00", align 1
@.str.139 = private unnamed_addr constant [64 x i8] c"\09%s *node__ = (%s *)%snodealloc(state__, sizeof(struct %s__));\0A\00", align 1
@.str.140 = private unnamed_addr constant [55 x i8] c"\09%s *node__ = (%s *)%snodealloc(sizeof(struct %s__));\0A\00", align 1
@.str.141 = private unnamed_addr constant [28 x i8] c"\09if(node__ == 0) return 0;\0A\00", align 1
@.str.142 = private unnamed_addr constant [31 x i8] c"\09node__->vtable__ = &%s_vt__;\0A\00", align 1
@.str.143 = private unnamed_addr constant [28 x i8] c"\09node__->kind__ = %s_kind;\0A\00", align 1
@.str.144 = private unnamed_addr constant [48 x i8] c"\09node__->filename__ = %scurrfilename(state__);\0A\00", align 1
@.str.145 = private unnamed_addr constant [46 x i8] c"\09node__->linenum__ = %scurrlinenum(state__);\0A\00", align 1
@.str.146 = private unnamed_addr constant [41 x i8] c"\09node__->filename__ = %scurrfilename();\0A\00", align 1
@.str.147 = private unnamed_addr constant [39 x i8] c"\09node__->linenum__ = %scurrlinenum();\0A\00", align 1
@.str.148 = private unnamed_addr constant [23 x i8] c"\09return (%s *)node__;\0A\00", align 1
@.str.149 = private unnamed_addr constant [19 x i8] c"\09node__->%s = %s;\0A\00", align 1
@.str.76 = private unnamed_addr constant [6 x i8] c"%s %s\00", align 1
@.str.124 = private unnamed_addr constant [38 x i8] c"struct %s_vtable__ const %s_vt__ = {\0A\00", align 1
@.str.125 = private unnamed_addr constant [12 x i8] c"\09&%s_vt__,\0A\00", align 1
@.str.126 = private unnamed_addr constant [5 x i8] c"\090,\0A\00", align 1
@.str.127 = private unnamed_addr constant [11 x i8] c"\09%s_kind,\0A\00", align 1
@.str.128 = private unnamed_addr constant [8 x i8] c"\09\22%s\22,\0A\00", align 1
@.str.130 = private unnamed_addr constant [20 x i8] c"\09(%s (*)(%s *this__\00", align 1
@.str.64 = private unnamed_addr constant [8 x i8] c", %s %s\00", align 1
@.str.65 = private unnamed_addr constant [11 x i8] c", %s P%d__\00", align 1
@.str.131 = private unnamed_addr constant [12 x i8] c"))%s_%s__,\0A\00", align 1
@.str.132 = private unnamed_addr constant [6 x i8] c"))0,\0A\00", align 1
@.str.129 = private unnamed_addr constant [12 x i8] c"%s %s_%s__(\00", align 1
@.str.78 = private unnamed_addr constant [7 x i8] c"%s *%s\00", align 1
@.str.79 = private unnamed_addr constant [10 x i8] c"%s *P%d__\00", align 1
@.str.77 = private unnamed_addr constant [9 x i8] c"%s P%d__\00", align 1
@.str.119 = private unnamed_addr constant [22 x i8] c"#define %s_BLKSIZ %d\0A\00", align 1
@.str.120 = private unnamed_addr constant [24 x i8] c"#define %s_REENTRANT 1\0A\00", align 1
@.str.121 = private unnamed_addr constant [26 x i8] c"#define %s_TRACK_LINES 1\0A\00", align 1
@.str.122 = private unnamed_addr constant [12 x i8] c"c_gc_skel.c\00", align 1
@.str.123 = private unnamed_addr constant [9 x i8] c"c_skel.c\00", align 1
@.str.82 = private unnamed_addr constant [14 x i8] c"extern %s %s(\00", align 1
@.str.80 = private unnamed_addr constant [22 x i8] c"extern %s *%s_create(\00", align 1
@.str.51 = private unnamed_addr constant [15 x i8] c"struct %s__ {\0A\00", align 1
@.str.52 = private unnamed_addr constant [38 x i8] c"\09const struct %s_vtable__ *vtable__;\0A\00", align 1
@.str.54 = private unnamed_addr constant [20 x i8] c"\09char *filename__;\0A\00", align 1
@.str.55 = private unnamed_addr constant [18 x i8] c"\09long linenum__;\0A\00", align 1
@.str.59 = private unnamed_addr constant [24 x i8] c"\09const void *parent__;\0A\00", align 1
@.str.60 = private unnamed_addr constant [22 x i8] c"\09const char *name__;\0A\00", align 1
@.str.61 = private unnamed_addr constant [43 x i8] c"extern struct %s_vtable__ const %s_vt__;\0A\0A\00", align 1
@.str.66 = private unnamed_addr constant [18 x i8] c"#define %s(this__\00", align 1
@.str.67 = private unnamed_addr constant [4 x i8] c",%s\00", align 1
@.str.68 = private unnamed_addr constant [7 x i8] c",P%d__\00", align 1
@.str.69 = private unnamed_addr constant [5 x i8] c") \5C\0A\00", align 1
@.str.70 = private unnamed_addr constant [63 x i8] c"\09((*(((struct %s_vtable__ *)((this__)->vtable__))->%s_v__)) \5C\0A\00", align 1
@.str.71 = private unnamed_addr constant [18 x i8] c"\09\09((%s *)(this__)\00", align 1
@.str.72 = private unnamed_addr constant [7 x i8] c", (%s)\00", align 1
@.str.73 = private unnamed_addr constant [10 x i8] c", (P%d__)\00", align 1
@.str.74 = private unnamed_addr constant [5 x i8] c"))\0A\0A\00", align 1
@.str.75 = private unnamed_addr constant [19 x i8] c"extern %s %s_%s__(\00", align 1
@.str.63 = private unnamed_addr constant [25 x i8] c"\09%s (*%s_v__)(%s *this__\00", align 1
@.str.62 = private unnamed_addr constant [9 x i8] c"\09%s %s;\0A\00", align 1
@.str.46 = private unnamed_addr constant [15 x i8] c"typedef enum {\00", align 1
@.str.47 = private unnamed_addr constant [6 x i8] c"%s\09%s\00", align 1
@.str.48 = private unnamed_addr constant [3 x i8] c",\0A\00", align 1
@.str.49 = private unnamed_addr constant [9 x i8] c"\0A} %s;\0A\0A\00", align 1
@.str.50 = private unnamed_addr constant [25 x i8] c"typedef struct %s__ %s;\0A\00", align 1
@.str.45 = private unnamed_addr constant [20 x i8] c"#define %s_kind %d\0A\00", align 1
@.str.159 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.1.160 = private unnamed_addr constant [16 x i8] c"#include <new>\0A\00", align 1
@.str.2.161 = private unnamed_addr constant [17 x i8] c"namespace %s\0A{\0A\0A\00", align 1
@.str.105.166 = private unnamed_addr constant [3 x i8] c"}\0A\00", align 1
@.str.79.167 = private unnamed_addr constant [39 x i8] c"void *%s::operator new(size_t size__)\0A\00", align 1
@.str.62.168 = private unnamed_addr constant [3 x i8] c"{\0A\00", align 1
@.str.80.169 = private unnamed_addr constant [40 x i8] c"\09return %s::getState()->alloc(size__);\0A\00", align 1
@.str.77.170 = private unnamed_addr constant [4 x i8] c"}\0A\0A\00", align 1
@.str.81.171 = private unnamed_addr constant [54 x i8] c"void %s::operator delete(void *ptr__, size_t size__)\0A\00", align 1
@.str.82.172 = private unnamed_addr constant [42 x i8] c"\09%s::getState()->dealloc(ptr__, size__);\0A\00", align 1
@.str.93.173 = private unnamed_addr constant [8 x i8] c"%s::%s(\00", align 1
@.str.53.174 = private unnamed_addr constant [12 x i8] c"%s *state__\00", align 1
@.str.73.176 = private unnamed_addr constant [3 x i8] c")\0A\00", align 1
@.str.94.177 = private unnamed_addr constant [7 x i8] c"\09: %s(\00", align 1
@.str.95.178 = private unnamed_addr constant [8 x i8] c"state__\00", align 1
@.str.96.179 = private unnamed_addr constant [26 x i8] c"\09this->kind__ = %s_kind;\0A\00", align 1
@.str.97.180 = private unnamed_addr constant [46 x i8] c"\09this->filename__ = state__->currFilename();\0A\00", align 1
@.str.98.181 = private unnamed_addr constant [44 x i8] c"\09this->linenum__ = state__->currLinenum();\0A\00", align 1
@.str.99.182 = private unnamed_addr constant [53 x i8] c"\09this->filename__ = %s::getState()->currFilename();\0A\00", align 1
@.str.100.183 = private unnamed_addr constant [51 x i8] c"\09this->linenum__ = %s::getState()->currLinenum();\0A\00", align 1
@.str.101.184 = private unnamed_addr constant [17 x i8] c"\09this->%s = %s;\0A\00", align 1
@.str.83.185 = private unnamed_addr constant [11 x i8] c"%s::~%s()\0A\00", align 1
@.str.84.186 = private unnamed_addr constant [14 x i8] c"\09// not used\0A\00", align 1
@.str.85.187 = private unnamed_addr constant [29 x i8] c"int %s::isA(int kind) const\0A\00", align 1
@.str.86.188 = private unnamed_addr constant [22 x i8] c"\09if(kind == %s_kind)\0A\00", align 1
@.str.87.189 = private unnamed_addr constant [13 x i8] c"\09\09return 1;\0A\00", align 1
@.str.88.190 = private unnamed_addr constant [7 x i8] c"\09else\0A\00", align 1
@.str.89.191 = private unnamed_addr constant [25 x i8] c"\09\09return %s::isA(kind);\0A\00", align 1
@.str.90.192 = private unnamed_addr constant [13 x i8] c"\09\09return 0;\0A\00", align 1
@.str.91.193 = private unnamed_addr constant [37 x i8] c"const char *%s::getKindName() const\0A\00", align 1
@.str.92.194 = private unnamed_addr constant [15 x i8] c"\09return \22%s\22;\0A\00", align 1
@.str.102.195 = private unnamed_addr constant [11 x i8] c"%s %s::%s(\00", align 1
@.str.35.196 = private unnamed_addr constant [3 x i8] c", \00", align 1
@.str.36.197 = private unnamed_addr constant [6 x i8] c"%s %s\00", align 1
@.str.60.198 = private unnamed_addr constant [9 x i8] c"%s P%d__\00", align 1
@.str.103.199 = private unnamed_addr constant [5 x i8] c"this\00", align 1
@.str.104.200 = private unnamed_addr constant [2 x i8] c"{\00", align 1
@.str.106.201 = private unnamed_addr constant [19 x i8] c"{\0A\09%s *%s = this;\0A\00", align 1
@.str.107.202 = private unnamed_addr constant [3 x i8] c"\09{\00", align 1
@.str.78.203 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.66.204 = private unnamed_addr constant [22 x i8] c"#define %s_BLKSIZ %d\0A\00", align 1
@.str.67.205 = private unnamed_addr constant [24 x i8] c"#define %s_REENTRANT 1\0A\00", align 1
@.str.68.206 = private unnamed_addr constant [26 x i8] c"#define %s_TRACK_LINES 1\0A\00", align 1
@.str.69.207 = private unnamed_addr constant [28 x i8] c"#define %s_USE_ALLOCATOR 1\0A\00", align 1
@.str.70.208 = private unnamed_addr constant [15 x i8] c"cpp_gc_skel.cc\00", align 1
@.str.71.209 = private unnamed_addr constant [12 x i8] c"cpp_skel.cc\00", align 1
@.str.72.211 = private unnamed_addr constant [18 x i8] c"%s *%s::%sCreate(\00", align 1
@.str.74.212 = private unnamed_addr constant [41 x i8] c"\09void *buf__ = this->alloc(sizeof(%s));\0A\00", align 1
@.str.75.213 = private unnamed_addr constant [27 x i8] c"\09if(buf__ == 0) return 0;\0A\00", align 1
@.str.76.214 = private unnamed_addr constant [28 x i8] c"\09return new (buf__) %s(this\00", align 1
@.str.34.215 = private unnamed_addr constant [4 x i8] c");\0A\00", align 1
@.str.61.216 = private unnamed_addr constant [10 x i8] c"class %s\0A\00", align 1
@.str.9.217 = private unnamed_addr constant [10 x i8] c"public:\0A\0A\00", align 1
@.str.63.218 = private unnamed_addr constant [9 x i8] c"\09static \00", align 1
@.str.64.219 = private unnamed_addr constant [7 x i8] c"%s %s(\00", align 1
@.str.65.220 = private unnamed_addr constant [5 x i8] c"void\00", align 1
@.str.57.221 = private unnamed_addr constant [5 x i8] c"};\0A\0A\00", align 1
@.str.37.222 = private unnamed_addr constant [24 x i8] c"class %s : public %s\0A{\0A\00", align 1
@.str.8.223 = private unnamed_addr constant [12 x i8] c"class %s\0A{\0A\00", align 1
@.str.38.224 = private unnamed_addr constant [13 x i8] c"protected:\0A\0A\00", align 1
@.str.39.225 = private unnamed_addr constant [14 x i8] c"\09int kind__;\0A\00", align 1
@.str.40.226 = private unnamed_addr constant [20 x i8] c"\09char *filename__;\0A\00", align 1
@.str.41.227 = private unnamed_addr constant [18 x i8] c"\09long linenum__;\0A\00", align 1
@.str.42.228 = private unnamed_addr constant [11 x i8] c"\0Apublic:\0A\0A\00", align 1
@.str.43.229 = private unnamed_addr constant [41 x i8] c"\09int getKind() const { return kind__; }\0A\00", align 1
@.str.44.230 = private unnamed_addr constant [57 x i8] c"\09const char *getFilename() const { return filename__; }\0A\00", align 1
@.str.45.231 = private unnamed_addr constant [48 x i8] c"\09long getLinenum() const { return linenum__; }\0A\00", align 1
@.str.46.232 = private unnamed_addr constant [62 x i8] c"\09void setFilename(char *filename) { filename__ = filename; }\0A\00", align 1
@.str.47.233 = private unnamed_addr constant [57 x i8] c"\09void setLinenum(long linenum) { linenum__ = linenum; }\0A\00", align 1
@.str.48.234 = private unnamed_addr constant [30 x i8] c"\09void *operator new(size_t);\0A\00", align 1
@.str.49.235 = private unnamed_addr constant [41 x i8] c"\09void operator delete(void *, size_t);\0A\0A\00", align 1
@.str.50.236 = private unnamed_addr constant [33 x i8] c"public: // for virtual factory\0A\0A\00", align 1
@.str.51.237 = private unnamed_addr constant [20 x i8] c"\09friend class %s;\0A\0A\00", align 1
@.str.52.238 = private unnamed_addr constant [5 x i8] c"\09%s(\00", align 1
@.str.54.240 = private unnamed_addr constant [5 x i8] c");\0A\0A\00", align 1
@.str.58.241 = private unnamed_addr constant [9 x i8] c"\09%s %s;\0A\00", align 1
@.str.55.243 = private unnamed_addr constant [35 x i8] c"\09virtual int isA(int kind) const;\0A\00", align 1
@.str.56.244 = private unnamed_addr constant [44 x i8] c"\09virtual const char *getKindName() const;\0A\0A\00", align 1
@.str.11.245 = private unnamed_addr constant [18 x i8] c"\09virtual ~%s();\0A\0A\00", align 1
@.str.59.246 = private unnamed_addr constant [16 x i8] c"\09virtual %s %s(\00", align 1
@.str.33.247 = private unnamed_addr constant [8 x i8] c") = 0;\0A\00", align 1
@.str.10.248 = private unnamed_addr constant [8 x i8] c"\09%s();\0A\00", align 1
@.str.12.249 = private unnamed_addr constant [14 x i8] c"cpp_gc_skel.h\00", align 1
@.str.13.250 = private unnamed_addr constant [11 x i8] c"cpp_skel.h\00", align 1
@.str.14.251 = private unnamed_addr constant [11 x i8] c"private:\0A\0A\00", align 1
@.str.15.252 = private unnamed_addr constant [23 x i8] c"\09static %s *state__;\0A\0A\00", align 1
@.str.16.253 = private unnamed_addr constant [24 x i8] c"\09static %s *getState()\0A\00", align 1
@.str.17.254 = private unnamed_addr constant [5 x i8] c"\09\09{\0A\00", align 1
@.str.18.255 = private unnamed_addr constant [32 x i8] c"\09\09\09if(state__) return state__;\0A\00", align 1
@.str.19.256 = private unnamed_addr constant [24 x i8] c"\09\09\09state__ = new %s();\0A\00", align 1
@.str.20.257 = private unnamed_addr constant [20 x i8] c"\09\09\09return state__;\0A\00", align 1
@.str.21.258 = private unnamed_addr constant [6 x i8] c"\09\09}\0A\0A\00", align 1
@.str.22.260 = private unnamed_addr constant [23 x i8] c"\09void *alloc(size_t);\0A\00", align 1
@.str.23.261 = private unnamed_addr constant [32 x i8] c"\09void dealloc(void *, size_t);\0A\00", align 1
@.str.24.262 = private unnamed_addr constant [14 x i8] c"\09int push();\0A\00", align 1
@.str.25.263 = private unnamed_addr constant [14 x i8] c"\09void pop();\0A\00", align 1
@.str.26.264 = private unnamed_addr constant [16 x i8] c"\09void clear();\0A\00", align 1
@.str.27.265 = private unnamed_addr constant [25 x i8] c"\09virtual void failed();\0A\00", align 1
@.str.28.266 = private unnamed_addr constant [32 x i8] c"\09virtual char *currFilename();\0A\00", align 1
@.str.29.267 = private unnamed_addr constant [30 x i8] c"\09virtual long currLinenum();\0A\00", align 1
@.str.30.268 = private unnamed_addr constant [6 x i8] c"\0A};\0A\0A\00", align 1
@.str.31.269 = private unnamed_addr constant [23 x i8] c"\09virtual %s *%sCreate(\00", align 1
@.str.32.270 = private unnamed_addr constant [15 x i8] c"\09%s *%sCreate(\00", align 1
@.str.4.271 = private unnamed_addr constant [16 x i8] c"typedef enum {\0A\00", align 1
@.str.5.272 = private unnamed_addr constant [6 x i8] c"\09%s,\0A\00", align 1
@.str.6.273 = private unnamed_addr constant [8 x i8] c"} %s;\0A\0A\00", align 1
@.str.7.274 = private unnamed_addr constant [11 x i8] c"class %s;\0A\00", align 1
@.str.3.275 = private unnamed_addr constant [25 x i8] c"const int %s_kind = %d;\0A\00", align 1
@.str.276 = private unnamed_addr constant [47 x i8] c"/* %s.  Generated automatically by treecc */\0A\0A\00", align 1
@.str.1.277 = private unnamed_addr constant [17 x i8] c"namespace %s\0A{\0A\0A\00", align 1
@.str.2.278 = private unnamed_addr constant [16 x i8] c"using System;\0A\0A\00", align 1
@.str.80.282 = private unnamed_addr constant [3 x i8] c"}\0A\00", align 1
@.str.33.283 = private unnamed_addr constant [7 x i8] c"public\00", align 1
@.str.32.284 = private unnamed_addr constant [9 x i8] c"internal\00", align 1
@.str.34.285 = private unnamed_addr constant [29 x i8] c"%s abstract class %s : %s\0A{\0A\00", align 1
@.str.35.286 = private unnamed_addr constant [20 x i8] c"%s class %s : %s\0A{\0A\00", align 1
@.str.36.287 = private unnamed_addr constant [24 x i8] c"%s abstract class %s\0A{\0A\00", align 1
@.str.37.288 = private unnamed_addr constant [15 x i8] c"%s class %s\0A{\0A\00", align 1
@.str.38.289 = private unnamed_addr constant [24 x i8] c"\09protected int kind__;\0A\00", align 1
@.str.39.290 = private unnamed_addr constant [31 x i8] c"\09protected String filename__;\0A\00", align 1
@.str.40.291 = private unnamed_addr constant [28 x i8] c"\09protected long linenum__;\0A\00", align 1
@.str.41.292 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.42.293 = private unnamed_addr constant [42 x i8] c"\09public int getKind() { return kind__; }\0A\00", align 1
@.str.43.294 = private unnamed_addr constant [53 x i8] c"\09public String getFilename() { return filename__; }\0A\00", align 1
@.str.44.295 = private unnamed_addr constant [49 x i8] c"\09public long getLinenum() { return linenum__; }\0A\00", align 1
@.str.45.296 = private unnamed_addr constant [70 x i8] c"\09public void setFilename(String filename) { filename__ = filename; }\0A\00", align 1
@.str.46.297 = private unnamed_addr constant [64 x i8] c"\09public void setLinenum(long linenum) { linenum__ = linenum; }\0A\00", align 1
@.str.47.298 = private unnamed_addr constant [35 x i8] c"\09public new const int KIND = %d;\0A\0A\00", align 1
@.str.48.299 = private unnamed_addr constant [31 x i8] c"\09public const int KIND = %d;\0A\0A\00", align 1
@.str.72.300 = private unnamed_addr constant [16 x i8] c"\09public %s %s;\0A\00", align 1
@.str.49.301 = private unnamed_addr constant [8 x i8] c"public \00", align 1
@.str.50.302 = private unnamed_addr constant [11 x i8] c"protected \00", align 1
@.str.51.303 = private unnamed_addr constant [7 x i8] c"\09%s%s(\00", align 1
@.str.52.304 = private unnamed_addr constant [11 x i8] c"%s state__\00", align 1
@.str.27.306 = private unnamed_addr constant [3 x i8] c")\0A\00", align 1
@.str.53.307 = private unnamed_addr constant [10 x i8] c"\09\09: base(\00", align 1
@.str.54.308 = private unnamed_addr constant [8 x i8] c"state__\00", align 1
@.str.14.310 = private unnamed_addr constant [4 x i8] c"\09{\0A\00", align 1
@.str.55.311 = private unnamed_addr constant [23 x i8] c"\09\09this.kind__ = KIND;\0A\00", align 1
@.str.56.312 = private unnamed_addr constant [45 x i8] c"\09\09this.filename__ = state__.currFilename();\0A\00", align 1
@.str.57.313 = private unnamed_addr constant [43 x i8] c"\09\09this.linenum__ = state__.currLinenum();\0A\00", align 1
@.str.58.314 = private unnamed_addr constant [51 x i8] c"\09\09this.filename__ = %s.getState().currFilename();\0A\00", align 1
@.str.59.315 = private unnamed_addr constant [49 x i8] c"\09\09this.linenum__ = %s.getState().currLinenum();\0A\00", align 1
@.str.60.316 = private unnamed_addr constant [17 x i8] c"\09\09this.%s = %s;\0A\00", align 1
@.str.18.317 = private unnamed_addr constant [5 x i8] c"\09}\0A\0A\00", align 1
@.str.61.319 = private unnamed_addr constant [36 x i8] c"\09public override int isA(int kind)\0A\00", align 1
@.str.62.320 = private unnamed_addr constant [35 x i8] c"\09public virtual int isA(int kind)\0A\00", align 1
@.str.63.321 = private unnamed_addr constant [20 x i8] c"\09\09if(kind == KIND)\0A\00", align 1
@.str.64.322 = private unnamed_addr constant [14 x i8] c"\09\09\09return 1;\0A\00", align 1
@.str.65.323 = private unnamed_addr constant [8 x i8] c"\09\09else\0A\00", align 1
@.str.66.324 = private unnamed_addr constant [27 x i8] c"\09\09\09return base.isA(kind);\0A\00", align 1
@.str.67.325 = private unnamed_addr constant [14 x i8] c"\09\09\09return 0;\0A\00", align 1
@.str.68.326 = private unnamed_addr constant [39 x i8] c"\09public override String getKindName()\0A\00", align 1
@.str.69.327 = private unnamed_addr constant [38 x i8] c"\09public virtual String getKindName()\0A\00", align 1
@.str.70.328 = private unnamed_addr constant [16 x i8] c"\09\09return \22%s\22;\0A\00", align 1
@.str.71.329 = private unnamed_addr constant [4 x i8] c"\09}\0A\00", align 1
@.str.7.330 = private unnamed_addr constant [4 x i8] c"}\0A\0A\00", align 1
@.str.73.331 = private unnamed_addr constant [24 x i8] c"\09public abstract %s %s(\00", align 1
@.str.74.332 = private unnamed_addr constant [23 x i8] c"\09public virtual %s %s(\00", align 1
@.str.75.333 = private unnamed_addr constant [24 x i8] c"\09public override %s %s(\00", align 1
@.str.29.334 = private unnamed_addr constant [3 x i8] c", \00", align 1
@.str.30.335 = private unnamed_addr constant [6 x i8] c"%s %s\00", align 1
@.str.76.336 = private unnamed_addr constant [9 x i8] c"%s P%d__\00", align 1
@.str.77.337 = private unnamed_addr constant [3 x i8] c"\09{\00", align 1
@.str.78.338 = private unnamed_addr constant [5 x i8] c"this\00", align 1
@.str.79.339 = private unnamed_addr constant [19 x i8] c"\0A\09\09%s %s = this;\0A\09\00", align 1
@.str.81.340 = private unnamed_addr constant [5 x i8] c");\0A\0A\00", align 1
@.str.31.341 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.8.342 = private unnamed_addr constant [31 x i8] c"internal abstract class %s\0A{\0A\0A\00", align 1
@.str.9.343 = private unnamed_addr constant [29 x i8] c"public abstract class %s\0A{\0A\0A\00", align 1
@.str.10.344 = private unnamed_addr constant [22 x i8] c"internal class %s\0A{\0A\0A\00", align 1
@.str.11.345 = private unnamed_addr constant [20 x i8] c"public class %s\0A{\0A\0A\00", align 1
@.str.12.346 = private unnamed_addr constant [30 x i8] c"\09private static %s state__;\0A\0A\00", align 1
@.str.13.347 = private unnamed_addr constant [30 x i8] c"\09public static %s getState()\0A\00", align 1
@.str.15.348 = private unnamed_addr constant [39 x i8] c"\09\09if(state__ != null) return state__;\0A\00", align 1
@.str.16.349 = private unnamed_addr constant [23 x i8] c"\09\09state__ = new %s();\0A\00", align 1
@.str.17.350 = private unnamed_addr constant [19 x i8] c"\09\09return state__;\0A\00", align 1
@.str.19.351 = private unnamed_addr constant [18 x i8] c"\09public %s() {}\0A\0A\00", align 1
@.str.20.352 = private unnamed_addr constant [35 x i8] c"\09public %s() { state__ = this; }\0A\0A\00", align 1
@.str.21.354 = private unnamed_addr constant [56 x i8] c"\09public virtual String currFilename() { return null; }\0A\00", align 1
@.str.22.355 = private unnamed_addr constant [51 x i8] c"\09public virtual long currLinenum() { return 0; }\0A\0A\00", align 1
@.str.23.356 = private unnamed_addr constant [38 x i8] c"\09public virtual abstract %s %sCreate(\00", align 1
@.str.24.357 = private unnamed_addr constant [29 x i8] c"\09public virtual %s %sCreate(\00", align 1
@.str.25.358 = private unnamed_addr constant [21 x i8] c"\09public %s %sCreate(\00", align 1
@.str.26.360 = private unnamed_addr constant [4 x i8] c");\0A\00", align 1
@.str.28.361 = private unnamed_addr constant [21 x i8] c"\09\09return new %s(this\00", align 1
@.str.3.363 = private unnamed_addr constant [18 x i8] c"internal enum %s\0A\00", align 1
@.str.4.364 = private unnamed_addr constant [16 x i8] c"public enum %s\0A\00", align 1
@.str.5.365 = private unnamed_addr constant [3 x i8] c"{\0A\00", align 1
@.str.6.366 = private unnamed_addr constant [6 x i8] c"\09%s,\0A\00", align 1
@TreeCCNonVirtualFuncsJava = constant %struct.TreeCCNonVirtual { void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, %struct._tagTreeCCOperation*)* @Java_GenStart, void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, %struct._tagTreeCCOperation*)* @Java_GenEntry, void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, %struct._tagTreeCCOperation*, i32)* @Java_GenSplitEntry, void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, i8*, i32, i32)* @Java_GenSwitchHead, void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, %struct._tagTreeCCNode*, i32)* @Java_GenSelector, void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, i32)* @Java_GenEndSelectors, void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, %struct._tagTreeCCOperationCase*, i32)* @Java_GenCaseFunc, void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, %struct._tagTreeCCOperationCase*, i32, i32)* @Java_GenCaseCall, void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, %struct._tagTreeCCOperationCase*, i32)* @Java_GenCaseInline, void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, %struct._tagTreeCCOperationCase*, i32, i32)* @Java_GenCaseSplit, void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, i32)* @Java_GenEndCase, void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, i32)* @Java_GenEndSwitch, void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, %struct._tagTreeCCOperation*)* @Java_GenExit, void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, %struct._tagTreeCCOperation*)* @Java_GenEnd }, align 8
@.str.27.369 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.41.370 = private unnamed_addr constant [14 x i8] c"package %s;\0A\0A\00", align 1
@.str.42.371 = private unnamed_addr constant [22 x i8] c"import java.lang.*;\0A\0A\00", align 1
@.str.45.373 = private unnamed_addr constant [29 x i8] c"public abstract class %s\0A{\0A\0A\00", align 1
@.str.46.374 = private unnamed_addr constant [20 x i8] c"public class %s\0A{\0A\0A\00", align 1
@.str.47.375 = private unnamed_addr constant [30 x i8] c"\09private static %s state__;\0A\0A\00", align 1
@.str.48.376 = private unnamed_addr constant [30 x i8] c"\09public static %s getState()\0A\00", align 1
@.str.11.377 = private unnamed_addr constant [4 x i8] c"\09{\0A\00", align 1
@.str.49.378 = private unnamed_addr constant [39 x i8] c"\09\09if(state__ != null) return state__;\0A\00", align 1
@.str.50.379 = private unnamed_addr constant [23 x i8] c"\09\09state__ = new %s();\0A\00", align 1
@.str.51.380 = private unnamed_addr constant [19 x i8] c"\09\09return state__;\0A\00", align 1
@.str.52.381 = private unnamed_addr constant [5 x i8] c"\09}\0A\0A\00", align 1
@.str.53.382 = private unnamed_addr constant [18 x i8] c"\09public %s() {}\0A\0A\00", align 1
@.str.54.383 = private unnamed_addr constant [35 x i8] c"\09public %s() { state__ = this; }\0A\0A\00", align 1
@.str.55.385 = private unnamed_addr constant [48 x i8] c"\09public String currFilename() { return null; }\0A\00", align 1
@.str.56.386 = private unnamed_addr constant [43 x i8] c"\09public long currLinenum() { return 0; }\0A\0A\00", align 1
@.str.26.387 = private unnamed_addr constant [3 x i8] c"}\0A\00", align 1
@.str.28.389 = private unnamed_addr constant [5 x i8] c"void\00", align 1
@.str.38.390 = private unnamed_addr constant [15 x i8] c"\09return (%s);\0A\00", align 1
@.str.39.391 = private unnamed_addr constant [12 x i8] c"\09return 0;\0A\00", align 1
@.str.40.392 = private unnamed_addr constant [4 x i8] c"\09}\0A\00", align 1
@.str.16.393 = private unnamed_addr constant [5 x i8] c"\09\09\09\09\00", align 1
@.str.17.394 = private unnamed_addr constant [2 x i8] c"\09\00", align 1
@.str.18.395 = private unnamed_addr constant [3 x i8] c"\09\09\00", align 1
@.str.19.396 = private unnamed_addr constant [4 x i8] c"\09\09\09\00", align 1
@.str.37.397 = private unnamed_addr constant [17 x i8] c"default: break;\0A\00", align 1
@.str.36.398 = private unnamed_addr constant [9 x i8] c"break;\0A\0A\00", align 1
@.str.29.399 = private unnamed_addr constant [8 x i8] c"return \00", align 1
@.str.35.400 = private unnamed_addr constant [15 x i8] c"%s_split_%d__(\00", align 1
@.str.5.401 = private unnamed_addr constant [3 x i8] c", \00", align 1
@.str.31.402 = private unnamed_addr constant [5 x i8] c"(%s)\00", align 1
@.str.7.403 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.8.404 = private unnamed_addr constant [6 x i8] c"P%d__\00", align 1
@.str.9.405 = private unnamed_addr constant [3 x i8] c"__\00", align 1
@.str.32.406 = private unnamed_addr constant [4 x i8] c");\0A\00", align 1
@.str.33.407 = private unnamed_addr constant [19 x i8] c"%s %s = (%s)%s__;\0A\00", align 1
@.str.34.408 = private unnamed_addr constant [2 x i8] c"{\00", align 1
@.str.30.409 = private unnamed_addr constant [9 x i8] c"%s_%d__(\00", align 1
@.str.12.410 = private unnamed_addr constant [4 x i8] c"int\00", align 1
@.str.22.411 = private unnamed_addr constant [28 x i8] c"\09private static %s %s_%d__(\00", align 1
@.str.23.412 = private unnamed_addr constant [6 x i8] c"%s %s\00", align 1
@.str.24.413 = private unnamed_addr constant [9 x i8] c"%s P%d__\00", align 1
@.str.10.414 = private unnamed_addr constant [3 x i8] c")\0A\00", align 1
@.str.25.415 = private unnamed_addr constant [3 x i8] c"\09{\00", align 1
@.str.15.416 = private unnamed_addr constant [3 x i8] c"{\0A\00", align 1
@.str.20.417 = private unnamed_addr constant [13 x i8] c"case %s.%s:\0A\00", align 1
@.str.21.418 = private unnamed_addr constant [15 x i8] c"case %s.KIND:\0A\00", align 1
@.str.13.419 = private unnamed_addr constant [12 x i8] c"switch(%s)\0A\00", align 1
@.str.14.420 = private unnamed_addr constant [24 x i8] c"switch(%s__.getKind())\0A\00", align 1
@.str.3.421 = private unnamed_addr constant [34 x i8] c"\09private static %s %s_split_%d__(\00", align 1
@.str.4.422 = private unnamed_addr constant [22 x i8] c"\09public static %s %s(\00", align 1
@.str.6.423 = private unnamed_addr constant [4 x i8] c"%s \00", align 1
@.str.1.424 = private unnamed_addr constant [7 x i8] c"public\00", align 1
@.str.425 = private unnamed_addr constant [9 x i8] c"internal\00", align 1
@.str.2.426 = private unnamed_addr constant [15 x i8] c"%s class %s\0A{\0A\00", align 1
@.str.60.427 = private unnamed_addr constant [39 x i8] c"public abstract class %s extends %s\0A{\0A\00", align 1
@.str.61.428 = private unnamed_addr constant [30 x i8] c"public class %s extends %s\0A{\0A\00", align 1
@.str.62.429 = private unnamed_addr constant [28 x i8] c"public abstract class %s\0A{\0A\00", align 1
@.str.63.430 = private unnamed_addr constant [19 x i8] c"public class %s\0A{\0A\00", align 1
@.str.64.431 = private unnamed_addr constant [24 x i8] c"\09protected int kind__;\0A\00", align 1
@.str.65.432 = private unnamed_addr constant [31 x i8] c"\09protected String filename__;\0A\00", align 1
@.str.66.433 = private unnamed_addr constant [28 x i8] c"\09protected long linenum__;\0A\00", align 1
@.str.67.434 = private unnamed_addr constant [42 x i8] c"\09public int getKind() { return kind__; }\0A\00", align 1
@.str.68.435 = private unnamed_addr constant [53 x i8] c"\09public String getFilename() { return filename__; }\0A\00", align 1
@.str.69.436 = private unnamed_addr constant [49 x i8] c"\09public long getLinenum() { return linenum__; }\0A\00", align 1
@.str.70.437 = private unnamed_addr constant [70 x i8] c"\09public void setFilename(String filename) { filename__ = filename; }\0A\00", align 1
@.str.71.438 = private unnamed_addr constant [64 x i8] c"\09public void setLinenum(long linenum) { linenum__ = linenum; }\0A\00", align 1
@.str.72.439 = private unnamed_addr constant [38 x i8] c"\09public static final int KIND = %d;\0A\0A\00", align 1
@.str.94.440 = private unnamed_addr constant [16 x i8] c"\09public %s %s;\0A\00", align 1
@.str.74.441 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.73.442 = private unnamed_addr constant [8 x i8] c"public \00", align 1
@.str.75.443 = private unnamed_addr constant [11 x i8] c"protected \00", align 1
@.str.76.444 = private unnamed_addr constant [7 x i8] c"\09%s%s(\00", align 1
@.str.77.445 = private unnamed_addr constant [11 x i8] c"%s state__\00", align 1
@.str.78.447 = private unnamed_addr constant [9 x i8] c"\09\09super(\00", align 1
@.str.79.448 = private unnamed_addr constant [8 x i8] c"state__\00", align 1
@.str.80.450 = private unnamed_addr constant [23 x i8] c"\09\09this.kind__ = KIND;\0A\00", align 1
@.str.81.451 = private unnamed_addr constant [45 x i8] c"\09\09this.filename__ = state__.currFilename();\0A\00", align 1
@.str.82.452 = private unnamed_addr constant [43 x i8] c"\09\09this.linenum__ = state__.currLinenum();\0A\00", align 1
@.str.83.453 = private unnamed_addr constant [51 x i8] c"\09\09this.filename__ = %s.getState().currFilename();\0A\00", align 1
@.str.84.454 = private unnamed_addr constant [49 x i8] c"\09\09this.linenum__ = %s.getState().currLinenum();\0A\00", align 1
@.str.85.455 = private unnamed_addr constant [17 x i8] c"\09\09this.%s = %s;\0A\00", align 1
@.str.86.457 = private unnamed_addr constant [27 x i8] c"\09public int isA(int kind)\0A\00", align 1
@.str.87.458 = private unnamed_addr constant [20 x i8] c"\09\09if(kind == KIND)\0A\00", align 1
@.str.88.459 = private unnamed_addr constant [14 x i8] c"\09\09\09return 1;\0A\00", align 1
@.str.89.460 = private unnamed_addr constant [8 x i8] c"\09\09else\0A\00", align 1
@.str.90.461 = private unnamed_addr constant [28 x i8] c"\09\09\09return super.isA(kind);\0A\00", align 1
@.str.91.462 = private unnamed_addr constant [14 x i8] c"\09\09\09return 0;\0A\00", align 1
@.str.92.463 = private unnamed_addr constant [30 x i8] c"\09public String getKindName()\0A\00", align 1
@.str.93.464 = private unnamed_addr constant [16 x i8] c"\09\09return \22%s\22;\0A\00", align 1
@.str.95.465 = private unnamed_addr constant [24 x i8] c"\09public abstract %s %s(\00", align 1
@.str.96.466 = private unnamed_addr constant [15 x i8] c"\09public %s %s(\00", align 1
@.str.97.467 = private unnamed_addr constant [5 x i8] c"this\00", align 1
@.str.98.468 = private unnamed_addr constant [17 x i8] c"\09\09%s %s = this;\0A\00", align 1
@.str.99.469 = private unnamed_addr constant [4 x i8] c"}\0A\0A\00", align 1
@.str.100.470 = private unnamed_addr constant [5 x i8] c");\0A\0A\00", align 1
@.str.57.471 = private unnamed_addr constant [30 x i8] c"\09public abstract %s %sCreate(\00", align 1
@.str.58.472 = private unnamed_addr constant [21 x i8] c"\09public %s %sCreate(\00", align 1
@.str.59.474 = private unnamed_addr constant [21 x i8] c"\09\09return new %s(this\00", align 1
@.str.43.476 = private unnamed_addr constant [17 x i8] c"public class %s\0A\00", align 1
@.str.44.477 = private unnamed_addr constant [35 x i8] c"\09public static final int %s = %d;\0A\00", align 1
@.str.480 = private unnamed_addr constant [6 x i8] c"P%d__\00", align 1
@.str.1.481 = private unnamed_addr constant [39 x i8] c"this operation case duplicates another\00", align 1
@TreeCCNonVirtualFuncsPHP = constant %struct.TreeCCNonVirtual { void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, %struct._tagTreeCCOperation*)* @PHP_GenStart, void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, %struct._tagTreeCCOperation*)* @PHP_GenEntry, void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, %struct._tagTreeCCOperation*, i32)* @PHP_GenSplitEntry, void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, i8*, i32, i32)* @PHP_GenSwitchHead, void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, %struct._tagTreeCCNode*, i32)* @PHP_GenSelector, void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, i32)* @PHP_GenEndSelectors, void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, %struct._tagTreeCCOperationCase*, i32)* @PHP_GenCaseFunc, void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, %struct._tagTreeCCOperationCase*, i32, i32)* @PHP_GenCaseCall, void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, %struct._tagTreeCCOperationCase*, i32)* @PHP_GenCaseInline, void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, %struct._tagTreeCCOperationCase*, i32, i32)* @PHP_GenCaseSplit, void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, i32)* @PHP_GenEndCase, void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, i32)* @PHP_GenEndSwitch, void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, %struct._tagTreeCCOperation*)* @PHP_GenExit, void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, %struct._tagTreeCCOperation*)* @PHP_GenEnd }, align 8
@.str.35.484 = private unnamed_addr constant [54 x i8] c"<?php\0A\0A/* %s.  Generated automatically by treecc */\0A\0A\00", align 1
@.str.87.488 = private unnamed_addr constant [4 x i8] c"\0A?>\00", align 1
@.str.20.489 = private unnamed_addr constant [3 x i8] c"}\0A\00", align 1
@.str.21.490 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.22.491 = private unnamed_addr constant [5 x i8] c"void\00", align 1
@.str.32.492 = private unnamed_addr constant [18 x i8] c"    return (%s);\0A\00", align 1
@.str.33.493 = private unnamed_addr constant [15 x i8] c"    return 0;\0A\00", align 1
@.str.34.494 = private unnamed_addr constant [7 x i8] c"    }\0A\00", align 1
@.str.12.495 = private unnamed_addr constant [17 x i8] c"                \00", align 1
@.str.13.496 = private unnamed_addr constant [5 x i8] c"    \00", align 1
@.str.14.497 = private unnamed_addr constant [9 x i8] c"        \00", align 1
@.str.15.498 = private unnamed_addr constant [13 x i8] c"            \00", align 1
@.str.31.499 = private unnamed_addr constant [17 x i8] c"default: break;\0A\00", align 1
@.str.30.500 = private unnamed_addr constant [9 x i8] c"break;\0A\0A\00", align 1
@.str.23.501 = private unnamed_addr constant [8 x i8] c"return \00", align 1
@.str.28.502 = private unnamed_addr constant [51 x i8] c"$_t = __CLASS__;$_t = new $_t; $_t->%s_split_%d__(\00", align 1
@.str.3.503 = private unnamed_addr constant [3 x i8] c", \00", align 1
@.str.4.504 = private unnamed_addr constant [4 x i8] c"$%s\00", align 1
@.str.29.505 = private unnamed_addr constant [6 x i8] c"P%d__\00", align 1
@.str.6.506 = private unnamed_addr constant [3 x i8] c"__\00", align 1
@.str.25.507 = private unnamed_addr constant [4 x i8] c");\0A\00", align 1
@.str.26.508 = private unnamed_addr constant [13 x i8] c"$%s = %s__;\0A\00", align 1
@.str.27.509 = private unnamed_addr constant [2 x i8] c"{\00", align 1
@.str.24.510 = private unnamed_addr constant [45 x i8] c"$_t = __CLASS__;$_t = new $_t; $_t->%s_%d__(\00", align 1
@.str.5.511 = private unnamed_addr constant [7 x i8] c"$P%d__\00", align 1
@.str.18.512 = private unnamed_addr constant [23 x i8] c"    function %s_%d__(&\00", align 1
@.str.7.513 = private unnamed_addr constant [3 x i8] c")\0A\00", align 1
@.str.19.514 = private unnamed_addr constant [6 x i8] c"    {\00", align 1
@.str.11.515 = private unnamed_addr constant [3 x i8] c"{\0A\00", align 1
@.str.16.516 = private unnamed_addr constant [13 x i8] c"case %s_%s:\0A\00", align 1
@.str.17.517 = private unnamed_addr constant [15 x i8] c"case %s_KIND:\0A\00", align 1
@.str.9.518 = private unnamed_addr constant [13 x i8] c"switch($%s)\0A\00", align 1
@.str.10.519 = private unnamed_addr constant [26 x i8] c"switch($%s__->getKind())\0A\00", align 1
@.str.1.520 = private unnamed_addr constant [29 x i8] c"    function %s_split_%d__(&\00", align 1
@.str.2.521 = private unnamed_addr constant [18 x i8] c"    function %s(&\00", align 1
@.str.8.522 = private unnamed_addr constant [7 x i8] c"    {\0A\00", align 1
@.str.523 = private unnamed_addr constant [12 x i8] c"class %s\0A{\0A\00", align 1
@.str.50.524 = private unnamed_addr constant [23 x i8] c"define('%s_KIND',%d);\0A\00", align 1
@.str.51.525 = private unnamed_addr constant [24 x i8] c"define('%s_KIND', %d);\0A\00", align 1
@.str.52.526 = private unnamed_addr constant [23 x i8] c"class %s extends %s\0A{\0A\00", align 1
@.str.53.527 = private unnamed_addr constant [18 x i8] c"    var $kind__;\0A\00", align 1
@.str.54.528 = private unnamed_addr constant [22 x i8] c"    var $filename__;\0A\00", align 1
@.str.55.529 = private unnamed_addr constant [21 x i8] c"    var $linenum__;\0A\00", align 1
@.str.56.530 = private unnamed_addr constant [50 x i8] c"    function getKind() { return $this->kind__; }\0A\00", align 1
@.str.57.531 = private unnamed_addr constant [58 x i8] c"    function getFilename() { return $this->filename__; }\0A\00", align 1
@.str.58.532 = private unnamed_addr constant [56 x i8] c"    function getLinenum() { return $this->linenum__; }\0A\00", align 1
@.str.59.533 = private unnamed_addr constant [72 x i8] c"    function setFilename($filename) { $this->filename__ = $filename; }\0A\00", align 1
@.str.60.534 = private unnamed_addr constant [68 x i8] c"    function setLinenum($linenum) { $this->linenum__ = $linenum; }\0A\00", align 1
@.str.79.535 = private unnamed_addr constant [14 x i8] c"    var $%s;\0A\00", align 1
@.str.62.536 = private unnamed_addr constant [19 x i8] c"    function %s%s(\00", align 1
@.str.61.537 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.63.538 = private unnamed_addr constant [10 x i8] c"&$state__\00", align 1
@.str.64.540 = private unnamed_addr constant [21 x i8] c"        parent::%s (\00", align 1
@.str.65.542 = private unnamed_addr constant [34 x i8] c"        $this->kind__ = %s_KIND;\0A\00", align 1
@.str.66.543 = private unnamed_addr constant [55 x i8] c"        $this->filename__ = $state__->currFilename();\0A\00", align 1
@.str.67.544 = private unnamed_addr constant [53 x i8] c"        $this->linenum__ = $state__->currLinenum();\0A\00", align 1
@.str.68.545 = private unnamed_addr constant [77 x i8] c"        $_tmp = &%s::getState(); $this->filename__ = $_tmp->currFilename();\0A\00", align 1
@.str.69.546 = private unnamed_addr constant [75 x i8] c"        $_tmp = &%s::getState(); $this->linenum__ = $_tmp->currLinenum();\0A\00", align 1
@.str.70.547 = private unnamed_addr constant [26 x i8] c"        $this->%s = $%s;\0A\00", align 1
@.str.44.548 = private unnamed_addr constant [8 x i8] c"    }\0A\0A\00", align 1
@.str.71.550 = private unnamed_addr constant [25 x i8] c"    function isA($kind)\0A\00", align 1
@.str.72.551 = private unnamed_addr constant [30 x i8] c"        if($kind == %s_KIND)\0A\00", align 1
@.str.73.552 = private unnamed_addr constant [23 x i8] c"            return 1;\0A\00", align 1
@.str.74.553 = private unnamed_addr constant [14 x i8] c"        else\0A\00", align 1
@.str.75.554 = private unnamed_addr constant [40 x i8] c"            return parent::isA($kind);\0A\00", align 1
@.str.76.555 = private unnamed_addr constant [23 x i8] c"            return 0;\0A\00", align 1
@.str.77.556 = private unnamed_addr constant [28 x i8] c"    function getKindName()\0A\00", align 1
@.str.78.557 = private unnamed_addr constant [22 x i8] c"        return \22%s\22;\0A\00", align 1
@.str.47.558 = private unnamed_addr constant [4 x i8] c"}\0A\0A\00", align 1
@.str.81.559 = private unnamed_addr constant [18 x i8] c"    function  %s(\00", align 1
@.str.82.560 = private unnamed_addr constant [17 x i8] c"    function %s(\00", align 1
@.str.83.561 = private unnamed_addr constant [5 x i8] c"$%s \00", align 1
@.str.84.562 = private unnamed_addr constant [5 x i8] c"this\00", align 1
@.str.85.563 = private unnamed_addr constant [28 x i8] c"\0A        $%s = &$this;\0A    \00", align 1
@.str.86.564 = private unnamed_addr constant [7 x i8] c") {}\0A\0A\00", align 1
@.str.80.565 = private unnamed_addr constant [5 x i8] c" $%s\00", align 1
@.str.38.566 = private unnamed_addr constant [13 x i8] c"class %s\0A{\0A\0A\00", align 1
@.str.39.567 = private unnamed_addr constant [26 x i8] c"    function &getState()\0A\00", align 1
@.str.40.568 = private unnamed_addr constant [31 x i8] c"        static $state = null;\0A\00", align 1
@.str.41.569 = private unnamed_addr constant [43 x i8] c"        if($state != null) return $state;\0A\00", align 1
@.str.42.570 = private unnamed_addr constant [28 x i8] c"        $state = new %s();\0A\00", align 1
@.str.43.571 = private unnamed_addr constant [24 x i8] c"        return $state;\0A\00", align 1
@.str.45.573 = private unnamed_addr constant [46 x i8] c"    function currFilename() { return null; }\0A\00", align 1
@.str.46.574 = private unnamed_addr constant [43 x i8] c"    function currLinenum() { return 0; }\0A\0A\00", align 1
@.str.48.575 = private unnamed_addr constant [23 x i8] c"    function %sCreate(\00", align 1
@.str.49.577 = private unnamed_addr constant [28 x i8] c"        return new %s($this\00", align 1
@.str.36.579 = private unnamed_addr constant [21 x i8] c"define('%s_%s',%d);\0A\00", align 1
@.str.37.580 = private unnamed_addr constant [3 x i8] c"\0A\0A\00", align 1
@TreeCCNonVirtualFuncsRuby = constant %struct.TreeCCNonVirtual { void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, %struct._tagTreeCCOperation*)* @Ruby_GenStart, void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, %struct._tagTreeCCOperation*)* @Ruby_GenEntry, void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, %struct._tagTreeCCOperation*, i32)* @Ruby_GenSplitEntry, void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, i8*, i32, i32)* @Ruby_GenSwitchHead, void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, %struct._tagTreeCCNode*, i32)* @Ruby_GenSelector, void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, i32)* @Ruby_GenEndSelectors, void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, %struct._tagTreeCCOperationCase*, i32)* @Ruby_GenCaseFunc, void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, %struct._tagTreeCCOperationCase*, i32, i32)* @Ruby_GenCaseCall, void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, %struct._tagTreeCCOperationCase*, i32)* @Ruby_GenCaseInline, void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, %struct._tagTreeCCOperationCase*, i32, i32)* @Ruby_GenCaseSplit, void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, i32)* @Ruby_GenEndCase, void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, i32)* @Ruby_GenEndSwitch, void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, %struct._tagTreeCCOperation*)* @Ruby_GenExit, void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, %struct._tagTreeCCOperation*)* @Ruby_GenEnd }, align 8
@.str.27.583 = private unnamed_addr constant [44 x i8] c"# %s.  Generated automatically by treecc \0A\0A\00", align 1
@.str.28.584 = private unnamed_addr constant [18 x i8] c"module %s\0Abegin\0A\0A\00", align 1
@.str.18.588 = private unnamed_addr constant [5 x i8] c"end\0A\00", align 1
@.str.23.589 = private unnamed_addr constant [5 x i8] c"void\00", align 1
@.str.24.590 = private unnamed_addr constant [13 x i8] c"  return %s\0A\00", align 1
@.str.25.591 = private unnamed_addr constant [12 x i8] c"  return 0\0A\00", align 1
@.str.26.592 = private unnamed_addr constant [7 x i8] c"  end\0A\00", align 1
@.str.11.593 = private unnamed_addr constant [9 x i8] c"        \00", align 1
@.str.12.594 = private unnamed_addr constant [3 x i8] c"  \00", align 1
@.str.13.595 = private unnamed_addr constant [5 x i8] c"    \00", align 1
@.str.14.596 = private unnamed_addr constant [7 x i8] c"      \00", align 1
@.str.22.597 = private unnamed_addr constant [6 x i8] c"else\0A\00", align 1
@.str.21.598 = private unnamed_addr constant [15 x i8] c"%s_split_%d__(\00", align 1
@.str.3.599 = private unnamed_addr constant [3 x i8] c", \00", align 1
@.str.4.600 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.5.601 = private unnamed_addr constant [6 x i8] c"p%d__\00", align 1
@.str.6.602 = private unnamed_addr constant [3 x i8] c"__\00", align 1
@.str.7.603 = private unnamed_addr constant [3 x i8] c")\0A\00", align 1
@.str.20.604 = private unnamed_addr constant [12 x i8] c"%s = %s__;\0A\00", align 1
@.str.10.605 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.19.606 = private unnamed_addr constant [9 x i8] c"%s_%d__(\00", align 1
@.str.17.607 = private unnamed_addr constant [29 x i8] c"  private \0A  def %s.%s_%d__(\00", align 1
@.str.15.608 = private unnamed_addr constant [12 x i8] c"when %s.%s\0A\00", align 1
@.str.16.609 = private unnamed_addr constant [15 x i8] c"when %s::KIND\0A\00", align 1
@.str.8.610 = private unnamed_addr constant [9 x i8] c"case %s\0A\00", align 1
@.str.9.611 = private unnamed_addr constant [22 x i8] c"case %s__.type::KIND\0A\00", align 1
@.str.1.612 = private unnamed_addr constant [35 x i8] c"  private \0A  def %s.%s_split_%d__(\00", align 1
@.str.2.613 = private unnamed_addr constant [23 x i8] c"  public \0A  def %s.%s(\00", align 1
@.str.614 = private unnamed_addr constant [10 x i8] c"class %s\0A\00", align 1
@.str.44.615 = private unnamed_addr constant [15 x i8] c"class %s < %s\0A\00", align 1
@.str.45.616 = private unnamed_addr constant [43 x i8] c"  protected\0A  attr_reader :kind\0A  public\0A\0A\00", align 1
@.str.46.617 = private unnamed_addr constant [37 x i8] c"  attr_accessor :Linenum, :Filename\0A\00", align 1
@.str.47.618 = private unnamed_addr constant [21 x i8] c"  attr_accessor :%s\0A\00", align 1
@.str.48.619 = private unnamed_addr constant [14 x i8] c"  KIND = %d\0A\0A\00", align 1
@.str.49.620 = private unnamed_addr constant [18 x i8] c"  def initialize(\00", align 1
@.str.50.621 = private unnamed_addr constant [8 x i8] c"state__\00", align 1
@.str.51.623 = private unnamed_addr constant [11 x i8] c"    super(\00", align 1
@.str.52.624 = private unnamed_addr constant [7 x i8] c"@state\00", align 1
@.str.53.626 = private unnamed_addr constant [18 x i8] c"    @kind = KIND\0A\00", align 1
@.str.54.627 = private unnamed_addr constant [37 x i8] c"    @Filename = @state.currFilename\0A\00", align 1
@.str.55.628 = private unnamed_addr constant [35 x i8] c"    @Finenum = @state.currLinenum\0A\00", align 1
@.str.56.629 = private unnamed_addr constant [41 x i8] c"    @Filename = %s.state.currFilename()\0A\00", align 1
@.str.57.630 = private unnamed_addr constant [39 x i8] c"    @Linenum = %s.state.currLinenum()\0A\00", align 1
@.str.58.631 = private unnamed_addr constant [18 x i8] c"    self.%s = %s\0A\00", align 1
@.str.37.632 = private unnamed_addr constant [8 x i8] c"  end\0A\0A\00", align 1
@.str.59.634 = private unnamed_addr constant [17 x i8] c"  def isA(kind)\0A\00", align 1
@.str.60.635 = private unnamed_addr constant [28 x i8] c"    if(@kind == KIND) then\0A\00", align 1
@.str.61.636 = private unnamed_addr constant [19 x i8] c"      return true\0A\00", align 1
@.str.62.637 = private unnamed_addr constant [10 x i8] c"    else\0A\00", align 1
@.str.63.638 = private unnamed_addr constant [34 x i8] c"      return super(kind)\0A    end\0A\00", align 1
@.str.64.639 = private unnamed_addr constant [24 x i8] c"      return 0\0A    end\0A\00", align 1
@.str.65.640 = private unnamed_addr constant [16 x i8] c"  def KindName\0A\00", align 1
@.str.66.641 = private unnamed_addr constant [17 x i8] c"    return \22%s\22\0A\00", align 1
@.str.31.642 = private unnamed_addr constant [6 x i8] c"end\0A\0A\00", align 1
@.str.67.643 = private unnamed_addr constant [10 x i8] c"  def %s(\00", align 1
@.str.68.644 = private unnamed_addr constant [6 x i8] c"P%d__\00", align 1
@.str.69.645 = private unnamed_addr constant [5 x i8] c"self\00", align 1
@.str.70.646 = private unnamed_addr constant [21 x i8] c"\0A    %s %s = self\0A  \00", align 1
@.str.71.647 = private unnamed_addr constant [9 x i8] c")\0A  end\0A\00", align 1
@.str.32.648 = private unnamed_addr constant [17 x i8] c"  @@state = nil\0A\00", align 1
@.str.33.649 = private unnamed_addr constant [16 x i8] c"  def %s.state\0A\00", align 1
@.str.34.650 = private unnamed_addr constant [40 x i8] c"    return @@state unless @@state.nil?\0A\00", align 1
@.str.35.651 = private unnamed_addr constant [24 x i8] c"    @@state = %s.new()\0A\00", align 1
@.str.36.652 = private unnamed_addr constant [20 x i8] c"    return @@state\0A\00", align 1
@.str.38.653 = private unnamed_addr constant [47 x i8] c"  def intialize \0A     @@state = self \0A   end\0A\0A\00", align 1
@.str.39.655 = private unnamed_addr constant [45 x i8] c"  def currFilename \0A     return nil \0A  end\0A\0A\00", align 1
@.str.40.656 = private unnamed_addr constant [42 x i8] c"  def currLinenum \0A     return 0 \0A  end\0A\0A\00", align 1
@.str.41.657 = private unnamed_addr constant [19 x i8] c"  def %s %sCreate(\00", align 1
@.str.42.659 = private unnamed_addr constant [38 x i8] c"raise \22Abstract method called: %s\5Cn\22\0A\00", align 1
@.str.43.660 = private unnamed_addr constant [23 x i8] c"    return %s.new(this\00", align 1
@.str.29.662 = private unnamed_addr constant [11 x i8] c"class %s \0A\00", align 1
@.str.30.663 = private unnamed_addr constant [11 x i8] c"  %s = %i\0A\00", align 1
@.str.7.664 = private unnamed_addr constant [15 x i8] c"%s is too long\00", align 1
@.str.665 = private unnamed_addr constant [8 x i8] c"keyword\00", align 1
@KeywordTable = internal unnamed_addr constant [19 x %struct.anon] [%struct.anon { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.8.676, i32 0, i32 0), i32 20 }, %struct.anon { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.9.677, i32 0, i32 0), i32 31 }, %struct.anon { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.10.678, i32 0, i32 0), i32 35 }, %struct.anon { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.11.679, i32 0, i32 0), i32 32 }, %struct.anon { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.12.680, i32 0, i32 0), i32 33 }, %struct.anon { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.13.681, i32 0, i32 0), i32 34 }, %struct.anon { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.14.682, i32 0, i32 0), i32 28 }, %struct.anon { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.15.683, i32 0, i32 0), i32 36 }, %struct.anon { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.16.684, i32 0, i32 0), i32 25 }, %struct.anon { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.17.685, i32 0, i32 0), i32 23 }, %struct.anon { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.18.686, i32 0, i32 0), i32 19 }, %struct.anon { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.19.687, i32 0, i32 0), i32 22 }, %struct.anon { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.20.688, i32 0, i32 0), i32 27 }, %struct.anon { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.21.689, i32 0, i32 0), i32 30 }, %struct.anon { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.22.690, i32 0, i32 0), i32 29 }, %struct.anon { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.23.691, i32 0, i32 0), i32 37 }, %struct.anon { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.24.692, i32 0, i32 0), i32 26 }, %struct.anon { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.25.693, i32 0, i32 0), i32 21 }, %struct.anon { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.26.694, i32 0, i32 0), i32 24 }], align 16
@.str.1.666 = private unnamed_addr constant [23 x i8] c"unknown keyword `%%%s'\00", align 1
@.str.2.667 = private unnamed_addr constant [49 x i8] c"`%%' must be followed by a keyword, `{', or `%%'\00", align 1
@.str.3.668 = private unnamed_addr constant [11 x i8] c"identifier\00", align 1
@.str.27.669 = private unnamed_addr constant [32 x i8] c"invalid `%c' character in input\00", align 1
@.str.29.670 = private unnamed_addr constant [26 x i8] c"end of file inside string\00", align 1
@.str.30.671 = private unnamed_addr constant [26 x i8] c"end of line inside string\00", align 1
@.str.28.672 = private unnamed_addr constant [36 x i8] c"invalid `\5Cx%02X' character in input\00", align 1
@.str.6.673 = private unnamed_addr constant [38 x i8] c"end of file inside literal code block\00", align 1
@.str.4.674 = private unnamed_addr constant [27 x i8] c"end of file inside comment\00", align 1
@.str.5.675 = private unnamed_addr constant [26 x i8] c"no text for token type %d\00", align 1
@.str.8.676 = private unnamed_addr constant [9 x i8] c"abstract\00", align 1
@.str.9.677 = private unnamed_addr constant [5 x i8] c"both\00", align 1
@.str.10.678 = private unnamed_addr constant [7 x i8] c"common\00", align 1
@.str.11.679 = private unnamed_addr constant [6 x i8] c"decls\00", align 1
@.str.12.680 = private unnamed_addr constant [4 x i8] c"end\00", align 1
@.str.13.681 = private unnamed_addr constant [5 x i8] c"enum\00", align 1
@.str.14.682 = private unnamed_addr constant [7 x i8] c"header\00", align 1
@.str.15.683 = private unnamed_addr constant [8 x i8] c"include\00", align 1
@.str.16.684 = private unnamed_addr constant [7 x i8] c"inline\00", align 1
@.str.17.685 = private unnamed_addr constant [9 x i8] c"nocreate\00", align 1
@.str.18.686 = private unnamed_addr constant [5 x i8] c"node\00", align 1
@.str.19.687 = private unnamed_addr constant [10 x i8] c"operation\00", align 1
@.str.20.688 = private unnamed_addr constant [7 x i8] c"option\00", align 1
@.str.21.689 = private unnamed_addr constant [7 x i8] c"outdir\00", align 1
@.str.22.690 = private unnamed_addr constant [7 x i8] c"output\00", align 1
@.str.23.691 = private unnamed_addr constant [9 x i8] c"readonly\00", align 1
@.str.24.692 = private unnamed_addr constant [6 x i8] c"split\00", align 1
@.str.25.693 = private unnamed_addr constant [8 x i8] c"typedef\00", align 1
@.str.26.694 = private unnamed_addr constant [8 x i8] c"virtual\00", align 1
@.str.695 = private unnamed_addr constant [16 x i8] c"%%literal %d %s\00", align 1
@stdin = external global %struct._IO_FILE*, align 8
@.str.696 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@.str.1.697 = private unnamed_addr constant [9 x i8] c"--output\00", align 1
@.str.2.698 = private unnamed_addr constant [9 x i8] c"--header\00", align 1
@.str.3.699 = private unnamed_addr constant [13 x i8] c"--output-dir\00", align 1
@.str.4.700 = private unnamed_addr constant [15 x i8] c"--skeleton-dir\00", align 1
@.str.5.701 = private unnamed_addr constant [12 x i8] c"--extension\00", align 1
@.str.6.702 = private unnamed_addr constant [9 x i8] c"--option\00", align 1
@.str.7.703 = private unnamed_addr constant [15 x i8] c"--force-create\00", align 1
@.str.8.704 = private unnamed_addr constant [12 x i8] c"--no-output\00", align 1
@.str.9.705 = private unnamed_addr constant [7 x i8] c"--help\00", align 1
@.str.10.706 = private unnamed_addr constant [10 x i8] c"--version\00", align 1
@str = private unnamed_addr constant [38 x i8] c"TREECC 0.2.8 - Tree Compiler-Compiler\00"
@str.42 = private unnamed_addr constant [59 x i8] c"Copyright (c) 2001, 2002 Southern Storm Software, Pty Ltd.\00"
@str.43 = private unnamed_addr constant [66 x i8] c"TREECC comes with ABSOLUTELY NO WARRANTY.  This is free software,\00"
@str.44 = private unnamed_addr constant [62 x i8] c"and you are welcome to redistribute it under the terms of the\00"
@str.45 = private unnamed_addr constant [71 x i8] c"GNU General Public License.  See the file COPYING for further details.\00"
@str.46 = private unnamed_addr constant [65 x i8] c"Use the `--help' option to get help on the command-line options.\00"
@.str.11.707 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.12.708 = private unnamed_addr constant [2 x i8] c"h\00", align 1
@.str.40.709 = private unnamed_addr constant [37 x i8] c"%s: unknown option or invalid value\0A\00", align 1
@.str.14.710 = private unnamed_addr constant [6 x i8] c"stdin\00", align 1
@.str.15.711 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@.str.41.712 = private unnamed_addr constant [11 x i8] c"yy_tree.tc\00", align 1
@.str.16.713 = private unnamed_addr constant [39 x i8] c"TREECC 0.2.8 - Tree Compiler-Compiler\0A\00", align 1
@.str.17.714 = private unnamed_addr constant [60 x i8] c"Copyright (c) 2001, 2002 Southern Storm Software, Pty Ltd.\0A\00", align 1
@.str.19.715 = private unnamed_addr constant [31 x i8] c"Usage: %s [options] input ...\0A\00", align 1
@.str.20.716 = private unnamed_addr constant [28 x i8] c"    -o file, --output file\0A\00", align 1
@.str.21.717 = private unnamed_addr constant [42 x i8] c"        Set the name of the output file.\0A\00", align 1
@.str.22.718 = private unnamed_addr constant [28 x i8] c"    -h file, --header file\0A\00", align 1
@.str.23.719 = private unnamed_addr constant [49 x i8] c"        Set the name of the header output file.\0A\00", align 1
@.str.24.720 = private unnamed_addr constant [32 x i8] c"    -d dir,  --output-dir file\0A\00", align 1
@.str.25.721 = private unnamed_addr constant [52 x i8] c"        Set the name of the Java output directory.\0A\00", align 1
@.str.26.722 = private unnamed_addr constant [30 x i8] c"    -e ext,  --extension ext\0A\00", align 1
@.str.27.723 = private unnamed_addr constant [58 x i8] c"        Set the output file extension (default is \22.c\22).\0A\00", align 1
@.str.28.724 = private unnamed_addr constant [29 x i8] c"    -f,      --force-create\0A\00", align 1
@.str.29.725 = private unnamed_addr constant [55 x i8] c"        Force the creation of unchanged output files.\0A\00", align 1
@.str.30.726 = private unnamed_addr constant [27 x i8] c"    -O opt,  --option opt\0A\00", align 1
@.str.31.727 = private unnamed_addr constant [43 x i8] c"        Set a treecc source option value.\0A\00", align 1
@.str.32.728 = private unnamed_addr constant [12 x i8] c"    --help\0A\00", align 1
@.str.33.729 = private unnamed_addr constant [34 x i8] c"        Print this help message.\0A\00", align 1
@.str.34.730 = private unnamed_addr constant [24 x i8] c"    -v,      --version\0A\00", align 1
@.str.35.731 = private unnamed_addr constant [36 x i8] c"        Print the program version.\0A\00", align 1
@.str.1.750 = private unnamed_addr constant [10 x i8] c"no_parent\00", align 1
@.str.751 = private unnamed_addr constant [16 x i8] c"%%node %s %s %d\00", align 1
@.str.2.752 = private unnamed_addr constant [35 x i8] c"node type `%s' is already declared\00", align 1
@.str.3.753 = private unnamed_addr constant [26 x i8] c"previous declaration here\00", align 1
@.str.4.754 = private unnamed_addr constant [31 x i8] c"node type `%s' is not declared\00", align 1
@.str.5.755 = private unnamed_addr constant [52 x i8] c"base node type `%s' must be declared with %%typedef\00", align 1
@.str.6.756 = private unnamed_addr constant [31 x i8] c"field type does not end in `*'\00", align 1
@.str.7.757 = private unnamed_addr constant [16 x i8] c"%%virtual %s %s\00", align 1
@.str.9.758 = private unnamed_addr constant [8 x i8] c"no_type\00", align 1
@.str.10.759 = private unnamed_addr constant [9 x i8] c"no_value\00", align 1
@.str.8.760 = private unnamed_addr constant [20 x i8] c"%%field %s %s %s %d\00", align 1
@.str.11.761 = private unnamed_addr constant [31 x i8] c"field `%s' is already declared\00", align 1
@.str.1.770 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.2.771 = private unnamed_addr constant [3 x i8] c"::\00", align 1
@.str.772 = private unnamed_addr constant [25 x i8] c"%%operation %s %s%s%s %d\00", align 1
@.str.4.773 = private unnamed_addr constant [8 x i8] c"no_name\00", align 1
@.str.3.774 = private unnamed_addr constant [17 x i8] c"%%param %s %s %d\00", align 1
@.str.5.775 = private unnamed_addr constant [10 x i8] c"%%case %s\00", align 1
@.str.6.776 = private unnamed_addr constant [13 x i8] c"%%case %s %s\00", align 1
@.str.7.777 = private unnamed_addr constant [28 x i8] c"operation `%s' has no cases\00", align 1
@.str.8.778 = private unnamed_addr constant [60 x i8] c"node type `%s' is handled multiple times for operation `%s'\00", align 1
@.str.9.779 = private unnamed_addr constant [40 x i8] c"multiple definitions for operation `%s'\00", align 1
@.str.10.780 = private unnamed_addr constant [22 x i8] c"first definition here\00", align 1
@.str.12.781 = private unnamed_addr constant [30 x i8] c"overlap between trigger types\00", align 1
@.str.15.782 = private unnamed_addr constant [3 x i8] c", \00", align 1
@.str.13.783 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@.str.14.784 = private unnamed_addr constant [41 x i8] c"case `%s' is missing from operation `%s'\00", align 1
@.str.11.785 = private unnamed_addr constant [48 x i8] c"node type `%s' is not handled in operation `%s'\00", align 1
@OptionHandlers = internal unnamed_addr constant [33 x %struct.anon.180] [%struct.anon.180 { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.788, i32 0, i32 0), i32 (%struct._tagTreeCCContext*, i8*, i32)* @TrackLinesOption, i32 1 }, %struct.anon.180 { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1.789, i32 0, i32 0), i32 (%struct._tagTreeCCContext*, i8*, i32)* @TrackLinesOption, i32 0 }, %struct.anon.180 { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2.790, i32 0, i32 0), i32 (%struct._tagTreeCCContext*, i8*, i32)* @NoSingletonsOption, i32 1 }, %struct.anon.180 { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3.791, i32 0, i32 0), i32 (%struct._tagTreeCCContext*, i8*, i32)* @NoSingletonsOption, i32 0 }, %struct.anon.180 { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.792, i32 0, i32 0), i32 (%struct._tagTreeCCContext*, i8*, i32)* @ReentrantOption, i32 1 }, %struct.anon.180 { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.5.793, i32 0, i32 0), i32 (%struct._tagTreeCCContext*, i8*, i32)* @ReentrantOption, i32 0 }, %struct.anon.180 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6.794, i32 0, i32 0), i32 (%struct._tagTreeCCContext*, i8*, i32)* @ForceOption, i32 1 }, %struct.anon.180 { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7.795, i32 0, i32 0), i32 (%struct._tagTreeCCContext*, i8*, i32)* @ForceOption, i32 0 }, %struct.anon.180 { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.8.796, i32 0, i32 0), i32 (%struct._tagTreeCCContext*, i8*, i32)* @VirtualFactoryOption, i32 1 }, %struct.anon.180 { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.9.797, i32 0, i32 0), i32 (%struct._tagTreeCCContext*, i8*, i32)* @VirtualFactoryOption, i32 0 }, %struct.anon.180 { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.10.798, i32 0, i32 0), i32 (%struct._tagTreeCCContext*, i8*, i32)* @AbstractFactoryOption, i32 1 }, %struct.anon.180 { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.11.799, i32 0, i32 0), i32 (%struct._tagTreeCCContext*, i8*, i32)* @AbstractFactoryOption, i32 0 }, %struct.anon.180 { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.12.800, i32 0, i32 0), i32 (%struct._tagTreeCCContext*, i8*, i32)* @KindInVtableOption, i32 1 }, %struct.anon.180 { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.13.801, i32 0, i32 0), i32 (%struct._tagTreeCCContext*, i8*, i32)* @KindInVtableOption, i32 0 }, %struct.anon.180 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.14.802, i32 0, i32 0), i32 (%struct._tagTreeCCContext*, i8*, i32)* @PrefixOption, i32 0 }, %struct.anon.180 { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.15.803, i32 0, i32 0), i32 (%struct._tagTreeCCContext*, i8*, i32)* @StateTypeOption, i32 0 }, %struct.anon.180 { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.16.804, i32 0, i32 0), i32 (%struct._tagTreeCCContext*, i8*, i32)* @NamespaceOption, i32 0 }, %struct.anon.180 { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.17.805, i32 0, i32 0), i32 (%struct._tagTreeCCContext*, i8*, i32)* @NamespaceOption, i32 0 }, %struct.anon.180 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.18.806, i32 0, i32 0), i32 (%struct._tagTreeCCContext*, i8*, i32)* @BaseOption, i32 0 }, %struct.anon.180 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.19.807, i32 0, i32 0), i32 (%struct._tagTreeCCContext*, i8*, i32)* @LangOption, i32 0 }, %struct.anon.180 { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.20.808, i32 0, i32 0), i32 (%struct._tagTreeCCContext*, i8*, i32)* @BlockSizeOption, i32 0 }, %struct.anon.180 { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.21.809, i32 0, i32 0), i32 (%struct._tagTreeCCContext*, i8*, i32)* @StripFilenamesOption, i32 1 }, %struct.anon.180 { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.22.810, i32 0, i32 0), i32 (%struct._tagTreeCCContext*, i8*, i32)* @PrintLineNumberOption, i32 1 }, %struct.anon.180 { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.23.811, i32 0, i32 0), i32 (%struct._tagTreeCCContext*, i8*, i32)* @PrintLineNumberOption, i32 0 }, %struct.anon.180 { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.24.812, i32 0, i32 0), i32 (%struct._tagTreeCCContext*, i8*, i32)* @StripFilenamesOption, i32 0 }, %struct.anon.180 { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.25.813, i32 0, i32 0), i32 (%struct._tagTreeCCContext*, i8*, i32)* @InternalAccessOption, i32 1 }, %struct.anon.180 { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.26.814, i32 0, i32 0), i32 (%struct._tagTreeCCContext*, i8*, i32)* @InternalAccessOption, i32 0 }, %struct.anon.180 { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.27.815, i32 0, i32 0), i32 (%struct._tagTreeCCContext*, i8*, i32)* @AllocatorOption, i32 1 }, %struct.anon.180 { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.28.816, i32 0, i32 0), i32 (%struct._tagTreeCCContext*, i8*, i32)* @AllocatorOption, i32 0 }, %struct.anon.180 { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.29.817, i32 0, i32 0), i32 (%struct._tagTreeCCContext*, i8*, i32)* @GCAllocatorOption, i32 1 }, %struct.anon.180 { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.30.818, i32 0, i32 0), i32 (%struct._tagTreeCCContext*, i8*, i32)* @GCAllocatorOption, i32 0 }, %struct.anon.180 { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.31.819, i32 0, i32 0), i32 (%struct._tagTreeCCContext*, i8*, i32)* @BaseTypeOption, i32 0 }, %struct.anon.180 zeroinitializer], align 16
@.str.788 = private unnamed_addr constant [12 x i8] c"track_lines\00", align 1
@.str.1.789 = private unnamed_addr constant [15 x i8] c"no_track_lines\00", align 1
@.str.2.790 = private unnamed_addr constant [14 x i8] c"no_singletons\00", align 1
@.str.3.791 = private unnamed_addr constant [11 x i8] c"singletons\00", align 1
@.str.4.792 = private unnamed_addr constant [10 x i8] c"reentrant\00", align 1
@.str.5.793 = private unnamed_addr constant [13 x i8] c"no_reentrant\00", align 1
@.str.6.794 = private unnamed_addr constant [6 x i8] c"force\00", align 1
@.str.7.795 = private unnamed_addr constant [9 x i8] c"no_force\00", align 1
@.str.8.796 = private unnamed_addr constant [16 x i8] c"virtual_factory\00", align 1
@.str.9.797 = private unnamed_addr constant [19 x i8] c"no_virtual_factory\00", align 1
@.str.10.798 = private unnamed_addr constant [17 x i8] c"abstract_factory\00", align 1
@.str.11.799 = private unnamed_addr constant [20 x i8] c"no_abstract_factory\00", align 1
@.str.12.800 = private unnamed_addr constant [15 x i8] c"kind_in_vtable\00", align 1
@.str.13.801 = private unnamed_addr constant [13 x i8] c"kind_in_node\00", align 1
@.str.14.802 = private unnamed_addr constant [7 x i8] c"prefix\00", align 1
@.str.15.803 = private unnamed_addr constant [11 x i8] c"state_type\00", align 1
@.str.16.804 = private unnamed_addr constant [10 x i8] c"namespace\00", align 1
@.str.17.805 = private unnamed_addr constant [8 x i8] c"package\00", align 1
@.str.18.806 = private unnamed_addr constant [5 x i8] c"base\00", align 1
@.str.19.807 = private unnamed_addr constant [5 x i8] c"lang\00", align 1
@.str.20.808 = private unnamed_addr constant [11 x i8] c"block_size\00", align 1
@.str.21.809 = private unnamed_addr constant [16 x i8] c"strip_filenames\00", align 1
@.str.22.810 = private unnamed_addr constant [12 x i8] c"print_lines\00", align 1
@.str.23.811 = private unnamed_addr constant [15 x i8] c"no_print_lines\00", align 1
@.str.24.812 = private unnamed_addr constant [19 x i8] c"no_strip_filenames\00", align 1
@.str.25.813 = private unnamed_addr constant [16 x i8] c"internal_access\00", align 1
@.str.26.814 = private unnamed_addr constant [14 x i8] c"public_access\00", align 1
@.str.27.815 = private unnamed_addr constant [10 x i8] c"allocator\00", align 1
@.str.28.816 = private unnamed_addr constant [13 x i8] c"no_allocator\00", align 1
@.str.29.817 = private unnamed_addr constant [13 x i8] c"gc_allocator\00", align 1
@.str.30.818 = private unnamed_addr constant [16 x i8] c"no_gc_allocator\00", align 1
@.str.31.819 = private unnamed_addr constant [10 x i8] c"base_type\00", align 1
@.str.36.820 = private unnamed_addr constant [5 x i8] c"java\00", align 1
@.str.37.821 = private unnamed_addr constant [5 x i8] c"Java\00", align 1
@.str.40.822 = private unnamed_addr constant [7 x i8] c"csharp\00", align 1
@.str.41.823 = private unnamed_addr constant [5 x i8] c"ruby\00", align 1
@.str.42.824 = private unnamed_addr constant [5 x i8] c"Ruby\00", align 1
@.str.10.827 = private unnamed_addr constant [31 x i8] c"operation `%s' is not declared\00", align 1
@.str.11.828 = private unnamed_addr constant [31 x i8] c"node type `%s' is not declared\00", align 1
@.str.12.829 = private unnamed_addr constant [19 x i8] c"type name expected\00", align 1
@.str.7.830 = private unnamed_addr constant [13 x i8] c"`,' expected\00", align 1
@.str.13.831 = private unnamed_addr constant [13 x i8] c"`)' expected\00", align 1
@.str.14.832 = private unnamed_addr constant [13 x i8] c"`(' expected\00", align 1
@.str.15.833 = private unnamed_addr constant [43 x i8] c"incorrect number of triggers for operation\00", align 1
@.str.16.834 = private unnamed_addr constant [24 x i8] c"operation declared here\00", align 1
@.str.17.835 = private unnamed_addr constant [42 x i8] c"node type `%s' does not inherit from `%s'\00", align 1
@.str.8.836 = private unnamed_addr constant [20 x i8] c"identifier expected\00", align 1
@.str.9.837 = private unnamed_addr constant [20 x i8] c"code block expected\00", align 1
@.str.838 = private unnamed_addr constant [34 x i8] c"literal definition block expected\00", align 1
@.str.18.839 = private unnamed_addr constant [31 x i8] c"literal code constant expected\00", align 1
@.str.19.840 = private unnamed_addr constant [61 x i8] c"default values can only be specified for `%%nocreate' fields\00", align 1
@.str.21.841 = private unnamed_addr constant [27 x i8] c"field declaration expected\00", align 1
@.str.20.842 = private unnamed_addr constant [20 x i8] c"field name expected\00", align 1
@.str.22.843 = private unnamed_addr constant [13 x i8] c"`;' expected\00", align 1
@.str.23.844 = private unnamed_addr constant [32 x i8] c"field definition block expected\00", align 1
@.str.28.845 = private unnamed_addr constant [47 x i8] c"`virtual' and `inline' cannot be used together\00", align 1
@.str.30.846 = private unnamed_addr constant [31 x i8] c"operation return type expected\00", align 1
@.str.29.847 = private unnamed_addr constant [24 x i8] c"operation name expected\00", align 1
@.str.31.848 = private unnamed_addr constant [43 x i8] c"C# requires that a class name be specified\00", align 1
@.str.32.849 = private unnamed_addr constant [48 x i8] c"C# requires different class and operation names\00", align 1
@.str.27.850 = private unnamed_addr constant [13 x i8] c"`]' expected\00", align 1
@.str.33.851 = private unnamed_addr constant [31 x i8] c"parameter declaration expected\00", align 1
@.str.34.852 = private unnamed_addr constant [5 x i8] c"void\00", align 1
@.str.35.853 = private unnamed_addr constant [33 x i8] c"`%s' is not a valid trigger type\00", align 1
@.str.43.854 = private unnamed_addr constant [30 x i8] c"trigger types must end in `*'\00", align 1
@.str.36.855 = private unnamed_addr constant [23 x i8] c"default value expected\00", align 1
@.str.37.856 = private unnamed_addr constant [23 x i8] c"default value required\00", align 1
@.str.38.857 = private unnamed_addr constant [52 x i8] c"virtual operations must have at least one parameter\00", align 1
@.str.39.858 = private unnamed_addr constant [53 x i8] c"the first parameter of a virtual must be the trigger\00", align 1
@.str.40.859 = private unnamed_addr constant [63 x i8] c"cannot use enumerated types as triggers for virtual operations\00", align 1
@.str.41.860 = private unnamed_addr constant [35 x i8] c"operation `%s' is already declared\00", align 1
@.str.42.861 = private unnamed_addr constant [26 x i8] c"previous declaration here\00", align 1
@.str.44.862 = private unnamed_addr constant [21 x i8] c"option name expected\00", align 1
@.str.45.863 = private unnamed_addr constant [30 x i8] c"identifier or string expected\00", align 1
@.str.46.864 = private unnamed_addr constant [15 x i8] c"%%option %s %s\00", align 1
@.str.47.865 = private unnamed_addr constant [12 x i8] c"%%option %s\00", align 1
@.str.48.866 = private unnamed_addr constant [20 x i8] c"unknown option `%s'\00", align 1
@.str.49.867 = private unnamed_addr constant [30 x i8] c"invalid value for option `%s'\00", align 1
@.str.50.868 = private unnamed_addr constant [29 x i8] c"option `%s' requires a value\00", align 1
@.str.51.869 = private unnamed_addr constant [34 x i8] c"option `%s' does not take a value\00", align 1
@.str.1.870 = private unnamed_addr constant [25 x i8] c"header filename expected\00", align 1
@.str.2.871 = private unnamed_addr constant [25 x i8] c"output filename expected\00", align 1
@.str.52.872 = private unnamed_addr constant [30 x i8] c"enumerated type name expected\00", align 1
@.str.53.873 = private unnamed_addr constant [13 x i8] c"`=' expected\00", align 1
@.str.54.874 = private unnamed_addr constant [13 x i8] c"`{' expected\00", align 1
@.str.55.875 = private unnamed_addr constant [45 x i8] c"no values were specified for the enumeration\00", align 1
@.str.56.876 = private unnamed_addr constant [13 x i8] c"`}' expected\00", align 1
@.str.3.877 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@.str.4.878 = private unnamed_addr constant [17 x i8] c"cannot open \22%s\22\00", align 1
@.str.5.879 = private unnamed_addr constant [26 x i8] c"include filename expected\00", align 1
@.str.6.880 = private unnamed_addr constant [21 x i8] c"declaration expected\00", align 1
@.str.26.881 = private unnamed_addr constant [3 x i8] c"[]\00", align 1
@.str.884 = private unnamed_addr constant [55 x i8] c"treecc: internal error - could not find skeleton \22%s\22\0A\00", align 1
@.str.1.885 = private unnamed_addr constant [12 x i8] c"YYNODESTATE\00", align 1
@TreeCCSkelFiles = constant [17 x i8*] [i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.888, i32 0, i32 0), i8* getelementptr inbounds ([6587 x i8], [6587 x i8]* @TreeCCSkel_c_skel_c, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1.889, i32 0, i32 0), i8* getelementptr inbounds ([124 x i8], [124 x i8]* @TreeCCSkel_c_skel_h, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2.890, i32 0, i32 0), i8* getelementptr inbounds ([6242 x i8], [6242 x i8]* @TreeCCSkel_cpp_skel_cc, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3.891, i32 0, i32 0), i8* getelementptr inbounds ([101 x i8], [101 x i8]* @TreeCCSkel_cpp_skel_h, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4.892, i32 0, i32 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @TreeCCSkel_c_gc_skel_h, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.5.893, i32 0, i32 0), i8* getelementptr inbounds ([2022 x i8], [2022 x i8]* @TreeCCSkel_c_gc_skel_c, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6.894, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @TreeCCSkel_cpp_gc_skel_h, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.7.895, i32 0, i32 0), i8* getelementptr inbounds ([2540 x i8], [2540 x i8]* @TreeCCSkel_cpp_gc_skel_cc, i32 0, i32 0), i8* null], align 16
@.str.888 = private unnamed_addr constant [9 x i8] c"c_skel.c\00", align 1
@TreeCCSkel_c_skel_c = internal constant [6587 x i8] c"/*\0A * treecc node allocation routines for C.\0A *\0A * Copyright (C) 2001  Southern Storm Software, Pty Ltd.\0A *\0A * This program is free software; you can redistribute it and/or modify\0A * it under the terms of the GNU General Public License as published by\0A * the Free Software Foundation; either version 2 of the License, or\0A * (at your option) any later version.\0A *\0A * This program is distributed in the hope that it will be useful,\0A * but WITHOUT ANY WARRANTY; without even the implied warranty of\0A * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\0A * GNU General Public License for more details.\0A *\0A * You should have received a copy of the GNU General Public License\0A * along with this program; if not, write to the Free Software\0A * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\0A *\0A * As a special exception, when this file is copied by treecc into\0A * a treecc output file, you may use that output file without restriction.\0A */\0A\0A#include <stdlib.h>\0A\0A#ifndef YYNODESTATE_BLKSIZ\0A#define\09YYNODESTATE_BLKSIZ\092048\0A#endif\0A\0A/*\0A * Types used by the allocation routines.\0A */\0Astruct YYNODESTATE_block\0A{\0A\09char data__[YYNODESTATE_BLKSIZ];\0A\09struct YYNODESTATE_block *next__;\0A\0A};\0Astruct YYNODESTATE_push\0A{\0A\09struct YYNODESTATE_push *next__;\0A\09struct YYNODESTATE_block *saved_block__;\0A\09int saved_used__;\0A};\0A\0A/*\0A * The fixed global state to use for non-reentrant allocation.\0A */\0A#ifndef YYNODESTATE_REENTRANT\0Astatic YYNODESTATE fixed_state__;\0A#endif\0A\0A/*\0A * Some macro magic to determine the default alignment\0A * on this machine.  This will compile down to a constant.\0A */\0A#define\09YYNODESTATE_ALIGN_CHECK_TYPE(type,name)\09\5C\0A\09struct _YYNODESTATE_align_##name { \5C\0A\09\09char pad; \5C\0A\09\09type field; \5C\0A\09}\0A#define\09YYNODESTATE_ALIGN_FOR_TYPE(type)\09\5C\0A\09((unsigned)(&(((struct _YYNODESTATE_align_##type *)0)->field)))\0A#define\09YYNODESTATE_ALIGN_MAX(a,b)\09\5C\0A\09((a) > (b) ? (a) : (b))\0A#define\09YYNODESTATE_ALIGN_MAX3(a,b,c) \5C\0A\09(YYNODESTATE_ALIGN_MAX((a), YYNODESTATE_ALIGN_MAX((b), (c))))\0AYYNODESTATE_ALIGN_CHECK_TYPE(int, int);\0AYYNODESTATE_ALIGN_CHECK_TYPE(long, long);\0A#if defined(WIN32) && !defined(__CYGWIN__)\0AYYNODESTATE_ALIGN_CHECK_TYPE(__int64, long_long);\0A#else\0AYYNODESTATE_ALIGN_CHECK_TYPE(long long, long_long);\0A#endif\0AYYNODESTATE_ALIGN_CHECK_TYPE(void *, void_p);\0AYYNODESTATE_ALIGN_CHECK_TYPE(float, float);\0AYYNODESTATE_ALIGN_CHECK_TYPE(double, double);\0A#define\09YYNODESTATE_ALIGNMENT\09\5C\0A\09YYNODESTATE_ALIGN_MAX( \5C\0A\09\09\09YYNODESTATE_ALIGN_MAX3\09\5C\0A\09\09\09(YYNODESTATE_ALIGN_FOR_TYPE(int), \5C\0A\09\09     YYNODESTATE_ALIGN_FOR_TYPE(long), \5C\0A\09\09\09 YYNODESTATE_ALIGN_FOR_TYPE(long_long)), \5C\0A  \09     YYNODESTATE_ALIGN_MAX3 \5C\0A\09\09 \09(YYNODESTATE_ALIGN_FOR_TYPE(void_p), \5C\0A\09\09\09 YYNODESTATE_ALIGN_FOR_TYPE(float), \5C\0A\09\09\09 YYNODESTATE_ALIGN_FOR_TYPE(double)))\0A\0A/*\0A * Initialize the node allocation pool.\0A */\0A#ifdef YYNODESTATE_REENTRANT\0Avoid yynodeinit(state__)\0AYYNODESTATE *state__;\0A{\0A#else\0Avoid yynodeinit()\0A{\0A\09YYNODESTATE *state__ = &fixed_state__;\0A#endif\0A\09state__->blocks__ = 0;\0A\09state__->push_stack__ = 0;\0A\09state__->used__ = 0;\0A}\0A\0A/*\0A * Allocate a block of memory.\0A */\0A#ifdef YYNODESTATE_REENTRANT\0Avoid *yynodealloc(state__, size__)\0AYYNODESTATE *state__;\0Aunsigned int size__;\0A{\0A#else\0Avoid *yynodealloc(size__)\0Aunsigned int size__;\0A{\0A\09YYNODESTATE *state__ = &fixed_state__;\0A#endif\0A\09struct YYNODESTATE_block *block__;\0A\09void *result__;\0A\0A\09/* Round the size to the next alignment boundary */\0A\09size__ = (size__ + YYNODESTATE_ALIGNMENT - 1) &\0A\09\09\09\09~(YYNODESTATE_ALIGNMENT - 1);\0A\0A\09/* Do we need to allocate a new block? */\0A\09block__ = state__->blocks__;\0A\09if(!block__ || (state__->used__ + size__) > YYNODESTATE_BLKSIZ)\0A\09{\0A\09\09if(size__ > YYNODESTATE_BLKSIZ)\0A\09\09{\0A\09\09\09/* The allocation is too big for the node pool */\0A\09\09\09return (void *)0;\0A\09\09}\0A\09\09block__ = (struct YYNODESTATE_block *)\0A\09\09\09\09\09\09malloc(sizeof(struct YYNODESTATE_block));\0A\09\09if(!block__)\0A\09\09{\0A\09\09\09/* The system is out of memory.  The programmer can\0A\09\09\09   supply the \22yynodefailed\22 function to report the\0A\09\09\09   out of memory state and/or abort the program */\0A#ifdef YYNODESTATE_REENTRANT\0A\09\09\09yynodefailed(state__);\0A#else\0A\09\09\09yynodefailed();\0A#endif\0A\09\09\09return (void *)0;\0A\09\09}\0A\09\09block__->next__ = state__->blocks__;\0A\09\09state__->blocks__ = block__;\0A\09\09state__->used__ = 0;\0A\09}\0A\0A\09/* Allocate the memory and return it */\0A\09result__ = (void *)(block__->data__ + state__->used__);\0A\09state__->used__ += size__;\0A\09return result__;\0A}\0A\0A/*\0A * Push the node allocation state.\0A */\0A#ifdef YYNODESTATE_REENTRANT\0Aint yynodepush(state__)\0AYYNODESTATE *state__;\0A{\0A#else\0Aint yynodepush()\0A{\0A\09YYNODESTATE *state__ = &fixed_state__;\0A#endif\0A\09struct YYNODESTATE_block *saved_block__;\0A\09int saved_used__;\0A\09struct YYNODESTATE_push *push_item__;\0A\0A\09/* Save the current state of the node allocation pool */\0A\09saved_block__ = state__->blocks__;\0A\09saved_used__ = state__->used__;\0A\0A\09/* Allocate space for a push item */\0A#ifdef YYNODESTATE_REENTRANT\0A\09push_item__ = (struct YYNODESTATE_push *)\0A\09\09\09yynodealloc(state__, sizeof(struct YYNODESTATE_push));\0A#else\0A\09push_item__ = (struct YYNODESTATE_push *)\0A\09\09\09yynodealloc(sizeof(struct YYNODESTATE_push));\0A#endif\0A\09if(!push_item__)\0A\09{\0A\09\09return 0;\0A\09}\0A\0A\09/* Copy the saved information to the push item */\0A\09push_item__->saved_block__ = saved_block__;\0A\09push_item__->saved_used__ = saved_used__;\0A\0A\09/* Add the push item to the push stack */\0A\09push_item__->next__ = state__->push_stack__;\0A\09state__->push_stack__ = push_item__;\0A\09return 1;\0A}\0A\0A/*\0A * Pop the node allocation state.\0A */\0A#ifdef YYNODESTATE_REENTRANT\0Avoid yynodepop(state__)\0AYYNODESTATE *state__;\0A{\0A#else\0Avoid yynodepop()\0A{\0A\09YYNODESTATE *state__ = &fixed_state__;\0A#endif\0A\09struct YYNODESTATE_push *push_item__;\0A\09struct YYNODESTATE_block *saved_block__;\0A\09struct YYNODESTATE_block *temp_block__;\0A\0A\09/* Pop the top of the push stack */\0A\09push_item__ = state__->push_stack__;\0A\09if(push_item__ == 0)\0A\09{\0A\09\09saved_block__ = 0;\0A\09\09state__->used__ = 0;\0A\09}\0A\09else\0A\09{\0A\09\09saved_block__ = push_item__->saved_block__;\0A\09\09state__->used__ = push_item__->saved_used__;\0A\09\09state__->push_stack__ = push_item__->next__;\0A\09}\0A\0A\09/* Free unnecessary blocks */\0A\09while(state__->blocks__ != saved_block__)\0A\09{\0A\09\09temp_block__ = state__->blocks__;\0A\09\09state__->blocks__ = temp_block__->next__;\0A\09\09free(temp_block__);\0A\09}\0A}\0A\0A/*\0A * Clear the node allocation pool completely.\0A */\0A#ifdef YYNODESTATE_REENTRANT\0Avoid yynodeclear(state__)\0AYYNODESTATE *state__;\0A{\0A#else\0Avoid yynodeclear()\0A{\0A\09YYNODESTATE *state__ = &fixed_state__;\0A#endif\0A\09struct YYNODESTATE_block *temp_block__;\0A\09while(state__->blocks__ != 0)\0A\09{\0A\09\09temp_block__ = state__->blocks__;\0A\09\09state__->blocks__ = temp_block__->next__;\0A\09\09free(temp_block__);\0A\09}\0A\09state__->push_stack__ = 0;\0A\09state__->used__ = 0;\0A}\0A\00", align 16
@.str.1.889 = private unnamed_addr constant [9 x i8] c"c_skel.h\00", align 1
@TreeCCSkel_c_skel_h = internal constant [124 x i8] c"typedef struct\0A{\0A\09struct YYNODESTATE_block *blocks__;\0A\09struct YYNODESTATE_push *push_stack__;\0A\09int used__;\0A\0A} YYNODESTATE;\0A\00", align 16
@.str.2.890 = private unnamed_addr constant [12 x i8] c"cpp_skel.cc\00", align 1
@TreeCCSkel_cpp_skel_cc = internal constant [6242 x i8] c"/*\0A * treecc node allocation routines for C++.\0A *\0A * Copyright (C) 2001  Southern Storm Software, Pty Ltd.\0A *\0A * This program is free software; you can redistribute it and/or modify\0A * it under the terms of the GNU General Public License as published by\0A * the Free Software Foundation; either version 2 of the License, or\0A * (at your option) any later version.\0A *\0A * This program is distributed in the hope that it will be useful,\0A * but WITHOUT ANY WARRANTY; without even the implied warranty of\0A * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\0A * GNU General Public License for more details.\0A *\0A * You should have received a copy of the GNU General Public License\0A * along with this program; if not, write to the Free Software\0A * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\0A *\0A * As a special exception, when this file is copied by treecc into\0A * a treecc output file, you may use that output file without restriction.\0A */\0A\0A#ifndef YYNODESTATE_BLKSIZ\0A#define\09YYNODESTATE_BLKSIZ\092048\0A#endif\0A\0A/*\0A * Types used by the allocation routines.\0A */\0Astruct YYNODESTATE_block\0A{\0A\09char data__[YYNODESTATE_BLKSIZ];\0A\09struct YYNODESTATE_block *next__;\0A\0A};\0Astruct YYNODESTATE_push\0A{\0A\09struct YYNODESTATE_push *next__;\0A\09struct YYNODESTATE_block *saved_block__;\0A\09int saved_used__;\0A};\0A\0A/*\0A * Initialize the singleton instance.\0A */\0A#ifndef YYNODESTATE_REENTRANT\0AYYNODESTATE *YYNODESTATE::state__ = 0;\0A#endif\0A\0A/*\0A * Some macro magic to determine the default alignment\0A * on this machine.  This will compile down to a constant.\0A */\0A#define\09YYNODESTATE_ALIGN_CHECK_TYPE(type,name)\09\5C\0A\09struct _YYNODESTATE_align_##name { \5C\0A\09\09char pad; \5C\0A\09\09type field; \5C\0A\09}\0A#define\09YYNODESTATE_ALIGN_FOR_TYPE(type)\09\5C\0A\09((unsigned)(&(((struct _YYNODESTATE_align_##type *)0)->field)))\0A#define\09YYNODESTATE_ALIGN_MAX(a,b)\09\5C\0A\09((a) > (b) ? (a) : (b))\0A#define\09YYNODESTATE_ALIGN_MAX3(a,b,c) \5C\0A\09(YYNODESTATE_ALIGN_MAX((a), YYNODESTATE_ALIGN_MAX((b), (c))))\0AYYNODESTATE_ALIGN_CHECK_TYPE(int, int);\0AYYNODESTATE_ALIGN_CHECK_TYPE(long, long);\0A#if defined(WIN32) && !defined(__CYGWIN__)\0AYYNODESTATE_ALIGN_CHECK_TYPE(__int64, long_long);\0A#else\0AYYNODESTATE_ALIGN_CHECK_TYPE(long long, long_long);\0A#endif\0AYYNODESTATE_ALIGN_CHECK_TYPE(void *, void_p);\0AYYNODESTATE_ALIGN_CHECK_TYPE(float, float);\0AYYNODESTATE_ALIGN_CHECK_TYPE(double, double);\0A#define\09YYNODESTATE_ALIGNMENT\09\5C\0A\09YYNODESTATE_ALIGN_MAX( \5C\0A\09\09\09YYNODESTATE_ALIGN_MAX3\09\5C\0A\09\09\09(YYNODESTATE_ALIGN_FOR_TYPE(int), \5C\0A\09\09     YYNODESTATE_ALIGN_FOR_TYPE(long), \5C\0A\09\09\09 YYNODESTATE_ALIGN_FOR_TYPE(long_long)), \5C\0A  \09     YYNODESTATE_ALIGN_MAX3 \5C\0A\09\09 \09(YYNODESTATE_ALIGN_FOR_TYPE(void_p), \5C\0A\09\09\09 YYNODESTATE_ALIGN_FOR_TYPE(float), \5C\0A\09\09\09 YYNODESTATE_ALIGN_FOR_TYPE(double)))\0A\0A/*\0A * Constructor for YYNODESTATE.\0A */\0AYYNODESTATE::YYNODESTATE()\0A{\0A\09/* Initialize the allocation state */\0A\09blocks__ = 0;\0A\09push_stack__ = 0;\0A\09used__ = 0;\0A\0A#ifndef YYNODESTATE_REENTRANT\0A\09/* Register this object as the singleton instance */\0A\09if(!state__)\0A\09{\0A\09\09state__ = this;\0A\09}\0A#endif\0A}\0A\0A/*\0A * Destructor for YYNODESTATE.\0A */\0AYYNODESTATE::~YYNODESTATE()\0A{\0A\09/* Free all node memory */\0A\09clear();\0A\0A#ifndef YYNODESTATE_REENTRANT\0A\09/* We are no longer the singleton instance */\0A\09if(state__ == this)\0A\09{\0A\09\09state__ = 0;\0A\09}\0A#endif\0A}\0A\0A#ifdef YYNODESTATE_USE_ALLOCATOR\0A\0A/*\0A * Allocate a block of memory.\0A */\0Avoid *YYNODESTATE::alloc(size_t size__)\0A{\0A\09struct YYNODESTATE_block *block__;\0A\09void *result__;\0A\0A\09/* Round the size to the next alignment boundary */\0A\09size__ = (size__ + YYNODESTATE_ALIGNMENT - 1) &\0A\09\09\09\09~(YYNODESTATE_ALIGNMENT - 1);\0A\0A\09/* Do we need to allocate a new block? */\0A\09block__ = blocks__;\0A\09if(!block__ || (used__ + size__) > YYNODESTATE_BLKSIZ)\0A\09{\0A\09\09if(size__ > YYNODESTATE_BLKSIZ)\0A\09\09{\0A\09\09\09/* The allocation is too big for the node pool */\0A\09\09\09return (void *)0;\0A\09\09}\0A\09\09block__ = new YYNODESTATE_block;\0A\09\09if(!block__)\0A\09\09{\0A\09\09\09/* The system is out of memory.  The programmer can\0A\09\09\09   inherit the \22failed\22 method to report the\0A\09\09\09   out of memory state and/or abort the program */\0A\09\09\09failed();\0A\09\09\09return (void *)0;\0A\09\09}\0A\09\09block__->next__ = blocks__;\0A\09\09blocks__ = block__;\0A\09\09used__ = 0;\0A\09}\0A\0A\09/* Allocate the memory and return it */\0A\09result__ = (void *)(block__->data__ + used__);\0A\09used__ += size__;\0A\09return result__;\0A}\0A\0A/*\0A * Deallocate a block of memory.\0A */\0Avoid YYNODESTATE::dealloc(void *ptr__, size_t size__)\0A{\0A\09/* Nothing to do for this type of node allocator */\0A}\0A\0A/*\0A * Push the node allocation state.\0A */\0Aint YYNODESTATE::push()\0A{\0A\09struct YYNODESTATE_block *saved_block__;\0A\09int saved_used__;\0A\09struct YYNODESTATE_push *push_item__;\0A\0A\09/* Save the current state of the node allocation pool */\0A\09saved_block__ = blocks__;\0A\09saved_used__ = used__;\0A\0A\09/* Allocate space for a push item */\0A\09push_item__ = (struct YYNODESTATE_push *)\0A\09\09\09alloc(sizeof(struct YYNODESTATE_push));\0A\09if(!push_item__)\0A\09{\0A\09\09return 0;\0A\09}\0A\0A\09/* Copy the saved information to the push item */\0A\09push_item__->saved_block__ = saved_block__;\0A\09push_item__->saved_used__ = saved_used__;\0A\0A\09/* Add the push item to the push stack */\0A\09push_item__->next__ = push_stack__;\0A\09push_stack__ = push_item__;\0A\09return 1;\0A}\0A\0A/*\0A * Pop the node allocation state.\0A */\0Avoid YYNODESTATE::pop()\0A{\0A\09struct YYNODESTATE_push *push_item__;\0A\09struct YYNODESTATE_block *saved_block__;\0A\09struct YYNODESTATE_block *temp_block__;\0A\0A\09/* Pop the top of the push stack */\0A\09push_item__ = push_stack__;\0A\09if(push_item__ == 0)\0A\09{\0A\09\09saved_block__ = 0;\0A\09\09used__ = 0;\0A\09}\0A\09else\0A\09{\0A\09\09saved_block__ = push_item__->saved_block__;\0A\09\09used__ = push_item__->saved_used__;\0A\09\09push_stack__ = push_item__->next__;\0A\09}\0A\0A\09/* Free unnecessary blocks */\0A\09while(blocks__ != saved_block__)\0A\09{\0A\09\09temp_block__ = blocks__;\0A\09\09blocks__ = temp_block__->next__;\0A\09\09delete temp_block__;\0A\09}\0A}\0A\0A/*\0A * Clear the node allocation pool completely.\0A */\0Avoid YYNODESTATE::clear()\0A{\0A\09struct YYNODESTATE_block *temp_block__;\0A\09while(blocks__ != 0)\0A\09{\0A\09\09temp_block__ = blocks__;\0A\09\09blocks__ = temp_block__->next__;\0A\09\09delete temp_block__;\0A\09}\0A\09push_stack__ = 0;\0A\09used__ = 0;\0A}\0A\0A#endif /* YYNODESTATE_USE_ALLOCATOR */\0A\0A/*\0A * Default implementation of functions which may be overridden.\0A */\0Avoid YYNODESTATE::failed()\0A{\0A}\0A\0A#ifdef YYNODESTATE_TRACK_LINES\0A\0Achar *YYNODESTATE::currFilename()\0A{\0A\09return (char *)0;\0A}\0A\0Along YYNODESTATE::currLinenum()\0A{\0A\09return 0;\0A}\0A\0A#endif\0A\00", align 16
@.str.3.891 = private unnamed_addr constant [11 x i8] c"cpp_skel.h\00", align 1
@TreeCCSkel_cpp_skel_h = internal constant [101 x i8] c"private:\0A\0A\09struct YYNODESTATE_block *blocks__;\0A\09struct YYNODESTATE_push *push_stack__;\0A\09int used__;\0A\00", align 16
@.str.4.892 = private unnamed_addr constant [12 x i8] c"c_gc_skel.h\00", align 1
@TreeCCSkel_c_gc_skel_h = internal constant [48 x i8] c"typedef struct\0A{\0A\09int dummy__;\0A\0A} YYNODESTATE;\0A\00", align 16
@.str.5.893 = private unnamed_addr constant [12 x i8] c"c_gc_skel.c\00", align 1
@TreeCCSkel_c_gc_skel_c = internal constant [2022 x i8] c"/*\0A * treecc node allocation routines for C.\0A *\0A * Copyright (C) 2003  Southern Storm Software, Pty Ltd.\0A *\0A * This program is free software; you can redistribute it and/or modify\0A * it under the terms of the GNU General Public License as published by\0A * the Free Software Foundation; either version 2 of the License, or\0A * (at your option) any later version.\0A *\0A * This program is distributed in the hope that it will be useful,\0A * but WITHOUT ANY WARRANTY; without even the implied warranty of\0A * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\0A * GNU General Public License for more details.\0A *\0A * You should have received a copy of the GNU General Public License\0A * along with this program; if not, write to the Free Software\0A * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\0A *\0A * As a special exception, when this file is copied by treecc into\0A * a treecc output file, you may use that output file without restriction.\0A */\0A\0A#include <stdlib.h>\0A#include <gc.h>\0A\0A/*\0A * Initialize the node allocation pool.\0A */\0A#ifdef YYNODESTATE_REENTRANT\0Avoid yynodeinit(state__)\0AYYNODESTATE *state__;\0A{\0A#else\0Avoid yynodeinit()\0A{\0A#endif\0A\09GC_INIT();\0A\09GC_init();\0A}\0A\0A/*\0A * Allocate a block of memory.\0A */\0A#ifdef YYNODESTATE_REENTRANT\0Avoid *yynodealloc(state__, size__)\0AYYNODESTATE *state__;\0Aunsigned int size__;\0A{\0A#else\0Avoid *yynodealloc(size__)\0Aunsigned int size__;\0A{\0A#endif\0A\09return (void *)GC_MALLOC((size_t)size__);\0A}\0A\0A/*\0A * Push the node allocation state.  Not used in the GC version.\0A */\0A#ifdef YYNODESTATE_REENTRANT\0Aint yynodepush(state__)\0AYYNODESTATE *state__;\0A{\0A#else\0Aint yynodepush()\0A{\0A#endif\0A\09return 1;\0A}\0A\0A/*\0A * Pop the node allocation state.  Not used in the GC version.\0A */\0A#ifdef YYNODESTATE_REENTRANT\0Avoid yynodepop(state__)\0AYYNODESTATE *state__;\0A{\0A#else\0Avoid yynodepop()\0A{\0A#endif\0A}\0A\0A/*\0A * Clear the node allocation pool completely.  Not used in the GC version.\0A */\0A#ifdef YYNODESTATE_REENTRANT\0Avoid yynodeclear(state__)\0AYYNODESTATE *state__;\0A{\0A#else\0Avoid yynodeclear()\0A{\0A#endif\0A}\0A\00", align 16
@.str.6.894 = private unnamed_addr constant [14 x i8] c"cpp_gc_skel.h\00", align 1
@TreeCCSkel_cpp_gc_skel_h = internal constant [2 x i8] c"\0A\00", align 1
@.str.7.895 = private unnamed_addr constant [15 x i8] c"cpp_gc_skel.cc\00", align 1
@TreeCCSkel_cpp_gc_skel_cc = internal constant [2540 x i8] c"/*\0A * treecc node allocation routines for C++.\0A *\0A * Copyright (C) 2003  Southern Storm Software, Pty Ltd.\0A *\0A * This program is free software; you can redistribute it and/or modify\0A * it under the terms of the GNU General Public License as published by\0A * the Free Software Foundation; either version 2 of the License, or\0A * (at your option) any later version.\0A *\0A * This program is distributed in the hope that it will be useful,\0A * but WITHOUT ANY WARRANTY; without even the implied warranty of\0A * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\0A * GNU General Public License for more details.\0A *\0A * You should have received a copy of the GNU General Public License\0A * along with this program; if not, write to the Free Software\0A * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\0A *\0A * As a special exception, when this file is copied by treecc into\0A * a treecc output file, you may use that output file without restriction.\0A */\0A\0A#include <gc.h>\0A\0A/*\0A * Initialize the singleton instance.\0A */\0A#ifndef YYNODESTATE_REENTRANT\0AYYNODESTATE *YYNODESTATE::state__ = 0;\0A#endif\0A\0A/*\0A * Constructor for YYNODESTATE.\0A */\0AYYNODESTATE::YYNODESTATE()\0A{\0A\09/* Initialize the garbage collector */\0A\09GC_INIT();\0A\09GC_init();\0A\0A#ifndef YYNODESTATE_REENTRANT\0A\09/* Register this object as the singleton instance */\0A\09if(!state__)\0A\09{\0A\09\09state__ = this;\0A\09}\0A#endif\0A}\0A\0A/*\0A * Destructor for YYNODESTATE.\0A */\0AYYNODESTATE::~YYNODESTATE()\0A{\0A#ifndef YYNODESTATE_REENTRANT\0A\09/* We are no longer the singleton instance */\0A\09if(state__ == this)\0A\09{\0A\09\09state__ = 0;\0A\09}\0A#endif\0A}\0A\0A#ifdef YYNODESTATE_USE_ALLOCATOR\0A\0A/*\0A * Allocate a block of memory.\0A */\0Avoid *YYNODESTATE::alloc(size_t size__)\0A{\0A\09return (void *)GC_MALLOC((size_t)size__);\0A}\0A\0A/*\0A * Deallocate a block of memory.\0A */\0Avoid YYNODESTATE::dealloc(void *ptr__, size_t size__)\0A{\0A\09/* Nothing to do for this type of node allocator */\0A}\0A\0A/*\0A * Push the node allocation state.\0A */\0Aint YYNODESTATE::push()\0A{\0A\09/* Not used with the garbage collector */\0A\09return 1;\0A}\0A\0A/*\0A * Pop the node allocation state.\0A */\0Avoid YYNODESTATE::pop()\0A{\0A\09/* Not used with the garbage collector */\0A}\0A\0A/*\0A * Clear the node allocation pool completely.\0A */\0Avoid YYNODESTATE::clear()\0A{\0A\09/* Not used with the garbage collector */\0A}\0A\0A#endif /* YYNODESTATE_USE_ALLOCATOR */\0A\0A/*\0A * Default implementation of functions which may be overridden.\0A */\0Avoid YYNODESTATE::failed()\0A{\0A}\0A\0A#ifdef YYNODESTATE_TRACK_LINES\0A\0Achar *YYNODESTATE::currFilename()\0A{\0A\09return (char *)0;\0A}\0A\0Along YYNODESTATE::currLinenum()\0A{\0A\09return 0;\0A}\0A\0A#endif\0A\00", align 16
@.str.934 = private unnamed_addr constant [6 x i8] c".java\00", align 1
@.str.1.935 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@.str.2.936 = private unnamed_addr constant [43 x i8] c"%s: read-only file has different contents\0A\00", align 1
@.str.3.937 = private unnamed_addr constant [2 x i8] c"w\00", align 1
@.str.8.938 = private unnamed_addr constant [16 x i8] c"#line %ld \22%s\22\0A\00", align 1
@.str.4.939 = private unnamed_addr constant [46 x i8] c"/* %s.  Generated automatically by treecc */\0A\00", align 1
@.str.5.940 = private unnamed_addr constant [14 x i8] c"#ifndef __%s_\00", align 1
@.str.6.941 = private unnamed_addr constant [14 x i8] c"#define __%s_\00", align 1
@.str.7.942 = private unnamed_addr constant [8 x i8] c"#endif\0A\00", align 1

; Function Attrs: nounwind uwtable
define noalias %struct._tagTreeCCContext* @TreeCCContextCreate(%struct.TreeCCInput* %input) #0 {
  %1 = tail call noalias i8* @calloc(i64 1, i64 8304) #2
  %2 = bitcast i8* %1 to %struct._tagTreeCCContext*
  %3 = icmp eq i8* %1, null
  br i1 %3, label %4, label %5

; <label>:4                                       ; preds = %0
  tail call void @TreeCCOutOfMemory(%struct.TreeCCInput* %input) #2
  br label %5

; <label>:5                                       ; preds = %4, %0
  %6 = getelementptr inbounds i8, i8* %1, i64 8192
  %7 = bitcast i8* %6 to %struct.TreeCCInput**
  store %struct.TreeCCInput* %input, %struct.TreeCCInput** %7, align 8, !tbaa !1
  %8 = getelementptr inbounds i8, i8* %1, i64 8240
  %9 = bitcast i8* %8 to i16*
  store i16 2562, i16* %9, align 8
  %10 = getelementptr inbounds i8, i8* %1, i64 8248
  %11 = bitcast i8* %10 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i64 0, i64 0)>, <2 x i8*>* %11, align 8, !tbaa !7
  %12 = getelementptr inbounds i8, i8* %1, i64 8264
  %13 = bitcast i8* %12 to i8**
  store i8* null, i8** %13, align 8, !tbaa !8
  %14 = getelementptr inbounds i8, i8* %1, i64 8276
  %15 = bitcast i8* %14 to i32*
  store i32 0, i32* %15, align 4, !tbaa !9
  %16 = getelementptr inbounds i8, i8* %1, i64 8280
  %17 = bitcast i8* %16 to i32*
  store i32 0, i32* %17, align 4, !tbaa !10
  %18 = getelementptr inbounds i8, i8* %1, i64 8272
  %19 = bitcast i8* %18 to i32*
  store i32 1, i32* %19, align 4, !tbaa !11
  %20 = getelementptr inbounds i8, i8* %1, i64 8296
  %21 = bitcast i8* %20 to i8**
  store i8* null, i8** %21, align 8, !tbaa !12
  ret %struct._tagTreeCCContext* %2
}

; Function Attrs: nounwind
declare noalias i8* @calloc(i64, i64) #1

; Function Attrs: nounwind uwtable
define void @TreeCCContextDestroy(%struct._tagTreeCCContext* nocapture %context) #0 {
  %1 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 3
  %2 = load %struct._tagTreeCCStream*, %struct._tagTreeCCStream** %1, align 8, !tbaa !13
  %3 = icmp eq %struct._tagTreeCCStream* %2, null
  br i1 %3, label %.preheader1.preheader, label %.lr.ph11.preheader

.lr.ph11.preheader:                               ; preds = %0
  br label %.lr.ph11

.lr.ph11:                                         ; preds = %.lr.ph11.preheader, %.lr.ph11
  %stream.09 = phi %struct._tagTreeCCStream* [ %5, %.lr.ph11 ], [ %2, %.lr.ph11.preheader ]
  %4 = getelementptr inbounds %struct._tagTreeCCStream, %struct._tagTreeCCStream* %stream.09, i64 0, i32 10
  %5 = load %struct._tagTreeCCStream*, %struct._tagTreeCCStream** %4, align 8, !tbaa !14
  tail call void @TreeCCStreamDestroy(%struct._tagTreeCCStream* %stream.09) #2
  %6 = icmp eq %struct._tagTreeCCStream* %5, null
  br i1 %6, label %.preheader1.preheader.loopexit, label %.lr.ph11

.preheader1.preheader.loopexit:                   ; preds = %.lr.ph11
  br label %.preheader1.preheader

.preheader1.preheader:                            ; preds = %.preheader1.preheader.loopexit, %0
  br label %.preheader1

.preheader1:                                      ; preds = %.preheader1.preheader, %._crit_edge.7
  %indvars.iv12 = phi i64 [ %indvars.iv.next13, %._crit_edge.7 ], [ 0, %.preheader1.preheader ]
  %7 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 0, i64 %indvars.iv12
  %8 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %7, align 8, !tbaa !7
  %9 = icmp eq %struct._tagTreeCCNode* %8, null
  br i1 %9, label %._crit_edge.7, label %.lr.ph6.preheader

.lr.ph6.preheader:                                ; preds = %.preheader1
  br label %.lr.ph6

.lr.ph6:                                          ; preds = %.lr.ph6.preheader, %.lr.ph6
  %node.04 = phi %struct._tagTreeCCNode* [ %11, %.lr.ph6 ], [ %8, %.lr.ph6.preheader ]
  %10 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node.04, i64 0, i32 12
  %11 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %10, align 8, !tbaa !17
  tail call void @TreeCCNodeFree(%struct._tagTreeCCNode* %node.04) #2
  %12 = icmp eq %struct._tagTreeCCNode* %11, null
  br i1 %12, label %._crit_edge.7.loopexit, label %.lr.ph6

._crit_edge.7.loopexit:                           ; preds = %.lr.ph6
  br label %._crit_edge.7

._crit_edge.7:                                    ; preds = %._crit_edge.7.loopexit, %.preheader1
  %indvars.iv.next13 = add nuw nsw i64 %indvars.iv12, 1
  %exitcond14 = icmp eq i64 %indvars.iv.next13, 512
  br i1 %exitcond14, label %.preheader.preheader, label %.preheader1

.preheader.preheader:                             ; preds = %._crit_edge.7
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %._crit_edge
  %indvars.iv = phi i64 [ %indvars.iv.next, %._crit_edge ], [ 0, %.preheader.preheader ]
  %13 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 1, i64 %indvars.iv
  %14 = load %struct._tagTreeCCOperation*, %struct._tagTreeCCOperation** %13, align 8, !tbaa !7
  %15 = icmp eq %struct._tagTreeCCOperation* %14, null
  br i1 %15, label %._crit_edge, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %.preheader
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %.lr.ph
  %oper.02 = phi %struct._tagTreeCCOperation* [ %17, %.lr.ph ], [ %14, %.lr.ph.preheader ]
  %16 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %oper.02, i64 0, i32 9
  %17 = load %struct._tagTreeCCOperation*, %struct._tagTreeCCOperation** %16, align 8, !tbaa !19
  tail call void @TreeCCOperationFree(%struct._tagTreeCCOperation* %oper.02) #2
  %18 = icmp eq %struct._tagTreeCCOperation* %17, null
  br i1 %18, label %._crit_edge.loopexit, label %.lr.ph

._crit_edge.loopexit:                             ; preds = %.lr.ph
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %.preheader
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i64 %indvars.iv.next, 512
  br i1 %exitcond, label %19, label %.preheader

; <label>:19                                      ; preds = %._crit_edge
  %20 = bitcast %struct._tagTreeCCContext* %context to i8*
  tail call void @free(i8* %20) #2
  ret void
}

; Function Attrs: nounwind
declare void @free(i8* nocapture) #1

; Function Attrs: nounwind uwtable
define void @TreeCCError(%struct.TreeCCInput* %input, i8* nocapture readonly %format, ...) #0 {
  %va = alloca [1 x %struct.__va_list_tag], align 16
  %1 = bitcast [1 x %struct.__va_list_tag]* %va to i8*
  call void @llvm.lifetime.start(i64 24, i8* %1) #2
  %2 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %va, i64 0, i64 0
  call void @llvm.va_start(i8* %1)
  %3 = icmp eq %struct.TreeCCInput* %input, null
  br i1 %3, label %.critedge, label %4

; <label>:4                                       ; preds = %0
  %5 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %input, i64 0, i32 4
  %6 = load i8*, i8** %5, align 8, !tbaa !21
  %7 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %input, i64 0, i32 5
  %8 = load i64, i64* %7, align 8, !tbaa !23
  call fastcc void @ReportError(i8* %6, i64 %8, i8* %format, %struct.__va_list_tag* %2)
  call void @llvm.va_end(i8* %1)
  %9 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %input, i64 0, i32 7
  store i32 1, i32* %9, align 4, !tbaa !24
  br label %10

.critedge:                                        ; preds = %0
  call fastcc void @ReportError(i8* null, i64 0, i8* %format, %struct.__va_list_tag* %2)
  call void @llvm.va_end(i8* %1)
  br label %10

; <label>:10                                      ; preds = %.critedge, %4
  call void @llvm.lifetime.end(i64 24, i8* %1) #2
  ret void
}

; Function Attrs: nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #2

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #2

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #2

; Function Attrs: nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #2

; Function Attrs: nounwind uwtable
define void @TreeCCErrorOnLine(%struct.TreeCCInput* %input, i8* readonly %filename, i64 %linenum, i8* nocapture readonly %format, ...) #0 {
  %va = alloca [1 x %struct.__va_list_tag], align 16
  %1 = bitcast [1 x %struct.__va_list_tag]* %va to i8*
  call void @llvm.lifetime.start(i64 24, i8* %1) #2
  %2 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %va, i64 0, i64 0
  call void @llvm.va_start(i8* %1)
  call fastcc void @ReportError(i8* %filename, i64 %linenum, i8* %format, %struct.__va_list_tag* %2)
  call void @llvm.va_end(i8* %1)
  %3 = icmp eq %struct.TreeCCInput* %input, null
  br i1 %3, label %6, label %4

; <label>:4                                       ; preds = %0
  %5 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %input, i64 0, i32 7
  store i32 1, i32* %5, align 4, !tbaa !24
  br label %6

; <label>:6                                       ; preds = %0, %4
  call void @llvm.lifetime.end(i64 24, i8* %1) #2
  ret void
}

; Function Attrs: noreturn nounwind uwtable
define void @TreeCCAbort(%struct.TreeCCInput* readonly %input, i8* nocapture readonly %format, ...) #3 {
  %va = alloca [1 x %struct.__va_list_tag], align 16
  %1 = bitcast [1 x %struct.__va_list_tag]* %va to i8*
  call void @llvm.lifetime.start(i64 24, i8* %1) #2
  %2 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %va, i64 0, i64 0
  call void @llvm.va_start(i8* %1)
  %3 = icmp eq %struct.TreeCCInput* %input, null
  br i1 %3, label %9, label %4

; <label>:4                                       ; preds = %0
  %5 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %input, i64 0, i32 4
  %6 = load i8*, i8** %5, align 8, !tbaa !21
  %7 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %input, i64 0, i32 5
  %8 = load i64, i64* %7, align 8, !tbaa !23
  br label %9

; <label>:9                                       ; preds = %0, %4
  %10 = phi i8* [ %6, %4 ], [ null, %0 ]
  %11 = phi i64 [ %8, %4 ], [ 0, %0 ]
  call fastcc void @ReportError(i8* %10, i64 %11, i8* %format, %struct.__va_list_tag* %2)
  call void @llvm.va_end(i8* %1)
  call void @exit(i32 1) #9
  unreachable
}

; Function Attrs: noreturn nounwind
declare void @exit(i32) #4

; Function Attrs: nounwind uwtable
define void @TreeCCDebug(i64 %linenum, i8* nocapture readonly %format, ...) #0 {
  %va = alloca [1 x %struct.__va_list_tag], align 16
  %1 = bitcast [1 x %struct.__va_list_tag]* %va to i8*
  call void @llvm.lifetime.start(i64 24, i8* %1) #2
  %2 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %va, i64 0, i64 0
  call void @llvm.va_start(i8* %1)
  %3 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0), i64 %linenum) #2
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !tbaa !7
  %5 = call i32 @vfprintf(%struct._IO_FILE* %4, i8* %format, %struct.__va_list_tag* %2) #2
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !tbaa !7
  %7 = call i32 @_IO_putc(i32 10, %struct._IO_FILE* %6) #2
  call void @llvm.va_end(i8* %1)
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !tbaa !7
  %9 = call i32 @fflush(%struct._IO_FILE* %8) #2
  call void @llvm.lifetime.end(i64 24, i8* %1) #2
  ret void
}

; Function Attrs: nounwind
declare i32 @printf(i8* nocapture readonly, ...) #1

; Function Attrs: nounwind
declare i32 @vfprintf(%struct._IO_FILE* nocapture, i8* nocapture readonly, %struct.__va_list_tag*) #1

; Function Attrs: nounwind
declare i32 @_IO_putc(i32, %struct._IO_FILE* nocapture) #1

; Function Attrs: nounwind
declare i32 @fflush(%struct._IO_FILE* nocapture) #1

; Function Attrs: noreturn nounwind uwtable
define void @TreeCCOutOfMemory(%struct.TreeCCInput* readonly %input) #3 {
  %1 = icmp eq %struct.TreeCCInput* %input, null
  br i1 %1, label %11, label %2

; <label>:2                                       ; preds = %0
  %3 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %input, i64 0, i32 2
  %4 = load i8*, i8** %3, align 8, !tbaa !25
  %5 = icmp eq i8* %4, null
  br i1 %5, label %11, label %6

; <label>:6                                       ; preds = %2
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !7
  %8 = tail call i32 @fputs(i8* %4, %struct._IO_FILE* %7) #10
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !7
  %10 = tail call i64 @fwrite(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1.4, i64 0, i64 0), i64 2, i64 1, %struct._IO_FILE* %9) #11
  br label %11

; <label>:11                                      ; preds = %2, %0, %6
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !7
  %13 = tail call i64 @fwrite(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2, i64 0, i64 0), i64 25, i64 1, %struct._IO_FILE* %12) #11
  tail call void @exit(i32 1) #9
  unreachable
}

; Function Attrs: nounwind
declare i32 @fputs(i8* nocapture readonly, %struct._IO_FILE* nocapture) #1

; Function Attrs: nounwind readonly
declare i64 @strlen(i8* nocapture) #5

; Function Attrs: nounwind
declare i32 @fprintf(%struct._IO_FILE* nocapture, i8* nocapture readonly, ...) #1

; Function Attrs: nounwind
declare i64 @fwrite(i8* nocapture, i64, i64, %struct._IO_FILE* nocapture) #2

; Function Attrs: nounwind uwtable
define internal fastcc void @ReportError(i8* readonly %filename, i64 %linenum, i8* nocapture readonly %format, %struct.__va_list_tag* %va) #0 {
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @TreeCCErrorFile, align 8, !tbaa !7
  %2 = icmp eq %struct._IO_FILE* %1, null
  br i1 %2, label %3, label %6

; <label>:3                                       ; preds = %0
  %4 = load i64, i64* bitcast (%struct._IO_FILE** @stderr to i64*), align 8, !tbaa !7
  store i64 %4, i64* bitcast (%struct._IO_FILE** @TreeCCErrorFile to i64*), align 8, !tbaa !7
  %5 = inttoptr i64 %4 to %struct._IO_FILE*
  br label %6

; <label>:6                                       ; preds = %0, %3
  %7 = phi %struct._IO_FILE* [ %1, %0 ], [ %5, %3 ]
  %8 = icmp eq i8* %filename, null
  br i1 %8, label %29, label %9

; <label>:9                                       ; preds = %6
  %10 = load i32, i32* @TreeCCErrorStripPath, align 4, !tbaa !26
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %25, label %12

; <label>:12                                      ; preds = %9
  %13 = tail call i64 @strlen(i8* %filename) #12
  %14 = trunc i64 %13 to i32
  %sext = shl i64 %13, 32
  %15 = ashr exact i64 %sext, 32
  br label %16

; <label>:16                                      ; preds = %18, %12
  %indvars.iv = phi i64 [ %indvars.iv.next, %18 ], [ %15, %12 ]
  %len.0 = phi i32 [ %19, %18 ], [ %14, %12 ]
  %17 = icmp sgt i64 %indvars.iv, 0
  br i1 %17, label %18, label %.critedge

; <label>:18                                      ; preds = %16
  %19 = add nsw i32 %len.0, -1
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds i8, i8* %filename, i64 %20
  %22 = load i8, i8* %21, align 1, !tbaa !27
  %indvars.iv.next = add nsw i64 %indvars.iv, -1
  switch i8 %22, label %16 [
    i8 92, label %.critedge
    i8 47, label %.critedge
  ]

.critedge:                                        ; preds = %18, %18, %16
  %indvars.iv.lcssa = phi i64 [ %indvars.iv, %18 ], [ %indvars.iv, %18 ], [ %indvars.iv, %16 ]
  %sext1 = shl i64 %indvars.iv.lcssa, 32
  %23 = ashr exact i64 %sext1, 32
  %24 = getelementptr inbounds i8, i8* %filename, i64 %23
  br label %25

; <label>:25                                      ; preds = %9, %.critedge
  %.0 = phi i8* [ %24, %.critedge ], [ %filename, %9 ]
  %26 = tail call i32 @fputs(i8* %.0, %struct._IO_FILE* %7) #2
  %27 = load %struct._IO_FILE*, %struct._IO_FILE** @TreeCCErrorFile, align 8, !tbaa !7
  %28 = tail call i32 @_IO_putc(i32 58, %struct._IO_FILE* %27) #2
  %.pre = load %struct._IO_FILE*, %struct._IO_FILE** @TreeCCErrorFile, align 8, !tbaa !7
  br label %29

; <label>:29                                      ; preds = %6, %25
  %30 = phi %struct._IO_FILE* [ %7, %6 ], [ %.pre, %25 ]
  %31 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %30, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3.5, i64 0, i64 0), i64 %linenum) #2
  %32 = load %struct._IO_FILE*, %struct._IO_FILE** @TreeCCErrorFile, align 8, !tbaa !7
  %33 = tail call i32 @vfprintf(%struct._IO_FILE* %32, i8* %format, %struct.__va_list_tag* %va) #2
  %34 = load %struct._IO_FILE*, %struct._IO_FILE** @TreeCCErrorFile, align 8, !tbaa !7
  %35 = tail call i32 @_IO_putc(i32 10, %struct._IO_FILE* %34) #2
  %36 = load %struct._IO_FILE*, %struct._IO_FILE** @TreeCCErrorFile, align 8, !tbaa !7
  %37 = tail call i32 @fflush(%struct._IO_FILE* %36) #2
  ret void
}

; Function Attrs: nounwind uwtable
define void @TreeCCGenerateC(%struct._tagTreeCCContext* %context) #0 {
  %1 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 3
  %stream.0.2.i = load %struct._tagTreeCCStream*, %struct._tagTreeCCStream** %1, align 8
  %2 = icmp eq %struct._tagTreeCCStream* %stream.0.2.i, null
  br i1 %2, label %WriteHeaders.exit, label %.lr.ph.i.preheader

.lr.ph.i.preheader:                               ; preds = %0
  br label %.lr.ph.i

.lr.ph.i:                                         ; preds = %.lr.ph.i.preheader, %13
  %stream.03.i = phi %struct._tagTreeCCStream* [ %stream.0.i, %13 ], [ %stream.0.2.i, %.lr.ph.i.preheader ]
  %3 = getelementptr inbounds %struct._tagTreeCCStream, %struct._tagTreeCCStream* %stream.03.i, i64 0, i32 7
  %4 = load i8, i8* %3, align 4
  %.mask.i = and i8 %4, 4
  %5 = icmp eq i8 %.mask.i, 0
  br i1 %5, label %7, label %6

; <label>:6                                       ; preds = %.lr.ph.i
  tail call void @TreeCCStreamHeaderTop(%struct._tagTreeCCStream* %stream.03.i) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.03.i, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0)) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.03.i, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.42, i64 0, i64 0)) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.03.i, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.43, i64 0, i64 0)) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.03.i, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.44, i64 0, i64 0)) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.03.i, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0)) #2
  br label %8

; <label>:7                                       ; preds = %.lr.ph.i
  tail call void @TreeCCStreamSourceTop(%struct._tagTreeCCStream* %stream.03.i) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.03.i, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0)) #2
  br label %8

; <label>:8                                       ; preds = %7, %6
  %9 = load i8, i8* %3, align 4
  %.mask1.i = and i8 %9, 8
  %10 = icmp eq i8 %.mask1.i, 0
  br i1 %10, label %13, label %11

; <label>:11                                      ; preds = %8
  %12 = and i8 %9, -17
  store i8 %12, i8* %3, align 4
  br label %13

; <label>:13                                      ; preds = %11, %8
  %14 = getelementptr inbounds %struct._tagTreeCCStream, %struct._tagTreeCCStream* %stream.03.i, i64 0, i32 10
  %stream.0.i = load %struct._tagTreeCCStream*, %struct._tagTreeCCStream** %14, align 8
  %15 = icmp eq %struct._tagTreeCCStream* %stream.0.i, null
  br i1 %15, label %WriteHeaders.exit.loopexit, label %.lr.ph.i

WriteHeaders.exit.loopexit:                       ; preds = %13
  br label %WriteHeaders.exit

WriteHeaders.exit:                                ; preds = %WriteHeaders.exit.loopexit, %0
  tail call void @TreeCCNodeVisitAll(%struct._tagTreeCCContext* %context, void (%struct._tagTreeCCContext*, %struct._tagTreeCCNode*)* nonnull @DefineNodeNumbers) #2
  %16 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 4
  %17 = load %struct._tagTreeCCStream*, %struct._tagTreeCCStream** %16, align 8, !tbaa !28
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %17, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0)) #2
  tail call void @TreeCCNodeVisitAll(%struct._tagTreeCCContext* %context, void (%struct._tagTreeCCContext*, %struct._tagTreeCCNode*)* nonnull @DeclareTypeDefs) #2
  %18 = load %struct._tagTreeCCStream*, %struct._tagTreeCCStream** %16, align 8, !tbaa !28
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %18, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0)) #2
  %19 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 8
  %20 = load i16, i16* %19, align 8
  %.mask = and i16 %20, 4096
  %21 = icmp eq i16 %.mask, 0
  %22 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 6
  %23 = load %struct._tagTreeCCStream*, %struct._tagTreeCCStream** %22, align 8, !tbaa !29
  %24 = icmp ne %struct._tagTreeCCStream* %23, null
  br i1 %21, label %29, label %25

; <label>:25                                      ; preds = %WriteHeaders.exit
  br i1 %24, label %26, label %27

; <label>:26                                      ; preds = %25
  tail call void @TreeCCIncludeSkeleton(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %23, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1.7, i64 0, i64 0)) #2
  br label %33

; <label>:27                                      ; preds = %25
  %28 = load %struct._tagTreeCCStream*, %struct._tagTreeCCStream** %16, align 8, !tbaa !28
  tail call void @TreeCCIncludeSkeleton(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %28, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1.7, i64 0, i64 0)) #2
  br label %33

; <label>:29                                      ; preds = %WriteHeaders.exit
  br i1 %24, label %30, label %31

; <label>:30                                      ; preds = %29
  tail call void @TreeCCIncludeSkeleton(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %23, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.8, i64 0, i64 0)) #2
  br label %33

; <label>:31                                      ; preds = %29
  %32 = load %struct._tagTreeCCStream*, %struct._tagTreeCCStream** %16, align 8, !tbaa !28
  tail call void @TreeCCIncludeSkeleton(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %32, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.8, i64 0, i64 0)) #2
  br label %33

; <label>:33                                      ; preds = %30, %31, %26, %27
  tail call void @TreeCCNodeVisitAll(%struct._tagTreeCCContext* %context, void (%struct._tagTreeCCContext*, %struct._tagTreeCCNode*)* nonnull @BuildTypeDecls) #2
  tail call void @TreeCCNodeVisitAll(%struct._tagTreeCCContext* %context, void (%struct._tagTreeCCContext*, %struct._tagTreeCCNode*)* nonnull @DeclareCreateFuncs) #2
  %34 = load %struct._tagTreeCCStream*, %struct._tagTreeCCStream** %16, align 8, !tbaa !28
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %34, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0)) #2
  tail call void @TreeCCOperationVisitAll(%struct._tagTreeCCContext* %context, void (%struct._tagTreeCCContext*, %struct._tagTreeCCOperation*)* nonnull @DeclareNonVirtuals) #2
  %35 = load %struct._tagTreeCCStream*, %struct._tagTreeCCStream** %16, align 8, !tbaa !28
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %35, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0)) #2
  %36 = load %struct._tagTreeCCStream*, %struct._tagTreeCCStream** %22, align 8, !tbaa !29
  %37 = icmp eq %struct._tagTreeCCStream* %36, null
  br i1 %37, label %38, label %40

; <label>:38                                      ; preds = %33
  %39 = load %struct._tagTreeCCStream*, %struct._tagTreeCCStream** %16, align 8, !tbaa !28
  br label %40

; <label>:40                                      ; preds = %38, %33
  %stream.0.i.2 = phi %struct._tagTreeCCStream* [ %39, %38 ], [ %36, %33 ]
  %41 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 9
  %42 = load i8*, i8** %41, align 8, !tbaa !30
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.0.i.2, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.83, i64 0, i64 0), i8* %42) #2
  %43 = load i16, i16* %19, align 8
  %.mask.i.3 = and i16 %43, 128
  %44 = icmp eq i16 %.mask.i.3, 0
  %45 = load i8*, i8** %41, align 8, !tbaa !30
  br i1 %44, label %47, label %46

; <label>:46                                      ; preds = %40
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.0.i.2, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.84, i64 0, i64 0), i8* %45) #2
  br label %48

; <label>:47                                      ; preds = %40
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.0.i.2, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.85, i64 0, i64 0), i8* %45) #2
  br label %48

; <label>:48                                      ; preds = %47, %46
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.0.i.2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.86, i64 0, i64 0)) #2
  %49 = load i8*, i8** %41, align 8, !tbaa !30
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.0.i.2, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.87, i64 0, i64 0), i8* %49) #2
  %50 = load i8*, i8** %41, align 8, !tbaa !30
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.0.i.2, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.88, i64 0, i64 0), i8* %50) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.0.i.2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.86, i64 0, i64 0)) #2
  %51 = load i8*, i8** %41, align 8, !tbaa !30
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.0.i.2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.89, i64 0, i64 0), i8* %51) #2
  %52 = load i8*, i8** %41, align 8, !tbaa !30
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.0.i.2, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.90, i64 0, i64 0), i8* %52) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.0.i.2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.86, i64 0, i64 0)) #2
  %53 = load i8*, i8** %41, align 8, !tbaa !30
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.0.i.2, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.91, i64 0, i64 0), i8* %53) #2
  %54 = load i8*, i8** %41, align 8, !tbaa !30
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.0.i.2, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.92, i64 0, i64 0), i8* %54) #2
  %55 = load i8*, i8** %41, align 8, !tbaa !30
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.0.i.2, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.93, i64 0, i64 0), i8* %55) #2
  %56 = load i8*, i8** %41, align 8, !tbaa !30
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.0.i.2, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.94, i64 0, i64 0), i8* %56) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.0.i.2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.86, i64 0, i64 0)) #2
  %57 = load i16, i16* %19, align 8
  %.mask1.i.4 = and i16 %57, 2
  %58 = icmp eq i16 %.mask1.i.4, 0
  br i1 %58, label %86, label %59

; <label>:59                                      ; preds = %48
  %60 = load i8*, i8** %41, align 8, !tbaa !30
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.0.i.2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.95, i64 0, i64 0), i8* %60) #2
  %61 = load i8*, i8** %41, align 8, !tbaa !30
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.0.i.2, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.96, i64 0, i64 0), i8* %61) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.0.i.2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.86, i64 0, i64 0)) #2
  %62 = load i8*, i8** %41, align 8, !tbaa !30
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.0.i.2, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.97, i64 0, i64 0), i8* %62) #2
  %63 = load i8*, i8** %41, align 8, !tbaa !30
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.0.i.2, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.98, i64 0, i64 0), i8* %63) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.0.i.2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.86, i64 0, i64 0)) #2
  %64 = load i8*, i8** %41, align 8, !tbaa !30
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.0.i.2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.99, i64 0, i64 0), i8* %64) #2
  %65 = load i8*, i8** %41, align 8, !tbaa !30
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.0.i.2, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.100, i64 0, i64 0), i8* %65) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.0.i.2, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.101, i64 0, i64 0)) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.0.i.2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.86, i64 0, i64 0)) #2
  %66 = load i8*, i8** %41, align 8, !tbaa !30
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.0.i.2, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.102, i64 0, i64 0), i8* %66) #2
  %67 = load i8*, i8** %41, align 8, !tbaa !30
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.0.i.2, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.103, i64 0, i64 0), i8* %67) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.0.i.2, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.104, i64 0, i64 0)) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.0.i.2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.86, i64 0, i64 0)) #2
  %68 = load i8*, i8** %41, align 8, !tbaa !30
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.0.i.2, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.105, i64 0, i64 0), i8* %68) #2
  %69 = load i8*, i8** %41, align 8, !tbaa !30
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.0.i.2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.106, i64 0, i64 0), i8* %69) #2
  %70 = load i16, i16* %19, align 8
  %.mask8.i = and i16 %70, 8
  %71 = icmp eq i16 %.mask8.i, 0
  br i1 %71, label %75, label %72

; <label>:72                                      ; preds = %59
  %73 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 10
  %74 = load i8*, i8** %73, align 8, !tbaa !31
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.0.i.2, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.81, i64 0, i64 0), i8* %74) #2
  br label %76

; <label>:75                                      ; preds = %59
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.0.i.2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11, i64 0, i64 0)) #2
  br label %76

; <label>:76                                      ; preds = %75, %72
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.0.i.2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.34, i64 0, i64 0)) #2
  %77 = load i8*, i8** %41, align 8, !tbaa !30
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.0.i.2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.107, i64 0, i64 0), i8* %77) #2
  %78 = load i16, i16* %19, align 8
  %.mask9.i = and i16 %78, 8
  %79 = icmp eq i16 %.mask9.i, 0
  br i1 %79, label %83, label %80

; <label>:80                                      ; preds = %76
  %81 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 10
  %82 = load i8*, i8** %81, align 8, !tbaa !31
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.0.i.2, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.81, i64 0, i64 0), i8* %82) #2
  br label %84

; <label>:83                                      ; preds = %76
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.0.i.2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11, i64 0, i64 0)) #2
  br label %84

; <label>:84                                      ; preds = %83, %80
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.0.i.2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.34, i64 0, i64 0)) #2
  %85 = load i8*, i8** %41, align 8, !tbaa !30
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.0.i.2, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.108, i64 0, i64 0), i8* %85) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.0.i.2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.86, i64 0, i64 0)) #2
  br label %86

; <label>:86                                      ; preds = %84, %48
  %87 = load i8*, i8** %41, align 8, !tbaa !30
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.0.i.2, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.109, i64 0, i64 0), i8* %87) #2
  %88 = load i8*, i8** %41, align 8, !tbaa !30
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.0.i.2, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.110, i64 0, i64 0), i8* %88) #2
  %89 = load i16, i16* %19, align 8
  %.mask2.i = and i16 %89, 8
  %90 = icmp eq i16 %.mask2.i, 0
  br i1 %90, label %94, label %91

; <label>:91                                      ; preds = %86
  %92 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 10
  %93 = load i8*, i8** %92, align 8, !tbaa !31
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.0.i.2, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.81, i64 0, i64 0), i8* %93) #2
  br label %95

; <label>:94                                      ; preds = %86
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.0.i.2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11, i64 0, i64 0)) #2
  br label %95

; <label>:95                                      ; preds = %94, %91
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.0.i.2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.34, i64 0, i64 0)) #2
  %96 = load i8*, i8** %41, align 8, !tbaa !30
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.0.i.2, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.111, i64 0, i64 0), i8* %96) #2
  %97 = load i16, i16* %19, align 8
  %.mask3.i = and i16 %97, 8
  %98 = icmp eq i16 %.mask3.i, 0
  br i1 %98, label %102, label %99

; <label>:99                                      ; preds = %95
  %100 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 10
  %101 = load i8*, i8** %100, align 8, !tbaa !31
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.0.i.2, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.112, i64 0, i64 0), i8* %101) #2
  br label %102

; <label>:102                                     ; preds = %99, %95
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.0.i.2, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.113, i64 0, i64 0)) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.0.i.2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.34, i64 0, i64 0)) #2
  %103 = load i8*, i8** %41, align 8, !tbaa !30
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.0.i.2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.114, i64 0, i64 0), i8* %103) #2
  %104 = load i16, i16* %19, align 8
  %.mask4.i = and i16 %104, 8
  %105 = icmp eq i16 %.mask4.i, 0
  br i1 %105, label %109, label %106

; <label>:106                                     ; preds = %102
  %107 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 10
  %108 = load i8*, i8** %107, align 8, !tbaa !31
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.0.i.2, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.81, i64 0, i64 0), i8* %108) #2
  br label %110

; <label>:109                                     ; preds = %102
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.0.i.2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11, i64 0, i64 0)) #2
  br label %110

; <label>:110                                     ; preds = %109, %106
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.0.i.2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.34, i64 0, i64 0)) #2
  %111 = load i8*, i8** %41, align 8, !tbaa !30
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.0.i.2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.115, i64 0, i64 0), i8* %111) #2
  %112 = load i16, i16* %19, align 8
  %.mask5.i = and i16 %112, 8
  %113 = icmp eq i16 %.mask5.i, 0
  br i1 %113, label %117, label %114

; <label>:114                                     ; preds = %110
  %115 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 10
  %116 = load i8*, i8** %115, align 8, !tbaa !31
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.0.i.2, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.81, i64 0, i64 0), i8* %116) #2
  br label %118

; <label>:117                                     ; preds = %110
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.0.i.2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11, i64 0, i64 0)) #2
  br label %118

; <label>:118                                     ; preds = %117, %114
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.0.i.2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.34, i64 0, i64 0)) #2
  %119 = load i8*, i8** %41, align 8, !tbaa !30
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.0.i.2, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.116, i64 0, i64 0), i8* %119) #2
  %120 = load i16, i16* %19, align 8
  %.mask6.i = and i16 %120, 8
  %121 = icmp eq i16 %.mask6.i, 0
  br i1 %121, label %125, label %122

; <label>:122                                     ; preds = %118
  %123 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 10
  %124 = load i8*, i8** %123, align 8, !tbaa !31
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.0.i.2, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.81, i64 0, i64 0), i8* %124) #2
  br label %126

; <label>:125                                     ; preds = %118
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.0.i.2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11, i64 0, i64 0)) #2
  br label %126

; <label>:126                                     ; preds = %125, %122
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.0.i.2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.34, i64 0, i64 0)) #2
  %127 = load i8*, i8** %41, align 8, !tbaa !30
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.0.i.2, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.117, i64 0, i64 0), i8* %127) #2
  %128 = load i16, i16* %19, align 8
  %.mask7.i = and i16 %128, 8
  %129 = icmp eq i16 %.mask7.i, 0
  br i1 %129, label %133, label %130

; <label>:130                                     ; preds = %126
  %131 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 10
  %132 = load i8*, i8** %131, align 8, !tbaa !31
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.0.i.2, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.81, i64 0, i64 0), i8* %132) #2
  br label %OutputHelpers.exit

; <label>:133                                     ; preds = %126
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.0.i.2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11, i64 0, i64 0)) #2
  br label %OutputHelpers.exit

OutputHelpers.exit:                               ; preds = %130, %133
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.0.i.2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.34, i64 0, i64 0)) #2
  %134 = load i8*, i8** %41, align 8, !tbaa !30
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.0.i.2, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.118, i64 0, i64 0), i8* %134) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.0.i.2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.86, i64 0, i64 0)) #2
  %135 = load i16, i16* %19, align 8
  %.mask1 = and i16 %135, 2048
  %136 = icmp eq i16 %.mask1, 0
  %.pre = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 7
  br i1 %136, label %OutputHelpers.exit._crit_edge, label %137

; <label>:137                                     ; preds = %OutputHelpers.exit
  %138 = load %struct._tagTreeCCStream*, %struct._tagTreeCCStream** %.pre, align 8, !tbaa !32
  %139 = icmp eq %struct._tagTreeCCStream* %138, null
  br i1 %139, label %141, label %140

; <label>:140                                     ; preds = %137
  tail call fastcc void @WriteSourceSkeleton(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %138)
  br label %OutputHelpers.exit._crit_edge

; <label>:141                                     ; preds = %137
  %142 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 5
  %143 = load %struct._tagTreeCCStream*, %struct._tagTreeCCStream** %142, align 8, !tbaa !33
  tail call fastcc void @WriteSourceSkeleton(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %143)
  br label %OutputHelpers.exit._crit_edge

OutputHelpers.exit._crit_edge:                    ; preds = %OutputHelpers.exit, %140, %141
  tail call void @TreeCCNodeVisitAll(%struct._tagTreeCCContext* %context, void (%struct._tagTreeCCContext*, %struct._tagTreeCCNode*)* nonnull @DefineVtables) #2
  tail call void @TreeCCNodeVisitAll(%struct._tagTreeCCContext* %context, void (%struct._tagTreeCCContext*, %struct._tagTreeCCNode*)* nonnull @ImplementCreateFuncs) #2
  tail call void @TreeCCGenerateNonVirtuals(%struct._tagTreeCCContext* %context, %struct.TreeCCNonVirtual* nonnull @TreeCCNonVirtualFuncsC) #2
  %144 = load %struct._tagTreeCCStream*, %struct._tagTreeCCStream** %.pre, align 8, !tbaa !32
  %145 = icmp eq %struct._tagTreeCCStream* %144, null
  br i1 %145, label %146, label %OutputIsA.exit

; <label>:146                                     ; preds = %OutputHelpers.exit._crit_edge
  %147 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 5
  %148 = load %struct._tagTreeCCStream*, %struct._tagTreeCCStream** %147, align 8, !tbaa !33
  br label %OutputIsA.exit

OutputIsA.exit:                                   ; preds = %OutputHelpers.exit._crit_edge, %146
  %stream.0.i.5 = phi %struct._tagTreeCCStream* [ %148, %146 ], [ %144, %OutputHelpers.exit._crit_edge ]
  %149 = load i8*, i8** %41, align 8, !tbaa !30
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.0.i.5, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.57, i64 0, i64 0), i8* %149) #2
  %150 = load i8*, i8** %41, align 8, !tbaa !30
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.0.i.5, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.58, i64 0, i64 0), i8* %150) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.0.i.5, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.53, i64 0, i64 0)) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.0.i.5, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.56, i64 0, i64 0)) #2
  %151 = load i8*, i8** %41, align 8, !tbaa !30
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.0.i.5, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.150, i64 0, i64 0), i8* %151) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.0.i.5, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.13, i64 0, i64 0)) #2
  %152 = load i8*, i8** %41, align 8, !tbaa !30
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.0.i.5, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.151, i64 0, i64 0), i8* %152) #2
  %153 = load i8*, i8** %41, align 8, !tbaa !30
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.0.i.5, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.152, i64 0, i64 0), i8* %153) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.0.i.5, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.153, i64 0, i64 0)) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.0.i.5, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.154, i64 0, i64 0)) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.0.i.5, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.155, i64 0, i64 0)) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.0.i.5, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.156, i64 0, i64 0)) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.0.i.5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.157, i64 0, i64 0)) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.0.i.5, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.40, i64 0, i64 0)) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.0.i.5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.41, i64 0, i64 0)) #2
  %stream.0.4.i = load %struct._tagTreeCCStream*, %struct._tagTreeCCStream** %1, align 8
  %154 = icmp eq %struct._tagTreeCCStream* %stream.0.4.i, null
  br i1 %154, label %WriteFooters.exit, label %.lr.ph.i.6.preheader

.lr.ph.i.6.preheader:                             ; preds = %OutputIsA.exit
  br label %.lr.ph.i.6

.lr.ph.i.6:                                       ; preds = %.lr.ph.i.6.preheader, %164
  %stream.05.i = phi %struct._tagTreeCCStream* [ %stream.0.i.8, %164 ], [ %stream.0.4.i, %.lr.ph.i.6.preheader ]
  %155 = getelementptr inbounds %struct._tagTreeCCStream, %struct._tagTreeCCStream* %stream.05.i, i64 0, i32 7
  %156 = load i8, i8* %155, align 4
  %157 = and i8 %156, 24
  %158 = icmp eq i8 %157, 8
  br i1 %158, label %159, label %160

; <label>:159                                     ; preds = %.lr.ph.i.6
  tail call void @TreeCCStreamClear(%struct._tagTreeCCStream* %stream.05.i) #2
  br label %164

; <label>:160                                     ; preds = %.lr.ph.i.6
  %.mask1.i.7 = and i8 %156, 4
  %161 = icmp eq i8 %.mask1.i.7, 0
  br i1 %161, label %163, label %162

; <label>:162                                     ; preds = %160
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.05.i, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.42, i64 0, i64 0)) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.05.i, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.158, i64 0, i64 0)) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.05.i, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.44, i64 0, i64 0)) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.05.i, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0)) #2
  tail call void @TreeCCStreamHeaderBottom(%struct._tagTreeCCStream* %stream.05.i) #2
  br label %164

; <label>:163                                     ; preds = %160
  tail call void @TreeCCStreamSourceBottom(%struct._tagTreeCCStream* %stream.05.i) #2
  br label %164

; <label>:164                                     ; preds = %163, %162, %159
  %165 = getelementptr inbounds %struct._tagTreeCCStream, %struct._tagTreeCCStream* %stream.05.i, i64 0, i32 10
  %stream.0.i.8 = load %struct._tagTreeCCStream*, %struct._tagTreeCCStream** %165, align 8
  %166 = icmp eq %struct._tagTreeCCStream* %stream.0.i.8, null
  br i1 %166, label %WriteFooters.exit.loopexit, label %.lr.ph.i.6

WriteFooters.exit.loopexit:                       ; preds = %164
  br label %WriteFooters.exit

WriteFooters.exit:                                ; preds = %WriteFooters.exit.loopexit, %OutputIsA.exit
  ret void
}

; Function Attrs: nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) #5

; Function Attrs: nounwind uwtable
define internal void @DefineNodeNumbers(%struct._tagTreeCCContext* nocapture readnone %context, %struct._tagTreeCCNode* nocapture readonly %node) #0 {
  %1 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 5
  %2 = load i32, i32* %1, align 4, !tbaa !34
  %3 = and i32 %2, 24
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %12

; <label>:5                                       ; preds = %0
  %6 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 13
  %7 = load %struct._tagTreeCCStream*, %struct._tagTreeCCStream** %6, align 8, !tbaa !35
  %8 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 4
  %9 = load i8*, i8** %8, align 8, !tbaa !36
  %10 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 6
  %11 = load i32, i32* %10, align 4, !tbaa !37
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %7, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.45, i64 0, i64 0), i8* %9, i32 %11) #2
  br label %12

; <label>:12                                      ; preds = %5, %0
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @DeclareTypeDefs(%struct._tagTreeCCContext* nocapture readnone %context, %struct._tagTreeCCNode* nocapture readonly %node) #0 {
  %1 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 13
  %2 = load %struct._tagTreeCCStream*, %struct._tagTreeCCStream** %1, align 8, !tbaa !35
  %3 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 5
  %4 = load i32, i32* %3, align 4, !tbaa !34
  %5 = and i32 %4, 8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %22, label %7

; <label>:7                                       ; preds = %0
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.46, i64 0, i64 0)) #2
  %8 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 1
  %child.0.1 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %8, align 8
  %9 = icmp eq %struct._tagTreeCCNode* %child.0.1, null
  br i1 %9, label %._crit_edge, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %7
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %17
  %child.03 = phi %struct._tagTreeCCNode* [ %child.0, %17 ], [ %child.0.1, %.lr.ph.preheader ]
  %sep.02 = phi i8* [ %sep.1, %17 ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0), %.lr.ph.preheader ]
  %10 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %child.03, i64 0, i32 5
  %11 = load i32, i32* %10, align 4, !tbaa !34
  %12 = and i32 %11, 16
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %17, label %14

; <label>:14                                      ; preds = %.lr.ph
  %15 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %child.03, i64 0, i32 4
  %16 = load i8*, i8** %15, align 8, !tbaa !36
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.47, i64 0, i64 0), i8* %sep.02, i8* %16) #2
  br label %17

; <label>:17                                      ; preds = %.lr.ph, %14
  %sep.1 = phi i8* [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str.48, i64 0, i64 0), %14 ], [ %sep.02, %.lr.ph ]
  %18 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %child.03, i64 0, i32 3
  %child.0 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %18, align 8
  %19 = icmp eq %struct._tagTreeCCNode* %child.0, null
  br i1 %19, label %._crit_edge.loopexit, label %.lr.ph

._crit_edge.loopexit:                             ; preds = %17
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %7
  %20 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 4
  %21 = load i8*, i8** %20, align 8, !tbaa !36
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.49, i64 0, i64 0), i8* %21) #2
  br label %28

; <label>:22                                      ; preds = %0
  %23 = and i32 %4, 16
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %28

; <label>:25                                      ; preds = %22
  %26 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 4
  %27 = load i8*, i8** %26, align 8, !tbaa !36
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.50, i64 0, i64 0), i8* %27, i8* %27) #2
  br label %28

; <label>:28                                      ; preds = %22, %25, %._crit_edge
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @BuildTypeDecls(%struct._tagTreeCCContext* %context, %struct._tagTreeCCNode* %node) #0 {
  %1 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 13
  %2 = load %struct._tagTreeCCStream*, %struct._tagTreeCCStream** %1, align 8, !tbaa !35
  %3 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 5
  %4 = load i32, i32* %3, align 4, !tbaa !34
  %5 = and i32 %4, 24
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %63

; <label>:7                                       ; preds = %0
  %8 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 4
  %9 = load i8*, i8** %8, align 8, !tbaa !36
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.51, i64 0, i64 0), i8* %9) #2
  %10 = load i8*, i8** %8, align 8, !tbaa !36
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.52, i64 0, i64 0), i8* %10) #2
  %11 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 8
  %12 = load i16, i16* %11, align 8
  %.mask = and i16 %12, 128
  %13 = icmp eq i16 %.mask, 0
  br i1 %13, label %14, label %15

; <label>:14                                      ; preds = %7
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.53, i64 0, i64 0)) #2
  %.pre = load i16, i16* %11, align 8
  br label %15

; <label>:15                                      ; preds = %7, %14
  %16 = phi i16 [ %12, %7 ], [ %.pre, %14 ]
  %.mask1 = and i16 %16, 2
  %17 = icmp eq i16 %.mask1, 0
  br i1 %17, label %19, label %18

; <label>:18                                      ; preds = %15
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.54, i64 0, i64 0)) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.55, i64 0, i64 0)) #2
  br label %19

; <label>:19                                      ; preds = %15, %18
  tail call fastcc void @DeclareFields(%struct._tagTreeCCStream* %2, %struct._tagTreeCCNode* %node)
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.56, i64 0, i64 0)) #2
  %20 = load i8*, i8** %8, align 8, !tbaa !36
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.57, i64 0, i64 0), i8* %20) #2
  %21 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 0
  %22 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %21, align 8, !tbaa !38
  %23 = icmp eq %struct._tagTreeCCNode* %22, null
  br i1 %23, label %27, label %24

; <label>:24                                      ; preds = %19
  %25 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %22, i64 0, i32 4
  %26 = load i8*, i8** %25, align 8, !tbaa !36
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.58, i64 0, i64 0), i8* %26) #2
  br label %28

; <label>:27                                      ; preds = %19
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.59, i64 0, i64 0)) #2
  br label %28

; <label>:28                                      ; preds = %27, %24
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.53, i64 0, i64 0)) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.60, i64 0, i64 0)) #2
  tail call fastcc void @DeclareVirtuals(%struct._tagTreeCCStream* %2, %struct._tagTreeCCNode* %node)
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.56, i64 0, i64 0)) #2
  %29 = load i8*, i8** %8, align 8, !tbaa !36
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.61, i64 0, i64 0), i8* %29, i8* %29) #2
  %30 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 11
  %virt.0.10.i = load %struct._tagTreeCCVirtual*, %struct._tagTreeCCVirtual** %30, align 8
  %31 = icmp eq %struct._tagTreeCCVirtual* %virt.0.10.i, null
  br i1 %31, label %DeclareVirtualMacros.exit, label %.lr.ph13.i.preheader

.lr.ph13.i.preheader:                             ; preds = %28
  br label %.lr.ph13.i

.lr.ph13.i:                                       ; preds = %.lr.ph13.i.preheader, %._crit_edge.9.i
  %virt.011.i = phi %struct._tagTreeCCVirtual* [ %virt.0.i, %._crit_edge.9.i ], [ %virt.0.10.i, %.lr.ph13.i.preheader ]
  %32 = getelementptr inbounds %struct._tagTreeCCVirtual, %struct._tagTreeCCVirtual* %virt.011.i, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8, !tbaa !39
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.66, i64 0, i64 0), i8* %33) #2
  %34 = getelementptr inbounds %struct._tagTreeCCVirtual, %struct._tagTreeCCVirtual* %virt.011.i, i64 0, i32 2
  %param.0.1.i = load %struct._tagTreeCCParam*, %struct._tagTreeCCParam** %34, align 8
  %35 = icmp eq %struct._tagTreeCCParam* %param.0.1.i, null
  br i1 %35, label %._crit_edge.i, label %.lr.ph.i.preheader

.lr.ph.i.preheader:                               ; preds = %.lr.ph13.i
  br label %.lr.ph.i

.lr.ph.i:                                         ; preds = %.lr.ph.i.preheader, %42
  %param.03.i = phi %struct._tagTreeCCParam* [ %param.0.i, %42 ], [ %param.0.1.i, %.lr.ph.i.preheader ]
  %num.02.i = phi i32 [ %num.1.i, %42 ], [ 1, %.lr.ph.i.preheader ]
  %36 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.03.i, i64 0, i32 0
  %37 = load i8*, i8** %36, align 8, !tbaa !41
  %38 = icmp eq i8* %37, null
  br i1 %38, label %40, label %39

; <label>:39                                      ; preds = %.lr.ph.i
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.67, i64 0, i64 0), i8* %37) #2
  br label %42

; <label>:40                                      ; preds = %.lr.ph.i
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.68, i64 0, i64 0), i32 %num.02.i) #2
  %41 = add nsw i32 %num.02.i, 1
  br label %42

; <label>:42                                      ; preds = %40, %39
  %num.1.i = phi i32 [ %num.02.i, %39 ], [ %41, %40 ]
  %43 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.03.i, i64 0, i32 4
  %param.0.i = load %struct._tagTreeCCParam*, %struct._tagTreeCCParam** %43, align 8
  %44 = icmp eq %struct._tagTreeCCParam* %param.0.i, null
  br i1 %44, label %._crit_edge.i.loopexit, label %.lr.ph.i

._crit_edge.i.loopexit:                           ; preds = %42
  br label %._crit_edge.i

._crit_edge.i:                                    ; preds = %._crit_edge.i.loopexit, %.lr.ph13.i
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.69, i64 0, i64 0)) #2
  %45 = load i8*, i8** %8, align 8, !tbaa !36
  %46 = load i8*, i8** %32, align 8, !tbaa !39
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.70, i64 0, i64 0), i8* %45, i8* %46) #2
  %47 = load i8*, i8** %8, align 8, !tbaa !36
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.71, i64 0, i64 0), i8* %47) #2
  %param.1.4.i = load %struct._tagTreeCCParam*, %struct._tagTreeCCParam** %34, align 8
  %48 = icmp eq %struct._tagTreeCCParam* %param.1.4.i, null
  br i1 %48, label %._crit_edge.9.i, label %.lr.ph8.i.preheader

.lr.ph8.i.preheader:                              ; preds = %._crit_edge.i
  br label %.lr.ph8.i

.lr.ph8.i:                                        ; preds = %.lr.ph8.i.preheader, %55
  %param.16.i = phi %struct._tagTreeCCParam* [ %param.1.i, %55 ], [ %param.1.4.i, %.lr.ph8.i.preheader ]
  %num.25.i = phi i32 [ %num.3.i, %55 ], [ 1, %.lr.ph8.i.preheader ]
  %49 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.16.i, i64 0, i32 0
  %50 = load i8*, i8** %49, align 8, !tbaa !41
  %51 = icmp eq i8* %50, null
  br i1 %51, label %53, label %52

; <label>:52                                      ; preds = %.lr.ph8.i
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.72, i64 0, i64 0), i8* %50) #2
  br label %55

; <label>:53                                      ; preds = %.lr.ph8.i
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.73, i64 0, i64 0), i32 %num.25.i) #2
  %54 = add nsw i32 %num.25.i, 1
  br label %55

; <label>:55                                      ; preds = %53, %52
  %num.3.i = phi i32 [ %num.25.i, %52 ], [ %54, %53 ]
  %56 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.16.i, i64 0, i32 4
  %param.1.i = load %struct._tagTreeCCParam*, %struct._tagTreeCCParam** %56, align 8
  %57 = icmp eq %struct._tagTreeCCParam* %param.1.i, null
  br i1 %57, label %._crit_edge.9.i.loopexit, label %.lr.ph8.i

._crit_edge.9.i.loopexit:                         ; preds = %55
  br label %._crit_edge.9.i

._crit_edge.9.i:                                  ; preds = %._crit_edge.9.i.loopexit, %._crit_edge.i
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.74, i64 0, i64 0)) #2
  %58 = getelementptr inbounds %struct._tagTreeCCVirtual, %struct._tagTreeCCVirtual* %virt.011.i, i64 0, i32 4
  %virt.0.i = load %struct._tagTreeCCVirtual*, %struct._tagTreeCCVirtual** %58, align 8
  %59 = icmp eq %struct._tagTreeCCVirtual* %virt.0.i, null
  br i1 %59, label %DeclareVirtualMacros.exit.loopexit, label %.lr.ph13.i

DeclareVirtualMacros.exit.loopexit:               ; preds = %._crit_edge.9.i
  br label %DeclareVirtualMacros.exit

DeclareVirtualMacros.exit:                        ; preds = %DeclareVirtualMacros.exit.loopexit, %28
  %60 = tail call fastcc i32 @DeclareVirtualImpls(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %2, %struct._tagTreeCCNode* %node, %struct._tagTreeCCNode* %node)
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %63, label %62

; <label>:62                                      ; preds = %DeclareVirtualMacros.exit
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0)) #2
  br label %63

; <label>:63                                      ; preds = %62, %DeclareVirtualMacros.exit, %0
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @DeclareCreateFuncs(%struct._tagTreeCCContext* nocapture readonly %context, %struct._tagTreeCCNode* nocapture readonly %node) #0 {
  %1 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 13
  %2 = load %struct._tagTreeCCStream*, %struct._tagTreeCCStream** %1, align 8, !tbaa !35
  %3 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 5
  %4 = load i32, i32* %3, align 4, !tbaa !34
  %5 = and i32 %4, 26
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %.preheader.preheader, label %30

.preheader.preheader:                             ; preds = %0
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %10
  %.0.i = phi %struct._tagTreeCCNode* [ %8, %10 ], [ %node, %.preheader.preheader ]
  %7 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %.0.i, i64 0, i32 0
  %8 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %7, align 8, !tbaa !38
  %9 = icmp eq %struct._tagTreeCCNode* %8, null
  br i1 %9, label %TypedefName.exit, label %10

; <label>:10                                      ; preds = %.preheader
  %11 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %.0.i, i64 0, i32 5
  %12 = load i32, i32* %11, align 4, !tbaa !34
  %13 = and i32 %12, 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %.preheader, label %TypedefName.exit

TypedefName.exit:                                 ; preds = %.preheader, %10
  %.0.i.lcssa = phi %struct._tagTreeCCNode* [ %.0.i, %.preheader ], [ %.0.i, %10 ]
  %15 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %.0.i.lcssa, i64 0, i32 4
  %16 = load i8*, i8** %15, align 8, !tbaa !36
  %17 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 4
  %18 = load i8*, i8** %17, align 8, !tbaa !36
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.80, i64 0, i64 0), i8* %16, i8* %18) #2
  %19 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 8
  %20 = load i16, i16* %19, align 8
  %.mask = and i16 %20, 8
  %21 = icmp eq i16 %.mask, 0
  br i1 %21, label %25, label %22

; <label>:22                                      ; preds = %TypedefName.exit
  %23 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 10
  %24 = load i8*, i8** %23, align 8, !tbaa !31
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.81, i64 0, i64 0), i8* %24) #2
  br label %25

; <label>:25                                      ; preds = %TypedefName.exit, %22
  %needComma.0 = phi i32 [ 1, %22 ], [ 0, %TypedefName.exit ]
  %26 = tail call fastcc i32 @CreateParams(%struct._tagTreeCCStream* %2, %struct._tagTreeCCNode* %node, i32 %needComma.0)
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %29

; <label>:28                                      ; preds = %25
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11, i64 0, i64 0)) #2
  br label %29

; <label>:29                                      ; preds = %25, %28
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.34, i64 0, i64 0)) #2
  br label %30

; <label>:30                                      ; preds = %0, %29
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @DeclareNonVirtuals(%struct._tagTreeCCContext* nocapture readnone %context, %struct._tagTreeCCOperation* nocapture readonly %oper) #0 {
  %1 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %oper, i64 0, i32 14
  %2 = load %struct._tagTreeCCStream*, %struct._tagTreeCCStream** %1, align 8, !tbaa !43
  %3 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %oper, i64 0, i32 5
  %4 = load i32, i32* %3, align 4, !tbaa !44
  %5 = and i32 %4, 1
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %27

; <label>:7                                       ; preds = %0
  %8 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %oper, i64 0, i32 2
  %9 = load i8*, i8** %8, align 8, !tbaa !45
  %10 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %oper, i64 0, i32 0
  %11 = load i8*, i8** %10, align 8, !tbaa !46
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.82, i64 0, i64 0), i8* %9, i8* %11) #2
  %12 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %oper, i64 0, i32 4
  %param.0.1 = load %struct._tagTreeCCParam*, %struct._tagTreeCCParam** %12, align 8
  %13 = icmp eq %struct._tagTreeCCParam* %param.0.1, null
  br i1 %13, label %._crit_edge, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %7
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %24
  %param.04 = phi %struct._tagTreeCCParam* [ %param.0, %24 ], [ %param.0.1, %.lr.ph.preheader ]
  %needComma.03 = phi i1 [ true, %24 ], [ false, %.lr.ph.preheader ]
  %num.02 = phi i32 [ %num.1, %24 ], [ 1, %.lr.ph.preheader ]
  br i1 %needComma.03, label %14, label %15

; <label>:14                                      ; preds = %.lr.ph
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6.9, i64 0, i64 0)) #2
  br label %15

; <label>:15                                      ; preds = %14, %.lr.ph
  %16 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.04, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8, !tbaa !41
  %18 = icmp eq i8* %17, null
  %19 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.04, i64 0, i32 1
  %20 = load i8*, i8** %19, align 8, !tbaa !47
  br i1 %18, label %22, label %21

; <label>:21                                      ; preds = %15
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.76, i64 0, i64 0), i8* %20, i8* %17) #2
  br label %24

; <label>:22                                      ; preds = %15
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.77, i64 0, i64 0), i8* %20, i32 %num.02) #2
  %23 = add nsw i32 %num.02, 1
  br label %24

; <label>:24                                      ; preds = %22, %21
  %num.1 = phi i32 [ %num.02, %21 ], [ %23, %22 ]
  %25 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.04, i64 0, i32 4
  %param.0 = load %struct._tagTreeCCParam*, %struct._tagTreeCCParam** %25, align 8
  %26 = icmp eq %struct._tagTreeCCParam* %param.0, null
  br i1 %26, label %._crit_edge.thread.loopexit, label %.lr.ph

._crit_edge:                                      ; preds = %7
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11, i64 0, i64 0)) #2
  br label %._crit_edge.thread

._crit_edge.thread.loopexit:                      ; preds = %24
  br label %._crit_edge.thread

._crit_edge.thread:                               ; preds = %._crit_edge.thread.loopexit, %._crit_edge
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.34, i64 0, i64 0)) #2
  br label %27

; <label>:27                                      ; preds = %0, %._crit_edge.thread
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @WriteSourceSkeleton(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %stream) #0 {
  %1 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 14
  %2 = load i32, i32* %1, align 4, !tbaa !10
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %7, label %4

; <label>:4                                       ; preds = %0
  %5 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 10
  %6 = load i8*, i8** %5, align 8, !tbaa !31
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.119, i64 0, i64 0), i8* %6, i32 %2) #2
  br label %7

; <label>:7                                       ; preds = %0, %4
  %8 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 8
  %9 = load i16, i16* %8, align 8
  %.mask = and i16 %9, 8
  %10 = icmp eq i16 %.mask, 0
  br i1 %10, label %14, label %11

; <label>:11                                      ; preds = %7
  %12 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 10
  %13 = load i8*, i8** %12, align 8, !tbaa !31
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.120, i64 0, i64 0), i8* %13) #2
  %.pre = load i16, i16* %8, align 8
  br label %14

; <label>:14                                      ; preds = %7, %11
  %15 = phi i16 [ %9, %7 ], [ %.pre, %11 ]
  %.mask1 = and i16 %15, 2
  %16 = icmp eq i16 %.mask1, 0
  br i1 %16, label %20, label %17

; <label>:17                                      ; preds = %14
  %18 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 10
  %19 = load i8*, i8** %18, align 8, !tbaa !31
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.121, i64 0, i64 0), i8* %19) #2
  %.pre3 = load i16, i16* %8, align 8
  br label %20

; <label>:20                                      ; preds = %14, %17
  %21 = phi i16 [ %15, %14 ], [ %.pre3, %17 ]
  %.mask2 = and i16 %21, 4096
  %22 = icmp eq i16 %.mask2, 0
  br i1 %22, label %24, label %23

; <label>:23                                      ; preds = %20
  tail call void @TreeCCIncludeSkeleton(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.122, i64 0, i64 0)) #2
  br label %25

; <label>:24                                      ; preds = %20
  tail call void @TreeCCIncludeSkeleton(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.123, i64 0, i64 0)) #2
  br label %25

; <label>:25                                      ; preds = %24, %23
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @DefineVtables(%struct._tagTreeCCContext* %context, %struct._tagTreeCCNode* %node) #0 {
  %1 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 14
  %2 = load %struct._tagTreeCCStream*, %struct._tagTreeCCStream** %1, align 8, !tbaa !48
  %3 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 5
  %4 = load i32, i32* %3, align 4, !tbaa !34
  %5 = and i32 %4, 24
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %20

; <label>:7                                       ; preds = %0
  tail call fastcc void @OutputVtableImpls(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %2, %struct._tagTreeCCNode* %node, %struct._tagTreeCCNode* %node)
  %8 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 4
  %9 = load i8*, i8** %8, align 8, !tbaa !36
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.124, i64 0, i64 0), i8* %9, i8* %9) #2
  %10 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 0
  %11 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %10, align 8, !tbaa !38
  %12 = icmp eq %struct._tagTreeCCNode* %11, null
  br i1 %12, label %16, label %13

; <label>:13                                      ; preds = %7
  %14 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %11, i64 0, i32 4
  %15 = load i8*, i8** %14, align 8, !tbaa !36
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.125, i64 0, i64 0), i8* %15) #2
  br label %17

; <label>:16                                      ; preds = %7
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.126, i64 0, i64 0)) #2
  br label %17

; <label>:17                                      ; preds = %16, %13
  %18 = load i8*, i8** %8, align 8, !tbaa !36
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.127, i64 0, i64 0), i8* %18) #2
  %19 = load i8*, i8** %8, align 8, !tbaa !36
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.128, i64 0, i64 0), i8* %19) #2
  tail call fastcc void @OutputVtableFuncs(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %2, %struct._tagTreeCCNode* %node, %struct._tagTreeCCNode* %node)
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.56, i64 0, i64 0)) #2
  br label %20

; <label>:20                                      ; preds = %0, %17
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @ImplementCreateFuncs(%struct._tagTreeCCContext* nocapture readonly %context, %struct._tagTreeCCNode* %node) #0 {
  %1 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 14
  %2 = load %struct._tagTreeCCStream*, %struct._tagTreeCCStream** %1, align 8, !tbaa !48
  %3 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 5
  %4 = load i32, i32* %3, align 4, !tbaa !34
  %5 = and i32 %4, 26
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %.preheader.preheader, label %70

.preheader.preheader:                             ; preds = %0
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %10
  %.0.i = phi %struct._tagTreeCCNode* [ %8, %10 ], [ %node, %.preheader.preheader ]
  %7 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %.0.i, i64 0, i32 0
  %8 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %7, align 8, !tbaa !38
  %9 = icmp eq %struct._tagTreeCCNode* %8, null
  br i1 %9, label %TypedefName.exit, label %10

; <label>:10                                      ; preds = %.preheader
  %11 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %.0.i, i64 0, i32 5
  %12 = load i32, i32* %11, align 4, !tbaa !34
  %13 = and i32 %12, 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %.preheader, label %TypedefName.exit

TypedefName.exit:                                 ; preds = %.preheader, %10
  %.0.i.lcssa = phi %struct._tagTreeCCNode* [ %.0.i, %.preheader ], [ %.0.i, %10 ]
  %15 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %.0.i.lcssa, i64 0, i32 4
  %16 = load i8*, i8** %15, align 8, !tbaa !36
  %17 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 4
  %18 = load i8*, i8** %17, align 8, !tbaa !36
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.133, i64 0, i64 0), i8* %16, i8* %18) #2
  %19 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 8
  %20 = load i16, i16* %19, align 8
  %.mask = and i16 %20, 8
  %21 = icmp eq i16 %.mask, 0
  br i1 %21, label %25, label %22

; <label>:22                                      ; preds = %TypedefName.exit
  %23 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 10
  %24 = load i8*, i8** %23, align 8, !tbaa !31
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.81, i64 0, i64 0), i8* %24) #2
  br label %25

; <label>:25                                      ; preds = %TypedefName.exit, %22
  %needComma.0 = phi i32 [ 1, %22 ], [ 0, %TypedefName.exit ]
  %26 = tail call fastcc i32 @CreateParamsSource(%struct._tagTreeCCStream* %2, %struct._tagTreeCCNode* %node, i32 %needComma.0)
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %29

; <label>:28                                      ; preds = %25
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11, i64 0, i64 0)) #2
  br label %29

; <label>:29                                      ; preds = %25, %28
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12, i64 0, i64 0)) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.13, i64 0, i64 0)) #2
  %30 = load i16, i16* %19, align 8
  %31 = and i16 %30, 6
  %32 = icmp eq i16 %31, 0
  br i1 %32, label %33, label %44

; <label>:33                                      ; preds = %29
  %34 = tail call i32 @TreeCCNodeIsSingleton(%struct._tagTreeCCNode* %node) #2
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %._crit_edge, label %36

._crit_edge:                                      ; preds = %33
  %.pre = load i16, i16* %19, align 8
  br label %44

; <label>:36                                      ; preds = %33
  %37 = load i8*, i8** %17, align 8, !tbaa !36
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.134, i64 0, i64 0), i8* %37) #2
  %38 = load i8*, i8** %17, align 8, !tbaa !36
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.135, i64 0, i64 0), i8* %38) #2
  %39 = load i16, i16* %19, align 8
  %.mask7 = and i16 %39, 128
  %40 = icmp eq i16 %.mask7, 0
  br i1 %40, label %41, label %43

; <label>:41                                      ; preds = %36
  %42 = load i8*, i8** %17, align 8, !tbaa !36
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.136, i64 0, i64 0), i8* %42) #2
  br label %43

; <label>:43                                      ; preds = %36, %41
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.137, i64 0, i64 0)) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.138, i64 0, i64 0), i8* %16) #2
  br label %69

; <label>:44                                      ; preds = %._crit_edge, %29
  %45 = phi i16 [ %.pre, %._crit_edge ], [ %30, %29 ]
  %.mask3 = and i16 %45, 8
  %46 = icmp eq i16 %.mask3, 0
  %47 = load i8*, i8** %17, align 8, !tbaa !36
  %48 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 9
  %49 = load i8*, i8** %48, align 8, !tbaa !30
  br i1 %46, label %51, label %50

; <label>:50                                      ; preds = %44
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.139, i64 0, i64 0), i8* %47, i8* %47, i8* %49, i8* %47) #2
  br label %52

; <label>:51                                      ; preds = %44
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.140, i64 0, i64 0), i8* %47, i8* %47, i8* %49, i8* %47) #2
  br label %52

; <label>:52                                      ; preds = %51, %50
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.141, i64 0, i64 0)) #2
  %53 = load i8*, i8** %17, align 8, !tbaa !36
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.142, i64 0, i64 0), i8* %53) #2
  %54 = load i16, i16* %19, align 8
  %.mask4 = and i16 %54, 128
  %55 = icmp eq i16 %.mask4, 0
  br i1 %55, label %56, label %58

; <label>:56                                      ; preds = %52
  %57 = load i8*, i8** %17, align 8, !tbaa !36
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.143, i64 0, i64 0), i8* %57) #2
  %.pre11 = load i16, i16* %19, align 8
  br label %58

; <label>:58                                      ; preds = %52, %56
  %59 = phi i16 [ %54, %52 ], [ %.pre11, %56 ]
  %.mask5 = and i16 %59, 2
  %60 = icmp eq i16 %.mask5, 0
  br i1 %60, label %68, label %61

; <label>:61                                      ; preds = %58
  %.mask6 = and i16 %59, 8
  %62 = icmp eq i16 %.mask6, 0
  %63 = load i8*, i8** %48, align 8, !tbaa !30
  br i1 %62, label %66, label %64

; <label>:64                                      ; preds = %61
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.144, i64 0, i64 0), i8* %63) #2
  %65 = load i8*, i8** %48, align 8, !tbaa !30
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.145, i64 0, i64 0), i8* %65) #2
  br label %68

; <label>:66                                      ; preds = %61
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.146, i64 0, i64 0), i8* %63) #2
  %67 = load i8*, i8** %48, align 8, !tbaa !30
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.147, i64 0, i64 0), i8* %67) #2
  br label %68

; <label>:68                                      ; preds = %58, %64, %66
  tail call fastcc void @InitFields(%struct._tagTreeCCStream* %2, %struct._tagTreeCCNode* %node)
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.148, i64 0, i64 0), i8* %16) #2
  br label %69

; <label>:69                                      ; preds = %68, %43
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.41, i64 0, i64 0)) #2
  br label %70

; <label>:70                                      ; preds = %0, %69
  ret void
}

; Function Attrs: nounwind readnone uwtable
define internal void @C_GenStart(%struct._tagTreeCCContext* nocapture %context, %struct._tagTreeCCStream* nocapture %stream, %struct._tagTreeCCOperation* nocapture %oper) #6 {
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @C_GenEntry(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %stream, %struct._tagTreeCCOperation* nocapture readonly %oper) #0 {
  tail call fastcc void @CGenEntry(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %stream, %struct._tagTreeCCOperation* %oper, i32 -1)
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @C_GenSplitEntry(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %stream, %struct._tagTreeCCOperation* nocapture readonly %oper, i32 %number) #0 {
  tail call fastcc void @CGenEntry(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %stream, %struct._tagTreeCCOperation* %oper, i32 %number)
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @C_GenSwitchHead(%struct._tagTreeCCContext* nocapture readonly %context, %struct._tagTreeCCStream* %stream, i8* %paramName, i32 %level, i32 %isEnum) #0 {
  %1 = shl nsw i32 %level, 1
  %2 = or i32 %1, 1
  %3 = icmp sgt i32 %2, 3
  br i1 %3, label %.lr.ph.i.preheader, label %7

.lr.ph.i.preheader:                               ; preds = %0
  br label %.lr.ph.i

.lr.ph.i:                                         ; preds = %.lr.ph.i.preheader, %.lr.ph.i
  %.01.i = phi i32 [ %4, %.lr.ph.i ], [ %2, %.lr.ph.i.preheader ]
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.18, i64 0, i64 0)) #2
  %4 = add nsw i32 %.01.i, -4
  %5 = icmp sgt i32 %4, 3
  br i1 %5, label %.lr.ph.i, label %._crit_edge.i

._crit_edge.i:                                    ; preds = %.lr.ph.i
  %6 = and i32 %2, 3
  br label %7

; <label>:7                                       ; preds = %._crit_edge.i, %0
  %.0.lcssa.i = phi i32 [ %6, %._crit_edge.i ], [ %2, %0 ]
  switch i32 %.0.lcssa.i, label %Indent.exit [
    i32 1, label %8
    i32 2, label %9
    i32 3, label %10
  ]

; <label>:8                                       ; preds = %7
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.19, i64 0, i64 0)) #2
  br label %Indent.exit

; <label>:9                                       ; preds = %7
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20, i64 0, i64 0)) #2
  br label %Indent.exit

; <label>:10                                      ; preds = %7
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.21, i64 0, i64 0)) #2
  br label %Indent.exit

Indent.exit:                                      ; preds = %7, %8, %9, %10
  %11 = icmp eq i32 %isEnum, 0
  br i1 %11, label %13, label %12

; <label>:12                                      ; preds = %Indent.exit
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.14, i64 0, i64 0), i8* %paramName) #2
  br label %24

; <label>:13                                      ; preds = %Indent.exit
  %14 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 13
  %15 = load i32, i32* %14, align 4, !tbaa !9
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %23

; <label>:17                                      ; preds = %13
  %18 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 8
  %19 = load i16, i16* %18, align 8
  %.mask = and i16 %19, 128
  %20 = icmp eq i16 %.mask, 0
  br i1 %20, label %22, label %21

; <label>:21                                      ; preds = %17
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.15, i64 0, i64 0), i8* %paramName) #2
  br label %24

; <label>:22                                      ; preds = %17
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.16, i64 0, i64 0), i8* %paramName) #2
  br label %24

; <label>:23                                      ; preds = %13
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.17, i64 0, i64 0), i8* %paramName) #2
  br label %24

; <label>:24                                      ; preds = %23, %22, %21, %12
  br i1 %3, label %.lr.ph.i.2.preheader, label %28

.lr.ph.i.2.preheader:                             ; preds = %24
  br label %.lr.ph.i.2

.lr.ph.i.2:                                       ; preds = %.lr.ph.i.2.preheader, %.lr.ph.i.2
  %.01.i.1 = phi i32 [ %25, %.lr.ph.i.2 ], [ %2, %.lr.ph.i.2.preheader ]
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.18, i64 0, i64 0)) #2
  %25 = add nsw i32 %.01.i.1, -4
  %26 = icmp sgt i32 %25, 3
  br i1 %26, label %.lr.ph.i.2, label %._crit_edge.i.3

._crit_edge.i.3:                                  ; preds = %.lr.ph.i.2
  %27 = and i32 %2, 3
  br label %28

; <label>:28                                      ; preds = %._crit_edge.i.3, %24
  %.0.lcssa.i.4 = phi i32 [ %27, %._crit_edge.i.3 ], [ %2, %24 ]
  switch i32 %.0.lcssa.i.4, label %Indent.exit5 [
    i32 1, label %29
    i32 2, label %30
    i32 3, label %31
  ]

; <label>:29                                      ; preds = %28
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.19, i64 0, i64 0)) #2
  br label %Indent.exit5

; <label>:30                                      ; preds = %28
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20, i64 0, i64 0)) #2
  br label %Indent.exit5

; <label>:31                                      ; preds = %28
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.21, i64 0, i64 0)) #2
  br label %Indent.exit5

Indent.exit5:                                     ; preds = %28, %29, %30, %31
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.13, i64 0, i64 0)) #2
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @C_GenSelector(%struct._tagTreeCCContext* nocapture readnone %context, %struct._tagTreeCCStream* %stream, %struct._tagTreeCCNode* nocapture readonly %node, i32 %level) #0 {
  %1 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 5
  %2 = load i32, i32* %1, align 4, !tbaa !34
  %3 = and i32 %2, 16
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %18, label %5

; <label>:5                                       ; preds = %0
  %6 = shl nsw i32 %level, 1
  %7 = add nsw i32 %6, 2
  %8 = icmp sgt i32 %7, 3
  br i1 %8, label %.lr.ph.i.preheader, label %12

.lr.ph.i.preheader:                               ; preds = %5
  br label %.lr.ph.i

.lr.ph.i:                                         ; preds = %.lr.ph.i.preheader, %.lr.ph.i
  %.01.i = phi i32 [ %9, %.lr.ph.i ], [ %7, %.lr.ph.i.preheader ]
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.18, i64 0, i64 0)) #2
  %9 = add nsw i32 %.01.i, -4
  %10 = icmp sgt i32 %9, 3
  br i1 %10, label %.lr.ph.i, label %._crit_edge.i

._crit_edge.i:                                    ; preds = %.lr.ph.i
  %11 = and i32 %7, 2
  br label %12

; <label>:12                                      ; preds = %._crit_edge.i, %5
  %.0.lcssa.i = phi i32 [ %11, %._crit_edge.i ], [ %7, %5 ]
  switch i32 %.0.lcssa.i, label %Indent.exit [
    i32 1, label %13
    i32 2, label %14
    i32 3, label %15
  ]

; <label>:13                                      ; preds = %12
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.19, i64 0, i64 0)) #2
  br label %Indent.exit

; <label>:14                                      ; preds = %12
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20, i64 0, i64 0)) #2
  br label %Indent.exit

; <label>:15                                      ; preds = %12
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.21, i64 0, i64 0)) #2
  br label %Indent.exit

Indent.exit:                                      ; preds = %12, %13, %14, %15
  %16 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 4
  %17 = load i8*, i8** %16, align 8, !tbaa !36
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.22, i64 0, i64 0), i8* %17) #2
  br label %34

; <label>:18                                      ; preds = %0
  %19 = and i32 %2, 8
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %34

; <label>:21                                      ; preds = %18
  %22 = shl nsw i32 %level, 1
  %23 = add nsw i32 %22, 2
  %24 = icmp sgt i32 %23, 3
  br i1 %24, label %.lr.ph.i.2.preheader, label %28

.lr.ph.i.2.preheader:                             ; preds = %21
  br label %.lr.ph.i.2

.lr.ph.i.2:                                       ; preds = %.lr.ph.i.2.preheader, %.lr.ph.i.2
  %.01.i.1 = phi i32 [ %25, %.lr.ph.i.2 ], [ %23, %.lr.ph.i.2.preheader ]
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.18, i64 0, i64 0)) #2
  %25 = add nsw i32 %.01.i.1, -4
  %26 = icmp sgt i32 %25, 3
  br i1 %26, label %.lr.ph.i.2, label %._crit_edge.i.3

._crit_edge.i.3:                                  ; preds = %.lr.ph.i.2
  %27 = and i32 %23, 2
  br label %28

; <label>:28                                      ; preds = %._crit_edge.i.3, %21
  %.0.lcssa.i.4 = phi i32 [ %27, %._crit_edge.i.3 ], [ %23, %21 ]
  switch i32 %.0.lcssa.i.4, label %Indent.exit5 [
    i32 1, label %29
    i32 2, label %30
    i32 3, label %31
  ]

; <label>:29                                      ; preds = %28
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.19, i64 0, i64 0)) #2
  br label %Indent.exit5

; <label>:30                                      ; preds = %28
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20, i64 0, i64 0)) #2
  br label %Indent.exit5

; <label>:31                                      ; preds = %28
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.21, i64 0, i64 0)) #2
  br label %Indent.exit5

Indent.exit5:                                     ; preds = %28, %29, %30, %31
  %32 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 4
  %33 = load i8*, i8** %32, align 8, !tbaa !36
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.23, i64 0, i64 0), i8* %33) #2
  br label %34

; <label>:34                                      ; preds = %18, %Indent.exit5, %Indent.exit
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @C_GenEndSelectors(%struct._tagTreeCCContext* nocapture readnone %context, %struct._tagTreeCCStream* %stream, i32 %level) #0 {
  %1 = shl nsw i32 %level, 1
  %2 = add nsw i32 %1, 2
  %3 = icmp sgt i32 %2, 3
  br i1 %3, label %.lr.ph.i.preheader, label %7

.lr.ph.i.preheader:                               ; preds = %0
  br label %.lr.ph.i

.lr.ph.i:                                         ; preds = %.lr.ph.i.preheader, %.lr.ph.i
  %.01.i = phi i32 [ %4, %.lr.ph.i ], [ %2, %.lr.ph.i.preheader ]
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.18, i64 0, i64 0)) #2
  %4 = add nsw i32 %.01.i, -4
  %5 = icmp sgt i32 %4, 3
  br i1 %5, label %.lr.ph.i, label %._crit_edge.i

._crit_edge.i:                                    ; preds = %.lr.ph.i
  %6 = and i32 %2, 2
  br label %7

; <label>:7                                       ; preds = %._crit_edge.i, %0
  %.0.lcssa.i = phi i32 [ %6, %._crit_edge.i ], [ %2, %0 ]
  switch i32 %.0.lcssa.i, label %Indent.exit [
    i32 1, label %8
    i32 2, label %9
    i32 3, label %10
  ]

; <label>:8                                       ; preds = %7
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.19, i64 0, i64 0)) #2
  br label %Indent.exit

; <label>:9                                       ; preds = %7
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20, i64 0, i64 0)) #2
  br label %Indent.exit

; <label>:10                                      ; preds = %7
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.21, i64 0, i64 0)) #2
  br label %Indent.exit

Indent.exit:                                      ; preds = %7, %8, %9, %10
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.13, i64 0, i64 0)) #2
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @C_GenCaseFunc(%struct._tagTreeCCContext* nocapture readnone %context, %struct._tagTreeCCStream* %stream, %struct._tagTreeCCOperationCase* nocapture readonly %operCase, i32 %number) #0 {
  %1 = getelementptr inbounds %struct._tagTreeCCOperationCase, %struct._tagTreeCCOperationCase* %operCase, i64 0, i32 2
  %2 = load %struct._tagTreeCCOperation*, %struct._tagTreeCCOperation** %1, align 8, !tbaa !49
  %3 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %2, i64 0, i32 2
  %4 = load i8*, i8** %3, align 8, !tbaa !45
  %5 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %2, i64 0, i32 0
  %6 = load i8*, i8** %5, align 8, !tbaa !46
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.24, i64 0, i64 0), i8* %4, i8* %6, i32 %number) #2
  %7 = load %struct._tagTreeCCOperation*, %struct._tagTreeCCOperation** %1, align 8, !tbaa !49
  %8 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %7, i64 0, i32 4
  %param.0.2 = load %struct._tagTreeCCParam*, %struct._tagTreeCCParam** %8, align 8
  %9 = icmp eq %struct._tagTreeCCParam* %param.0.2, null
  br i1 %9, label %._crit_edge, label %.lr.ph

.lr.ph:                                           ; preds = %0
  %10 = getelementptr inbounds %struct._tagTreeCCOperationCase, %struct._tagTreeCCOperationCase* %operCase, i64 0, i32 0
  %11 = load %struct._tagTreeCCTrigger*, %struct._tagTreeCCTrigger** %10, align 8, !tbaa !51
  br label %12

; <label>:12                                      ; preds = %.lr.ph, %39
  %param.06 = phi %struct._tagTreeCCParam* [ %param.0.2, %.lr.ph ], [ %param.0, %39 ]
  %needComma.05 = phi i1 [ false, %.lr.ph ], [ true, %39 ]
  %num.04 = phi i32 [ 1, %.lr.ph ], [ %num.1, %39 ]
  %trigger.03 = phi %struct._tagTreeCCTrigger* [ %11, %.lr.ph ], [ %trigger.1, %39 ]
  br i1 %needComma.05, label %13, label %14

; <label>:13                                      ; preds = %12
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6.9, i64 0, i64 0)) #2
  br label %14

; <label>:14                                      ; preds = %13, %12
  %15 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.06, i64 0, i32 2
  %16 = load i32, i32* %15, align 4, !tbaa !52
  %17 = and i32 %16, 1
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %30, label %19

; <label>:19                                      ; preds = %14
  %20 = getelementptr inbounds %struct._tagTreeCCTrigger, %struct._tagTreeCCTrigger* %trigger.03, i64 0, i32 0
  %21 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %20, align 8, !tbaa !53
  %22 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %21, i64 0, i32 5
  %23 = load i32, i32* %22, align 4, !tbaa !34
  %24 = and i32 %23, 24
  %25 = icmp eq i32 %24, 0
  %26 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %21, i64 0, i32 4
  %27 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.06, i64 0, i32 1
  %type.0.in = select i1 %25, i8** %26, i8** %27
  %suffix.0 = select i1 %25, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.25, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.26, i64 0, i64 0)
  %28 = getelementptr inbounds %struct._tagTreeCCTrigger, %struct._tagTreeCCTrigger* %trigger.03, i64 0, i32 1
  %29 = load %struct._tagTreeCCTrigger*, %struct._tagTreeCCTrigger** %28, align 8, !tbaa !55
  br label %32

; <label>:30                                      ; preds = %14
  %31 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.06, i64 0, i32 1
  br label %32

; <label>:32                                      ; preds = %30, %19
  %trigger.1 = phi %struct._tagTreeCCTrigger* [ %29, %19 ], [ %trigger.03, %30 ]
  %type.1.in = phi i8** [ %type.0.in, %19 ], [ %31, %30 ]
  %suffix.1 = phi i8* [ %suffix.0, %19 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.26, i64 0, i64 0), %30 ]
  %type.1 = load i8*, i8** %type.1.in, align 8
  %33 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.06, i64 0, i32 0
  %34 = load i8*, i8** %33, align 8, !tbaa !41
  %35 = icmp eq i8* %34, null
  br i1 %35, label %37, label %36

; <label>:36                                      ; preds = %32
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.27, i64 0, i64 0), i8* %type.1, i8* %suffix.1, i8* %34) #2
  br label %39

; <label>:37                                      ; preds = %32
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.28, i64 0, i64 0), i8* %type.1, i8* %suffix.1, i32 %num.04) #2
  %38 = add nsw i32 %num.04, 1
  br label %39

; <label>:39                                      ; preds = %37, %36
  %num.1 = phi i32 [ %num.04, %36 ], [ %38, %37 ]
  %40 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.06, i64 0, i32 4
  %param.0 = load %struct._tagTreeCCParam*, %struct._tagTreeCCParam** %40, align 8
  %41 = icmp eq %struct._tagTreeCCParam* %param.0, null
  br i1 %41, label %._crit_edge.thread.loopexit, label %12

._crit_edge:                                      ; preds = %0
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11, i64 0, i64 0)) #2
  br label %._crit_edge.thread

._crit_edge.thread.loopexit:                      ; preds = %39
  br label %._crit_edge.thread

._crit_edge.thread:                               ; preds = %._crit_edge.thread.loopexit, %._crit_edge
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12, i64 0, i64 0)) #2
  %42 = getelementptr inbounds %struct._tagTreeCCOperationCase, %struct._tagTreeCCOperationCase* %operCase, i64 0, i32 7
  %43 = load i64, i64* %42, align 8, !tbaa !56
  %44 = getelementptr inbounds %struct._tagTreeCCOperationCase, %struct._tagTreeCCOperationCase* %operCase, i64 0, i32 6
  %45 = load i8*, i8** %44, align 8, !tbaa !57
  tail call void @TreeCCStreamLine(%struct._tagTreeCCStream* %stream, i64 %43, i8* %45) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.29, i64 0, i64 0)) #2
  %46 = getelementptr inbounds %struct._tagTreeCCOperationCase, %struct._tagTreeCCOperationCase* %operCase, i64 0, i32 1
  %47 = load i8*, i8** %46, align 8, !tbaa !58
  %48 = icmp eq i8* %47, null
  br i1 %48, label %50, label %49

; <label>:49                                      ; preds = %._crit_edge.thread
  tail call void @TreeCCStreamCode(%struct._tagTreeCCStream* %stream, i8* %47) #2
  br label %50

; <label>:50                                      ; preds = %._crit_edge.thread, %49
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.30, i64 0, i64 0)) #2
  tail call void @TreeCCStreamFixLine(%struct._tagTreeCCStream* %stream) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0)) #2
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @C_GenCaseCall(%struct._tagTreeCCContext* nocapture readnone %context, %struct._tagTreeCCStream* %stream, %struct._tagTreeCCOperationCase* nocapture readonly %operCase, i32 %number, i32 %level) #0 {
  %1 = shl nsw i32 %level, 1
  %2 = add nsw i32 %1, 3
  %3 = icmp sgt i32 %level, 0
  br i1 %3, label %.lr.ph.i.preheader, label %7

.lr.ph.i.preheader:                               ; preds = %0
  br label %.lr.ph.i

.lr.ph.i:                                         ; preds = %.lr.ph.i.preheader, %.lr.ph.i
  %.01.i = phi i32 [ %4, %.lr.ph.i ], [ %2, %.lr.ph.i.preheader ]
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.18, i64 0, i64 0)) #2
  %4 = add nsw i32 %.01.i, -4
  %5 = icmp sgt i32 %4, 3
  br i1 %5, label %.lr.ph.i, label %._crit_edge.i

._crit_edge.i:                                    ; preds = %.lr.ph.i
  %6 = and i32 %2, 3
  br label %7

; <label>:7                                       ; preds = %._crit_edge.i, %0
  %.0.lcssa.i = phi i32 [ %6, %._crit_edge.i ], [ %2, %0 ]
  switch i32 %.0.lcssa.i, label %Indent.exit [
    i32 1, label %8
    i32 2, label %9
    i32 3, label %10
  ]

; <label>:8                                       ; preds = %7
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.19, i64 0, i64 0)) #2
  br label %Indent.exit

; <label>:9                                       ; preds = %7
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20, i64 0, i64 0)) #2
  br label %Indent.exit

; <label>:10                                      ; preds = %7
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.21, i64 0, i64 0)) #2
  br label %Indent.exit

Indent.exit:                                      ; preds = %7, %8, %9, %10
  %11 = getelementptr inbounds %struct._tagTreeCCOperationCase, %struct._tagTreeCCOperationCase* %operCase, i64 0, i32 2
  %12 = load %struct._tagTreeCCOperation*, %struct._tagTreeCCOperation** %11, align 8, !tbaa !49
  %13 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %12, i64 0, i32 2
  %14 = load i8*, i8** %13, align 8, !tbaa !45
  %15 = tail call i32 @strcmp(i8* %14, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11, i64 0, i64 0)) #2
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %18, label %17

; <label>:17                                      ; preds = %Indent.exit
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.31, i64 0, i64 0)) #2
  %.pre = load %struct._tagTreeCCOperation*, %struct._tagTreeCCOperation** %11, align 8, !tbaa !49
  br label %18

; <label>:18                                      ; preds = %Indent.exit, %17
  %19 = phi %struct._tagTreeCCOperation* [ %12, %Indent.exit ], [ %.pre, %17 ]
  %20 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %19, i64 0, i32 0
  %21 = load i8*, i8** %20, align 8, !tbaa !46
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.32, i64 0, i64 0), i8* %21, i32 %number) #2
  %22 = load %struct._tagTreeCCOperation*, %struct._tagTreeCCOperation** %11, align 8, !tbaa !49
  %23 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %22, i64 0, i32 4
  %param.0.9 = load %struct._tagTreeCCParam*, %struct._tagTreeCCParam** %23, align 8
  %24 = icmp eq %struct._tagTreeCCParam* %param.0.9, null
  br i1 %24, label %._crit_edge, label %.lr.ph

.lr.ph:                                           ; preds = %18
  %25 = getelementptr inbounds %struct._tagTreeCCOperationCase, %struct._tagTreeCCOperationCase* %operCase, i64 0, i32 0
  %26 = load %struct._tagTreeCCTrigger*, %struct._tagTreeCCTrigger** %25, align 8, !tbaa !51
  br label %27

; <label>:27                                      ; preds = %.lr.ph, %66
  %param.013 = phi %struct._tagTreeCCParam* [ %param.0.9, %.lr.ph ], [ %param.0, %66 ]
  %trigger.012 = phi %struct._tagTreeCCTrigger* [ %26, %.lr.ph ], [ %trigger.1, %66 ]
  %num.011 = phi i32 [ 1, %.lr.ph ], [ %num.1, %66 ]
  %needComma.010 = phi i1 [ true, %.lr.ph ], [ false, %66 ]
  br i1 %needComma.010, label %29, label %28

; <label>:28                                      ; preds = %27
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6.9, i64 0, i64 0)) #2
  br label %29

; <label>:29                                      ; preds = %27, %28
  %30 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.013, i64 0, i32 2
  %31 = load i32, i32* %30, align 4, !tbaa !52
  %32 = and i32 %31, 1
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %44, label %34

; <label>:34                                      ; preds = %29
  %35 = getelementptr inbounds %struct._tagTreeCCTrigger, %struct._tagTreeCCTrigger* %trigger.012, i64 0, i32 0
  %36 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %35, align 8, !tbaa !53
  %37 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %36, i64 0, i32 5
  %38 = load i32, i32* %37, align 4, !tbaa !34
  %39 = and i32 %38, 24
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %44

; <label>:41                                      ; preds = %34
  %42 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %36, i64 0, i32 4
  %43 = load i8*, i8** %42, align 8, !tbaa !36
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.33, i64 0, i64 0), i8* %43) #2
  br label %44

; <label>:44                                      ; preds = %29, %34, %41
  %45 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.013, i64 0, i32 0
  %46 = load i8*, i8** %45, align 8, !tbaa !41
  %47 = icmp eq i8* %46, null
  br i1 %47, label %49, label %48

; <label>:48                                      ; preds = %44
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0), i8* %46) #2
  br label %51

; <label>:49                                      ; preds = %44
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.9, i64 0, i64 0), i32 %num.011) #2
  %50 = add nsw i32 %num.011, 1
  br label %51

; <label>:51                                      ; preds = %49, %48
  %num.1 = phi i32 [ %num.011, %48 ], [ %50, %49 ]
  %52 = load i32, i32* %30, align 4, !tbaa !52
  %53 = and i32 %52, 1
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %66, label %55

; <label>:55                                      ; preds = %51
  %56 = getelementptr inbounds %struct._tagTreeCCTrigger, %struct._tagTreeCCTrigger* %trigger.012, i64 0, i32 0
  %57 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %56, align 8, !tbaa !53
  %58 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %57, i64 0, i32 5
  %59 = load i32, i32* %58, align 4, !tbaa !34
  %60 = and i32 %59, 24
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %63

; <label>:62                                      ; preds = %55
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10, i64 0, i64 0)) #2
  br label %63

; <label>:63                                      ; preds = %62, %55
  %64 = getelementptr inbounds %struct._tagTreeCCTrigger, %struct._tagTreeCCTrigger* %trigger.012, i64 0, i32 1
  %65 = load %struct._tagTreeCCTrigger*, %struct._tagTreeCCTrigger** %64, align 8, !tbaa !55
  br label %66

; <label>:66                                      ; preds = %51, %63
  %trigger.1 = phi %struct._tagTreeCCTrigger* [ %65, %63 ], [ %trigger.012, %51 ]
  %67 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.013, i64 0, i32 4
  %param.0 = load %struct._tagTreeCCParam*, %struct._tagTreeCCParam** %67, align 8
  %68 = icmp eq %struct._tagTreeCCParam* %param.0, null
  br i1 %68, label %._crit_edge.loopexit, label %27

._crit_edge.loopexit:                             ; preds = %66
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %18
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.34, i64 0, i64 0)) #2
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @C_GenCaseInline(%struct._tagTreeCCContext* nocapture readnone %context, %struct._tagTreeCCStream* %stream, %struct._tagTreeCCOperationCase* nocapture readonly %operCase, i32 %level) #0 {
  %1 = getelementptr inbounds %struct._tagTreeCCOperationCase, %struct._tagTreeCCOperationCase* %operCase, i64 0, i32 2
  %2 = load %struct._tagTreeCCOperation*, %struct._tagTreeCCOperation** %1, align 8, !tbaa !49
  %3 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %2, i64 0, i32 4
  %4 = getelementptr inbounds %struct._tagTreeCCOperationCase, %struct._tagTreeCCOperationCase* %operCase, i64 0, i32 0
  %5 = load %struct._tagTreeCCTrigger*, %struct._tagTreeCCTrigger** %4, align 8, !tbaa !51
  %param.0.7 = load %struct._tagTreeCCParam*, %struct._tagTreeCCParam** %3, align 8
  %6 = icmp eq %struct._tagTreeCCParam* %param.0.7, null
  %.pre = shl nsw i32 %level, 1
  %.pre12 = add nsw i32 %.pre, 3
  br i1 %6, label %._crit_edge, label %.lr.ph

.lr.ph:                                           ; preds = %0
  %7 = icmp sgt i32 %level, 0
  %8 = and i32 %.pre12, 3
  br i1 %7, label %.lr.ph.split.us.preheader, label %.lr.ph..lr.ph.split_crit_edge.preheader

.lr.ph..lr.ph.split_crit_edge.preheader:          ; preds = %.lr.ph
  br label %.lr.ph..lr.ph.split_crit_edge

.lr.ph.split.us.preheader:                        ; preds = %.lr.ph
  br label %.lr.ph.split.us

.lr.ph.split.us:                                  ; preds = %.lr.ph.split.us.preheader, %35
  %param.09.us = phi %struct._tagTreeCCParam* [ %param.0.us, %35 ], [ %param.0.7, %.lr.ph.split.us.preheader ]
  %trigger.08.us = phi %struct._tagTreeCCTrigger* [ %trigger.1.us, %35 ], [ %5, %.lr.ph.split.us.preheader ]
  %9 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.09.us, i64 0, i32 2
  %10 = load i32, i32* %9, align 4, !tbaa !52
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %35, label %13

; <label>:13                                      ; preds = %.lr.ph.split.us
  %14 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.09.us, i64 0, i32 0
  %15 = load i8*, i8** %14, align 8, !tbaa !41
  %16 = icmp eq i8* %15, null
  br i1 %16, label %32, label %17

; <label>:17                                      ; preds = %13
  %18 = getelementptr inbounds %struct._tagTreeCCTrigger, %struct._tagTreeCCTrigger* %trigger.08.us, i64 0, i32 0
  %19 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %18, align 8, !tbaa !53
  %20 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %19, i64 0, i32 5
  %21 = load i32, i32* %20, align 4, !tbaa !34
  %22 = and i32 %21, 24
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %.lr.ph.i.us.preheader, label %32

.lr.ph.i.us.preheader:                            ; preds = %17
  br label %.lr.ph.i.us

.lr.ph.i.us:                                      ; preds = %.lr.ph.i.us.preheader, %.lr.ph.i.us
  %.01.i.us = phi i32 [ %24, %.lr.ph.i.us ], [ %.pre12, %.lr.ph.i.us.preheader ]
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.18, i64 0, i64 0)) #2
  %24 = add nsw i32 %.01.i.us, -4
  %25 = icmp sgt i32 %24, 3
  br i1 %25, label %.lr.ph.i.us, label %._crit_edge.i.us

._crit_edge.i.us:                                 ; preds = %.lr.ph.i.us
  switch i32 %8, label %Indent.exit.us [
    i32 1, label %27
    i32 3, label %26
  ]

; <label>:26                                      ; preds = %._crit_edge.i.us
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.21, i64 0, i64 0)) #2
  br label %Indent.exit.us

; <label>:27                                      ; preds = %._crit_edge.i.us
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.19, i64 0, i64 0)) #2
  br label %Indent.exit.us

Indent.exit.us:                                   ; preds = %27, %26, %._crit_edge.i.us
  %28 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %18, align 8, !tbaa !53
  %29 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %28, i64 0, i32 4
  %30 = load i8*, i8** %29, align 8, !tbaa !36
  %31 = load i8*, i8** %14, align 8, !tbaa !41
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.35, i64 0, i64 0), i8* %30, i8* %31, i8* %30, i8* %31) #2
  br label %32

; <label>:32                                      ; preds = %Indent.exit.us, %17, %13
  %33 = getelementptr inbounds %struct._tagTreeCCTrigger, %struct._tagTreeCCTrigger* %trigger.08.us, i64 0, i32 1
  %34 = load %struct._tagTreeCCTrigger*, %struct._tagTreeCCTrigger** %33, align 8, !tbaa !55
  br label %35

; <label>:35                                      ; preds = %32, %.lr.ph.split.us
  %trigger.1.us = phi %struct._tagTreeCCTrigger* [ %34, %32 ], [ %trigger.08.us, %.lr.ph.split.us ]
  %36 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.09.us, i64 0, i32 4
  %param.0.us = load %struct._tagTreeCCParam*, %struct._tagTreeCCParam** %36, align 8
  %37 = icmp eq %struct._tagTreeCCParam* %param.0.us, null
  br i1 %37, label %._crit_edge.loopexit, label %.lr.ph.split.us

.lr.ph..lr.ph.split_crit_edge:                    ; preds = %.lr.ph..lr.ph.split_crit_edge.preheader, %63
  %param.09 = phi %struct._tagTreeCCParam* [ %param.0, %63 ], [ %param.0.7, %.lr.ph..lr.ph.split_crit_edge.preheader ]
  %trigger.08 = phi %struct._tagTreeCCTrigger* [ %trigger.1, %63 ], [ %5, %.lr.ph..lr.ph.split_crit_edge.preheader ]
  %38 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.09, i64 0, i32 2
  %39 = load i32, i32* %38, align 4, !tbaa !52
  %40 = and i32 %39, 1
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %63, label %42

; <label>:42                                      ; preds = %.lr.ph..lr.ph.split_crit_edge
  %43 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.09, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8, !tbaa !41
  %45 = icmp eq i8* %44, null
  br i1 %45, label %60, label %46

; <label>:46                                      ; preds = %42
  %47 = getelementptr inbounds %struct._tagTreeCCTrigger, %struct._tagTreeCCTrigger* %trigger.08, i64 0, i32 0
  %48 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %47, align 8, !tbaa !53
  %49 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %48, i64 0, i32 5
  %50 = load i32, i32* %49, align 4, !tbaa !34
  %51 = and i32 %50, 24
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %60

; <label>:53                                      ; preds = %46
  switch i32 %.pre, label %Indent.exit [
    i32 -2, label %54
    i32 0, label %55
  ]

; <label>:54                                      ; preds = %53
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.19, i64 0, i64 0)) #2
  br label %Indent.exit

; <label>:55                                      ; preds = %53
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.21, i64 0, i64 0)) #2
  br label %Indent.exit

Indent.exit:                                      ; preds = %53, %54, %55
  %56 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %47, align 8, !tbaa !53
  %57 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %56, i64 0, i32 4
  %58 = load i8*, i8** %57, align 8, !tbaa !36
  %59 = load i8*, i8** %43, align 8, !tbaa !41
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.35, i64 0, i64 0), i8* %58, i8* %59, i8* %58, i8* %59) #2
  br label %60

; <label>:60                                      ; preds = %42, %46, %Indent.exit
  %61 = getelementptr inbounds %struct._tagTreeCCTrigger, %struct._tagTreeCCTrigger* %trigger.08, i64 0, i32 1
  %62 = load %struct._tagTreeCCTrigger*, %struct._tagTreeCCTrigger** %61, align 8, !tbaa !55
  br label %63

; <label>:63                                      ; preds = %.lr.ph..lr.ph.split_crit_edge, %60
  %trigger.1 = phi %struct._tagTreeCCTrigger* [ %62, %60 ], [ %trigger.08, %.lr.ph..lr.ph.split_crit_edge ]
  %64 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.09, i64 0, i32 4
  %param.0 = load %struct._tagTreeCCParam*, %struct._tagTreeCCParam** %64, align 8
  %65 = icmp eq %struct._tagTreeCCParam* %param.0, null
  br i1 %65, label %._crit_edge.loopexit16, label %.lr.ph..lr.ph.split_crit_edge

._crit_edge.loopexit:                             ; preds = %35
  br label %._crit_edge

._crit_edge.loopexit16:                           ; preds = %63
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit16, %._crit_edge.loopexit, %0
  %66 = getelementptr inbounds %struct._tagTreeCCOperationCase, %struct._tagTreeCCOperationCase* %operCase, i64 0, i32 7
  %67 = load i64, i64* %66, align 8, !tbaa !56
  %68 = getelementptr inbounds %struct._tagTreeCCOperationCase, %struct._tagTreeCCOperationCase* %operCase, i64 0, i32 6
  %69 = load i8*, i8** %68, align 8, !tbaa !57
  tail call void @TreeCCStreamLine(%struct._tagTreeCCStream* %stream, i64 %67, i8* %69) #2
  %70 = icmp sgt i32 %level, 0
  br i1 %70, label %.lr.ph.i.3.preheader, label %74

.lr.ph.i.3.preheader:                             ; preds = %._crit_edge
  br label %.lr.ph.i.3

.lr.ph.i.3:                                       ; preds = %.lr.ph.i.3.preheader, %.lr.ph.i.3
  %.01.i.2 = phi i32 [ %71, %.lr.ph.i.3 ], [ %.pre12, %.lr.ph.i.3.preheader ]
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.18, i64 0, i64 0)) #2
  %71 = add nsw i32 %.01.i.2, -4
  %72 = icmp sgt i32 %71, 3
  br i1 %72, label %.lr.ph.i.3, label %._crit_edge.i.4

._crit_edge.i.4:                                  ; preds = %.lr.ph.i.3
  %73 = and i32 %.pre12, 3
  br label %74

; <label>:74                                      ; preds = %._crit_edge.i.4, %._crit_edge
  %.0.lcssa.i.5 = phi i32 [ %73, %._crit_edge.i.4 ], [ %.pre12, %._crit_edge ]
  switch i32 %.0.lcssa.i.5, label %Indent.exit6 [
    i32 1, label %75
    i32 2, label %76
    i32 3, label %77
  ]

; <label>:75                                      ; preds = %74
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.19, i64 0, i64 0)) #2
  br label %Indent.exit6

; <label>:76                                      ; preds = %74
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20, i64 0, i64 0)) #2
  br label %Indent.exit6

; <label>:77                                      ; preds = %74
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.21, i64 0, i64 0)) #2
  br label %Indent.exit6

Indent.exit6:                                     ; preds = %74, %75, %76, %77
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.29, i64 0, i64 0)) #2
  %78 = getelementptr inbounds %struct._tagTreeCCOperationCase, %struct._tagTreeCCOperationCase* %operCase, i64 0, i32 1
  %79 = load i8*, i8** %78, align 8, !tbaa !58
  %80 = icmp eq i8* %79, null
  br i1 %80, label %82, label %81

; <label>:81                                      ; preds = %Indent.exit6
  tail call void @TreeCCStreamCodeIndent(%struct._tagTreeCCStream* %stream, i8* %79, i32 %.pre12) #2
  br label %82

; <label>:82                                      ; preds = %Indent.exit6, %81
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.30, i64 0, i64 0)) #2
  tail call void @TreeCCStreamFixLine(%struct._tagTreeCCStream* %stream) #2
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @C_GenCaseSplit(%struct._tagTreeCCContext* nocapture readnone %context, %struct._tagTreeCCStream* %stream, %struct._tagTreeCCOperationCase* nocapture readonly %operCase, i32 %number, i32 %level) #0 {
  %1 = shl nsw i32 %level, 1
  %2 = add nsw i32 %1, 3
  %3 = icmp sgt i32 %level, 0
  br i1 %3, label %.lr.ph.i.preheader, label %7

.lr.ph.i.preheader:                               ; preds = %0
  br label %.lr.ph.i

.lr.ph.i:                                         ; preds = %.lr.ph.i.preheader, %.lr.ph.i
  %.01.i = phi i32 [ %4, %.lr.ph.i ], [ %2, %.lr.ph.i.preheader ]
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.18, i64 0, i64 0)) #2
  %4 = add nsw i32 %.01.i, -4
  %5 = icmp sgt i32 %4, 3
  br i1 %5, label %.lr.ph.i, label %._crit_edge.i

._crit_edge.i:                                    ; preds = %.lr.ph.i
  %6 = and i32 %2, 3
  br label %7

; <label>:7                                       ; preds = %._crit_edge.i, %0
  %.0.lcssa.i = phi i32 [ %6, %._crit_edge.i ], [ %2, %0 ]
  switch i32 %.0.lcssa.i, label %Indent.exit [
    i32 1, label %8
    i32 2, label %9
    i32 3, label %10
  ]

; <label>:8                                       ; preds = %7
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.19, i64 0, i64 0)) #2
  br label %Indent.exit

; <label>:9                                       ; preds = %7
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20, i64 0, i64 0)) #2
  br label %Indent.exit

; <label>:10                                      ; preds = %7
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.21, i64 0, i64 0)) #2
  br label %Indent.exit

Indent.exit:                                      ; preds = %7, %8, %9, %10
  %11 = getelementptr inbounds %struct._tagTreeCCOperationCase, %struct._tagTreeCCOperationCase* %operCase, i64 0, i32 2
  %12 = load %struct._tagTreeCCOperation*, %struct._tagTreeCCOperation** %11, align 8, !tbaa !49
  %13 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %12, i64 0, i32 2
  %14 = load i8*, i8** %13, align 8, !tbaa !45
  %15 = tail call i32 @strcmp(i8* %14, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11, i64 0, i64 0)) #2
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %18, label %17

; <label>:17                                      ; preds = %Indent.exit
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.31, i64 0, i64 0)) #2
  %.pre = load %struct._tagTreeCCOperation*, %struct._tagTreeCCOperation** %11, align 8, !tbaa !49
  br label %18

; <label>:18                                      ; preds = %Indent.exit, %17
  %19 = phi %struct._tagTreeCCOperation* [ %12, %Indent.exit ], [ %.pre, %17 ]
  %20 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %19, i64 0, i32 0
  %21 = load i8*, i8** %20, align 8, !tbaa !46
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.36, i64 0, i64 0), i8* %21, i32 %number) #2
  %22 = load %struct._tagTreeCCOperation*, %struct._tagTreeCCOperation** %11, align 8, !tbaa !49
  %23 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %22, i64 0, i32 4
  %param.0.9 = load %struct._tagTreeCCParam*, %struct._tagTreeCCParam** %23, align 8
  %24 = icmp eq %struct._tagTreeCCParam* %param.0.9, null
  br i1 %24, label %._crit_edge, label %.lr.ph

.lr.ph:                                           ; preds = %18
  %25 = getelementptr inbounds %struct._tagTreeCCOperationCase, %struct._tagTreeCCOperationCase* %operCase, i64 0, i32 0
  %26 = load %struct._tagTreeCCTrigger*, %struct._tagTreeCCTrigger** %25, align 8, !tbaa !51
  br label %27

; <label>:27                                      ; preds = %.lr.ph, %66
  %param.013 = phi %struct._tagTreeCCParam* [ %param.0.9, %.lr.ph ], [ %param.0, %66 ]
  %trigger.012 = phi %struct._tagTreeCCTrigger* [ %26, %.lr.ph ], [ %trigger.1, %66 ]
  %num.011 = phi i32 [ 1, %.lr.ph ], [ %num.1, %66 ]
  %needComma.010 = phi i1 [ true, %.lr.ph ], [ false, %66 ]
  br i1 %needComma.010, label %29, label %28

; <label>:28                                      ; preds = %27
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6.9, i64 0, i64 0)) #2
  br label %29

; <label>:29                                      ; preds = %27, %28
  %30 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.013, i64 0, i32 2
  %31 = load i32, i32* %30, align 4, !tbaa !52
  %32 = and i32 %31, 1
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %44, label %34

; <label>:34                                      ; preds = %29
  %35 = getelementptr inbounds %struct._tagTreeCCTrigger, %struct._tagTreeCCTrigger* %trigger.012, i64 0, i32 0
  %36 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %35, align 8, !tbaa !53
  %37 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %36, i64 0, i32 5
  %38 = load i32, i32* %37, align 4, !tbaa !34
  %39 = and i32 %38, 24
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %44

; <label>:41                                      ; preds = %34
  %42 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %36, i64 0, i32 4
  %43 = load i8*, i8** %42, align 8, !tbaa !36
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.33, i64 0, i64 0), i8* %43) #2
  br label %44

; <label>:44                                      ; preds = %29, %34, %41
  %45 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.013, i64 0, i32 0
  %46 = load i8*, i8** %45, align 8, !tbaa !41
  %47 = icmp eq i8* %46, null
  br i1 %47, label %49, label %48

; <label>:48                                      ; preds = %44
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0), i8* %46) #2
  br label %51

; <label>:49                                      ; preds = %44
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.9, i64 0, i64 0), i32 %num.011) #2
  %50 = add nsw i32 %num.011, 1
  br label %51

; <label>:51                                      ; preds = %49, %48
  %num.1 = phi i32 [ %num.011, %48 ], [ %50, %49 ]
  %52 = load i32, i32* %30, align 4, !tbaa !52
  %53 = and i32 %52, 1
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %66, label %55

; <label>:55                                      ; preds = %51
  %56 = getelementptr inbounds %struct._tagTreeCCTrigger, %struct._tagTreeCCTrigger* %trigger.012, i64 0, i32 0
  %57 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %56, align 8, !tbaa !53
  %58 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %57, i64 0, i32 5
  %59 = load i32, i32* %58, align 4, !tbaa !34
  %60 = and i32 %59, 24
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %63

; <label>:62                                      ; preds = %55
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10, i64 0, i64 0)) #2
  br label %63

; <label>:63                                      ; preds = %62, %55
  %64 = getelementptr inbounds %struct._tagTreeCCTrigger, %struct._tagTreeCCTrigger* %trigger.012, i64 0, i32 1
  %65 = load %struct._tagTreeCCTrigger*, %struct._tagTreeCCTrigger** %64, align 8, !tbaa !55
  br label %66

; <label>:66                                      ; preds = %51, %63
  %trigger.1 = phi %struct._tagTreeCCTrigger* [ %65, %63 ], [ %trigger.012, %51 ]
  %67 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.013, i64 0, i32 4
  %param.0 = load %struct._tagTreeCCParam*, %struct._tagTreeCCParam** %67, align 8
  %68 = icmp eq %struct._tagTreeCCParam* %param.0, null
  br i1 %68, label %._crit_edge.loopexit, label %27

._crit_edge.loopexit:                             ; preds = %66
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %18
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.34, i64 0, i64 0)) #2
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @C_GenEndCase(%struct._tagTreeCCContext* nocapture readnone %context, %struct._tagTreeCCStream* %stream, i32 %level) #0 {
  %1 = shl nsw i32 %level, 1
  %2 = add nsw i32 %1, 2
  %3 = icmp sgt i32 %2, 3
  br i1 %3, label %.lr.ph.i.preheader, label %7

.lr.ph.i.preheader:                               ; preds = %0
  br label %.lr.ph.i

.lr.ph.i:                                         ; preds = %.lr.ph.i.preheader, %.lr.ph.i
  %.01.i = phi i32 [ %4, %.lr.ph.i ], [ %2, %.lr.ph.i.preheader ]
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.18, i64 0, i64 0)) #2
  %4 = add nsw i32 %.01.i, -4
  %5 = icmp sgt i32 %4, 3
  br i1 %5, label %.lr.ph.i, label %._crit_edge.i

._crit_edge.i:                                    ; preds = %.lr.ph.i
  %6 = and i32 %2, 2
  br label %7

; <label>:7                                       ; preds = %._crit_edge.i, %0
  %.0.lcssa.i = phi i32 [ %6, %._crit_edge.i ], [ %2, %0 ]
  switch i32 %.0.lcssa.i, label %Indent.exit [
    i32 1, label %8
    i32 2, label %9
    i32 3, label %10
  ]

; <label>:8                                       ; preds = %7
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.19, i64 0, i64 0)) #2
  br label %Indent.exit

; <label>:9                                       ; preds = %7
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20, i64 0, i64 0)) #2
  br label %Indent.exit

; <label>:10                                      ; preds = %7
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.21, i64 0, i64 0)) #2
  br label %Indent.exit

Indent.exit:                                      ; preds = %7, %8, %9, %10
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.30, i64 0, i64 0)) #2
  br i1 %3, label %.lr.ph.i.2.preheader, label %14

.lr.ph.i.2.preheader:                             ; preds = %Indent.exit
  br label %.lr.ph.i.2

.lr.ph.i.2:                                       ; preds = %.lr.ph.i.2.preheader, %.lr.ph.i.2
  %.01.i.1 = phi i32 [ %11, %.lr.ph.i.2 ], [ %2, %.lr.ph.i.2.preheader ]
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.18, i64 0, i64 0)) #2
  %11 = add nsw i32 %.01.i.1, -4
  %12 = icmp sgt i32 %11, 3
  br i1 %12, label %.lr.ph.i.2, label %._crit_edge.i.3

._crit_edge.i.3:                                  ; preds = %.lr.ph.i.2
  %13 = and i32 %2, 2
  br label %14

; <label>:14                                      ; preds = %._crit_edge.i.3, %Indent.exit
  %.0.lcssa.i.4 = phi i32 [ %13, %._crit_edge.i.3 ], [ %2, %Indent.exit ]
  switch i32 %.0.lcssa.i.4, label %Indent.exit5 [
    i32 1, label %15
    i32 2, label %16
    i32 3, label %17
  ]

; <label>:15                                      ; preds = %14
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.19, i64 0, i64 0)) #2
  br label %Indent.exit5

; <label>:16                                      ; preds = %14
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20, i64 0, i64 0)) #2
  br label %Indent.exit5

; <label>:17                                      ; preds = %14
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.21, i64 0, i64 0)) #2
  br label %Indent.exit5

Indent.exit5:                                     ; preds = %14, %15, %16, %17
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.37, i64 0, i64 0)) #2
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @C_GenEndSwitch(%struct._tagTreeCCContext* nocapture readnone %context, %struct._tagTreeCCStream* %stream, i32 %level) #0 {
  %1 = shl nsw i32 %level, 1
  %2 = add nsw i32 %1, 2
  %3 = icmp sgt i32 %2, 3
  br i1 %3, label %.lr.ph.i.preheader, label %7

.lr.ph.i.preheader:                               ; preds = %0
  br label %.lr.ph.i

.lr.ph.i:                                         ; preds = %.lr.ph.i.preheader, %.lr.ph.i
  %.01.i = phi i32 [ %4, %.lr.ph.i ], [ %2, %.lr.ph.i.preheader ]
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.18, i64 0, i64 0)) #2
  %4 = add nsw i32 %.01.i, -4
  %5 = icmp sgt i32 %4, 3
  br i1 %5, label %.lr.ph.i, label %._crit_edge.i

._crit_edge.i:                                    ; preds = %.lr.ph.i
  %6 = and i32 %2, 2
  br label %7

; <label>:7                                       ; preds = %._crit_edge.i, %0
  %.0.lcssa.i = phi i32 [ %6, %._crit_edge.i ], [ %2, %0 ]
  switch i32 %.0.lcssa.i, label %Indent.exit [
    i32 1, label %8
    i32 2, label %9
    i32 3, label %10
  ]

; <label>:8                                       ; preds = %7
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.19, i64 0, i64 0)) #2
  br label %Indent.exit

; <label>:9                                       ; preds = %7
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20, i64 0, i64 0)) #2
  br label %Indent.exit

; <label>:10                                      ; preds = %7
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.21, i64 0, i64 0)) #2
  br label %Indent.exit

Indent.exit:                                      ; preds = %7, %8, %9, %10
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.38, i64 0, i64 0)) #2
  %11 = or i32 %1, 1
  %12 = icmp sgt i32 %11, 3
  br i1 %12, label %.lr.ph.i.2.preheader, label %16

.lr.ph.i.2.preheader:                             ; preds = %Indent.exit
  br label %.lr.ph.i.2

.lr.ph.i.2:                                       ; preds = %.lr.ph.i.2.preheader, %.lr.ph.i.2
  %.01.i.1 = phi i32 [ %13, %.lr.ph.i.2 ], [ %11, %.lr.ph.i.2.preheader ]
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.18, i64 0, i64 0)) #2
  %13 = add nsw i32 %.01.i.1, -4
  %14 = icmp sgt i32 %13, 3
  br i1 %14, label %.lr.ph.i.2, label %._crit_edge.i.3

._crit_edge.i.3:                                  ; preds = %.lr.ph.i.2
  %15 = and i32 %11, 3
  br label %16

; <label>:16                                      ; preds = %._crit_edge.i.3, %Indent.exit
  %.0.lcssa.i.4 = phi i32 [ %15, %._crit_edge.i.3 ], [ %11, %Indent.exit ]
  switch i32 %.0.lcssa.i.4, label %Indent.exit5 [
    i32 1, label %17
    i32 2, label %18
    i32 3, label %19
  ]

; <label>:17                                      ; preds = %16
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.19, i64 0, i64 0)) #2
  br label %Indent.exit5

; <label>:18                                      ; preds = %16
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20, i64 0, i64 0)) #2
  br label %Indent.exit5

; <label>:19                                      ; preds = %16
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.21, i64 0, i64 0)) #2
  br label %Indent.exit5

Indent.exit5:                                     ; preds = %16, %17, %18, %19
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.30, i64 0, i64 0)) #2
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @C_GenExit(%struct._tagTreeCCContext* nocapture readnone %context, %struct._tagTreeCCStream* %stream, %struct._tagTreeCCOperation* nocapture readonly %oper) #0 {
  %1 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %oper, i64 0, i32 2
  %2 = load i8*, i8** %1, align 8, !tbaa !45
  %3 = tail call i32 @strcmp(i8* %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11, i64 0, i64 0)) #2
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %11, label %5

; <label>:5                                       ; preds = %0
  %6 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %oper, i64 0, i32 3
  %7 = load i8*, i8** %6, align 8, !tbaa !59
  %8 = icmp eq i8* %7, null
  br i1 %8, label %10, label %9

; <label>:9                                       ; preds = %5
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.39, i64 0, i64 0), i8* %7) #2
  br label %11

; <label>:10                                      ; preds = %5
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.40, i64 0, i64 0)) #2
  br label %11

; <label>:11                                      ; preds = %0, %9, %10
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.41, i64 0, i64 0)) #2
  ret void
}

; Function Attrs: nounwind readnone uwtable
define internal void @C_GenEnd(%struct._tagTreeCCContext* nocapture %context, %struct._tagTreeCCStream* nocapture %stream, %struct._tagTreeCCOperation* nocapture %oper) #6 {
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @CGenEntry(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %stream, %struct._tagTreeCCOperation* nocapture readonly %oper, i32 %number) #0 {
  %1 = icmp eq i32 %number, -1
  br i1 %1, label %7, label %2

; <label>:2                                       ; preds = %0
  %3 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %oper, i64 0, i32 2
  %4 = load i8*, i8** %3, align 8, !tbaa !45
  %5 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %oper, i64 0, i32 0
  %6 = load i8*, i8** %5, align 8, !tbaa !46
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3.10, i64 0, i64 0), i8* %4, i8* %6, i32 %number) #2
  br label %25

; <label>:7                                       ; preds = %0
  %8 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 13
  %9 = load i32, i32* %8, align 4, !tbaa !9
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %15, label %11

; <label>:11                                      ; preds = %7
  %12 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %oper, i64 0, i32 1
  %13 = load i8*, i8** %12, align 8, !tbaa !60
  %14 = icmp eq i8* %13, null
  br i1 %14, label %15, label %20

; <label>:15                                      ; preds = %11, %7
  %16 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %oper, i64 0, i32 2
  %17 = load i8*, i8** %16, align 8, !tbaa !45
  %18 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %oper, i64 0, i32 0
  %19 = load i8*, i8** %18, align 8, !tbaa !46
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4, i64 0, i64 0), i8* %17, i8* %19) #2
  br label %25

; <label>:20                                      ; preds = %11
  %21 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %oper, i64 0, i32 2
  %22 = load i8*, i8** %21, align 8, !tbaa !45
  %23 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %oper, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8, !tbaa !46
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5, i64 0, i64 0), i8* %22, i8* %13, i8* %24) #2
  br label %25

; <label>:25                                      ; preds = %15, %20, %2
  %26 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %oper, i64 0, i32 4
  %param.0.2 = load %struct._tagTreeCCParam*, %struct._tagTreeCCParam** %26, align 8
  %27 = icmp eq %struct._tagTreeCCParam* %param.0.2, null
  br i1 %27, label %._crit_edge, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %25
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %IsEnumType.exit.thread1
  %param.05 = phi %struct._tagTreeCCParam* [ %param.0, %IsEnumType.exit.thread1 ], [ %param.0.2, %.lr.ph.preheader ]
  %needComma.04 = phi i1 [ true, %IsEnumType.exit.thread1 ], [ false, %.lr.ph.preheader ]
  %num.03 = phi i32 [ %num.1, %IsEnumType.exit.thread1 ], [ 1, %.lr.ph.preheader ]
  br i1 %needComma.04, label %28, label %29

; <label>:28                                      ; preds = %.lr.ph
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6.9, i64 0, i64 0)) #2
  br label %29

; <label>:29                                      ; preds = %28, %.lr.ph
  %30 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.05, i64 0, i32 1
  %31 = load i8*, i8** %30, align 8, !tbaa !47
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7, i64 0, i64 0), i8* %31) #2
  %32 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.05, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8, !tbaa !41
  %34 = icmp eq i8* %33, null
  br i1 %34, label %36, label %35

; <label>:35                                      ; preds = %29
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0), i8* %33) #2
  br label %38

; <label>:36                                      ; preds = %29
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.9, i64 0, i64 0), i32 %num.03) #2
  %37 = add nsw i32 %num.03, 1
  br label %38

; <label>:38                                      ; preds = %36, %35
  %num.1 = phi i32 [ %num.03, %35 ], [ %37, %36 ]
  %39 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.05, i64 0, i32 2
  %40 = load i32, i32* %39, align 4, !tbaa !52
  %41 = and i32 %40, 1
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %IsEnumType.exit.thread1, label %43

; <label>:43                                      ; preds = %38
  %44 = load i8*, i8** %30, align 8, !tbaa !47
  %45 = tail call %struct._tagTreeCCNode* @TreeCCNodeFindByType(%struct._tagTreeCCContext* %context, i8* %44) #2
  %46 = icmp eq %struct._tagTreeCCNode* %45, null
  br i1 %46, label %52, label %47

; <label>:47                                      ; preds = %43
  %48 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %45, i64 0, i32 5
  %49 = load i32, i32* %48, align 4, !tbaa !34
  %50 = and i32 %49, 8
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %IsEnumType.exit.thread1

; <label>:52                                      ; preds = %43, %47
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10, i64 0, i64 0)) #2
  br label %IsEnumType.exit.thread1

IsEnumType.exit.thread1:                          ; preds = %47, %38, %52
  %53 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.05, i64 0, i32 4
  %param.0 = load %struct._tagTreeCCParam*, %struct._tagTreeCCParam** %53, align 8
  %54 = icmp eq %struct._tagTreeCCParam* %param.0, null
  br i1 %54, label %._crit_edge.thread.loopexit, label %.lr.ph

._crit_edge:                                      ; preds = %25
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11, i64 0, i64 0)) #2
  br label %._crit_edge.thread

._crit_edge.thread.loopexit:                      ; preds = %IsEnumType.exit.thread1
  br label %._crit_edge.thread

._crit_edge.thread:                               ; preds = %._crit_edge.thread.loopexit, %._crit_edge
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12, i64 0, i64 0)) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.13, i64 0, i64 0)) #2
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @CreateParamsSource(%struct._tagTreeCCStream* %stream, %struct._tagTreeCCNode* nocapture readonly %node, i32 %needComma) #0 {
  %1 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 0
  %2 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %1, align 8, !tbaa !38
  %3 = icmp eq %struct._tagTreeCCNode* %2, null
  br i1 %3, label %6, label %4

; <label>:4                                       ; preds = %0
  %5 = tail call fastcc i32 @CreateParamsSource(%struct._tagTreeCCStream* %stream, %struct._tagTreeCCNode* %2, i32 %needComma)
  br label %6

; <label>:6                                       ; preds = %0, %4
  %.0 = phi i32 [ %5, %4 ], [ %needComma, %0 ]
  %7 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 10
  %field.0.1 = load %struct._tagTreeCCField*, %struct._tagTreeCCField** %7, align 8
  %8 = icmp eq %struct._tagTreeCCField* %field.0.1, null
  br i1 %8, label %._crit_edge, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %6
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %21
  %field.03 = phi %struct._tagTreeCCField* [ %field.0, %21 ], [ %field.0.1, %.lr.ph.preheader ]
  %.12 = phi i32 [ %.2, %21 ], [ %.0, %.lr.ph.preheader ]
  %9 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.03, i64 0, i32 3
  %10 = load i32, i32* %9, align 4, !tbaa !61
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %21

; <label>:13                                      ; preds = %.lr.ph
  %14 = icmp eq i32 %.12, 0
  br i1 %14, label %16, label %15

; <label>:15                                      ; preds = %13
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6.9, i64 0, i64 0)) #2
  br label %16

; <label>:16                                      ; preds = %13, %15
  %17 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.03, i64 0, i32 1
  %18 = load i8*, i8** %17, align 8, !tbaa !63
  %19 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.03, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8, !tbaa !64
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.76, i64 0, i64 0), i8* %18, i8* %20) #2
  br label %21

; <label>:21                                      ; preds = %16, %.lr.ph
  %.2 = phi i32 [ 1, %16 ], [ %.12, %.lr.ph ]
  %22 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.03, i64 0, i32 6
  %field.0 = load %struct._tagTreeCCField*, %struct._tagTreeCCField** %22, align 8
  %23 = icmp eq %struct._tagTreeCCField* %field.0, null
  br i1 %23, label %._crit_edge.loopexit, label %.lr.ph

._crit_edge.loopexit:                             ; preds = %21
  %.2.lcssa = phi i32 [ %.2, %21 ]
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %6
  %.1.lcssa = phi i32 [ %.0, %6 ], [ %.2.lcssa, %._crit_edge.loopexit ]
  ret i32 %.1.lcssa
}

; Function Attrs: nounwind uwtable
define internal fastcc void @InitFields(%struct._tagTreeCCStream* %stream, %struct._tagTreeCCNode* nocapture readonly %node) #0 {
  %1 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 0
  %2 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %1, align 8, !tbaa !38
  %3 = icmp eq %struct._tagTreeCCNode* %2, null
  br i1 %3, label %5, label %4

; <label>:4                                       ; preds = %0
  tail call fastcc void @InitFields(%struct._tagTreeCCStream* %stream, %struct._tagTreeCCNode* %2)
  br label %5

; <label>:5                                       ; preds = %0, %4
  %6 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 10
  %field.0.1 = load %struct._tagTreeCCField*, %struct._tagTreeCCField** %6, align 8
  %7 = icmp eq %struct._tagTreeCCField* %field.0.1, null
  br i1 %7, label %._crit_edge, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %5
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %22
  %field.02 = phi %struct._tagTreeCCField* [ %field.0, %22 ], [ %field.0.1, %.lr.ph.preheader ]
  %8 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.02, i64 0, i32 3
  %9 = load i32, i32* %8, align 4, !tbaa !61
  %10 = and i32 %9, 1
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %15

; <label>:12                                      ; preds = %.lr.ph
  %13 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.02, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8, !tbaa !64
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.149, i64 0, i64 0), i8* %14, i8* %14) #2
  br label %22

; <label>:15                                      ; preds = %.lr.ph
  %16 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.02, i64 0, i32 2
  %17 = load i8*, i8** %16, align 8, !tbaa !65
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

; <label>:19                                      ; preds = %15
  %20 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.02, i64 0, i32 0
  %21 = load i8*, i8** %20, align 8, !tbaa !64
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.149, i64 0, i64 0), i8* %21, i8* %17) #2
  br label %22

; <label>:22                                      ; preds = %15, %19, %12
  %23 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.02, i64 0, i32 6
  %field.0 = load %struct._tagTreeCCField*, %struct._tagTreeCCField** %23, align 8
  %24 = icmp eq %struct._tagTreeCCField* %field.0, null
  br i1 %24, label %._crit_edge.loopexit, label %.lr.ph

._crit_edge.loopexit:                             ; preds = %22
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %5
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @OutputVtableImpls(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %stream, %struct._tagTreeCCNode* nocapture readonly %node, %struct._tagTreeCCNode* %actualNode) #0 {
  %1 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 0
  %2 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %1, align 8, !tbaa !38
  %3 = icmp eq %struct._tagTreeCCNode* %2, null
  br i1 %3, label %5, label %4

; <label>:4                                       ; preds = %0
  tail call fastcc void @OutputVtableImpls(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %stream, %struct._tagTreeCCNode* %2, %struct._tagTreeCCNode* %actualNode)
  br label %5

; <label>:5                                       ; preds = %0, %4
  %6 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 11
  %virt.0.5 = load %struct._tagTreeCCVirtual*, %struct._tagTreeCCVirtual** %6, align 8
  %7 = icmp eq %struct._tagTreeCCVirtual* %virt.0.5, null
  br i1 %7, label %._crit_edge.9, label %.lr.ph8

.lr.ph8:                                          ; preds = %5
  %8 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %actualNode, i64 0, i32 4
  br label %9

; <label>:9                                       ; preds = %.lr.ph8, %.backedge
  %virt.06 = phi %struct._tagTreeCCVirtual* [ %virt.0.5, %.lr.ph8 ], [ %virt.0, %.backedge ]
  %10 = getelementptr inbounds %struct._tagTreeCCVirtual, %struct._tagTreeCCVirtual* %virt.06, i64 0, i32 0
  %11 = load i8*, i8** %10, align 8, !tbaa !39
  %12 = tail call %struct._tagTreeCCOperationCase* @TreeCCOperationFindCase(%struct._tagTreeCCContext* %context, %struct._tagTreeCCNode* %actualNode, i8* %11) #2
  %13 = icmp eq %struct._tagTreeCCOperationCase* %12, null
  br i1 %13, label %.backedge, label %15

.backedge:                                        ; preds = %9, %._crit_edge
  %virt.0.in.be = getelementptr inbounds %struct._tagTreeCCVirtual, %struct._tagTreeCCVirtual* %virt.06, i64 0, i32 4
  %virt.0 = load %struct._tagTreeCCVirtual*, %struct._tagTreeCCVirtual** %virt.0.in.be, align 8
  %14 = icmp eq %struct._tagTreeCCVirtual* %virt.0, null
  br i1 %14, label %._crit_edge.9.loopexit, label %9

; <label>:15                                      ; preds = %9
  %16 = getelementptr inbounds %struct._tagTreeCCVirtual, %struct._tagTreeCCVirtual* %virt.06, i64 0, i32 1
  %17 = load i8*, i8** %16, align 8, !tbaa !66
  %18 = load i8*, i8** %8, align 8, !tbaa !36
  %19 = load i8*, i8** %10, align 8, !tbaa !39
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.129, i64 0, i64 0), i8* %17, i8* %18, i8* %19) #2
  %20 = getelementptr inbounds %struct._tagTreeCCOperationCase, %struct._tagTreeCCOperationCase* %12, i64 0, i32 2
  %21 = load %struct._tagTreeCCOperation*, %struct._tagTreeCCOperation** %20, align 8, !tbaa !49
  %22 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %21, i64 0, i32 4
  %param.0.1 = load %struct._tagTreeCCParam*, %struct._tagTreeCCParam** %22, align 8
  %23 = icmp eq %struct._tagTreeCCParam* %param.0.1, null
  br i1 %23, label %._crit_edge, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %15
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %41
  %param.04 = phi %struct._tagTreeCCParam* [ %param.0, %41 ], [ %param.0.1, %.lr.ph.preheader ]
  %needComma.03 = phi i1 [ false, %41 ], [ true, %.lr.ph.preheader ]
  %num.02 = phi i32 [ %num.1, %41 ], [ 1, %.lr.ph.preheader ]
  br i1 %needComma.03, label %24, label %32

; <label>:24                                      ; preds = %.lr.ph
  %25 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.04, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8, !tbaa !41
  %27 = icmp eq i8* %26, null
  %28 = load i8*, i8** %8, align 8, !tbaa !36
  br i1 %27, label %30, label %29

; <label>:29                                      ; preds = %24
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.78, i64 0, i64 0), i8* %28, i8* %26) #2
  br label %41

; <label>:30                                      ; preds = %24
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.79, i64 0, i64 0), i8* %28, i32 %num.02) #2
  %31 = add nsw i32 %num.02, 1
  br label %41

; <label>:32                                      ; preds = %.lr.ph
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6.9, i64 0, i64 0)) #2
  %33 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.04, i64 0, i32 0
  %34 = load i8*, i8** %33, align 8, !tbaa !41
  %35 = icmp eq i8* %34, null
  %36 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.04, i64 0, i32 1
  %37 = load i8*, i8** %36, align 8, !tbaa !47
  br i1 %35, label %39, label %38

; <label>:38                                      ; preds = %32
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.76, i64 0, i64 0), i8* %37, i8* %34) #2
  br label %41

; <label>:39                                      ; preds = %32
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.77, i64 0, i64 0), i8* %37, i32 %num.02) #2
  %40 = add nsw i32 %num.02, 1
  br label %41

; <label>:41                                      ; preds = %38, %39, %29, %30
  %num.1 = phi i32 [ %num.02, %38 ], [ %40, %39 ], [ %num.02, %29 ], [ %31, %30 ]
  %42 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.04, i64 0, i32 4
  %param.0 = load %struct._tagTreeCCParam*, %struct._tagTreeCCParam** %42, align 8
  %43 = icmp eq %struct._tagTreeCCParam* %param.0, null
  br i1 %43, label %._crit_edge.loopexit, label %.lr.ph

._crit_edge.loopexit:                             ; preds = %41
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %15
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12, i64 0, i64 0)) #2
  %44 = getelementptr inbounds %struct._tagTreeCCOperationCase, %struct._tagTreeCCOperationCase* %12, i64 0, i32 7
  %45 = load i64, i64* %44, align 8, !tbaa !56
  %46 = getelementptr inbounds %struct._tagTreeCCOperationCase, %struct._tagTreeCCOperationCase* %12, i64 0, i32 6
  %47 = load i8*, i8** %46, align 8, !tbaa !57
  tail call void @TreeCCStreamLine(%struct._tagTreeCCStream* %stream, i64 %45, i8* %47) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.29, i64 0, i64 0)) #2
  %48 = getelementptr inbounds %struct._tagTreeCCOperationCase, %struct._tagTreeCCOperationCase* %12, i64 0, i32 1
  %49 = load i8*, i8** %48, align 8, !tbaa !58
  tail call void @TreeCCStreamCode(%struct._tagTreeCCStream* %stream, i8* %49) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.30, i64 0, i64 0)) #2
  tail call void @TreeCCStreamFixLine(%struct._tagTreeCCStream* %stream) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0)) #2
  br label %.backedge

._crit_edge.9.loopexit:                           ; preds = %.backedge
  br label %._crit_edge.9

._crit_edge.9:                                    ; preds = %._crit_edge.9.loopexit, %5
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @OutputVtableFuncs(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %stream, %struct._tagTreeCCNode* nocapture readonly %node, %struct._tagTreeCCNode* %actualNode) #0 {
  %1 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 0
  %2 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %1, align 8, !tbaa !38
  %3 = icmp eq %struct._tagTreeCCNode* %2, null
  br i1 %3, label %5, label %4

; <label>:4                                       ; preds = %0
  tail call fastcc void @OutputVtableFuncs(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %stream, %struct._tagTreeCCNode* %2, %struct._tagTreeCCNode* %actualNode)
  br label %5

; <label>:5                                       ; preds = %0, %4
  %6 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 11
  %virt.0.10 = load %struct._tagTreeCCVirtual*, %struct._tagTreeCCVirtual** %6, align 8
  %7 = icmp eq %struct._tagTreeCCVirtual* %virt.0.10, null
  br i1 %7, label %._crit_edge.14, label %.lr.ph13

.lr.ph13:                                         ; preds = %5
  %8 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 4
  br label %9

; <label>:9                                       ; preds = %.lr.ph13, %41
  %virt.011 = phi %struct._tagTreeCCVirtual* [ %virt.0.10, %.lr.ph13 ], [ %virt.0, %41 ]
  %10 = getelementptr inbounds %struct._tagTreeCCVirtual, %struct._tagTreeCCVirtual* %virt.011, i64 0, i32 1
  %11 = load i8*, i8** %10, align 8, !tbaa !66
  %12 = load i8*, i8** %8, align 8, !tbaa !36
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.130, i64 0, i64 0), i8* %11, i8* %12) #2
  %13 = getelementptr inbounds %struct._tagTreeCCVirtual, %struct._tagTreeCCVirtual* %virt.011, i64 0, i32 2
  %param.0.3 = load %struct._tagTreeCCParam*, %struct._tagTreeCCParam** %13, align 8
  %14 = icmp eq %struct._tagTreeCCParam* %param.0.3, null
  br i1 %14, label %._crit_edge, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %9
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %23
  %param.05 = phi %struct._tagTreeCCParam* [ %param.0, %23 ], [ %param.0.3, %.lr.ph.preheader ]
  %num.04 = phi i32 [ %num.1, %23 ], [ 1, %.lr.ph.preheader ]
  %15 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.05, i64 0, i32 0
  %16 = load i8*, i8** %15, align 8, !tbaa !41
  %17 = icmp eq i8* %16, null
  %18 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.05, i64 0, i32 1
  %19 = load i8*, i8** %18, align 8, !tbaa !47
  br i1 %17, label %21, label %20

; <label>:20                                      ; preds = %.lr.ph
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.64, i64 0, i64 0), i8* %19, i8* %16) #2
  br label %23

; <label>:21                                      ; preds = %.lr.ph
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.65, i64 0, i64 0), i8* %19, i32 %num.04) #2
  %22 = add nsw i32 %num.04, 1
  br label %23

; <label>:23                                      ; preds = %21, %20
  %num.1 = phi i32 [ %num.04, %20 ], [ %22, %21 ]
  %24 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.05, i64 0, i32 4
  %param.0 = load %struct._tagTreeCCParam*, %struct._tagTreeCCParam** %24, align 8
  %25 = icmp eq %struct._tagTreeCCParam* %param.0, null
  br i1 %25, label %._crit_edge.loopexit, label %.lr.ph

._crit_edge.loopexit:                             ; preds = %23
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %9
  %26 = getelementptr inbounds %struct._tagTreeCCVirtual, %struct._tagTreeCCVirtual* %virt.011, i64 0, i32 0
  %27 = load i8*, i8** %26, align 8, !tbaa !39
  %28 = tail call %struct._tagTreeCCOperationCase* @TreeCCOperationFindCase(%struct._tagTreeCCContext* %context, %struct._tagTreeCCNode* %actualNode, i8* %27) #2
  %29 = icmp eq %struct._tagTreeCCOperationCase* %28, null
  br i1 %29, label %.lr.ph8.preheader, label %._crit_edge.9

.lr.ph8.preheader:                                ; preds = %._crit_edge
  br label %.lr.ph8

.lr.ph8:                                          ; preds = %.lr.ph8.preheader, %33
  %parent.06 = phi %struct._tagTreeCCNode* [ %31, %33 ], [ %actualNode, %.lr.ph8.preheader ]
  %30 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %parent.06, i64 0, i32 0
  %31 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %30, align 8, !tbaa !38
  %32 = icmp eq %struct._tagTreeCCNode* %31, null
  br i1 %32, label %40, label %33

; <label>:33                                      ; preds = %.lr.ph8
  %34 = load i8*, i8** %26, align 8, !tbaa !39
  %35 = tail call %struct._tagTreeCCOperationCase* @TreeCCOperationFindCase(%struct._tagTreeCCContext* %context, %struct._tagTreeCCNode* %31, i8* %34) #2
  %36 = icmp eq %struct._tagTreeCCOperationCase* %35, null
  br i1 %36, label %.lr.ph8, label %._crit_edge.9.loopexit

._crit_edge.9.loopexit:                           ; preds = %33
  %.lcssa19 = phi %struct._tagTreeCCNode* [ %31, %33 ]
  br label %._crit_edge.9

._crit_edge.9:                                    ; preds = %._crit_edge.9.loopexit, %._crit_edge
  %parent.0.lcssa = phi %struct._tagTreeCCNode* [ %actualNode, %._crit_edge ], [ %.lcssa19, %._crit_edge.9.loopexit ]
  %37 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %parent.0.lcssa, i64 0, i32 4
  %38 = load i8*, i8** %37, align 8, !tbaa !36
  %39 = load i8*, i8** %26, align 8, !tbaa !39
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.131, i64 0, i64 0), i8* %38, i8* %39) #2
  br label %41

; <label>:40                                      ; preds = %.lr.ph8
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.132, i64 0, i64 0)) #2
  br label %41

; <label>:41                                      ; preds = %40, %._crit_edge.9
  %42 = getelementptr inbounds %struct._tagTreeCCVirtual, %struct._tagTreeCCVirtual* %virt.011, i64 0, i32 4
  %virt.0 = load %struct._tagTreeCCVirtual*, %struct._tagTreeCCVirtual** %42, align 8
  %43 = icmp eq %struct._tagTreeCCVirtual* %virt.0, null
  br i1 %43, label %._crit_edge.14.loopexit, label %9

._crit_edge.14.loopexit:                          ; preds = %41
  br label %._crit_edge.14

._crit_edge.14:                                   ; preds = %._crit_edge.14.loopexit, %5
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @CreateParams(%struct._tagTreeCCStream* %stream, %struct._tagTreeCCNode* nocapture readonly %node, i32 %needComma) #0 {
  %1 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 0
  %2 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %1, align 8, !tbaa !38
  %3 = icmp eq %struct._tagTreeCCNode* %2, null
  br i1 %3, label %6, label %4

; <label>:4                                       ; preds = %0
  %5 = tail call fastcc i32 @CreateParams(%struct._tagTreeCCStream* %stream, %struct._tagTreeCCNode* %2, i32 %needComma)
  br label %6

; <label>:6                                       ; preds = %0, %4
  %.0 = phi i32 [ %5, %4 ], [ %needComma, %0 ]
  %7 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 10
  %field.0.1 = load %struct._tagTreeCCField*, %struct._tagTreeCCField** %7, align 8
  %8 = icmp eq %struct._tagTreeCCField* %field.0.1, null
  br i1 %8, label %._crit_edge, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %6
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %21
  %field.03 = phi %struct._tagTreeCCField* [ %field.0, %21 ], [ %field.0.1, %.lr.ph.preheader ]
  %.12 = phi i32 [ %.2, %21 ], [ %.0, %.lr.ph.preheader ]
  %9 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.03, i64 0, i32 3
  %10 = load i32, i32* %9, align 4, !tbaa !61
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %21

; <label>:13                                      ; preds = %.lr.ph
  %14 = icmp eq i32 %.12, 0
  br i1 %14, label %16, label %15

; <label>:15                                      ; preds = %13
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6.9, i64 0, i64 0)) #2
  br label %16

; <label>:16                                      ; preds = %13, %15
  %17 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.03, i64 0, i32 1
  %18 = load i8*, i8** %17, align 8, !tbaa !63
  %19 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.03, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8, !tbaa !64
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.76, i64 0, i64 0), i8* %18, i8* %20) #2
  br label %21

; <label>:21                                      ; preds = %16, %.lr.ph
  %.2 = phi i32 [ 1, %16 ], [ %.12, %.lr.ph ]
  %22 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.03, i64 0, i32 6
  %field.0 = load %struct._tagTreeCCField*, %struct._tagTreeCCField** %22, align 8
  %23 = icmp eq %struct._tagTreeCCField* %field.0, null
  br i1 %23, label %._crit_edge.loopexit, label %.lr.ph

._crit_edge.loopexit:                             ; preds = %21
  %.2.lcssa = phi i32 [ %.2, %21 ]
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %6
  %.1.lcssa = phi i32 [ %.0, %6 ], [ %.2.lcssa, %._crit_edge.loopexit ]
  ret i32 %.1.lcssa
}

; Function Attrs: nounwind uwtable
define internal fastcc void @DeclareFields(%struct._tagTreeCCStream* %stream, %struct._tagTreeCCNode* nocapture readonly %node) #0 {
  %1 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 0
  %2 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %1, align 8, !tbaa !38
  %3 = icmp eq %struct._tagTreeCCNode* %2, null
  br i1 %3, label %5, label %4

; <label>:4                                       ; preds = %0
  tail call fastcc void @DeclareFields(%struct._tagTreeCCStream* %stream, %struct._tagTreeCCNode* %2)
  br label %5

; <label>:5                                       ; preds = %0, %4
  %6 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 10
  %field.0.1 = load %struct._tagTreeCCField*, %struct._tagTreeCCField** %6, align 8
  %7 = icmp eq %struct._tagTreeCCField* %field.0.1, null
  br i1 %7, label %._crit_edge, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %5
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %.lr.ph
  %field.02 = phi %struct._tagTreeCCField* [ %field.0, %.lr.ph ], [ %field.0.1, %.lr.ph.preheader ]
  %8 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.02, i64 0, i32 1
  %9 = load i8*, i8** %8, align 8, !tbaa !63
  %10 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.02, i64 0, i32 0
  %11 = load i8*, i8** %10, align 8, !tbaa !64
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.62, i64 0, i64 0), i8* %9, i8* %11) #2
  %12 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.02, i64 0, i32 6
  %field.0 = load %struct._tagTreeCCField*, %struct._tagTreeCCField** %12, align 8
  %13 = icmp eq %struct._tagTreeCCField* %field.0, null
  br i1 %13, label %._crit_edge.loopexit, label %.lr.ph

._crit_edge.loopexit:                             ; preds = %.lr.ph
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %5
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @DeclareVirtuals(%struct._tagTreeCCStream* %stream, %struct._tagTreeCCNode* nocapture readonly %node) #0 {
  %1 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 0
  %2 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %1, align 8, !tbaa !38
  %3 = icmp eq %struct._tagTreeCCNode* %2, null
  br i1 %3, label %5, label %4

; <label>:4                                       ; preds = %0
  tail call fastcc void @DeclareVirtuals(%struct._tagTreeCCStream* %stream, %struct._tagTreeCCNode* %2)
  br label %5

; <label>:5                                       ; preds = %0, %4
  %6 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 11
  %virt.0.4 = load %struct._tagTreeCCVirtual*, %struct._tagTreeCCVirtual** %6, align 8
  %7 = icmp eq %struct._tagTreeCCVirtual* %virt.0.4, null
  br i1 %7, label %._crit_edge.8, label %.lr.ph7

.lr.ph7:                                          ; preds = %5
  %8 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 4
  br label %9

; <label>:9                                       ; preds = %.lr.ph7, %._crit_edge
  %virt.05 = phi %struct._tagTreeCCVirtual* [ %virt.0.4, %.lr.ph7 ], [ %virt.0, %._crit_edge ]
  %10 = getelementptr inbounds %struct._tagTreeCCVirtual, %struct._tagTreeCCVirtual* %virt.05, i64 0, i32 1
  %11 = load i8*, i8** %10, align 8, !tbaa !66
  %12 = getelementptr inbounds %struct._tagTreeCCVirtual, %struct._tagTreeCCVirtual* %virt.05, i64 0, i32 0
  %13 = load i8*, i8** %12, align 8, !tbaa !39
  %14 = load i8*, i8** %8, align 8, !tbaa !36
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.63, i64 0, i64 0), i8* %11, i8* %13, i8* %14) #2
  %15 = getelementptr inbounds %struct._tagTreeCCVirtual, %struct._tagTreeCCVirtual* %virt.05, i64 0, i32 2
  %param.0.1 = load %struct._tagTreeCCParam*, %struct._tagTreeCCParam** %15, align 8
  %16 = icmp eq %struct._tagTreeCCParam* %param.0.1, null
  br i1 %16, label %._crit_edge, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %9
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %25
  %param.03 = phi %struct._tagTreeCCParam* [ %param.0, %25 ], [ %param.0.1, %.lr.ph.preheader ]
  %num.02 = phi i32 [ %num.1, %25 ], [ 1, %.lr.ph.preheader ]
  %17 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.03, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8, !tbaa !41
  %19 = icmp eq i8* %18, null
  %20 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.03, i64 0, i32 1
  %21 = load i8*, i8** %20, align 8, !tbaa !47
  br i1 %19, label %23, label %22

; <label>:22                                      ; preds = %.lr.ph
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.64, i64 0, i64 0), i8* %21, i8* %18) #2
  br label %25

; <label>:23                                      ; preds = %.lr.ph
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.65, i64 0, i64 0), i8* %21, i32 %num.02) #2
  %24 = add nsw i32 %num.02, 1
  br label %25

; <label>:25                                      ; preds = %23, %22
  %num.1 = phi i32 [ %num.02, %22 ], [ %24, %23 ]
  %26 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.03, i64 0, i32 4
  %param.0 = load %struct._tagTreeCCParam*, %struct._tagTreeCCParam** %26, align 8
  %27 = icmp eq %struct._tagTreeCCParam* %param.0, null
  br i1 %27, label %._crit_edge.loopexit, label %.lr.ph

._crit_edge.loopexit:                             ; preds = %25
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %9
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.34, i64 0, i64 0)) #2
  %28 = getelementptr inbounds %struct._tagTreeCCVirtual, %struct._tagTreeCCVirtual* %virt.05, i64 0, i32 4
  %virt.0 = load %struct._tagTreeCCVirtual*, %struct._tagTreeCCVirtual** %28, align 8
  %29 = icmp eq %struct._tagTreeCCVirtual* %virt.0, null
  br i1 %29, label %._crit_edge.8.loopexit, label %9

._crit_edge.8.loopexit:                           ; preds = %._crit_edge
  br label %._crit_edge.8

._crit_edge.8:                                    ; preds = %._crit_edge.8.loopexit, %5
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @DeclareVirtualImpls(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %stream, %struct._tagTreeCCNode* nocapture readonly %node, %struct._tagTreeCCNode* %actualNode) #0 {
  %1 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 0
  %2 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %1, align 8, !tbaa !38
  %3 = icmp eq %struct._tagTreeCCNode* %2, null
  br i1 %3, label %6, label %4

; <label>:4                                       ; preds = %0
  %5 = tail call fastcc i32 @DeclareVirtualImpls(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %stream, %struct._tagTreeCCNode* %2, %struct._tagTreeCCNode* %actualNode)
  br label %6

; <label>:6                                       ; preds = %0, %4
  %haveVirts.0 = phi i32 [ %5, %4 ], [ 0, %0 ]
  %7 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 11
  %virt.0.3.13 = load %struct._tagTreeCCVirtual*, %struct._tagTreeCCVirtual** %7, align 8
  %8 = icmp eq %struct._tagTreeCCVirtual* %virt.0.3.13, null
  br i1 %8, label %.outer._crit_edge, label %.lr.ph.lr.ph

.lr.ph.lr.ph:                                     ; preds = %6
  %9 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %actualNode, i64 0, i32 4
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.lr.ph, %.outer
  %virt.0.315 = phi %struct._tagTreeCCVirtual* [ %virt.0.3.13, %.lr.ph.lr.ph ], [ %virt.0.3, %.outer ]
  %haveVirts.1.ph14 = phi i32 [ %haveVirts.0, %.lr.ph.lr.ph ], [ 1, %.outer ]
  br label %10

; <label>:10                                      ; preds = %.lr.ph, %15
  %virt.04 = phi %struct._tagTreeCCVirtual* [ %virt.0.315, %.lr.ph ], [ %virt.0, %15 ]
  %11 = getelementptr inbounds %struct._tagTreeCCVirtual, %struct._tagTreeCCVirtual* %virt.04, i64 0, i32 0
  %12 = load i8*, i8** %11, align 8, !tbaa !39
  %13 = tail call %struct._tagTreeCCOperationCase* @TreeCCOperationFindCase(%struct._tagTreeCCContext* %context, %struct._tagTreeCCNode* %actualNode, i8* %12) #2
  %14 = icmp eq %struct._tagTreeCCOperationCase* %13, null
  br i1 %14, label %15, label %18

; <label>:15                                      ; preds = %10
  %16 = getelementptr inbounds %struct._tagTreeCCVirtual, %struct._tagTreeCCVirtual* %virt.04, i64 0, i32 4
  %virt.0 = load %struct._tagTreeCCVirtual*, %struct._tagTreeCCVirtual** %16, align 8
  %17 = icmp eq %struct._tagTreeCCVirtual* %virt.0, null
  br i1 %17, label %.outer._crit_edge.loopexit, label %10

; <label>:18                                      ; preds = %10
  %.lcssa42 = phi %struct._tagTreeCCOperationCase* [ %13, %10 ]
  %.lcssa = phi i8** [ %11, %10 ]
  %virt.04.lcssa = phi %struct._tagTreeCCVirtual* [ %virt.04, %10 ]
  %19 = getelementptr inbounds %struct._tagTreeCCVirtual, %struct._tagTreeCCVirtual* %virt.04.lcssa, i64 0, i32 1
  %20 = load i8*, i8** %19, align 8, !tbaa !66
  %21 = load i8*, i8** %9, align 8, !tbaa !36
  %22 = load i8*, i8** %.lcssa, align 8, !tbaa !39
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.75, i64 0, i64 0), i8* %20, i8* %21, i8* %22) #2
  %23 = getelementptr inbounds %struct._tagTreeCCOperationCase, %struct._tagTreeCCOperationCase* %.lcssa42, i64 0, i32 2
  %24 = load %struct._tagTreeCCOperation*, %struct._tagTreeCCOperation** %23, align 8, !tbaa !49
  %25 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %24, i64 0, i32 4
  %param.0.6 = load %struct._tagTreeCCParam*, %struct._tagTreeCCParam** %25, align 8
  %26 = icmp eq %struct._tagTreeCCParam* %param.0.6, null
  br i1 %26, label %.outer, label %.lr.ph11.preheader

.lr.ph11.preheader:                               ; preds = %18
  br label %.lr.ph11

.lr.ph11:                                         ; preds = %.lr.ph11.preheader, %44
  %param.09 = phi %struct._tagTreeCCParam* [ %param.0, %44 ], [ %param.0.6, %.lr.ph11.preheader ]
  %needComma.08 = phi i1 [ false, %44 ], [ true, %.lr.ph11.preheader ]
  %num.07 = phi i32 [ %num.1, %44 ], [ 1, %.lr.ph11.preheader ]
  br i1 %needComma.08, label %36, label %27

; <label>:27                                      ; preds = %.lr.ph11
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6.9, i64 0, i64 0)) #2
  %28 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.09, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8, !tbaa !41
  %30 = icmp eq i8* %29, null
  %31 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.09, i64 0, i32 1
  %32 = load i8*, i8** %31, align 8, !tbaa !47
  br i1 %30, label %34, label %33

; <label>:33                                      ; preds = %27
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.76, i64 0, i64 0), i8* %32, i8* %29) #2
  br label %44

; <label>:34                                      ; preds = %27
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.77, i64 0, i64 0), i8* %32, i32 %num.07) #2
  %35 = add nsw i32 %num.07, 1
  br label %44

; <label>:36                                      ; preds = %.lr.ph11
  %37 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.09, i64 0, i32 0
  %38 = load i8*, i8** %37, align 8, !tbaa !41
  %39 = icmp eq i8* %38, null
  %40 = load i8*, i8** %9, align 8, !tbaa !36
  br i1 %39, label %42, label %41

; <label>:41                                      ; preds = %36
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.78, i64 0, i64 0), i8* %40, i8* %38) #2
  br label %44

; <label>:42                                      ; preds = %36
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.79, i64 0, i64 0), i8* %40, i32 %num.07) #2
  %43 = add nsw i32 %num.07, 1
  br label %44

; <label>:44                                      ; preds = %41, %42, %33, %34
  %num.1 = phi i32 [ %num.07, %33 ], [ %35, %34 ], [ %num.07, %41 ], [ %43, %42 ]
  %45 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.09, i64 0, i32 4
  %param.0 = load %struct._tagTreeCCParam*, %struct._tagTreeCCParam** %45, align 8
  %46 = icmp eq %struct._tagTreeCCParam* %param.0, null
  br i1 %46, label %.outer.loopexit, label %.lr.ph11

.outer.loopexit:                                  ; preds = %44
  br label %.outer

.outer:                                           ; preds = %.outer.loopexit, %18
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.34, i64 0, i64 0)) #2
  %47 = getelementptr inbounds %struct._tagTreeCCVirtual, %struct._tagTreeCCVirtual* %virt.04.lcssa, i64 0, i32 4
  %virt.0.3 = load %struct._tagTreeCCVirtual*, %struct._tagTreeCCVirtual** %47, align 8
  %48 = icmp eq %struct._tagTreeCCVirtual* %virt.0.3, null
  br i1 %48, label %.outer._crit_edge.loopexit34, label %.lr.ph

.outer._crit_edge.loopexit:                       ; preds = %15
  %haveVirts.1.ph14.lcssa44 = phi i32 [ %haveVirts.1.ph14, %15 ]
  br label %.outer._crit_edge

.outer._crit_edge.loopexit34:                     ; preds = %.outer
  br label %.outer._crit_edge

.outer._crit_edge:                                ; preds = %.outer._crit_edge.loopexit34, %.outer._crit_edge.loopexit, %6
  %haveVirts.1.ph.lcssa = phi i32 [ %haveVirts.0, %6 ], [ %haveVirts.1.ph14.lcssa44, %.outer._crit_edge.loopexit ], [ 1, %.outer._crit_edge.loopexit34 ]
  ret i32 %haveVirts.1.ph.lcssa
}

; Function Attrs: nounwind uwtable
define void @TreeCCGenerateCPP(%struct._tagTreeCCContext* %context) #0 {
  %1 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 3
  %stream.0.2.i = load %struct._tagTreeCCStream*, %struct._tagTreeCCStream** %1, align 8
  %2 = icmp eq %struct._tagTreeCCStream* %stream.0.2.i, null
  br i1 %2, label %WriteCPPHeaders.exit, label %.lr.ph.i

.lr.ph.i:                                         ; preds = %0
  %3 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 11
  br label %4

; <label>:4                                       ; preds = %19, %.lr.ph.i
  %stream.03.i = phi %struct._tagTreeCCStream* [ %stream.0.2.i, %.lr.ph.i ], [ %stream.0.i, %19 ]
  %5 = getelementptr inbounds %struct._tagTreeCCStream, %struct._tagTreeCCStream* %stream.03.i, i64 0, i32 7
  %6 = load i8, i8* %5, align 4
  %.mask.i = and i8 %6, 4
  %7 = icmp eq i8 %.mask.i, 0
  br i1 %7, label %9, label %8

; <label>:8                                       ; preds = %4
  tail call void @TreeCCStreamHeaderTop(%struct._tagTreeCCStream* %stream.03.i) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.03.i, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.159, i64 0, i64 0)) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.03.i, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.160, i64 0, i64 0)) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.03.i, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.159, i64 0, i64 0)) #2
  br label %10

; <label>:9                                       ; preds = %4
  tail call void @TreeCCStreamSourceTop(%struct._tagTreeCCStream* %stream.03.i) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.03.i, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.159, i64 0, i64 0)) #2
  br label %10

; <label>:10                                      ; preds = %9, %8
  %11 = load i8*, i8** %3, align 8, !tbaa !8
  %12 = icmp eq i8* %11, null
  br i1 %12, label %14, label %13

; <label>:13                                      ; preds = %10
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.03.i, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2.161, i64 0, i64 0), i8* %11) #2
  br label %14

; <label>:14                                      ; preds = %13, %10
  %15 = load i8, i8* %5, align 4
  %.mask1.i = and i8 %15, 8
  %16 = icmp eq i8 %.mask1.i, 0
  br i1 %16, label %19, label %17

; <label>:17                                      ; preds = %14
  %18 = and i8 %15, -17
  store i8 %18, i8* %5, align 4
  br label %19

; <label>:19                                      ; preds = %17, %14
  %20 = getelementptr inbounds %struct._tagTreeCCStream, %struct._tagTreeCCStream* %stream.03.i, i64 0, i32 10
  %stream.0.i = load %struct._tagTreeCCStream*, %struct._tagTreeCCStream** %20, align 8
  %21 = icmp eq %struct._tagTreeCCStream* %stream.0.i, null
  br i1 %21, label %WriteCPPHeaders.exit.loopexit, label %4

WriteCPPHeaders.exit.loopexit:                    ; preds = %19
  br label %WriteCPPHeaders.exit

WriteCPPHeaders.exit:                             ; preds = %WriteCPPHeaders.exit.loopexit, %0
  tail call void @TreeCCNodeVisitAll(%struct._tagTreeCCContext* %context, void (%struct._tagTreeCCContext*, %struct._tagTreeCCNode*)* nonnull @DefineNodeNumbers.162) #2
  %22 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 4
  %23 = load %struct._tagTreeCCStream*, %struct._tagTreeCCStream** %22, align 8, !tbaa !28
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %23, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.159, i64 0, i64 0)) #2
  tail call void @TreeCCNodeVisitAll(%struct._tagTreeCCContext* %context, void (%struct._tagTreeCCContext*, %struct._tagTreeCCNode*)* nonnull @DeclareTypeDefs.163) #2
  %24 = load %struct._tagTreeCCStream*, %struct._tagTreeCCStream** %22, align 8, !tbaa !28
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %24, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.159, i64 0, i64 0)) #2
  %25 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 6
  %26 = load %struct._tagTreeCCStream*, %struct._tagTreeCCStream** %25, align 8, !tbaa !29
  %27 = icmp eq %struct._tagTreeCCStream* %26, null
  br i1 %27, label %29, label %28

; <label>:28                                      ; preds = %WriteCPPHeaders.exit
  tail call fastcc void @DeclareStateType(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %26)
  br label %31

; <label>:29                                      ; preds = %WriteCPPHeaders.exit
  %30 = load %struct._tagTreeCCStream*, %struct._tagTreeCCStream** %22, align 8, !tbaa !28
  tail call fastcc void @DeclareStateType(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %30)
  br label %31

; <label>:31                                      ; preds = %29, %28
  tail call void @TreeCCNodeVisitAll(%struct._tagTreeCCContext* %context, void (%struct._tagTreeCCContext*, %struct._tagTreeCCNode*)* nonnull @BuildTypeDecls.164) #2
  %32 = load %struct._tagTreeCCStream*, %struct._tagTreeCCStream** %22, align 8, !tbaa !28
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %32, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.159, i64 0, i64 0)) #2
  tail call void @TreeCCOperationVisitAll(%struct._tagTreeCCContext* %context, void (%struct._tagTreeCCContext*, %struct._tagTreeCCOperation*)* nonnull @DeclareNonVirtuals.165) #2
  %33 = load %struct._tagTreeCCStream*, %struct._tagTreeCCStream** %22, align 8, !tbaa !28
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %33, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.159, i64 0, i64 0)) #2
  %34 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 7
  %35 = load %struct._tagTreeCCStream*, %struct._tagTreeCCStream** %34, align 8, !tbaa !32
  %36 = icmp eq %struct._tagTreeCCStream* %35, null
  br i1 %36, label %38, label %37

; <label>:37                                      ; preds = %31
  tail call fastcc void @ImplementStateType(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %35)
  br label %41

; <label>:38                                      ; preds = %31
  %39 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 5
  %40 = load %struct._tagTreeCCStream*, %struct._tagTreeCCStream** %39, align 8, !tbaa !33
  tail call fastcc void @ImplementStateType(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %40)
  br label %41

; <label>:41                                      ; preds = %38, %37
  tail call void @TreeCCNodeVisitAll(%struct._tagTreeCCContext* %context, void (%struct._tagTreeCCContext*, %struct._tagTreeCCNode*)* nonnull @ImplementNodeTypes) #2
  tail call void @TreeCCGenerateNonVirtuals(%struct._tagTreeCCContext* %context, %struct.TreeCCNonVirtual* nonnull @TreeCCNonVirtualFuncsC) #2
  %stream.0.4.i = load %struct._tagTreeCCStream*, %struct._tagTreeCCStream** %1, align 8
  %42 = icmp eq %struct._tagTreeCCStream* %stream.0.4.i, null
  br i1 %42, label %WriteCPPFooters.exit, label %.lr.ph.i.1

.lr.ph.i.1:                                       ; preds = %41
  %43 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 11
  br label %44

; <label>:44                                      ; preds = %59, %.lr.ph.i.1
  %stream.05.i = phi %struct._tagTreeCCStream* [ %stream.0.4.i, %.lr.ph.i.1 ], [ %stream.0.i.3, %59 ]
  %45 = getelementptr inbounds %struct._tagTreeCCStream, %struct._tagTreeCCStream* %stream.05.i, i64 0, i32 7
  %46 = load i8, i8* %45, align 4
  %47 = and i8 %46, 24
  %48 = icmp eq i8 %47, 8
  br i1 %48, label %49, label %50

; <label>:49                                      ; preds = %44
  tail call void @TreeCCStreamClear(%struct._tagTreeCCStream* %stream.05.i) #2
  br label %59

; <label>:50                                      ; preds = %44
  %51 = load i8*, i8** %43, align 8, !tbaa !8
  %52 = icmp eq i8* %51, null
  br i1 %52, label %54, label %53

; <label>:53                                      ; preds = %50
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.05.i, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.105.166, i64 0, i64 0)) #2
  %.pre.i = load i8, i8* %45, align 4
  br label %54

; <label>:54                                      ; preds = %53, %50
  %55 = phi i8 [ %46, %50 ], [ %.pre.i, %53 ]
  %.mask1.i.2 = and i8 %55, 4
  %56 = icmp eq i8 %.mask1.i.2, 0
  br i1 %56, label %58, label %57

; <label>:57                                      ; preds = %54
  tail call void @TreeCCStreamHeaderBottom(%struct._tagTreeCCStream* %stream.05.i) #2
  br label %59

; <label>:58                                      ; preds = %54
  tail call void @TreeCCStreamSourceBottom(%struct._tagTreeCCStream* %stream.05.i) #2
  br label %59

; <label>:59                                      ; preds = %58, %57, %49
  %60 = getelementptr inbounds %struct._tagTreeCCStream, %struct._tagTreeCCStream* %stream.05.i, i64 0, i32 10
  %stream.0.i.3 = load %struct._tagTreeCCStream*, %struct._tagTreeCCStream** %60, align 8
  %61 = icmp eq %struct._tagTreeCCStream* %stream.0.i.3, null
  br i1 %61, label %WriteCPPFooters.exit.loopexit, label %44

WriteCPPFooters.exit.loopexit:                    ; preds = %59
  br label %WriteCPPFooters.exit

WriteCPPFooters.exit:                             ; preds = %WriteCPPFooters.exit.loopexit, %41
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @DefineNodeNumbers.162(%struct._tagTreeCCContext* nocapture readnone %context, %struct._tagTreeCCNode* nocapture readonly %node) #0 {
  %1 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 5
  %2 = load i32, i32* %1, align 4, !tbaa !34
  %3 = and i32 %2, 24
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %12

; <label>:5                                       ; preds = %0
  %6 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 13
  %7 = load %struct._tagTreeCCStream*, %struct._tagTreeCCStream** %6, align 8, !tbaa !35
  %8 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 4
  %9 = load i8*, i8** %8, align 8, !tbaa !36
  %10 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 6
  %11 = load i32, i32* %10, align 4, !tbaa !37
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %7, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.3.275, i64 0, i64 0), i8* %9, i32 %11) #2
  br label %12

; <label>:12                                      ; preds = %5, %0
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @DeclareTypeDefs.163(%struct._tagTreeCCContext* nocapture readnone %context, %struct._tagTreeCCNode* nocapture readonly %node) #0 {
  %1 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 13
  %2 = load %struct._tagTreeCCStream*, %struct._tagTreeCCStream** %1, align 8, !tbaa !35
  %3 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 5
  %4 = load i32, i32* %3, align 4, !tbaa !34
  %5 = and i32 %4, 8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %22, label %7

; <label>:7                                       ; preds = %0
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.4.271, i64 0, i64 0)) #2
  %8 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 1
  %child.0.1 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %8, align 8
  %9 = icmp eq %struct._tagTreeCCNode* %child.0.1, null
  br i1 %9, label %._crit_edge, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %7
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %17
  %child.02 = phi %struct._tagTreeCCNode* [ %child.0, %17 ], [ %child.0.1, %.lr.ph.preheader ]
  %10 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %child.02, i64 0, i32 5
  %11 = load i32, i32* %10, align 4, !tbaa !34
  %12 = and i32 %11, 16
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %17, label %14

; <label>:14                                      ; preds = %.lr.ph
  %15 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %child.02, i64 0, i32 4
  %16 = load i8*, i8** %15, align 8, !tbaa !36
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5.272, i64 0, i64 0), i8* %16) #2
  br label %17

; <label>:17                                      ; preds = %.lr.ph, %14
  %18 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %child.02, i64 0, i32 3
  %child.0 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %18, align 8
  %19 = icmp eq %struct._tagTreeCCNode* %child.0, null
  br i1 %19, label %._crit_edge.loopexit, label %.lr.ph

._crit_edge.loopexit:                             ; preds = %17
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %7
  %20 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 4
  %21 = load i8*, i8** %20, align 8, !tbaa !36
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6.273, i64 0, i64 0), i8* %21) #2
  br label %28

; <label>:22                                      ; preds = %0
  %23 = and i32 %4, 16
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %28

; <label>:25                                      ; preds = %22
  %26 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 4
  %27 = load i8*, i8** %26, align 8, !tbaa !36
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7.274, i64 0, i64 0), i8* %27) #2
  br label %28

; <label>:28                                      ; preds = %22, %25, %._crit_edge
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @DeclareStateType(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %stream) #0 {
  %1 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 10
  %2 = load i8*, i8** %1, align 8, !tbaa !31
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.8.223, i64 0, i64 0), i8* %2) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9.217, i64 0, i64 0)) #2
  %3 = load i8*, i8** %1, align 8, !tbaa !31
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.248, i64 0, i64 0), i8* %3) #2
  %4 = load i8*, i8** %1, align 8, !tbaa !31
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.11.245, i64 0, i64 0), i8* %4) #2
  %5 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 8
  %6 = load i16, i16* %5, align 8
  %.mask = and i16 %6, 4096
  %7 = icmp eq i16 %.mask, 0
  br i1 %7, label %9, label %8

; <label>:8                                       ; preds = %0
  tail call void @TreeCCIncludeSkeleton(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.12.249, i64 0, i64 0)) #2
  br label %10

; <label>:9                                       ; preds = %0
  tail call void @TreeCCIncludeSkeleton(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.13.250, i64 0, i64 0)) #2
  br label %10

; <label>:10                                      ; preds = %9, %8
  %11 = load i16, i16* %5, align 8
  %.mask1 = and i16 %11, 8
  %12 = icmp eq i16 %.mask1, 0
  br i1 %12, label %13, label %17

; <label>:13                                      ; preds = %10
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14.251, i64 0, i64 0)) #2
  %14 = load i8*, i8** %1, align 8, !tbaa !31
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15.252, i64 0, i64 0), i8* %14) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9.217, i64 0, i64 0)) #2
  %15 = load i8*, i8** %1, align 8, !tbaa !31
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.253, i64 0, i64 0), i8* %15) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.17.254, i64 0, i64 0)) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.18.255, i64 0, i64 0)) #2
  %16 = load i8*, i8** %1, align 8, !tbaa !31
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.19.256, i64 0, i64 0), i8* %16) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.20.257, i64 0, i64 0)) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.21.258, i64 0, i64 0)) #2
  %.pre = load i16, i16* %5, align 8
  br label %17

; <label>:17                                      ; preds = %10, %13
  %18 = phi i16 [ %11, %10 ], [ %.pre, %13 ]
  %.mask2 = and i16 %18, 8
  %19 = icmp eq i16 %.mask2, 0
  br i1 %19, label %21, label %20

; <label>:20                                      ; preds = %17
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9.217, i64 0, i64 0)) #2
  tail call void @TreeCCNodeVisitAll(%struct._tagTreeCCContext* %context, void (%struct._tagTreeCCContext*, %struct._tagTreeCCNode*)* nonnull @DeclareCreateFuncs.259) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.159, i64 0, i64 0)) #2
  br label %21

; <label>:21                                      ; preds = %17, %20
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9.217, i64 0, i64 0)) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.22.260, i64 0, i64 0)) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.23.261, i64 0, i64 0)) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.24.262, i64 0, i64 0)) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.25.263, i64 0, i64 0)) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.26.264, i64 0, i64 0)) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.27.265, i64 0, i64 0)) #2
  %22 = load i16, i16* %5, align 8
  %.mask3 = and i16 %22, 2
  %23 = icmp eq i16 %.mask3, 0
  br i1 %23, label %25, label %24

; <label>:24                                      ; preds = %21
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.28.266, i64 0, i64 0)) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.29.267, i64 0, i64 0)) #2
  br label %25

; <label>:25                                      ; preds = %21, %24
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.30.268, i64 0, i64 0)) #2
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @BuildTypeDecls.164(%struct._tagTreeCCContext* %context, %struct._tagTreeCCNode* %node) #0 {
  %1 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 13
  %2 = load %struct._tagTreeCCStream*, %struct._tagTreeCCStream** %1, align 8, !tbaa !35
  %3 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 5
  %4 = load i32, i32* %3, align 4, !tbaa !34
  %5 = and i32 %4, 24
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %74

; <label>:7                                       ; preds = %0
  %8 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 0
  %9 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %8, align 8, !tbaa !38
  %10 = icmp eq %struct._tagTreeCCNode* %9, null
  br i1 %10, label %16, label %11

; <label>:11                                      ; preds = %7
  %12 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 4
  %13 = load i8*, i8** %12, align 8, !tbaa !36
  %14 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %9, i64 0, i32 4
  %15 = load i8*, i8** %14, align 8, !tbaa !36
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.37.222, i64 0, i64 0), i8* %13, i8* %15) #2
  %.pre = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 8
  br label %37

; <label>:16                                      ; preds = %7
  %17 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 16
  %18 = load i8*, i8** %17, align 8, !tbaa !12
  %19 = icmp eq i8* %18, null
  %20 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 4
  %21 = load i8*, i8** %20, align 8, !tbaa !36
  br i1 %19, label %23, label %22

; <label>:22                                      ; preds = %16
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.37.222, i64 0, i64 0), i8* %21, i8* %18) #2
  br label %24

; <label>:23                                      ; preds = %16
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.8.223, i64 0, i64 0), i8* %21) #2
  br label %24

; <label>:24                                      ; preds = %23, %22
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.38.224, i64 0, i64 0)) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.39.225, i64 0, i64 0)) #2
  %25 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 8
  %26 = load i16, i16* %25, align 8
  %.mask = and i16 %26, 2
  %27 = icmp eq i16 %.mask, 0
  br i1 %27, label %29, label %28

; <label>:28                                      ; preds = %24
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.40.226, i64 0, i64 0)) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.41.227, i64 0, i64 0)) #2
  br label %29

; <label>:29                                      ; preds = %24, %28
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.42.228, i64 0, i64 0)) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.43.229, i64 0, i64 0)) #2
  %30 = load i16, i16* %25, align 8
  %.mask1 = and i16 %30, 2
  %31 = icmp eq i16 %.mask1, 0
  br i1 %31, label %33, label %32

; <label>:32                                      ; preds = %29
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.44.230, i64 0, i64 0)) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.45.231, i64 0, i64 0)) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.46.232, i64 0, i64 0)) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.47.233, i64 0, i64 0)) #2
  br label %33

; <label>:33                                      ; preds = %29, %32
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.159, i64 0, i64 0)) #2
  %34 = load i16, i16* %25, align 8
  %.mask2 = and i16 %34, 8
  %35 = icmp eq i16 %.mask2, 0
  br i1 %35, label %36, label %37

; <label>:36                                      ; preds = %33
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.48.234, i64 0, i64 0)) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.49.235, i64 0, i64 0)) #2
  br label %37

; <label>:37                                      ; preds = %33, %36, %11
  %.pre-phi = phi i16* [ %25, %33 ], [ %25, %36 ], [ %.pre, %11 ]
  %38 = load i16, i16* %.pre-phi, align 8
  %.mask3 = and i16 %38, 8
  %39 = icmp eq i16 %.mask3, 0
  br i1 %39, label %47, label %40

; <label>:40                                      ; preds = %37
  %41 = and i16 %38, 96
  %42 = icmp eq i16 %41, 0
  br i1 %42, label %44, label %43

; <label>:43                                      ; preds = %40
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.50.236, i64 0, i64 0)) #2
  br label %53

; <label>:44                                      ; preds = %40
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.38.224, i64 0, i64 0)) #2
  %45 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 10
  %46 = load i8*, i8** %45, align 8, !tbaa !31
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.51.237, i64 0, i64 0), i8* %46) #2
  br label %53

; <label>:47                                      ; preds = %37
  %48 = load i32, i32* %3, align 4, !tbaa !34
  %49 = and i32 %48, 2
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %52, label %51

; <label>:51                                      ; preds = %47
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.38.224, i64 0, i64 0)) #2
  br label %53

; <label>:52                                      ; preds = %47
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9.217, i64 0, i64 0)) #2
  br label %53

; <label>:53                                      ; preds = %51, %52, %43, %44
  %54 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 4
  %55 = load i8*, i8** %54, align 8, !tbaa !36
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.52.238, i64 0, i64 0), i8* %55) #2
  %56 = load i16, i16* %.pre-phi, align 8
  %.mask4 = and i16 %56, 8
  %57 = icmp eq i16 %.mask4, 0
  br i1 %57, label %61, label %58

; <label>:58                                      ; preds = %53
  %59 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 10
  %60 = load i8*, i8** %59, align 8, !tbaa !31
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.53.174, i64 0, i64 0), i8* %60) #2
  br label %61

; <label>:61                                      ; preds = %53, %58
  %needComma.0 = phi i32 [ 1, %58 ], [ 0, %53 ]
  %62 = tail call fastcc i32 @CreateParams.239(%struct._tagTreeCCStream* %2, %struct._tagTreeCCNode* %node, i32 %needComma.0)
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.54.240, i64 0, i64 0)) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9.217, i64 0, i64 0)) #2
  %63 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 10
  %64 = load %struct._tagTreeCCField*, %struct._tagTreeCCField** %63, align 8, !tbaa !67
  %65 = icmp eq %struct._tagTreeCCField* %64, null
  br i1 %65, label %72, label %.lr.ph.i.preheader

.lr.ph.i.preheader:                               ; preds = %61
  br label %.lr.ph.i

.lr.ph.i:                                         ; preds = %.lr.ph.i.preheader, %.lr.ph.i
  %field.02.i = phi %struct._tagTreeCCField* [ %field.0.i, %.lr.ph.i ], [ %64, %.lr.ph.i.preheader ]
  %66 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.02.i, i64 0, i32 1
  %67 = load i8*, i8** %66, align 8, !tbaa !63
  %68 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.02.i, i64 0, i32 0
  %69 = load i8*, i8** %68, align 8, !tbaa !64
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.58.241, i64 0, i64 0), i8* %67, i8* %69) #2
  %70 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.02.i, i64 0, i32 6
  %field.0.i = load %struct._tagTreeCCField*, %struct._tagTreeCCField** %70, align 8
  %71 = icmp eq %struct._tagTreeCCField* %field.0.i, null
  br i1 %71, label %DeclareFields.exit, label %.lr.ph.i

DeclareFields.exit:                               ; preds = %.lr.ph.i
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.159, i64 0, i64 0)) #2
  br label %72

; <label>:72                                      ; preds = %61, %DeclareFields.exit
  tail call fastcc void @DeclareVirtuals.242(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %2, %struct._tagTreeCCNode* %node, %struct._tagTreeCCNode* %node)
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.159, i64 0, i64 0)) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.55.243, i64 0, i64 0)) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.56.244, i64 0, i64 0)) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.38.224, i64 0, i64 0)) #2
  %73 = load i8*, i8** %54, align 8, !tbaa !36
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.11.245, i64 0, i64 0), i8* %73) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.57.221, i64 0, i64 0)) #2
  br label %74

; <label>:74                                      ; preds = %0, %72
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @DeclareNonVirtuals.165(%struct._tagTreeCCContext* nocapture readnone %context, %struct._tagTreeCCOperation* nocapture readonly %oper) #0 {
  %1 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %oper, i64 0, i32 14
  %2 = load %struct._tagTreeCCStream*, %struct._tagTreeCCStream** %1, align 8, !tbaa !43
  %3 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %oper, i64 0, i32 5
  %4 = load i32, i32* %3, align 4, !tbaa !44
  %5 = and i32 %4, 1
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %35

; <label>:7                                       ; preds = %0
  %8 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %oper, i64 0, i32 1
  %9 = load i8*, i8** %8, align 8, !tbaa !60
  %10 = icmp eq i8* %9, null
  br i1 %10, label %12, label %11

; <label>:11                                      ; preds = %7
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.61.216, i64 0, i64 0), i8* %9) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.62.168, i64 0, i64 0)) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9.217, i64 0, i64 0)) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.63.218, i64 0, i64 0)) #2
  br label %12

; <label>:12                                      ; preds = %7, %11
  %13 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %oper, i64 0, i32 2
  %14 = load i8*, i8** %13, align 8, !tbaa !45
  %15 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %oper, i64 0, i32 0
  %16 = load i8*, i8** %15, align 8, !tbaa !46
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.64.219, i64 0, i64 0), i8* %14, i8* %16) #2
  %17 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %oper, i64 0, i32 4
  %param.0.1 = load %struct._tagTreeCCParam*, %struct._tagTreeCCParam** %17, align 8
  %18 = icmp eq %struct._tagTreeCCParam* %param.0.1, null
  br i1 %18, label %._crit_edge, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %12
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %29
  %param.04 = phi %struct._tagTreeCCParam* [ %param.0, %29 ], [ %param.0.1, %.lr.ph.preheader ]
  %needComma.03 = phi i1 [ true, %29 ], [ false, %.lr.ph.preheader ]
  %num.02 = phi i32 [ %num.1, %29 ], [ 1, %.lr.ph.preheader ]
  br i1 %needComma.03, label %19, label %20

; <label>:19                                      ; preds = %.lr.ph
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.35.196, i64 0, i64 0)) #2
  br label %20

; <label>:20                                      ; preds = %19, %.lr.ph
  %21 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.04, i64 0, i32 0
  %22 = load i8*, i8** %21, align 8, !tbaa !41
  %23 = icmp eq i8* %22, null
  %24 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.04, i64 0, i32 1
  %25 = load i8*, i8** %24, align 8, !tbaa !47
  br i1 %23, label %27, label %26

; <label>:26                                      ; preds = %20
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.36.197, i64 0, i64 0), i8* %25, i8* %22) #2
  br label %29

; <label>:27                                      ; preds = %20
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.60.198, i64 0, i64 0), i8* %25, i32 %num.02) #2
  %28 = add nsw i32 %num.02, 1
  br label %29

; <label>:29                                      ; preds = %27, %26
  %num.1 = phi i32 [ %num.02, %26 ], [ %28, %27 ]
  %30 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.04, i64 0, i32 4
  %param.0 = load %struct._tagTreeCCParam*, %struct._tagTreeCCParam** %30, align 8
  %31 = icmp eq %struct._tagTreeCCParam* %param.0, null
  br i1 %31, label %._crit_edge.thread.loopexit, label %.lr.ph

._crit_edge:                                      ; preds = %12
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.65.220, i64 0, i64 0)) #2
  br label %._crit_edge.thread

._crit_edge.thread.loopexit:                      ; preds = %29
  br label %._crit_edge.thread

._crit_edge.thread:                               ; preds = %._crit_edge.thread.loopexit, %._crit_edge
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.34.215, i64 0, i64 0)) #2
  %32 = load i8*, i8** %8, align 8, !tbaa !60
  %33 = icmp eq i8* %32, null
  br i1 %33, label %35, label %34

; <label>:34                                      ; preds = %._crit_edge.thread
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.57.221, i64 0, i64 0)) #2
  br label %35

; <label>:35                                      ; preds = %34, %._crit_edge.thread, %0
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @ImplementStateType(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %stream) #0 {
  %1 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 14
  %2 = load i32, i32* %1, align 4, !tbaa !10
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %7, label %4

; <label>:4                                       ; preds = %0
  %5 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 10
  %6 = load i8*, i8** %5, align 8, !tbaa !31
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.66.204, i64 0, i64 0), i8* %6, i32 %2) #2
  br label %7

; <label>:7                                       ; preds = %0, %4
  %8 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 8
  %9 = load i16, i16* %8, align 8
  %.mask = and i16 %9, 8
  %10 = icmp eq i16 %.mask, 0
  br i1 %10, label %14, label %11

; <label>:11                                      ; preds = %7
  %12 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 10
  %13 = load i8*, i8** %12, align 8, !tbaa !31
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.67.205, i64 0, i64 0), i8* %13) #2
  %.pre = load i16, i16* %8, align 8
  br label %14

; <label>:14                                      ; preds = %7, %11
  %15 = phi i16 [ %9, %7 ], [ %.pre, %11 ]
  %.mask1 = and i16 %15, 2
  %16 = icmp eq i16 %.mask1, 0
  br i1 %16, label %20, label %17

; <label>:17                                      ; preds = %14
  %18 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 10
  %19 = load i8*, i8** %18, align 8, !tbaa !31
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.68.206, i64 0, i64 0), i8* %19) #2
  %.pre7 = load i16, i16* %8, align 8
  br label %20

; <label>:20                                      ; preds = %14, %17
  %21 = phi i16 [ %15, %14 ], [ %.pre7, %17 ]
  %.mask2 = and i16 %21, 2048
  %22 = icmp eq i16 %.mask2, 0
  br i1 %22, label %26, label %23

; <label>:23                                      ; preds = %20
  %24 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 10
  %25 = load i8*, i8** %24, align 8, !tbaa !31
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.69.207, i64 0, i64 0), i8* %25) #2
  %.pre8 = load i16, i16* %8, align 8
  br label %26

; <label>:26                                      ; preds = %20, %23
  %27 = phi i16 [ %21, %20 ], [ %.pre8, %23 ]
  %.mask3 = and i16 %27, 4096
  %28 = icmp eq i16 %.mask3, 0
  br i1 %28, label %30, label %29

; <label>:29                                      ; preds = %26
  tail call void @TreeCCIncludeSkeleton(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.70.208, i64 0, i64 0)) #2
  br label %31

; <label>:30                                      ; preds = %26
  tail call void @TreeCCIncludeSkeleton(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.71.209, i64 0, i64 0)) #2
  br label %31

; <label>:31                                      ; preds = %30, %29
  %32 = load i16, i16* %8, align 8
  %33 = and i16 %32, 72
  %34 = icmp eq i16 %33, 8
  br i1 %34, label %35, label %36

; <label>:35                                      ; preds = %31
  tail call void @TreeCCNodeVisitAll(%struct._tagTreeCCContext* %context, void (%struct._tagTreeCCContext*, %struct._tagTreeCCNode*)* nonnull @ImplementCreateFuncs.210) #2
  br label %36

; <label>:36                                      ; preds = %31, %35
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @ImplementNodeTypes(%struct._tagTreeCCContext* %context, %struct._tagTreeCCNode* %node) #0 {
  %1 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 14
  %2 = load %struct._tagTreeCCStream*, %struct._tagTreeCCStream** %1, align 8, !tbaa !48
  %3 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 5
  %4 = load i32, i32* %3, align 4, !tbaa !34
  %5 = and i32 %4, 24
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %88

; <label>:7                                       ; preds = %0
  %8 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 0
  %9 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %8, align 8, !tbaa !38
  %10 = icmp eq %struct._tagTreeCCNode* %9, null
  %11 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 8
  br i1 %10, label %12, label %._crit_edge

; <label>:12                                      ; preds = %7
  %13 = load i16, i16* %11, align 8
  %.mask = and i16 %13, 8
  %14 = icmp eq i16 %.mask, 0
  br i1 %14, label %15, label %._crit_edge

; <label>:15                                      ; preds = %12
  %16 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 4
  %17 = load i8*, i8** %16, align 8, !tbaa !36
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.79.167, i64 0, i64 0), i8* %17) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.62.168, i64 0, i64 0)) #2
  %18 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 10
  %19 = load i8*, i8** %18, align 8, !tbaa !31
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.80.169, i64 0, i64 0), i8* %19) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.77.170, i64 0, i64 0)) #2
  %20 = load i8*, i8** %16, align 8, !tbaa !36
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.81.171, i64 0, i64 0), i8* %20) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.62.168, i64 0, i64 0)) #2
  %21 = load i8*, i8** %18, align 8, !tbaa !31
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.82.172, i64 0, i64 0), i8* %21) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.77.170, i64 0, i64 0)) #2
  br label %._crit_edge

._crit_edge:                                      ; preds = %7, %12, %15
  %22 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 4
  %23 = load i8*, i8** %22, align 8, !tbaa !36
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.93.173, i64 0, i64 0), i8* %23, i8* %23) #2
  %24 = load i16, i16* %11, align 8
  %.mask.i = and i16 %24, 8
  %25 = icmp eq i16 %.mask.i, 0
  br i1 %25, label %29, label %26

; <label>:26                                      ; preds = %._crit_edge
  %27 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 10
  %28 = load i8*, i8** %27, align 8, !tbaa !31
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.53.174, i64 0, i64 0), i8* %28) #2
  br label %29

; <label>:29                                      ; preds = %26, %._crit_edge
  %needComma.0.i = phi i32 [ 1, %26 ], [ 0, %._crit_edge ]
  %30 = tail call fastcc i32 @CreateParamsSource.175(%struct._tagTreeCCStream* %2, %struct._tagTreeCCNode* %node, i32 %needComma.0.i) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.73.176, i64 0, i64 0)) #2
  %31 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %8, align 8, !tbaa !38
  %32 = icmp eq %struct._tagTreeCCNode* %31, null
  br i1 %32, label %42, label %33

; <label>:33                                      ; preds = %29
  %34 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %31, i64 0, i32 4
  %35 = load i8*, i8** %34, align 8, !tbaa !36
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.94.177, i64 0, i64 0), i8* %35) #2
  %36 = load i16, i16* %11, align 8
  %.mask3.i = and i16 %36, 8
  %37 = icmp eq i16 %.mask3.i, 0
  br i1 %37, label %39, label %38

; <label>:38                                      ; preds = %33
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.95.178, i64 0, i64 0)) #2
  br label %39

; <label>:39                                      ; preds = %38, %33
  %needComma.1.i = phi i32 [ 1, %38 ], [ 0, %33 ]
  %40 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %8, align 8, !tbaa !38
  %41 = tail call fastcc i32 @InheritParamsSource(%struct._tagTreeCCStream* %2, %struct._tagTreeCCNode* %40, i32 %needComma.1.i) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.73.176, i64 0, i64 0)) #2
  br label %42

; <label>:42                                      ; preds = %39, %29
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.62.168, i64 0, i64 0)) #2
  %43 = load i8*, i8** %22, align 8, !tbaa !36
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.96.179, i64 0, i64 0), i8* %43) #2
  %44 = load i16, i16* %11, align 8
  %.mask1.i = and i16 %44, 2
  %45 = icmp eq i16 %.mask1.i, 0
  br i1 %45, label %56, label %46

; <label>:46                                      ; preds = %42
  %47 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %8, align 8, !tbaa !38
  %48 = icmp eq %struct._tagTreeCCNode* %47, null
  br i1 %48, label %49, label %56

; <label>:49                                      ; preds = %46
  %.mask2.i = and i16 %44, 8
  %50 = icmp eq i16 %.mask2.i, 0
  br i1 %50, label %52, label %51

; <label>:51                                      ; preds = %49
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.97.180, i64 0, i64 0)) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.98.181, i64 0, i64 0)) #2
  br label %56

; <label>:52                                      ; preds = %49
  %53 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 10
  %54 = load i8*, i8** %53, align 8, !tbaa !31
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.99.182, i64 0, i64 0), i8* %54) #2
  %55 = load i8*, i8** %53, align 8, !tbaa !31
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.100.183, i64 0, i64 0), i8* %55) #2
  br label %56

; <label>:56                                      ; preds = %52, %51, %46, %42
  %57 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 10
  %field.0.4.i = load %struct._tagTreeCCField*, %struct._tagTreeCCField** %57, align 8
  %58 = icmp eq %struct._tagTreeCCField* %field.0.4.i, null
  br i1 %58, label %ImplementConstructor.exit, label %.lr.ph.i.preheader

.lr.ph.i.preheader:                               ; preds = %56
  br label %.lr.ph.i

.lr.ph.i:                                         ; preds = %.lr.ph.i.preheader, %73
  %field.05.i = phi %struct._tagTreeCCField* [ %field.0.i, %73 ], [ %field.0.4.i, %.lr.ph.i.preheader ]
  %59 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.05.i, i64 0, i32 3
  %60 = load i32, i32* %59, align 4, !tbaa !61
  %61 = and i32 %60, 1
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %66

; <label>:63                                      ; preds = %.lr.ph.i
  %64 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.05.i, i64 0, i32 0
  %65 = load i8*, i8** %64, align 8, !tbaa !64
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.101.184, i64 0, i64 0), i8* %65, i8* %65) #2
  br label %73

; <label>:66                                      ; preds = %.lr.ph.i
  %67 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.05.i, i64 0, i32 2
  %68 = load i8*, i8** %67, align 8, !tbaa !65
  %69 = icmp eq i8* %68, null
  br i1 %69, label %73, label %70

; <label>:70                                      ; preds = %66
  %71 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.05.i, i64 0, i32 0
  %72 = load i8*, i8** %71, align 8, !tbaa !64
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.101.184, i64 0, i64 0), i8* %72, i8* %68) #2
  br label %73

; <label>:73                                      ; preds = %70, %66, %63
  %74 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.05.i, i64 0, i32 6
  %field.0.i = load %struct._tagTreeCCField*, %struct._tagTreeCCField** %74, align 8
  %75 = icmp eq %struct._tagTreeCCField* %field.0.i, null
  br i1 %75, label %ImplementConstructor.exit.loopexit, label %.lr.ph.i

ImplementConstructor.exit.loopexit:               ; preds = %73
  br label %ImplementConstructor.exit

ImplementConstructor.exit:                        ; preds = %ImplementConstructor.exit.loopexit, %56
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.77.170, i64 0, i64 0)) #2
  %76 = load i8*, i8** %22, align 8, !tbaa !36
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.83.185, i64 0, i64 0), i8* %76, i8* %76) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.62.168, i64 0, i64 0)) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.84.186, i64 0, i64 0)) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.77.170, i64 0, i64 0)) #2
  tail call fastcc void @ImplementVirtuals(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %2, %struct._tagTreeCCNode* %node, %struct._tagTreeCCNode* %node)
  %77 = load i8*, i8** %22, align 8, !tbaa !36
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.85.187, i64 0, i64 0), i8* %77) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.62.168, i64 0, i64 0)) #2
  %78 = load i8*, i8** %22, align 8, !tbaa !36
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.86.188, i64 0, i64 0), i8* %78) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.87.189, i64 0, i64 0)) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.88.190, i64 0, i64 0)) #2
  %79 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %8, align 8, !tbaa !38
  %80 = icmp eq %struct._tagTreeCCNode* %79, null
  br i1 %80, label %84, label %81

; <label>:81                                      ; preds = %ImplementConstructor.exit
  %82 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %79, i64 0, i32 4
  %83 = load i8*, i8** %82, align 8, !tbaa !36
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.89.191, i64 0, i64 0), i8* %83) #2
  br label %85

; <label>:84                                      ; preds = %ImplementConstructor.exit
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.90.192, i64 0, i64 0)) #2
  br label %85

; <label>:85                                      ; preds = %84, %81
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.77.170, i64 0, i64 0)) #2
  %86 = load i8*, i8** %22, align 8, !tbaa !36
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.91.193, i64 0, i64 0), i8* %86) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.62.168, i64 0, i64 0)) #2
  %87 = load i8*, i8** %22, align 8, !tbaa !36
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.92.194, i64 0, i64 0), i8* %87) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.77.170, i64 0, i64 0)) #2
  br label %88

; <label>:88                                      ; preds = %0, %85
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @CreateParamsSource.175(%struct._tagTreeCCStream* %stream, %struct._tagTreeCCNode* nocapture readonly %node, i32 %needComma) #0 {
  %1 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 0
  %2 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %1, align 8, !tbaa !38
  %3 = icmp eq %struct._tagTreeCCNode* %2, null
  br i1 %3, label %6, label %4

; <label>:4                                       ; preds = %0
  %5 = tail call fastcc i32 @CreateParamsSource.175(%struct._tagTreeCCStream* %stream, %struct._tagTreeCCNode* %2, i32 %needComma)
  br label %6

; <label>:6                                       ; preds = %0, %4
  %.0 = phi i32 [ %5, %4 ], [ %needComma, %0 ]
  %7 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 10
  %field.0.1 = load %struct._tagTreeCCField*, %struct._tagTreeCCField** %7, align 8
  %8 = icmp eq %struct._tagTreeCCField* %field.0.1, null
  br i1 %8, label %._crit_edge, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %6
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %21
  %field.03 = phi %struct._tagTreeCCField* [ %field.0, %21 ], [ %field.0.1, %.lr.ph.preheader ]
  %.12 = phi i32 [ %.2, %21 ], [ %.0, %.lr.ph.preheader ]
  %9 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.03, i64 0, i32 3
  %10 = load i32, i32* %9, align 4, !tbaa !61
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %21

; <label>:13                                      ; preds = %.lr.ph
  %14 = icmp eq i32 %.12, 0
  br i1 %14, label %16, label %15

; <label>:15                                      ; preds = %13
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.35.196, i64 0, i64 0)) #2
  br label %16

; <label>:16                                      ; preds = %13, %15
  %17 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.03, i64 0, i32 1
  %18 = load i8*, i8** %17, align 8, !tbaa !63
  %19 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.03, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8, !tbaa !64
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.36.197, i64 0, i64 0), i8* %18, i8* %20) #2
  br label %21

; <label>:21                                      ; preds = %16, %.lr.ph
  %.2 = phi i32 [ 1, %16 ], [ %.12, %.lr.ph ]
  %22 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.03, i64 0, i32 6
  %field.0 = load %struct._tagTreeCCField*, %struct._tagTreeCCField** %22, align 8
  %23 = icmp eq %struct._tagTreeCCField* %field.0, null
  br i1 %23, label %._crit_edge.loopexit, label %.lr.ph

._crit_edge.loopexit:                             ; preds = %21
  %.2.lcssa = phi i32 [ %.2, %21 ]
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %6
  %.1.lcssa = phi i32 [ %.0, %6 ], [ %.2.lcssa, %._crit_edge.loopexit ]
  ret i32 %.1.lcssa
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @InheritParamsSource(%struct._tagTreeCCStream* %stream, %struct._tagTreeCCNode* nocapture readonly %node, i32 %needComma) #0 {
  %1 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 0
  %2 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %1, align 8, !tbaa !38
  %3 = icmp eq %struct._tagTreeCCNode* %2, null
  br i1 %3, label %6, label %4

; <label>:4                                       ; preds = %0
  %5 = tail call fastcc i32 @InheritParamsSource(%struct._tagTreeCCStream* %stream, %struct._tagTreeCCNode* %2, i32 %needComma)
  br label %6

; <label>:6                                       ; preds = %0, %4
  %.0 = phi i32 [ %5, %4 ], [ %needComma, %0 ]
  %7 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 10
  %field.0.1 = load %struct._tagTreeCCField*, %struct._tagTreeCCField** %7, align 8
  %8 = icmp eq %struct._tagTreeCCField* %field.0.1, null
  br i1 %8, label %._crit_edge, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %6
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %19
  %field.03 = phi %struct._tagTreeCCField* [ %field.0, %19 ], [ %field.0.1, %.lr.ph.preheader ]
  %.12 = phi i32 [ %.2, %19 ], [ %.0, %.lr.ph.preheader ]
  %9 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.03, i64 0, i32 3
  %10 = load i32, i32* %9, align 4, !tbaa !61
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %19

; <label>:13                                      ; preds = %.lr.ph
  %14 = icmp eq i32 %.12, 0
  br i1 %14, label %16, label %15

; <label>:15                                      ; preds = %13
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.35.196, i64 0, i64 0)) #2
  br label %16

; <label>:16                                      ; preds = %13, %15
  %17 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.03, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8, !tbaa !64
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.78.203, i64 0, i64 0), i8* %18) #2
  br label %19

; <label>:19                                      ; preds = %16, %.lr.ph
  %.2 = phi i32 [ 1, %16 ], [ %.12, %.lr.ph ]
  %20 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.03, i64 0, i32 6
  %field.0 = load %struct._tagTreeCCField*, %struct._tagTreeCCField** %20, align 8
  %21 = icmp eq %struct._tagTreeCCField* %field.0, null
  br i1 %21, label %._crit_edge.loopexit, label %.lr.ph

._crit_edge.loopexit:                             ; preds = %19
  %.2.lcssa = phi i32 [ %.2, %19 ]
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %6
  %.1.lcssa = phi i32 [ %.0, %6 ], [ %.2.lcssa, %._crit_edge.loopexit ]
  ret i32 %.1.lcssa
}

; Function Attrs: nounwind uwtable
define internal fastcc void @ImplementVirtuals(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %stream, %struct._tagTreeCCNode* nocapture readonly %node, %struct._tagTreeCCNode* %actualNode) #0 {
  %1 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 0
  %2 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %1, align 8, !tbaa !38
  %3 = icmp eq %struct._tagTreeCCNode* %2, null
  br i1 %3, label %5, label %4

; <label>:4                                       ; preds = %0
  tail call fastcc void @ImplementVirtuals(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %stream, %struct._tagTreeCCNode* %2, %struct._tagTreeCCNode* %actualNode)
  br label %5

; <label>:5                                       ; preds = %0, %4
  %6 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 11
  %virt.0.11 = load %struct._tagTreeCCVirtual*, %struct._tagTreeCCVirtual** %6, align 8
  %7 = icmp eq %struct._tagTreeCCVirtual* %virt.0.11, null
  br i1 %7, label %._crit_edge.15, label %.lr.ph14

.lr.ph14:                                         ; preds = %5
  %8 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %actualNode, i64 0, i32 4
  br label %9

; <label>:9                                       ; preds = %.lr.ph14, %.backedge
  %virt.012 = phi %struct._tagTreeCCVirtual* [ %virt.0.11, %.lr.ph14 ], [ %virt.0, %.backedge ]
  %10 = getelementptr inbounds %struct._tagTreeCCVirtual, %struct._tagTreeCCVirtual* %virt.012, i64 0, i32 0
  %11 = load i8*, i8** %10, align 8, !tbaa !39
  %12 = tail call %struct._tagTreeCCOperationCase* @TreeCCOperationFindCase(%struct._tagTreeCCContext* %context, %struct._tagTreeCCNode* %actualNode, i8* %11) #2
  %13 = icmp eq %struct._tagTreeCCOperationCase* %12, null
  br i1 %13, label %.backedge, label %15

.backedge:                                        ; preds = %9, %65
  %virt.0.in.be = getelementptr inbounds %struct._tagTreeCCVirtual, %struct._tagTreeCCVirtual* %virt.012, i64 0, i32 4
  %virt.0 = load %struct._tagTreeCCVirtual*, %struct._tagTreeCCVirtual** %virt.0.in.be, align 8
  %14 = icmp eq %struct._tagTreeCCVirtual* %virt.0, null
  br i1 %14, label %._crit_edge.15.loopexit, label %9

; <label>:15                                      ; preds = %9
  %16 = getelementptr inbounds %struct._tagTreeCCVirtual, %struct._tagTreeCCVirtual* %virt.012, i64 0, i32 1
  %17 = load i8*, i8** %16, align 8, !tbaa !66
  %18 = load i8*, i8** %8, align 8, !tbaa !36
  %19 = load i8*, i8** %10, align 8, !tbaa !39
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.102.195, i64 0, i64 0), i8* %17, i8* %18, i8* %19) #2
  %20 = getelementptr inbounds %struct._tagTreeCCOperationCase, %struct._tagTreeCCOperationCase* %12, i64 0, i32 2
  %21 = load %struct._tagTreeCCOperation*, %struct._tagTreeCCOperation** %20, align 8, !tbaa !49
  %22 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %21, i64 0, i32 4
  %param.0.6 = load %struct._tagTreeCCParam*, %struct._tagTreeCCParam** %22, align 8
  %23 = icmp eq %struct._tagTreeCCParam* %param.0.6, null
  br i1 %23, label %._crit_edge, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %15
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %40
  %param.010 = phi %struct._tagTreeCCParam* [ %param.0, %40 ], [ %param.0.6, %.lr.ph.preheader ]
  %num.09 = phi i32 [ %num.3, %40 ], [ 1, %.lr.ph.preheader ]
  %first.08 = phi i32 [ 0, %40 ], [ 1, %.lr.ph.preheader ]
  %needComma.07 = phi i32 [ %needComma.1, %40 ], [ 0, %.lr.ph.preheader ]
  %24 = icmp eq i32 %needComma.07, 0
  br i1 %24, label %26, label %25

; <label>:25                                      ; preds = %.lr.ph
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.35.196, i64 0, i64 0)) #2
  br label %26

; <label>:26                                      ; preds = %.lr.ph, %25
  %27 = icmp eq i32 %first.08, 0
  %28 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.010, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8, !tbaa !41
  %30 = icmp ne i8* %29, null
  br i1 %27, label %34, label %31

; <label>:31                                      ; preds = %26
  %32 = zext i1 %30 to i32
  %33 = xor i32 %32, 1
  %num.0. = add nsw i32 %33, %num.09
  br label %40

; <label>:34                                      ; preds = %26
  %35 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.010, i64 0, i32 1
  %36 = load i8*, i8** %35, align 8, !tbaa !47
  br i1 %30, label %37, label %38

; <label>:37                                      ; preds = %34
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.36.197, i64 0, i64 0), i8* %36, i8* %29) #2
  br label %40

; <label>:38                                      ; preds = %34
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.60.198, i64 0, i64 0), i8* %36, i32 %num.09) #2
  %39 = add nsw i32 %num.09, 1
  br label %40

; <label>:40                                      ; preds = %37, %38, %31
  %needComma.1 = phi i32 [ %needComma.07, %31 ], [ 1, %38 ], [ 1, %37 ]
  %num.3 = phi i32 [ %num.0., %31 ], [ %39, %38 ], [ %num.09, %37 ]
  %41 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.010, i64 0, i32 4
  %param.0 = load %struct._tagTreeCCParam*, %struct._tagTreeCCParam** %41, align 8
  %42 = icmp eq %struct._tagTreeCCParam* %param.0, null
  br i1 %42, label %._crit_edge.loopexit, label %.lr.ph

._crit_edge.loopexit:                             ; preds = %40
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %15
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.73.176, i64 0, i64 0)) #2
  %43 = load %struct._tagTreeCCParam*, %struct._tagTreeCCParam** %22, align 8, !tbaa !68
  %44 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %43, i64 0, i32 0
  %45 = load i8*, i8** %44, align 8, !tbaa !41
  %46 = icmp eq i8* %45, null
  br i1 %46, label %50, label %47

; <label>:47                                      ; preds = %._crit_edge
  %48 = tail call i32 @strcmp(i8* %45, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.103.199, i64 0, i64 0)) #2
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %57

; <label>:50                                      ; preds = %47, %._crit_edge
  %51 = getelementptr inbounds %struct._tagTreeCCOperationCase, %struct._tagTreeCCOperationCase* %12, i64 0, i32 7
  %52 = load i64, i64* %51, align 8, !tbaa !56
  %53 = getelementptr inbounds %struct._tagTreeCCOperationCase, %struct._tagTreeCCOperationCase* %12, i64 0, i32 6
  %54 = load i8*, i8** %53, align 8, !tbaa !57
  tail call void @TreeCCStreamLine(%struct._tagTreeCCStream* %stream, i64 %52, i8* %54) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.104.200, i64 0, i64 0)) #2
  %55 = getelementptr inbounds %struct._tagTreeCCOperationCase, %struct._tagTreeCCOperationCase* %12, i64 0, i32 1
  %56 = load i8*, i8** %55, align 8, !tbaa !58
  tail call void @TreeCCStreamCode(%struct._tagTreeCCStream* %stream, i8* %56) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.105.166, i64 0, i64 0)) #2
  tail call void @TreeCCStreamFixLine(%struct._tagTreeCCStream* %stream) #2
  br label %65

; <label>:57                                      ; preds = %47
  %58 = load i8*, i8** %8, align 8, !tbaa !36
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.106.201, i64 0, i64 0), i8* %58, i8* %45) #2
  %59 = getelementptr inbounds %struct._tagTreeCCOperationCase, %struct._tagTreeCCOperationCase* %12, i64 0, i32 7
  %60 = load i64, i64* %59, align 8, !tbaa !56
  %61 = getelementptr inbounds %struct._tagTreeCCOperationCase, %struct._tagTreeCCOperationCase* %12, i64 0, i32 6
  %62 = load i8*, i8** %61, align 8, !tbaa !57
  tail call void @TreeCCStreamLine(%struct._tagTreeCCStream* %stream, i64 %60, i8* %62) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.107.202, i64 0, i64 0)) #2
  %63 = getelementptr inbounds %struct._tagTreeCCOperationCase, %struct._tagTreeCCOperationCase* %12, i64 0, i32 1
  %64 = load i8*, i8** %63, align 8, !tbaa !58
  tail call void @TreeCCStreamCodeIndent(%struct._tagTreeCCStream* %stream, i8* %64, i32 1) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.105.166, i64 0, i64 0)) #2
  tail call void @TreeCCStreamFixLine(%struct._tagTreeCCStream* %stream) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.105.166, i64 0, i64 0)) #2
  br label %65

; <label>:65                                      ; preds = %57, %50
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.159, i64 0, i64 0)) #2
  br label %.backedge

._crit_edge.15.loopexit:                          ; preds = %.backedge
  br label %._crit_edge.15

._crit_edge.15:                                   ; preds = %._crit_edge.15.loopexit, %5
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @ImplementCreateFuncs.210(%struct._tagTreeCCContext* nocapture readonly %context, %struct._tagTreeCCNode* nocapture readonly %node) #0 {
  %1 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 5
  %2 = load i32, i32* %1, align 4, !tbaa !34
  %3 = and i32 %2, 26
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %20

; <label>:5                                       ; preds = %0
  %6 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 7
  %7 = load %struct._tagTreeCCStream*, %struct._tagTreeCCStream** %6, align 8, !tbaa !32
  %8 = icmp eq %struct._tagTreeCCStream* %7, null
  br i1 %8, label %9, label %12

; <label>:9                                       ; preds = %5
  %10 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 5
  %11 = load %struct._tagTreeCCStream*, %struct._tagTreeCCStream** %10, align 8, !tbaa !33
  br label %12

; <label>:12                                      ; preds = %5, %9
  %stream.0 = phi %struct._tagTreeCCStream* [ %11, %9 ], [ %7, %5 ]
  %13 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 4
  %14 = load i8*, i8** %13, align 8, !tbaa !36
  %15 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 10
  %16 = load i8*, i8** %15, align 8, !tbaa !31
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.0, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.72.211, i64 0, i64 0), i8* %14, i8* %16, i8* %14) #2
  %17 = tail call fastcc i32 @FactoryCreateParams(%struct._tagTreeCCStream* %stream.0, %struct._tagTreeCCNode* %node)
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.73.176, i64 0, i64 0)) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.62.168, i64 0, i64 0)) #2
  %18 = load i8*, i8** %13, align 8, !tbaa !36
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.0, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.74.212, i64 0, i64 0), i8* %18) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.75.213, i64 0, i64 0)) #2
  %19 = load i8*, i8** %13, align 8, !tbaa !36
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.0, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.76.214, i64 0, i64 0), i8* %19) #2
  tail call fastcc void @FactoryInvokeParams(%struct._tagTreeCCStream* %stream.0, %struct._tagTreeCCNode* %node)
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.34.215, i64 0, i64 0)) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.77.170, i64 0, i64 0)) #2
  br label %20

; <label>:20                                      ; preds = %0, %12
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @FactoryCreateParams(%struct._tagTreeCCStream* %stream, %struct._tagTreeCCNode* nocapture readonly %node) #0 {
  %1 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 0
  %2 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %1, align 8, !tbaa !38
  %3 = icmp eq %struct._tagTreeCCNode* %2, null
  br i1 %3, label %6, label %4

; <label>:4                                       ; preds = %0
  %5 = tail call fastcc i32 @FactoryCreateParams(%struct._tagTreeCCStream* %stream, %struct._tagTreeCCNode* %2)
  br label %6

; <label>:6                                       ; preds = %0, %4
  %.0 = phi i32 [ %5, %4 ], [ 0, %0 ]
  %7 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 10
  %field.0.1 = load %struct._tagTreeCCField*, %struct._tagTreeCCField** %7, align 8
  %8 = icmp eq %struct._tagTreeCCField* %field.0.1, null
  br i1 %8, label %._crit_edge, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %6
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %21
  %field.03 = phi %struct._tagTreeCCField* [ %field.0, %21 ], [ %field.0.1, %.lr.ph.preheader ]
  %.12 = phi i32 [ %.2, %21 ], [ %.0, %.lr.ph.preheader ]
  %9 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.03, i64 0, i32 3
  %10 = load i32, i32* %9, align 4, !tbaa !61
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %21

; <label>:13                                      ; preds = %.lr.ph
  %14 = icmp eq i32 %.12, 0
  br i1 %14, label %16, label %15

; <label>:15                                      ; preds = %13
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.35.196, i64 0, i64 0)) #2
  br label %16

; <label>:16                                      ; preds = %13, %15
  %17 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.03, i64 0, i32 1
  %18 = load i8*, i8** %17, align 8, !tbaa !63
  %19 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.03, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8, !tbaa !64
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.36.197, i64 0, i64 0), i8* %18, i8* %20) #2
  br label %21

; <label>:21                                      ; preds = %16, %.lr.ph
  %.2 = phi i32 [ 1, %16 ], [ %.12, %.lr.ph ]
  %22 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.03, i64 0, i32 6
  %field.0 = load %struct._tagTreeCCField*, %struct._tagTreeCCField** %22, align 8
  %23 = icmp eq %struct._tagTreeCCField* %field.0, null
  br i1 %23, label %._crit_edge.loopexit, label %.lr.ph

._crit_edge.loopexit:                             ; preds = %21
  %.2.lcssa = phi i32 [ %.2, %21 ]
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %6
  %.1.lcssa = phi i32 [ %.0, %6 ], [ %.2.lcssa, %._crit_edge.loopexit ]
  ret i32 %.1.lcssa
}

; Function Attrs: nounwind uwtable
define internal fastcc void @FactoryInvokeParams(%struct._tagTreeCCStream* %stream, %struct._tagTreeCCNode* nocapture readonly %node) #0 {
  %1 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 0
  %2 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %1, align 8, !tbaa !38
  %3 = icmp eq %struct._tagTreeCCNode* %2, null
  br i1 %3, label %5, label %4

; <label>:4                                       ; preds = %0
  tail call fastcc void @FactoryInvokeParams(%struct._tagTreeCCStream* %stream, %struct._tagTreeCCNode* %2)
  br label %5

; <label>:5                                       ; preds = %0, %4
  %6 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 10
  %field.0.1 = load %struct._tagTreeCCField*, %struct._tagTreeCCField** %6, align 8
  %7 = icmp eq %struct._tagTreeCCField* %field.0.1, null
  br i1 %7, label %._crit_edge, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %5
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %15
  %field.02 = phi %struct._tagTreeCCField* [ %field.0, %15 ], [ %field.0.1, %.lr.ph.preheader ]
  %8 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.02, i64 0, i32 3
  %9 = load i32, i32* %8, align 4, !tbaa !61
  %10 = and i32 %9, 1
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %15

; <label>:12                                      ; preds = %.lr.ph
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.35.196, i64 0, i64 0)) #2
  %13 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.02, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8, !tbaa !64
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.78.203, i64 0, i64 0), i8* %14) #2
  br label %15

; <label>:15                                      ; preds = %12, %.lr.ph
  %16 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.02, i64 0, i32 6
  %field.0 = load %struct._tagTreeCCField*, %struct._tagTreeCCField** %16, align 8
  %17 = icmp eq %struct._tagTreeCCField* %field.0, null
  br i1 %17, label %._crit_edge.loopexit, label %.lr.ph

._crit_edge.loopexit:                             ; preds = %15
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %5
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @CreateParams.239(%struct._tagTreeCCStream* %stream, %struct._tagTreeCCNode* nocapture readonly %node, i32 %needComma) #0 {
  %1 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 0
  %2 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %1, align 8, !tbaa !38
  %3 = icmp eq %struct._tagTreeCCNode* %2, null
  br i1 %3, label %6, label %4

; <label>:4                                       ; preds = %0
  %5 = tail call fastcc i32 @CreateParams.239(%struct._tagTreeCCStream* %stream, %struct._tagTreeCCNode* %2, i32 %needComma)
  br label %6

; <label>:6                                       ; preds = %0, %4
  %.0 = phi i32 [ %5, %4 ], [ %needComma, %0 ]
  %7 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 10
  %field.0.1 = load %struct._tagTreeCCField*, %struct._tagTreeCCField** %7, align 8
  %8 = icmp eq %struct._tagTreeCCField* %field.0.1, null
  br i1 %8, label %._crit_edge, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %6
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %21
  %field.03 = phi %struct._tagTreeCCField* [ %field.0, %21 ], [ %field.0.1, %.lr.ph.preheader ]
  %.12 = phi i32 [ %.2, %21 ], [ %.0, %.lr.ph.preheader ]
  %9 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.03, i64 0, i32 3
  %10 = load i32, i32* %9, align 4, !tbaa !61
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %21

; <label>:13                                      ; preds = %.lr.ph
  %14 = icmp eq i32 %.12, 0
  br i1 %14, label %16, label %15

; <label>:15                                      ; preds = %13
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.35.196, i64 0, i64 0)) #2
  br label %16

; <label>:16                                      ; preds = %13, %15
  %17 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.03, i64 0, i32 1
  %18 = load i8*, i8** %17, align 8, !tbaa !63
  %19 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.03, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8, !tbaa !64
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.36.197, i64 0, i64 0), i8* %18, i8* %20) #2
  br label %21

; <label>:21                                      ; preds = %16, %.lr.ph
  %.2 = phi i32 [ 1, %16 ], [ %.12, %.lr.ph ]
  %22 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.03, i64 0, i32 6
  %field.0 = load %struct._tagTreeCCField*, %struct._tagTreeCCField** %22, align 8
  %23 = icmp eq %struct._tagTreeCCField* %field.0, null
  br i1 %23, label %._crit_edge.loopexit, label %.lr.ph

._crit_edge.loopexit:                             ; preds = %21
  %.2.lcssa = phi i32 [ %.2, %21 ]
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %6
  %.1.lcssa = phi i32 [ %.0, %6 ], [ %.2.lcssa, %._crit_edge.loopexit ]
  ret i32 %.1.lcssa
}

; Function Attrs: nounwind uwtable
define internal fastcc void @DeclareVirtuals.242(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %stream, %struct._tagTreeCCNode* nocapture readonly %node, %struct._tagTreeCCNode* %actualNode) #0 {
  %1 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 0
  %2 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %1, align 8, !tbaa !38
  %3 = icmp eq %struct._tagTreeCCNode* %2, null
  br i1 %3, label %5, label %4

; <label>:4                                       ; preds = %0
  tail call fastcc void @DeclareVirtuals.242(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %stream, %struct._tagTreeCCNode* %2, %struct._tagTreeCCNode* %actualNode)
  br label %5

; <label>:5                                       ; preds = %0, %4
  %6 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 11
  %virt.0.7 = load %struct._tagTreeCCVirtual*, %struct._tagTreeCCVirtual** %6, align 8
  %7 = icmp eq %struct._tagTreeCCVirtual* %virt.0.7, null
  br i1 %7, label %._crit_edge.12, label %.lr.ph11.preheader

.lr.ph11.preheader:                               ; preds = %5
  br label %.lr.ph11

.lr.ph11:                                         ; preds = %.lr.ph11.preheader, %.thread2
  %virt.08 = phi %struct._tagTreeCCVirtual* [ %virt.0, %.thread2 ], [ %virt.0.7, %.lr.ph11.preheader ]
  %8 = getelementptr inbounds %struct._tagTreeCCVirtual, %struct._tagTreeCCVirtual* %virt.08, i64 0, i32 0
  %9 = load i8*, i8** %8, align 8, !tbaa !39
  %10 = tail call %struct._tagTreeCCOperationCase* @TreeCCOperationFindCase(%struct._tagTreeCCContext* %context, %struct._tagTreeCCNode* %actualNode, i8* %9) #2
  %11 = icmp eq %struct._tagTreeCCOperationCase* %10, null
  br i1 %11, label %.preheader.preheader, label %.loopexit

.preheader.preheader:                             ; preds = %.lr.ph11
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %13
  %actualNode.pn = phi %struct._tagTreeCCNode* [ %tempNode.0, %13 ], [ %actualNode, %.preheader.preheader ]
  %tempNode.0.in = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %actualNode.pn, i64 0, i32 0
  %tempNode.0 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %tempNode.0.in, align 8
  %12 = icmp eq %struct._tagTreeCCNode* %tempNode.0, null
  br i1 %12, label %.loopexit.loopexit, label %13

; <label>:13                                      ; preds = %.preheader
  %14 = load i8*, i8** %8, align 8, !tbaa !39
  %15 = tail call %struct._tagTreeCCOperationCase* @TreeCCOperationFindCase(%struct._tagTreeCCContext* %context, %struct._tagTreeCCNode* %tempNode.0, i8* %14) #2
  %16 = icmp eq %struct._tagTreeCCOperationCase* %15, null
  br i1 %16, label %.preheader, label %.thread2.loopexit

.loopexit.loopexit:                               ; preds = %.preheader
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %.lr.ph11
  %abstractCase.1.ph = phi i32 [ 0, %.lr.ph11 ], [ 1, %.loopexit.loopexit ]
  %17 = getelementptr inbounds %struct._tagTreeCCVirtual, %struct._tagTreeCCVirtual* %virt.08, i64 0, i32 1
  %18 = load i8*, i8** %17, align 8, !tbaa !66
  %19 = load i8*, i8** %8, align 8, !tbaa !39
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.59.246, i64 0, i64 0), i8* %18, i8* %19) #2
  %20 = getelementptr inbounds %struct._tagTreeCCVirtual, %struct._tagTreeCCVirtual* %virt.08, i64 0, i32 2
  %param.0.3 = load %struct._tagTreeCCParam*, %struct._tagTreeCCParam** %20, align 8
  %21 = icmp eq %struct._tagTreeCCParam* %param.0.3, null
  br i1 %21, label %._crit_edge, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %.loopexit
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %33
  %param.06 = phi %struct._tagTreeCCParam* [ %param.0, %33 ], [ %param.0.3, %.lr.ph.preheader ]
  %needComma.05 = phi i32 [ %needComma.1, %33 ], [ 0, %.lr.ph.preheader ]
  %num.04 = phi i32 [ %num.1, %33 ], [ 1, %.lr.ph.preheader ]
  %22 = icmp eq i32 %needComma.05, 0
  br i1 %22, label %24, label %23

; <label>:23                                      ; preds = %.lr.ph
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.35.196, i64 0, i64 0)) #2
  br label %24

; <label>:24                                      ; preds = %.lr.ph, %23
  %needComma.1 = phi i32 [ %needComma.05, %23 ], [ 1, %.lr.ph ]
  %25 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.06, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8, !tbaa !41
  %27 = icmp eq i8* %26, null
  %28 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.06, i64 0, i32 1
  %29 = load i8*, i8** %28, align 8, !tbaa !47
  br i1 %27, label %31, label %30

; <label>:30                                      ; preds = %24
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.36.197, i64 0, i64 0), i8* %29, i8* %26) #2
  br label %33

; <label>:31                                      ; preds = %24
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.60.198, i64 0, i64 0), i8* %29, i32 %num.04) #2
  %32 = add nsw i32 %num.04, 1
  br label %33

; <label>:33                                      ; preds = %31, %30
  %num.1 = phi i32 [ %num.04, %30 ], [ %32, %31 ]
  %34 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.06, i64 0, i32 4
  %param.0 = load %struct._tagTreeCCParam*, %struct._tagTreeCCParam** %34, align 8
  %35 = icmp eq %struct._tagTreeCCParam* %param.0, null
  br i1 %35, label %._crit_edge.loopexit, label %.lr.ph

._crit_edge.loopexit:                             ; preds = %33
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %.loopexit
  %36 = icmp eq i32 %abstractCase.1.ph, 0
  br i1 %36, label %38, label %37

; <label>:37                                      ; preds = %._crit_edge
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.33.247, i64 0, i64 0)) #2
  br label %.thread2

; <label>:38                                      ; preds = %._crit_edge
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.34.215, i64 0, i64 0)) #2
  br label %.thread2

.thread2.loopexit:                                ; preds = %13
  br label %.thread2

.thread2:                                         ; preds = %.thread2.loopexit, %37, %38
  %39 = getelementptr inbounds %struct._tagTreeCCVirtual, %struct._tagTreeCCVirtual* %virt.08, i64 0, i32 4
  %virt.0 = load %struct._tagTreeCCVirtual*, %struct._tagTreeCCVirtual** %39, align 8
  %40 = icmp eq %struct._tagTreeCCVirtual* %virt.0, null
  br i1 %40, label %._crit_edge.12.loopexit, label %.lr.ph11

._crit_edge.12.loopexit:                          ; preds = %.thread2
  br label %._crit_edge.12

._crit_edge.12:                                   ; preds = %._crit_edge.12.loopexit, %5
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @DeclareCreateFuncs.259(%struct._tagTreeCCContext* nocapture readonly %context, %struct._tagTreeCCNode* nocapture readonly %node) #0 {
  %1 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 5
  %2 = load i32, i32* %1, align 4, !tbaa !34
  %3 = and i32 %2, 26
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %27

; <label>:5                                       ; preds = %0
  %6 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 6
  %7 = load %struct._tagTreeCCStream*, %struct._tagTreeCCStream** %6, align 8, !tbaa !29
  %8 = icmp eq %struct._tagTreeCCStream* %7, null
  br i1 %8, label %9, label %12

; <label>:9                                       ; preds = %5
  %10 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 4
  %11 = load %struct._tagTreeCCStream*, %struct._tagTreeCCStream** %10, align 8, !tbaa !28
  br label %12

; <label>:12                                      ; preds = %5, %9
  %stream.0 = phi %struct._tagTreeCCStream* [ %11, %9 ], [ %7, %5 ]
  %13 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 8
  %14 = load i16, i16* %13, align 8
  %15 = and i16 %14, 96
  %16 = icmp eq i16 %15, 0
  %17 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 4
  %18 = load i8*, i8** %17, align 8, !tbaa !36
  br i1 %16, label %20, label %19

; <label>:19                                      ; preds = %12
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.31.269, i64 0, i64 0), i8* %18, i8* %18) #2
  br label %21

; <label>:20                                      ; preds = %12
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.32.270, i64 0, i64 0), i8* %18, i8* %18) #2
  br label %21

; <label>:21                                      ; preds = %20, %19
  %22 = tail call fastcc i32 @FactoryCreateParams(%struct._tagTreeCCStream* %stream.0, %struct._tagTreeCCNode* %node)
  %23 = load i16, i16* %13, align 8
  %.mask2 = and i16 %23, 64
  %24 = icmp eq i16 %.mask2, 0
  br i1 %24, label %26, label %25

; <label>:25                                      ; preds = %21
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.33.247, i64 0, i64 0)) #2
  br label %27

; <label>:26                                      ; preds = %21
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.34.215, i64 0, i64 0)) #2
  br label %27

; <label>:27                                      ; preds = %25, %26, %0
  ret void
}

; Function Attrs: nounwind uwtable
define void @TreeCCGenerateCSharp(%struct._tagTreeCCContext* %context) #0 {
  %1 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 3
  %stream.0.2.i = load %struct._tagTreeCCStream*, %struct._tagTreeCCStream** %1, align 8
  %2 = icmp eq %struct._tagTreeCCStream* %stream.0.2.i, null
  br i1 %2, label %WriteCSharpHeaders.exit, label %.lr.ph.i

.lr.ph.i:                                         ; preds = %0
  %3 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 11
  br label %4

; <label>:4                                       ; preds = %20, %.lr.ph.i
  %stream.03.i = phi %struct._tagTreeCCStream* [ %stream.0.2.i, %.lr.ph.i ], [ %stream.0.i, %20 ]
  %5 = getelementptr inbounds %struct._tagTreeCCStream, %struct._tagTreeCCStream* %stream.03.i, i64 0, i32 7
  %6 = load i8, i8* %5, align 4
  %.mask.i = and i8 %6, 4
  %7 = icmp eq i8 %.mask.i, 0
  br i1 %7, label %8, label %15

; <label>:8                                       ; preds = %4
  %9 = getelementptr inbounds %struct._tagTreeCCStream, %struct._tagTreeCCStream* %stream.03.i, i64 0, i32 2
  %10 = load i8*, i8** %9, align 8, !tbaa !69
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.03.i, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.276, i64 0, i64 0), i8* %10) #2
  %11 = load i8*, i8** %3, align 8, !tbaa !8
  %12 = icmp eq i8* %11, null
  br i1 %12, label %14, label %13

; <label>:13                                      ; preds = %8
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.03.i, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1.277, i64 0, i64 0), i8* %11) #2
  br label %14

; <label>:14                                      ; preds = %13, %8
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.03.i, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2.278, i64 0, i64 0)) #2
  tail call void @TreeCCStreamSourceTopCS(%struct._tagTreeCCStream* %stream.03.i) #2
  %.pre.i = load i8, i8* %5, align 4
  br label %15

; <label>:15                                      ; preds = %14, %4
  %16 = phi i8 [ %6, %4 ], [ %.pre.i, %14 ]
  %.mask1.i = and i8 %16, 8
  %17 = icmp eq i8 %.mask1.i, 0
  br i1 %17, label %20, label %18

; <label>:18                                      ; preds = %15
  %19 = and i8 %16, -17
  store i8 %19, i8* %5, align 4
  br label %20

; <label>:20                                      ; preds = %18, %15
  %21 = getelementptr inbounds %struct._tagTreeCCStream, %struct._tagTreeCCStream* %stream.03.i, i64 0, i32 10
  %stream.0.i = load %struct._tagTreeCCStream*, %struct._tagTreeCCStream** %21, align 8
  %22 = icmp eq %struct._tagTreeCCStream* %stream.0.i, null
  br i1 %22, label %WriteCSharpHeaders.exit.loopexit, label %4

WriteCSharpHeaders.exit.loopexit:                 ; preds = %20
  br label %WriteCSharpHeaders.exit

WriteCSharpHeaders.exit:                          ; preds = %WriteCSharpHeaders.exit.loopexit, %0
  tail call void @TreeCCNodeVisitAll(%struct._tagTreeCCContext* %context, void (%struct._tagTreeCCContext*, %struct._tagTreeCCNode*)* nonnull @DeclareTypeDefs.279) #2
  %23 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 7
  %24 = load %struct._tagTreeCCStream*, %struct._tagTreeCCStream** %23, align 8, !tbaa !32
  %25 = icmp eq %struct._tagTreeCCStream* %24, null
  br i1 %25, label %27, label %26

; <label>:26                                      ; preds = %WriteCSharpHeaders.exit
  tail call fastcc void @ImplementStateType.280(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %24)
  br label %30

; <label>:27                                      ; preds = %WriteCSharpHeaders.exit
  %28 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 5
  %29 = load %struct._tagTreeCCStream*, %struct._tagTreeCCStream** %28, align 8, !tbaa !33
  tail call fastcc void @ImplementStateType.280(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %29)
  br label %30

; <label>:30                                      ; preds = %27, %26
  tail call void @TreeCCNodeVisitAll(%struct._tagTreeCCContext* %context, void (%struct._tagTreeCCContext*, %struct._tagTreeCCNode*)* nonnull @BuildTypeDecls.281) #2
  tail call void @TreeCCGenerateNonVirtuals(%struct._tagTreeCCContext* %context, %struct.TreeCCNonVirtual* nonnull @TreeCCNonVirtualFuncsJava) #2
  %stream.0.4.i = load %struct._tagTreeCCStream*, %struct._tagTreeCCStream** %1, align 8
  %31 = icmp eq %struct._tagTreeCCStream* %stream.0.4.i, null
  br i1 %31, label %WriteCSharpFooters.exit, label %.lr.ph.i.1

.lr.ph.i.1:                                       ; preds = %30
  %32 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 11
  br label %33

; <label>:33                                      ; preds = %45, %.lr.ph.i.1
  %stream.05.i = phi %struct._tagTreeCCStream* [ %stream.0.4.i, %.lr.ph.i.1 ], [ %stream.0.i.3, %45 ]
  %34 = getelementptr inbounds %struct._tagTreeCCStream, %struct._tagTreeCCStream* %stream.05.i, i64 0, i32 7
  %35 = load i8, i8* %34, align 4
  %36 = and i8 %35, 24
  %37 = icmp eq i8 %36, 8
  br i1 %37, label %38, label %39

; <label>:38                                      ; preds = %33
  tail call void @TreeCCStreamClear(%struct._tagTreeCCStream* %stream.05.i) #2
  br label %45

; <label>:39                                      ; preds = %33
  %.mask1.i.2 = and i8 %35, 4
  %40 = icmp eq i8 %.mask1.i.2, 0
  br i1 %40, label %41, label %45

; <label>:41                                      ; preds = %39
  tail call void @TreeCCStreamSourceBottom(%struct._tagTreeCCStream* %stream.05.i) #2
  %42 = load i8*, i8** %32, align 8, !tbaa !8
  %43 = icmp eq i8* %42, null
  br i1 %43, label %45, label %44

; <label>:44                                      ; preds = %41
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.05.i, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.80.282, i64 0, i64 0)) #2
  br label %45

; <label>:45                                      ; preds = %44, %41, %39, %38
  %46 = getelementptr inbounds %struct._tagTreeCCStream, %struct._tagTreeCCStream* %stream.05.i, i64 0, i32 10
  %stream.0.i.3 = load %struct._tagTreeCCStream*, %struct._tagTreeCCStream** %46, align 8
  %47 = icmp eq %struct._tagTreeCCStream* %stream.0.i.3, null
  br i1 %47, label %WriteCSharpFooters.exit.loopexit, label %33

WriteCSharpFooters.exit.loopexit:                 ; preds = %45
  br label %WriteCSharpFooters.exit

WriteCSharpFooters.exit:                          ; preds = %WriteCSharpFooters.exit.loopexit, %30
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @DeclareTypeDefs.279(%struct._tagTreeCCContext* nocapture readonly %context, %struct._tagTreeCCNode* nocapture readonly %node) #0 {
  %1 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 5
  %2 = load i32, i32* %1, align 4, !tbaa !34
  %3 = and i32 %2, 8
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %28, label %5

; <label>:5                                       ; preds = %0
  %6 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 14
  %7 = load %struct._tagTreeCCStream*, %struct._tagTreeCCStream** %6, align 8, !tbaa !48
  %8 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 8
  %9 = load i16, i16* %8, align 8
  %.mask = and i16 %9, 1024
  %10 = icmp eq i16 %.mask, 0
  %11 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 4
  %12 = load i8*, i8** %11, align 8, !tbaa !36
  br i1 %10, label %14, label %13

; <label>:13                                      ; preds = %5
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %7, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3.363, i64 0, i64 0), i8* %12) #2
  br label %15

; <label>:14                                      ; preds = %5
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %7, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.4.364, i64 0, i64 0), i8* %12) #2
  br label %15

; <label>:15                                      ; preds = %14, %13
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %7, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.365, i64 0, i64 0)) #2
  %16 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 1
  %child.0.1 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %16, align 8
  %17 = icmp eq %struct._tagTreeCCNode* %child.0.1, null
  br i1 %17, label %._crit_edge, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %15
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %25
  %child.02 = phi %struct._tagTreeCCNode* [ %child.0, %25 ], [ %child.0.1, %.lr.ph.preheader ]
  %18 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %child.02, i64 0, i32 5
  %19 = load i32, i32* %18, align 4, !tbaa !34
  %20 = and i32 %19, 16
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %25, label %22

; <label>:22                                      ; preds = %.lr.ph
  %23 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %child.02, i64 0, i32 4
  %24 = load i8*, i8** %23, align 8, !tbaa !36
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %7, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6.366, i64 0, i64 0), i8* %24) #2
  br label %25

; <label>:25                                      ; preds = %.lr.ph, %22
  %26 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %child.02, i64 0, i32 3
  %child.0 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %26, align 8
  %27 = icmp eq %struct._tagTreeCCNode* %child.0, null
  br i1 %27, label %._crit_edge.loopexit, label %.lr.ph

._crit_edge.loopexit:                             ; preds = %25
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %15
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %7, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7.330, i64 0, i64 0)) #2
  br label %28

; <label>:28                                      ; preds = %0, %._crit_edge
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @ImplementStateType.280(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %stream) #0 {
  %1 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 8
  %2 = load i16, i16* %1, align 8
  %3 = and i16 %2, 72
  %4 = icmp eq i16 %3, 72
  %.mask1 = and i16 %2, 1024
  %5 = icmp eq i16 %.mask1, 0
  %6 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 10
  %7 = load i8*, i8** %6, align 8, !tbaa !31
  br i1 %4, label %8, label %11

; <label>:8                                       ; preds = %0
  br i1 %5, label %10, label %9

; <label>:9                                       ; preds = %8
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.8.342, i64 0, i64 0), i8* %7) #2
  br label %14

; <label>:10                                      ; preds = %8
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.343, i64 0, i64 0), i8* %7) #2
  br label %14

; <label>:11                                      ; preds = %0
  br i1 %5, label %13, label %12

; <label>:12                                      ; preds = %11
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.10.344, i64 0, i64 0), i8* %7) #2
  br label %14

; <label>:13                                      ; preds = %11
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.11.345, i64 0, i64 0), i8* %7) #2
  br label %14

; <label>:14                                      ; preds = %12, %13, %9, %10
  %15 = load i16, i16* %1, align 8
  %.mask2 = and i16 %15, 8
  %16 = icmp eq i16 %.mask2, 0
  br i1 %16, label %17, label %21

; <label>:17                                      ; preds = %14
  %18 = load i8*, i8** %6, align 8, !tbaa !31
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.12.346, i64 0, i64 0), i8* %18) #2
  %19 = load i8*, i8** %6, align 8, !tbaa !31
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.13.347, i64 0, i64 0), i8* %19) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14.310, i64 0, i64 0)) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.15.348, i64 0, i64 0)) #2
  %20 = load i8*, i8** %6, align 8, !tbaa !31
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.16.349, i64 0, i64 0), i8* %20) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.17.350, i64 0, i64 0)) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.18.317, i64 0, i64 0)) #2
  %.pre = load i16, i16* %1, align 8
  br label %21

; <label>:21                                      ; preds = %14, %17
  %22 = phi i16 [ %15, %14 ], [ %.pre, %17 ]
  %.mask3 = and i16 %22, 8
  %23 = icmp eq i16 %.mask3, 0
  %24 = load i8*, i8** %6, align 8, !tbaa !31
  br i1 %23, label %26, label %25

; <label>:25                                      ; preds = %21
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.19.351, i64 0, i64 0), i8* %24) #2
  br label %27

; <label>:26                                      ; preds = %21
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.20.352, i64 0, i64 0), i8* %24) #2
  br label %27

; <label>:27                                      ; preds = %26, %25
  %28 = load i16, i16* %1, align 8
  %.mask4 = and i16 %28, 8
  %29 = icmp eq i16 %.mask4, 0
  br i1 %29, label %31, label %30

; <label>:30                                      ; preds = %27
  tail call void @TreeCCNodeVisitAll(%struct._tagTreeCCContext* %context, void (%struct._tagTreeCCContext*, %struct._tagTreeCCNode*)* nonnull @ImplementCreateFuncs.353) #2
  %.pre9 = load i16, i16* %1, align 8
  br label %31

; <label>:31                                      ; preds = %27, %30
  %32 = phi i16 [ %28, %27 ], [ %.pre9, %30 ]
  %.mask5 = and i16 %32, 2
  %33 = icmp eq i16 %.mask5, 0
  br i1 %33, label %35, label %34

; <label>:34                                      ; preds = %31
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.21.354, i64 0, i64 0)) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.22.355, i64 0, i64 0)) #2
  br label %35

; <label>:35                                      ; preds = %31, %34
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7.330, i64 0, i64 0)) #2
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @BuildTypeDecls.281(%struct._tagTreeCCContext* %context, %struct._tagTreeCCNode* %node) #0 {
  %1 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 5
  %2 = load i32, i32* %1, align 4, !tbaa !34
  %3 = and i32 %2, 24
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %134

; <label>:5                                       ; preds = %0
  %6 = tail call i32 @TreeCCNodeHasAbstracts(%struct._tagTreeCCContext* %context, %struct._tagTreeCCNode* %node) #2
  %7 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 8
  %8 = load i16, i16* %7, align 8
  %.mask = and i16 %8, 1024
  %9 = icmp eq i16 %.mask, 0
  %. = select i1 %9, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.33.283, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.32.284, i64 0, i64 0)
  %10 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 14
  %11 = load %struct._tagTreeCCStream*, %struct._tagTreeCCStream** %10, align 8, !tbaa !48
  %12 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 0
  %13 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %12, align 8, !tbaa !38
  %14 = icmp eq %struct._tagTreeCCNode* %13, null
  %15 = icmp ne i32 %6, 0
  br i1 %14, label %23, label %16

; <label>:16                                      ; preds = %5
  %17 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 4
  %18 = load i8*, i8** %17, align 8, !tbaa !36
  %19 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %13, i64 0, i32 4
  %20 = load i8*, i8** %19, align 8, !tbaa !36
  br i1 %15, label %21, label %22

; <label>:21                                      ; preds = %16
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %11, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.34.285, i64 0, i64 0), i8* %., i8* %18, i8* %20) #2
  br label %44

; <label>:22                                      ; preds = %16
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %11, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.35.286, i64 0, i64 0), i8* %., i8* %18, i8* %20) #2
  br label %44

; <label>:23                                      ; preds = %5
  %24 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 16
  %25 = load i8*, i8** %24, align 8, !tbaa !12
  %26 = icmp ne i8* %25, null
  %27 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 4
  %28 = load i8*, i8** %27, align 8, !tbaa !36
  br i1 %15, label %29, label %32

; <label>:29                                      ; preds = %23
  br i1 %26, label %30, label %31

; <label>:30                                      ; preds = %29
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %11, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.34.285, i64 0, i64 0), i8* %., i8* %28, i8* %25) #2
  br label %35

; <label>:31                                      ; preds = %29
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %11, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.36.287, i64 0, i64 0), i8* %., i8* %28) #2
  br label %35

; <label>:32                                      ; preds = %23
  br i1 %26, label %33, label %34

; <label>:33                                      ; preds = %32
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %11, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.35.286, i64 0, i64 0), i8* %., i8* %28, i8* %25) #2
  br label %35

; <label>:34                                      ; preds = %32
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %11, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.37.288, i64 0, i64 0), i8* %., i8* %28) #2
  br label %35

; <label>:35                                      ; preds = %33, %34, %30, %31
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %11, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.38.289, i64 0, i64 0)) #2
  %36 = load i16, i16* %7, align 8
  %.mask1 = and i16 %36, 2
  %37 = icmp eq i16 %.mask1, 0
  br i1 %37, label %39, label %38

; <label>:38                                      ; preds = %35
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %11, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.39.290, i64 0, i64 0)) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %11, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.40.291, i64 0, i64 0)) #2
  br label %39

; <label>:39                                      ; preds = %35, %38
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %11, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.41.292, i64 0, i64 0)) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %11, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.42.293, i64 0, i64 0)) #2
  %40 = load i16, i16* %7, align 8
  %.mask2 = and i16 %40, 2
  %41 = icmp eq i16 %.mask2, 0
  br i1 %41, label %43, label %42

; <label>:42                                      ; preds = %39
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %11, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.43.294, i64 0, i64 0)) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %11, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.44.295, i64 0, i64 0)) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %11, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.45.296, i64 0, i64 0)) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %11, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.46.297, i64 0, i64 0)) #2
  br label %43

; <label>:43                                      ; preds = %39, %42
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %11, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.41.292, i64 0, i64 0)) #2
  br label %44

; <label>:44                                      ; preds = %21, %22, %43
  %45 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %12, align 8, !tbaa !38
  %46 = icmp eq %struct._tagTreeCCNode* %45, null
  %47 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 6
  %48 = load i32, i32* %47, align 4, !tbaa !37
  br i1 %46, label %50, label %49

; <label>:49                                      ; preds = %44
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %11, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.47.298, i64 0, i64 0), i32 %48) #2
  br label %51

; <label>:50                                      ; preds = %44
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %11, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.48.299, i64 0, i64 0), i32 %48) #2
  br label %51

; <label>:51                                      ; preds = %50, %49
  %52 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 10
  %53 = load %struct._tagTreeCCField*, %struct._tagTreeCCField** %52, align 8, !tbaa !67
  %54 = icmp eq %struct._tagTreeCCField* %53, null
  br i1 %54, label %61, label %.lr.ph.i.preheader

.lr.ph.i.preheader:                               ; preds = %51
  br label %.lr.ph.i

.lr.ph.i:                                         ; preds = %.lr.ph.i.preheader, %.lr.ph.i
  %field.02.i = phi %struct._tagTreeCCField* [ %field.0.i, %.lr.ph.i ], [ %53, %.lr.ph.i.preheader ]
  %55 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.02.i, i64 0, i32 1
  %56 = load i8*, i8** %55, align 8, !tbaa !63
  %57 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.02.i, i64 0, i32 0
  %58 = load i8*, i8** %57, align 8, !tbaa !64
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %11, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.72.300, i64 0, i64 0), i8* %56, i8* %58) #2
  %59 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.02.i, i64 0, i32 6
  %field.0.i = load %struct._tagTreeCCField*, %struct._tagTreeCCField** %59, align 8
  %60 = icmp eq %struct._tagTreeCCField* %field.0.i, null
  br i1 %60, label %DeclareFields.exit, label %.lr.ph.i

DeclareFields.exit:                               ; preds = %.lr.ph.i
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %11, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.41.292, i64 0, i64 0)) #2
  br label %61

; <label>:61                                      ; preds = %51, %DeclareFields.exit
  %62 = load i16, i16* %7, align 8
  %.mask3 = and i16 %62, 8
  %63 = icmp eq i16 %.mask3, 0
  br i1 %63, label %64, label %68

; <label>:64                                      ; preds = %61
  %65 = load i32, i32* %1, align 4, !tbaa !34
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %.8 = select i1 %67, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.49.301, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.50.302, i64 0, i64 0)
  br label %68

; <label>:68                                      ; preds = %64, %61
  %constructorAccess.0 = phi i8* [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.49.301, i64 0, i64 0), %61 ], [ %.8, %64 ]
  %69 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 4
  %70 = load i8*, i8** %69, align 8, !tbaa !36
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %11, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.51.303, i64 0, i64 0), i8* %constructorAccess.0, i8* %70) #2
  %71 = load i16, i16* %7, align 8
  %.mask4 = and i16 %71, 8
  %72 = icmp eq i16 %.mask4, 0
  br i1 %72, label %76, label %73

; <label>:73                                      ; preds = %68
  %74 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 10
  %75 = load i8*, i8** %74, align 8, !tbaa !31
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %11, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.52.304, i64 0, i64 0), i8* %75) #2
  br label %76

; <label>:76                                      ; preds = %68, %73
  %needComma.0 = phi i32 [ 1, %73 ], [ 0, %68 ]
  %77 = tail call fastcc i32 @CreateParams.305(%struct._tagTreeCCStream* %11, %struct._tagTreeCCNode* %node, i32 %needComma.0)
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %11, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.27.306, i64 0, i64 0)) #2
  %78 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %12, align 8, !tbaa !38
  %79 = icmp eq %struct._tagTreeCCNode* %78, null
  br i1 %79, label %87, label %80

; <label>:80                                      ; preds = %76
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %11, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.53.307, i64 0, i64 0)) #2
  %81 = load i16, i16* %7, align 8
  %.mask7 = and i16 %81, 8
  %82 = icmp eq i16 %.mask7, 0
  br i1 %82, label %84, label %83

; <label>:83                                      ; preds = %80
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %11, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.54.308, i64 0, i64 0)) #2
  br label %84

; <label>:84                                      ; preds = %80, %83
  %needComma.1 = phi i32 [ 1, %83 ], [ 0, %80 ]
  %85 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %12, align 8, !tbaa !38
  %86 = tail call fastcc i32 @InheritParamsSource.309(%struct._tagTreeCCStream* %11, %struct._tagTreeCCNode* %85, i32 %needComma.1)
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %11, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.27.306, i64 0, i64 0)) #2
  br label %87

; <label>:87                                      ; preds = %76, %84
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %11, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14.310, i64 0, i64 0)) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %11, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.55.311, i64 0, i64 0)) #2
  %88 = load i16, i16* %7, align 8
  %.mask5 = and i16 %88, 2
  %89 = icmp eq i16 %.mask5, 0
  br i1 %89, label %.preheader, label %90

; <label>:90                                      ; preds = %87
  %91 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %12, align 8, !tbaa !38
  %92 = icmp eq %struct._tagTreeCCNode* %91, null
  br i1 %92, label %93, label %.preheader

; <label>:93                                      ; preds = %90
  %.mask6 = and i16 %88, 8
  %94 = icmp eq i16 %.mask6, 0
  br i1 %94, label %96, label %95

; <label>:95                                      ; preds = %93
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %11, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.56.312, i64 0, i64 0)) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %11, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.57.313, i64 0, i64 0)) #2
  br label %.preheader

; <label>:96                                      ; preds = %93
  %97 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 10
  %98 = load i8*, i8** %97, align 8, !tbaa !31
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %11, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.58.314, i64 0, i64 0), i8* %98) #2
  %99 = load i8*, i8** %97, align 8, !tbaa !31
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %11, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.59.315, i64 0, i64 0), i8* %99) #2
  br label %.preheader

.preheader:                                       ; preds = %90, %87, %95, %96
  %field.0.9 = load %struct._tagTreeCCField*, %struct._tagTreeCCField** %52, align 8
  %100 = icmp eq %struct._tagTreeCCField* %field.0.9, null
  br i1 %100, label %._crit_edge, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %.preheader
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %115
  %field.010 = phi %struct._tagTreeCCField* [ %field.0, %115 ], [ %field.0.9, %.lr.ph.preheader ]
  %101 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.010, i64 0, i32 3
  %102 = load i32, i32* %101, align 4, !tbaa !61
  %103 = and i32 %102, 1
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %105, label %108

; <label>:105                                     ; preds = %.lr.ph
  %106 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.010, i64 0, i32 0
  %107 = load i8*, i8** %106, align 8, !tbaa !64
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %11, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.60.316, i64 0, i64 0), i8* %107, i8* %107) #2
  br label %115

; <label>:108                                     ; preds = %.lr.ph
  %109 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.010, i64 0, i32 2
  %110 = load i8*, i8** %109, align 8, !tbaa !65
  %111 = icmp eq i8* %110, null
  br i1 %111, label %115, label %112

; <label>:112                                     ; preds = %108
  %113 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.010, i64 0, i32 0
  %114 = load i8*, i8** %113, align 8, !tbaa !64
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %11, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.60.316, i64 0, i64 0), i8* %114, i8* %110) #2
  br label %115

; <label>:115                                     ; preds = %108, %112, %105
  %116 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.010, i64 0, i32 6
  %field.0 = load %struct._tagTreeCCField*, %struct._tagTreeCCField** %116, align 8
  %117 = icmp eq %struct._tagTreeCCField* %field.0, null
  br i1 %117, label %._crit_edge.loopexit, label %.lr.ph

._crit_edge.loopexit:                             ; preds = %115
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %.preheader
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %11, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.18.317, i64 0, i64 0)) #2
  tail call fastcc void @ImplementVirtuals.318(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %11, %struct._tagTreeCCNode* %node, %struct._tagTreeCCNode* %node)
  %118 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %12, align 8, !tbaa !38
  %119 = icmp eq %struct._tagTreeCCNode* %118, null
  br i1 %119, label %121, label %120

; <label>:120                                     ; preds = %._crit_edge
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %11, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.61.319, i64 0, i64 0)) #2
  br label %122

; <label>:121                                     ; preds = %._crit_edge
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %11, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.62.320, i64 0, i64 0)) #2
  br label %122

; <label>:122                                     ; preds = %121, %120
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %11, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14.310, i64 0, i64 0)) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %11, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.63.321, i64 0, i64 0)) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %11, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.64.322, i64 0, i64 0)) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %11, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.65.323, i64 0, i64 0)) #2
  %123 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %12, align 8, !tbaa !38
  %124 = icmp eq %struct._tagTreeCCNode* %123, null
  br i1 %124, label %126, label %125

; <label>:125                                     ; preds = %122
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %11, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.66.324, i64 0, i64 0)) #2
  br label %127

; <label>:126                                     ; preds = %122
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %11, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.67.325, i64 0, i64 0)) #2
  br label %127

; <label>:127                                     ; preds = %126, %125
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %11, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.18.317, i64 0, i64 0)) #2
  %128 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %12, align 8, !tbaa !38
  %129 = icmp eq %struct._tagTreeCCNode* %128, null
  br i1 %129, label %131, label %130

; <label>:130                                     ; preds = %127
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %11, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.68.326, i64 0, i64 0)) #2
  br label %132

; <label>:131                                     ; preds = %127
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %11, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.69.327, i64 0, i64 0)) #2
  br label %132

; <label>:132                                     ; preds = %131, %130
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %11, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14.310, i64 0, i64 0)) #2
  %133 = load i8*, i8** %69, align 8, !tbaa !36
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %11, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.70.328, i64 0, i64 0), i8* %133) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %11, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.71.329, i64 0, i64 0)) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %11, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7.330, i64 0, i64 0)) #2
  br label %134

; <label>:134                                     ; preds = %0, %132
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @CreateParams.305(%struct._tagTreeCCStream* %stream, %struct._tagTreeCCNode* nocapture readonly %node, i32 %needComma) #0 {
  %1 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 0
  %2 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %1, align 8, !tbaa !38
  %3 = icmp eq %struct._tagTreeCCNode* %2, null
  br i1 %3, label %6, label %4

; <label>:4                                       ; preds = %0
  %5 = tail call fastcc i32 @CreateParams.305(%struct._tagTreeCCStream* %stream, %struct._tagTreeCCNode* %2, i32 %needComma)
  br label %6

; <label>:6                                       ; preds = %0, %4
  %.0 = phi i32 [ %5, %4 ], [ %needComma, %0 ]
  %7 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 10
  %field.0.1 = load %struct._tagTreeCCField*, %struct._tagTreeCCField** %7, align 8
  %8 = icmp eq %struct._tagTreeCCField* %field.0.1, null
  br i1 %8, label %._crit_edge, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %6
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %21
  %field.03 = phi %struct._tagTreeCCField* [ %field.0, %21 ], [ %field.0.1, %.lr.ph.preheader ]
  %.12 = phi i32 [ %.2, %21 ], [ %.0, %.lr.ph.preheader ]
  %9 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.03, i64 0, i32 3
  %10 = load i32, i32* %9, align 4, !tbaa !61
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %21

; <label>:13                                      ; preds = %.lr.ph
  %14 = icmp eq i32 %.12, 0
  br i1 %14, label %16, label %15

; <label>:15                                      ; preds = %13
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.29.334, i64 0, i64 0)) #2
  br label %16

; <label>:16                                      ; preds = %13, %15
  %17 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.03, i64 0, i32 1
  %18 = load i8*, i8** %17, align 8, !tbaa !63
  %19 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.03, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8, !tbaa !64
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.30.335, i64 0, i64 0), i8* %18, i8* %20) #2
  br label %21

; <label>:21                                      ; preds = %16, %.lr.ph
  %.2 = phi i32 [ 1, %16 ], [ %.12, %.lr.ph ]
  %22 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.03, i64 0, i32 6
  %field.0 = load %struct._tagTreeCCField*, %struct._tagTreeCCField** %22, align 8
  %23 = icmp eq %struct._tagTreeCCField* %field.0, null
  br i1 %23, label %._crit_edge.loopexit, label %.lr.ph

._crit_edge.loopexit:                             ; preds = %21
  %.2.lcssa = phi i32 [ %.2, %21 ]
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %6
  %.1.lcssa = phi i32 [ %.0, %6 ], [ %.2.lcssa, %._crit_edge.loopexit ]
  ret i32 %.1.lcssa
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @InheritParamsSource.309(%struct._tagTreeCCStream* %stream, %struct._tagTreeCCNode* nocapture readonly %node, i32 %needComma) #0 {
  %1 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 0
  %2 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %1, align 8, !tbaa !38
  %3 = icmp eq %struct._tagTreeCCNode* %2, null
  br i1 %3, label %6, label %4

; <label>:4                                       ; preds = %0
  %5 = tail call fastcc i32 @InheritParamsSource.309(%struct._tagTreeCCStream* %stream, %struct._tagTreeCCNode* %2, i32 %needComma)
  br label %6

; <label>:6                                       ; preds = %0, %4
  %.0 = phi i32 [ %5, %4 ], [ %needComma, %0 ]
  %7 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 10
  %field.0.1 = load %struct._tagTreeCCField*, %struct._tagTreeCCField** %7, align 8
  %8 = icmp eq %struct._tagTreeCCField* %field.0.1, null
  br i1 %8, label %._crit_edge, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %6
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %19
  %field.03 = phi %struct._tagTreeCCField* [ %field.0, %19 ], [ %field.0.1, %.lr.ph.preheader ]
  %.12 = phi i32 [ %.2, %19 ], [ %.0, %.lr.ph.preheader ]
  %9 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.03, i64 0, i32 3
  %10 = load i32, i32* %9, align 4, !tbaa !61
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %19

; <label>:13                                      ; preds = %.lr.ph
  %14 = icmp eq i32 %.12, 0
  br i1 %14, label %16, label %15

; <label>:15                                      ; preds = %13
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.29.334, i64 0, i64 0)) #2
  br label %16

; <label>:16                                      ; preds = %13, %15
  %17 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.03, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8, !tbaa !64
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.31.341, i64 0, i64 0), i8* %18) #2
  br label %19

; <label>:19                                      ; preds = %16, %.lr.ph
  %.2 = phi i32 [ 1, %16 ], [ %.12, %.lr.ph ]
  %20 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.03, i64 0, i32 6
  %field.0 = load %struct._tagTreeCCField*, %struct._tagTreeCCField** %20, align 8
  %21 = icmp eq %struct._tagTreeCCField* %field.0, null
  br i1 %21, label %._crit_edge.loopexit, label %.lr.ph

._crit_edge.loopexit:                             ; preds = %19
  %.2.lcssa = phi i32 [ %.2, %19 ]
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %6
  %.1.lcssa = phi i32 [ %.0, %6 ], [ %.2.lcssa, %._crit_edge.loopexit ]
  ret i32 %.1.lcssa
}

; Function Attrs: nounwind uwtable
define internal fastcc void @ImplementVirtuals.318(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %stream, %struct._tagTreeCCNode* readonly %node, %struct._tagTreeCCNode* %actualNode) #0 {
  %1 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 0
  %2 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %1, align 8, !tbaa !38
  %3 = icmp eq %struct._tagTreeCCNode* %2, null
  br i1 %3, label %5, label %4

; <label>:4                                       ; preds = %0
  tail call fastcc void @ImplementVirtuals.318(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %stream, %struct._tagTreeCCNode* %2, %struct._tagTreeCCNode* %actualNode)
  br label %5

; <label>:5                                       ; preds = %0, %4
  %6 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 11
  %virt.0.18 = load %struct._tagTreeCCVirtual*, %struct._tagTreeCCVirtual** %6, align 8
  %7 = icmp eq %struct._tagTreeCCVirtual* %virt.0.18, null
  br i1 %7, label %._crit_edge.24, label %.lr.ph23

.lr.ph23:                                         ; preds = %5
  %8 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %actualNode, i64 0, i32 4
  %9 = icmp eq %struct._tagTreeCCNode* %node, %actualNode
  br label %10

; <label>:10                                      ; preds = %.lr.ph23, %.backedge
  %virt.019 = phi %struct._tagTreeCCVirtual* [ %virt.0.18, %.lr.ph23 ], [ %virt.0, %.backedge ]
  %11 = getelementptr inbounds %struct._tagTreeCCVirtual, %struct._tagTreeCCVirtual* %virt.019, i64 0, i32 0
  %12 = load i8*, i8** %11, align 8, !tbaa !39
  %13 = tail call %struct._tagTreeCCOperationCase* @TreeCCOperationFindCase(%struct._tagTreeCCContext* %context, %struct._tagTreeCCNode* %actualNode, i8* %12) #2
  %14 = icmp eq %struct._tagTreeCCOperationCase* %13, null
  br i1 %14, label %.preheader.preheader, label %26

.preheader.preheader:                             ; preds = %10
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %16
  %actualNode.pn = phi %struct._tagTreeCCNode* [ %tempNode.0, %16 ], [ %actualNode, %.preheader.preheader ]
  %tempNode.0.in = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %actualNode.pn, i64 0, i32 0
  %tempNode.0 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %tempNode.0.in, align 8
  %15 = icmp eq %struct._tagTreeCCNode* %tempNode.0, null
  br i1 %15, label %20, label %16

; <label>:16                                      ; preds = %.preheader
  %17 = load i8*, i8** %11, align 8, !tbaa !39
  %18 = tail call %struct._tagTreeCCOperationCase* @TreeCCOperationFindCase(%struct._tagTreeCCContext* %context, %struct._tagTreeCCNode* %tempNode.0, i8* %17) #2
  %19 = icmp eq %struct._tagTreeCCOperationCase* %18, null
  br i1 %19, label %.preheader, label %.backedge.loopexit

; <label>:20                                      ; preds = %.preheader
  br i1 %9, label %21, label %.backedge

; <label>:21                                      ; preds = %20
  %22 = getelementptr inbounds %struct._tagTreeCCVirtual, %struct._tagTreeCCVirtual* %virt.019, i64 0, i32 1
  %23 = load i8*, i8** %22, align 8, !tbaa !66
  %24 = load i8*, i8** %11, align 8, !tbaa !39
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.73.331, i64 0, i64 0), i8* %23, i8* %24) #2
  br label %32

.backedge.loopexit:                               ; preds = %16
  br label %.backedge

.backedge:                                        ; preds = %.backedge.loopexit, %79, %78, %20
  %virt.0.in.be = getelementptr inbounds %struct._tagTreeCCVirtual, %struct._tagTreeCCVirtual* %virt.019, i64 0, i32 4
  %virt.0 = load %struct._tagTreeCCVirtual*, %struct._tagTreeCCVirtual** %virt.0.in.be, align 8
  %25 = icmp eq %struct._tagTreeCCVirtual* %virt.0, null
  br i1 %25, label %._crit_edge.24.loopexit, label %10

; <label>:26                                      ; preds = %10
  %27 = getelementptr inbounds %struct._tagTreeCCVirtual, %struct._tagTreeCCVirtual* %virt.019, i64 0, i32 1
  %28 = load i8*, i8** %27, align 8, !tbaa !66
  %29 = load i8*, i8** %11, align 8, !tbaa !39
  br i1 %9, label %30, label %31

; <label>:30                                      ; preds = %26
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.74.332, i64 0, i64 0), i8* %28, i8* %29) #2
  br label %32

; <label>:31                                      ; preds = %26
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.75.333, i64 0, i64 0), i8* %28, i8* %29) #2
  br label %32

; <label>:32                                      ; preds = %30, %31, %21
  %33 = phi i1 [ false, %30 ], [ false, %31 ], [ true, %21 ]
  %operCase.2.ph9 = phi %struct._tagTreeCCOperationCase* [ %13, %30 ], [ %13, %31 ], [ null, %21 ]
  %34 = getelementptr inbounds %struct._tagTreeCCVirtual, %struct._tagTreeCCVirtual* %virt.019, i64 0, i32 3
  %35 = load %struct._tagTreeCCOperation*, %struct._tagTreeCCOperation** %34, align 8, !tbaa !70
  %36 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %35, i64 0, i32 4
  %param.0.13 = load %struct._tagTreeCCParam*, %struct._tagTreeCCParam** %36, align 8
  %37 = icmp eq %struct._tagTreeCCParam* %param.0.13, null
  br i1 %37, label %._crit_edge, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %32
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %54
  %param.017 = phi %struct._tagTreeCCParam* [ %param.0, %54 ], [ %param.0.13, %.lr.ph.preheader ]
  %needComma.016 = phi i32 [ %needComma.1, %54 ], [ 0, %.lr.ph.preheader ]
  %first.015 = phi i32 [ 0, %54 ], [ 1, %.lr.ph.preheader ]
  %num.014 = phi i32 [ %num.3, %54 ], [ 1, %.lr.ph.preheader ]
  %38 = icmp eq i32 %needComma.016, 0
  br i1 %38, label %40, label %39

; <label>:39                                      ; preds = %.lr.ph
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.29.334, i64 0, i64 0)) #2
  br label %40

; <label>:40                                      ; preds = %.lr.ph, %39
  %41 = icmp eq i32 %first.015, 0
  %42 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.017, i64 0, i32 0
  %43 = load i8*, i8** %42, align 8, !tbaa !41
  %44 = icmp ne i8* %43, null
  br i1 %41, label %48, label %45

; <label>:45                                      ; preds = %40
  %46 = zext i1 %44 to i32
  %47 = xor i32 %46, 1
  %num.0. = add nsw i32 %47, %num.014
  br label %54

; <label>:48                                      ; preds = %40
  %49 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.017, i64 0, i32 1
  %50 = load i8*, i8** %49, align 8, !tbaa !47
  br i1 %44, label %51, label %52

; <label>:51                                      ; preds = %48
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.30.335, i64 0, i64 0), i8* %50, i8* %43) #2
  br label %54

; <label>:52                                      ; preds = %48
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.76.336, i64 0, i64 0), i8* %50, i32 %num.014) #2
  %53 = add nsw i32 %num.014, 1
  br label %54

; <label>:54                                      ; preds = %51, %52, %45
  %num.3 = phi i32 [ %num.0., %45 ], [ %num.014, %51 ], [ %53, %52 ]
  %needComma.1 = phi i32 [ %needComma.016, %45 ], [ 1, %51 ], [ 1, %52 ]
  %55 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.017, i64 0, i32 4
  %param.0 = load %struct._tagTreeCCParam*, %struct._tagTreeCCParam** %55, align 8
  %56 = icmp eq %struct._tagTreeCCParam* %param.0, null
  br i1 %56, label %._crit_edge.loopexit, label %.lr.ph

._crit_edge.loopexit:                             ; preds = %54
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %32
  br i1 %33, label %79, label %57

; <label>:57                                      ; preds = %._crit_edge
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.27.306, i64 0, i64 0)) #2
  %58 = getelementptr inbounds %struct._tagTreeCCOperationCase, %struct._tagTreeCCOperationCase* %operCase.2.ph9, i64 0, i32 7
  %59 = load i64, i64* %58, align 8, !tbaa !56
  %60 = getelementptr inbounds %struct._tagTreeCCOperationCase, %struct._tagTreeCCOperationCase* %operCase.2.ph9, i64 0, i32 6
  %61 = load i8*, i8** %60, align 8, !tbaa !57
  tail call void @TreeCCStreamLine(%struct._tagTreeCCStream* %stream, i64 %59, i8* %61) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.77.337, i64 0, i64 0)) #2
  %62 = load %struct._tagTreeCCOperation*, %struct._tagTreeCCOperation** %34, align 8, !tbaa !70
  %63 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %62, i64 0, i32 4
  %64 = load %struct._tagTreeCCParam*, %struct._tagTreeCCParam** %63, align 8, !tbaa !68
  %65 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %64, i64 0, i32 0
  %66 = load i8*, i8** %65, align 8, !tbaa !41
  %67 = icmp eq i8* %66, null
  br i1 %67, label %71, label %68

; <label>:68                                      ; preds = %57
  %69 = tail call i32 @strcmp(i8* %66, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.78.338, i64 0, i64 0)) #2
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %74

; <label>:71                                      ; preds = %68, %57
  %72 = getelementptr inbounds %struct._tagTreeCCOperationCase, %struct._tagTreeCCOperationCase* %operCase.2.ph9, i64 0, i32 1
  %73 = load i8*, i8** %72, align 8, !tbaa !58
  tail call void @TreeCCStreamCodeIndent(%struct._tagTreeCCStream* %stream, i8* %73, i32 1) #2
  br label %78

; <label>:74                                      ; preds = %68
  %75 = load i8*, i8** %8, align 8, !tbaa !36
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.79.339, i64 0, i64 0), i8* %75, i8* %66) #2
  %76 = getelementptr inbounds %struct._tagTreeCCOperationCase, %struct._tagTreeCCOperationCase* %operCase.2.ph9, i64 0, i32 1
  %77 = load i8*, i8** %76, align 8, !tbaa !58
  tail call void @TreeCCStreamCodeIndent(%struct._tagTreeCCStream* %stream, i8* %77, i32 1) #2
  br label %78

; <label>:78                                      ; preds = %74, %71
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.80.282, i64 0, i64 0)) #2
  tail call void @TreeCCStreamFixLine(%struct._tagTreeCCStream* %stream) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.41.292, i64 0, i64 0)) #2
  br label %.backedge

; <label>:79                                      ; preds = %._crit_edge
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.81.340, i64 0, i64 0)) #2
  br label %.backedge

._crit_edge.24.loopexit:                          ; preds = %.backedge
  br label %._crit_edge.24

._crit_edge.24:                                   ; preds = %._crit_edge.24.loopexit, %5
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @ImplementCreateFuncs.353(%struct._tagTreeCCContext* nocapture readonly %context, %struct._tagTreeCCNode* nocapture readonly %node) #0 {
  %1 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 5
  %2 = load i32, i32* %1, align 4, !tbaa !34
  %3 = and i32 %2, 26
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %33

; <label>:5                                       ; preds = %0
  %6 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 7
  %7 = load %struct._tagTreeCCStream*, %struct._tagTreeCCStream** %6, align 8, !tbaa !32
  %8 = icmp eq %struct._tagTreeCCStream* %7, null
  br i1 %8, label %9, label %12

; <label>:9                                       ; preds = %5
  %10 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 5
  %11 = load %struct._tagTreeCCStream*, %struct._tagTreeCCStream** %10, align 8, !tbaa !33
  br label %12

; <label>:12                                      ; preds = %5, %9
  %stream.0 = phi %struct._tagTreeCCStream* [ %11, %9 ], [ %7, %5 ]
  %13 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 8
  %14 = load i16, i16* %13, align 8
  %.mask = and i16 %14, 64
  %15 = icmp eq i16 %.mask, 0
  br i1 %15, label %19, label %16

; <label>:16                                      ; preds = %12
  %17 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 4
  %18 = load i8*, i8** %17, align 8, !tbaa !36
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.0, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.23.356, i64 0, i64 0), i8* %18, i8* %18) #2
  br label %25

; <label>:19                                      ; preds = %12
  %.mask1 = and i16 %14, 32
  %20 = icmp eq i16 %.mask1, 0
  %21 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 4
  %22 = load i8*, i8** %21, align 8, !tbaa !36
  br i1 %20, label %24, label %23

; <label>:23                                      ; preds = %19
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.0, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.24.357, i64 0, i64 0), i8* %22, i8* %22) #2
  br label %25

; <label>:24                                      ; preds = %19
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.25.358, i64 0, i64 0), i8* %22, i8* %22) #2
  br label %25

; <label>:25                                      ; preds = %23, %24, %16
  %26 = tail call fastcc i32 @FactoryCreateParams.359(%struct._tagTreeCCStream* %stream.0, %struct._tagTreeCCNode* %node)
  %27 = load i16, i16* %13, align 8
  %.mask2 = and i16 %27, 64
  %28 = icmp eq i16 %.mask2, 0
  br i1 %28, label %30, label %29

; <label>:29                                      ; preds = %25
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.26.360, i64 0, i64 0)) #2
  br label %33

; <label>:30                                      ; preds = %25
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.27.306, i64 0, i64 0)) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14.310, i64 0, i64 0)) #2
  %31 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 4
  %32 = load i8*, i8** %31, align 8, !tbaa !36
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.28.361, i64 0, i64 0), i8* %32) #2
  tail call fastcc void @FactoryInvokeParams.362(%struct._tagTreeCCStream* %stream.0, %struct._tagTreeCCNode* %node)
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.26.360, i64 0, i64 0)) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.18.317, i64 0, i64 0)) #2
  br label %33

; <label>:33                                      ; preds = %29, %30, %0
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @FactoryCreateParams.359(%struct._tagTreeCCStream* %stream, %struct._tagTreeCCNode* nocapture readonly %node) #0 {
  %1 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 0
  %2 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %1, align 8, !tbaa !38
  %3 = icmp eq %struct._tagTreeCCNode* %2, null
  br i1 %3, label %6, label %4

; <label>:4                                       ; preds = %0
  %5 = tail call fastcc i32 @FactoryCreateParams.359(%struct._tagTreeCCStream* %stream, %struct._tagTreeCCNode* %2)
  br label %6

; <label>:6                                       ; preds = %0, %4
  %.0 = phi i32 [ %5, %4 ], [ 0, %0 ]
  %7 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 10
  %field.0.1 = load %struct._tagTreeCCField*, %struct._tagTreeCCField** %7, align 8
  %8 = icmp eq %struct._tagTreeCCField* %field.0.1, null
  br i1 %8, label %._crit_edge, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %6
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %21
  %field.03 = phi %struct._tagTreeCCField* [ %field.0, %21 ], [ %field.0.1, %.lr.ph.preheader ]
  %.12 = phi i32 [ %.2, %21 ], [ %.0, %.lr.ph.preheader ]
  %9 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.03, i64 0, i32 3
  %10 = load i32, i32* %9, align 4, !tbaa !61
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %21

; <label>:13                                      ; preds = %.lr.ph
  %14 = icmp eq i32 %.12, 0
  br i1 %14, label %16, label %15

; <label>:15                                      ; preds = %13
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.29.334, i64 0, i64 0)) #2
  br label %16

; <label>:16                                      ; preds = %13, %15
  %17 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.03, i64 0, i32 1
  %18 = load i8*, i8** %17, align 8, !tbaa !63
  %19 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.03, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8, !tbaa !64
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.30.335, i64 0, i64 0), i8* %18, i8* %20) #2
  br label %21

; <label>:21                                      ; preds = %16, %.lr.ph
  %.2 = phi i32 [ 1, %16 ], [ %.12, %.lr.ph ]
  %22 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.03, i64 0, i32 6
  %field.0 = load %struct._tagTreeCCField*, %struct._tagTreeCCField** %22, align 8
  %23 = icmp eq %struct._tagTreeCCField* %field.0, null
  br i1 %23, label %._crit_edge.loopexit, label %.lr.ph

._crit_edge.loopexit:                             ; preds = %21
  %.2.lcssa = phi i32 [ %.2, %21 ]
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %6
  %.1.lcssa = phi i32 [ %.0, %6 ], [ %.2.lcssa, %._crit_edge.loopexit ]
  ret i32 %.1.lcssa
}

; Function Attrs: nounwind uwtable
define internal fastcc void @FactoryInvokeParams.362(%struct._tagTreeCCStream* %stream, %struct._tagTreeCCNode* nocapture readonly %node) #0 {
  %1 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 0
  %2 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %1, align 8, !tbaa !38
  %3 = icmp eq %struct._tagTreeCCNode* %2, null
  br i1 %3, label %5, label %4

; <label>:4                                       ; preds = %0
  tail call fastcc void @FactoryInvokeParams.362(%struct._tagTreeCCStream* %stream, %struct._tagTreeCCNode* %2)
  br label %5

; <label>:5                                       ; preds = %0, %4
  %6 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 10
  %field.0.1 = load %struct._tagTreeCCField*, %struct._tagTreeCCField** %6, align 8
  %7 = icmp eq %struct._tagTreeCCField* %field.0.1, null
  br i1 %7, label %._crit_edge, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %5
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %15
  %field.02 = phi %struct._tagTreeCCField* [ %field.0, %15 ], [ %field.0.1, %.lr.ph.preheader ]
  %8 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.02, i64 0, i32 3
  %9 = load i32, i32* %8, align 4, !tbaa !61
  %10 = and i32 %9, 1
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %15

; <label>:12                                      ; preds = %.lr.ph
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.29.334, i64 0, i64 0)) #2
  %13 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.02, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8, !tbaa !64
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.31.341, i64 0, i64 0), i8* %14) #2
  br label %15

; <label>:15                                      ; preds = %12, %.lr.ph
  %16 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.02, i64 0, i32 6
  %field.0 = load %struct._tagTreeCCField*, %struct._tagTreeCCField** %16, align 8
  %17 = icmp eq %struct._tagTreeCCField* %field.0, null
  br i1 %17, label %._crit_edge.loopexit, label %.lr.ph

._crit_edge.loopexit:                             ; preds = %15
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %5
  ret void
}

; Function Attrs: nounwind uwtable
define void @TreeCCGenerateJava(%struct._tagTreeCCContext* %context) #0 {
  %1 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 10
  %2 = load i8*, i8** %1, align 8, !tbaa !31
  %3 = tail call %struct._tagTreeCCStream* @TreeCCStreamGetJava(%struct._tagTreeCCContext* %context, i8* %2) #2
  tail call void @TreeCCNodeVisitAll(%struct._tagTreeCCContext* %context, void (%struct._tagTreeCCContext*, %struct._tagTreeCCNode*)* nonnull @CreateNodeStreams) #2
  tail call void @TreeCCOperationVisitAll(%struct._tagTreeCCContext* %context, void (%struct._tagTreeCCContext*, %struct._tagTreeCCOperation*)* nonnull @CreateNonVirtualStreams) #2
  %4 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 3
  %stream.0.2.i = load %struct._tagTreeCCStream*, %struct._tagTreeCCStream** %4, align 8
  %5 = icmp eq %struct._tagTreeCCStream* %stream.0.2.i, null
  br i1 %5, label %WriteJavaHeaders.exit, label %.lr.ph.i

.lr.ph.i:                                         ; preds = %0
  %6 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 11
  br label %7

; <label>:7                                       ; preds = %21, %.lr.ph.i
  %stream.03.i = phi %struct._tagTreeCCStream* [ %stream.0.2.i, %.lr.ph.i ], [ %stream.0.i, %21 ]
  %8 = getelementptr inbounds %struct._tagTreeCCStream, %struct._tagTreeCCStream* %stream.03.i, i64 0, i32 7
  %9 = load i8, i8* %8, align 4
  %.mask.i = and i8 %9, 4
  %10 = icmp eq i8 %.mask.i, 0
  br i1 %10, label %11, label %16

; <label>:11                                      ; preds = %7
  tail call void @TreeCCStreamSourceTop(%struct._tagTreeCCStream* %stream.03.i) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.03.i, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.27.369, i64 0, i64 0)) #2
  %12 = load i8*, i8** %6, align 8, !tbaa !8
  %13 = icmp eq i8* %12, null
  br i1 %13, label %15, label %14

; <label>:14                                      ; preds = %11
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.03.i, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.41.370, i64 0, i64 0), i8* %12) #2
  br label %15

; <label>:15                                      ; preds = %14, %11
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.03.i, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.42.371, i64 0, i64 0)) #2
  %.pre.i = load i8, i8* %8, align 4
  br label %16

; <label>:16                                      ; preds = %15, %7
  %17 = phi i8 [ %9, %7 ], [ %.pre.i, %15 ]
  %.mask1.i = and i8 %17, 8
  %18 = icmp eq i8 %.mask1.i, 0
  br i1 %18, label %21, label %19

; <label>:19                                      ; preds = %16
  %20 = and i8 %17, -17
  store i8 %20, i8* %8, align 4
  br label %21

; <label>:21                                      ; preds = %19, %16
  %22 = getelementptr inbounds %struct._tagTreeCCStream, %struct._tagTreeCCStream* %stream.03.i, i64 0, i32 10
  %stream.0.i = load %struct._tagTreeCCStream*, %struct._tagTreeCCStream** %22, align 8
  %23 = icmp eq %struct._tagTreeCCStream* %stream.0.i, null
  br i1 %23, label %WriteJavaHeaders.exit.loopexit, label %7

WriteJavaHeaders.exit.loopexit:                   ; preds = %21
  br label %WriteJavaHeaders.exit

WriteJavaHeaders.exit:                            ; preds = %WriteJavaHeaders.exit.loopexit, %0
  tail call void @TreeCCNodeVisitAll(%struct._tagTreeCCContext* %context, void (%struct._tagTreeCCContext*, %struct._tagTreeCCNode*)* nonnull @DeclareTypeDefs.372) #2
  %24 = load i8*, i8** %1, align 8, !tbaa !31
  %25 = tail call %struct._tagTreeCCStream* @TreeCCStreamGetJava(%struct._tagTreeCCContext* %context, i8* %24) #2
  %26 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 8
  %27 = load i16, i16* %26, align 8
  %28 = and i16 %27, 72
  %29 = icmp eq i16 %28, 72
  %30 = load i8*, i8** %1, align 8, !tbaa !31
  br i1 %29, label %31, label %32

; <label>:31                                      ; preds = %WriteJavaHeaders.exit
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %25, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.45.373, i64 0, i64 0), i8* %30) #2
  br label %33

; <label>:32                                      ; preds = %WriteJavaHeaders.exit
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %25, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.46.374, i64 0, i64 0), i8* %30) #2
  br label %33

; <label>:33                                      ; preds = %32, %31
  %34 = load i16, i16* %26, align 8
  %.mask1.i.1 = and i16 %34, 8
  %35 = icmp eq i16 %.mask1.i.1, 0
  br i1 %35, label %36, label %40

; <label>:36                                      ; preds = %33
  %37 = load i8*, i8** %1, align 8, !tbaa !31
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %25, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.47.375, i64 0, i64 0), i8* %37) #2
  %38 = load i8*, i8** %1, align 8, !tbaa !31
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %25, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.48.376, i64 0, i64 0), i8* %38) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %25, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.11.377, i64 0, i64 0)) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %25, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.49.378, i64 0, i64 0)) #2
  %39 = load i8*, i8** %1, align 8, !tbaa !31
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %25, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.50.379, i64 0, i64 0), i8* %39) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %25, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.51.380, i64 0, i64 0)) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %25, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.52.381, i64 0, i64 0)) #2
  %.pre.i.2 = load i16, i16* %26, align 8
  br label %40

; <label>:40                                      ; preds = %36, %33
  %41 = phi i16 [ %34, %33 ], [ %.pre.i.2, %36 ]
  %.mask2.i = and i16 %41, 8
  %42 = icmp eq i16 %.mask2.i, 0
  %43 = load i8*, i8** %1, align 8, !tbaa !31
  br i1 %42, label %45, label %44

; <label>:44                                      ; preds = %40
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %25, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.53.382, i64 0, i64 0), i8* %43) #2
  br label %46

; <label>:45                                      ; preds = %40
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %25, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.54.383, i64 0, i64 0), i8* %43) #2
  br label %46

; <label>:46                                      ; preds = %45, %44
  %47 = load i16, i16* %26, align 8
  %.mask3.i = and i16 %47, 8
  %48 = icmp eq i16 %.mask3.i, 0
  br i1 %48, label %50, label %49

; <label>:49                                      ; preds = %46
  tail call void @TreeCCNodeVisitAll(%struct._tagTreeCCContext* %context, void (%struct._tagTreeCCContext*, %struct._tagTreeCCNode*)* nonnull @ImplementCreateFuncs.384) #2
  %.pre7.i = load i16, i16* %26, align 8
  br label %50

; <label>:50                                      ; preds = %49, %46
  %51 = phi i16 [ %47, %46 ], [ %.pre7.i, %49 ]
  %.mask4.i = and i16 %51, 2
  %52 = icmp eq i16 %.mask4.i, 0
  br i1 %52, label %ImplementStateType.exit, label %53

; <label>:53                                      ; preds = %50
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %25, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.55.385, i64 0, i64 0)) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %25, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.56.386, i64 0, i64 0)) #2
  br label %ImplementStateType.exit

ImplementStateType.exit:                          ; preds = %50, %53
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %25, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.26.387, i64 0, i64 0)) #2
  tail call void @TreeCCNodeVisitAll(%struct._tagTreeCCContext* %context, void (%struct._tagTreeCCContext*, %struct._tagTreeCCNode*)* nonnull @BuildTypeDecls.388) #2
  tail call void @TreeCCGenerateNonVirtuals(%struct._tagTreeCCContext* %context, %struct.TreeCCNonVirtual* nonnull @TreeCCNonVirtualFuncsJava) #2
  %stream.0.4.i = load %struct._tagTreeCCStream*, %struct._tagTreeCCStream** %4, align 8
  %54 = icmp eq %struct._tagTreeCCStream* %stream.0.4.i, null
  br i1 %54, label %WriteJavaFooters.exit, label %.lr.ph.i.3.preheader

.lr.ph.i.3.preheader:                             ; preds = %ImplementStateType.exit
  br label %.lr.ph.i.3

.lr.ph.i.3:                                       ; preds = %.lr.ph.i.3.preheader, %63
  %stream.05.i = phi %struct._tagTreeCCStream* [ %stream.0.i.5, %63 ], [ %stream.0.4.i, %.lr.ph.i.3.preheader ]
  %55 = getelementptr inbounds %struct._tagTreeCCStream, %struct._tagTreeCCStream* %stream.05.i, i64 0, i32 7
  %56 = load i8, i8* %55, align 4
  %57 = and i8 %56, 24
  %58 = icmp eq i8 %57, 8
  br i1 %58, label %59, label %60

; <label>:59                                      ; preds = %.lr.ph.i.3
  tail call void @TreeCCStreamClear(%struct._tagTreeCCStream* %stream.05.i) #2
  br label %63

; <label>:60                                      ; preds = %.lr.ph.i.3
  %.mask1.i.4 = and i8 %56, 4
  %61 = icmp eq i8 %.mask1.i.4, 0
  br i1 %61, label %62, label %63

; <label>:62                                      ; preds = %60
  tail call void @TreeCCStreamSourceBottom(%struct._tagTreeCCStream* %stream.05.i) #2
  br label %63

; <label>:63                                      ; preds = %62, %60, %59
  %64 = getelementptr inbounds %struct._tagTreeCCStream, %struct._tagTreeCCStream* %stream.05.i, i64 0, i32 10
  %stream.0.i.5 = load %struct._tagTreeCCStream*, %struct._tagTreeCCStream** %64, align 8
  %65 = icmp eq %struct._tagTreeCCStream* %stream.0.i.5, null
  br i1 %65, label %WriteJavaFooters.exit.loopexit, label %.lr.ph.i.3

WriteJavaFooters.exit.loopexit:                   ; preds = %63
  br label %WriteJavaFooters.exit

WriteJavaFooters.exit:                            ; preds = %WriteJavaFooters.exit.loopexit, %ImplementStateType.exit
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @CreateNodeStreams(%struct._tagTreeCCContext* %context, %struct._tagTreeCCNode* nocapture readonly %node) #0 {
  %1 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 5
  %2 = load i32, i32* %1, align 4, !tbaa !34
  %3 = and i32 %2, 16
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %9

; <label>:5                                       ; preds = %0
  %6 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 4
  %7 = load i8*, i8** %6, align 8, !tbaa !36
  %8 = tail call %struct._tagTreeCCStream* @TreeCCStreamGetJava(%struct._tagTreeCCContext* %context, i8* %7) #2
  br label %9

; <label>:9                                       ; preds = %5, %0
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @CreateNonVirtualStreams(%struct._tagTreeCCContext* %context, %struct._tagTreeCCOperation* nocapture readonly %oper) #0 {
  %1 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %oper, i64 0, i32 5
  %2 = load i32, i32* %1, align 4, !tbaa !44
  %3 = and i32 %2, 1
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %15

; <label>:5                                       ; preds = %0
  %6 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %oper, i64 0, i32 1
  %7 = load i8*, i8** %6, align 8, !tbaa !60
  %8 = icmp eq i8* %7, null
  br i1 %8, label %11, label %9

; <label>:9                                       ; preds = %5
  %10 = tail call %struct._tagTreeCCStream* @TreeCCStreamGetJava(%struct._tagTreeCCContext* %context, i8* %7) #2
  br label %15

; <label>:11                                      ; preds = %5
  %12 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %oper, i64 0, i32 0
  %13 = load i8*, i8** %12, align 8, !tbaa !46
  %14 = tail call %struct._tagTreeCCStream* @TreeCCStreamGetJava(%struct._tagTreeCCContext* %context, i8* %13) #2
  br label %15

; <label>:15                                      ; preds = %9, %11, %0
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @DeclareTypeDefs.372(%struct._tagTreeCCContext* %context, %struct._tagTreeCCNode* nocapture readonly %node) #0 {
  %1 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 5
  %2 = load i32, i32* %1, align 4, !tbaa !34
  %3 = and i32 %2, 8
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %23, label %5

; <label>:5                                       ; preds = %0
  %6 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 4
  %7 = load i8*, i8** %6, align 8, !tbaa !36
  %8 = tail call %struct._tagTreeCCStream* @TreeCCStreamGetJava(%struct._tagTreeCCContext* %context, i8* %7) #2
  %9 = load i8*, i8** %6, align 8, !tbaa !36
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %8, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.43.476, i64 0, i64 0), i8* %9) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %8, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.15.416, i64 0, i64 0)) #2
  %10 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 1
  %child.0.1 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %10, align 8
  %11 = icmp eq %struct._tagTreeCCNode* %child.0.1, null
  br i1 %11, label %._crit_edge, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %5
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %20
  %child.03 = phi %struct._tagTreeCCNode* [ %child.0, %20 ], [ %child.0.1, %.lr.ph.preheader ]
  %num.02 = phi i32 [ %num.1, %20 ], [ 0, %.lr.ph.preheader ]
  %12 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %child.03, i64 0, i32 5
  %13 = load i32, i32* %12, align 4, !tbaa !34
  %14 = and i32 %13, 16
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %20, label %16

; <label>:16                                      ; preds = %.lr.ph
  %17 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %child.03, i64 0, i32 4
  %18 = load i8*, i8** %17, align 8, !tbaa !36
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %8, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.44.477, i64 0, i64 0), i8* %18, i32 %num.02) #2
  %19 = add nsw i32 %num.02, 1
  br label %20

; <label>:20                                      ; preds = %.lr.ph, %16
  %num.1 = phi i32 [ %19, %16 ], [ %num.02, %.lr.ph ]
  %21 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %child.03, i64 0, i32 3
  %child.0 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %21, align 8
  %22 = icmp eq %struct._tagTreeCCNode* %child.0, null
  br i1 %22, label %._crit_edge.loopexit, label %.lr.ph

._crit_edge.loopexit:                             ; preds = %20
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %5
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %8, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.26.387, i64 0, i64 0)) #2
  br label %23

; <label>:23                                      ; preds = %0, %._crit_edge
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @ImplementCreateFuncs.384(%struct._tagTreeCCContext* %context, %struct._tagTreeCCNode* nocapture readonly %node) #0 {
  %1 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 5
  %2 = load i32, i32* %1, align 4, !tbaa !34
  %3 = and i32 %2, 26
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %23

; <label>:5                                       ; preds = %0
  %6 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 10
  %7 = load i8*, i8** %6, align 8, !tbaa !31
  %8 = tail call %struct._tagTreeCCStream* @TreeCCStreamGetJava(%struct._tagTreeCCContext* %context, i8* %7) #2
  %9 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 8
  %10 = load i16, i16* %9, align 8
  %.mask = and i16 %10, 64
  %11 = icmp eq i16 %.mask, 0
  %12 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 4
  %13 = load i8*, i8** %12, align 8, !tbaa !36
  br i1 %11, label %15, label %14

; <label>:14                                      ; preds = %5
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %8, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.57.471, i64 0, i64 0), i8* %13, i8* %13) #2
  br label %16

; <label>:15                                      ; preds = %5
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %8, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.58.472, i64 0, i64 0), i8* %13, i8* %13) #2
  br label %16

; <label>:16                                      ; preds = %15, %14
  %17 = tail call fastcc i32 @FactoryCreateParams.473(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %8, %struct._tagTreeCCNode* %node)
  %18 = load i16, i16* %9, align 8
  %.mask1 = and i16 %18, 64
  %19 = icmp eq i16 %.mask1, 0
  br i1 %19, label %21, label %20

; <label>:20                                      ; preds = %16
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %8, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.32.406, i64 0, i64 0)) #2
  br label %23

; <label>:21                                      ; preds = %16
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %8, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10.414, i64 0, i64 0)) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %8, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.11.377, i64 0, i64 0)) #2
  %22 = load i8*, i8** %12, align 8, !tbaa !36
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %8, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.59.474, i64 0, i64 0), i8* %22) #2
  tail call fastcc void @FactoryInvokeParams.475(%struct._tagTreeCCStream* %8, %struct._tagTreeCCNode* %node)
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %8, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.32.406, i64 0, i64 0)) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.52.381, i64 0, i64 0)) #2
  br label %23

; <label>:23                                      ; preds = %20, %21, %0
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @BuildTypeDecls.388(%struct._tagTreeCCContext* %context, %struct._tagTreeCCNode* %node) #0 {
  %1 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 5
  %2 = load i32, i32* %1, align 4, !tbaa !34
  %3 = and i32 %2, 24
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %127

; <label>:5                                       ; preds = %0
  %6 = tail call i32 @TreeCCNodeHasAbstracts(%struct._tagTreeCCContext* %context, %struct._tagTreeCCNode* %node) #2
  %7 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 4
  %8 = load i8*, i8** %7, align 8, !tbaa !36
  %9 = tail call %struct._tagTreeCCStream* @TreeCCStreamGetJava(%struct._tagTreeCCContext* %context, i8* %8) #2
  %10 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 0
  %11 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %10, align 8, !tbaa !38
  %12 = icmp eq %struct._tagTreeCCNode* %11, null
  %13 = icmp ne i32 %6, 0
  br i1 %12, label %20, label %14

; <label>:14                                      ; preds = %5
  %15 = load i8*, i8** %7, align 8, !tbaa !36
  %16 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %11, i64 0, i32 4
  %17 = load i8*, i8** %16, align 8, !tbaa !36
  br i1 %13, label %18, label %19

; <label>:18                                      ; preds = %14
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %9, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.60.427, i64 0, i64 0), i8* %15, i8* %17) #2
  br label %41

; <label>:19                                      ; preds = %14
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %9, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.61.428, i64 0, i64 0), i8* %15, i8* %17) #2
  br label %41

; <label>:20                                      ; preds = %5
  %21 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 16
  %22 = load i8*, i8** %21, align 8, !tbaa !12
  %23 = icmp ne i8* %22, null
  %24 = load i8*, i8** %7, align 8, !tbaa !36
  br i1 %13, label %25, label %28

; <label>:25                                      ; preds = %20
  br i1 %23, label %26, label %27

; <label>:26                                      ; preds = %25
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %9, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.60.427, i64 0, i64 0), i8* %24, i8* %22) #2
  br label %31

; <label>:27                                      ; preds = %25
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %9, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.62.429, i64 0, i64 0), i8* %24) #2
  br label %31

; <label>:28                                      ; preds = %20
  br i1 %23, label %29, label %30

; <label>:29                                      ; preds = %28
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %9, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.61.428, i64 0, i64 0), i8* %24, i8* %22) #2
  br label %31

; <label>:30                                      ; preds = %28
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %9, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.63.430, i64 0, i64 0), i8* %24) #2
  br label %31

; <label>:31                                      ; preds = %29, %30, %26, %27
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %9, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.64.431, i64 0, i64 0)) #2
  %32 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 8
  %33 = load i16, i16* %32, align 8
  %.mask = and i16 %33, 2
  %34 = icmp eq i16 %.mask, 0
  br i1 %34, label %36, label %35

; <label>:35                                      ; preds = %31
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %9, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.65.432, i64 0, i64 0)) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %9, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.66.433, i64 0, i64 0)) #2
  br label %36

; <label>:36                                      ; preds = %31, %35
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %9, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.27.369, i64 0, i64 0)) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %9, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.67.434, i64 0, i64 0)) #2
  %37 = load i16, i16* %32, align 8
  %.mask1 = and i16 %37, 2
  %38 = icmp eq i16 %.mask1, 0
  br i1 %38, label %40, label %39

; <label>:39                                      ; preds = %36
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %9, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.68.435, i64 0, i64 0)) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %9, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.69.436, i64 0, i64 0)) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %9, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.70.437, i64 0, i64 0)) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %9, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.71.438, i64 0, i64 0)) #2
  br label %40

; <label>:40                                      ; preds = %36, %39
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %9, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.27.369, i64 0, i64 0)) #2
  br label %41

; <label>:41                                      ; preds = %18, %19, %40
  %42 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 6
  %43 = load i32, i32* %42, align 4, !tbaa !37
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %9, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.72.439, i64 0, i64 0), i32 %43) #2
  %44 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 10
  %45 = load %struct._tagTreeCCField*, %struct._tagTreeCCField** %44, align 8, !tbaa !67
  %46 = icmp eq %struct._tagTreeCCField* %45, null
  br i1 %46, label %61, label %.lr.ph.i.preheader

.lr.ph.i.preheader:                               ; preds = %41
  br label %.lr.ph.i

.lr.ph.i:                                         ; preds = %.lr.ph.i.preheader, %ConvertType.exit.i
  %field.02.i = phi %struct._tagTreeCCField* [ %field.0.i, %ConvertType.exit.i ], [ %45, %.lr.ph.i.preheader ]
  %47 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.02.i, i64 0, i32 1
  %48 = load i8*, i8** %47, align 8, !tbaa !63
  %49 = tail call %struct._tagTreeCCNode* @TreeCCNodeFind(%struct._tagTreeCCContext* %context, i8* %48) #2
  %50 = icmp eq %struct._tagTreeCCNode* %49, null
  br i1 %50, label %56, label %51

; <label>:51                                      ; preds = %.lr.ph.i
  %52 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %49, i64 0, i32 5
  %53 = load i32, i32* %52, align 4, !tbaa !34
  %54 = and i32 %53, 8
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %ConvertType.exit.i

; <label>:56                                      ; preds = %51, %.lr.ph.i
  br label %ConvertType.exit.i

ConvertType.exit.i:                               ; preds = %56, %51
  %.0.i.i = phi i8* [ %48, %56 ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @.str.12.410, i64 0, i64 0), %51 ]
  %57 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.02.i, i64 0, i32 0
  %58 = load i8*, i8** %57, align 8, !tbaa !64
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %9, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.94.440, i64 0, i64 0), i8* %.0.i.i, i8* %58) #2
  %59 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.02.i, i64 0, i32 6
  %field.0.i = load %struct._tagTreeCCField*, %struct._tagTreeCCField** %59, align 8
  %60 = icmp eq %struct._tagTreeCCField* %field.0.i, null
  br i1 %60, label %DeclareFields.exit, label %.lr.ph.i

DeclareFields.exit:                               ; preds = %ConvertType.exit.i
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %9, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.27.369, i64 0, i64 0)) #2
  br label %61

; <label>:61                                      ; preds = %41, %DeclareFields.exit
  %62 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 8
  %63 = load i16, i16* %62, align 8
  %.mask2 = and i16 %63, 8
  %64 = icmp eq i16 %.mask2, 0
  br i1 %64, label %68, label %65

; <label>:65                                      ; preds = %61
  %66 = and i16 %63, 96
  %67 = icmp eq i16 %66, 0
  %.10 = select i1 %67, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.74.441, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.73.442, i64 0, i64 0)
  br label %72

; <label>:68                                      ; preds = %61
  %69 = load i32, i32* %1, align 4, !tbaa !34
  %70 = and i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %. = select i1 %71, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.73.442, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.75.443, i64 0, i64 0)
  br label %72

; <label>:72                                      ; preds = %65, %68
  %constructorAccess.0 = phi i8* [ %., %68 ], [ %.10, %65 ]
  %73 = load i8*, i8** %7, align 8, !tbaa !36
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %9, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.76.444, i64 0, i64 0), i8* %constructorAccess.0, i8* %73) #2
  %74 = load i16, i16* %62, align 8
  %.mask3 = and i16 %74, 8
  %75 = icmp eq i16 %.mask3, 0
  br i1 %75, label %79, label %76

; <label>:76                                      ; preds = %72
  %77 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 10
  %78 = load i8*, i8** %77, align 8, !tbaa !31
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %9, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.77.445, i64 0, i64 0), i8* %78) #2
  br label %79

; <label>:79                                      ; preds = %72, %76
  %needComma.0 = phi i32 [ 1, %76 ], [ 0, %72 ]
  %80 = tail call fastcc i32 @CreateParams.446(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %9, %struct._tagTreeCCNode* %node, i32 %needComma.0)
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %9, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10.414, i64 0, i64 0)) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %9, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.11.377, i64 0, i64 0)) #2
  %81 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %10, align 8, !tbaa !38
  %82 = icmp eq %struct._tagTreeCCNode* %81, null
  br i1 %82, label %90, label %83

; <label>:83                                      ; preds = %79
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %9, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.78.447, i64 0, i64 0)) #2
  %84 = load i16, i16* %62, align 8
  %.mask6 = and i16 %84, 8
  %85 = icmp eq i16 %.mask6, 0
  br i1 %85, label %87, label %86

; <label>:86                                      ; preds = %83
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %9, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.79.448, i64 0, i64 0)) #2
  br label %87

; <label>:87                                      ; preds = %83, %86
  %needComma.1 = phi i32 [ 1, %86 ], [ 0, %83 ]
  %88 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %10, align 8, !tbaa !38
  %89 = tail call fastcc i32 @InheritParamsSource.449(%struct._tagTreeCCStream* %9, %struct._tagTreeCCNode* %88, i32 %needComma.1)
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %9, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.32.406, i64 0, i64 0)) #2
  br label %90

; <label>:90                                      ; preds = %79, %87
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %9, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.80.450, i64 0, i64 0)) #2
  %91 = load i16, i16* %62, align 8
  %.mask4 = and i16 %91, 2
  %92 = icmp eq i16 %.mask4, 0
  br i1 %92, label %.preheader, label %93

; <label>:93                                      ; preds = %90
  %94 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %10, align 8, !tbaa !38
  %95 = icmp eq %struct._tagTreeCCNode* %94, null
  br i1 %95, label %96, label %.preheader

; <label>:96                                      ; preds = %93
  %.mask5 = and i16 %91, 8
  %97 = icmp eq i16 %.mask5, 0
  br i1 %97, label %99, label %98

; <label>:98                                      ; preds = %96
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %9, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.81.451, i64 0, i64 0)) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %9, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.82.452, i64 0, i64 0)) #2
  br label %.preheader

; <label>:99                                      ; preds = %96
  %100 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 10
  %101 = load i8*, i8** %100, align 8, !tbaa !31
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %9, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.83.453, i64 0, i64 0), i8* %101) #2
  %102 = load i8*, i8** %100, align 8, !tbaa !31
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %9, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.84.454, i64 0, i64 0), i8* %102) #2
  br label %.preheader

.preheader:                                       ; preds = %93, %90, %98, %99
  %field.0.11 = load %struct._tagTreeCCField*, %struct._tagTreeCCField** %44, align 8
  %103 = icmp eq %struct._tagTreeCCField* %field.0.11, null
  br i1 %103, label %._crit_edge, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %.preheader
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %118
  %field.012 = phi %struct._tagTreeCCField* [ %field.0, %118 ], [ %field.0.11, %.lr.ph.preheader ]
  %104 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.012, i64 0, i32 3
  %105 = load i32, i32* %104, align 4, !tbaa !61
  %106 = and i32 %105, 1
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %108, label %111

; <label>:108                                     ; preds = %.lr.ph
  %109 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.012, i64 0, i32 0
  %110 = load i8*, i8** %109, align 8, !tbaa !64
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %9, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.85.455, i64 0, i64 0), i8* %110, i8* %110) #2
  br label %118

; <label>:111                                     ; preds = %.lr.ph
  %112 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.012, i64 0, i32 2
  %113 = load i8*, i8** %112, align 8, !tbaa !65
  %114 = icmp eq i8* %113, null
  br i1 %114, label %118, label %115

; <label>:115                                     ; preds = %111
  %116 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.012, i64 0, i32 0
  %117 = load i8*, i8** %116, align 8, !tbaa !64
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %9, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.85.455, i64 0, i64 0), i8* %117, i8* %113) #2
  br label %118

; <label>:118                                     ; preds = %111, %115, %108
  %119 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.012, i64 0, i32 6
  %field.0 = load %struct._tagTreeCCField*, %struct._tagTreeCCField** %119, align 8
  %120 = icmp eq %struct._tagTreeCCField* %field.0, null
  br i1 %120, label %._crit_edge.loopexit, label %.lr.ph

._crit_edge.loopexit:                             ; preds = %118
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %.preheader
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %9, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.52.381, i64 0, i64 0)) #2
  tail call fastcc void @ImplementVirtuals.456(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %9, %struct._tagTreeCCNode* %node, %struct._tagTreeCCNode* %node)
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %9, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.86.457, i64 0, i64 0)) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %9, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.11.377, i64 0, i64 0)) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %9, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.87.458, i64 0, i64 0)) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %9, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.88.459, i64 0, i64 0)) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %9, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.89.460, i64 0, i64 0)) #2
  %121 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %10, align 8, !tbaa !38
  %122 = icmp eq %struct._tagTreeCCNode* %121, null
  br i1 %122, label %124, label %123

; <label>:123                                     ; preds = %._crit_edge
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %9, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.90.461, i64 0, i64 0)) #2
  br label %125

; <label>:124                                     ; preds = %._crit_edge
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %9, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.91.462, i64 0, i64 0)) #2
  br label %125

; <label>:125                                     ; preds = %124, %123
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %9, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.52.381, i64 0, i64 0)) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %9, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.92.463, i64 0, i64 0)) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %9, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.11.377, i64 0, i64 0)) #2
  %126 = load i8*, i8** %7, align 8, !tbaa !36
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %9, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.93.464, i64 0, i64 0), i8* %126) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %9, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.40.392, i64 0, i64 0)) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %9, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.26.387, i64 0, i64 0)) #2
  br label %127

; <label>:127                                     ; preds = %0, %125
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @Java_GenStart(%struct._tagTreeCCContext* nocapture readonly %context, %struct._tagTreeCCStream* %stream, %struct._tagTreeCCOperation* nocapture readonly %oper) #0 {
  %1 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 8
  %2 = load i16, i16* %1, align 8
  %.mask = and i16 %2, 1024
  %3 = icmp eq i16 %.mask, 0
  br i1 %3, label %8, label %4

; <label>:4                                       ; preds = %0
  %5 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 13
  %6 = load i32, i32* %5, align 4, !tbaa !9
  %7 = icmp eq i32 %6, 3
  br i1 %7, label %9, label %8

; <label>:8                                       ; preds = %0, %4
  br label %9

; <label>:9                                       ; preds = %4, %8
  %accessMode.0 = phi i8* [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.424, i64 0, i64 0), %8 ], [ getelementptr inbounds ([9 x i8], [9 x i8]* @.str.425, i64 0, i64 0), %4 ]
  %10 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %oper, i64 0, i32 1
  %11 = load i8*, i8** %10, align 8, !tbaa !60
  %12 = icmp eq i8* %11, null
  br i1 %12, label %14, label %13

; <label>:13                                      ; preds = %9
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2.426, i64 0, i64 0), i8* %accessMode.0, i8* %11) #2
  br label %17

; <label>:14                                      ; preds = %9
  %15 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %oper, i64 0, i32 0
  %16 = load i8*, i8** %15, align 8, !tbaa !46
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2.426, i64 0, i64 0), i8* %accessMode.0, i8* %16) #2
  br label %17

; <label>:17                                      ; preds = %14, %13
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @Java_GenEntry(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %stream, %struct._tagTreeCCOperation* nocapture readonly %oper) #0 {
  tail call fastcc void @JavaGenEntry(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %stream, %struct._tagTreeCCOperation* %oper, i32 -1)
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @Java_GenSplitEntry(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %stream, %struct._tagTreeCCOperation* nocapture readonly %oper, i32 %number) #0 {
  tail call fastcc void @JavaGenEntry(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %stream, %struct._tagTreeCCOperation* %oper, i32 %number)
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @Java_GenSwitchHead(%struct._tagTreeCCContext* nocapture readnone %context, %struct._tagTreeCCStream* %stream, i8* %paramName, i32 %level, i32 %isEnum) #0 {
  %1 = shl nsw i32 %level, 1
  %2 = add nsw i32 %1, 2
  %3 = icmp sgt i32 %2, 3
  br i1 %3, label %.lr.ph.i.preheader, label %7

.lr.ph.i.preheader:                               ; preds = %0
  br label %.lr.ph.i

.lr.ph.i:                                         ; preds = %.lr.ph.i.preheader, %.lr.ph.i
  %.01.i = phi i32 [ %4, %.lr.ph.i ], [ %2, %.lr.ph.i.preheader ]
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.16.393, i64 0, i64 0)) #2
  %4 = add nsw i32 %.01.i, -4
  %5 = icmp sgt i32 %4, 3
  br i1 %5, label %.lr.ph.i, label %._crit_edge.i

._crit_edge.i:                                    ; preds = %.lr.ph.i
  %6 = and i32 %2, 2
  br label %7

; <label>:7                                       ; preds = %._crit_edge.i, %0
  %.0.lcssa.i = phi i32 [ %6, %._crit_edge.i ], [ %2, %0 ]
  switch i32 %.0.lcssa.i, label %Indent.exit [
    i32 1, label %8
    i32 2, label %9
    i32 3, label %10
  ]

; <label>:8                                       ; preds = %7
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.17.394, i64 0, i64 0)) #2
  br label %Indent.exit

; <label>:9                                       ; preds = %7
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18.395, i64 0, i64 0)) #2
  br label %Indent.exit

; <label>:10                                      ; preds = %7
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.19.396, i64 0, i64 0)) #2
  br label %Indent.exit

Indent.exit:                                      ; preds = %7, %8, %9, %10
  %11 = icmp eq i32 %isEnum, 0
  br i1 %11, label %13, label %12

; <label>:12                                      ; preds = %Indent.exit
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.13.419, i64 0, i64 0), i8* %paramName) #2
  br label %14

; <label>:13                                      ; preds = %Indent.exit
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.14.420, i64 0, i64 0), i8* %paramName) #2
  br label %14

; <label>:14                                      ; preds = %13, %12
  br i1 %3, label %.lr.ph.i.2.preheader, label %18

.lr.ph.i.2.preheader:                             ; preds = %14
  br label %.lr.ph.i.2

.lr.ph.i.2:                                       ; preds = %.lr.ph.i.2.preheader, %.lr.ph.i.2
  %.01.i.1 = phi i32 [ %15, %.lr.ph.i.2 ], [ %2, %.lr.ph.i.2.preheader ]
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.16.393, i64 0, i64 0)) #2
  %15 = add nsw i32 %.01.i.1, -4
  %16 = icmp sgt i32 %15, 3
  br i1 %16, label %.lr.ph.i.2, label %._crit_edge.i.3

._crit_edge.i.3:                                  ; preds = %.lr.ph.i.2
  %17 = and i32 %2, 2
  br label %18

; <label>:18                                      ; preds = %._crit_edge.i.3, %14
  %.0.lcssa.i.4 = phi i32 [ %17, %._crit_edge.i.3 ], [ %2, %14 ]
  switch i32 %.0.lcssa.i.4, label %Indent.exit5 [
    i32 1, label %19
    i32 2, label %20
    i32 3, label %21
  ]

; <label>:19                                      ; preds = %18
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.17.394, i64 0, i64 0)) #2
  br label %Indent.exit5

; <label>:20                                      ; preds = %18
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18.395, i64 0, i64 0)) #2
  br label %Indent.exit5

; <label>:21                                      ; preds = %18
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.19.396, i64 0, i64 0)) #2
  br label %Indent.exit5

Indent.exit5:                                     ; preds = %18, %19, %20, %21
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.15.416, i64 0, i64 0)) #2
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @Java_GenSelector(%struct._tagTreeCCContext* nocapture readnone %context, %struct._tagTreeCCStream* %stream, %struct._tagTreeCCNode* nocapture readonly %node, i32 %level) #0 {
  %1 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 5
  %2 = load i32, i32* %1, align 4, !tbaa !34
  %3 = and i32 %2, 16
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %22, label %5

; <label>:5                                       ; preds = %0
  %6 = shl nsw i32 %level, 1
  %7 = add nsw i32 %6, 3
  %8 = icmp sgt i32 %level, 0
  br i1 %8, label %.lr.ph.i.preheader, label %12

.lr.ph.i.preheader:                               ; preds = %5
  br label %.lr.ph.i

.lr.ph.i:                                         ; preds = %.lr.ph.i.preheader, %.lr.ph.i
  %.01.i = phi i32 [ %9, %.lr.ph.i ], [ %7, %.lr.ph.i.preheader ]
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.16.393, i64 0, i64 0)) #2
  %9 = add nsw i32 %.01.i, -4
  %10 = icmp sgt i32 %9, 3
  br i1 %10, label %.lr.ph.i, label %._crit_edge.i

._crit_edge.i:                                    ; preds = %.lr.ph.i
  %11 = and i32 %7, 3
  br label %12

; <label>:12                                      ; preds = %._crit_edge.i, %5
  %.0.lcssa.i = phi i32 [ %11, %._crit_edge.i ], [ %7, %5 ]
  switch i32 %.0.lcssa.i, label %Indent.exit [
    i32 1, label %13
    i32 2, label %14
    i32 3, label %15
  ]

; <label>:13                                      ; preds = %12
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.17.394, i64 0, i64 0)) #2
  br label %Indent.exit

; <label>:14                                      ; preds = %12
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18.395, i64 0, i64 0)) #2
  br label %Indent.exit

; <label>:15                                      ; preds = %12
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.19.396, i64 0, i64 0)) #2
  br label %Indent.exit

Indent.exit:                                      ; preds = %12, %13, %14, %15
  %16 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 0
  %17 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %16, align 8, !tbaa !38
  %18 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %17, i64 0, i32 4
  %19 = load i8*, i8** %18, align 8, !tbaa !36
  %20 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 4
  %21 = load i8*, i8** %20, align 8, !tbaa !36
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.20.417, i64 0, i64 0), i8* %19, i8* %21) #2
  br label %38

; <label>:22                                      ; preds = %0
  %23 = and i32 %2, 8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %38

; <label>:25                                      ; preds = %22
  %26 = shl nsw i32 %level, 1
  %27 = add nsw i32 %26, 3
  %28 = icmp sgt i32 %level, 0
  br i1 %28, label %.lr.ph.i.2.preheader, label %32

.lr.ph.i.2.preheader:                             ; preds = %25
  br label %.lr.ph.i.2

.lr.ph.i.2:                                       ; preds = %.lr.ph.i.2.preheader, %.lr.ph.i.2
  %.01.i.1 = phi i32 [ %29, %.lr.ph.i.2 ], [ %27, %.lr.ph.i.2.preheader ]
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.16.393, i64 0, i64 0)) #2
  %29 = add nsw i32 %.01.i.1, -4
  %30 = icmp sgt i32 %29, 3
  br i1 %30, label %.lr.ph.i.2, label %._crit_edge.i.3

._crit_edge.i.3:                                  ; preds = %.lr.ph.i.2
  %31 = and i32 %27, 3
  br label %32

; <label>:32                                      ; preds = %._crit_edge.i.3, %25
  %.0.lcssa.i.4 = phi i32 [ %31, %._crit_edge.i.3 ], [ %27, %25 ]
  switch i32 %.0.lcssa.i.4, label %Indent.exit5 [
    i32 1, label %33
    i32 2, label %34
    i32 3, label %35
  ]

; <label>:33                                      ; preds = %32
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.17.394, i64 0, i64 0)) #2
  br label %Indent.exit5

; <label>:34                                      ; preds = %32
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18.395, i64 0, i64 0)) #2
  br label %Indent.exit5

; <label>:35                                      ; preds = %32
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.19.396, i64 0, i64 0)) #2
  br label %Indent.exit5

Indent.exit5:                                     ; preds = %32, %33, %34, %35
  %36 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 4
  %37 = load i8*, i8** %36, align 8, !tbaa !36
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.21.418, i64 0, i64 0), i8* %37) #2
  br label %38

; <label>:38                                      ; preds = %22, %Indent.exit5, %Indent.exit
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @Java_GenEndSelectors(%struct._tagTreeCCContext* nocapture readnone %context, %struct._tagTreeCCStream* %stream, i32 %level) #0 {
  %1 = shl nsw i32 %level, 1
  %2 = add nsw i32 %1, 3
  %3 = icmp sgt i32 %level, 0
  br i1 %3, label %.lr.ph.i.preheader, label %7

.lr.ph.i.preheader:                               ; preds = %0
  br label %.lr.ph.i

.lr.ph.i:                                         ; preds = %.lr.ph.i.preheader, %.lr.ph.i
  %.01.i = phi i32 [ %4, %.lr.ph.i ], [ %2, %.lr.ph.i.preheader ]
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.16.393, i64 0, i64 0)) #2
  %4 = add nsw i32 %.01.i, -4
  %5 = icmp sgt i32 %4, 3
  br i1 %5, label %.lr.ph.i, label %._crit_edge.i

._crit_edge.i:                                    ; preds = %.lr.ph.i
  %6 = and i32 %2, 3
  br label %7

; <label>:7                                       ; preds = %._crit_edge.i, %0
  %.0.lcssa.i = phi i32 [ %6, %._crit_edge.i ], [ %2, %0 ]
  switch i32 %.0.lcssa.i, label %Indent.exit [
    i32 1, label %8
    i32 2, label %9
    i32 3, label %10
  ]

; <label>:8                                       ; preds = %7
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.17.394, i64 0, i64 0)) #2
  br label %Indent.exit

; <label>:9                                       ; preds = %7
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18.395, i64 0, i64 0)) #2
  br label %Indent.exit

; <label>:10                                      ; preds = %7
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.19.396, i64 0, i64 0)) #2
  br label %Indent.exit

Indent.exit:                                      ; preds = %7, %8, %9, %10
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.15.416, i64 0, i64 0)) #2
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @Java_GenCaseFunc(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %stream, %struct._tagTreeCCOperationCase* nocapture readonly %operCase, i32 %number) #0 {
  %1 = getelementptr inbounds %struct._tagTreeCCOperationCase, %struct._tagTreeCCOperationCase* %operCase, i64 0, i32 2
  %2 = load %struct._tagTreeCCOperation*, %struct._tagTreeCCOperation** %1, align 8, !tbaa !49
  %3 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %2, i64 0, i32 2
  %4 = load i8*, i8** %3, align 8, !tbaa !45
  %5 = tail call %struct._tagTreeCCNode* @TreeCCNodeFind(%struct._tagTreeCCContext* %context, i8* %4) #2
  %6 = icmp eq %struct._tagTreeCCNode* %5, null
  br i1 %6, label %12, label %7

; <label>:7                                       ; preds = %0
  %8 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %5, i64 0, i32 5
  %9 = load i32, i32* %8, align 4, !tbaa !34
  %10 = and i32 %9, 8
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %ConvertType.exit

; <label>:12                                      ; preds = %7, %0
  br label %ConvertType.exit

ConvertType.exit:                                 ; preds = %7, %12
  %.0.i = phi i8* [ %4, %12 ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @.str.12.410, i64 0, i64 0), %7 ]
  %13 = load %struct._tagTreeCCOperation*, %struct._tagTreeCCOperation** %1, align 8, !tbaa !49
  %14 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %13, i64 0, i32 0
  %15 = load i8*, i8** %14, align 8, !tbaa !46
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.22.411, i64 0, i64 0), i8* %.0.i, i8* %15, i32 %number) #2
  %16 = load %struct._tagTreeCCOperation*, %struct._tagTreeCCOperation** %1, align 8, !tbaa !49
  %17 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %16, i64 0, i32 4
  %param.0.6 = load %struct._tagTreeCCParam*, %struct._tagTreeCCParam** %17, align 8
  %18 = icmp eq %struct._tagTreeCCParam* %param.0.6, null
  br i1 %18, label %ConvertType.exit._crit_edge, label %.lr.ph

ConvertType.exit._crit_edge:                      ; preds = %ConvertType.exit
  %.pre = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 13
  br label %._crit_edge

.lr.ph:                                           ; preds = %ConvertType.exit
  %19 = getelementptr inbounds %struct._tagTreeCCOperationCase, %struct._tagTreeCCOperationCase* %operCase, i64 0, i32 0
  %20 = load %struct._tagTreeCCTrigger*, %struct._tagTreeCCTrigger** %19, align 8, !tbaa !51
  %21 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 13
  br label %22

; <label>:22                                      ; preds = %.lr.ph, %73
  %param.011 = phi %struct._tagTreeCCParam* [ %param.0.6, %.lr.ph ], [ %param.0, %73 ]
  %needComma.010 = phi i1 [ true, %.lr.ph ], [ false, %73 ]
  %num.08 = phi i32 [ 1, %.lr.ph ], [ %num.1, %73 ]
  %trigger.07 = phi %struct._tagTreeCCTrigger* [ %20, %.lr.ph ], [ %trigger.1, %73 ]
  br i1 %needComma.010, label %24, label %23

; <label>:23                                      ; preds = %22
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.401, i64 0, i64 0)) #2
  br label %24

; <label>:24                                      ; preds = %22, %23
  %25 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.011, i64 0, i32 2
  %26 = load i32, i32* %25, align 4, !tbaa !52
  %27 = and i32 %26, 1
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %40, label %29

; <label>:29                                      ; preds = %24
  %30 = getelementptr inbounds %struct._tagTreeCCTrigger, %struct._tagTreeCCTrigger* %trigger.07, i64 0, i32 0
  %31 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %30, align 8, !tbaa !53
  %32 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %31, i64 0, i32 5
  %33 = load i32, i32* %32, align 4, !tbaa !34
  %34 = and i32 %33, 24
  %35 = icmp eq i32 %34, 0
  %36 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %31, i64 0, i32 4
  %37 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.011, i64 0, i32 1
  %type.0.in = select i1 %35, i8** %36, i8** %37
  %38 = getelementptr inbounds %struct._tagTreeCCTrigger, %struct._tagTreeCCTrigger* %trigger.07, i64 0, i32 1
  %39 = load %struct._tagTreeCCTrigger*, %struct._tagTreeCCTrigger** %38, align 8, !tbaa !55
  br label %42

; <label>:40                                      ; preds = %24
  %41 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.011, i64 0, i32 1
  br label %42

; <label>:42                                      ; preds = %40, %29
  %trigger.1 = phi %struct._tagTreeCCTrigger* [ %39, %29 ], [ %trigger.07, %40 ]
  %type.1.in = phi i8** [ %type.0.in, %29 ], [ %41, %40 ]
  %type.1 = load i8*, i8** %type.1.in, align 8
  %43 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.011, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8, !tbaa !41
  %45 = icmp eq i8* %44, null
  %46 = load i32, i32* %21, align 4, !tbaa !9
  %47 = icmp eq i32 %46, 3
  br i1 %45, label %60, label %48

; <label>:48                                      ; preds = %42
  br i1 %47, label %49, label %50

; <label>:49                                      ; preds = %48
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.23.412, i64 0, i64 0), i8* %type.1, i8* %44) #2
  br label %73

; <label>:50                                      ; preds = %48
  %51 = tail call %struct._tagTreeCCNode* @TreeCCNodeFind(%struct._tagTreeCCContext* %context, i8* %type.1) #2
  %52 = icmp eq %struct._tagTreeCCNode* %51, null
  br i1 %52, label %58, label %53

; <label>:53                                      ; preds = %50
  %54 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %51, i64 0, i32 5
  %55 = load i32, i32* %54, align 4, !tbaa !34
  %56 = and i32 %55, 8
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %ConvertType.exit3

; <label>:58                                      ; preds = %53, %50
  br label %ConvertType.exit3

ConvertType.exit3:                                ; preds = %53, %58
  %.0.i.2 = phi i8* [ %type.1, %58 ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @.str.12.410, i64 0, i64 0), %53 ]
  %59 = load i8*, i8** %43, align 8, !tbaa !41
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.23.412, i64 0, i64 0), i8* %.0.i.2, i8* %59) #2
  br label %73

; <label>:60                                      ; preds = %42
  br i1 %47, label %61, label %62

; <label>:61                                      ; preds = %60
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.24.413, i64 0, i64 0), i8* %type.1, i32 %num.08) #2
  br label %71

; <label>:62                                      ; preds = %60
  %63 = tail call %struct._tagTreeCCNode* @TreeCCNodeFind(%struct._tagTreeCCContext* %context, i8* %type.1) #2
  %64 = icmp eq %struct._tagTreeCCNode* %63, null
  br i1 %64, label %70, label %65

; <label>:65                                      ; preds = %62
  %66 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %63, i64 0, i32 5
  %67 = load i32, i32* %66, align 4, !tbaa !34
  %68 = and i32 %67, 8
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %ConvertType.exit5

; <label>:70                                      ; preds = %65, %62
  br label %ConvertType.exit5

ConvertType.exit5:                                ; preds = %65, %70
  %.0.i.4 = phi i8* [ %type.1, %70 ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @.str.12.410, i64 0, i64 0), %65 ]
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.24.413, i64 0, i64 0), i8* %.0.i.4, i32 %num.08) #2
  br label %71

; <label>:71                                      ; preds = %ConvertType.exit5, %61
  %72 = add nsw i32 %num.08, 1
  br label %73

; <label>:73                                      ; preds = %49, %ConvertType.exit3, %71
  %num.1 = phi i32 [ %num.08, %49 ], [ %num.08, %ConvertType.exit3 ], [ %72, %71 ]
  %74 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.011, i64 0, i32 4
  %param.0 = load %struct._tagTreeCCParam*, %struct._tagTreeCCParam** %74, align 8
  %75 = icmp eq %struct._tagTreeCCParam* %param.0, null
  br i1 %75, label %._crit_edge.loopexit, label %22

._crit_edge.loopexit:                             ; preds = %73
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %ConvertType.exit._crit_edge
  %.pre-phi = phi i32* [ %.pre, %ConvertType.exit._crit_edge ], [ %21, %._crit_edge.loopexit ]
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10.414, i64 0, i64 0)) #2
  %76 = load i32, i32* %.pre-phi, align 4, !tbaa !9
  %77 = icmp eq i32 %76, 3
  br i1 %77, label %78, label %83

; <label>:78                                      ; preds = %._crit_edge
  %79 = getelementptr inbounds %struct._tagTreeCCOperationCase, %struct._tagTreeCCOperationCase* %operCase, i64 0, i32 7
  %80 = load i64, i64* %79, align 8, !tbaa !56
  %81 = getelementptr inbounds %struct._tagTreeCCOperationCase, %struct._tagTreeCCOperationCase* %operCase, i64 0, i32 6
  %82 = load i8*, i8** %81, align 8, !tbaa !57
  tail call void @TreeCCStreamLine(%struct._tagTreeCCStream* %stream, i64 %80, i8* %82) #2
  br label %83

; <label>:83                                      ; preds = %78, %._crit_edge
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.25.415, i64 0, i64 0)) #2
  %84 = getelementptr inbounds %struct._tagTreeCCOperationCase, %struct._tagTreeCCOperationCase* %operCase, i64 0, i32 1
  %85 = load i8*, i8** %84, align 8, !tbaa !58
  %86 = icmp eq i8* %85, null
  br i1 %86, label %88, label %87

; <label>:87                                      ; preds = %83
  tail call void @TreeCCStreamCodeIndent(%struct._tagTreeCCStream* %stream, i8* %85, i32 1) #2
  br label %88

; <label>:88                                      ; preds = %83, %87
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.26.387, i64 0, i64 0)) #2
  %89 = load i32, i32* %.pre-phi, align 4, !tbaa !9
  %90 = icmp eq i32 %89, 3
  br i1 %90, label %91, label %92

; <label>:91                                      ; preds = %88
  tail call void @TreeCCStreamFixLine(%struct._tagTreeCCStream* %stream) #2
  br label %92

; <label>:92                                      ; preds = %91, %88
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.27.369, i64 0, i64 0)) #2
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @Java_GenCaseCall(%struct._tagTreeCCContext* nocapture readnone %context, %struct._tagTreeCCStream* %stream, %struct._tagTreeCCOperationCase* nocapture readonly %operCase, i32 %number, i32 %level) #0 {
  %1 = shl nsw i32 %level, 1
  %2 = add nsw i32 %1, 4
  %3 = icmp sgt i32 %2, 3
  br i1 %3, label %.lr.ph.i.preheader, label %7

.lr.ph.i.preheader:                               ; preds = %0
  br label %.lr.ph.i

.lr.ph.i:                                         ; preds = %.lr.ph.i.preheader, %.lr.ph.i
  %.01.i = phi i32 [ %4, %.lr.ph.i ], [ %2, %.lr.ph.i.preheader ]
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.16.393, i64 0, i64 0)) #2
  %4 = add nsw i32 %.01.i, -4
  %5 = icmp sgt i32 %4, 3
  br i1 %5, label %.lr.ph.i, label %._crit_edge.i

._crit_edge.i:                                    ; preds = %.lr.ph.i
  %6 = and i32 %2, 2
  br label %7

; <label>:7                                       ; preds = %._crit_edge.i, %0
  %.0.lcssa.i = phi i32 [ %6, %._crit_edge.i ], [ %2, %0 ]
  switch i32 %.0.lcssa.i, label %Indent.exit [
    i32 1, label %8
    i32 2, label %9
    i32 3, label %10
  ]

; <label>:8                                       ; preds = %7
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.17.394, i64 0, i64 0)) #2
  br label %Indent.exit

; <label>:9                                       ; preds = %7
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18.395, i64 0, i64 0)) #2
  br label %Indent.exit

; <label>:10                                      ; preds = %7
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.19.396, i64 0, i64 0)) #2
  br label %Indent.exit

Indent.exit:                                      ; preds = %7, %8, %9, %10
  %11 = getelementptr inbounds %struct._tagTreeCCOperationCase, %struct._tagTreeCCOperationCase* %operCase, i64 0, i32 2
  %12 = load %struct._tagTreeCCOperation*, %struct._tagTreeCCOperation** %11, align 8, !tbaa !49
  %13 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %12, i64 0, i32 2
  %14 = load i8*, i8** %13, align 8, !tbaa !45
  %15 = tail call i32 @strcmp(i8* %14, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.28.389, i64 0, i64 0)) #2
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %18, label %17

; <label>:17                                      ; preds = %Indent.exit
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.29.399, i64 0, i64 0)) #2
  %.pre = load %struct._tagTreeCCOperation*, %struct._tagTreeCCOperation** %11, align 8, !tbaa !49
  br label %18

; <label>:18                                      ; preds = %Indent.exit, %17
  %19 = phi %struct._tagTreeCCOperation* [ %12, %Indent.exit ], [ %.pre, %17 ]
  %20 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %19, i64 0, i32 0
  %21 = load i8*, i8** %20, align 8, !tbaa !46
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.30.409, i64 0, i64 0), i8* %21, i32 %number) #2
  %22 = load %struct._tagTreeCCOperation*, %struct._tagTreeCCOperation** %11, align 8, !tbaa !49
  %23 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %22, i64 0, i32 4
  %param.0.9 = load %struct._tagTreeCCParam*, %struct._tagTreeCCParam** %23, align 8
  %24 = icmp eq %struct._tagTreeCCParam* %param.0.9, null
  br i1 %24, label %._crit_edge, label %.lr.ph

.lr.ph:                                           ; preds = %18
  %25 = getelementptr inbounds %struct._tagTreeCCOperationCase, %struct._tagTreeCCOperationCase* %operCase, i64 0, i32 0
  %26 = load %struct._tagTreeCCTrigger*, %struct._tagTreeCCTrigger** %25, align 8, !tbaa !51
  br label %27

; <label>:27                                      ; preds = %.lr.ph, %66
  %param.013 = phi %struct._tagTreeCCParam* [ %param.0.9, %.lr.ph ], [ %param.0, %66 ]
  %trigger.012 = phi %struct._tagTreeCCTrigger* [ %26, %.lr.ph ], [ %trigger.1, %66 ]
  %num.011 = phi i32 [ 1, %.lr.ph ], [ %num.1, %66 ]
  %needComma.010 = phi i1 [ true, %.lr.ph ], [ false, %66 ]
  br i1 %needComma.010, label %29, label %28

; <label>:28                                      ; preds = %27
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.401, i64 0, i64 0)) #2
  br label %29

; <label>:29                                      ; preds = %27, %28
  %30 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.013, i64 0, i32 2
  %31 = load i32, i32* %30, align 4, !tbaa !52
  %32 = and i32 %31, 1
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %44, label %34

; <label>:34                                      ; preds = %29
  %35 = getelementptr inbounds %struct._tagTreeCCTrigger, %struct._tagTreeCCTrigger* %trigger.012, i64 0, i32 0
  %36 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %35, align 8, !tbaa !53
  %37 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %36, i64 0, i32 5
  %38 = load i32, i32* %37, align 4, !tbaa !34
  %39 = and i32 %38, 24
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %44

; <label>:41                                      ; preds = %34
  %42 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %36, i64 0, i32 4
  %43 = load i8*, i8** %42, align 8, !tbaa !36
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.31.402, i64 0, i64 0), i8* %43) #2
  br label %44

; <label>:44                                      ; preds = %29, %34, %41
  %45 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.013, i64 0, i32 0
  %46 = load i8*, i8** %45, align 8, !tbaa !41
  %47 = icmp eq i8* %46, null
  br i1 %47, label %49, label %48

; <label>:48                                      ; preds = %44
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7.403, i64 0, i64 0), i8* %46) #2
  br label %51

; <label>:49                                      ; preds = %44
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8.404, i64 0, i64 0), i32 %num.011) #2
  %50 = add nsw i32 %num.011, 1
  br label %51

; <label>:51                                      ; preds = %49, %48
  %num.1 = phi i32 [ %num.011, %48 ], [ %50, %49 ]
  %52 = load i32, i32* %30, align 4, !tbaa !52
  %53 = and i32 %52, 1
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %66, label %55

; <label>:55                                      ; preds = %51
  %56 = getelementptr inbounds %struct._tagTreeCCTrigger, %struct._tagTreeCCTrigger* %trigger.012, i64 0, i32 0
  %57 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %56, align 8, !tbaa !53
  %58 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %57, i64 0, i32 5
  %59 = load i32, i32* %58, align 4, !tbaa !34
  %60 = and i32 %59, 24
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %63

; <label>:62                                      ; preds = %55
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9.405, i64 0, i64 0)) #2
  br label %63

; <label>:63                                      ; preds = %62, %55
  %64 = getelementptr inbounds %struct._tagTreeCCTrigger, %struct._tagTreeCCTrigger* %trigger.012, i64 0, i32 1
  %65 = load %struct._tagTreeCCTrigger*, %struct._tagTreeCCTrigger** %64, align 8, !tbaa !55
  br label %66

; <label>:66                                      ; preds = %51, %63
  %trigger.1 = phi %struct._tagTreeCCTrigger* [ %65, %63 ], [ %trigger.012, %51 ]
  %67 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.013, i64 0, i32 4
  %param.0 = load %struct._tagTreeCCParam*, %struct._tagTreeCCParam** %67, align 8
  %68 = icmp eq %struct._tagTreeCCParam* %param.0, null
  br i1 %68, label %._crit_edge.loopexit, label %27

._crit_edge.loopexit:                             ; preds = %66
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %18
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.32.406, i64 0, i64 0)) #2
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @Java_GenCaseInline(%struct._tagTreeCCContext* nocapture readonly %context, %struct._tagTreeCCStream* %stream, %struct._tagTreeCCOperationCase* nocapture readonly %operCase, i32 %level) #0 {
  %1 = getelementptr inbounds %struct._tagTreeCCOperationCase, %struct._tagTreeCCOperationCase* %operCase, i64 0, i32 2
  %2 = load %struct._tagTreeCCOperation*, %struct._tagTreeCCOperation** %1, align 8, !tbaa !49
  %3 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %2, i64 0, i32 4
  %4 = getelementptr inbounds %struct._tagTreeCCOperationCase, %struct._tagTreeCCOperationCase* %operCase, i64 0, i32 0
  %5 = load %struct._tagTreeCCTrigger*, %struct._tagTreeCCTrigger** %4, align 8, !tbaa !51
  %param.0.7 = load %struct._tagTreeCCParam*, %struct._tagTreeCCParam** %3, align 8
  %6 = icmp eq %struct._tagTreeCCParam* %param.0.7, null
  br i1 %6, label %._crit_edge, label %.lr.ph

.lr.ph:                                           ; preds = %0
  %7 = shl nsw i32 %level, 1
  %8 = add nsw i32 %7, 4
  %9 = icmp sgt i32 %8, 3
  %10 = and i32 %8, 2
  br i1 %9, label %.lr.ph.split.us.preheader, label %.lr.ph..lr.ph.split_crit_edge.preheader

.lr.ph..lr.ph.split_crit_edge.preheader:          ; preds = %.lr.ph
  %cond12 = icmp eq i32 %7, -2
  br label %.lr.ph..lr.ph.split_crit_edge

.lr.ph.split.us.preheader:                        ; preds = %.lr.ph
  %cond = icmp eq i32 %10, 0
  br label %.lr.ph.split.us

.lr.ph.split.us:                                  ; preds = %.lr.ph.split.us.preheader, %36
  %param.09.us = phi %struct._tagTreeCCParam* [ %param.0.us, %36 ], [ %param.0.7, %.lr.ph.split.us.preheader ]
  %trigger.08.us = phi %struct._tagTreeCCTrigger* [ %trigger.1.us, %36 ], [ %5, %.lr.ph.split.us.preheader ]
  %11 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.09.us, i64 0, i32 2
  %12 = load i32, i32* %11, align 4, !tbaa !52
  %13 = and i32 %12, 1
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %36, label %15

; <label>:15                                      ; preds = %.lr.ph.split.us
  %16 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.09.us, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8, !tbaa !41
  %18 = icmp eq i8* %17, null
  br i1 %18, label %33, label %19

; <label>:19                                      ; preds = %15
  %20 = getelementptr inbounds %struct._tagTreeCCTrigger, %struct._tagTreeCCTrigger* %trigger.08.us, i64 0, i32 0
  %21 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %20, align 8, !tbaa !53
  %22 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %21, i64 0, i32 5
  %23 = load i32, i32* %22, align 4, !tbaa !34
  %24 = and i32 %23, 24
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %.lr.ph.i.us.preheader, label %33

.lr.ph.i.us.preheader:                            ; preds = %19
  br label %.lr.ph.i.us

.lr.ph.i.us:                                      ; preds = %.lr.ph.i.us.preheader, %.lr.ph.i.us
  %.01.i.us = phi i32 [ %26, %.lr.ph.i.us ], [ %8, %.lr.ph.i.us.preheader ]
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.16.393, i64 0, i64 0)) #2
  %26 = add nsw i32 %.01.i.us, -4
  %27 = icmp sgt i32 %26, 3
  br i1 %27, label %.lr.ph.i.us, label %._crit_edge.i.us

._crit_edge.i.us:                                 ; preds = %.lr.ph.i.us
  br i1 %cond, label %Indent.exit.us, label %28

; <label>:28                                      ; preds = %._crit_edge.i.us
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18.395, i64 0, i64 0)) #2
  br label %Indent.exit.us

Indent.exit.us:                                   ; preds = %._crit_edge.i.us, %28
  %29 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %20, align 8, !tbaa !53
  %30 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %29, i64 0, i32 4
  %31 = load i8*, i8** %30, align 8, !tbaa !36
  %32 = load i8*, i8** %16, align 8, !tbaa !41
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.33.407, i64 0, i64 0), i8* %31, i8* %32, i8* %31, i8* %32) #2
  br label %33

; <label>:33                                      ; preds = %Indent.exit.us, %19, %15
  %34 = getelementptr inbounds %struct._tagTreeCCTrigger, %struct._tagTreeCCTrigger* %trigger.08.us, i64 0, i32 1
  %35 = load %struct._tagTreeCCTrigger*, %struct._tagTreeCCTrigger** %34, align 8, !tbaa !55
  br label %36

; <label>:36                                      ; preds = %33, %.lr.ph.split.us
  %trigger.1.us = phi %struct._tagTreeCCTrigger* [ %35, %33 ], [ %trigger.08.us, %.lr.ph.split.us ]
  %37 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.09.us, i64 0, i32 4
  %param.0.us = load %struct._tagTreeCCParam*, %struct._tagTreeCCParam** %37, align 8
  %38 = icmp eq %struct._tagTreeCCParam* %param.0.us, null
  br i1 %38, label %._crit_edge.loopexit, label %.lr.ph.split.us

.lr.ph..lr.ph.split_crit_edge:                    ; preds = %.lr.ph..lr.ph.split_crit_edge.preheader, %63
  %param.09 = phi %struct._tagTreeCCParam* [ %param.0, %63 ], [ %param.0.7, %.lr.ph..lr.ph.split_crit_edge.preheader ]
  %trigger.08 = phi %struct._tagTreeCCTrigger* [ %trigger.1, %63 ], [ %5, %.lr.ph..lr.ph.split_crit_edge.preheader ]
  %39 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.09, i64 0, i32 2
  %40 = load i32, i32* %39, align 4, !tbaa !52
  %41 = and i32 %40, 1
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %63, label %43

; <label>:43                                      ; preds = %.lr.ph..lr.ph.split_crit_edge
  %44 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.09, i64 0, i32 0
  %45 = load i8*, i8** %44, align 8, !tbaa !41
  %46 = icmp eq i8* %45, null
  br i1 %46, label %60, label %47

; <label>:47                                      ; preds = %43
  %48 = getelementptr inbounds %struct._tagTreeCCTrigger, %struct._tagTreeCCTrigger* %trigger.08, i64 0, i32 0
  %49 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %48, align 8, !tbaa !53
  %50 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %49, i64 0, i32 5
  %51 = load i32, i32* %50, align 4, !tbaa !34
  %52 = and i32 %51, 24
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %60

; <label>:54                                      ; preds = %47
  br i1 %cond12, label %55, label %Indent.exit

; <label>:55                                      ; preds = %54
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18.395, i64 0, i64 0)) #2
  br label %Indent.exit

Indent.exit:                                      ; preds = %54, %55
  %56 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %48, align 8, !tbaa !53
  %57 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %56, i64 0, i32 4
  %58 = load i8*, i8** %57, align 8, !tbaa !36
  %59 = load i8*, i8** %44, align 8, !tbaa !41
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.33.407, i64 0, i64 0), i8* %58, i8* %59, i8* %58, i8* %59) #2
  br label %60

; <label>:60                                      ; preds = %43, %47, %Indent.exit
  %61 = getelementptr inbounds %struct._tagTreeCCTrigger, %struct._tagTreeCCTrigger* %trigger.08, i64 0, i32 1
  %62 = load %struct._tagTreeCCTrigger*, %struct._tagTreeCCTrigger** %61, align 8, !tbaa !55
  br label %63

; <label>:63                                      ; preds = %.lr.ph..lr.ph.split_crit_edge, %60
  %trigger.1 = phi %struct._tagTreeCCTrigger* [ %62, %60 ], [ %trigger.08, %.lr.ph..lr.ph.split_crit_edge ]
  %64 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.09, i64 0, i32 4
  %param.0 = load %struct._tagTreeCCParam*, %struct._tagTreeCCParam** %64, align 8
  %65 = icmp eq %struct._tagTreeCCParam* %param.0, null
  br i1 %65, label %._crit_edge.loopexit14, label %.lr.ph..lr.ph.split_crit_edge

._crit_edge.loopexit:                             ; preds = %36
  br label %._crit_edge

._crit_edge.loopexit14:                           ; preds = %63
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit14, %._crit_edge.loopexit, %0
  %66 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 13
  %67 = load i32, i32* %66, align 4, !tbaa !9
  %68 = icmp eq i32 %67, 3
  br i1 %68, label %69, label %74

; <label>:69                                      ; preds = %._crit_edge
  %70 = getelementptr inbounds %struct._tagTreeCCOperationCase, %struct._tagTreeCCOperationCase* %operCase, i64 0, i32 7
  %71 = load i64, i64* %70, align 8, !tbaa !56
  %72 = getelementptr inbounds %struct._tagTreeCCOperationCase, %struct._tagTreeCCOperationCase* %operCase, i64 0, i32 6
  %73 = load i8*, i8** %72, align 8, !tbaa !57
  tail call void @TreeCCStreamLine(%struct._tagTreeCCStream* %stream, i64 %71, i8* %73) #2
  br label %74

; <label>:74                                      ; preds = %69, %._crit_edge
  %75 = shl nsw i32 %level, 1
  %76 = add nsw i32 %75, 4
  %77 = icmp sgt i32 %76, 3
  br i1 %77, label %.lr.ph.i.3.preheader, label %81

.lr.ph.i.3.preheader:                             ; preds = %74
  br label %.lr.ph.i.3

.lr.ph.i.3:                                       ; preds = %.lr.ph.i.3.preheader, %.lr.ph.i.3
  %.01.i.2 = phi i32 [ %78, %.lr.ph.i.3 ], [ %76, %.lr.ph.i.3.preheader ]
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.16.393, i64 0, i64 0)) #2
  %78 = add nsw i32 %.01.i.2, -4
  %79 = icmp sgt i32 %78, 3
  br i1 %79, label %.lr.ph.i.3, label %._crit_edge.i.4

._crit_edge.i.4:                                  ; preds = %.lr.ph.i.3
  %80 = and i32 %76, 2
  br label %81

; <label>:81                                      ; preds = %._crit_edge.i.4, %74
  %.0.lcssa.i.5 = phi i32 [ %80, %._crit_edge.i.4 ], [ %76, %74 ]
  switch i32 %.0.lcssa.i.5, label %Indent.exit6 [
    i32 1, label %82
    i32 2, label %83
    i32 3, label %84
  ]

; <label>:82                                      ; preds = %81
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.17.394, i64 0, i64 0)) #2
  br label %Indent.exit6

; <label>:83                                      ; preds = %81
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18.395, i64 0, i64 0)) #2
  br label %Indent.exit6

; <label>:84                                      ; preds = %81
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.19.396, i64 0, i64 0)) #2
  br label %Indent.exit6

Indent.exit6:                                     ; preds = %81, %82, %83, %84
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.34.408, i64 0, i64 0)) #2
  %85 = getelementptr inbounds %struct._tagTreeCCOperationCase, %struct._tagTreeCCOperationCase* %operCase, i64 0, i32 1
  %86 = load i8*, i8** %85, align 8, !tbaa !58
  %87 = icmp eq i8* %86, null
  br i1 %87, label %89, label %88

; <label>:88                                      ; preds = %Indent.exit6
  tail call void @TreeCCStreamCodeIndent(%struct._tagTreeCCStream* %stream, i8* %86, i32 %76) #2
  br label %89

; <label>:89                                      ; preds = %Indent.exit6, %88
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.26.387, i64 0, i64 0)) #2
  %90 = load i32, i32* %66, align 4, !tbaa !9
  %91 = icmp eq i32 %90, 3
  br i1 %91, label %92, label %93

; <label>:92                                      ; preds = %89
  tail call void @TreeCCStreamFixLine(%struct._tagTreeCCStream* %stream) #2
  br label %93

; <label>:93                                      ; preds = %92, %89
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @Java_GenCaseSplit(%struct._tagTreeCCContext* nocapture readnone %context, %struct._tagTreeCCStream* %stream, %struct._tagTreeCCOperationCase* nocapture readonly %operCase, i32 %number, i32 %level) #0 {
  %1 = shl nsw i32 %level, 1
  %2 = add nsw i32 %1, 4
  %3 = icmp sgt i32 %2, 3
  br i1 %3, label %.lr.ph.i.preheader, label %7

.lr.ph.i.preheader:                               ; preds = %0
  br label %.lr.ph.i

.lr.ph.i:                                         ; preds = %.lr.ph.i.preheader, %.lr.ph.i
  %.01.i = phi i32 [ %4, %.lr.ph.i ], [ %2, %.lr.ph.i.preheader ]
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.16.393, i64 0, i64 0)) #2
  %4 = add nsw i32 %.01.i, -4
  %5 = icmp sgt i32 %4, 3
  br i1 %5, label %.lr.ph.i, label %._crit_edge.i

._crit_edge.i:                                    ; preds = %.lr.ph.i
  %6 = and i32 %2, 2
  br label %7

; <label>:7                                       ; preds = %._crit_edge.i, %0
  %.0.lcssa.i = phi i32 [ %6, %._crit_edge.i ], [ %2, %0 ]
  switch i32 %.0.lcssa.i, label %Indent.exit [
    i32 1, label %8
    i32 2, label %9
    i32 3, label %10
  ]

; <label>:8                                       ; preds = %7
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.17.394, i64 0, i64 0)) #2
  br label %Indent.exit

; <label>:9                                       ; preds = %7
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18.395, i64 0, i64 0)) #2
  br label %Indent.exit

; <label>:10                                      ; preds = %7
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.19.396, i64 0, i64 0)) #2
  br label %Indent.exit

Indent.exit:                                      ; preds = %7, %8, %9, %10
  %11 = getelementptr inbounds %struct._tagTreeCCOperationCase, %struct._tagTreeCCOperationCase* %operCase, i64 0, i32 2
  %12 = load %struct._tagTreeCCOperation*, %struct._tagTreeCCOperation** %11, align 8, !tbaa !49
  %13 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %12, i64 0, i32 2
  %14 = load i8*, i8** %13, align 8, !tbaa !45
  %15 = tail call i32 @strcmp(i8* %14, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.28.389, i64 0, i64 0)) #2
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %18, label %17

; <label>:17                                      ; preds = %Indent.exit
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.29.399, i64 0, i64 0)) #2
  %.pre = load %struct._tagTreeCCOperation*, %struct._tagTreeCCOperation** %11, align 8, !tbaa !49
  br label %18

; <label>:18                                      ; preds = %Indent.exit, %17
  %19 = phi %struct._tagTreeCCOperation* [ %12, %Indent.exit ], [ %.pre, %17 ]
  %20 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %19, i64 0, i32 0
  %21 = load i8*, i8** %20, align 8, !tbaa !46
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.35.400, i64 0, i64 0), i8* %21, i32 %number) #2
  %22 = load %struct._tagTreeCCOperation*, %struct._tagTreeCCOperation** %11, align 8, !tbaa !49
  %23 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %22, i64 0, i32 4
  %param.0.9 = load %struct._tagTreeCCParam*, %struct._tagTreeCCParam** %23, align 8
  %24 = icmp eq %struct._tagTreeCCParam* %param.0.9, null
  br i1 %24, label %._crit_edge, label %.lr.ph

.lr.ph:                                           ; preds = %18
  %25 = getelementptr inbounds %struct._tagTreeCCOperationCase, %struct._tagTreeCCOperationCase* %operCase, i64 0, i32 0
  %26 = load %struct._tagTreeCCTrigger*, %struct._tagTreeCCTrigger** %25, align 8, !tbaa !51
  br label %27

; <label>:27                                      ; preds = %.lr.ph, %66
  %param.013 = phi %struct._tagTreeCCParam* [ %param.0.9, %.lr.ph ], [ %param.0, %66 ]
  %trigger.012 = phi %struct._tagTreeCCTrigger* [ %26, %.lr.ph ], [ %trigger.1, %66 ]
  %num.011 = phi i32 [ 1, %.lr.ph ], [ %num.1, %66 ]
  %needComma.010 = phi i1 [ true, %.lr.ph ], [ false, %66 ]
  br i1 %needComma.010, label %29, label %28

; <label>:28                                      ; preds = %27
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.401, i64 0, i64 0)) #2
  br label %29

; <label>:29                                      ; preds = %27, %28
  %30 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.013, i64 0, i32 2
  %31 = load i32, i32* %30, align 4, !tbaa !52
  %32 = and i32 %31, 1
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %44, label %34

; <label>:34                                      ; preds = %29
  %35 = getelementptr inbounds %struct._tagTreeCCTrigger, %struct._tagTreeCCTrigger* %trigger.012, i64 0, i32 0
  %36 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %35, align 8, !tbaa !53
  %37 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %36, i64 0, i32 5
  %38 = load i32, i32* %37, align 4, !tbaa !34
  %39 = and i32 %38, 24
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %44

; <label>:41                                      ; preds = %34
  %42 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %36, i64 0, i32 4
  %43 = load i8*, i8** %42, align 8, !tbaa !36
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.31.402, i64 0, i64 0), i8* %43) #2
  br label %44

; <label>:44                                      ; preds = %29, %34, %41
  %45 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.013, i64 0, i32 0
  %46 = load i8*, i8** %45, align 8, !tbaa !41
  %47 = icmp eq i8* %46, null
  br i1 %47, label %49, label %48

; <label>:48                                      ; preds = %44
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7.403, i64 0, i64 0), i8* %46) #2
  br label %51

; <label>:49                                      ; preds = %44
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8.404, i64 0, i64 0), i32 %num.011) #2
  %50 = add nsw i32 %num.011, 1
  br label %51

; <label>:51                                      ; preds = %49, %48
  %num.1 = phi i32 [ %num.011, %48 ], [ %50, %49 ]
  %52 = load i32, i32* %30, align 4, !tbaa !52
  %53 = and i32 %52, 1
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %66, label %55

; <label>:55                                      ; preds = %51
  %56 = getelementptr inbounds %struct._tagTreeCCTrigger, %struct._tagTreeCCTrigger* %trigger.012, i64 0, i32 0
  %57 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %56, align 8, !tbaa !53
  %58 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %57, i64 0, i32 5
  %59 = load i32, i32* %58, align 4, !tbaa !34
  %60 = and i32 %59, 24
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %63

; <label>:62                                      ; preds = %55
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9.405, i64 0, i64 0)) #2
  br label %63

; <label>:63                                      ; preds = %62, %55
  %64 = getelementptr inbounds %struct._tagTreeCCTrigger, %struct._tagTreeCCTrigger* %trigger.012, i64 0, i32 1
  %65 = load %struct._tagTreeCCTrigger*, %struct._tagTreeCCTrigger** %64, align 8, !tbaa !55
  br label %66

; <label>:66                                      ; preds = %51, %63
  %trigger.1 = phi %struct._tagTreeCCTrigger* [ %65, %63 ], [ %trigger.012, %51 ]
  %67 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.013, i64 0, i32 4
  %param.0 = load %struct._tagTreeCCParam*, %struct._tagTreeCCParam** %67, align 8
  %68 = icmp eq %struct._tagTreeCCParam* %param.0, null
  br i1 %68, label %._crit_edge.loopexit, label %27

._crit_edge.loopexit:                             ; preds = %66
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %18
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.32.406, i64 0, i64 0)) #2
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @Java_GenEndCase(%struct._tagTreeCCContext* nocapture readnone %context, %struct._tagTreeCCStream* %stream, i32 %level) #0 {
  %1 = shl nsw i32 %level, 1
  %2 = add nsw i32 %1, 3
  %3 = icmp sgt i32 %level, 0
  br i1 %3, label %.lr.ph.i.preheader, label %7

.lr.ph.i.preheader:                               ; preds = %0
  br label %.lr.ph.i

.lr.ph.i:                                         ; preds = %.lr.ph.i.preheader, %.lr.ph.i
  %.01.i = phi i32 [ %4, %.lr.ph.i ], [ %2, %.lr.ph.i.preheader ]
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.16.393, i64 0, i64 0)) #2
  %4 = add nsw i32 %.01.i, -4
  %5 = icmp sgt i32 %4, 3
  br i1 %5, label %.lr.ph.i, label %._crit_edge.i

._crit_edge.i:                                    ; preds = %.lr.ph.i
  %6 = and i32 %2, 3
  br label %7

; <label>:7                                       ; preds = %._crit_edge.i, %0
  %.0.lcssa.i = phi i32 [ %6, %._crit_edge.i ], [ %2, %0 ]
  switch i32 %.0.lcssa.i, label %Indent.exit [
    i32 1, label %8
    i32 2, label %9
    i32 3, label %10
  ]

; <label>:8                                       ; preds = %7
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.17.394, i64 0, i64 0)) #2
  br label %Indent.exit

; <label>:9                                       ; preds = %7
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18.395, i64 0, i64 0)) #2
  br label %Indent.exit

; <label>:10                                      ; preds = %7
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.19.396, i64 0, i64 0)) #2
  br label %Indent.exit

Indent.exit:                                      ; preds = %7, %8, %9, %10
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.26.387, i64 0, i64 0)) #2
  br i1 %3, label %.lr.ph.i.2.preheader, label %14

.lr.ph.i.2.preheader:                             ; preds = %Indent.exit
  br label %.lr.ph.i.2

.lr.ph.i.2:                                       ; preds = %.lr.ph.i.2.preheader, %.lr.ph.i.2
  %.01.i.1 = phi i32 [ %11, %.lr.ph.i.2 ], [ %2, %.lr.ph.i.2.preheader ]
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.16.393, i64 0, i64 0)) #2
  %11 = add nsw i32 %.01.i.1, -4
  %12 = icmp sgt i32 %11, 3
  br i1 %12, label %.lr.ph.i.2, label %._crit_edge.i.3

._crit_edge.i.3:                                  ; preds = %.lr.ph.i.2
  %13 = and i32 %2, 3
  br label %14

; <label>:14                                      ; preds = %._crit_edge.i.3, %Indent.exit
  %.0.lcssa.i.4 = phi i32 [ %13, %._crit_edge.i.3 ], [ %2, %Indent.exit ]
  switch i32 %.0.lcssa.i.4, label %Indent.exit5 [
    i32 1, label %15
    i32 2, label %16
    i32 3, label %17
  ]

; <label>:15                                      ; preds = %14
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.17.394, i64 0, i64 0)) #2
  br label %Indent.exit5

; <label>:16                                      ; preds = %14
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18.395, i64 0, i64 0)) #2
  br label %Indent.exit5

; <label>:17                                      ; preds = %14
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.19.396, i64 0, i64 0)) #2
  br label %Indent.exit5

Indent.exit5:                                     ; preds = %14, %15, %16, %17
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.36.398, i64 0, i64 0)) #2
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @Java_GenEndSwitch(%struct._tagTreeCCContext* nocapture readnone %context, %struct._tagTreeCCStream* %stream, i32 %level) #0 {
  %1 = shl nsw i32 %level, 1
  %2 = add nsw i32 %1, 3
  %3 = icmp sgt i32 %level, 0
  br i1 %3, label %.lr.ph.i.preheader, label %7

.lr.ph.i.preheader:                               ; preds = %0
  br label %.lr.ph.i

.lr.ph.i:                                         ; preds = %.lr.ph.i.preheader, %.lr.ph.i
  %.01.i = phi i32 [ %4, %.lr.ph.i ], [ %2, %.lr.ph.i.preheader ]
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.16.393, i64 0, i64 0)) #2
  %4 = add nsw i32 %.01.i, -4
  %5 = icmp sgt i32 %4, 3
  br i1 %5, label %.lr.ph.i, label %._crit_edge.i

._crit_edge.i:                                    ; preds = %.lr.ph.i
  %6 = and i32 %2, 3
  br label %7

; <label>:7                                       ; preds = %._crit_edge.i, %0
  %.0.lcssa.i = phi i32 [ %6, %._crit_edge.i ], [ %2, %0 ]
  switch i32 %.0.lcssa.i, label %Indent.exit [
    i32 1, label %8
    i32 2, label %9
    i32 3, label %10
  ]

; <label>:8                                       ; preds = %7
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.17.394, i64 0, i64 0)) #2
  br label %Indent.exit

; <label>:9                                       ; preds = %7
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18.395, i64 0, i64 0)) #2
  br label %Indent.exit

; <label>:10                                      ; preds = %7
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.19.396, i64 0, i64 0)) #2
  br label %Indent.exit

Indent.exit:                                      ; preds = %7, %8, %9, %10
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.37.397, i64 0, i64 0)) #2
  %11 = add nsw i32 %1, 2
  %12 = icmp sgt i32 %11, 3
  br i1 %12, label %.lr.ph.i.2.preheader, label %16

.lr.ph.i.2.preheader:                             ; preds = %Indent.exit
  br label %.lr.ph.i.2

.lr.ph.i.2:                                       ; preds = %.lr.ph.i.2.preheader, %.lr.ph.i.2
  %.01.i.1 = phi i32 [ %13, %.lr.ph.i.2 ], [ %11, %.lr.ph.i.2.preheader ]
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.16.393, i64 0, i64 0)) #2
  %13 = add nsw i32 %.01.i.1, -4
  %14 = icmp sgt i32 %13, 3
  br i1 %14, label %.lr.ph.i.2, label %._crit_edge.i.3

._crit_edge.i.3:                                  ; preds = %.lr.ph.i.2
  %15 = and i32 %11, 2
  br label %16

; <label>:16                                      ; preds = %._crit_edge.i.3, %Indent.exit
  %.0.lcssa.i.4 = phi i32 [ %15, %._crit_edge.i.3 ], [ %11, %Indent.exit ]
  switch i32 %.0.lcssa.i.4, label %Indent.exit5 [
    i32 1, label %17
    i32 2, label %18
    i32 3, label %19
  ]

; <label>:17                                      ; preds = %16
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.17.394, i64 0, i64 0)) #2
  br label %Indent.exit5

; <label>:18                                      ; preds = %16
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18.395, i64 0, i64 0)) #2
  br label %Indent.exit5

; <label>:19                                      ; preds = %16
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.19.396, i64 0, i64 0)) #2
  br label %Indent.exit5

Indent.exit5:                                     ; preds = %16, %17, %18, %19
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.26.387, i64 0, i64 0)) #2
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @Java_GenExit(%struct._tagTreeCCContext* nocapture readnone %context, %struct._tagTreeCCStream* %stream, %struct._tagTreeCCOperation* nocapture readonly %oper) #0 {
  %1 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %oper, i64 0, i32 2
  %2 = load i8*, i8** %1, align 8, !tbaa !45
  %3 = tail call i32 @strcmp(i8* %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.28.389, i64 0, i64 0)) #2
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %11, label %5

; <label>:5                                       ; preds = %0
  %6 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %oper, i64 0, i32 3
  %7 = load i8*, i8** %6, align 8, !tbaa !59
  %8 = icmp eq i8* %7, null
  br i1 %8, label %10, label %9

; <label>:9                                       ; preds = %5
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.38.390, i64 0, i64 0), i8* %7) #2
  br label %11

; <label>:10                                      ; preds = %5
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.39.391, i64 0, i64 0)) #2
  br label %11

; <label>:11                                      ; preds = %0, %9, %10
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.40.392, i64 0, i64 0)) #2
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @Java_GenEnd(%struct._tagTreeCCContext* nocapture readonly %context, %struct._tagTreeCCStream* %stream, %struct._tagTreeCCOperation* nocapture readnone %oper) #0 {
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.26.387, i64 0, i64 0)) #2
  %1 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 13
  %2 = load i32, i32* %1, align 4, !tbaa !9
  %3 = icmp eq i32 %2, 3
  br i1 %3, label %4, label %5

; <label>:4                                       ; preds = %0
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.27.369, i64 0, i64 0)) #2
  br label %5

; <label>:5                                       ; preds = %4, %0
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @JavaGenEntry(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %stream, %struct._tagTreeCCOperation* nocapture readonly %oper, i32 %number) #0 {
  %1 = icmp eq i32 %number, -1
  %2 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %oper, i64 0, i32 2
  %3 = load i8*, i8** %2, align 8, !tbaa !45
  %4 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %oper, i64 0, i32 0
  %5 = load i8*, i8** %4, align 8, !tbaa !46
  br i1 %1, label %7, label %6

; <label>:6                                       ; preds = %0
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.3.421, i64 0, i64 0), i8* %3, i8* %5, i32 %number) #2
  br label %8

; <label>:7                                       ; preds = %0
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.4.422, i64 0, i64 0), i8* %3, i8* %5) #2
  br label %8

; <label>:8                                       ; preds = %7, %6
  %9 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %oper, i64 0, i32 4
  %param.0.3 = load %struct._tagTreeCCParam*, %struct._tagTreeCCParam** %9, align 8
  %10 = icmp eq %struct._tagTreeCCParam* %param.0.3, null
  br i1 %10, label %._crit_edge, label %.lr.ph

.lr.ph:                                           ; preds = %8
  %11 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 13
  br label %12

; <label>:12                                      ; preds = %.lr.ph, %IsEnumType.exit.thread2
  %param.06 = phi %struct._tagTreeCCParam* [ %param.0.3, %.lr.ph ], [ %param.0, %IsEnumType.exit.thread2 ]
  %needComma.05 = phi i1 [ true, %.lr.ph ], [ false, %IsEnumType.exit.thread2 ]
  %num.04 = phi i32 [ 1, %.lr.ph ], [ %num.1, %IsEnumType.exit.thread2 ]
  br i1 %needComma.05, label %14, label %13

; <label>:13                                      ; preds = %12
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.401, i64 0, i64 0)) #2
  br label %14

; <label>:14                                      ; preds = %12, %13
  %15 = load i32, i32* %11, align 4, !tbaa !9
  %16 = icmp eq i32 %15, 3
  %17 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.06, i64 0, i32 1
  %18 = load i8*, i8** %17, align 8, !tbaa !47
  br i1 %16, label %19, label %20

; <label>:19                                      ; preds = %14
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.6.423, i64 0, i64 0), i8* %18) #2
  br label %29

; <label>:20                                      ; preds = %14
  %21 = tail call %struct._tagTreeCCNode* @TreeCCNodeFind(%struct._tagTreeCCContext* %context, i8* %18) #2
  %22 = icmp eq %struct._tagTreeCCNode* %21, null
  br i1 %22, label %28, label %23

; <label>:23                                      ; preds = %20
  %24 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %21, i64 0, i32 5
  %25 = load i32, i32* %24, align 4, !tbaa !34
  %26 = and i32 %25, 8
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %ConvertType.exit

; <label>:28                                      ; preds = %23, %20
  br label %ConvertType.exit

ConvertType.exit:                                 ; preds = %23, %28
  %.0.i = phi i8* [ %18, %28 ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @.str.12.410, i64 0, i64 0), %23 ]
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.6.423, i64 0, i64 0), i8* %.0.i) #2
  br label %29

; <label>:29                                      ; preds = %ConvertType.exit, %19
  %30 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.06, i64 0, i32 0
  %31 = load i8*, i8** %30, align 8, !tbaa !41
  %32 = icmp eq i8* %31, null
  br i1 %32, label %34, label %33

; <label>:33                                      ; preds = %29
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7.403, i64 0, i64 0), i8* %31) #2
  br label %36

; <label>:34                                      ; preds = %29
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8.404, i64 0, i64 0), i32 %num.04) #2
  %35 = add nsw i32 %num.04, 1
  br label %36

; <label>:36                                      ; preds = %34, %33
  %num.1 = phi i32 [ %num.04, %33 ], [ %35, %34 ]
  %37 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.06, i64 0, i32 2
  %38 = load i32, i32* %37, align 4, !tbaa !52
  %39 = and i32 %38, 1
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %IsEnumType.exit.thread2, label %41

; <label>:41                                      ; preds = %36
  %42 = load i8*, i8** %17, align 8, !tbaa !47
  %43 = tail call %struct._tagTreeCCNode* @TreeCCNodeFindByType(%struct._tagTreeCCContext* %context, i8* %42) #2
  %44 = icmp eq %struct._tagTreeCCNode* %43, null
  br i1 %44, label %50, label %45

; <label>:45                                      ; preds = %41
  %46 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %43, i64 0, i32 5
  %47 = load i32, i32* %46, align 4, !tbaa !34
  %48 = and i32 %47, 8
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %IsEnumType.exit.thread2

; <label>:50                                      ; preds = %41, %45
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9.405, i64 0, i64 0)) #2
  br label %IsEnumType.exit.thread2

IsEnumType.exit.thread2:                          ; preds = %45, %36, %50
  %51 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.06, i64 0, i32 4
  %param.0 = load %struct._tagTreeCCParam*, %struct._tagTreeCCParam** %51, align 8
  %52 = icmp eq %struct._tagTreeCCParam* %param.0, null
  br i1 %52, label %._crit_edge.loopexit, label %12

._crit_edge.loopexit:                             ; preds = %IsEnumType.exit.thread2
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %8
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10.414, i64 0, i64 0)) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.11.377, i64 0, i64 0)) #2
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @CreateParams.446(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %stream, %struct._tagTreeCCNode* nocapture readonly %node, i32 %needComma) #0 {
  %1 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 0
  %2 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %1, align 8, !tbaa !38
  %3 = icmp eq %struct._tagTreeCCNode* %2, null
  br i1 %3, label %6, label %4

; <label>:4                                       ; preds = %0
  %5 = tail call fastcc i32 @CreateParams.446(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %stream, %struct._tagTreeCCNode* %2, i32 %needComma)
  br label %6

; <label>:6                                       ; preds = %0, %4
  %.0 = phi i32 [ %5, %4 ], [ %needComma, %0 ]
  %7 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 10
  %field.0.1 = load %struct._tagTreeCCField*, %struct._tagTreeCCField** %7, align 8
  %8 = icmp eq %struct._tagTreeCCField* %field.0.1, null
  br i1 %8, label %._crit_edge, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %6
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %29
  %field.03 = phi %struct._tagTreeCCField* [ %field.0, %29 ], [ %field.0.1, %.lr.ph.preheader ]
  %.12 = phi i32 [ %.2, %29 ], [ %.0, %.lr.ph.preheader ]
  %9 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.03, i64 0, i32 3
  %10 = load i32, i32* %9, align 4, !tbaa !61
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %29

; <label>:13                                      ; preds = %.lr.ph
  %14 = icmp eq i32 %.12, 0
  br i1 %14, label %16, label %15

; <label>:15                                      ; preds = %13
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.401, i64 0, i64 0)) #2
  br label %16

; <label>:16                                      ; preds = %13, %15
  %17 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.03, i64 0, i32 1
  %18 = load i8*, i8** %17, align 8, !tbaa !63
  %19 = tail call %struct._tagTreeCCNode* @TreeCCNodeFind(%struct._tagTreeCCContext* %context, i8* %18) #2
  %20 = icmp eq %struct._tagTreeCCNode* %19, null
  br i1 %20, label %26, label %21

; <label>:21                                      ; preds = %16
  %22 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %19, i64 0, i32 5
  %23 = load i32, i32* %22, align 4, !tbaa !34
  %24 = and i32 %23, 8
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %ConvertType.exit

; <label>:26                                      ; preds = %21, %16
  br label %ConvertType.exit

ConvertType.exit:                                 ; preds = %21, %26
  %.0.i = phi i8* [ %18, %26 ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @.str.12.410, i64 0, i64 0), %21 ]
  %27 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.03, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8, !tbaa !64
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.23.412, i64 0, i64 0), i8* %.0.i, i8* %28) #2
  br label %29

; <label>:29                                      ; preds = %ConvertType.exit, %.lr.ph
  %.2 = phi i32 [ 1, %ConvertType.exit ], [ %.12, %.lr.ph ]
  %30 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.03, i64 0, i32 6
  %field.0 = load %struct._tagTreeCCField*, %struct._tagTreeCCField** %30, align 8
  %31 = icmp eq %struct._tagTreeCCField* %field.0, null
  br i1 %31, label %._crit_edge.loopexit, label %.lr.ph

._crit_edge.loopexit:                             ; preds = %29
  %.2.lcssa = phi i32 [ %.2, %29 ]
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %6
  %.1.lcssa = phi i32 [ %.0, %6 ], [ %.2.lcssa, %._crit_edge.loopexit ]
  ret i32 %.1.lcssa
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @InheritParamsSource.449(%struct._tagTreeCCStream* %stream, %struct._tagTreeCCNode* nocapture readonly %node, i32 %needComma) #0 {
  %1 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 0
  %2 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %1, align 8, !tbaa !38
  %3 = icmp eq %struct._tagTreeCCNode* %2, null
  br i1 %3, label %6, label %4

; <label>:4                                       ; preds = %0
  %5 = tail call fastcc i32 @InheritParamsSource.449(%struct._tagTreeCCStream* %stream, %struct._tagTreeCCNode* %2, i32 %needComma)
  br label %6

; <label>:6                                       ; preds = %0, %4
  %.0 = phi i32 [ %5, %4 ], [ %needComma, %0 ]
  %7 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 10
  %field.0.1 = load %struct._tagTreeCCField*, %struct._tagTreeCCField** %7, align 8
  %8 = icmp eq %struct._tagTreeCCField* %field.0.1, null
  br i1 %8, label %._crit_edge, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %6
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %19
  %field.03 = phi %struct._tagTreeCCField* [ %field.0, %19 ], [ %field.0.1, %.lr.ph.preheader ]
  %.12 = phi i32 [ %.2, %19 ], [ %.0, %.lr.ph.preheader ]
  %9 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.03, i64 0, i32 3
  %10 = load i32, i32* %9, align 4, !tbaa !61
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %19

; <label>:13                                      ; preds = %.lr.ph
  %14 = icmp eq i32 %.12, 0
  br i1 %14, label %16, label %15

; <label>:15                                      ; preds = %13
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.401, i64 0, i64 0)) #2
  br label %16

; <label>:16                                      ; preds = %13, %15
  %17 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.03, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8, !tbaa !64
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7.403, i64 0, i64 0), i8* %18) #2
  br label %19

; <label>:19                                      ; preds = %16, %.lr.ph
  %.2 = phi i32 [ 1, %16 ], [ %.12, %.lr.ph ]
  %20 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.03, i64 0, i32 6
  %field.0 = load %struct._tagTreeCCField*, %struct._tagTreeCCField** %20, align 8
  %21 = icmp eq %struct._tagTreeCCField* %field.0, null
  br i1 %21, label %._crit_edge.loopexit, label %.lr.ph

._crit_edge.loopexit:                             ; preds = %19
  %.2.lcssa = phi i32 [ %.2, %19 ]
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %6
  %.1.lcssa = phi i32 [ %.0, %6 ], [ %.2.lcssa, %._crit_edge.loopexit ]
  ret i32 %.1.lcssa
}

; Function Attrs: nounwind uwtable
define internal fastcc void @ImplementVirtuals.456(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %stream, %struct._tagTreeCCNode* nocapture readonly %node, %struct._tagTreeCCNode* %actualNode) #0 {
  %1 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 0
  %2 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %1, align 8, !tbaa !38
  %3 = icmp eq %struct._tagTreeCCNode* %2, null
  br i1 %3, label %5, label %4

; <label>:4                                       ; preds = %0
  tail call fastcc void @ImplementVirtuals.456(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %stream, %struct._tagTreeCCNode* %2, %struct._tagTreeCCNode* %actualNode)
  br label %5

; <label>:5                                       ; preds = %0, %4
  %6 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 11
  %virt.0.16 = load %struct._tagTreeCCVirtual*, %struct._tagTreeCCVirtual** %6, align 8
  %7 = icmp eq %struct._tagTreeCCVirtual* %virt.0.16, null
  br i1 %7, label %._crit_edge.21, label %.lr.ph20

.lr.ph20:                                         ; preds = %5
  %8 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %actualNode, i64 0, i32 4
  br label %9

; <label>:9                                       ; preds = %.lr.ph20, %.thread10
  %virt.017 = phi %struct._tagTreeCCVirtual* [ %virt.0.16, %.lr.ph20 ], [ %virt.0, %.thread10 ]
  %10 = getelementptr inbounds %struct._tagTreeCCVirtual, %struct._tagTreeCCVirtual* %virt.017, i64 0, i32 0
  %11 = load i8*, i8** %10, align 8, !tbaa !39
  %12 = tail call %struct._tagTreeCCOperationCase* @TreeCCOperationFindCase(%struct._tagTreeCCContext* %context, %struct._tagTreeCCNode* %actualNode, i8* %11) #2
  %13 = icmp eq %struct._tagTreeCCOperationCase* %12, null
  br i1 %13, label %.preheader.preheader, label %.loopexit

.preheader.preheader:                             ; preds = %9
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %15
  %actualNode.pn = phi %struct._tagTreeCCNode* [ %tempNode.0, %15 ], [ %actualNode, %.preheader.preheader ]
  %tempNode.0.in = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %actualNode.pn, i64 0, i32 0
  %tempNode.0 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %tempNode.0.in, align 8
  %14 = icmp eq %struct._tagTreeCCNode* %tempNode.0, null
  br i1 %14, label %.loopexit.loopexit, label %15

; <label>:15                                      ; preds = %.preheader
  %16 = load i8*, i8** %10, align 8, !tbaa !39
  %17 = tail call %struct._tagTreeCCOperationCase* @TreeCCOperationFindCase(%struct._tagTreeCCContext* %context, %struct._tagTreeCCNode* %tempNode.0, i8* %16) #2
  %18 = icmp eq %struct._tagTreeCCOperationCase* %17, null
  br i1 %18, label %.preheader, label %.thread10.loopexit

.loopexit.loopexit:                               ; preds = %.preheader
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %9
  %abstractCase.1.ph = phi i1 [ false, %9 ], [ true, %.loopexit.loopexit ]
  %operCase.2.ph = phi %struct._tagTreeCCOperationCase* [ %12, %9 ], [ null, %.loopexit.loopexit ]
  %19 = getelementptr inbounds %struct._tagTreeCCVirtual, %struct._tagTreeCCVirtual* %virt.017, i64 0, i32 1
  %20 = load i8*, i8** %19, align 8, !tbaa !66
  %21 = tail call %struct._tagTreeCCNode* @TreeCCNodeFind(%struct._tagTreeCCContext* %context, i8* %20) #2
  %22 = icmp eq %struct._tagTreeCCNode* %21, null
  br i1 %22, label %28, label %23

; <label>:23                                      ; preds = %.loopexit
  %24 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %21, i64 0, i32 5
  %25 = load i32, i32* %24, align 4, !tbaa !34
  %26 = and i32 %25, 8
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %ConvertType.exit7

; <label>:28                                      ; preds = %23, %.loopexit
  br label %ConvertType.exit7

ConvertType.exit7:                                ; preds = %23, %28
  %.0.i.6 = phi i8* [ %20, %28 ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @.str.12.410, i64 0, i64 0), %23 ]
  %29 = load i8*, i8** %10, align 8, !tbaa !39
  br i1 %abstractCase.1.ph, label %30, label %31

; <label>:30                                      ; preds = %ConvertType.exit7
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.95.465, i64 0, i64 0), i8* %.0.i.6, i8* %29) #2
  br label %32

; <label>:31                                      ; preds = %ConvertType.exit7
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.96.466, i64 0, i64 0), i8* %.0.i.6, i8* %29) #2
  br label %32

; <label>:32                                      ; preds = %31, %30
  %33 = getelementptr inbounds %struct._tagTreeCCVirtual, %struct._tagTreeCCVirtual* %virt.017, i64 0, i32 3
  %34 = load %struct._tagTreeCCOperation*, %struct._tagTreeCCOperation** %33, align 8, !tbaa !70
  %35 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %34, i64 0, i32 4
  %param.0.11 = load %struct._tagTreeCCParam*, %struct._tagTreeCCParam** %35, align 8
  %36 = icmp eq %struct._tagTreeCCParam* %param.0.11, null
  br i1 %36, label %._crit_edge, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %32
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %62
  %param.015 = phi %struct._tagTreeCCParam* [ %param.0, %62 ], [ %param.0.11, %.lr.ph.preheader ]
  %needComma.014 = phi i32 [ %needComma.1, %62 ], [ 0, %.lr.ph.preheader ]
  %first.013 = phi i32 [ 0, %62 ], [ 1, %.lr.ph.preheader ]
  %num.012 = phi i32 [ %num.3, %62 ], [ 1, %.lr.ph.preheader ]
  %37 = icmp eq i32 %needComma.014, 0
  br i1 %37, label %39, label %38

; <label>:38                                      ; preds = %.lr.ph
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.401, i64 0, i64 0)) #2
  br label %39

; <label>:39                                      ; preds = %.lr.ph, %38
  %40 = icmp eq i32 %first.013, 0
  %41 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.015, i64 0, i32 0
  %42 = load i8*, i8** %41, align 8, !tbaa !41
  %43 = icmp ne i8* %42, null
  br i1 %40, label %47, label %44

; <label>:44                                      ; preds = %39
  %45 = zext i1 %43 to i32
  %46 = xor i32 %45, 1
  %num.0. = add nsw i32 %46, %num.012
  br label %62

; <label>:47                                      ; preds = %39
  %48 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.015, i64 0, i32 1
  %49 = load i8*, i8** %48, align 8, !tbaa !47
  %50 = tail call %struct._tagTreeCCNode* @TreeCCNodeFind(%struct._tagTreeCCContext* %context, i8* %49) #2
  %51 = icmp eq %struct._tagTreeCCNode* %50, null
  br i1 %51, label %57, label %52

; <label>:52                                      ; preds = %47
  %53 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %50, i64 0, i32 5
  %54 = load i32, i32* %53, align 4, !tbaa !34
  %55 = and i32 %54, 8
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %ConvertType.exit

; <label>:57                                      ; preds = %52, %47
  br label %ConvertType.exit

ConvertType.exit:                                 ; preds = %52, %57
  %.0.i = phi i8* [ %49, %57 ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @.str.12.410, i64 0, i64 0), %52 ]
  br i1 %43, label %58, label %60

; <label>:58                                      ; preds = %ConvertType.exit
  %59 = load i8*, i8** %41, align 8, !tbaa !41
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.23.412, i64 0, i64 0), i8* %.0.i, i8* %59) #2
  br label %62

; <label>:60                                      ; preds = %ConvertType.exit
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.24.413, i64 0, i64 0), i8* %.0.i, i32 %num.012) #2
  %61 = add nsw i32 %num.012, 1
  br label %62

; <label>:62                                      ; preds = %58, %60, %44
  %num.3 = phi i32 [ %num.0., %44 ], [ %num.012, %58 ], [ %61, %60 ]
  %needComma.1 = phi i32 [ %needComma.014, %44 ], [ 1, %58 ], [ 1, %60 ]
  %63 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.015, i64 0, i32 4
  %param.0 = load %struct._tagTreeCCParam*, %struct._tagTreeCCParam** %63, align 8
  %64 = icmp eq %struct._tagTreeCCParam* %param.0, null
  br i1 %64, label %._crit_edge.loopexit, label %.lr.ph

._crit_edge.loopexit:                             ; preds = %62
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %32
  br i1 %abstractCase.1.ph, label %83, label %65

; <label>:65                                      ; preds = %._crit_edge
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10.414, i64 0, i64 0)) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.11.377, i64 0, i64 0)) #2
  %66 = load %struct._tagTreeCCOperation*, %struct._tagTreeCCOperation** %33, align 8, !tbaa !70
  %67 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %66, i64 0, i32 4
  %68 = load %struct._tagTreeCCParam*, %struct._tagTreeCCParam** %67, align 8, !tbaa !68
  %69 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %68, i64 0, i32 0
  %70 = load i8*, i8** %69, align 8, !tbaa !41
  %71 = icmp eq i8* %70, null
  br i1 %71, label %75, label %72

; <label>:72                                      ; preds = %65
  %73 = tail call i32 @strcmp(i8* %70, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.97.467, i64 0, i64 0)) #2
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %78

; <label>:75                                      ; preds = %72, %65
  %76 = getelementptr inbounds %struct._tagTreeCCOperationCase, %struct._tagTreeCCOperationCase* %operCase.2.ph, i64 0, i32 1
  %77 = load i8*, i8** %76, align 8, !tbaa !58
  tail call void @TreeCCStreamCodeIndent(%struct._tagTreeCCStream* %stream, i8* %77, i32 1) #2
  br label %82

; <label>:78                                      ; preds = %72
  %79 = load i8*, i8** %8, align 8, !tbaa !36
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.98.468, i64 0, i64 0), i8* %79, i8* %70) #2
  %80 = getelementptr inbounds %struct._tagTreeCCOperationCase, %struct._tagTreeCCOperationCase* %operCase.2.ph, i64 0, i32 1
  %81 = load i8*, i8** %80, align 8, !tbaa !58
  tail call void @TreeCCStreamCodeIndent(%struct._tagTreeCCStream* %stream, i8* %81, i32 1) #2
  br label %82

; <label>:82                                      ; preds = %78, %75
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.99.469, i64 0, i64 0)) #2
  br label %.thread10

; <label>:83                                      ; preds = %._crit_edge
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.100.470, i64 0, i64 0)) #2
  br label %.thread10

.thread10.loopexit:                               ; preds = %15
  br label %.thread10

.thread10:                                        ; preds = %.thread10.loopexit, %82, %83
  %84 = getelementptr inbounds %struct._tagTreeCCVirtual, %struct._tagTreeCCVirtual* %virt.017, i64 0, i32 4
  %virt.0 = load %struct._tagTreeCCVirtual*, %struct._tagTreeCCVirtual** %84, align 8
  %85 = icmp eq %struct._tagTreeCCVirtual* %virt.0, null
  br i1 %85, label %._crit_edge.21.loopexit, label %9

._crit_edge.21.loopexit:                          ; preds = %.thread10
  br label %._crit_edge.21

._crit_edge.21:                                   ; preds = %._crit_edge.21.loopexit, %5
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @FactoryCreateParams.473(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %stream, %struct._tagTreeCCNode* nocapture readonly %node) #0 {
  %1 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 0
  %2 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %1, align 8, !tbaa !38
  %3 = icmp eq %struct._tagTreeCCNode* %2, null
  br i1 %3, label %6, label %4

; <label>:4                                       ; preds = %0
  %5 = tail call fastcc i32 @FactoryCreateParams.473(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %stream, %struct._tagTreeCCNode* %2)
  br label %6

; <label>:6                                       ; preds = %0, %4
  %.0 = phi i32 [ %5, %4 ], [ 0, %0 ]
  %7 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 10
  %field.0.1 = load %struct._tagTreeCCField*, %struct._tagTreeCCField** %7, align 8
  %8 = icmp eq %struct._tagTreeCCField* %field.0.1, null
  br i1 %8, label %._crit_edge, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %6
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %29
  %field.03 = phi %struct._tagTreeCCField* [ %field.0, %29 ], [ %field.0.1, %.lr.ph.preheader ]
  %.12 = phi i32 [ %.2, %29 ], [ %.0, %.lr.ph.preheader ]
  %9 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.03, i64 0, i32 3
  %10 = load i32, i32* %9, align 4, !tbaa !61
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %29

; <label>:13                                      ; preds = %.lr.ph
  %14 = icmp eq i32 %.12, 0
  br i1 %14, label %16, label %15

; <label>:15                                      ; preds = %13
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.401, i64 0, i64 0)) #2
  br label %16

; <label>:16                                      ; preds = %13, %15
  %17 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.03, i64 0, i32 1
  %18 = load i8*, i8** %17, align 8, !tbaa !63
  %19 = tail call %struct._tagTreeCCNode* @TreeCCNodeFind(%struct._tagTreeCCContext* %context, i8* %18) #2
  %20 = icmp eq %struct._tagTreeCCNode* %19, null
  br i1 %20, label %26, label %21

; <label>:21                                      ; preds = %16
  %22 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %19, i64 0, i32 5
  %23 = load i32, i32* %22, align 4, !tbaa !34
  %24 = and i32 %23, 8
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %ConvertType.exit

; <label>:26                                      ; preds = %21, %16
  br label %ConvertType.exit

ConvertType.exit:                                 ; preds = %21, %26
  %.0.i = phi i8* [ %18, %26 ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @.str.12.410, i64 0, i64 0), %21 ]
  %27 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.03, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8, !tbaa !64
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.23.412, i64 0, i64 0), i8* %.0.i, i8* %28) #2
  br label %29

; <label>:29                                      ; preds = %ConvertType.exit, %.lr.ph
  %.2 = phi i32 [ 1, %ConvertType.exit ], [ %.12, %.lr.ph ]
  %30 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.03, i64 0, i32 6
  %field.0 = load %struct._tagTreeCCField*, %struct._tagTreeCCField** %30, align 8
  %31 = icmp eq %struct._tagTreeCCField* %field.0, null
  br i1 %31, label %._crit_edge.loopexit, label %.lr.ph

._crit_edge.loopexit:                             ; preds = %29
  %.2.lcssa = phi i32 [ %.2, %29 ]
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %6
  %.1.lcssa = phi i32 [ %.0, %6 ], [ %.2.lcssa, %._crit_edge.loopexit ]
  ret i32 %.1.lcssa
}

; Function Attrs: nounwind uwtable
define internal fastcc void @FactoryInvokeParams.475(%struct._tagTreeCCStream* %stream, %struct._tagTreeCCNode* nocapture readonly %node) #0 {
  %1 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 0
  %2 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %1, align 8, !tbaa !38
  %3 = icmp eq %struct._tagTreeCCNode* %2, null
  br i1 %3, label %5, label %4

; <label>:4                                       ; preds = %0
  tail call fastcc void @FactoryInvokeParams.475(%struct._tagTreeCCStream* %stream, %struct._tagTreeCCNode* %2)
  br label %5

; <label>:5                                       ; preds = %0, %4
  %6 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 10
  %field.0.1 = load %struct._tagTreeCCField*, %struct._tagTreeCCField** %6, align 8
  %7 = icmp eq %struct._tagTreeCCField* %field.0.1, null
  br i1 %7, label %._crit_edge, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %5
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %15
  %field.02 = phi %struct._tagTreeCCField* [ %field.0, %15 ], [ %field.0.1, %.lr.ph.preheader ]
  %8 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.02, i64 0, i32 3
  %9 = load i32, i32* %8, align 4, !tbaa !61
  %10 = and i32 %9, 1
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %15

; <label>:12                                      ; preds = %.lr.ph
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.401, i64 0, i64 0)) #2
  %13 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.02, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8, !tbaa !64
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7.403, i64 0, i64 0), i8* %14) #2
  br label %15

; <label>:15                                      ; preds = %12, %.lr.ph
  %16 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.02, i64 0, i32 6
  %field.0 = load %struct._tagTreeCCField*, %struct._tagTreeCCField** %16, align 8
  %17 = icmp eq %struct._tagTreeCCField* %field.0, null
  br i1 %17, label %._crit_edge.loopexit, label %.lr.ph

._crit_edge.loopexit:                             ; preds = %15
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %5
  ret void
}

; Function Attrs: nounwind uwtable
define void @TreeCCGenerate(%struct._tagTreeCCContext* %context) #0 {
  %1 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 13
  %2 = load i32, i32* %1, align 4, !tbaa !9
  switch i32 %2, label %9 [
    i32 0, label %3
    i32 1, label %4
    i32 2, label %5
    i32 3, label %6
    i32 4, label %7
    i32 5, label %8
  ]

; <label>:3                                       ; preds = %0
  tail call void @TreeCCGenerateC(%struct._tagTreeCCContext* %context) #2
  br label %9

; <label>:4                                       ; preds = %0
  tail call void @TreeCCGenerateCPP(%struct._tagTreeCCContext* %context) #2
  br label %9

; <label>:5                                       ; preds = %0
  tail call void @TreeCCGenerateJava(%struct._tagTreeCCContext* %context) #2
  br label %9

; <label>:6                                       ; preds = %0
  tail call void @TreeCCGenerateCSharp(%struct._tagTreeCCContext* %context) #2
  br label %9

; <label>:7                                       ; preds = %0
  tail call void @TreeCCGenerateRuby(%struct._tagTreeCCContext* %context) #2
  br label %9

; <label>:8                                       ; preds = %0
  tail call void @TreeCCGeneratePHP(%struct._tagTreeCCContext* %context) #2
  br label %9

; <label>:9                                       ; preds = %0, %8, %7, %6, %5, %4, %3
  ret void
}

; Function Attrs: nounwind uwtable
define void @TreeCCGenerateNonVirtuals(%struct._tagTreeCCContext* %context, %struct.TreeCCNonVirtual* nocapture %nonVirt) #0 {
  %1 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 13
  %2 = getelementptr inbounds %struct.TreeCCNonVirtual, %struct.TreeCCNonVirtual* %nonVirt, i64 0, i32 0
  %3 = getelementptr inbounds %struct.TreeCCNonVirtual, %struct.TreeCCNonVirtual* %nonVirt, i64 0, i32 6
  %4 = getelementptr inbounds %struct.TreeCCNonVirtual, %struct.TreeCCNonVirtual* %nonVirt, i64 0, i32 13
  %5 = getelementptr inbounds %struct.TreeCCNonVirtual, %struct.TreeCCNonVirtual* %nonVirt, i64 0, i32 1
  %6 = getelementptr inbounds %struct.TreeCCNonVirtual, %struct.TreeCCNonVirtual* %nonVirt, i64 0, i32 12
  br label %7

; <label>:7                                       ; preds = %._crit_edge, %0
  %indvars.iv = phi i64 [ 0, %0 ], [ %indvars.iv.next, %._crit_edge ]
  %8 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 1, i64 %indvars.iv
  %oper.0.1 = load %struct._tagTreeCCOperation*, %struct._tagTreeCCOperation** %8, align 8
  %9 = icmp eq %struct._tagTreeCCOperation* %oper.0.1, null
  br i1 %9, label %._crit_edge, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %7
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %GenerateNonVirtual.exit
  %oper.02 = phi %struct._tagTreeCCOperation* [ %oper.0, %GenerateNonVirtual.exit ], [ %oper.0.1, %.lr.ph.preheader ]
  %10 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %oper.02, i64 0, i32 5
  %11 = load i32, i32* %10, align 4, !tbaa !44
  %12 = and i32 %11, 1
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %GenerateNonVirtual.exit

; <label>:14                                      ; preds = %.lr.ph
  %15 = load i32, i32* %1, align 4, !tbaa !9
  %16 = icmp eq i32 %15, 2
  br i1 %16, label %17, label %27

; <label>:17                                      ; preds = %14
  %18 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %oper.02, i64 0, i32 1
  %19 = load i8*, i8** %18, align 8, !tbaa !60
  %20 = icmp eq i8* %19, null
  br i1 %20, label %23, label %21

; <label>:21                                      ; preds = %17
  %22 = tail call %struct._tagTreeCCStream* @TreeCCStreamGetJava(%struct._tagTreeCCContext* %context, i8* %19) #2
  br label %30

; <label>:23                                      ; preds = %17
  %24 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %oper.02, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8, !tbaa !46
  %26 = tail call %struct._tagTreeCCStream* @TreeCCStreamGetJava(%struct._tagTreeCCContext* %context, i8* %25) #2
  br label %30

; <label>:27                                      ; preds = %14
  %28 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %oper.02, i64 0, i32 15
  %29 = load %struct._tagTreeCCStream*, %struct._tagTreeCCStream** %28, align 8, !tbaa !71
  br label %30

; <label>:30                                      ; preds = %27, %23, %21
  %stream.0.i = phi %struct._tagTreeCCStream* [ %22, %21 ], [ %26, %23 ], [ %29, %27 ]
  %31 = load void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, %struct._tagTreeCCOperation*)*, void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, %struct._tagTreeCCOperation*)** %2, align 8, !tbaa !72
  tail call void %31(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %stream.0.i, %struct._tagTreeCCOperation* %oper.02) #2
  %32 = load i32, i32* %10, align 4, !tbaa !44
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %.loopexit.i

; <label>:35                                      ; preds = %30
  %36 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %oper.02, i64 0, i32 10
  %operCase.0.6.i = load %struct._tagTreeCCOperationCase*, %struct._tagTreeCCOperationCase** %36, align 8
  %37 = icmp eq %struct._tagTreeCCOperationCase* %operCase.0.6.i, null
  br i1 %37, label %.loopexit.i, label %.lr.ph.i.preheader

.lr.ph.i.preheader:                               ; preds = %35
  br label %.lr.ph.i

.lr.ph.i:                                         ; preds = %.lr.ph.i.preheader, %.lr.ph.i
  %operCase.08.i = phi %struct._tagTreeCCOperationCase* [ %operCase.0.i, %.lr.ph.i ], [ %operCase.0.6.i, %.lr.ph.i.preheader ]
  %number.07.i = phi i32 [ %39, %.lr.ph.i ], [ 1, %.lr.ph.i.preheader ]
  %38 = load void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, %struct._tagTreeCCOperationCase*, i32)*, void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, %struct._tagTreeCCOperationCase*, i32)** %3, align 8, !tbaa !74
  tail call void %38(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %stream.0.i, %struct._tagTreeCCOperationCase* %operCase.08.i, i32 %number.07.i) #2
  %39 = add nuw nsw i32 %number.07.i, 1
  %40 = getelementptr inbounds %struct._tagTreeCCOperationCase, %struct._tagTreeCCOperationCase* %operCase.08.i, i64 0, i32 3
  store i32 %number.07.i, i32* %40, align 4, !tbaa !75
  %41 = getelementptr inbounds %struct._tagTreeCCOperationCase, %struct._tagTreeCCOperationCase* %operCase.08.i, i64 0, i32 8
  %operCase.0.i = load %struct._tagTreeCCOperationCase*, %struct._tagTreeCCOperationCase** %41, align 8
  %42 = icmp eq %struct._tagTreeCCOperationCase* %operCase.0.i, null
  br i1 %42, label %.loopexit.i.loopexit, label %.lr.ph.i

.loopexit.i.loopexit:                             ; preds = %.lr.ph.i
  br label %.loopexit.i

.loopexit.i:                                      ; preds = %.loopexit.i.loopexit, %35, %30
  %43 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %oper.02, i64 0, i32 6
  %44 = load i32, i32* %43, align 4, !tbaa !76
  %45 = icmp sgt i32 %44, 1
  br i1 %45, label %46, label %71

; <label>:46                                      ; preds = %.loopexit.i
  %47 = load i32, i32* %10, align 4, !tbaa !44
  %48 = and i32 %47, 4
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %71, label %50

; <label>:50                                      ; preds = %46
  %51 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %oper.02, i64 0, i32 4
  %param.0.1.i.i = load %struct._tagTreeCCParam*, %struct._tagTreeCCParam** %51, align 8
  %52 = icmp eq %struct._tagTreeCCParam* %param.0.1.i.i, null
  br i1 %52, label %AssignTriggerPosns.exit.i, label %.lr.ph.i.i.preheader

.lr.ph.i.i.preheader:                             ; preds = %50
  br label %.lr.ph.i.i

.lr.ph.i.i:                                       ; preds = %.lr.ph.i.i.preheader, %64
  %param.02.i.i = phi %struct._tagTreeCCParam* [ %param.0.i.i, %64 ], [ %param.0.1.i.i, %.lr.ph.i.i.preheader ]
  %53 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.02.i.i, i64 0, i32 2
  %54 = load i32, i32* %53, align 4, !tbaa !52
  %55 = and i32 %54, 1
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %64, label %57

; <label>:57                                      ; preds = %.lr.ph.i.i
  %58 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.02.i.i, i64 0, i32 1
  %59 = load i8*, i8** %58, align 8, !tbaa !47
  %60 = tail call %struct._tagTreeCCNode* @TreeCCNodeFindByType(%struct._tagTreeCCContext* %context, i8* %59) #2
  %61 = icmp eq %struct._tagTreeCCNode* %60, null
  br i1 %61, label %64, label %62

; <label>:62                                      ; preds = %57
  %63 = tail call i32 @TreeCCNodeAssignPositions(%struct._tagTreeCCNode* %60) #2
  br label %64

; <label>:64                                      ; preds = %62, %57, %.lr.ph.i.i
  %65 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.02.i.i, i64 0, i32 4
  %param.0.i.i = load %struct._tagTreeCCParam*, %struct._tagTreeCCParam** %65, align 8
  %66 = icmp eq %struct._tagTreeCCParam* %param.0.i.i, null
  br i1 %66, label %AssignTriggerPosns.exit.loopexit.i, label %.lr.ph.i.i

AssignTriggerPosns.exit.loopexit.i:               ; preds = %64
  %.pre.i = load %struct._tagTreeCCParam*, %struct._tagTreeCCParam** %51, align 8, !tbaa !68
  br label %AssignTriggerPosns.exit.i

AssignTriggerPosns.exit.i:                        ; preds = %AssignTriggerPosns.exit.loopexit.i, %50
  %67 = phi %struct._tagTreeCCParam* [ %.pre.i, %AssignTriggerPosns.exit.loopexit.i ], [ null, %50 ]
  %68 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %oper.02, i64 0, i32 12
  %69 = load %struct._tagTreeCCOperationCase**, %struct._tagTreeCCOperationCase*** %68, align 8, !tbaa !77
  tail call fastcc void @GenerateSplitMultiSwitch(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %stream.0.i, %struct.TreeCCNonVirtual* %nonVirt, %struct._tagTreeCCOperation* %oper.02, %struct._tagTreeCCOperationCase** %69, i32 0, i32 1, %struct._tagTreeCCParam* %67, i32 0) #2
  %70 = load void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, %struct._tagTreeCCOperation*)*, void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, %struct._tagTreeCCOperation*)** %4, align 8, !tbaa !78
  tail call void %70(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %stream.0.i, %struct._tagTreeCCOperation* %oper.02) #2
  br label %GenerateNonVirtual.exit

; <label>:71                                      ; preds = %46, %.loopexit.i
  %72 = load void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, %struct._tagTreeCCOperation*)*, void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, %struct._tagTreeCCOperation*)** %5, align 8, !tbaa !79
  tail call void %72(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %stream.0.i, %struct._tagTreeCCOperation* %oper.02) #2
  %73 = load i32, i32* %43, align 4, !tbaa !76
  %74 = icmp slt i32 %73, 2
  br i1 %74, label %75, label %79

; <label>:75                                      ; preds = %71
  %76 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %oper.02, i64 0, i32 10
  %77 = load %struct._tagTreeCCOperationCase*, %struct._tagTreeCCOperationCase** %76, align 8, !tbaa !80
  %78 = tail call fastcc %struct._tagTreeCCOperationCase* @GenerateSwitch(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %stream.0.i, %struct.TreeCCNonVirtual* %nonVirt, %struct._tagTreeCCOperation* %oper.02, %struct._tagTreeCCOperationCase* %77, i32 0) #2
  br label %99

; <label>:79                                      ; preds = %71
  %80 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %oper.02, i64 0, i32 4
  %param.0.1.i.1.i = load %struct._tagTreeCCParam*, %struct._tagTreeCCParam** %80, align 8
  %81 = icmp eq %struct._tagTreeCCParam* %param.0.1.i.1.i, null
  br i1 %81, label %AssignTriggerPosns.exit5.i, label %.lr.ph.i.3.i.preheader

.lr.ph.i.3.i.preheader:                           ; preds = %79
  br label %.lr.ph.i.3.i

.lr.ph.i.3.i:                                     ; preds = %.lr.ph.i.3.i.preheader, %93
  %param.02.i.2.i = phi %struct._tagTreeCCParam* [ %param.0.i.4.i, %93 ], [ %param.0.1.i.1.i, %.lr.ph.i.3.i.preheader ]
  %82 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.02.i.2.i, i64 0, i32 2
  %83 = load i32, i32* %82, align 4, !tbaa !52
  %84 = and i32 %83, 1
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %93, label %86

; <label>:86                                      ; preds = %.lr.ph.i.3.i
  %87 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.02.i.2.i, i64 0, i32 1
  %88 = load i8*, i8** %87, align 8, !tbaa !47
  %89 = tail call %struct._tagTreeCCNode* @TreeCCNodeFindByType(%struct._tagTreeCCContext* %context, i8* %88) #2
  %90 = icmp eq %struct._tagTreeCCNode* %89, null
  br i1 %90, label %93, label %91

; <label>:91                                      ; preds = %86
  %92 = tail call i32 @TreeCCNodeAssignPositions(%struct._tagTreeCCNode* %89) #2
  br label %93

; <label>:93                                      ; preds = %91, %86, %.lr.ph.i.3.i
  %94 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.02.i.2.i, i64 0, i32 4
  %param.0.i.4.i = load %struct._tagTreeCCParam*, %struct._tagTreeCCParam** %94, align 8
  %95 = icmp eq %struct._tagTreeCCParam* %param.0.i.4.i, null
  br i1 %95, label %AssignTriggerPosns.exit5.loopexit.i, label %.lr.ph.i.3.i

AssignTriggerPosns.exit5.loopexit.i:              ; preds = %93
  %.pre9.i = load %struct._tagTreeCCParam*, %struct._tagTreeCCParam** %80, align 8, !tbaa !68
  br label %AssignTriggerPosns.exit5.i

AssignTriggerPosns.exit5.i:                       ; preds = %AssignTriggerPosns.exit5.loopexit.i, %79
  %96 = phi %struct._tagTreeCCParam* [ %.pre9.i, %AssignTriggerPosns.exit5.loopexit.i ], [ null, %79 ]
  %97 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %oper.02, i64 0, i32 12
  %98 = load %struct._tagTreeCCOperationCase**, %struct._tagTreeCCOperationCase*** %97, align 8, !tbaa !77
  tail call fastcc void @GenerateMultiSwitch(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %stream.0.i, %struct.TreeCCNonVirtual* %nonVirt, %struct._tagTreeCCOperation* %oper.02, %struct._tagTreeCCOperationCase** %98, i32 0, i32 1, %struct._tagTreeCCParam* %96, i32 0) #2
  br label %99

; <label>:99                                      ; preds = %AssignTriggerPosns.exit5.i, %75
  %100 = load void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, %struct._tagTreeCCOperation*)*, void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, %struct._tagTreeCCOperation*)** %6, align 8, !tbaa !81
  tail call void %100(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %stream.0.i, %struct._tagTreeCCOperation* %oper.02) #2
  %101 = load void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, %struct._tagTreeCCOperation*)*, void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, %struct._tagTreeCCOperation*)** %4, align 8, !tbaa !78
  tail call void %101(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %stream.0.i, %struct._tagTreeCCOperation* %oper.02) #2
  br label %GenerateNonVirtual.exit

GenerateNonVirtual.exit:                          ; preds = %99, %AssignTriggerPosns.exit.i, %.lr.ph
  %102 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %oper.02, i64 0, i32 9
  %oper.0 = load %struct._tagTreeCCOperation*, %struct._tagTreeCCOperation** %102, align 8
  %103 = icmp eq %struct._tagTreeCCOperation* %oper.0, null
  br i1 %103, label %._crit_edge.loopexit, label %.lr.ph

._crit_edge.loopexit:                             ; preds = %GenerateNonVirtual.exit
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %7
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i64 %indvars.iv.next, 512
  br i1 %exitcond, label %104, label %7

; <label>:104                                     ; preds = %._crit_edge
  ret void
}

; Function Attrs: nounwind
declare i32 @sprintf(i8* nocapture, i8* nocapture readonly, ...) #1

; Function Attrs: nounwind uwtable
define internal fastcc void @GenerateSplitMultiSwitch(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %stream, %struct.TreeCCNonVirtual* nocapture readonly %nonVirt, %struct._tagTreeCCOperation* %oper, %struct._tagTreeCCOperationCase** nocapture readonly %sortedCases, i32 %base, i32 %multiplier, %struct._tagTreeCCParam* readonly %nextParam, i32 %triggerNum) #0 {
  %paramName = alloca [64 x i8], align 16
  %1 = icmp eq %struct._tagTreeCCParam* %nextParam, null
  br i1 %1, label %.critedge, label %.lr.ph7.preheader

.lr.ph7.preheader:                                ; preds = %0
  br label %.lr.ph7

.lr.ph7:                                          ; preds = %.lr.ph7.preheader, %6
  %.06 = phi %struct._tagTreeCCParam* [ %8, %6 ], [ %nextParam, %.lr.ph7.preheader ]
  %2 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %.06, i64 0, i32 2
  %3 = load i32, i32* %2, align 4, !tbaa !52
  %4 = and i32 %3, 1
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %.critedge.loopexit

; <label>:6                                       ; preds = %.lr.ph7
  %7 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %.06, i64 0, i32 4
  %8 = load %struct._tagTreeCCParam*, %struct._tagTreeCCParam** %7, align 8, !tbaa !82
  %9 = icmp eq %struct._tagTreeCCParam* %8, null
  br i1 %9, label %.critedge.loopexit, label %.lr.ph7

.critedge.loopexit:                               ; preds = %6, %.lr.ph7
  %.0.lcssa.ph = phi %struct._tagTreeCCParam* [ %.06, %.lr.ph7 ], [ null, %6 ]
  br label %.critedge

.critedge:                                        ; preds = %.critedge.loopexit, %0
  %.0.lcssa = phi %struct._tagTreeCCParam* [ null, %0 ], [ %.0.lcssa.ph, %.critedge.loopexit ]
  %10 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %.0.lcssa, i64 0, i32 1
  %11 = load i8*, i8** %10, align 8, !tbaa !47
  %12 = tail call %struct._tagTreeCCNode* @TreeCCNodeFindByType(%struct._tagTreeCCContext* %context, i8* %11) #2
  %13 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %oper, i64 0, i32 6
  %14 = load i32, i32* %13, align 4, !tbaa !76
  %15 = add nsw i32 %14, -1
  %16 = icmp eq i32 %15, %triggerNum
  br i1 %16, label %18, label %17

; <label>:17                                      ; preds = %.critedge
  tail call fastcc void @GenerateSplitMultiScanFunc(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %stream, %struct.TreeCCNonVirtual* %nonVirt, %struct._tagTreeCCOperation* %oper, %struct._tagTreeCCOperationCase** %sortedCases, i32 %base, i32 %multiplier, %struct._tagTreeCCParam* %.0.lcssa, i32 %triggerNum, %struct._tagTreeCCNode* %12)
  br label %18

; <label>:18                                      ; preds = %.critedge, %17
  %19 = icmp eq i32 %triggerNum, 0
  br i1 %19, label %23, label %20

; <label>:20                                      ; preds = %18
  %21 = getelementptr inbounds %struct.TreeCCNonVirtual, %struct.TreeCCNonVirtual* %nonVirt, i64 0, i32 2
  %22 = load void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, %struct._tagTreeCCOperation*, i32)*, void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, %struct._tagTreeCCOperation*, i32)** %21, align 8, !tbaa !83
  tail call void %22(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %stream, %struct._tagTreeCCOperation* %oper, i32 %base) #2
  br label %26

; <label>:23                                      ; preds = %18
  %24 = getelementptr inbounds %struct.TreeCCNonVirtual, %struct.TreeCCNonVirtual* %nonVirt, i64 0, i32 1
  %25 = load void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, %struct._tagTreeCCOperation*)*, void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, %struct._tagTreeCCOperation*)** %24, align 8, !tbaa !79
  tail call void %25(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %stream, %struct._tagTreeCCOperation* %oper) #2
  br label %26

; <label>:26                                      ; preds = %23, %20
  %27 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %12, i64 0, i32 5
  %28 = load i32, i32* %27, align 4, !tbaa !34
  %29 = lshr i32 %28, 3
  %.lobit = and i32 %29, 1
  %30 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %.0.lcssa, i64 0, i32 0
  %31 = load i8*, i8** %30, align 8, !tbaa !41
  %32 = icmp eq i8* %31, null
  br i1 %32, label %36, label %33

; <label>:33                                      ; preds = %26
  %34 = getelementptr inbounds %struct.TreeCCNonVirtual, %struct.TreeCCNonVirtual* %nonVirt, i64 0, i32 3
  %35 = load void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, i8*, i32, i32)*, void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, i8*, i32, i32)** %34, align 8, !tbaa !84
  tail call void %35(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %stream, i8* %31, i32 0, i32 %.lobit) #2
  br label %51

; <label>:36                                      ; preds = %26
  %37 = getelementptr inbounds [64 x i8], [64 x i8]* %paramName, i64 0, i64 0
  call void @llvm.lifetime.start(i64 64, i8* %37) #2
  %38 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %oper, i64 0, i32 4
  %param.0.2 = load %struct._tagTreeCCParam*, %struct._tagTreeCCParam** %38, align 8
  %39 = icmp eq %struct._tagTreeCCParam* %param.0.2, null
  %40 = icmp eq %struct._tagTreeCCParam* %param.0.2, %.0.lcssa
  %or.cond.3 = or i1 %39, %40
  br i1 %or.cond.3, label %.critedge1, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %36
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %.lr.ph
  %param.05 = phi %struct._tagTreeCCParam* [ %param.0, %.lr.ph ], [ %param.0.2, %.lr.ph.preheader ]
  %paramNum.04 = phi i32 [ %.paramNum.0, %.lr.ph ], [ 0, %.lr.ph.preheader ]
  %41 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.05, i64 0, i32 0
  %42 = load i8*, i8** %41, align 8, !tbaa !41
  %43 = icmp eq i8* %42, null
  %44 = zext i1 %43 to i32
  %.paramNum.0 = add nsw i32 %44, %paramNum.04
  %45 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.05, i64 0, i32 4
  %param.0 = load %struct._tagTreeCCParam*, %struct._tagTreeCCParam** %45, align 8
  %46 = icmp eq %struct._tagTreeCCParam* %param.0, null
  %47 = icmp eq %struct._tagTreeCCParam* %param.0, %.0.lcssa
  %or.cond = or i1 %46, %47
  br i1 %or.cond, label %.critedge1.loopexit, label %.lr.ph

.critedge1.loopexit:                              ; preds = %.lr.ph
  %.paramNum.0.lcssa = phi i32 [ %.paramNum.0, %.lr.ph ]
  br label %.critedge1

.critedge1:                                       ; preds = %.critedge1.loopexit, %36
  %paramNum.0.lcssa = phi i32 [ 0, %36 ], [ %.paramNum.0.lcssa, %.critedge1.loopexit ]
  %48 = call i32 (i8*, i8*, ...) @sprintf(i8* %37, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.480, i64 0, i64 0), i32 %paramNum.0.lcssa) #2
  %49 = getelementptr inbounds %struct.TreeCCNonVirtual, %struct.TreeCCNonVirtual* %nonVirt, i64 0, i32 3
  %50 = load void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, i8*, i32, i32)*, void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, i8*, i32, i32)** %49, align 8, !tbaa !84
  call void %50(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %stream, i8* %37, i32 0, i32 %.lobit) #2
  call void @llvm.lifetime.end(i64 64, i8* %37) #2
  br label %51

; <label>:51                                      ; preds = %.critedge1, %33
  call fastcc void @GenerateSplitMultiScan(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %stream, %struct.TreeCCNonVirtual* %nonVirt, %struct._tagTreeCCOperation* %oper, %struct._tagTreeCCOperationCase** %sortedCases, i32 %base, i32 %multiplier, i32 %triggerNum, %struct._tagTreeCCNode* %12)
  %52 = getelementptr inbounds %struct.TreeCCNonVirtual, %struct.TreeCCNonVirtual* %nonVirt, i64 0, i32 11
  %53 = load void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, i32)*, void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, i32)** %52, align 8, !tbaa !85
  call void %53(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %stream, i32 0) #2
  %54 = getelementptr inbounds %struct.TreeCCNonVirtual, %struct.TreeCCNonVirtual* %nonVirt, i64 0, i32 12
  %55 = load void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, %struct._tagTreeCCOperation*)*, void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, %struct._tagTreeCCOperation*)** %54, align 8, !tbaa !81
  call void %55(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %stream, %struct._tagTreeCCOperation* %oper) #2
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct._tagTreeCCOperationCase* @GenerateSwitch(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %stream, %struct.TreeCCNonVirtual* nocapture %nonVirt, %struct._tagTreeCCOperation* nocapture %oper, %struct._tagTreeCCOperationCase* %operCase, i32 %triggerNum) #0 {
  %paramName = alloca [64 x i8], align 16
  %1 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %oper, i64 0, i32 4
  %param.0.23 = load %struct._tagTreeCCParam*, %struct._tagTreeCCParam** %1, align 8
  %2 = icmp eq %struct._tagTreeCCParam* %param.0.23, null
  br i1 %2, label %.critedge3, label %.lr.ph27.preheader

.lr.ph27.preheader:                               ; preds = %0
  br label %.lr.ph27

.lr.ph27:                                         ; preds = %.lr.ph27.preheader, %11
  %param.026 = phi %struct._tagTreeCCParam* [ %param.0, %11 ], [ %param.0.23, %.lr.ph27.preheader ]
  %paramNum.025 = phi i32 [ %.paramNum.0, %11 ], [ 1, %.lr.ph27.preheader ]
  %num.024 = phi i32 [ %num.1, %11 ], [ 0, %.lr.ph27.preheader ]
  %3 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.026, i64 0, i32 2
  %4 = load i32, i32* %3, align 4, !tbaa !52
  %5 = and i32 %4, 1
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %11, label %7

; <label>:7                                       ; preds = %.lr.ph27
  %8 = icmp eq i32 %num.024, %triggerNum
  br i1 %8, label %35, label %9

; <label>:9                                       ; preds = %7
  %10 = add nsw i32 %num.024, 1
  br label %11

; <label>:11                                      ; preds = %.lr.ph27, %9
  %num.1 = phi i32 [ %10, %9 ], [ %num.024, %.lr.ph27 ]
  %12 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.026, i64 0, i32 0
  %13 = load i8*, i8** %12, align 8, !tbaa !41
  %14 = icmp eq i8* %13, null
  %15 = zext i1 %14 to i32
  %.paramNum.0 = add nsw i32 %15, %paramNum.025
  %16 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.026, i64 0, i32 4
  %param.0 = load %struct._tagTreeCCParam*, %struct._tagTreeCCParam** %16, align 8
  %17 = icmp eq %struct._tagTreeCCParam* %param.0, null
  br i1 %17, label %.critedge3.loopexit, label %.lr.ph27

.critedge3.loopexit:                              ; preds = %11
  br label %.critedge3

.critedge3:                                       ; preds = %.critedge3.loopexit, %0
  %18 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %oper, i64 0, i32 5
  %19 = load i32, i32* %18, align 4, !tbaa !44
  %20 = and i32 %19, 2
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %26, label %22

; <label>:22                                      ; preds = %.critedge3
  %23 = getelementptr inbounds %struct.TreeCCNonVirtual, %struct.TreeCCNonVirtual* %nonVirt, i64 0, i32 8
  %24 = load void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, %struct._tagTreeCCOperationCase*, i32)*, void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, %struct._tagTreeCCOperationCase*, i32)** %23, align 8, !tbaa !86
  %25 = add nsw i32 %triggerNum, -1
  tail call void %24(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %stream, %struct._tagTreeCCOperationCase* %operCase, i32 %25) #2
  br label %32

; <label>:26                                      ; preds = %.critedge3
  %27 = getelementptr inbounds %struct.TreeCCNonVirtual, %struct.TreeCCNonVirtual* %nonVirt, i64 0, i32 7
  %28 = load void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, %struct._tagTreeCCOperationCase*, i32, i32)*, void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, %struct._tagTreeCCOperationCase*, i32, i32)** %27, align 8, !tbaa !87
  %29 = getelementptr inbounds %struct._tagTreeCCOperationCase, %struct._tagTreeCCOperationCase* %operCase, i64 0, i32 3
  %30 = load i32, i32* %29, align 4, !tbaa !75
  %31 = add nsw i32 %triggerNum, -1
  tail call void %28(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %stream, %struct._tagTreeCCOperationCase* %operCase, i32 %30, i32 %31) #2
  br label %32

; <label>:32                                      ; preds = %26, %22
  %33 = getelementptr inbounds %struct._tagTreeCCOperationCase, %struct._tagTreeCCOperationCase* %operCase, i64 0, i32 8
  %34 = load %struct._tagTreeCCOperationCase*, %struct._tagTreeCCOperationCase** %33, align 8, !tbaa !88
  br label %115

; <label>:35                                      ; preds = %7
  %paramNum.025.lcssa = phi i32 [ %paramNum.025, %7 ]
  %param.026.lcssa = phi %struct._tagTreeCCParam* [ %param.026, %7 ]
  %36 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.026.lcssa, i64 0, i32 1
  %37 = load i8*, i8** %36, align 8, !tbaa !47
  %38 = tail call %struct._tagTreeCCNode* @TreeCCNodeFindByType(%struct._tagTreeCCContext* %context, i8* %37) #2
  %39 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %38, i64 0, i32 5
  %40 = load i32, i32* %39, align 4, !tbaa !34
  %41 = lshr i32 %40, 3
  %.lobit = and i32 %41, 1
  %42 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.026.lcssa, i64 0, i32 0
  %43 = load i8*, i8** %42, align 8, !tbaa !41
  %44 = icmp eq i8* %43, null
  br i1 %44, label %48, label %45

; <label>:45                                      ; preds = %35
  %46 = getelementptr inbounds %struct.TreeCCNonVirtual, %struct.TreeCCNonVirtual* %nonVirt, i64 0, i32 3
  %47 = load void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, i8*, i32, i32)*, void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, i8*, i32, i32)** %46, align 8, !tbaa !84
  tail call void %47(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %stream, i8* %43, i32 %triggerNum, i32 %.lobit) #2
  br label %53

; <label>:48                                      ; preds = %35
  %49 = getelementptr inbounds [64 x i8], [64 x i8]* %paramName, i64 0, i64 0
  call void @llvm.lifetime.start(i64 64, i8* %49) #2
  %50 = call i32 (i8*, i8*, ...) @sprintf(i8* %49, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.480, i64 0, i64 0), i32 %paramNum.025.lcssa) #2
  %51 = getelementptr inbounds %struct.TreeCCNonVirtual, %struct.TreeCCNonVirtual* %nonVirt, i64 0, i32 3
  %52 = load void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, i8*, i32, i32)*, void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, i8*, i32, i32)** %51, align 8, !tbaa !84
  call void %52(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %stream, i8* %49, i32 %triggerNum, i32 %.lobit) #2
  call void @llvm.lifetime.end(i64 64, i8* %49) #2
  br label %53

; <label>:53                                      ; preds = %48, %45
  %54 = shl i32 256, %triggerNum
  call void @TreeCCNodeClearMarking(%struct._tagTreeCCContext* %context, i32 %54) #2
  %55 = icmp sgt i32 %triggerNum, 0
  %56 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 2
  %57 = getelementptr inbounds %struct.TreeCCNonVirtual, %struct.TreeCCNonVirtual* %nonVirt, i64 0, i32 5
  %58 = add nsw i32 %triggerNum, 1
  %59 = getelementptr inbounds %struct.TreeCCNonVirtual, %struct.TreeCCNonVirtual* %nonVirt, i64 0, i32 10
  br i1 %55, label %LevelsMatch.exit.thread4.us, label %.critedge.preheader

.critedge.preheader:                              ; preds = %53
  br label %.critedge

LevelsMatch.exit.thread4.us:                      ; preds = %53
  %60 = getelementptr inbounds %struct._tagTreeCCOperationCase, %struct._tagTreeCCOperationCase* %operCase, i64 0, i32 0
  %trigger.0.16.us = load %struct._tagTreeCCTrigger*, %struct._tagTreeCCTrigger** %60, align 8
  %61 = icmp eq %struct._tagTreeCCTrigger* %trigger.0.16.us, null
  br i1 %61, label %.critedge.us.thread, label %.lr.ph20.us.preheader

.lr.ph20.us.preheader:                            ; preds = %LevelsMatch.exit.thread4.us
  br label %.lr.ph20.us

.critedge.us:                                     ; preds = %.lr.ph20.us
  %.lcssa = phi i1 [ %79, %.lr.ph20.us ]
  %trigger.0.us.lcssa = phi %struct._tagTreeCCTrigger* [ %trigger.0.us, %.lr.ph20.us ]
  br i1 %.lcssa, label %62, label %.critedge.us.thread

; <label>:62                                      ; preds = %.critedge.us
  %63 = getelementptr inbounds %struct._tagTreeCCTrigger, %struct._tagTreeCCTrigger* %trigger.0.us.lcssa, i64 0, i32 0
  %64 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %63, align 8, !tbaa !53
  %65 = call fastcc i32 @GenerateSelectors(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %stream, %struct.TreeCCNonVirtual* %nonVirt, %struct._tagTreeCCNode* %64, i32 %54, i32 %triggerNum)
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %.critedge.us.thread

; <label>:67                                      ; preds = %62
  %68 = load %struct.TreeCCInput*, %struct.TreeCCInput** %56, align 8, !tbaa !1
  %69 = getelementptr inbounds %struct._tagTreeCCOperationCase, %struct._tagTreeCCOperationCase* %operCase, i64 0, i32 4
  %70 = load i8*, i8** %69, align 8, !tbaa !89
  %71 = getelementptr inbounds %struct._tagTreeCCOperationCase, %struct._tagTreeCCOperationCase* %operCase, i64 0, i32 5
  %72 = load i64, i64* %71, align 8, !tbaa !90
  call void (%struct.TreeCCInput*, i8*, i64, i8*, ...) @TreeCCErrorOnLine(%struct.TreeCCInput* %68, i8* %70, i64 %72, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.1.481, i64 0, i64 0)) #2
  br label %.critedge.us.thread

.critedge.us.thread:                              ; preds = %LevelsMatch.exit.thread4.us, %67, %62, %.critedge.us
  %73 = load void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, i32)*, void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, i32)** %57, align 8, !tbaa !91
  call void %73(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %stream, i32 %triggerNum) #2
  %74 = call fastcc %struct._tagTreeCCOperationCase* @GenerateSwitch(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %stream, %struct.TreeCCNonVirtual* %nonVirt, %struct._tagTreeCCOperation* %oper, %struct._tagTreeCCOperationCase* %operCase, i32 %58)
  %75 = load void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, i32)*, void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, i32)** %59, align 8, !tbaa !92
  call void %75(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %stream, i32 %triggerNum) #2
  %76 = icmp eq %struct._tagTreeCCOperationCase* %74, null
  br i1 %76, label %.critedge1, label %.lr.ph.split.us.i.preheader

.lr.ph20.us:                                      ; preds = %.lr.ph20.us.preheader, %.lr.ph20.us
  %trigger.019.us = phi %struct._tagTreeCCTrigger* [ %trigger.0.us, %.lr.ph20.us ], [ %trigger.0.16.us, %.lr.ph20.us.preheader ]
  %num.218.us = phi i32 [ %77, %.lr.ph20.us ], [ 0, %.lr.ph20.us.preheader ]
  %77 = add nuw nsw i32 %num.218.us, 1
  %78 = getelementptr inbounds %struct._tagTreeCCTrigger, %struct._tagTreeCCTrigger* %trigger.019.us, i64 0, i32 1
  %trigger.0.us = load %struct._tagTreeCCTrigger*, %struct._tagTreeCCTrigger** %78, align 8
  %79 = icmp ne %struct._tagTreeCCTrigger* %trigger.0.us, null
  %80 = icmp slt i32 %77, %triggerNum
  %or.cond.us = and i1 %80, %79
  br i1 %or.cond.us, label %.lr.ph20.us, label %.critedge.us

.critedge:                                        ; preds = %.critedge.preheader, %94
  %.02 = phi %struct._tagTreeCCOperationCase* [ %96, %94 ], [ %operCase, %.critedge.preheader ]
  %81 = getelementptr inbounds %struct._tagTreeCCOperationCase, %struct._tagTreeCCOperationCase* %.02, i64 0, i32 0
  %trigger.0.16 = load %struct._tagTreeCCTrigger*, %struct._tagTreeCCTrigger** %81, align 8
  %82 = icmp eq %struct._tagTreeCCTrigger* %trigger.0.16, null
  br i1 %82, label %94, label %83

; <label>:83                                      ; preds = %.critedge
  %84 = getelementptr inbounds %struct._tagTreeCCTrigger, %struct._tagTreeCCTrigger* %trigger.0.16, i64 0, i32 0
  %85 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %84, align 8, !tbaa !53
  %86 = call fastcc i32 @GenerateSelectors(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %stream, %struct.TreeCCNonVirtual* %nonVirt, %struct._tagTreeCCNode* %85, i32 %54, i32 %triggerNum)
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %94

; <label>:88                                      ; preds = %83
  %89 = load %struct.TreeCCInput*, %struct.TreeCCInput** %56, align 8, !tbaa !1
  %90 = getelementptr inbounds %struct._tagTreeCCOperationCase, %struct._tagTreeCCOperationCase* %.02, i64 0, i32 4
  %91 = load i8*, i8** %90, align 8, !tbaa !89
  %92 = getelementptr inbounds %struct._tagTreeCCOperationCase, %struct._tagTreeCCOperationCase* %.02, i64 0, i32 5
  %93 = load i64, i64* %92, align 8, !tbaa !90
  call void (%struct.TreeCCInput*, i8*, i64, i8*, ...) @TreeCCErrorOnLine(%struct.TreeCCInput* %89, i8* %91, i64 %93, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.1.481, i64 0, i64 0)) #2
  br label %94

; <label>:94                                      ; preds = %.critedge, %83, %88
  %95 = load void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, i32)*, void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, i32)** %57, align 8, !tbaa !91
  call void %95(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %stream, i32 %triggerNum) #2
  %96 = call fastcc %struct._tagTreeCCOperationCase* @GenerateSwitch(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %stream, %struct.TreeCCNonVirtual* %nonVirt, %struct._tagTreeCCOperation* %oper, %struct._tagTreeCCOperationCase* %.02, i32 %58)
  %97 = load void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, i32)*, void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, i32)** %59, align 8, !tbaa !92
  call void %97(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %stream, i32 %triggerNum) #2
  %98 = icmp eq %struct._tagTreeCCOperationCase* %96, null
  br i1 %98, label %.critedge1.loopexit43, label %.critedge

.lr.ph.split.us.i.preheader:                      ; preds = %.critedge.us.thread
  %99 = getelementptr inbounds %struct._tagTreeCCOperationCase, %struct._tagTreeCCOperationCase* %74, i64 0, i32 0
  %trigger2.03.us.i.12 = load %struct._tagTreeCCTrigger*, %struct._tagTreeCCTrigger** %99, align 8
  %trigger1.04.us.i.13 = load %struct._tagTreeCCTrigger*, %struct._tagTreeCCTrigger** %60, align 8
  %100 = getelementptr inbounds %struct._tagTreeCCTrigger, %struct._tagTreeCCTrigger* %trigger1.04.us.i.13, i64 0, i32 0
  %101 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %100, align 8, !tbaa !53
  %102 = getelementptr inbounds %struct._tagTreeCCTrigger, %struct._tagTreeCCTrigger* %trigger2.03.us.i.12, i64 0, i32 0
  %103 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %102, align 8, !tbaa !53
  %104 = icmp eq %struct._tagTreeCCNode* %101, %103
  br i1 %104, label %.lr.ph.split.us.i.preheader42, label %.critedge1

.lr.ph.split.us.i.preheader42:                    ; preds = %.lr.ph.split.us.i.preheader
  br label %.lr.ph.split.us.i

.lr.ph.split.us.i:                                ; preds = %.lr.ph.split.us.i.preheader42, %.lr.ph.split.us.i
  %trigger1.04.us.i15 = phi %struct._tagTreeCCTrigger* [ %trigger1.04.us.i, %.lr.ph.split.us.i ], [ %trigger1.04.us.i.13, %.lr.ph.split.us.i.preheader42 ]
  %trigger2.03.us.i14 = phi %struct._tagTreeCCTrigger* [ %trigger2.03.us.i, %.lr.ph.split.us.i ], [ %trigger2.03.us.i.12, %.lr.ph.split.us.i.preheader42 ]
  %105 = getelementptr inbounds %struct._tagTreeCCTrigger, %struct._tagTreeCCTrigger* %trigger1.04.us.i15, i64 0, i32 1
  %106 = getelementptr inbounds %struct._tagTreeCCTrigger, %struct._tagTreeCCTrigger* %trigger2.03.us.i14, i64 0, i32 1
  %trigger2.03.us.i = load %struct._tagTreeCCTrigger*, %struct._tagTreeCCTrigger** %106, align 8
  %trigger1.04.us.i = load %struct._tagTreeCCTrigger*, %struct._tagTreeCCTrigger** %105, align 8
  %107 = getelementptr inbounds %struct._tagTreeCCTrigger, %struct._tagTreeCCTrigger* %trigger1.04.us.i, i64 0, i32 0
  %108 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %107, align 8, !tbaa !53
  %109 = getelementptr inbounds %struct._tagTreeCCTrigger, %struct._tagTreeCCTrigger* %trigger2.03.us.i, i64 0, i32 0
  %110 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %109, align 8, !tbaa !53
  %111 = icmp eq %struct._tagTreeCCNode* %108, %110
  br i1 %111, label %.lr.ph.split.us.i, label %.critedge1.loopexit

.critedge1.loopexit:                              ; preds = %.lr.ph.split.us.i
  br label %.critedge1

.critedge1.loopexit43:                            ; preds = %94
  br label %.critedge1

.critedge1:                                       ; preds = %.critedge1.loopexit43, %.critedge1.loopexit, %.critedge.us.thread, %.lr.ph.split.us.i.preheader
  %112 = phi %struct._tagTreeCCOperationCase* [ %74, %.lr.ph.split.us.i.preheader ], [ null, %.critedge.us.thread ], [ %74, %.critedge1.loopexit ], [ null, %.critedge1.loopexit43 ]
  %113 = getelementptr inbounds %struct.TreeCCNonVirtual, %struct.TreeCCNonVirtual* %nonVirt, i64 0, i32 11
  %114 = load void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, i32)*, void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, i32)** %113, align 8, !tbaa !85
  call void %114(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %stream, i32 %triggerNum) #2
  br label %115

; <label>:115                                     ; preds = %.critedge1, %32
  %.0 = phi %struct._tagTreeCCOperationCase* [ %112, %.critedge1 ], [ %34, %32 ]
  ret %struct._tagTreeCCOperationCase* %.0
}

; Function Attrs: nounwind uwtable
define internal fastcc void @GenerateMultiSwitch(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %stream, %struct.TreeCCNonVirtual* nocapture readonly %nonVirt, %struct._tagTreeCCOperation* nocapture readonly %oper, %struct._tagTreeCCOperationCase** nocapture readonly %sortedCases, i32 %base, i32 %multiplier, %struct._tagTreeCCParam* readonly %nextParam, i32 %triggerNum) #0 {
  %paramName = alloca [64 x i8], align 16
  %1 = icmp eq %struct._tagTreeCCParam* %nextParam, null
  br i1 %1, label %.critedge2, label %.lr.ph10.preheader

.lr.ph10.preheader:                               ; preds = %0
  br label %.lr.ph10

.lr.ph10:                                         ; preds = %.lr.ph10.preheader, %6
  %.09 = phi %struct._tagTreeCCParam* [ %8, %6 ], [ %nextParam, %.lr.ph10.preheader ]
  %2 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %.09, i64 0, i32 2
  %3 = load i32, i32* %2, align 4, !tbaa !52
  %4 = and i32 %3, 1
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %.critedge1

; <label>:6                                       ; preds = %.lr.ph10
  %7 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %.09, i64 0, i32 4
  %8 = load %struct._tagTreeCCParam*, %struct._tagTreeCCParam** %7, align 8, !tbaa !82
  %9 = icmp eq %struct._tagTreeCCParam* %8, null
  br i1 %9, label %.critedge2.loopexit, label %.lr.ph10

.critedge2.loopexit:                              ; preds = %6
  br label %.critedge2

.critedge2:                                       ; preds = %.critedge2.loopexit, %0
  %10 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %oper, i64 0, i32 5
  %11 = load i32, i32* %10, align 4, !tbaa !44
  %12 = and i32 %11, 2
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %21, label %14

; <label>:14                                      ; preds = %.critedge2
  %15 = getelementptr inbounds %struct.TreeCCNonVirtual, %struct.TreeCCNonVirtual* %nonVirt, i64 0, i32 8
  %16 = load void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, %struct._tagTreeCCOperationCase*, i32)*, void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, %struct._tagTreeCCOperationCase*, i32)** %15, align 8, !tbaa !86
  %17 = sext i32 %base to i64
  %18 = getelementptr inbounds %struct._tagTreeCCOperationCase*, %struct._tagTreeCCOperationCase** %sortedCases, i64 %17
  %19 = load %struct._tagTreeCCOperationCase*, %struct._tagTreeCCOperationCase** %18, align 8, !tbaa !7
  %20 = add nsw i32 %triggerNum, -1
  tail call void %16(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %stream, %struct._tagTreeCCOperationCase* %19, i32 %20) #2
  br label %60

; <label>:21                                      ; preds = %.critedge2
  %22 = getelementptr inbounds %struct.TreeCCNonVirtual, %struct.TreeCCNonVirtual* %nonVirt, i64 0, i32 7
  %23 = load void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, %struct._tagTreeCCOperationCase*, i32, i32)*, void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, %struct._tagTreeCCOperationCase*, i32, i32)** %22, align 8, !tbaa !87
  %24 = sext i32 %base to i64
  %25 = getelementptr inbounds %struct._tagTreeCCOperationCase*, %struct._tagTreeCCOperationCase** %sortedCases, i64 %24
  %26 = load %struct._tagTreeCCOperationCase*, %struct._tagTreeCCOperationCase** %25, align 8, !tbaa !7
  %27 = getelementptr inbounds %struct._tagTreeCCOperationCase, %struct._tagTreeCCOperationCase* %26, i64 0, i32 3
  %28 = load i32, i32* %27, align 4, !tbaa !75
  %29 = add nsw i32 %triggerNum, -1
  tail call void %23(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %stream, %struct._tagTreeCCOperationCase* %26, i32 %28, i32 %29) #2
  br label %60

.critedge1:                                       ; preds = %.lr.ph10
  %.09.lcssa = phi %struct._tagTreeCCParam* [ %.09, %.lr.ph10 ]
  %30 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %.09.lcssa, i64 0, i32 1
  %31 = load i8*, i8** %30, align 8, !tbaa !47
  %32 = tail call %struct._tagTreeCCNode* @TreeCCNodeFindByType(%struct._tagTreeCCContext* %context, i8* %31) #2
  %33 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %32, i64 0, i32 5
  %34 = load i32, i32* %33, align 4, !tbaa !34
  %35 = lshr i32 %34, 3
  %.lobit = and i32 %35, 1
  %36 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %.09.lcssa, i64 0, i32 0
  %37 = load i8*, i8** %36, align 8, !tbaa !41
  %38 = icmp eq i8* %37, null
  br i1 %38, label %42, label %39

; <label>:39                                      ; preds = %.critedge1
  %40 = getelementptr inbounds %struct.TreeCCNonVirtual, %struct.TreeCCNonVirtual* %nonVirt, i64 0, i32 3
  %41 = load void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, i8*, i32, i32)*, void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, i8*, i32, i32)** %40, align 8, !tbaa !84
  tail call void %41(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %stream, i8* %37, i32 %triggerNum, i32 %.lobit) #2
  br label %57

; <label>:42                                      ; preds = %.critedge1
  %43 = getelementptr inbounds [64 x i8], [64 x i8]* %paramName, i64 0, i64 0
  call void @llvm.lifetime.start(i64 64, i8* %43) #2
  %44 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %oper, i64 0, i32 4
  %param.0.5 = load %struct._tagTreeCCParam*, %struct._tagTreeCCParam** %44, align 8
  %45 = icmp eq %struct._tagTreeCCParam* %param.0.5, null
  %46 = icmp eq %struct._tagTreeCCParam* %param.0.5, %.09.lcssa
  %or.cond.6 = or i1 %45, %46
  br i1 %or.cond.6, label %.critedge, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %42
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %.lr.ph
  %param.08 = phi %struct._tagTreeCCParam* [ %param.0, %.lr.ph ], [ %param.0.5, %.lr.ph.preheader ]
  %paramNum.07 = phi i32 [ %.paramNum.0, %.lr.ph ], [ 0, %.lr.ph.preheader ]
  %47 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.08, i64 0, i32 0
  %48 = load i8*, i8** %47, align 8, !tbaa !41
  %49 = icmp eq i8* %48, null
  %50 = zext i1 %49 to i32
  %.paramNum.0 = add nsw i32 %50, %paramNum.07
  %51 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.08, i64 0, i32 4
  %param.0 = load %struct._tagTreeCCParam*, %struct._tagTreeCCParam** %51, align 8
  %52 = icmp eq %struct._tagTreeCCParam* %param.0, null
  %53 = icmp eq %struct._tagTreeCCParam* %param.0, %.09.lcssa
  %or.cond = or i1 %52, %53
  br i1 %or.cond, label %.critedge.loopexit, label %.lr.ph

.critedge.loopexit:                               ; preds = %.lr.ph
  %.paramNum.0.lcssa = phi i32 [ %.paramNum.0, %.lr.ph ]
  br label %.critedge

.critedge:                                        ; preds = %.critedge.loopexit, %42
  %paramNum.0.lcssa = phi i32 [ 0, %42 ], [ %.paramNum.0.lcssa, %.critedge.loopexit ]
  %54 = call i32 (i8*, i8*, ...) @sprintf(i8* %43, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.480, i64 0, i64 0), i32 %paramNum.0.lcssa) #2
  %55 = getelementptr inbounds %struct.TreeCCNonVirtual, %struct.TreeCCNonVirtual* %nonVirt, i64 0, i32 3
  %56 = load void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, i8*, i32, i32)*, void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, i8*, i32, i32)** %55, align 8, !tbaa !84
  call void %56(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %stream, i8* %43, i32 %triggerNum, i32 %.lobit) #2
  call void @llvm.lifetime.end(i64 64, i8* %43) #2
  br label %57

; <label>:57                                      ; preds = %.critedge, %39
  call fastcc void @GenerateMultiScan(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %stream, %struct.TreeCCNonVirtual* %nonVirt, %struct._tagTreeCCOperation* %oper, %struct._tagTreeCCOperationCase** %sortedCases, i32 %base, i32 %multiplier, %struct._tagTreeCCParam* %.09.lcssa, i32 %triggerNum, %struct._tagTreeCCNode* %32)
  %58 = getelementptr inbounds %struct.TreeCCNonVirtual, %struct.TreeCCNonVirtual* %nonVirt, i64 0, i32 11
  %59 = load void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, i32)*, void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, i32)** %58, align 8, !tbaa !85
  call void %59(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %stream, i32 %triggerNum) #2
  br label %60

; <label>:60                                      ; preds = %14, %21, %57
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @GenerateMultiScan(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %stream, %struct.TreeCCNonVirtual* nocapture readonly %nonVirt, %struct._tagTreeCCOperation* nocapture readonly %oper, %struct._tagTreeCCOperationCase** nocapture readonly %sortedCases, i32 %base, i32 %multiplier, %struct._tagTreeCCParam* nocapture readonly %nextParam, i32 %triggerNum, %struct._tagTreeCCNode* %node) #0 {
  %1 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 5
  %2 = load i32, i32* %1, align 4, !tbaa !34
  %3 = and i32 %2, 2
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %22

; <label>:5                                       ; preds = %0
  %6 = getelementptr inbounds %struct.TreeCCNonVirtual, %struct.TreeCCNonVirtual* %nonVirt, i64 0, i32 4
  %7 = load void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, %struct._tagTreeCCNode*, i32)*, void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, %struct._tagTreeCCNode*, i32)** %6, align 8, !tbaa !93
  tail call void %7(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %stream, %struct._tagTreeCCNode* %node, i32 %triggerNum) #2
  %8 = getelementptr inbounds %struct.TreeCCNonVirtual, %struct.TreeCCNonVirtual* %nonVirt, i64 0, i32 5
  %9 = load void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, i32)*, void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, i32)** %8, align 8, !tbaa !91
  tail call void %9(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %stream, i32 %triggerNum) #2
  %10 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 7
  %11 = load i32, i32* %10, align 4, !tbaa !94
  %12 = mul nsw i32 %11, %multiplier
  %13 = add nsw i32 %12, %base
  %14 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %nextParam, i64 0, i32 3
  %15 = load i32, i32* %14, align 4, !tbaa !95
  %16 = mul nsw i32 %15, %multiplier
  %17 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %nextParam, i64 0, i32 4
  %18 = load %struct._tagTreeCCParam*, %struct._tagTreeCCParam** %17, align 8, !tbaa !82
  %19 = add nsw i32 %triggerNum, 1
  tail call fastcc void @GenerateMultiSwitch(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %stream, %struct.TreeCCNonVirtual* %nonVirt, %struct._tagTreeCCOperation* %oper, %struct._tagTreeCCOperationCase** %sortedCases, i32 %13, i32 %16, %struct._tagTreeCCParam* %18, i32 %19)
  %20 = getelementptr inbounds %struct.TreeCCNonVirtual, %struct.TreeCCNonVirtual* %nonVirt, i64 0, i32 10
  %21 = load void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, i32)*, void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, i32)** %20, align 8, !tbaa !92
  tail call void %21(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %stream, i32 %triggerNum) #2
  br label %22

; <label>:22                                      ; preds = %5, %0
  %23 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 1
  %.0.1 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %23, align 8
  %24 = icmp eq %struct._tagTreeCCNode* %.0.1, null
  br i1 %24, label %._crit_edge, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %22
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %.lr.ph
  %.02 = phi %struct._tagTreeCCNode* [ %.0, %.lr.ph ], [ %.0.1, %.lr.ph.preheader ]
  tail call fastcc void @GenerateMultiScan(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %stream, %struct.TreeCCNonVirtual* %nonVirt, %struct._tagTreeCCOperation* %oper, %struct._tagTreeCCOperationCase** %sortedCases, i32 %base, i32 %multiplier, %struct._tagTreeCCParam* %nextParam, i32 %triggerNum, %struct._tagTreeCCNode* %.02)
  %25 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %.02, i64 0, i32 3
  %.0 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %25, align 8
  %26 = icmp eq %struct._tagTreeCCNode* %.0, null
  br i1 %26, label %._crit_edge.loopexit, label %.lr.ph

._crit_edge.loopexit:                             ; preds = %.lr.ph
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %22
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @GenerateSelectors(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %stream, %struct.TreeCCNonVirtual* nocapture readonly %nonVirt, %struct._tagTreeCCNode* %node, i32 %markBit, i32 %triggerNum) #0 {
  %1 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 5
  %2 = load i32, i32* %1, align 4, !tbaa !34
  %3 = and i32 %2, %markBit
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %.loopexit

; <label>:5                                       ; preds = %0
  %6 = or i32 %2, %markBit
  store i32 %6, i32* %1, align 4, !tbaa !34
  %7 = getelementptr inbounds %struct.TreeCCNonVirtual, %struct.TreeCCNonVirtual* %nonVirt, i64 0, i32 4
  %8 = load void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, %struct._tagTreeCCNode*, i32)*, void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, %struct._tagTreeCCNode*, i32)** %7, align 8, !tbaa !93
  tail call void %8(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %stream, %struct._tagTreeCCNode* %node, i32 %triggerNum) #2
  %9 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 1
  %.01.2 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %9, align 8
  %10 = icmp eq %struct._tagTreeCCNode* %.01.2, null
  br i1 %10, label %.loopexit, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %5
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %.lr.ph
  %.013 = phi %struct._tagTreeCCNode* [ %.01, %.lr.ph ], [ %.01.2, %.lr.ph.preheader ]
  %11 = tail call fastcc i32 @GenerateSelectors(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %stream, %struct.TreeCCNonVirtual* %nonVirt, %struct._tagTreeCCNode* %.013, i32 %markBit, i32 %triggerNum)
  %12 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %.013, i64 0, i32 3
  %.01 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %12, align 8
  %13 = icmp eq %struct._tagTreeCCNode* %.01, null
  br i1 %13, label %.loopexit.loopexit, label %.lr.ph

.loopexit.loopexit:                               ; preds = %.lr.ph
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %5, %0
  %.0 = phi i32 [ 0, %0 ], [ 1, %5 ], [ 1, %.loopexit.loopexit ]
  ret i32 %.0
}

; Function Attrs: nounwind uwtable
define internal fastcc void @GenerateSplitMultiScanFunc(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %stream, %struct.TreeCCNonVirtual* nocapture readonly %nonVirt, %struct._tagTreeCCOperation* %oper, %struct._tagTreeCCOperationCase** nocapture readonly %sortedCases, i32 %base, i32 %multiplier, %struct._tagTreeCCParam* nocapture readonly %nextParam, i32 %triggerNum, %struct._tagTreeCCNode* nocapture readonly %node) #0 {
  %1 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 5
  %2 = load i32, i32* %1, align 4, !tbaa !34
  %3 = and i32 %2, 2
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %16

; <label>:5                                       ; preds = %0
  %6 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 7
  %7 = load i32, i32* %6, align 4, !tbaa !94
  %8 = mul nsw i32 %7, %multiplier
  %9 = add nsw i32 %8, %base
  %10 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %nextParam, i64 0, i32 3
  %11 = load i32, i32* %10, align 4, !tbaa !95
  %12 = mul nsw i32 %11, %multiplier
  %13 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %nextParam, i64 0, i32 4
  %14 = load %struct._tagTreeCCParam*, %struct._tagTreeCCParam** %13, align 8, !tbaa !82
  %15 = add nsw i32 %triggerNum, 1
  tail call fastcc void @GenerateSplitMultiSwitch(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %stream, %struct.TreeCCNonVirtual* %nonVirt, %struct._tagTreeCCOperation* %oper, %struct._tagTreeCCOperationCase** %sortedCases, i32 %9, i32 %12, %struct._tagTreeCCParam* %14, i32 %15)
  br label %16

; <label>:16                                      ; preds = %5, %0
  %17 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 1
  %.0.1 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %17, align 8
  %18 = icmp eq %struct._tagTreeCCNode* %.0.1, null
  br i1 %18, label %._crit_edge, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %16
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %.lr.ph
  %.02 = phi %struct._tagTreeCCNode* [ %.0, %.lr.ph ], [ %.0.1, %.lr.ph.preheader ]
  tail call fastcc void @GenerateSplitMultiScanFunc(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %stream, %struct.TreeCCNonVirtual* %nonVirt, %struct._tagTreeCCOperation* %oper, %struct._tagTreeCCOperationCase** %sortedCases, i32 %base, i32 %multiplier, %struct._tagTreeCCParam* %nextParam, i32 %triggerNum, %struct._tagTreeCCNode* %.02)
  %19 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %.02, i64 0, i32 3
  %.0 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %19, align 8
  %20 = icmp eq %struct._tagTreeCCNode* %.0, null
  br i1 %20, label %._crit_edge.loopexit, label %.lr.ph

._crit_edge.loopexit:                             ; preds = %.lr.ph
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %16
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @GenerateSplitMultiScan(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %stream, %struct.TreeCCNonVirtual* nocapture readonly %nonVirt, %struct._tagTreeCCOperation* nocapture readonly %oper, %struct._tagTreeCCOperationCase** nocapture readonly %sortedCases, i32 %base, i32 %multiplier, i32 %triggerNum, %struct._tagTreeCCNode* %node) #0 {
  %1 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 5
  %2 = load i32, i32* %1, align 4, !tbaa !34
  %3 = and i32 %2, 2
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %46

; <label>:5                                       ; preds = %0
  %6 = getelementptr inbounds %struct.TreeCCNonVirtual, %struct.TreeCCNonVirtual* %nonVirt, i64 0, i32 4
  %7 = load void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, %struct._tagTreeCCNode*, i32)*, void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, %struct._tagTreeCCNode*, i32)** %6, align 8, !tbaa !93
  tail call void %7(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %stream, %struct._tagTreeCCNode* %node, i32 0) #2
  %8 = getelementptr inbounds %struct.TreeCCNonVirtual, %struct.TreeCCNonVirtual* %nonVirt, i64 0, i32 5
  %9 = load void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, i32)*, void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, i32)** %8, align 8, !tbaa !91
  tail call void %9(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %stream, i32 0) #2
  %10 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 7
  %11 = load i32, i32* %10, align 4, !tbaa !94
  %12 = mul nsw i32 %11, %multiplier
  %13 = add nsw i32 %12, %base
  %14 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %oper, i64 0, i32 6
  %15 = load i32, i32* %14, align 4, !tbaa !76
  %16 = add nsw i32 %15, -1
  %17 = icmp eq i32 %16, %triggerNum
  br i1 %17, label %18, label %37

; <label>:18                                      ; preds = %5
  %19 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %oper, i64 0, i32 5
  %20 = load i32, i32* %19, align 4, !tbaa !44
  %21 = and i32 %20, 2
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %29, label %23

; <label>:23                                      ; preds = %18
  %24 = getelementptr inbounds %struct.TreeCCNonVirtual, %struct.TreeCCNonVirtual* %nonVirt, i64 0, i32 8
  %25 = load void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, %struct._tagTreeCCOperationCase*, i32)*, void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, %struct._tagTreeCCOperationCase*, i32)** %24, align 8, !tbaa !86
  %26 = sext i32 %13 to i64
  %27 = getelementptr inbounds %struct._tagTreeCCOperationCase*, %struct._tagTreeCCOperationCase** %sortedCases, i64 %26
  %28 = load %struct._tagTreeCCOperationCase*, %struct._tagTreeCCOperationCase** %27, align 8, !tbaa !7
  tail call void %25(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %stream, %struct._tagTreeCCOperationCase* %28, i32 0) #2
  br label %43

; <label>:29                                      ; preds = %18
  %30 = getelementptr inbounds %struct.TreeCCNonVirtual, %struct.TreeCCNonVirtual* %nonVirt, i64 0, i32 7
  %31 = load void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, %struct._tagTreeCCOperationCase*, i32, i32)*, void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, %struct._tagTreeCCOperationCase*, i32, i32)** %30, align 8, !tbaa !87
  %32 = sext i32 %13 to i64
  %33 = getelementptr inbounds %struct._tagTreeCCOperationCase*, %struct._tagTreeCCOperationCase** %sortedCases, i64 %32
  %34 = load %struct._tagTreeCCOperationCase*, %struct._tagTreeCCOperationCase** %33, align 8, !tbaa !7
  %35 = getelementptr inbounds %struct._tagTreeCCOperationCase, %struct._tagTreeCCOperationCase* %34, i64 0, i32 3
  %36 = load i32, i32* %35, align 4, !tbaa !75
  tail call void %31(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %stream, %struct._tagTreeCCOperationCase* %34, i32 %36, i32 0) #2
  br label %43

; <label>:37                                      ; preds = %5
  %38 = getelementptr inbounds %struct.TreeCCNonVirtual, %struct.TreeCCNonVirtual* %nonVirt, i64 0, i32 9
  %39 = load void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, %struct._tagTreeCCOperationCase*, i32, i32)*, void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, %struct._tagTreeCCOperationCase*, i32, i32)** %38, align 8, !tbaa !96
  %40 = sext i32 %13 to i64
  %41 = getelementptr inbounds %struct._tagTreeCCOperationCase*, %struct._tagTreeCCOperationCase** %sortedCases, i64 %40
  %42 = load %struct._tagTreeCCOperationCase*, %struct._tagTreeCCOperationCase** %41, align 8, !tbaa !7
  tail call void %39(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %stream, %struct._tagTreeCCOperationCase* %42, i32 %13, i32 0) #2
  br label %43

; <label>:43                                      ; preds = %23, %29, %37
  %44 = getelementptr inbounds %struct.TreeCCNonVirtual, %struct.TreeCCNonVirtual* %nonVirt, i64 0, i32 10
  %45 = load void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, i32)*, void (%struct._tagTreeCCContext*, %struct._tagTreeCCStream*, i32)** %44, align 8, !tbaa !92
  tail call void %45(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %stream, i32 0) #2
  br label %46

; <label>:46                                      ; preds = %43, %0
  %47 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 1
  %.0.1 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %47, align 8
  %48 = icmp eq %struct._tagTreeCCNode* %.0.1, null
  br i1 %48, label %._crit_edge, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %46
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %.lr.ph
  %.02 = phi %struct._tagTreeCCNode* [ %.0, %.lr.ph ], [ %.0.1, %.lr.ph.preheader ]
  tail call fastcc void @GenerateSplitMultiScan(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %stream, %struct.TreeCCNonVirtual* %nonVirt, %struct._tagTreeCCOperation* %oper, %struct._tagTreeCCOperationCase** %sortedCases, i32 %base, i32 %multiplier, i32 %triggerNum, %struct._tagTreeCCNode* %.02)
  %49 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %.02, i64 0, i32 3
  %.0 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %49, align 8
  %50 = icmp eq %struct._tagTreeCCNode* %.0, null
  br i1 %50, label %._crit_edge.loopexit, label %.lr.ph

._crit_edge.loopexit:                             ; preds = %.lr.ph
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %46
  ret void
}

; Function Attrs: nounwind uwtable
define void @TreeCCGeneratePHP(%struct._tagTreeCCContext* %context) #0 {
  %1 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 3
  %stream.0.2.i = load %struct._tagTreeCCStream*, %struct._tagTreeCCStream** %1, align 8
  %2 = icmp eq %struct._tagTreeCCStream* %stream.0.2.i, null
  br i1 %2, label %WritePHPHeaders.exit, label %.lr.ph.i.preheader

.lr.ph.i.preheader:                               ; preds = %0
  br label %.lr.ph.i

.lr.ph.i:                                         ; preds = %.lr.ph.i.preheader, %14
  %stream.03.i = phi %struct._tagTreeCCStream* [ %stream.0.i, %14 ], [ %stream.0.2.i, %.lr.ph.i.preheader ]
  %3 = getelementptr inbounds %struct._tagTreeCCStream, %struct._tagTreeCCStream* %stream.03.i, i64 0, i32 7
  %4 = load i8, i8* %3, align 4
  %.mask.i = and i8 %4, 4
  %5 = icmp eq i8 %.mask.i, 0
  br i1 %5, label %6, label %9

; <label>:6                                       ; preds = %.lr.ph.i
  %7 = getelementptr inbounds %struct._tagTreeCCStream, %struct._tagTreeCCStream* %stream.03.i, i64 0, i32 2
  %8 = load i8*, i8** %7, align 8, !tbaa !69
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.03.i, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.35.484, i64 0, i64 0), i8* %8) #2
  tail call void @TreeCCStreamSourceTopCS(%struct._tagTreeCCStream* %stream.03.i) #2
  %.pre.i = load i8, i8* %3, align 4
  br label %9

; <label>:9                                       ; preds = %6, %.lr.ph.i
  %10 = phi i8 [ %4, %.lr.ph.i ], [ %.pre.i, %6 ]
  %.mask1.i = and i8 %10, 8
  %11 = icmp eq i8 %.mask1.i, 0
  br i1 %11, label %14, label %12

; <label>:12                                      ; preds = %9
  %13 = and i8 %10, -17
  store i8 %13, i8* %3, align 4
  br label %14

; <label>:14                                      ; preds = %12, %9
  %15 = getelementptr inbounds %struct._tagTreeCCStream, %struct._tagTreeCCStream* %stream.03.i, i64 0, i32 10
  %stream.0.i = load %struct._tagTreeCCStream*, %struct._tagTreeCCStream** %15, align 8
  %16 = icmp eq %struct._tagTreeCCStream* %stream.0.i, null
  br i1 %16, label %WritePHPHeaders.exit.loopexit, label %.lr.ph.i

WritePHPHeaders.exit.loopexit:                    ; preds = %14
  br label %WritePHPHeaders.exit

WritePHPHeaders.exit:                             ; preds = %WritePHPHeaders.exit.loopexit, %0
  tail call void @TreeCCNodeVisitAll(%struct._tagTreeCCContext* %context, void (%struct._tagTreeCCContext*, %struct._tagTreeCCNode*)* nonnull @DeclareTypeDefs.485) #2
  %17 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 7
  %18 = load %struct._tagTreeCCStream*, %struct._tagTreeCCStream** %17, align 8, !tbaa !32
  %19 = icmp eq %struct._tagTreeCCStream* %18, null
  br i1 %19, label %21, label %20

; <label>:20                                      ; preds = %WritePHPHeaders.exit
  tail call fastcc void @ImplementStateType.486(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %18)
  br label %24

; <label>:21                                      ; preds = %WritePHPHeaders.exit
  %22 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 5
  %23 = load %struct._tagTreeCCStream*, %struct._tagTreeCCStream** %22, align 8, !tbaa !33
  tail call fastcc void @ImplementStateType.486(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %23)
  br label %24

; <label>:24                                      ; preds = %21, %20
  tail call void @TreeCCNodeVisitAll(%struct._tagTreeCCContext* %context, void (%struct._tagTreeCCContext*, %struct._tagTreeCCNode*)* nonnull @BuildTypeDecls.487) #2
  tail call void @TreeCCGenerateNonVirtuals(%struct._tagTreeCCContext* %context, %struct.TreeCCNonVirtual* nonnull @TreeCCNonVirtualFuncsPHP) #2
  %stream.0.4.i = load %struct._tagTreeCCStream*, %struct._tagTreeCCStream** %1, align 8
  %25 = icmp eq %struct._tagTreeCCStream* %stream.0.4.i, null
  br i1 %25, label %WritePHPFooters.exit, label %.lr.ph.i.1.preheader

.lr.ph.i.1.preheader:                             ; preds = %24
  br label %.lr.ph.i.1

.lr.ph.i.1:                                       ; preds = %.lr.ph.i.1.preheader, %34
  %stream.05.i = phi %struct._tagTreeCCStream* [ %stream.0.i.3, %34 ], [ %stream.0.4.i, %.lr.ph.i.1.preheader ]
  %26 = getelementptr inbounds %struct._tagTreeCCStream, %struct._tagTreeCCStream* %stream.05.i, i64 0, i32 7
  %27 = load i8, i8* %26, align 4
  %28 = and i8 %27, 24
  %29 = icmp eq i8 %28, 8
  br i1 %29, label %30, label %31

; <label>:30                                      ; preds = %.lr.ph.i.1
  tail call void @TreeCCStreamClear(%struct._tagTreeCCStream* %stream.05.i) #2
  br label %34

; <label>:31                                      ; preds = %.lr.ph.i.1
  %.mask1.i.2 = and i8 %27, 4
  %32 = icmp eq i8 %.mask1.i.2, 0
  br i1 %32, label %33, label %34

; <label>:33                                      ; preds = %31
  tail call void @TreeCCStreamSourceBottom(%struct._tagTreeCCStream* %stream.05.i) #2
  br label %34

; <label>:34                                      ; preds = %33, %31, %30
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.05.i, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.87.488, i64 0, i64 0)) #2
  %35 = getelementptr inbounds %struct._tagTreeCCStream, %struct._tagTreeCCStream* %stream.05.i, i64 0, i32 10
  %stream.0.i.3 = load %struct._tagTreeCCStream*, %struct._tagTreeCCStream** %35, align 8
  %36 = icmp eq %struct._tagTreeCCStream* %stream.0.i.3, null
  br i1 %36, label %WritePHPFooters.exit.loopexit, label %.lr.ph.i.1

WritePHPFooters.exit.loopexit:                    ; preds = %34
  br label %WritePHPFooters.exit

WritePHPFooters.exit:                             ; preds = %WritePHPFooters.exit.loopexit, %24
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @DeclareTypeDefs.485(%struct._tagTreeCCContext* nocapture readnone %context, %struct._tagTreeCCNode* nocapture readonly %node) #0 {
  %1 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 5
  %2 = load i32, i32* %1, align 4, !tbaa !34
  %3 = and i32 %2, 8
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %24, label %5

; <label>:5                                       ; preds = %0
  %6 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 14
  %7 = load %struct._tagTreeCCStream*, %struct._tagTreeCCStream** %6, align 8, !tbaa !48
  %8 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 1
  %child.0.1 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %8, align 8
  %9 = icmp eq %struct._tagTreeCCNode* %child.0.1, null
  br i1 %9, label %._crit_edge, label %.lr.ph

.lr.ph:                                           ; preds = %5
  %10 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 4
  br label %11

; <label>:11                                      ; preds = %.lr.ph, %21
  %child.03 = phi %struct._tagTreeCCNode* [ %child.0.1, %.lr.ph ], [ %child.0, %21 ]
  %i.02 = phi i32 [ 1, %.lr.ph ], [ %i.1, %21 ]
  %12 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %child.03, i64 0, i32 5
  %13 = load i32, i32* %12, align 4, !tbaa !34
  %14 = and i32 %13, 16
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %21, label %16

; <label>:16                                      ; preds = %11
  %17 = load i8*, i8** %10, align 8, !tbaa !36
  %18 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %child.03, i64 0, i32 4
  %19 = load i8*, i8** %18, align 8, !tbaa !36
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %7, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.36.579, i64 0, i64 0), i8* %17, i8* %19, i32 %i.02) #2
  %20 = add nsw i32 %i.02, 1
  br label %21

; <label>:21                                      ; preds = %11, %16
  %i.1 = phi i32 [ %20, %16 ], [ %i.02, %11 ]
  %22 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %child.03, i64 0, i32 3
  %child.0 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %22, align 8
  %23 = icmp eq %struct._tagTreeCCNode* %child.0, null
  br i1 %23, label %._crit_edge.loopexit, label %11

._crit_edge.loopexit:                             ; preds = %21
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %5
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %7, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.37.580, i64 0, i64 0)) #2
  br label %24

; <label>:24                                      ; preds = %0, %._crit_edge
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @ImplementStateType.486(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %stream) #0 {
  %1 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 8
  %2 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 10
  %3 = load i8*, i8** %2, align 8, !tbaa !31
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.38.566, i64 0, i64 0), i8* %3) #2
  %4 = load i16, i16* %1, align 8
  %.mask1 = and i16 %4, 8
  %5 = icmp eq i16 %.mask1, 0
  br i1 %5, label %6, label %8

; <label>:6                                       ; preds = %0
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.39.567, i64 0, i64 0)) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.8.522, i64 0, i64 0)) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.40.568, i64 0, i64 0)) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.41.569, i64 0, i64 0)) #2
  %7 = load i8*, i8** %2, align 8, !tbaa !31
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.42.570, i64 0, i64 0), i8* %7) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.43.571, i64 0, i64 0)) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.44.548, i64 0, i64 0)) #2
  %.pre = load i16, i16* %1, align 8
  br label %8

; <label>:8                                       ; preds = %0, %6
  %9 = phi i16 [ %4, %0 ], [ %.pre, %6 ]
  %.mask2 = and i16 %9, 8
  %10 = icmp eq i16 %.mask2, 0
  br i1 %10, label %12, label %11

; <label>:11                                      ; preds = %8
  tail call void @TreeCCNodeVisitAll(%struct._tagTreeCCContext* %context, void (%struct._tagTreeCCContext*, %struct._tagTreeCCNode*)* nonnull @ImplementCreateFuncs.572) #2
  %.pre6 = load i16, i16* %1, align 8
  br label %12

; <label>:12                                      ; preds = %8, %11
  %13 = phi i16 [ %9, %8 ], [ %.pre6, %11 ]
  %.mask3 = and i16 %13, 2
  %14 = icmp eq i16 %.mask3, 0
  br i1 %14, label %16, label %15

; <label>:15                                      ; preds = %12
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.45.573, i64 0, i64 0)) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.46.574, i64 0, i64 0)) #2
  br label %16

; <label>:16                                      ; preds = %12, %15
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.47.558, i64 0, i64 0)) #2
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @BuildTypeDecls.487(%struct._tagTreeCCContext* %context, %struct._tagTreeCCNode* %node) #0 {
  %1 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 5
  %2 = load i32, i32* %1, align 4, !tbaa !34
  %3 = and i32 %2, 24
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %101

; <label>:5                                       ; preds = %0
  %6 = tail call i32 @TreeCCNodeHasAbstracts(%struct._tagTreeCCContext* %context, %struct._tagTreeCCNode* %node) #2
  %7 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 14
  %8 = load %struct._tagTreeCCStream*, %struct._tagTreeCCStream** %7, align 8, !tbaa !48
  %9 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 0
  %10 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %9, align 8, !tbaa !38
  %11 = icmp eq %struct._tagTreeCCNode* %10, null
  %12 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 4
  %13 = load i8*, i8** %12, align 8, !tbaa !36
  %14 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 6
  %15 = load i32, i32* %14, align 4, !tbaa !37
  br i1 %11, label %17, label %16

; <label>:16                                      ; preds = %5
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %8, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.50.524, i64 0, i64 0), i8* %13, i32 %15) #2
  br label %18

; <label>:17                                      ; preds = %5
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %8, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.51.525, i64 0, i64 0), i8* %13, i32 %15) #2
  br label %18

; <label>:18                                      ; preds = %17, %16
  %19 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %9, align 8, !tbaa !38
  %20 = icmp eq %struct._tagTreeCCNode* %19, null
  %21 = load i8*, i8** %12, align 8, !tbaa !36
  br i1 %20, label %25, label %22

; <label>:22                                      ; preds = %18
  %23 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %19, i64 0, i32 4
  %24 = load i8*, i8** %23, align 8, !tbaa !36
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %8, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.52.526, i64 0, i64 0), i8* %21, i8* %24) #2
  br label %35

; <label>:25                                      ; preds = %18
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %8, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.523, i64 0, i64 0), i8* %21) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %8, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.53.527, i64 0, i64 0)) #2
  %26 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 8
  %27 = load i16, i16* %26, align 8
  %.mask = and i16 %27, 2
  %28 = icmp eq i16 %.mask, 0
  br i1 %28, label %30, label %29

; <label>:29                                      ; preds = %25
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %8, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.54.528, i64 0, i64 0)) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %8, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.55.529, i64 0, i64 0)) #2
  br label %30

; <label>:30                                      ; preds = %25, %29
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.21.490, i64 0, i64 0)) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %8, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.56.530, i64 0, i64 0)) #2
  %31 = load i16, i16* %26, align 8
  %.mask1 = and i16 %31, 2
  %32 = icmp eq i16 %.mask1, 0
  br i1 %32, label %34, label %33

; <label>:33                                      ; preds = %30
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %8, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.57.531, i64 0, i64 0)) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %8, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.58.532, i64 0, i64 0)) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %8, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.59.533, i64 0, i64 0)) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.60.534, i64 0, i64 0)) #2
  br label %34

; <label>:34                                      ; preds = %30, %33
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.21.490, i64 0, i64 0)) #2
  br label %35

; <label>:35                                      ; preds = %34, %22
  %36 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 10
  %37 = load %struct._tagTreeCCField*, %struct._tagTreeCCField** %36, align 8, !tbaa !67
  %38 = icmp eq %struct._tagTreeCCField* %37, null
  br i1 %38, label %43, label %.lr.ph.i.preheader

.lr.ph.i.preheader:                               ; preds = %35
  br label %.lr.ph.i

.lr.ph.i:                                         ; preds = %.lr.ph.i.preheader, %.lr.ph.i
  %field.02.i = phi %struct._tagTreeCCField* [ %field.0.i, %.lr.ph.i ], [ %37, %.lr.ph.i.preheader ]
  %39 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.02.i, i64 0, i32 0
  %40 = load i8*, i8** %39, align 8, !tbaa !64
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %8, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.79.535, i64 0, i64 0), i8* %40) #2
  %41 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.02.i, i64 0, i32 6
  %field.0.i = load %struct._tagTreeCCField*, %struct._tagTreeCCField** %41, align 8
  %42 = icmp eq %struct._tagTreeCCField* %field.0.i, null
  br i1 %42, label %DeclareFields.exit, label %.lr.ph.i

DeclareFields.exit:                               ; preds = %.lr.ph.i
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.21.490, i64 0, i64 0)) #2
  br label %43

; <label>:43                                      ; preds = %35, %DeclareFields.exit
  %44 = load i8*, i8** %12, align 8, !tbaa !36
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %8, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.62.536, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.61.537, i64 0, i64 0), i8* %44) #2
  %45 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 8
  %46 = load i16, i16* %45, align 8
  %.mask2 = and i16 %46, 8
  %47 = icmp eq i16 %.mask2, 0
  br i1 %47, label %49, label %48

; <label>:48                                      ; preds = %43
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %8, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.63.538, i64 0, i64 0)) #2
  br label %49

; <label>:49                                      ; preds = %43, %48
  %needComma.0 = phi i32 [ 1, %48 ], [ 0, %43 ]
  %50 = tail call fastcc i32 @CreateParams.539(%struct._tagTreeCCStream* %8, %struct._tagTreeCCNode* %node, i32 %needComma.0)
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %8, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7.513, i64 0, i64 0)) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.8.522, i64 0, i64 0)) #2
  %51 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %9, align 8, !tbaa !38
  %52 = icmp eq %struct._tagTreeCCNode* %51, null
  br i1 %52, label %62, label %53

; <label>:53                                      ; preds = %49
  %54 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %51, i64 0, i32 4
  %55 = load i8*, i8** %54, align 8, !tbaa !36
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %8, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.64.540, i64 0, i64 0), i8* %55) #2
  %56 = load i16, i16* %45, align 8
  %.mask5 = and i16 %56, 8
  %57 = icmp eq i16 %.mask5, 0
  br i1 %57, label %59, label %58

; <label>:58                                      ; preds = %53
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %8, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.63.538, i64 0, i64 0)) #2
  br label %59

; <label>:59                                      ; preds = %53, %58
  %needComma.1 = phi i32 [ 1, %58 ], [ 0, %53 ]
  %60 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %9, align 8, !tbaa !38
  %61 = tail call fastcc i32 @InheritParamsSource.541(%struct._tagTreeCCStream* %8, %struct._tagTreeCCNode* %60, i32 %needComma.1)
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %8, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.25.507, i64 0, i64 0)) #2
  br label %62

; <label>:62                                      ; preds = %49, %59
  %63 = load i8*, i8** %12, align 8, !tbaa !36
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %8, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.65.542, i64 0, i64 0), i8* %63) #2
  %64 = load i16, i16* %45, align 8
  %.mask3 = and i16 %64, 2
  %65 = icmp eq i16 %.mask3, 0
  br i1 %65, label %.preheader, label %66

; <label>:66                                      ; preds = %62
  %67 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %9, align 8, !tbaa !38
  %68 = icmp eq %struct._tagTreeCCNode* %67, null
  br i1 %68, label %69, label %.preheader

; <label>:69                                      ; preds = %66
  %.mask4 = and i16 %64, 8
  %70 = icmp eq i16 %.mask4, 0
  br i1 %70, label %72, label %71

; <label>:71                                      ; preds = %69
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %8, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.66.543, i64 0, i64 0)) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %8, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.67.544, i64 0, i64 0)) #2
  br label %.preheader

; <label>:72                                      ; preds = %69
  %73 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 10
  %74 = load i8*, i8** %73, align 8, !tbaa !31
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %8, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.68.545, i64 0, i64 0), i8* %74) #2
  %75 = load i8*, i8** %73, align 8, !tbaa !31
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %8, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.69.546, i64 0, i64 0), i8* %75) #2
  br label %.preheader

.preheader:                                       ; preds = %66, %62, %71, %72
  %field.0.6 = load %struct._tagTreeCCField*, %struct._tagTreeCCField** %36, align 8
  %76 = icmp eq %struct._tagTreeCCField* %field.0.6, null
  br i1 %76, label %._crit_edge, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %.preheader
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %91
  %field.07 = phi %struct._tagTreeCCField* [ %field.0, %91 ], [ %field.0.6, %.lr.ph.preheader ]
  %77 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.07, i64 0, i32 3
  %78 = load i32, i32* %77, align 4, !tbaa !61
  %79 = and i32 %78, 1
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %84

; <label>:81                                      ; preds = %.lr.ph
  %82 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.07, i64 0, i32 0
  %83 = load i8*, i8** %82, align 8, !tbaa !64
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %8, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.70.547, i64 0, i64 0), i8* %83, i8* %83) #2
  br label %91

; <label>:84                                      ; preds = %.lr.ph
  %85 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.07, i64 0, i32 2
  %86 = load i8*, i8** %85, align 8, !tbaa !65
  %87 = icmp eq i8* %86, null
  br i1 %87, label %91, label %88

; <label>:88                                      ; preds = %84
  %89 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.07, i64 0, i32 0
  %90 = load i8*, i8** %89, align 8, !tbaa !64
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %8, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.70.547, i64 0, i64 0), i8* %90, i8* %86) #2
  br label %91

; <label>:91                                      ; preds = %84, %88, %81
  %92 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.07, i64 0, i32 6
  %field.0 = load %struct._tagTreeCCField*, %struct._tagTreeCCField** %92, align 8
  %93 = icmp eq %struct._tagTreeCCField* %field.0, null
  br i1 %93, label %._crit_edge.loopexit, label %.lr.ph

._crit_edge.loopexit:                             ; preds = %91
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %.preheader
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %8, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.44.548, i64 0, i64 0)) #2
  tail call fastcc void @ImplementVirtuals.549(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %8, %struct._tagTreeCCNode* %node, %struct._tagTreeCCNode* %node)
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %8, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.71.550, i64 0, i64 0)) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.8.522, i64 0, i64 0)) #2
  %94 = load i8*, i8** %12, align 8, !tbaa !36
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %8, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.72.551, i64 0, i64 0), i8* %94) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %8, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.73.552, i64 0, i64 0)) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %8, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.74.553, i64 0, i64 0)) #2
  %95 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %9, align 8, !tbaa !38
  %96 = icmp eq %struct._tagTreeCCNode* %95, null
  br i1 %96, label %98, label %97

; <label>:97                                      ; preds = %._crit_edge
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %8, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.75.554, i64 0, i64 0)) #2
  br label %99

; <label>:98                                      ; preds = %._crit_edge
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %8, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.76.555, i64 0, i64 0)) #2
  br label %99

; <label>:99                                      ; preds = %98, %97
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %8, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.44.548, i64 0, i64 0)) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %8, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.77.556, i64 0, i64 0)) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.8.522, i64 0, i64 0)) #2
  %100 = load i8*, i8** %12, align 8, !tbaa !36
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %8, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.78.557, i64 0, i64 0), i8* %100) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.34.494, i64 0, i64 0)) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %8, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.47.558, i64 0, i64 0)) #2
  br label %101

; <label>:101                                     ; preds = %0, %99
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @PHP_GenStart(%struct._tagTreeCCContext* nocapture readnone %context, %struct._tagTreeCCStream* %stream, %struct._tagTreeCCOperation* nocapture readonly %oper) #0 {
  %1 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %oper, i64 0, i32 1
  %2 = load i8*, i8** %1, align 8, !tbaa !60
  %3 = icmp eq i8* %2, null
  br i1 %3, label %5, label %4

; <label>:4                                       ; preds = %0
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.523, i64 0, i64 0), i8* %2) #2
  br label %8

; <label>:5                                       ; preds = %0
  %6 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %oper, i64 0, i32 0
  %7 = load i8*, i8** %6, align 8, !tbaa !46
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.523, i64 0, i64 0), i8* %7) #2
  br label %8

; <label>:8                                       ; preds = %5, %4
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @PHP_GenEntry(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %stream, %struct._tagTreeCCOperation* nocapture readonly %oper) #0 {
  tail call fastcc void @PHPGenEntry(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %stream, %struct._tagTreeCCOperation* %oper, i32 -1)
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @PHP_GenSplitEntry(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %stream, %struct._tagTreeCCOperation* nocapture readonly %oper, i32 %number) #0 {
  tail call fastcc void @PHPGenEntry(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %stream, %struct._tagTreeCCOperation* %oper, i32 %number)
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @PHP_GenSwitchHead(%struct._tagTreeCCContext* nocapture readnone %context, %struct._tagTreeCCStream* %stream, i8* %paramName, i32 %level, i32 %isEnum) #0 {
  %1 = shl nsw i32 %level, 1
  %2 = add nsw i32 %1, 2
  %3 = icmp sgt i32 %2, 3
  br i1 %3, label %.lr.ph.i.preheader, label %7

.lr.ph.i.preheader:                               ; preds = %0
  br label %.lr.ph.i

.lr.ph.i:                                         ; preds = %.lr.ph.i.preheader, %.lr.ph.i
  %.01.i = phi i32 [ %4, %.lr.ph.i ], [ %2, %.lr.ph.i.preheader ]
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.12.495, i64 0, i64 0)) #2
  %4 = add nsw i32 %.01.i, -4
  %5 = icmp sgt i32 %4, 3
  br i1 %5, label %.lr.ph.i, label %._crit_edge.i

._crit_edge.i:                                    ; preds = %.lr.ph.i
  %6 = and i32 %2, 2
  br label %7

; <label>:7                                       ; preds = %._crit_edge.i, %0
  %.0.lcssa.i = phi i32 [ %6, %._crit_edge.i ], [ %2, %0 ]
  switch i32 %.0.lcssa.i, label %Indent.exit [
    i32 1, label %8
    i32 2, label %9
    i32 3, label %10
  ]

; <label>:8                                       ; preds = %7
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.13.496, i64 0, i64 0)) #2
  br label %Indent.exit

; <label>:9                                       ; preds = %7
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.14.497, i64 0, i64 0)) #2
  br label %Indent.exit

; <label>:10                                      ; preds = %7
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.15.498, i64 0, i64 0)) #2
  br label %Indent.exit

Indent.exit:                                      ; preds = %7, %8, %9, %10
  %11 = icmp eq i32 %isEnum, 0
  br i1 %11, label %13, label %12

; <label>:12                                      ; preds = %Indent.exit
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.9.518, i64 0, i64 0), i8* %paramName) #2
  br label %14

; <label>:13                                      ; preds = %Indent.exit
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.10.519, i64 0, i64 0), i8* %paramName) #2
  br label %14

; <label>:14                                      ; preds = %13, %12
  br i1 %3, label %.lr.ph.i.2.preheader, label %18

.lr.ph.i.2.preheader:                             ; preds = %14
  br label %.lr.ph.i.2

.lr.ph.i.2:                                       ; preds = %.lr.ph.i.2.preheader, %.lr.ph.i.2
  %.01.i.1 = phi i32 [ %15, %.lr.ph.i.2 ], [ %2, %.lr.ph.i.2.preheader ]
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.12.495, i64 0, i64 0)) #2
  %15 = add nsw i32 %.01.i.1, -4
  %16 = icmp sgt i32 %15, 3
  br i1 %16, label %.lr.ph.i.2, label %._crit_edge.i.3

._crit_edge.i.3:                                  ; preds = %.lr.ph.i.2
  %17 = and i32 %2, 2
  br label %18

; <label>:18                                      ; preds = %._crit_edge.i.3, %14
  %.0.lcssa.i.4 = phi i32 [ %17, %._crit_edge.i.3 ], [ %2, %14 ]
  switch i32 %.0.lcssa.i.4, label %Indent.exit5 [
    i32 1, label %19
    i32 2, label %20
    i32 3, label %21
  ]

; <label>:19                                      ; preds = %18
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.13.496, i64 0, i64 0)) #2
  br label %Indent.exit5

; <label>:20                                      ; preds = %18
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.14.497, i64 0, i64 0)) #2
  br label %Indent.exit5

; <label>:21                                      ; preds = %18
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.15.498, i64 0, i64 0)) #2
  br label %Indent.exit5

Indent.exit5:                                     ; preds = %18, %19, %20, %21
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.11.515, i64 0, i64 0)) #2
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @PHP_GenSelector(%struct._tagTreeCCContext* nocapture readnone %context, %struct._tagTreeCCStream* %stream, %struct._tagTreeCCNode* nocapture readonly %node, i32 %level) #0 {
  %1 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 5
  %2 = load i32, i32* %1, align 4, !tbaa !34
  %3 = and i32 %2, 16
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %22, label %5

; <label>:5                                       ; preds = %0
  %6 = shl nsw i32 %level, 1
  %7 = add nsw i32 %6, 3
  %8 = icmp sgt i32 %level, 0
  br i1 %8, label %.lr.ph.i.preheader, label %12

.lr.ph.i.preheader:                               ; preds = %5
  br label %.lr.ph.i

.lr.ph.i:                                         ; preds = %.lr.ph.i.preheader, %.lr.ph.i
  %.01.i = phi i32 [ %9, %.lr.ph.i ], [ %7, %.lr.ph.i.preheader ]
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.12.495, i64 0, i64 0)) #2
  %9 = add nsw i32 %.01.i, -4
  %10 = icmp sgt i32 %9, 3
  br i1 %10, label %.lr.ph.i, label %._crit_edge.i

._crit_edge.i:                                    ; preds = %.lr.ph.i
  %11 = and i32 %7, 3
  br label %12

; <label>:12                                      ; preds = %._crit_edge.i, %5
  %.0.lcssa.i = phi i32 [ %11, %._crit_edge.i ], [ %7, %5 ]
  switch i32 %.0.lcssa.i, label %Indent.exit [
    i32 1, label %13
    i32 2, label %14
    i32 3, label %15
  ]

; <label>:13                                      ; preds = %12
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.13.496, i64 0, i64 0)) #2
  br label %Indent.exit

; <label>:14                                      ; preds = %12
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.14.497, i64 0, i64 0)) #2
  br label %Indent.exit

; <label>:15                                      ; preds = %12
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.15.498, i64 0, i64 0)) #2
  br label %Indent.exit

Indent.exit:                                      ; preds = %12, %13, %14, %15
  %16 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 0
  %17 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %16, align 8, !tbaa !38
  %18 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %17, i64 0, i32 4
  %19 = load i8*, i8** %18, align 8, !tbaa !36
  %20 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 4
  %21 = load i8*, i8** %20, align 8, !tbaa !36
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.16.516, i64 0, i64 0), i8* %19, i8* %21) #2
  br label %38

; <label>:22                                      ; preds = %0
  %23 = and i32 %2, 8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %38

; <label>:25                                      ; preds = %22
  %26 = shl nsw i32 %level, 1
  %27 = add nsw i32 %26, 3
  %28 = icmp sgt i32 %level, 0
  br i1 %28, label %.lr.ph.i.2.preheader, label %32

.lr.ph.i.2.preheader:                             ; preds = %25
  br label %.lr.ph.i.2

.lr.ph.i.2:                                       ; preds = %.lr.ph.i.2.preheader, %.lr.ph.i.2
  %.01.i.1 = phi i32 [ %29, %.lr.ph.i.2 ], [ %27, %.lr.ph.i.2.preheader ]
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.12.495, i64 0, i64 0)) #2
  %29 = add nsw i32 %.01.i.1, -4
  %30 = icmp sgt i32 %29, 3
  br i1 %30, label %.lr.ph.i.2, label %._crit_edge.i.3

._crit_edge.i.3:                                  ; preds = %.lr.ph.i.2
  %31 = and i32 %27, 3
  br label %32

; <label>:32                                      ; preds = %._crit_edge.i.3, %25
  %.0.lcssa.i.4 = phi i32 [ %31, %._crit_edge.i.3 ], [ %27, %25 ]
  switch i32 %.0.lcssa.i.4, label %Indent.exit5 [
    i32 1, label %33
    i32 2, label %34
    i32 3, label %35
  ]

; <label>:33                                      ; preds = %32
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.13.496, i64 0, i64 0)) #2
  br label %Indent.exit5

; <label>:34                                      ; preds = %32
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.14.497, i64 0, i64 0)) #2
  br label %Indent.exit5

; <label>:35                                      ; preds = %32
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.15.498, i64 0, i64 0)) #2
  br label %Indent.exit5

Indent.exit5:                                     ; preds = %32, %33, %34, %35
  %36 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 4
  %37 = load i8*, i8** %36, align 8, !tbaa !36
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.17.517, i64 0, i64 0), i8* %37) #2
  br label %38

; <label>:38                                      ; preds = %22, %Indent.exit5, %Indent.exit
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @PHP_GenEndSelectors(%struct._tagTreeCCContext* nocapture readnone %context, %struct._tagTreeCCStream* %stream, i32 %level) #0 {
  %1 = shl nsw i32 %level, 1
  %2 = add nsw i32 %1, 3
  %3 = icmp sgt i32 %level, 0
  br i1 %3, label %.lr.ph.i.preheader, label %7

.lr.ph.i.preheader:                               ; preds = %0
  br label %.lr.ph.i

.lr.ph.i:                                         ; preds = %.lr.ph.i.preheader, %.lr.ph.i
  %.01.i = phi i32 [ %4, %.lr.ph.i ], [ %2, %.lr.ph.i.preheader ]
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.12.495, i64 0, i64 0)) #2
  %4 = add nsw i32 %.01.i, -4
  %5 = icmp sgt i32 %4, 3
  br i1 %5, label %.lr.ph.i, label %._crit_edge.i

._crit_edge.i:                                    ; preds = %.lr.ph.i
  %6 = and i32 %2, 3
  br label %7

; <label>:7                                       ; preds = %._crit_edge.i, %0
  %.0.lcssa.i = phi i32 [ %6, %._crit_edge.i ], [ %2, %0 ]
  switch i32 %.0.lcssa.i, label %Indent.exit [
    i32 1, label %8
    i32 2, label %9
    i32 3, label %10
  ]

; <label>:8                                       ; preds = %7
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.13.496, i64 0, i64 0)) #2
  br label %Indent.exit

; <label>:9                                       ; preds = %7
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.14.497, i64 0, i64 0)) #2
  br label %Indent.exit

; <label>:10                                      ; preds = %7
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.15.498, i64 0, i64 0)) #2
  br label %Indent.exit

Indent.exit:                                      ; preds = %7, %8, %9, %10
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.11.515, i64 0, i64 0)) #2
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @PHP_GenCaseFunc(%struct._tagTreeCCContext* nocapture readonly %context, %struct._tagTreeCCStream* %stream, %struct._tagTreeCCOperationCase* nocapture readonly %operCase, i32 %number) #0 {
  %1 = getelementptr inbounds %struct._tagTreeCCOperationCase, %struct._tagTreeCCOperationCase* %operCase, i64 0, i32 2
  %2 = load %struct._tagTreeCCOperation*, %struct._tagTreeCCOperation** %1, align 8, !tbaa !49
  %3 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %2, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8, !tbaa !46
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.18.512, i64 0, i64 0), i8* %4, i32 %number) #2
  %5 = load %struct._tagTreeCCOperation*, %struct._tagTreeCCOperation** %1, align 8, !tbaa !49
  %6 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %5, i64 0, i32 4
  %param.0.2 = load %struct._tagTreeCCParam*, %struct._tagTreeCCParam** %6, align 8
  %7 = icmp eq %struct._tagTreeCCParam* %param.0.2, null
  br i1 %7, label %._crit_edge, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %0
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %16
  %param.06 = phi %struct._tagTreeCCParam* [ %param.0, %16 ], [ %param.0.2, %.lr.ph.preheader ]
  %needComma.05 = phi i1 [ false, %16 ], [ true, %.lr.ph.preheader ]
  %num.04 = phi i32 [ %num.1, %16 ], [ 1, %.lr.ph.preheader ]
  br i1 %needComma.05, label %9, label %8

; <label>:8                                       ; preds = %.lr.ph
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.503, i64 0, i64 0)) #2
  br label %9

; <label>:9                                       ; preds = %8, %.lr.ph
  %10 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.06, i64 0, i32 0
  %11 = load i8*, i8** %10, align 8, !tbaa !41
  %12 = icmp eq i8* %11, null
  br i1 %12, label %14, label %13

; <label>:13                                      ; preds = %9
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4.504, i64 0, i64 0), i8* %11) #2
  br label %16

; <label>:14                                      ; preds = %9
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.5.511, i64 0, i64 0), i32 %num.04) #2
  %15 = add nsw i32 %num.04, 1
  br label %16

; <label>:16                                      ; preds = %14, %13
  %num.1 = phi i32 [ %num.04, %13 ], [ %15, %14 ]
  %17 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.06, i64 0, i32 4
  %param.0 = load %struct._tagTreeCCParam*, %struct._tagTreeCCParam** %17, align 8
  %18 = icmp eq %struct._tagTreeCCParam* %param.0, null
  br i1 %18, label %._crit_edge.loopexit, label %.lr.ph

._crit_edge.loopexit:                             ; preds = %16
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %0
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7.513, i64 0, i64 0)) #2
  %19 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 13
  %20 = load i32, i32* %19, align 4, !tbaa !9
  %21 = icmp eq i32 %20, 3
  br i1 %21, label %22, label %27

; <label>:22                                      ; preds = %._crit_edge
  %23 = getelementptr inbounds %struct._tagTreeCCOperationCase, %struct._tagTreeCCOperationCase* %operCase, i64 0, i32 7
  %24 = load i64, i64* %23, align 8, !tbaa !56
  %25 = getelementptr inbounds %struct._tagTreeCCOperationCase, %struct._tagTreeCCOperationCase* %operCase, i64 0, i32 6
  %26 = load i8*, i8** %25, align 8, !tbaa !57
  tail call void @TreeCCStreamLine(%struct._tagTreeCCStream* %stream, i64 %24, i8* %26) #2
  br label %27

; <label>:27                                      ; preds = %22, %._crit_edge
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.19.514, i64 0, i64 0)) #2
  %28 = getelementptr inbounds %struct._tagTreeCCOperationCase, %struct._tagTreeCCOperationCase* %operCase, i64 0, i32 1
  %29 = load i8*, i8** %28, align 8, !tbaa !58
  %30 = icmp eq i8* %29, null
  br i1 %30, label %32, label %31

; <label>:31                                      ; preds = %27
  tail call void @TreeCCStreamCodeIndent(%struct._tagTreeCCStream* %stream, i8* %29, i32 1) #2
  br label %32

; <label>:32                                      ; preds = %27, %31
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20.489, i64 0, i64 0)) #2
  %33 = load i32, i32* %19, align 4, !tbaa !9
  %34 = icmp eq i32 %33, 3
  br i1 %34, label %35, label %36

; <label>:35                                      ; preds = %32
  tail call void @TreeCCStreamFixLine(%struct._tagTreeCCStream* %stream) #2
  br label %36

; <label>:36                                      ; preds = %35, %32
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.21.490, i64 0, i64 0)) #2
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @PHP_GenCaseCall(%struct._tagTreeCCContext* nocapture readnone %context, %struct._tagTreeCCStream* %stream, %struct._tagTreeCCOperationCase* nocapture readonly %operCase, i32 %number, i32 %level) #0 {
  %1 = shl nsw i32 %level, 1
  %2 = add nsw i32 %1, 4
  %3 = icmp sgt i32 %2, 3
  br i1 %3, label %.lr.ph.i.preheader, label %7

.lr.ph.i.preheader:                               ; preds = %0
  br label %.lr.ph.i

.lr.ph.i:                                         ; preds = %.lr.ph.i.preheader, %.lr.ph.i
  %.01.i = phi i32 [ %4, %.lr.ph.i ], [ %2, %.lr.ph.i.preheader ]
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.12.495, i64 0, i64 0)) #2
  %4 = add nsw i32 %.01.i, -4
  %5 = icmp sgt i32 %4, 3
  br i1 %5, label %.lr.ph.i, label %._crit_edge.i

._crit_edge.i:                                    ; preds = %.lr.ph.i
  %6 = and i32 %2, 2
  br label %7

; <label>:7                                       ; preds = %._crit_edge.i, %0
  %.0.lcssa.i = phi i32 [ %6, %._crit_edge.i ], [ %2, %0 ]
  switch i32 %.0.lcssa.i, label %Indent.exit [
    i32 1, label %8
    i32 2, label %9
    i32 3, label %10
  ]

; <label>:8                                       ; preds = %7
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.13.496, i64 0, i64 0)) #2
  br label %Indent.exit

; <label>:9                                       ; preds = %7
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.14.497, i64 0, i64 0)) #2
  br label %Indent.exit

; <label>:10                                      ; preds = %7
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.15.498, i64 0, i64 0)) #2
  br label %Indent.exit

Indent.exit:                                      ; preds = %7, %8, %9, %10
  %11 = getelementptr inbounds %struct._tagTreeCCOperationCase, %struct._tagTreeCCOperationCase* %operCase, i64 0, i32 2
  %12 = load %struct._tagTreeCCOperation*, %struct._tagTreeCCOperation** %11, align 8, !tbaa !49
  %13 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %12, i64 0, i32 2
  %14 = load i8*, i8** %13, align 8, !tbaa !45
  %15 = tail call i32 @strcmp(i8* %14, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.22.491, i64 0, i64 0)) #2
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %18, label %17

; <label>:17                                      ; preds = %Indent.exit
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.23.501, i64 0, i64 0)) #2
  %.pre = load %struct._tagTreeCCOperation*, %struct._tagTreeCCOperation** %11, align 8, !tbaa !49
  br label %18

; <label>:18                                      ; preds = %Indent.exit, %17
  %19 = phi %struct._tagTreeCCOperation* [ %12, %Indent.exit ], [ %.pre, %17 ]
  %20 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %19, i64 0, i32 0
  %21 = load i8*, i8** %20, align 8, !tbaa !46
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.24.510, i64 0, i64 0), i8* %21, i32 %number) #2
  %22 = load %struct._tagTreeCCOperation*, %struct._tagTreeCCOperation** %11, align 8, !tbaa !49
  %23 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %22, i64 0, i32 4
  %param.0.7 = load %struct._tagTreeCCParam*, %struct._tagTreeCCParam** %23, align 8
  %24 = icmp eq %struct._tagTreeCCParam* %param.0.7, null
  br i1 %24, label %._crit_edge, label %.lr.ph

.lr.ph:                                           ; preds = %18
  %25 = getelementptr inbounds %struct._tagTreeCCOperationCase, %struct._tagTreeCCOperationCase* %operCase, i64 0, i32 0
  %26 = load %struct._tagTreeCCTrigger*, %struct._tagTreeCCTrigger** %25, align 8, !tbaa !51
  br label %27

; <label>:27                                      ; preds = %.lr.ph, %52
  %param.011 = phi %struct._tagTreeCCParam* [ %param.0.7, %.lr.ph ], [ %param.0, %52 ]
  %trigger.010 = phi %struct._tagTreeCCTrigger* [ %26, %.lr.ph ], [ %trigger.1, %52 ]
  %num.09 = phi i32 [ 1, %.lr.ph ], [ %num.1, %52 ]
  %needComma.08 = phi i1 [ true, %.lr.ph ], [ false, %52 ]
  br i1 %needComma.08, label %29, label %28

; <label>:28                                      ; preds = %27
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.503, i64 0, i64 0)) #2
  br label %29

; <label>:29                                      ; preds = %27, %28
  %30 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.011, i64 0, i32 0
  %31 = load i8*, i8** %30, align 8, !tbaa !41
  %32 = icmp eq i8* %31, null
  br i1 %32, label %34, label %33

; <label>:33                                      ; preds = %29
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4.504, i64 0, i64 0), i8* %31) #2
  br label %36

; <label>:34                                      ; preds = %29
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.5.511, i64 0, i64 0), i32 %num.09) #2
  %35 = add nsw i32 %num.09, 1
  br label %36

; <label>:36                                      ; preds = %34, %33
  %num.1 = phi i32 [ %num.09, %33 ], [ %35, %34 ]
  %37 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.011, i64 0, i32 2
  %38 = load i32, i32* %37, align 4, !tbaa !52
  %39 = and i32 %38, 1
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %52, label %41

; <label>:41                                      ; preds = %36
  %42 = getelementptr inbounds %struct._tagTreeCCTrigger, %struct._tagTreeCCTrigger* %trigger.010, i64 0, i32 0
  %43 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %42, align 8, !tbaa !53
  %44 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %43, i64 0, i32 5
  %45 = load i32, i32* %44, align 4, !tbaa !34
  %46 = and i32 %45, 24
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %49

; <label>:48                                      ; preds = %41
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6.506, i64 0, i64 0)) #2
  br label %49

; <label>:49                                      ; preds = %48, %41
  %50 = getelementptr inbounds %struct._tagTreeCCTrigger, %struct._tagTreeCCTrigger* %trigger.010, i64 0, i32 1
  %51 = load %struct._tagTreeCCTrigger*, %struct._tagTreeCCTrigger** %50, align 8, !tbaa !55
  br label %52

; <label>:52                                      ; preds = %36, %49
  %trigger.1 = phi %struct._tagTreeCCTrigger* [ %51, %49 ], [ %trigger.010, %36 ]
  %53 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.011, i64 0, i32 4
  %param.0 = load %struct._tagTreeCCParam*, %struct._tagTreeCCParam** %53, align 8
  %54 = icmp eq %struct._tagTreeCCParam* %param.0, null
  br i1 %54, label %._crit_edge.loopexit, label %27

._crit_edge.loopexit:                             ; preds = %52
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %18
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.25.507, i64 0, i64 0)) #2
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @PHP_GenCaseInline(%struct._tagTreeCCContext* nocapture readonly %context, %struct._tagTreeCCStream* %stream, %struct._tagTreeCCOperationCase* nocapture readonly %operCase, i32 %level) #0 {
  %1 = getelementptr inbounds %struct._tagTreeCCOperationCase, %struct._tagTreeCCOperationCase* %operCase, i64 0, i32 2
  %2 = load %struct._tagTreeCCOperation*, %struct._tagTreeCCOperation** %1, align 8, !tbaa !49
  %3 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %2, i64 0, i32 4
  %4 = getelementptr inbounds %struct._tagTreeCCOperationCase, %struct._tagTreeCCOperationCase* %operCase, i64 0, i32 0
  %5 = load %struct._tagTreeCCTrigger*, %struct._tagTreeCCTrigger** %4, align 8, !tbaa !51
  %param.0.7 = load %struct._tagTreeCCParam*, %struct._tagTreeCCParam** %3, align 8
  %6 = icmp eq %struct._tagTreeCCParam* %param.0.7, null
  br i1 %6, label %._crit_edge, label %.lr.ph

.lr.ph:                                           ; preds = %0
  %7 = shl nsw i32 %level, 1
  %8 = add nsw i32 %7, 4
  %9 = icmp sgt i32 %8, 3
  %10 = and i32 %8, 2
  br i1 %9, label %.lr.ph.split.us.preheader, label %.lr.ph..lr.ph.split_crit_edge.preheader

.lr.ph..lr.ph.split_crit_edge.preheader:          ; preds = %.lr.ph
  %cond12 = icmp eq i32 %7, -2
  br label %.lr.ph..lr.ph.split_crit_edge

.lr.ph.split.us.preheader:                        ; preds = %.lr.ph
  %cond = icmp eq i32 %10, 0
  br label %.lr.ph.split.us

.lr.ph.split.us:                                  ; preds = %.lr.ph.split.us.preheader, %33
  %param.09.us = phi %struct._tagTreeCCParam* [ %param.0.us, %33 ], [ %param.0.7, %.lr.ph.split.us.preheader ]
  %trigger.08.us = phi %struct._tagTreeCCTrigger* [ %trigger.1.us, %33 ], [ %5, %.lr.ph.split.us.preheader ]
  %11 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.09.us, i64 0, i32 2
  %12 = load i32, i32* %11, align 4, !tbaa !52
  %13 = and i32 %12, 1
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %33, label %15

; <label>:15                                      ; preds = %.lr.ph.split.us
  %16 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.09.us, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8, !tbaa !41
  %18 = icmp eq i8* %17, null
  br i1 %18, label %30, label %19

; <label>:19                                      ; preds = %15
  %20 = getelementptr inbounds %struct._tagTreeCCTrigger, %struct._tagTreeCCTrigger* %trigger.08.us, i64 0, i32 0
  %21 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %20, align 8, !tbaa !53
  %22 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %21, i64 0, i32 5
  %23 = load i32, i32* %22, align 4, !tbaa !34
  %24 = and i32 %23, 24
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %.lr.ph.i.us.preheader, label %30

.lr.ph.i.us.preheader:                            ; preds = %19
  br label %.lr.ph.i.us

.lr.ph.i.us:                                      ; preds = %.lr.ph.i.us.preheader, %.lr.ph.i.us
  %.01.i.us = phi i32 [ %26, %.lr.ph.i.us ], [ %8, %.lr.ph.i.us.preheader ]
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.12.495, i64 0, i64 0)) #2
  %26 = add nsw i32 %.01.i.us, -4
  %27 = icmp sgt i32 %26, 3
  br i1 %27, label %.lr.ph.i.us, label %._crit_edge.i.us

._crit_edge.i.us:                                 ; preds = %.lr.ph.i.us
  br i1 %cond, label %Indent.exit.us, label %28

; <label>:28                                      ; preds = %._crit_edge.i.us
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.14.497, i64 0, i64 0)) #2
  br label %Indent.exit.us

Indent.exit.us:                                   ; preds = %._crit_edge.i.us, %28
  %29 = load i8*, i8** %16, align 8, !tbaa !41
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.26.508, i64 0, i64 0), i8* %29, i8* %29) #2
  br label %30

; <label>:30                                      ; preds = %Indent.exit.us, %19, %15
  %31 = getelementptr inbounds %struct._tagTreeCCTrigger, %struct._tagTreeCCTrigger* %trigger.08.us, i64 0, i32 1
  %32 = load %struct._tagTreeCCTrigger*, %struct._tagTreeCCTrigger** %31, align 8, !tbaa !55
  br label %33

; <label>:33                                      ; preds = %30, %.lr.ph.split.us
  %trigger.1.us = phi %struct._tagTreeCCTrigger* [ %32, %30 ], [ %trigger.08.us, %.lr.ph.split.us ]
  %34 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.09.us, i64 0, i32 4
  %param.0.us = load %struct._tagTreeCCParam*, %struct._tagTreeCCParam** %34, align 8
  %35 = icmp eq %struct._tagTreeCCParam* %param.0.us, null
  br i1 %35, label %._crit_edge.loopexit, label %.lr.ph.split.us

.lr.ph..lr.ph.split_crit_edge:                    ; preds = %.lr.ph..lr.ph.split_crit_edge.preheader, %57
  %param.09 = phi %struct._tagTreeCCParam* [ %param.0, %57 ], [ %param.0.7, %.lr.ph..lr.ph.split_crit_edge.preheader ]
  %trigger.08 = phi %struct._tagTreeCCTrigger* [ %trigger.1, %57 ], [ %5, %.lr.ph..lr.ph.split_crit_edge.preheader ]
  %36 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.09, i64 0, i32 2
  %37 = load i32, i32* %36, align 4, !tbaa !52
  %38 = and i32 %37, 1
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %57, label %40

; <label>:40                                      ; preds = %.lr.ph..lr.ph.split_crit_edge
  %41 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.09, i64 0, i32 0
  %42 = load i8*, i8** %41, align 8, !tbaa !41
  %43 = icmp eq i8* %42, null
  br i1 %43, label %54, label %44

; <label>:44                                      ; preds = %40
  %45 = getelementptr inbounds %struct._tagTreeCCTrigger, %struct._tagTreeCCTrigger* %trigger.08, i64 0, i32 0
  %46 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %45, align 8, !tbaa !53
  %47 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %46, i64 0, i32 5
  %48 = load i32, i32* %47, align 4, !tbaa !34
  %49 = and i32 %48, 24
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %54

; <label>:51                                      ; preds = %44
  br i1 %cond12, label %52, label %Indent.exit

; <label>:52                                      ; preds = %51
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.14.497, i64 0, i64 0)) #2
  br label %Indent.exit

Indent.exit:                                      ; preds = %51, %52
  %53 = load i8*, i8** %41, align 8, !tbaa !41
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.26.508, i64 0, i64 0), i8* %53, i8* %53) #2
  br label %54

; <label>:54                                      ; preds = %40, %44, %Indent.exit
  %55 = getelementptr inbounds %struct._tagTreeCCTrigger, %struct._tagTreeCCTrigger* %trigger.08, i64 0, i32 1
  %56 = load %struct._tagTreeCCTrigger*, %struct._tagTreeCCTrigger** %55, align 8, !tbaa !55
  br label %57

; <label>:57                                      ; preds = %.lr.ph..lr.ph.split_crit_edge, %54
  %trigger.1 = phi %struct._tagTreeCCTrigger* [ %56, %54 ], [ %trigger.08, %.lr.ph..lr.ph.split_crit_edge ]
  %58 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.09, i64 0, i32 4
  %param.0 = load %struct._tagTreeCCParam*, %struct._tagTreeCCParam** %58, align 8
  %59 = icmp eq %struct._tagTreeCCParam* %param.0, null
  br i1 %59, label %._crit_edge.loopexit14, label %.lr.ph..lr.ph.split_crit_edge

._crit_edge.loopexit:                             ; preds = %33
  br label %._crit_edge

._crit_edge.loopexit14:                           ; preds = %57
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit14, %._crit_edge.loopexit, %0
  %60 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 13
  %61 = load i32, i32* %60, align 4, !tbaa !9
  %62 = icmp eq i32 %61, 3
  br i1 %62, label %63, label %68

; <label>:63                                      ; preds = %._crit_edge
  %64 = getelementptr inbounds %struct._tagTreeCCOperationCase, %struct._tagTreeCCOperationCase* %operCase, i64 0, i32 7
  %65 = load i64, i64* %64, align 8, !tbaa !56
  %66 = getelementptr inbounds %struct._tagTreeCCOperationCase, %struct._tagTreeCCOperationCase* %operCase, i64 0, i32 6
  %67 = load i8*, i8** %66, align 8, !tbaa !57
  tail call void @TreeCCStreamLine(%struct._tagTreeCCStream* %stream, i64 %65, i8* %67) #2
  br label %68

; <label>:68                                      ; preds = %63, %._crit_edge
  %69 = shl nsw i32 %level, 1
  %70 = add nsw i32 %69, 4
  %71 = icmp sgt i32 %70, 3
  br i1 %71, label %.lr.ph.i.3.preheader, label %75

.lr.ph.i.3.preheader:                             ; preds = %68
  br label %.lr.ph.i.3

.lr.ph.i.3:                                       ; preds = %.lr.ph.i.3.preheader, %.lr.ph.i.3
  %.01.i.2 = phi i32 [ %72, %.lr.ph.i.3 ], [ %70, %.lr.ph.i.3.preheader ]
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.12.495, i64 0, i64 0)) #2
  %72 = add nsw i32 %.01.i.2, -4
  %73 = icmp sgt i32 %72, 3
  br i1 %73, label %.lr.ph.i.3, label %._crit_edge.i.4

._crit_edge.i.4:                                  ; preds = %.lr.ph.i.3
  %74 = and i32 %70, 2
  br label %75

; <label>:75                                      ; preds = %._crit_edge.i.4, %68
  %.0.lcssa.i.5 = phi i32 [ %74, %._crit_edge.i.4 ], [ %70, %68 ]
  switch i32 %.0.lcssa.i.5, label %Indent.exit6 [
    i32 1, label %76
    i32 2, label %77
    i32 3, label %78
  ]

; <label>:76                                      ; preds = %75
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.13.496, i64 0, i64 0)) #2
  br label %Indent.exit6

; <label>:77                                      ; preds = %75
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.14.497, i64 0, i64 0)) #2
  br label %Indent.exit6

; <label>:78                                      ; preds = %75
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.15.498, i64 0, i64 0)) #2
  br label %Indent.exit6

Indent.exit6:                                     ; preds = %75, %76, %77, %78
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.27.509, i64 0, i64 0)) #2
  %79 = getelementptr inbounds %struct._tagTreeCCOperationCase, %struct._tagTreeCCOperationCase* %operCase, i64 0, i32 1
  %80 = load i8*, i8** %79, align 8, !tbaa !58
  %81 = icmp eq i8* %80, null
  br i1 %81, label %83, label %82

; <label>:82                                      ; preds = %Indent.exit6
  tail call void @TreeCCStreamCodeIndent(%struct._tagTreeCCStream* %stream, i8* %80, i32 %70) #2
  br label %83

; <label>:83                                      ; preds = %Indent.exit6, %82
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20.489, i64 0, i64 0)) #2
  %84 = load i32, i32* %60, align 4, !tbaa !9
  %85 = icmp eq i32 %84, 3
  br i1 %85, label %86, label %87

; <label>:86                                      ; preds = %83
  tail call void @TreeCCStreamFixLine(%struct._tagTreeCCStream* %stream) #2
  br label %87

; <label>:87                                      ; preds = %86, %83
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @PHP_GenCaseSplit(%struct._tagTreeCCContext* nocapture readnone %context, %struct._tagTreeCCStream* %stream, %struct._tagTreeCCOperationCase* nocapture readonly %operCase, i32 %number, i32 %level) #0 {
  %1 = shl nsw i32 %level, 1
  %2 = add nsw i32 %1, 4
  %3 = icmp sgt i32 %2, 3
  br i1 %3, label %.lr.ph.i.preheader, label %7

.lr.ph.i.preheader:                               ; preds = %0
  br label %.lr.ph.i

.lr.ph.i:                                         ; preds = %.lr.ph.i.preheader, %.lr.ph.i
  %.01.i = phi i32 [ %4, %.lr.ph.i ], [ %2, %.lr.ph.i.preheader ]
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.12.495, i64 0, i64 0)) #2
  %4 = add nsw i32 %.01.i, -4
  %5 = icmp sgt i32 %4, 3
  br i1 %5, label %.lr.ph.i, label %._crit_edge.i

._crit_edge.i:                                    ; preds = %.lr.ph.i
  %6 = and i32 %2, 2
  br label %7

; <label>:7                                       ; preds = %._crit_edge.i, %0
  %.0.lcssa.i = phi i32 [ %6, %._crit_edge.i ], [ %2, %0 ]
  switch i32 %.0.lcssa.i, label %Indent.exit [
    i32 1, label %8
    i32 2, label %9
    i32 3, label %10
  ]

; <label>:8                                       ; preds = %7
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.13.496, i64 0, i64 0)) #2
  br label %Indent.exit

; <label>:9                                       ; preds = %7
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.14.497, i64 0, i64 0)) #2
  br label %Indent.exit

; <label>:10                                      ; preds = %7
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.15.498, i64 0, i64 0)) #2
  br label %Indent.exit

Indent.exit:                                      ; preds = %7, %8, %9, %10
  %11 = getelementptr inbounds %struct._tagTreeCCOperationCase, %struct._tagTreeCCOperationCase* %operCase, i64 0, i32 2
  %12 = load %struct._tagTreeCCOperation*, %struct._tagTreeCCOperation** %11, align 8, !tbaa !49
  %13 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %12, i64 0, i32 2
  %14 = load i8*, i8** %13, align 8, !tbaa !45
  %15 = tail call i32 @strcmp(i8* %14, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.22.491, i64 0, i64 0)) #2
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %18, label %17

; <label>:17                                      ; preds = %Indent.exit
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.23.501, i64 0, i64 0)) #2
  %.pre = load %struct._tagTreeCCOperation*, %struct._tagTreeCCOperation** %11, align 8, !tbaa !49
  br label %18

; <label>:18                                      ; preds = %Indent.exit, %17
  %19 = phi %struct._tagTreeCCOperation* [ %12, %Indent.exit ], [ %.pre, %17 ]
  %20 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %19, i64 0, i32 0
  %21 = load i8*, i8** %20, align 8, !tbaa !46
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.28.502, i64 0, i64 0), i8* %21, i32 %number) #2
  %22 = load %struct._tagTreeCCOperation*, %struct._tagTreeCCOperation** %11, align 8, !tbaa !49
  %23 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %22, i64 0, i32 4
  %param.0.7 = load %struct._tagTreeCCParam*, %struct._tagTreeCCParam** %23, align 8
  %24 = icmp eq %struct._tagTreeCCParam* %param.0.7, null
  br i1 %24, label %._crit_edge, label %.lr.ph

.lr.ph:                                           ; preds = %18
  %25 = getelementptr inbounds %struct._tagTreeCCOperationCase, %struct._tagTreeCCOperationCase* %operCase, i64 0, i32 0
  %26 = load %struct._tagTreeCCTrigger*, %struct._tagTreeCCTrigger** %25, align 8, !tbaa !51
  br label %27

; <label>:27                                      ; preds = %.lr.ph, %52
  %param.011 = phi %struct._tagTreeCCParam* [ %param.0.7, %.lr.ph ], [ %param.0, %52 ]
  %trigger.010 = phi %struct._tagTreeCCTrigger* [ %26, %.lr.ph ], [ %trigger.1, %52 ]
  %num.09 = phi i32 [ 1, %.lr.ph ], [ %num.1, %52 ]
  %needComma.08 = phi i1 [ true, %.lr.ph ], [ false, %52 ]
  br i1 %needComma.08, label %29, label %28

; <label>:28                                      ; preds = %27
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.503, i64 0, i64 0)) #2
  br label %29

; <label>:29                                      ; preds = %27, %28
  %30 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.011, i64 0, i32 0
  %31 = load i8*, i8** %30, align 8, !tbaa !41
  %32 = icmp eq i8* %31, null
  br i1 %32, label %34, label %33

; <label>:33                                      ; preds = %29
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4.504, i64 0, i64 0), i8* %31) #2
  br label %36

; <label>:34                                      ; preds = %29
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.29.505, i64 0, i64 0), i32 %num.09) #2
  %35 = add nsw i32 %num.09, 1
  br label %36

; <label>:36                                      ; preds = %34, %33
  %num.1 = phi i32 [ %num.09, %33 ], [ %35, %34 ]
  %37 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.011, i64 0, i32 2
  %38 = load i32, i32* %37, align 4, !tbaa !52
  %39 = and i32 %38, 1
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %52, label %41

; <label>:41                                      ; preds = %36
  %42 = getelementptr inbounds %struct._tagTreeCCTrigger, %struct._tagTreeCCTrigger* %trigger.010, i64 0, i32 0
  %43 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %42, align 8, !tbaa !53
  %44 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %43, i64 0, i32 5
  %45 = load i32, i32* %44, align 4, !tbaa !34
  %46 = and i32 %45, 24
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %49

; <label>:48                                      ; preds = %41
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6.506, i64 0, i64 0)) #2
  br label %49

; <label>:49                                      ; preds = %48, %41
  %50 = getelementptr inbounds %struct._tagTreeCCTrigger, %struct._tagTreeCCTrigger* %trigger.010, i64 0, i32 1
  %51 = load %struct._tagTreeCCTrigger*, %struct._tagTreeCCTrigger** %50, align 8, !tbaa !55
  br label %52

; <label>:52                                      ; preds = %36, %49
  %trigger.1 = phi %struct._tagTreeCCTrigger* [ %51, %49 ], [ %trigger.010, %36 ]
  %53 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.011, i64 0, i32 4
  %param.0 = load %struct._tagTreeCCParam*, %struct._tagTreeCCParam** %53, align 8
  %54 = icmp eq %struct._tagTreeCCParam* %param.0, null
  br i1 %54, label %._crit_edge.loopexit, label %27

._crit_edge.loopexit:                             ; preds = %52
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %18
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.25.507, i64 0, i64 0)) #2
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @PHP_GenEndCase(%struct._tagTreeCCContext* nocapture readnone %context, %struct._tagTreeCCStream* %stream, i32 %level) #0 {
  %1 = shl nsw i32 %level, 1
  %2 = add nsw i32 %1, 3
  %3 = icmp sgt i32 %level, 0
  br i1 %3, label %.lr.ph.i.preheader, label %7

.lr.ph.i.preheader:                               ; preds = %0
  br label %.lr.ph.i

.lr.ph.i:                                         ; preds = %.lr.ph.i.preheader, %.lr.ph.i
  %.01.i = phi i32 [ %4, %.lr.ph.i ], [ %2, %.lr.ph.i.preheader ]
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.12.495, i64 0, i64 0)) #2
  %4 = add nsw i32 %.01.i, -4
  %5 = icmp sgt i32 %4, 3
  br i1 %5, label %.lr.ph.i, label %._crit_edge.i

._crit_edge.i:                                    ; preds = %.lr.ph.i
  %6 = and i32 %2, 3
  br label %7

; <label>:7                                       ; preds = %._crit_edge.i, %0
  %.0.lcssa.i = phi i32 [ %6, %._crit_edge.i ], [ %2, %0 ]
  switch i32 %.0.lcssa.i, label %Indent.exit [
    i32 1, label %8
    i32 2, label %9
    i32 3, label %10
  ]

; <label>:8                                       ; preds = %7
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.13.496, i64 0, i64 0)) #2
  br label %Indent.exit

; <label>:9                                       ; preds = %7
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.14.497, i64 0, i64 0)) #2
  br label %Indent.exit

; <label>:10                                      ; preds = %7
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.15.498, i64 0, i64 0)) #2
  br label %Indent.exit

Indent.exit:                                      ; preds = %7, %8, %9, %10
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20.489, i64 0, i64 0)) #2
  br i1 %3, label %.lr.ph.i.2.preheader, label %14

.lr.ph.i.2.preheader:                             ; preds = %Indent.exit
  br label %.lr.ph.i.2

.lr.ph.i.2:                                       ; preds = %.lr.ph.i.2.preheader, %.lr.ph.i.2
  %.01.i.1 = phi i32 [ %11, %.lr.ph.i.2 ], [ %2, %.lr.ph.i.2.preheader ]
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.12.495, i64 0, i64 0)) #2
  %11 = add nsw i32 %.01.i.1, -4
  %12 = icmp sgt i32 %11, 3
  br i1 %12, label %.lr.ph.i.2, label %._crit_edge.i.3

._crit_edge.i.3:                                  ; preds = %.lr.ph.i.2
  %13 = and i32 %2, 3
  br label %14

; <label>:14                                      ; preds = %._crit_edge.i.3, %Indent.exit
  %.0.lcssa.i.4 = phi i32 [ %13, %._crit_edge.i.3 ], [ %2, %Indent.exit ]
  switch i32 %.0.lcssa.i.4, label %Indent.exit5 [
    i32 1, label %15
    i32 2, label %16
    i32 3, label %17
  ]

; <label>:15                                      ; preds = %14
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.13.496, i64 0, i64 0)) #2
  br label %Indent.exit5

; <label>:16                                      ; preds = %14
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.14.497, i64 0, i64 0)) #2
  br label %Indent.exit5

; <label>:17                                      ; preds = %14
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.15.498, i64 0, i64 0)) #2
  br label %Indent.exit5

Indent.exit5:                                     ; preds = %14, %15, %16, %17
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.30.500, i64 0, i64 0)) #2
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @PHP_GenEndSwitch(%struct._tagTreeCCContext* nocapture readnone %context, %struct._tagTreeCCStream* %stream, i32 %level) #0 {
  %1 = shl nsw i32 %level, 1
  %2 = add nsw i32 %1, 3
  %3 = icmp sgt i32 %level, 0
  br i1 %3, label %.lr.ph.i.preheader, label %7

.lr.ph.i.preheader:                               ; preds = %0
  br label %.lr.ph.i

.lr.ph.i:                                         ; preds = %.lr.ph.i.preheader, %.lr.ph.i
  %.01.i = phi i32 [ %4, %.lr.ph.i ], [ %2, %.lr.ph.i.preheader ]
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.12.495, i64 0, i64 0)) #2
  %4 = add nsw i32 %.01.i, -4
  %5 = icmp sgt i32 %4, 3
  br i1 %5, label %.lr.ph.i, label %._crit_edge.i

._crit_edge.i:                                    ; preds = %.lr.ph.i
  %6 = and i32 %2, 3
  br label %7

; <label>:7                                       ; preds = %._crit_edge.i, %0
  %.0.lcssa.i = phi i32 [ %6, %._crit_edge.i ], [ %2, %0 ]
  switch i32 %.0.lcssa.i, label %Indent.exit [
    i32 1, label %8
    i32 2, label %9
    i32 3, label %10
  ]

; <label>:8                                       ; preds = %7
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.13.496, i64 0, i64 0)) #2
  br label %Indent.exit

; <label>:9                                       ; preds = %7
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.14.497, i64 0, i64 0)) #2
  br label %Indent.exit

; <label>:10                                      ; preds = %7
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.15.498, i64 0, i64 0)) #2
  br label %Indent.exit

Indent.exit:                                      ; preds = %7, %8, %9, %10
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.31.499, i64 0, i64 0)) #2
  %11 = add nsw i32 %1, 2
  %12 = icmp sgt i32 %11, 3
  br i1 %12, label %.lr.ph.i.2.preheader, label %16

.lr.ph.i.2.preheader:                             ; preds = %Indent.exit
  br label %.lr.ph.i.2

.lr.ph.i.2:                                       ; preds = %.lr.ph.i.2.preheader, %.lr.ph.i.2
  %.01.i.1 = phi i32 [ %13, %.lr.ph.i.2 ], [ %11, %.lr.ph.i.2.preheader ]
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.12.495, i64 0, i64 0)) #2
  %13 = add nsw i32 %.01.i.1, -4
  %14 = icmp sgt i32 %13, 3
  br i1 %14, label %.lr.ph.i.2, label %._crit_edge.i.3

._crit_edge.i.3:                                  ; preds = %.lr.ph.i.2
  %15 = and i32 %11, 2
  br label %16

; <label>:16                                      ; preds = %._crit_edge.i.3, %Indent.exit
  %.0.lcssa.i.4 = phi i32 [ %15, %._crit_edge.i.3 ], [ %11, %Indent.exit ]
  switch i32 %.0.lcssa.i.4, label %Indent.exit5 [
    i32 1, label %17
    i32 2, label %18
    i32 3, label %19
  ]

; <label>:17                                      ; preds = %16
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.13.496, i64 0, i64 0)) #2
  br label %Indent.exit5

; <label>:18                                      ; preds = %16
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.14.497, i64 0, i64 0)) #2
  br label %Indent.exit5

; <label>:19                                      ; preds = %16
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.15.498, i64 0, i64 0)) #2
  br label %Indent.exit5

Indent.exit5:                                     ; preds = %16, %17, %18, %19
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20.489, i64 0, i64 0)) #2
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @PHP_GenExit(%struct._tagTreeCCContext* nocapture readnone %context, %struct._tagTreeCCStream* %stream, %struct._tagTreeCCOperation* nocapture readonly %oper) #0 {
  %1 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %oper, i64 0, i32 2
  %2 = load i8*, i8** %1, align 8, !tbaa !45
  %3 = tail call i32 @strcmp(i8* %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.22.491, i64 0, i64 0)) #2
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %11, label %5

; <label>:5                                       ; preds = %0
  %6 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %oper, i64 0, i32 3
  %7 = load i8*, i8** %6, align 8, !tbaa !59
  %8 = icmp eq i8* %7, null
  br i1 %8, label %10, label %9

; <label>:9                                       ; preds = %5
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.32.492, i64 0, i64 0), i8* %7) #2
  br label %11

; <label>:10                                      ; preds = %5
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.33.493, i64 0, i64 0)) #2
  br label %11

; <label>:11                                      ; preds = %0, %9, %10
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.34.494, i64 0, i64 0)) #2
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @PHP_GenEnd(%struct._tagTreeCCContext* nocapture readonly %context, %struct._tagTreeCCStream* %stream, %struct._tagTreeCCOperation* nocapture readnone %oper) #0 {
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20.489, i64 0, i64 0)) #2
  %1 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 13
  %2 = load i32, i32* %1, align 4, !tbaa !9
  %3 = icmp eq i32 %2, 3
  br i1 %3, label %4, label %5

; <label>:4                                       ; preds = %0
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.21.490, i64 0, i64 0)) #2
  br label %5

; <label>:5                                       ; preds = %4, %0
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @PHPGenEntry(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %stream, %struct._tagTreeCCOperation* nocapture readonly %oper, i32 %number) #0 {
  %1 = icmp eq i32 %number, -1
  %2 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %oper, i64 0, i32 0
  %3 = load i8*, i8** %2, align 8, !tbaa !46
  br i1 %1, label %5, label %4

; <label>:4                                       ; preds = %0
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.520, i64 0, i64 0), i8* %3, i32 %number) #2
  br label %6

; <label>:5                                       ; preds = %0
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2.521, i64 0, i64 0), i8* %3) #2
  br label %6

; <label>:6                                       ; preds = %5, %4
  %7 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %oper, i64 0, i32 4
  %param.0.2 = load %struct._tagTreeCCParam*, %struct._tagTreeCCParam** %7, align 8
  %8 = icmp eq %struct._tagTreeCCParam* %param.0.2, null
  br i1 %8, label %._crit_edge, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %6
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %IsEnumType.exit.thread1
  %param.05 = phi %struct._tagTreeCCParam* [ %param.0, %IsEnumType.exit.thread1 ], [ %param.0.2, %.lr.ph.preheader ]
  %needComma.04 = phi i1 [ false, %IsEnumType.exit.thread1 ], [ true, %.lr.ph.preheader ]
  %num.03 = phi i32 [ %num.1, %IsEnumType.exit.thread1 ], [ 1, %.lr.ph.preheader ]
  br i1 %needComma.04, label %10, label %9

; <label>:9                                       ; preds = %.lr.ph
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.503, i64 0, i64 0)) #2
  br label %10

; <label>:10                                      ; preds = %.lr.ph, %9
  %11 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.05, i64 0, i32 0
  %12 = load i8*, i8** %11, align 8, !tbaa !41
  %13 = icmp eq i8* %12, null
  br i1 %13, label %15, label %14

; <label>:14                                      ; preds = %10
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4.504, i64 0, i64 0), i8* %12) #2
  br label %17

; <label>:15                                      ; preds = %10
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.5.511, i64 0, i64 0), i32 %num.03) #2
  %16 = add nsw i32 %num.03, 1
  br label %17

; <label>:17                                      ; preds = %15, %14
  %num.1 = phi i32 [ %num.03, %14 ], [ %16, %15 ]
  %18 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.05, i64 0, i32 2
  %19 = load i32, i32* %18, align 4, !tbaa !52
  %20 = and i32 %19, 1
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %IsEnumType.exit.thread1, label %22

; <label>:22                                      ; preds = %17
  %23 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.05, i64 0, i32 1
  %24 = load i8*, i8** %23, align 8, !tbaa !47
  %25 = tail call %struct._tagTreeCCNode* @TreeCCNodeFindByType(%struct._tagTreeCCContext* %context, i8* %24) #2
  %26 = icmp eq %struct._tagTreeCCNode* %25, null
  br i1 %26, label %32, label %27

; <label>:27                                      ; preds = %22
  %28 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %25, i64 0, i32 5
  %29 = load i32, i32* %28, align 4, !tbaa !34
  %30 = and i32 %29, 8
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %IsEnumType.exit.thread1

; <label>:32                                      ; preds = %22, %27
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6.506, i64 0, i64 0)) #2
  br label %IsEnumType.exit.thread1

IsEnumType.exit.thread1:                          ; preds = %27, %17, %32
  %33 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.05, i64 0, i32 4
  %param.0 = load %struct._tagTreeCCParam*, %struct._tagTreeCCParam** %33, align 8
  %34 = icmp eq %struct._tagTreeCCParam* %param.0, null
  br i1 %34, label %._crit_edge.loopexit, label %.lr.ph

._crit_edge.loopexit:                             ; preds = %IsEnumType.exit.thread1
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %6
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7.513, i64 0, i64 0)) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.8.522, i64 0, i64 0)) #2
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @CreateParams.539(%struct._tagTreeCCStream* %stream, %struct._tagTreeCCNode* nocapture readonly %node, i32 %needComma) #0 {
  %1 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 0
  %2 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %1, align 8, !tbaa !38
  %3 = icmp eq %struct._tagTreeCCNode* %2, null
  br i1 %3, label %6, label %4

; <label>:4                                       ; preds = %0
  %5 = tail call fastcc i32 @CreateParams.539(%struct._tagTreeCCStream* %stream, %struct._tagTreeCCNode* %2, i32 %needComma)
  br label %6

; <label>:6                                       ; preds = %0, %4
  %.0 = phi i32 [ %5, %4 ], [ %needComma, %0 ]
  %7 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 10
  %field.0.1 = load %struct._tagTreeCCField*, %struct._tagTreeCCField** %7, align 8
  %8 = icmp eq %struct._tagTreeCCField* %field.0.1, null
  br i1 %8, label %._crit_edge, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %6
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %19
  %field.03 = phi %struct._tagTreeCCField* [ %field.0, %19 ], [ %field.0.1, %.lr.ph.preheader ]
  %.12 = phi i32 [ %.2, %19 ], [ %.0, %.lr.ph.preheader ]
  %9 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.03, i64 0, i32 3
  %10 = load i32, i32* %9, align 4, !tbaa !61
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %19

; <label>:13                                      ; preds = %.lr.ph
  %14 = icmp eq i32 %.12, 0
  br i1 %14, label %16, label %15

; <label>:15                                      ; preds = %13
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.503, i64 0, i64 0)) #2
  br label %16

; <label>:16                                      ; preds = %13, %15
  %17 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.03, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8, !tbaa !64
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.80.565, i64 0, i64 0), i8* %18) #2
  br label %19

; <label>:19                                      ; preds = %16, %.lr.ph
  %.2 = phi i32 [ 1, %16 ], [ %.12, %.lr.ph ]
  %20 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.03, i64 0, i32 6
  %field.0 = load %struct._tagTreeCCField*, %struct._tagTreeCCField** %20, align 8
  %21 = icmp eq %struct._tagTreeCCField* %field.0, null
  br i1 %21, label %._crit_edge.loopexit, label %.lr.ph

._crit_edge.loopexit:                             ; preds = %19
  %.2.lcssa = phi i32 [ %.2, %19 ]
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %6
  %.1.lcssa = phi i32 [ %.0, %6 ], [ %.2.lcssa, %._crit_edge.loopexit ]
  ret i32 %.1.lcssa
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @InheritParamsSource.541(%struct._tagTreeCCStream* %stream, %struct._tagTreeCCNode* nocapture readonly %node, i32 %needComma) #0 {
  %1 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 0
  %2 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %1, align 8, !tbaa !38
  %3 = icmp eq %struct._tagTreeCCNode* %2, null
  br i1 %3, label %6, label %4

; <label>:4                                       ; preds = %0
  %5 = tail call fastcc i32 @InheritParamsSource.541(%struct._tagTreeCCStream* %stream, %struct._tagTreeCCNode* %2, i32 %needComma)
  br label %6

; <label>:6                                       ; preds = %0, %4
  %.0 = phi i32 [ %5, %4 ], [ %needComma, %0 ]
  %7 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 10
  %field.0.1 = load %struct._tagTreeCCField*, %struct._tagTreeCCField** %7, align 8
  %8 = icmp eq %struct._tagTreeCCField* %field.0.1, null
  br i1 %8, label %._crit_edge, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %6
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %19
  %field.03 = phi %struct._tagTreeCCField* [ %field.0, %19 ], [ %field.0.1, %.lr.ph.preheader ]
  %.12 = phi i32 [ %.2, %19 ], [ %.0, %.lr.ph.preheader ]
  %9 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.03, i64 0, i32 3
  %10 = load i32, i32* %9, align 4, !tbaa !61
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %19

; <label>:13                                      ; preds = %.lr.ph
  %14 = icmp eq i32 %.12, 0
  br i1 %14, label %16, label %15

; <label>:15                                      ; preds = %13
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.503, i64 0, i64 0)) #2
  br label %16

; <label>:16                                      ; preds = %13, %15
  %17 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.03, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8, !tbaa !64
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4.504, i64 0, i64 0), i8* %18) #2
  br label %19

; <label>:19                                      ; preds = %16, %.lr.ph
  %.2 = phi i32 [ 1, %16 ], [ %.12, %.lr.ph ]
  %20 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.03, i64 0, i32 6
  %field.0 = load %struct._tagTreeCCField*, %struct._tagTreeCCField** %20, align 8
  %21 = icmp eq %struct._tagTreeCCField* %field.0, null
  br i1 %21, label %._crit_edge.loopexit, label %.lr.ph

._crit_edge.loopexit:                             ; preds = %19
  %.2.lcssa = phi i32 [ %.2, %19 ]
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %6
  %.1.lcssa = phi i32 [ %.0, %6 ], [ %.2.lcssa, %._crit_edge.loopexit ]
  ret i32 %.1.lcssa
}

; Function Attrs: nounwind uwtable
define internal fastcc void @ImplementVirtuals.549(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %stream, %struct._tagTreeCCNode* readonly %node, %struct._tagTreeCCNode* %actualNode) #0 {
  %1 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 0
  %2 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %1, align 8, !tbaa !38
  %3 = icmp eq %struct._tagTreeCCNode* %2, null
  br i1 %3, label %5, label %4

; <label>:4                                       ; preds = %0
  tail call fastcc void @ImplementVirtuals.549(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %stream, %struct._tagTreeCCNode* %2, %struct._tagTreeCCNode* %actualNode)
  br label %5

; <label>:5                                       ; preds = %0, %4
  %6 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 11
  %virt.0.18 = load %struct._tagTreeCCVirtual*, %struct._tagTreeCCVirtual** %6, align 8
  %7 = icmp eq %struct._tagTreeCCVirtual* %virt.0.18, null
  br i1 %7, label %._crit_edge.23, label %.lr.ph22

.lr.ph22:                                         ; preds = %5
  %8 = icmp eq %struct._tagTreeCCNode* %node, %actualNode
  br label %9

; <label>:9                                       ; preds = %.lr.ph22, %.backedge
  %virt.019 = phi %struct._tagTreeCCVirtual* [ %virt.0.18, %.lr.ph22 ], [ %virt.0, %.backedge ]
  %10 = getelementptr inbounds %struct._tagTreeCCVirtual, %struct._tagTreeCCVirtual* %virt.019, i64 0, i32 0
  %11 = load i8*, i8** %10, align 8, !tbaa !39
  %12 = tail call %struct._tagTreeCCOperationCase* @TreeCCOperationFindCase(%struct._tagTreeCCContext* %context, %struct._tagTreeCCNode* %actualNode, i8* %11) #2
  %13 = icmp eq %struct._tagTreeCCOperationCase* %12, null
  br i1 %13, label %.preheader.preheader, label %23

.preheader.preheader:                             ; preds = %9
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %15
  %actualNode.pn = phi %struct._tagTreeCCNode* [ %tempNode.0, %15 ], [ %actualNode, %.preheader.preheader ]
  %tempNode.0.in = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %actualNode.pn, i64 0, i32 0
  %tempNode.0 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %tempNode.0.in, align 8
  %14 = icmp eq %struct._tagTreeCCNode* %tempNode.0, null
  br i1 %14, label %19, label %15

; <label>:15                                      ; preds = %.preheader
  %16 = load i8*, i8** %10, align 8, !tbaa !39
  %17 = tail call %struct._tagTreeCCOperationCase* @TreeCCOperationFindCase(%struct._tagTreeCCContext* %context, %struct._tagTreeCCNode* %tempNode.0, i8* %16) #2
  %18 = icmp eq %struct._tagTreeCCOperationCase* %17, null
  br i1 %18, label %.preheader, label %.backedge.loopexit

; <label>:19                                      ; preds = %.preheader
  br i1 %8, label %20, label %.backedge

; <label>:20                                      ; preds = %19
  %21 = load i8*, i8** %10, align 8, !tbaa !39
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.81.559, i64 0, i64 0), i8* %21) #2
  br label %25

.backedge.loopexit:                               ; preds = %15
  br label %.backedge

.backedge:                                        ; preds = %.backedge.loopexit, %69, %68, %19
  %virt.0.in.be = getelementptr inbounds %struct._tagTreeCCVirtual, %struct._tagTreeCCVirtual* %virt.019, i64 0, i32 4
  %virt.0 = load %struct._tagTreeCCVirtual*, %struct._tagTreeCCVirtual** %virt.0.in.be, align 8
  %22 = icmp eq %struct._tagTreeCCVirtual* %virt.0, null
  br i1 %22, label %._crit_edge.23.loopexit, label %9

; <label>:23                                      ; preds = %9
  %24 = load i8*, i8** %10, align 8, !tbaa !39
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.82.560, i64 0, i64 0), i8* %24) #2
  br label %25

; <label>:25                                      ; preds = %23, %20
  %26 = phi i1 [ false, %23 ], [ true, %20 ]
  %operCase.2.ph9 = phi %struct._tagTreeCCOperationCase* [ %12, %23 ], [ null, %20 ]
  %27 = getelementptr inbounds %struct._tagTreeCCVirtual, %struct._tagTreeCCVirtual* %virt.019, i64 0, i32 3
  %28 = load %struct._tagTreeCCOperation*, %struct._tagTreeCCOperation** %27, align 8, !tbaa !70
  %29 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %28, i64 0, i32 4
  %param.0.13 = load %struct._tagTreeCCParam*, %struct._tagTreeCCParam** %29, align 8
  %30 = icmp eq %struct._tagTreeCCParam* %param.0.13, null
  br i1 %30, label %._crit_edge, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %25
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %45
  %param.017 = phi %struct._tagTreeCCParam* [ %param.0, %45 ], [ %param.0.13, %.lr.ph.preheader ]
  %needComma.016 = phi i32 [ %needComma.1, %45 ], [ 0, %.lr.ph.preheader ]
  %first.015 = phi i32 [ 0, %45 ], [ 1, %.lr.ph.preheader ]
  %num.014 = phi i32 [ %num.3, %45 ], [ 1, %.lr.ph.preheader ]
  %31 = icmp eq i32 %needComma.016, 0
  br i1 %31, label %33, label %32

; <label>:32                                      ; preds = %.lr.ph
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.503, i64 0, i64 0)) #2
  br label %33

; <label>:33                                      ; preds = %.lr.ph, %32
  %34 = icmp eq i32 %first.015, 0
  %35 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.017, i64 0, i32 0
  %36 = load i8*, i8** %35, align 8, !tbaa !41
  %37 = icmp ne i8* %36, null
  br i1 %34, label %41, label %38

; <label>:38                                      ; preds = %33
  %39 = zext i1 %37 to i32
  %40 = xor i32 %39, 1
  %num.0. = add nsw i32 %40, %num.014
  br label %45

; <label>:41                                      ; preds = %33
  br i1 %37, label %42, label %43

; <label>:42                                      ; preds = %41
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.83.561, i64 0, i64 0), i8* %36) #2
  br label %45

; <label>:43                                      ; preds = %41
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.5.511, i64 0, i64 0), i32 %num.014) #2
  %44 = add nsw i32 %num.014, 1
  br label %45

; <label>:45                                      ; preds = %42, %43, %38
  %num.3 = phi i32 [ %num.0., %38 ], [ %num.014, %42 ], [ %44, %43 ]
  %needComma.1 = phi i32 [ %needComma.016, %38 ], [ 1, %42 ], [ 1, %43 ]
  %46 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.017, i64 0, i32 4
  %param.0 = load %struct._tagTreeCCParam*, %struct._tagTreeCCParam** %46, align 8
  %47 = icmp eq %struct._tagTreeCCParam* %param.0, null
  br i1 %47, label %._crit_edge.loopexit, label %.lr.ph

._crit_edge.loopexit:                             ; preds = %45
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %25
  br i1 %26, label %69, label %48

; <label>:48                                      ; preds = %._crit_edge
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7.513, i64 0, i64 0)) #2
  %49 = getelementptr inbounds %struct._tagTreeCCOperationCase, %struct._tagTreeCCOperationCase* %operCase.2.ph9, i64 0, i32 7
  %50 = load i64, i64* %49, align 8, !tbaa !56
  %51 = getelementptr inbounds %struct._tagTreeCCOperationCase, %struct._tagTreeCCOperationCase* %operCase.2.ph9, i64 0, i32 6
  %52 = load i8*, i8** %51, align 8, !tbaa !57
  tail call void @TreeCCStreamLine(%struct._tagTreeCCStream* %stream, i64 %50, i8* %52) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.19.514, i64 0, i64 0)) #2
  %53 = load %struct._tagTreeCCOperation*, %struct._tagTreeCCOperation** %27, align 8, !tbaa !70
  %54 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %53, i64 0, i32 4
  %55 = load %struct._tagTreeCCParam*, %struct._tagTreeCCParam** %54, align 8, !tbaa !68
  %56 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %55, i64 0, i32 0
  %57 = load i8*, i8** %56, align 8, !tbaa !41
  %58 = icmp eq i8* %57, null
  br i1 %58, label %62, label %59

; <label>:59                                      ; preds = %48
  %60 = tail call i32 @strcmp(i8* %57, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.84.562, i64 0, i64 0)) #2
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %65

; <label>:62                                      ; preds = %59, %48
  %63 = getelementptr inbounds %struct._tagTreeCCOperationCase, %struct._tagTreeCCOperationCase* %operCase.2.ph9, i64 0, i32 1
  %64 = load i8*, i8** %63, align 8, !tbaa !58
  tail call void @TreeCCStreamCodeIndent(%struct._tagTreeCCStream* %stream, i8* %64, i32 1) #2
  br label %68

; <label>:65                                      ; preds = %59
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.85.563, i64 0, i64 0), i8* %57) #2
  %66 = getelementptr inbounds %struct._tagTreeCCOperationCase, %struct._tagTreeCCOperationCase* %operCase.2.ph9, i64 0, i32 1
  %67 = load i8*, i8** %66, align 8, !tbaa !58
  tail call void @TreeCCStreamCodeIndent(%struct._tagTreeCCStream* %stream, i8* %67, i32 1) #2
  br label %68

; <label>:68                                      ; preds = %65, %62
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20.489, i64 0, i64 0)) #2
  tail call void @TreeCCStreamFixLine(%struct._tagTreeCCStream* %stream) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.21.490, i64 0, i64 0)) #2
  br label %.backedge

; <label>:69                                      ; preds = %._crit_edge
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.86.564, i64 0, i64 0)) #2
  br label %.backedge

._crit_edge.23.loopexit:                          ; preds = %.backedge
  br label %._crit_edge.23

._crit_edge.23:                                   ; preds = %._crit_edge.23.loopexit, %5
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @ImplementCreateFuncs.572(%struct._tagTreeCCContext* nocapture readonly %context, %struct._tagTreeCCNode* nocapture readonly %node) #0 {
  %1 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 5
  %2 = load i32, i32* %1, align 4, !tbaa !34
  %3 = and i32 %2, 26
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %22

; <label>:5                                       ; preds = %0
  %6 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 7
  %7 = load %struct._tagTreeCCStream*, %struct._tagTreeCCStream** %6, align 8, !tbaa !32
  %8 = icmp eq %struct._tagTreeCCStream* %7, null
  br i1 %8, label %9, label %12

; <label>:9                                       ; preds = %5
  %10 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 5
  %11 = load %struct._tagTreeCCStream*, %struct._tagTreeCCStream** %10, align 8, !tbaa !33
  br label %12

; <label>:12                                      ; preds = %5, %9
  %stream.0 = phi %struct._tagTreeCCStream* [ %11, %9 ], [ %7, %5 ]
  %13 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 4
  %14 = load i8*, i8** %13, align 8, !tbaa !36
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.48.575, i64 0, i64 0), i8* %14) #2
  %15 = tail call fastcc i32 @FactoryCreateParams.576(%struct._tagTreeCCStream* %stream.0, %struct._tagTreeCCNode* %node)
  %16 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 8
  %17 = load i16, i16* %16, align 8
  %.mask = and i16 %17, 64
  %18 = icmp eq i16 %.mask, 0
  br i1 %18, label %20, label %19

; <label>:19                                      ; preds = %12
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.25.507, i64 0, i64 0)) #2
  br label %22

; <label>:20                                      ; preds = %12
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7.513, i64 0, i64 0)) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.8.522, i64 0, i64 0)) #2
  %21 = load i8*, i8** %13, align 8, !tbaa !36
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.0, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.49.577, i64 0, i64 0), i8* %21) #2
  tail call fastcc void @FactoryInvokeParams.578(%struct._tagTreeCCStream* %stream.0, %struct._tagTreeCCNode* %node)
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.25.507, i64 0, i64 0)) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.44.548, i64 0, i64 0)) #2
  br label %22

; <label>:22                                      ; preds = %19, %20, %0
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @FactoryCreateParams.576(%struct._tagTreeCCStream* %stream, %struct._tagTreeCCNode* nocapture readonly %node) #0 {
  %1 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 0
  %2 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %1, align 8, !tbaa !38
  %3 = icmp eq %struct._tagTreeCCNode* %2, null
  br i1 %3, label %6, label %4

; <label>:4                                       ; preds = %0
  %5 = tail call fastcc i32 @FactoryCreateParams.576(%struct._tagTreeCCStream* %stream, %struct._tagTreeCCNode* %2)
  br label %6

; <label>:6                                       ; preds = %0, %4
  %.0 = phi i32 [ %5, %4 ], [ 0, %0 ]
  %7 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 10
  %field.0.1 = load %struct._tagTreeCCField*, %struct._tagTreeCCField** %7, align 8
  %8 = icmp eq %struct._tagTreeCCField* %field.0.1, null
  br i1 %8, label %._crit_edge, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %6
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %19
  %field.03 = phi %struct._tagTreeCCField* [ %field.0, %19 ], [ %field.0.1, %.lr.ph.preheader ]
  %.12 = phi i32 [ %.2, %19 ], [ %.0, %.lr.ph.preheader ]
  %9 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.03, i64 0, i32 3
  %10 = load i32, i32* %9, align 4, !tbaa !61
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %19

; <label>:13                                      ; preds = %.lr.ph
  %14 = icmp eq i32 %.12, 0
  br i1 %14, label %16, label %15

; <label>:15                                      ; preds = %13
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.503, i64 0, i64 0)) #2
  br label %16

; <label>:16                                      ; preds = %13, %15
  %17 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.03, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8, !tbaa !64
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4.504, i64 0, i64 0), i8* %18) #2
  br label %19

; <label>:19                                      ; preds = %16, %.lr.ph
  %.2 = phi i32 [ 1, %16 ], [ %.12, %.lr.ph ]
  %20 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.03, i64 0, i32 6
  %field.0 = load %struct._tagTreeCCField*, %struct._tagTreeCCField** %20, align 8
  %21 = icmp eq %struct._tagTreeCCField* %field.0, null
  br i1 %21, label %._crit_edge.loopexit, label %.lr.ph

._crit_edge.loopexit:                             ; preds = %19
  %.2.lcssa = phi i32 [ %.2, %19 ]
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %6
  %.1.lcssa = phi i32 [ %.0, %6 ], [ %.2.lcssa, %._crit_edge.loopexit ]
  ret i32 %.1.lcssa
}

; Function Attrs: nounwind uwtable
define internal fastcc void @FactoryInvokeParams.578(%struct._tagTreeCCStream* %stream, %struct._tagTreeCCNode* nocapture readonly %node) #0 {
  %1 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 0
  %2 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %1, align 8, !tbaa !38
  %3 = icmp eq %struct._tagTreeCCNode* %2, null
  br i1 %3, label %5, label %4

; <label>:4                                       ; preds = %0
  tail call fastcc void @FactoryInvokeParams.578(%struct._tagTreeCCStream* %stream, %struct._tagTreeCCNode* %2)
  br label %5

; <label>:5                                       ; preds = %0, %4
  %6 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 10
  %field.0.1 = load %struct._tagTreeCCField*, %struct._tagTreeCCField** %6, align 8
  %7 = icmp eq %struct._tagTreeCCField* %field.0.1, null
  br i1 %7, label %._crit_edge, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %5
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %15
  %field.02 = phi %struct._tagTreeCCField* [ %field.0, %15 ], [ %field.0.1, %.lr.ph.preheader ]
  %8 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.02, i64 0, i32 3
  %9 = load i32, i32* %8, align 4, !tbaa !61
  %10 = and i32 %9, 1
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %15

; <label>:12                                      ; preds = %.lr.ph
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.503, i64 0, i64 0)) #2
  %13 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.02, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8, !tbaa !64
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4.504, i64 0, i64 0), i8* %14) #2
  br label %15

; <label>:15                                      ; preds = %12, %.lr.ph
  %16 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.02, i64 0, i32 6
  %field.0 = load %struct._tagTreeCCField*, %struct._tagTreeCCField** %16, align 8
  %17 = icmp eq %struct._tagTreeCCField* %field.0, null
  br i1 %17, label %._crit_edge.loopexit, label %.lr.ph

._crit_edge.loopexit:                             ; preds = %15
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %5
  ret void
}

; Function Attrs: nounwind uwtable
define void @TreeCCGenerateRuby(%struct._tagTreeCCContext* %context) #0 {
  %1 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 3
  %stream.0.2.i = load %struct._tagTreeCCStream*, %struct._tagTreeCCStream** %1, align 8
  %2 = icmp eq %struct._tagTreeCCStream* %stream.0.2.i, null
  br i1 %2, label %WriteRubyHeaders.exit, label %.lr.ph.i

.lr.ph.i:                                         ; preds = %0
  %3 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 11
  br label %4

; <label>:4                                       ; preds = %20, %.lr.ph.i
  %stream.03.i = phi %struct._tagTreeCCStream* [ %stream.0.2.i, %.lr.ph.i ], [ %stream.0.i, %20 ]
  %5 = getelementptr inbounds %struct._tagTreeCCStream, %struct._tagTreeCCStream* %stream.03.i, i64 0, i32 7
  %6 = load i8, i8* %5, align 4
  %.mask.i = and i8 %6, 4
  %7 = icmp eq i8 %.mask.i, 0
  br i1 %7, label %8, label %15

; <label>:8                                       ; preds = %4
  %9 = getelementptr inbounds %struct._tagTreeCCStream, %struct._tagTreeCCStream* %stream.03.i, i64 0, i32 2
  %10 = load i8*, i8** %9, align 8, !tbaa !69
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.03.i, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.27.583, i64 0, i64 0), i8* %10) #2
  %11 = load i8*, i8** %3, align 8, !tbaa !8
  %12 = icmp eq i8* %11, null
  br i1 %12, label %14, label %13

; <label>:13                                      ; preds = %8
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.03.i, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.28.584, i64 0, i64 0), i8* %11) #2
  br label %14

; <label>:14                                      ; preds = %13, %8
  tail call void @TreeCCStreamSourceTopCS(%struct._tagTreeCCStream* %stream.03.i) #2
  %.pre.i = load i8, i8* %5, align 4
  br label %15

; <label>:15                                      ; preds = %14, %4
  %16 = phi i8 [ %6, %4 ], [ %.pre.i, %14 ]
  %.mask1.i = and i8 %16, 8
  %17 = icmp eq i8 %.mask1.i, 0
  br i1 %17, label %20, label %18

; <label>:18                                      ; preds = %15
  %19 = and i8 %16, -17
  store i8 %19, i8* %5, align 4
  br label %20

; <label>:20                                      ; preds = %18, %15
  %21 = getelementptr inbounds %struct._tagTreeCCStream, %struct._tagTreeCCStream* %stream.03.i, i64 0, i32 10
  %stream.0.i = load %struct._tagTreeCCStream*, %struct._tagTreeCCStream** %21, align 8
  %22 = icmp eq %struct._tagTreeCCStream* %stream.0.i, null
  br i1 %22, label %WriteRubyHeaders.exit.loopexit, label %4

WriteRubyHeaders.exit.loopexit:                   ; preds = %20
  br label %WriteRubyHeaders.exit

WriteRubyHeaders.exit:                            ; preds = %WriteRubyHeaders.exit.loopexit, %0
  tail call void @TreeCCNodeVisitAll(%struct._tagTreeCCContext* %context, void (%struct._tagTreeCCContext*, %struct._tagTreeCCNode*)* nonnull @DeclareTypeDefs.585) #2
  %23 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 7
  %24 = load %struct._tagTreeCCStream*, %struct._tagTreeCCStream** %23, align 8, !tbaa !32
  %25 = icmp eq %struct._tagTreeCCStream* %24, null
  br i1 %25, label %27, label %26

; <label>:26                                      ; preds = %WriteRubyHeaders.exit
  tail call fastcc void @ImplementStateType.586(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %24)
  br label %30

; <label>:27                                      ; preds = %WriteRubyHeaders.exit
  %28 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 5
  %29 = load %struct._tagTreeCCStream*, %struct._tagTreeCCStream** %28, align 8, !tbaa !33
  tail call fastcc void @ImplementStateType.586(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %29)
  br label %30

; <label>:30                                      ; preds = %27, %26
  tail call void @TreeCCNodeVisitAll(%struct._tagTreeCCContext* %context, void (%struct._tagTreeCCContext*, %struct._tagTreeCCNode*)* nonnull @BuildTypeDecls.587) #2
  tail call void @TreeCCGenerateNonVirtuals(%struct._tagTreeCCContext* %context, %struct.TreeCCNonVirtual* nonnull @TreeCCNonVirtualFuncsRuby) #2
  %stream.0.4.i = load %struct._tagTreeCCStream*, %struct._tagTreeCCStream** %1, align 8
  %31 = icmp eq %struct._tagTreeCCStream* %stream.0.4.i, null
  br i1 %31, label %WriteRubyFooters.exit, label %.lr.ph.i.1

.lr.ph.i.1:                                       ; preds = %30
  %32 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 11
  br label %33

; <label>:33                                      ; preds = %45, %.lr.ph.i.1
  %stream.05.i = phi %struct._tagTreeCCStream* [ %stream.0.4.i, %.lr.ph.i.1 ], [ %stream.0.i.3, %45 ]
  %34 = getelementptr inbounds %struct._tagTreeCCStream, %struct._tagTreeCCStream* %stream.05.i, i64 0, i32 7
  %35 = load i8, i8* %34, align 4
  %36 = and i8 %35, 24
  %37 = icmp eq i8 %36, 8
  br i1 %37, label %38, label %39

; <label>:38                                      ; preds = %33
  tail call void @TreeCCStreamClear(%struct._tagTreeCCStream* %stream.05.i) #2
  br label %45

; <label>:39                                      ; preds = %33
  %.mask1.i.2 = and i8 %35, 4
  %40 = icmp eq i8 %.mask1.i.2, 0
  br i1 %40, label %41, label %45

; <label>:41                                      ; preds = %39
  tail call void @TreeCCStreamSourceBottom(%struct._tagTreeCCStream* %stream.05.i) #2
  %42 = load i8*, i8** %32, align 8, !tbaa !8
  %43 = icmp eq i8* %42, null
  br i1 %43, label %45, label %44

; <label>:44                                      ; preds = %41
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.05.i, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.18.588, i64 0, i64 0)) #2
  br label %45

; <label>:45                                      ; preds = %44, %41, %39, %38
  %46 = getelementptr inbounds %struct._tagTreeCCStream, %struct._tagTreeCCStream* %stream.05.i, i64 0, i32 10
  %stream.0.i.3 = load %struct._tagTreeCCStream*, %struct._tagTreeCCStream** %46, align 8
  %47 = icmp eq %struct._tagTreeCCStream* %stream.0.i.3, null
  br i1 %47, label %WriteRubyFooters.exit.loopexit, label %33

WriteRubyFooters.exit.loopexit:                   ; preds = %45
  br label %WriteRubyFooters.exit

WriteRubyFooters.exit:                            ; preds = %WriteRubyFooters.exit.loopexit, %30
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @DeclareTypeDefs.585(%struct._tagTreeCCContext* nocapture readnone %context, %struct._tagTreeCCNode* nocapture readonly %node) #0 {
  %1 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 5
  %2 = load i32, i32* %1, align 4, !tbaa !34
  %3 = and i32 %2, 8
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %23, label %5

; <label>:5                                       ; preds = %0
  %6 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 14
  %7 = load %struct._tagTreeCCStream*, %struct._tagTreeCCStream** %6, align 8, !tbaa !48
  %8 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 4
  %9 = load i8*, i8** %8, align 8, !tbaa !36
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %7, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.29.662, i64 0, i64 0), i8* %9) #2
  %10 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 1
  %child.0.1 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %10, align 8
  %11 = icmp eq %struct._tagTreeCCNode* %child.0.1, null
  br i1 %11, label %._crit_edge, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %5
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %20
  %child.03 = phi %struct._tagTreeCCNode* [ %child.0, %20 ], [ %child.0.1, %.lr.ph.preheader ]
  %counter.02 = phi i32 [ %counter.1, %20 ], [ 0, %.lr.ph.preheader ]
  %12 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %child.03, i64 0, i32 5
  %13 = load i32, i32* %12, align 4, !tbaa !34
  %14 = and i32 %13, 16
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %20, label %16

; <label>:16                                      ; preds = %.lr.ph
  %17 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %child.03, i64 0, i32 4
  %18 = load i8*, i8** %17, align 8, !tbaa !36
  %19 = add nsw i32 %counter.02, 1
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %7, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.30.663, i64 0, i64 0), i8* %18, i32 %counter.02) #2
  br label %20

; <label>:20                                      ; preds = %.lr.ph, %16
  %counter.1 = phi i32 [ %19, %16 ], [ %counter.02, %.lr.ph ]
  %21 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %child.03, i64 0, i32 3
  %child.0 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %21, align 8
  %22 = icmp eq %struct._tagTreeCCNode* %child.0, null
  br i1 %22, label %._crit_edge.loopexit, label %.lr.ph

._crit_edge.loopexit:                             ; preds = %20
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %5
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %7, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.31.642, i64 0, i64 0)) #2
  br label %23

; <label>:23                                      ; preds = %0, %._crit_edge
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @ImplementStateType.586(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %stream) #0 {
  %1 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 10
  %2 = load i8*, i8** %1, align 8, !tbaa !31
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.614, i64 0, i64 0), i8* %2) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.32.648, i64 0, i64 0)) #2
  %3 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 8
  %4 = load i16, i16* %3, align 8
  %.mask = and i16 %4, 8
  %5 = icmp eq i16 %.mask, 0
  br i1 %5, label %6, label %9

; <label>:6                                       ; preds = %0
  %7 = load i8*, i8** %1, align 8, !tbaa !31
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.33.649, i64 0, i64 0), i8* %7) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.34.650, i64 0, i64 0)) #2
  %8 = load i8*, i8** %1, align 8, !tbaa !31
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.35.651, i64 0, i64 0), i8* %8) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.36.652, i64 0, i64 0)) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.37.632, i64 0, i64 0)) #2
  %.pre = load i16, i16* %3, align 8
  br label %9

; <label>:9                                       ; preds = %0, %6
  %10 = phi i16 [ %4, %0 ], [ %.pre, %6 ]
  %.mask1 = and i16 %10, 8
  %11 = icmp eq i16 %.mask1, 0
  br i1 %11, label %12, label %13

; <label>:12                                      ; preds = %9
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.38.653, i64 0, i64 0)) #2
  %.pre4 = load i16, i16* %3, align 8
  br label %13

; <label>:13                                      ; preds = %9, %12
  %14 = phi i16 [ %10, %9 ], [ %.pre4, %12 ]
  %.mask2 = and i16 %14, 8
  %15 = icmp eq i16 %.mask2, 0
  br i1 %15, label %17, label %16

; <label>:16                                      ; preds = %13
  tail call void @TreeCCNodeVisitAll(%struct._tagTreeCCContext* %context, void (%struct._tagTreeCCContext*, %struct._tagTreeCCNode*)* nonnull @ImplementCreateFuncs.654) #2
  %.pre5 = load i16, i16* %3, align 8
  br label %17

; <label>:17                                      ; preds = %13, %16
  %18 = phi i16 [ %14, %13 ], [ %.pre5, %16 ]
  %.mask3 = and i16 %18, 2
  %19 = icmp eq i16 %.mask3, 0
  br i1 %19, label %21, label %20

; <label>:20                                      ; preds = %17
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.39.655, i64 0, i64 0)) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.40.656, i64 0, i64 0)) #2
  br label %21

; <label>:21                                      ; preds = %17, %20
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.31.642, i64 0, i64 0)) #2
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @BuildTypeDecls.587(%struct._tagTreeCCContext* %context, %struct._tagTreeCCNode* %node) #0 {
  %1 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 5
  %2 = load i32, i32* %1, align 4, !tbaa !34
  %3 = and i32 %2, 24
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %85

; <label>:5                                       ; preds = %0
  %6 = tail call i32 @TreeCCNodeHasAbstracts(%struct._tagTreeCCContext* %context, %struct._tagTreeCCNode* %node) #2
  %7 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 14
  %8 = load %struct._tagTreeCCStream*, %struct._tagTreeCCStream** %7, align 8, !tbaa !48
  %9 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 0
  %10 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %9, align 8, !tbaa !38
  %11 = icmp eq %struct._tagTreeCCNode* %10, null
  %12 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 4
  %13 = load i8*, i8** %12, align 8, !tbaa !36
  br i1 %11, label %17, label %14

; <label>:14                                      ; preds = %5
  %15 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %10, i64 0, i32 4
  %16 = load i8*, i8** %15, align 8, !tbaa !36
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %8, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.44.615, i64 0, i64 0), i8* %13, i8* %16) #2
  br label %23

; <label>:17                                      ; preds = %5
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %8, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.614, i64 0, i64 0), i8* %13) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %8, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.45.616, i64 0, i64 0)) #2
  %18 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 8
  %19 = load i16, i16* %18, align 8
  %.mask = and i16 %19, 2
  %20 = icmp eq i16 %.mask, 0
  br i1 %20, label %22, label %21

; <label>:21                                      ; preds = %17
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %8, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.46.617, i64 0, i64 0)) #2
  br label %22

; <label>:22                                      ; preds = %17, %21
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.605, i64 0, i64 0)) #2
  br label %23

; <label>:23                                      ; preds = %22, %14
  %24 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 10
  %field.0.7 = load %struct._tagTreeCCField*, %struct._tagTreeCCField** %24, align 8
  %25 = icmp eq %struct._tagTreeCCField* %field.0.7, null
  br i1 %25, label %._crit_edge.11, label %.lr.ph10.preheader

.lr.ph10.preheader:                               ; preds = %23
  br label %.lr.ph10

.lr.ph10:                                         ; preds = %.lr.ph10.preheader, %.lr.ph10
  %field.08 = phi %struct._tagTreeCCField* [ %field.0, %.lr.ph10 ], [ %field.0.7, %.lr.ph10.preheader ]
  %26 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.08, i64 0, i32 0
  %27 = load i8*, i8** %26, align 8, !tbaa !64
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %8, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.47.618, i64 0, i64 0), i8* %27) #2
  %28 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.08, i64 0, i32 6
  %field.0 = load %struct._tagTreeCCField*, %struct._tagTreeCCField** %28, align 8
  %29 = icmp eq %struct._tagTreeCCField* %field.0, null
  br i1 %29, label %._crit_edge.11.loopexit, label %.lr.ph10

._crit_edge.11.loopexit:                          ; preds = %.lr.ph10
  br label %._crit_edge.11

._crit_edge.11:                                   ; preds = %._crit_edge.11.loopexit, %23
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.605, i64 0, i64 0)) #2
  %30 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 6
  %31 = load i32, i32* %30, align 4, !tbaa !37
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %8, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.48.619, i64 0, i64 0), i32 %31) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %8, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.49.620, i64 0, i64 0)) #2
  %32 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 8
  %33 = load i16, i16* %32, align 8
  %.mask1 = and i16 %33, 8
  %34 = icmp eq i16 %.mask1, 0
  br i1 %34, label %36, label %35

; <label>:35                                      ; preds = %._crit_edge.11
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %8, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.50.621, i64 0, i64 0)) #2
  br label %36

; <label>:36                                      ; preds = %._crit_edge.11, %35
  %needComma.0 = phi i32 [ 1, %35 ], [ 0, %._crit_edge.11 ]
  %37 = tail call fastcc i32 @CreateParams.622(%struct._tagTreeCCStream* %8, %struct._tagTreeCCNode* %node, i32 %needComma.0)
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %8, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7.603, i64 0, i64 0)) #2
  %38 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %9, align 8, !tbaa !38
  %39 = icmp eq %struct._tagTreeCCNode* %38, null
  br i1 %39, label %48, label %40

; <label>:40                                      ; preds = %36
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %8, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.51.623, i64 0, i64 0)) #2
  %41 = load i16, i16* %32, align 8
  %.mask4 = and i16 %41, 8
  %42 = icmp eq i16 %.mask4, 0
  br i1 %42, label %44, label %43

; <label>:43                                      ; preds = %40
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.52.624, i64 0, i64 0)) #2
  br label %44

; <label>:44                                      ; preds = %40, %43
  %needComma.1 = phi i32 [ 1, %43 ], [ 0, %40 ]
  %45 = tail call fastcc i32 @CreateParams.622(%struct._tagTreeCCStream* %8, %struct._tagTreeCCNode* %node, i32 %needComma.1)
  %46 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %9, align 8, !tbaa !38
  %47 = tail call fastcc i32 @InheritParamsSource.625(%struct._tagTreeCCStream* %8, %struct._tagTreeCCNode* %46, i32 %needComma.1)
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %8, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7.603, i64 0, i64 0)) #2
  br label %48

; <label>:48                                      ; preds = %36, %44
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %8, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.53.626, i64 0, i64 0)) #2
  %49 = load i16, i16* %32, align 8
  %.mask2 = and i16 %49, 2
  %50 = icmp eq i16 %.mask2, 0
  br i1 %50, label %.preheader, label %51

; <label>:51                                      ; preds = %48
  %52 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %9, align 8, !tbaa !38
  %53 = icmp eq %struct._tagTreeCCNode* %52, null
  br i1 %53, label %54, label %.preheader

; <label>:54                                      ; preds = %51
  %.mask3 = and i16 %49, 8
  %55 = icmp eq i16 %.mask3, 0
  br i1 %55, label %57, label %56

; <label>:56                                      ; preds = %54
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %8, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.54.627, i64 0, i64 0)) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %8, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.55.628, i64 0, i64 0)) #2
  br label %.preheader

; <label>:57                                      ; preds = %54
  %58 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 10
  %59 = load i8*, i8** %58, align 8, !tbaa !31
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %8, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.56.629, i64 0, i64 0), i8* %59) #2
  %60 = load i8*, i8** %58, align 8, !tbaa !31
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %8, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.57.630, i64 0, i64 0), i8* %60) #2
  br label %.preheader

.preheader:                                       ; preds = %51, %48, %56, %57
  %field.1.5 = load %struct._tagTreeCCField*, %struct._tagTreeCCField** %24, align 8
  %61 = icmp eq %struct._tagTreeCCField* %field.1.5, null
  br i1 %61, label %._crit_edge, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %.preheader
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %76
  %field.16 = phi %struct._tagTreeCCField* [ %field.1, %76 ], [ %field.1.5, %.lr.ph.preheader ]
  %62 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.16, i64 0, i32 3
  %63 = load i32, i32* %62, align 4, !tbaa !61
  %64 = and i32 %63, 1
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %69

; <label>:66                                      ; preds = %.lr.ph
  %67 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.16, i64 0, i32 0
  %68 = load i8*, i8** %67, align 8, !tbaa !64
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %8, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.58.631, i64 0, i64 0), i8* %68, i8* %68) #2
  br label %76

; <label>:69                                      ; preds = %.lr.ph
  %70 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.16, i64 0, i32 2
  %71 = load i8*, i8** %70, align 8, !tbaa !65
  %72 = icmp eq i8* %71, null
  br i1 %72, label %76, label %73

; <label>:73                                      ; preds = %69
  %74 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.16, i64 0, i32 0
  %75 = load i8*, i8** %74, align 8, !tbaa !64
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %8, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.58.631, i64 0, i64 0), i8* %75, i8* %71) #2
  br label %76

; <label>:76                                      ; preds = %69, %73, %66
  %77 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.16, i64 0, i32 6
  %field.1 = load %struct._tagTreeCCField*, %struct._tagTreeCCField** %77, align 8
  %78 = icmp eq %struct._tagTreeCCField* %field.1, null
  br i1 %78, label %._crit_edge.loopexit, label %.lr.ph

._crit_edge.loopexit:                             ; preds = %76
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %.preheader
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %8, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.37.632, i64 0, i64 0)) #2
  tail call fastcc void @ImplementVirtuals.633(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %8, %struct._tagTreeCCNode* %node, %struct._tagTreeCCNode* %node)
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %8, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.59.634, i64 0, i64 0)) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %8, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.60.635, i64 0, i64 0)) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %8, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.61.636, i64 0, i64 0)) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %8, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.62.637, i64 0, i64 0)) #2
  %79 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %9, align 8, !tbaa !38
  %80 = icmp eq %struct._tagTreeCCNode* %79, null
  br i1 %80, label %82, label %81

; <label>:81                                      ; preds = %._crit_edge
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %8, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.63.638, i64 0, i64 0)) #2
  br label %83

; <label>:82                                      ; preds = %._crit_edge
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %8, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.64.639, i64 0, i64 0)) #2
  br label %83

; <label>:83                                      ; preds = %82, %81
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %8, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.37.632, i64 0, i64 0)) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %8, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.65.640, i64 0, i64 0)) #2
  %84 = load i8*, i8** %12, align 8, !tbaa !36
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %8, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.66.641, i64 0, i64 0), i8* %84) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.26.592, i64 0, i64 0)) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %8, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.31.642, i64 0, i64 0)) #2
  br label %85

; <label>:85                                      ; preds = %0, %83
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @Ruby_GenStart(%struct._tagTreeCCContext* nocapture readnone %context, %struct._tagTreeCCStream* %stream, %struct._tagTreeCCOperation* nocapture readonly %oper) #0 {
  %1 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %oper, i64 0, i32 1
  %2 = load i8*, i8** %1, align 8, !tbaa !60
  %3 = icmp eq i8* %2, null
  br i1 %3, label %5, label %4

; <label>:4                                       ; preds = %0
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.614, i64 0, i64 0), i8* %2) #2
  br label %8

; <label>:5                                       ; preds = %0
  %6 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %oper, i64 0, i32 0
  %7 = load i8*, i8** %6, align 8, !tbaa !46
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.614, i64 0, i64 0), i8* %7) #2
  br label %8

; <label>:8                                       ; preds = %5, %4
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @Ruby_GenEntry(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %stream, %struct._tagTreeCCOperation* nocapture readonly %oper) #0 {
  tail call fastcc void @RubyGenEntry(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %stream, %struct._tagTreeCCOperation* %oper, i32 -1)
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @Ruby_GenSplitEntry(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %stream, %struct._tagTreeCCOperation* nocapture readonly %oper, i32 %number) #0 {
  tail call fastcc void @RubyGenEntry(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %stream, %struct._tagTreeCCOperation* %oper, i32 %number)
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @Ruby_GenSwitchHead(%struct._tagTreeCCContext* nocapture readnone %context, %struct._tagTreeCCStream* %stream, i8* %paramName, i32 %level, i32 %isEnum) #0 {
  %1 = shl nsw i32 %level, 1
  %2 = add nsw i32 %1, 2
  %3 = icmp sgt i32 %2, 3
  br i1 %3, label %.lr.ph.i.preheader, label %7

.lr.ph.i.preheader:                               ; preds = %0
  br label %.lr.ph.i

.lr.ph.i:                                         ; preds = %.lr.ph.i.preheader, %.lr.ph.i
  %.01.i = phi i32 [ %4, %.lr.ph.i ], [ %2, %.lr.ph.i.preheader ]
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.11.593, i64 0, i64 0)) #2
  %4 = add nsw i32 %.01.i, -4
  %5 = icmp sgt i32 %4, 3
  br i1 %5, label %.lr.ph.i, label %._crit_edge.i

._crit_edge.i:                                    ; preds = %.lr.ph.i
  %6 = and i32 %2, 2
  br label %7

; <label>:7                                       ; preds = %._crit_edge.i, %0
  %.0.lcssa.i = phi i32 [ %6, %._crit_edge.i ], [ %2, %0 ]
  switch i32 %.0.lcssa.i, label %Indent.exit [
    i32 1, label %8
    i32 2, label %9
    i32 3, label %10
  ]

; <label>:8                                       ; preds = %7
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12.594, i64 0, i64 0)) #2
  br label %Indent.exit

; <label>:9                                       ; preds = %7
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.13.595, i64 0, i64 0)) #2
  br label %Indent.exit

; <label>:10                                      ; preds = %7
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.14.596, i64 0, i64 0)) #2
  br label %Indent.exit

Indent.exit:                                      ; preds = %7, %8, %9, %10
  %11 = icmp eq i32 %isEnum, 0
  br i1 %11, label %13, label %12

; <label>:12                                      ; preds = %Indent.exit
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.8.610, i64 0, i64 0), i8* %paramName) #2
  br label %14

; <label>:13                                      ; preds = %Indent.exit
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.9.611, i64 0, i64 0), i8* %paramName) #2
  br label %14

; <label>:14                                      ; preds = %13, %12
  br i1 %3, label %.lr.ph.i.2.preheader, label %18

.lr.ph.i.2.preheader:                             ; preds = %14
  br label %.lr.ph.i.2

.lr.ph.i.2:                                       ; preds = %.lr.ph.i.2.preheader, %.lr.ph.i.2
  %.01.i.1 = phi i32 [ %15, %.lr.ph.i.2 ], [ %2, %.lr.ph.i.2.preheader ]
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.11.593, i64 0, i64 0)) #2
  %15 = add nsw i32 %.01.i.1, -4
  %16 = icmp sgt i32 %15, 3
  br i1 %16, label %.lr.ph.i.2, label %._crit_edge.i.3

._crit_edge.i.3:                                  ; preds = %.lr.ph.i.2
  %17 = and i32 %2, 2
  br label %18

; <label>:18                                      ; preds = %._crit_edge.i.3, %14
  %.0.lcssa.i.4 = phi i32 [ %17, %._crit_edge.i.3 ], [ %2, %14 ]
  switch i32 %.0.lcssa.i.4, label %Indent.exit5 [
    i32 1, label %19
    i32 2, label %20
    i32 3, label %21
  ]

; <label>:19                                      ; preds = %18
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12.594, i64 0, i64 0)) #2
  br label %Indent.exit5

; <label>:20                                      ; preds = %18
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.13.595, i64 0, i64 0)) #2
  br label %Indent.exit5

; <label>:21                                      ; preds = %18
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.14.596, i64 0, i64 0)) #2
  br label %Indent.exit5

Indent.exit5:                                     ; preds = %18, %19, %20, %21
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.605, i64 0, i64 0)) #2
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @Ruby_GenSelector(%struct._tagTreeCCContext* nocapture readnone %context, %struct._tagTreeCCStream* %stream, %struct._tagTreeCCNode* nocapture readonly %node, i32 %level) #0 {
  %1 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 5
  %2 = load i32, i32* %1, align 4, !tbaa !34
  %3 = and i32 %2, 16
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %22, label %5

; <label>:5                                       ; preds = %0
  %6 = shl nsw i32 %level, 1
  %7 = add nsw i32 %6, 3
  %8 = icmp sgt i32 %level, 0
  br i1 %8, label %.lr.ph.i.preheader, label %12

.lr.ph.i.preheader:                               ; preds = %5
  br label %.lr.ph.i

.lr.ph.i:                                         ; preds = %.lr.ph.i.preheader, %.lr.ph.i
  %.01.i = phi i32 [ %9, %.lr.ph.i ], [ %7, %.lr.ph.i.preheader ]
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.11.593, i64 0, i64 0)) #2
  %9 = add nsw i32 %.01.i, -4
  %10 = icmp sgt i32 %9, 3
  br i1 %10, label %.lr.ph.i, label %._crit_edge.i

._crit_edge.i:                                    ; preds = %.lr.ph.i
  %11 = and i32 %7, 3
  br label %12

; <label>:12                                      ; preds = %._crit_edge.i, %5
  %.0.lcssa.i = phi i32 [ %11, %._crit_edge.i ], [ %7, %5 ]
  switch i32 %.0.lcssa.i, label %Indent.exit [
    i32 1, label %13
    i32 2, label %14
    i32 3, label %15
  ]

; <label>:13                                      ; preds = %12
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12.594, i64 0, i64 0)) #2
  br label %Indent.exit

; <label>:14                                      ; preds = %12
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.13.595, i64 0, i64 0)) #2
  br label %Indent.exit

; <label>:15                                      ; preds = %12
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.14.596, i64 0, i64 0)) #2
  br label %Indent.exit

Indent.exit:                                      ; preds = %12, %13, %14, %15
  %16 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 0
  %17 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %16, align 8, !tbaa !38
  %18 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %17, i64 0, i32 4
  %19 = load i8*, i8** %18, align 8, !tbaa !36
  %20 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 4
  %21 = load i8*, i8** %20, align 8, !tbaa !36
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.15.608, i64 0, i64 0), i8* %19, i8* %21) #2
  br label %38

; <label>:22                                      ; preds = %0
  %23 = and i32 %2, 8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %38

; <label>:25                                      ; preds = %22
  %26 = shl nsw i32 %level, 1
  %27 = add nsw i32 %26, 3
  %28 = icmp sgt i32 %level, 0
  br i1 %28, label %.lr.ph.i.2.preheader, label %32

.lr.ph.i.2.preheader:                             ; preds = %25
  br label %.lr.ph.i.2

.lr.ph.i.2:                                       ; preds = %.lr.ph.i.2.preheader, %.lr.ph.i.2
  %.01.i.1 = phi i32 [ %29, %.lr.ph.i.2 ], [ %27, %.lr.ph.i.2.preheader ]
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.11.593, i64 0, i64 0)) #2
  %29 = add nsw i32 %.01.i.1, -4
  %30 = icmp sgt i32 %29, 3
  br i1 %30, label %.lr.ph.i.2, label %._crit_edge.i.3

._crit_edge.i.3:                                  ; preds = %.lr.ph.i.2
  %31 = and i32 %27, 3
  br label %32

; <label>:32                                      ; preds = %._crit_edge.i.3, %25
  %.0.lcssa.i.4 = phi i32 [ %31, %._crit_edge.i.3 ], [ %27, %25 ]
  switch i32 %.0.lcssa.i.4, label %Indent.exit5 [
    i32 1, label %33
    i32 2, label %34
    i32 3, label %35
  ]

; <label>:33                                      ; preds = %32
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12.594, i64 0, i64 0)) #2
  br label %Indent.exit5

; <label>:34                                      ; preds = %32
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.13.595, i64 0, i64 0)) #2
  br label %Indent.exit5

; <label>:35                                      ; preds = %32
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.14.596, i64 0, i64 0)) #2
  br label %Indent.exit5

Indent.exit5:                                     ; preds = %32, %33, %34, %35
  %36 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 4
  %37 = load i8*, i8** %36, align 8, !tbaa !36
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.16.609, i64 0, i64 0), i8* %37) #2
  br label %38

; <label>:38                                      ; preds = %22, %Indent.exit5, %Indent.exit
  ret void
}

; Function Attrs: nounwind readnone uwtable
define internal void @Ruby_GenEndSelectors(%struct._tagTreeCCContext* nocapture %context, %struct._tagTreeCCStream* nocapture %stream, i32 %level) #6 {
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @Ruby_GenCaseFunc(%struct._tagTreeCCContext* nocapture readnone %context, %struct._tagTreeCCStream* %stream, %struct._tagTreeCCOperationCase* nocapture readonly %operCase, i32 %number) #0 {
  %1 = getelementptr inbounds %struct._tagTreeCCOperationCase, %struct._tagTreeCCOperationCase* %operCase, i64 0, i32 2
  %2 = load %struct._tagTreeCCOperation*, %struct._tagTreeCCOperation** %1, align 8, !tbaa !49
  %3 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %2, i64 0, i32 1
  %4 = load i8*, i8** %3, align 8, !tbaa !60
  %5 = icmp eq i8* %4, null
  %6 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %2, i64 0, i32 0
  %7 = load i8*, i8** %6, align 8, !tbaa !46
  %. = select i1 %5, i8* %7, i8* %4
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.17.607, i64 0, i64 0), i8* %., i8* %7, i32 %number) #2
  %8 = load %struct._tagTreeCCOperation*, %struct._tagTreeCCOperation** %1, align 8, !tbaa !49
  %9 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %8, i64 0, i32 4
  %param.0.2 = load %struct._tagTreeCCParam*, %struct._tagTreeCCParam** %9, align 8
  %10 = icmp eq %struct._tagTreeCCParam* %param.0.2, null
  br i1 %10, label %._crit_edge, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %0
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %19
  %param.06 = phi %struct._tagTreeCCParam* [ %param.0, %19 ], [ %param.0.2, %.lr.ph.preheader ]
  %needComma.05 = phi i1 [ false, %19 ], [ true, %.lr.ph.preheader ]
  %num.04 = phi i32 [ %num.1, %19 ], [ 1, %.lr.ph.preheader ]
  br i1 %needComma.05, label %12, label %11

; <label>:11                                      ; preds = %.lr.ph
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.599, i64 0, i64 0)) #2
  br label %12

; <label>:12                                      ; preds = %11, %.lr.ph
  %13 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.06, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8, !tbaa !41
  %15 = icmp eq i8* %14, null
  br i1 %15, label %17, label %16

; <label>:16                                      ; preds = %12
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4.600, i64 0, i64 0), i8* %14) #2
  br label %19

; <label>:17                                      ; preds = %12
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5.601, i64 0, i64 0), i32 %num.04) #2
  %18 = add nsw i32 %num.04, 1
  br label %19

; <label>:19                                      ; preds = %17, %16
  %num.1 = phi i32 [ %num.04, %16 ], [ %18, %17 ]
  %20 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.06, i64 0, i32 4
  %param.0 = load %struct._tagTreeCCParam*, %struct._tagTreeCCParam** %20, align 8
  %21 = icmp eq %struct._tagTreeCCParam* %param.0, null
  br i1 %21, label %._crit_edge.loopexit, label %.lr.ph

._crit_edge.loopexit:                             ; preds = %19
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %0
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7.603, i64 0, i64 0)) #2
  %22 = getelementptr inbounds %struct._tagTreeCCOperationCase, %struct._tagTreeCCOperationCase* %operCase, i64 0, i32 1
  %23 = load i8*, i8** %22, align 8, !tbaa !58
  %24 = icmp eq i8* %23, null
  br i1 %24, label %26, label %25

; <label>:25                                      ; preds = %._crit_edge
  tail call void @TreeCCStreamCodeIndent(%struct._tagTreeCCStream* %stream, i8* %23, i32 1) #2
  br label %26

; <label>:26                                      ; preds = %._crit_edge, %25
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.18.588, i64 0, i64 0)) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.605, i64 0, i64 0)) #2
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @Ruby_GenCaseCall(%struct._tagTreeCCContext* nocapture readnone %context, %struct._tagTreeCCStream* %stream, %struct._tagTreeCCOperationCase* nocapture readonly %operCase, i32 %number, i32 %level) #0 {
  %1 = shl nsw i32 %level, 1
  %2 = or i32 %1, 1
  %3 = icmp sgt i32 %2, 3
  br i1 %3, label %.lr.ph.i.preheader, label %7

.lr.ph.i.preheader:                               ; preds = %0
  br label %.lr.ph.i

.lr.ph.i:                                         ; preds = %.lr.ph.i.preheader, %.lr.ph.i
  %.01.i = phi i32 [ %4, %.lr.ph.i ], [ %2, %.lr.ph.i.preheader ]
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.11.593, i64 0, i64 0)) #2
  %4 = add nsw i32 %.01.i, -4
  %5 = icmp sgt i32 %4, 3
  br i1 %5, label %.lr.ph.i, label %._crit_edge.i

._crit_edge.i:                                    ; preds = %.lr.ph.i
  %6 = and i32 %2, 3
  br label %7

; <label>:7                                       ; preds = %._crit_edge.i, %0
  %.0.lcssa.i = phi i32 [ %6, %._crit_edge.i ], [ %2, %0 ]
  switch i32 %.0.lcssa.i, label %Indent.exit [
    i32 1, label %8
    i32 2, label %9
    i32 3, label %10
  ]

; <label>:8                                       ; preds = %7
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12.594, i64 0, i64 0)) #2
  br label %Indent.exit

; <label>:9                                       ; preds = %7
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.13.595, i64 0, i64 0)) #2
  br label %Indent.exit

; <label>:10                                      ; preds = %7
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.14.596, i64 0, i64 0)) #2
  br label %Indent.exit

Indent.exit:                                      ; preds = %7, %8, %9, %10
  %11 = getelementptr inbounds %struct._tagTreeCCOperationCase, %struct._tagTreeCCOperationCase* %operCase, i64 0, i32 2
  %12 = load %struct._tagTreeCCOperation*, %struct._tagTreeCCOperation** %11, align 8, !tbaa !49
  %13 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %12, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8, !tbaa !46
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.19.606, i64 0, i64 0), i8* %14, i32 %number) #2
  %15 = load %struct._tagTreeCCOperation*, %struct._tagTreeCCOperation** %11, align 8, !tbaa !49
  %16 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %15, i64 0, i32 4
  %param.0.2 = load %struct._tagTreeCCParam*, %struct._tagTreeCCParam** %16, align 8
  %17 = icmp eq %struct._tagTreeCCParam* %param.0.2, null
  br i1 %17, label %._crit_edge, label %.lr.ph

.lr.ph:                                           ; preds = %Indent.exit
  %18 = getelementptr inbounds %struct._tagTreeCCOperationCase, %struct._tagTreeCCOperationCase* %operCase, i64 0, i32 0
  %19 = load %struct._tagTreeCCTrigger*, %struct._tagTreeCCTrigger** %18, align 8, !tbaa !51
  br label %20

; <label>:20                                      ; preds = %.lr.ph, %45
  %param.06 = phi %struct._tagTreeCCParam* [ %param.0.2, %.lr.ph ], [ %param.0, %45 ]
  %needComma.05 = phi i1 [ true, %.lr.ph ], [ false, %45 ]
  %num.04 = phi i32 [ 1, %.lr.ph ], [ %num.1, %45 ]
  %trigger.03 = phi %struct._tagTreeCCTrigger* [ %19, %.lr.ph ], [ %trigger.1, %45 ]
  br i1 %needComma.05, label %22, label %21

; <label>:21                                      ; preds = %20
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.599, i64 0, i64 0)) #2
  br label %22

; <label>:22                                      ; preds = %20, %21
  %23 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.06, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8, !tbaa !41
  %25 = icmp eq i8* %24, null
  br i1 %25, label %27, label %26

; <label>:26                                      ; preds = %22
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4.600, i64 0, i64 0), i8* %24) #2
  br label %29

; <label>:27                                      ; preds = %22
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5.601, i64 0, i64 0), i32 %num.04) #2
  %28 = add nsw i32 %num.04, 1
  br label %29

; <label>:29                                      ; preds = %27, %26
  %num.1 = phi i32 [ %num.04, %26 ], [ %28, %27 ]
  %30 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.06, i64 0, i32 2
  %31 = load i32, i32* %30, align 4, !tbaa !52
  %32 = and i32 %31, 1
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %45, label %34

; <label>:34                                      ; preds = %29
  %35 = getelementptr inbounds %struct._tagTreeCCTrigger, %struct._tagTreeCCTrigger* %trigger.03, i64 0, i32 0
  %36 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %35, align 8, !tbaa !53
  %37 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %36, i64 0, i32 5
  %38 = load i32, i32* %37, align 4, !tbaa !34
  %39 = and i32 %38, 24
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

; <label>:41                                      ; preds = %34
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6.602, i64 0, i64 0)) #2
  br label %42

; <label>:42                                      ; preds = %41, %34
  %43 = getelementptr inbounds %struct._tagTreeCCTrigger, %struct._tagTreeCCTrigger* %trigger.03, i64 0, i32 1
  %44 = load %struct._tagTreeCCTrigger*, %struct._tagTreeCCTrigger** %43, align 8, !tbaa !55
  br label %45

; <label>:45                                      ; preds = %29, %42
  %trigger.1 = phi %struct._tagTreeCCTrigger* [ %44, %42 ], [ %trigger.03, %29 ]
  %46 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.06, i64 0, i32 4
  %param.0 = load %struct._tagTreeCCParam*, %struct._tagTreeCCParam** %46, align 8
  %47 = icmp eq %struct._tagTreeCCParam* %param.0, null
  br i1 %47, label %._crit_edge.loopexit, label %20

._crit_edge.loopexit:                             ; preds = %45
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %Indent.exit
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7.603, i64 0, i64 0)) #2
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @Ruby_GenCaseInline(%struct._tagTreeCCContext* nocapture readnone %context, %struct._tagTreeCCStream* %stream, %struct._tagTreeCCOperationCase* nocapture readonly %operCase, i32 %level) #0 {
  %1 = getelementptr inbounds %struct._tagTreeCCOperationCase, %struct._tagTreeCCOperationCase* %operCase, i64 0, i32 2
  %2 = load %struct._tagTreeCCOperation*, %struct._tagTreeCCOperation** %1, align 8, !tbaa !49
  %3 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %2, i64 0, i32 4
  %4 = getelementptr inbounds %struct._tagTreeCCOperationCase, %struct._tagTreeCCOperationCase* %operCase, i64 0, i32 0
  %5 = load %struct._tagTreeCCTrigger*, %struct._tagTreeCCTrigger** %4, align 8, !tbaa !51
  %param.0.12 = load %struct._tagTreeCCParam*, %struct._tagTreeCCParam** %3, align 8
  %6 = icmp eq %struct._tagTreeCCParam* %param.0.12, null
  %.pre = shl nsw i32 %level, 1
  %.pre17 = add nsw i32 %.pre, 4
  br i1 %6, label %._crit_edge, label %.lr.ph

.lr.ph:                                           ; preds = %0
  %7 = icmp sgt i32 %.pre17, 3
  %8 = and i32 %.pre17, 2
  br i1 %7, label %.lr.ph.split.us.preheader, label %.lr.ph..lr.ph.split_crit_edge.preheader

.lr.ph..lr.ph.split_crit_edge.preheader:          ; preds = %.lr.ph
  %cond20 = icmp eq i32 %.pre, -2
  br label %.lr.ph..lr.ph.split_crit_edge

.lr.ph.split.us.preheader:                        ; preds = %.lr.ph
  %cond = icmp eq i32 %8, 0
  br label %.lr.ph.split.us

.lr.ph.split.us:                                  ; preds = %.lr.ph.split.us.preheader, %31
  %param.014.us = phi %struct._tagTreeCCParam* [ %param.0.us, %31 ], [ %param.0.12, %.lr.ph.split.us.preheader ]
  %trigger.013.us = phi %struct._tagTreeCCTrigger* [ %trigger.1.us, %31 ], [ %5, %.lr.ph.split.us.preheader ]
  %9 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.014.us, i64 0, i32 2
  %10 = load i32, i32* %9, align 4, !tbaa !52
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %31, label %13

; <label>:13                                      ; preds = %.lr.ph.split.us
  %14 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.014.us, i64 0, i32 0
  %15 = load i8*, i8** %14, align 8, !tbaa !41
  %16 = icmp eq i8* %15, null
  br i1 %16, label %28, label %17

; <label>:17                                      ; preds = %13
  %18 = getelementptr inbounds %struct._tagTreeCCTrigger, %struct._tagTreeCCTrigger* %trigger.013.us, i64 0, i32 0
  %19 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %18, align 8, !tbaa !53
  %20 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %19, i64 0, i32 5
  %21 = load i32, i32* %20, align 4, !tbaa !34
  %22 = and i32 %21, 24
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %.lr.ph.i.us.preheader, label %28

.lr.ph.i.us.preheader:                            ; preds = %17
  br label %.lr.ph.i.us

.lr.ph.i.us:                                      ; preds = %.lr.ph.i.us.preheader, %.lr.ph.i.us
  %.01.i.us = phi i32 [ %24, %.lr.ph.i.us ], [ %.pre17, %.lr.ph.i.us.preheader ]
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.11.593, i64 0, i64 0)) #2
  %24 = add nsw i32 %.01.i.us, -4
  %25 = icmp sgt i32 %24, 3
  br i1 %25, label %.lr.ph.i.us, label %._crit_edge.i.us

._crit_edge.i.us:                                 ; preds = %.lr.ph.i.us
  br i1 %cond, label %Indent.exit.us, label %26

; <label>:26                                      ; preds = %._crit_edge.i.us
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.13.595, i64 0, i64 0)) #2
  br label %Indent.exit.us

Indent.exit.us:                                   ; preds = %._crit_edge.i.us, %26
  %27 = load i8*, i8** %14, align 8, !tbaa !41
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.20.604, i64 0, i64 0), i8* %27, i8* %27) #2
  br label %28

; <label>:28                                      ; preds = %Indent.exit.us, %17, %13
  %29 = getelementptr inbounds %struct._tagTreeCCTrigger, %struct._tagTreeCCTrigger* %trigger.013.us, i64 0, i32 1
  %30 = load %struct._tagTreeCCTrigger*, %struct._tagTreeCCTrigger** %29, align 8, !tbaa !55
  br label %31

; <label>:31                                      ; preds = %28, %.lr.ph.split.us
  %trigger.1.us = phi %struct._tagTreeCCTrigger* [ %30, %28 ], [ %trigger.013.us, %.lr.ph.split.us ]
  %32 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.014.us, i64 0, i32 4
  %param.0.us = load %struct._tagTreeCCParam*, %struct._tagTreeCCParam** %32, align 8
  %33 = icmp eq %struct._tagTreeCCParam* %param.0.us, null
  br i1 %33, label %._crit_edge.loopexit, label %.lr.ph.split.us

.lr.ph..lr.ph.split_crit_edge:                    ; preds = %.lr.ph..lr.ph.split_crit_edge.preheader, %55
  %param.014 = phi %struct._tagTreeCCParam* [ %param.0, %55 ], [ %param.0.12, %.lr.ph..lr.ph.split_crit_edge.preheader ]
  %trigger.013 = phi %struct._tagTreeCCTrigger* [ %trigger.1, %55 ], [ %5, %.lr.ph..lr.ph.split_crit_edge.preheader ]
  %34 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.014, i64 0, i32 2
  %35 = load i32, i32* %34, align 4, !tbaa !52
  %36 = and i32 %35, 1
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %55, label %38

; <label>:38                                      ; preds = %.lr.ph..lr.ph.split_crit_edge
  %39 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.014, i64 0, i32 0
  %40 = load i8*, i8** %39, align 8, !tbaa !41
  %41 = icmp eq i8* %40, null
  br i1 %41, label %52, label %42

; <label>:42                                      ; preds = %38
  %43 = getelementptr inbounds %struct._tagTreeCCTrigger, %struct._tagTreeCCTrigger* %trigger.013, i64 0, i32 0
  %44 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %43, align 8, !tbaa !53
  %45 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %44, i64 0, i32 5
  %46 = load i32, i32* %45, align 4, !tbaa !34
  %47 = and i32 %46, 24
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %52

; <label>:49                                      ; preds = %42
  br i1 %cond20, label %50, label %Indent.exit

; <label>:50                                      ; preds = %49
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.13.595, i64 0, i64 0)) #2
  br label %Indent.exit

Indent.exit:                                      ; preds = %49, %50
  %51 = load i8*, i8** %39, align 8, !tbaa !41
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.20.604, i64 0, i64 0), i8* %51, i8* %51) #2
  br label %52

; <label>:52                                      ; preds = %38, %42, %Indent.exit
  %53 = getelementptr inbounds %struct._tagTreeCCTrigger, %struct._tagTreeCCTrigger* %trigger.013, i64 0, i32 1
  %54 = load %struct._tagTreeCCTrigger*, %struct._tagTreeCCTrigger** %53, align 8, !tbaa !55
  br label %55

; <label>:55                                      ; preds = %.lr.ph..lr.ph.split_crit_edge, %52
  %trigger.1 = phi %struct._tagTreeCCTrigger* [ %54, %52 ], [ %trigger.013, %.lr.ph..lr.ph.split_crit_edge ]
  %56 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.014, i64 0, i32 4
  %param.0 = load %struct._tagTreeCCParam*, %struct._tagTreeCCParam** %56, align 8
  %57 = icmp eq %struct._tagTreeCCParam* %param.0, null
  br i1 %57, label %._crit_edge.loopexit22, label %.lr.ph..lr.ph.split_crit_edge

._crit_edge.loopexit:                             ; preds = %31
  br label %._crit_edge

._crit_edge.loopexit22:                           ; preds = %55
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit22, %._crit_edge.loopexit, %0
  %58 = icmp sgt i32 %.pre17, 3
  br i1 %58, label %.lr.ph.i.3.preheader, label %62

.lr.ph.i.3.preheader:                             ; preds = %._crit_edge
  br label %.lr.ph.i.3

.lr.ph.i.3:                                       ; preds = %.lr.ph.i.3.preheader, %.lr.ph.i.3
  %.01.i.2 = phi i32 [ %59, %.lr.ph.i.3 ], [ %.pre17, %.lr.ph.i.3.preheader ]
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.11.593, i64 0, i64 0)) #2
  %59 = add nsw i32 %.01.i.2, -4
  %60 = icmp sgt i32 %59, 3
  br i1 %60, label %.lr.ph.i.3, label %._crit_edge.i.4

._crit_edge.i.4:                                  ; preds = %.lr.ph.i.3
  %61 = and i32 %.pre17, 2
  br label %62

; <label>:62                                      ; preds = %._crit_edge.i.4, %._crit_edge
  %.0.lcssa.i.5 = phi i32 [ %61, %._crit_edge.i.4 ], [ %.pre17, %._crit_edge ]
  switch i32 %.0.lcssa.i.5, label %Indent.exit6 [
    i32 1, label %63
    i32 2, label %64
    i32 3, label %65
  ]

; <label>:63                                      ; preds = %62
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12.594, i64 0, i64 0)) #2
  br label %Indent.exit6

; <label>:64                                      ; preds = %62
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.13.595, i64 0, i64 0)) #2
  br label %Indent.exit6

; <label>:65                                      ; preds = %62
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.14.596, i64 0, i64 0)) #2
  br label %Indent.exit6

Indent.exit6:                                     ; preds = %62, %63, %64, %65
  %66 = getelementptr inbounds %struct._tagTreeCCOperationCase, %struct._tagTreeCCOperationCase* %operCase, i64 0, i32 1
  %67 = load i8*, i8** %66, align 8, !tbaa !58
  %68 = icmp eq i8* %67, null
  br i1 %68, label %72, label %69

; <label>:69                                      ; preds = %Indent.exit6
  %70 = shl i32 %level, 2
  %71 = add i32 %70, 6
  tail call void @TreeCCStreamCodeIndentCustom(%struct._tagTreeCCStream* %stream, i8* %67, i8 signext 32, i32 %71) #2
  br label %72

; <label>:72                                      ; preds = %Indent.exit6, %69
  br i1 %58, label %.lr.ph.i.8.preheader, label %76

.lr.ph.i.8.preheader:                             ; preds = %72
  br label %.lr.ph.i.8

.lr.ph.i.8:                                       ; preds = %.lr.ph.i.8.preheader, %.lr.ph.i.8
  %.01.i.7 = phi i32 [ %73, %.lr.ph.i.8 ], [ %.pre17, %.lr.ph.i.8.preheader ]
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.11.593, i64 0, i64 0)) #2
  %73 = add nsw i32 %.01.i.7, -4
  %74 = icmp sgt i32 %73, 3
  br i1 %74, label %.lr.ph.i.8, label %._crit_edge.i.9

._crit_edge.i.9:                                  ; preds = %.lr.ph.i.8
  %75 = and i32 %.pre17, 2
  br label %76

; <label>:76                                      ; preds = %._crit_edge.i.9, %72
  %.0.lcssa.i.10 = phi i32 [ %75, %._crit_edge.i.9 ], [ %.pre17, %72 ]
  switch i32 %.0.lcssa.i.10, label %Indent.exit11 [
    i32 1, label %77
    i32 2, label %78
    i32 3, label %79
  ]

; <label>:77                                      ; preds = %76
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12.594, i64 0, i64 0)) #2
  br label %Indent.exit11

; <label>:78                                      ; preds = %76
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.13.595, i64 0, i64 0)) #2
  br label %Indent.exit11

; <label>:79                                      ; preds = %76
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.14.596, i64 0, i64 0)) #2
  br label %Indent.exit11

Indent.exit11:                                    ; preds = %76, %77, %78, %79
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.605, i64 0, i64 0)) #2
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @Ruby_GenCaseSplit(%struct._tagTreeCCContext* nocapture readnone %context, %struct._tagTreeCCStream* %stream, %struct._tagTreeCCOperationCase* nocapture readonly %operCase, i32 %number, i32 %level) #0 {
  %1 = shl nsw i32 %level, 1
  %2 = add nsw i32 %1, 2
  %3 = icmp sgt i32 %2, 3
  br i1 %3, label %.lr.ph.i.preheader, label %7

.lr.ph.i.preheader:                               ; preds = %0
  br label %.lr.ph.i

.lr.ph.i:                                         ; preds = %.lr.ph.i.preheader, %.lr.ph.i
  %.01.i = phi i32 [ %4, %.lr.ph.i ], [ %2, %.lr.ph.i.preheader ]
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.11.593, i64 0, i64 0)) #2
  %4 = add nsw i32 %.01.i, -4
  %5 = icmp sgt i32 %4, 3
  br i1 %5, label %.lr.ph.i, label %._crit_edge.i

._crit_edge.i:                                    ; preds = %.lr.ph.i
  %6 = and i32 %2, 2
  br label %7

; <label>:7                                       ; preds = %._crit_edge.i, %0
  %.0.lcssa.i = phi i32 [ %6, %._crit_edge.i ], [ %2, %0 ]
  switch i32 %.0.lcssa.i, label %Indent.exit [
    i32 1, label %8
    i32 2, label %9
    i32 3, label %10
  ]

; <label>:8                                       ; preds = %7
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12.594, i64 0, i64 0)) #2
  br label %Indent.exit

; <label>:9                                       ; preds = %7
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.13.595, i64 0, i64 0)) #2
  br label %Indent.exit

; <label>:10                                      ; preds = %7
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.14.596, i64 0, i64 0)) #2
  br label %Indent.exit

Indent.exit:                                      ; preds = %7, %8, %9, %10
  %11 = getelementptr inbounds %struct._tagTreeCCOperationCase, %struct._tagTreeCCOperationCase* %operCase, i64 0, i32 2
  %12 = load %struct._tagTreeCCOperation*, %struct._tagTreeCCOperation** %11, align 8, !tbaa !49
  %13 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %12, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8, !tbaa !46
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.21.598, i64 0, i64 0), i8* %14, i32 %number) #2
  %15 = load %struct._tagTreeCCOperation*, %struct._tagTreeCCOperation** %11, align 8, !tbaa !49
  %16 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %15, i64 0, i32 4
  %param.0.4 = load %struct._tagTreeCCParam*, %struct._tagTreeCCParam** %16, align 8
  %17 = icmp eq %struct._tagTreeCCParam* %param.0.4, null
  br i1 %17, label %._crit_edge, label %.lr.ph

.lr.ph:                                           ; preds = %Indent.exit
  %18 = getelementptr inbounds %struct._tagTreeCCOperationCase, %struct._tagTreeCCOperationCase* %operCase, i64 0, i32 0
  %19 = load %struct._tagTreeCCTrigger*, %struct._tagTreeCCTrigger** %18, align 8, !tbaa !51
  br label %20

; <label>:20                                      ; preds = %.lr.ph, %59
  %param.08 = phi %struct._tagTreeCCParam* [ %param.0.4, %.lr.ph ], [ %param.0, %59 ]
  %needComma.07 = phi i1 [ true, %.lr.ph ], [ false, %59 ]
  %num.06 = phi i32 [ 1, %.lr.ph ], [ %num.1, %59 ]
  %trigger.05 = phi %struct._tagTreeCCTrigger* [ %19, %.lr.ph ], [ %trigger.1, %59 ]
  br i1 %needComma.07, label %22, label %21

; <label>:21                                      ; preds = %20
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.599, i64 0, i64 0)) #2
  br label %22

; <label>:22                                      ; preds = %20, %21
  %23 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.08, i64 0, i32 2
  %24 = load i32, i32* %23, align 4, !tbaa !52
  %25 = and i32 %24, 1
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %37, label %27

; <label>:27                                      ; preds = %22
  %28 = getelementptr inbounds %struct._tagTreeCCTrigger, %struct._tagTreeCCTrigger* %trigger.05, i64 0, i32 0
  %29 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %28, align 8, !tbaa !53
  %30 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %29, i64 0, i32 5
  %31 = load i32, i32* %30, align 4, !tbaa !34
  %32 = and i32 %31, 24
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %37

; <label>:34                                      ; preds = %27
  %35 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %29, i64 0, i32 4
  %36 = load i8*, i8** %35, align 8, !tbaa !36
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4.600, i64 0, i64 0), i8* %36) #2
  br label %37

; <label>:37                                      ; preds = %22, %27, %34
  %38 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.08, i64 0, i32 0
  %39 = load i8*, i8** %38, align 8, !tbaa !41
  %40 = icmp eq i8* %39, null
  br i1 %40, label %42, label %41

; <label>:41                                      ; preds = %37
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4.600, i64 0, i64 0), i8* %39) #2
  br label %44

; <label>:42                                      ; preds = %37
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5.601, i64 0, i64 0), i32 %num.06) #2
  %43 = add nsw i32 %num.06, 1
  br label %44

; <label>:44                                      ; preds = %42, %41
  %num.1 = phi i32 [ %num.06, %41 ], [ %43, %42 ]
  %45 = load i32, i32* %23, align 4, !tbaa !52
  %46 = and i32 %45, 1
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %59, label %48

; <label>:48                                      ; preds = %44
  %49 = getelementptr inbounds %struct._tagTreeCCTrigger, %struct._tagTreeCCTrigger* %trigger.05, i64 0, i32 0
  %50 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %49, align 8, !tbaa !53
  %51 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %50, i64 0, i32 5
  %52 = load i32, i32* %51, align 4, !tbaa !34
  %53 = and i32 %52, 24
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %56

; <label>:55                                      ; preds = %48
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6.602, i64 0, i64 0)) #2
  br label %56

; <label>:56                                      ; preds = %55, %48
  %57 = getelementptr inbounds %struct._tagTreeCCTrigger, %struct._tagTreeCCTrigger* %trigger.05, i64 0, i32 1
  %58 = load %struct._tagTreeCCTrigger*, %struct._tagTreeCCTrigger** %57, align 8, !tbaa !55
  br label %59

; <label>:59                                      ; preds = %44, %56
  %trigger.1 = phi %struct._tagTreeCCTrigger* [ %58, %56 ], [ %trigger.05, %44 ]
  %60 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.08, i64 0, i32 4
  %param.0 = load %struct._tagTreeCCParam*, %struct._tagTreeCCParam** %60, align 8
  %61 = icmp eq %struct._tagTreeCCParam* %param.0, null
  br i1 %61, label %._crit_edge.loopexit, label %20

._crit_edge.loopexit:                             ; preds = %59
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %Indent.exit
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7.603, i64 0, i64 0)) #2
  ret void
}

; Function Attrs: nounwind readnone uwtable
define internal void @Ruby_GenEndCase(%struct._tagTreeCCContext* nocapture %context, %struct._tagTreeCCStream* nocapture %stream, i32 %level) #6 {
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @Ruby_GenEndSwitch(%struct._tagTreeCCContext* nocapture readnone %context, %struct._tagTreeCCStream* %stream, i32 %level) #0 {
  %1 = shl nsw i32 %level, 1
  %2 = add nsw i32 %1, 3
  %3 = icmp sgt i32 %level, 0
  br i1 %3, label %.lr.ph.i.preheader, label %7

.lr.ph.i.preheader:                               ; preds = %0
  br label %.lr.ph.i

.lr.ph.i:                                         ; preds = %.lr.ph.i.preheader, %.lr.ph.i
  %.01.i = phi i32 [ %4, %.lr.ph.i ], [ %2, %.lr.ph.i.preheader ]
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.11.593, i64 0, i64 0)) #2
  %4 = add nsw i32 %.01.i, -4
  %5 = icmp sgt i32 %4, 3
  br i1 %5, label %.lr.ph.i, label %._crit_edge.i

._crit_edge.i:                                    ; preds = %.lr.ph.i
  %6 = and i32 %2, 3
  br label %7

; <label>:7                                       ; preds = %._crit_edge.i, %0
  %.0.lcssa.i = phi i32 [ %6, %._crit_edge.i ], [ %2, %0 ]
  switch i32 %.0.lcssa.i, label %Indent.exit [
    i32 1, label %8
    i32 2, label %9
    i32 3, label %10
  ]

; <label>:8                                       ; preds = %7
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12.594, i64 0, i64 0)) #2
  br label %Indent.exit

; <label>:9                                       ; preds = %7
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.13.595, i64 0, i64 0)) #2
  br label %Indent.exit

; <label>:10                                      ; preds = %7
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.14.596, i64 0, i64 0)) #2
  br label %Indent.exit

Indent.exit:                                      ; preds = %7, %8, %9, %10
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.22.597, i64 0, i64 0)) #2
  %11 = add nsw i32 %1, 2
  %12 = icmp sgt i32 %11, 3
  br i1 %12, label %.lr.ph.i.2.preheader, label %16

.lr.ph.i.2.preheader:                             ; preds = %Indent.exit
  br label %.lr.ph.i.2

.lr.ph.i.2:                                       ; preds = %.lr.ph.i.2.preheader, %.lr.ph.i.2
  %.01.i.1 = phi i32 [ %13, %.lr.ph.i.2 ], [ %11, %.lr.ph.i.2.preheader ]
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.11.593, i64 0, i64 0)) #2
  %13 = add nsw i32 %.01.i.1, -4
  %14 = icmp sgt i32 %13, 3
  br i1 %14, label %.lr.ph.i.2, label %._crit_edge.i.3

._crit_edge.i.3:                                  ; preds = %.lr.ph.i.2
  %15 = and i32 %11, 2
  br label %16

; <label>:16                                      ; preds = %._crit_edge.i.3, %Indent.exit
  %.0.lcssa.i.4 = phi i32 [ %15, %._crit_edge.i.3 ], [ %11, %Indent.exit ]
  switch i32 %.0.lcssa.i.4, label %Indent.exit5 [
    i32 1, label %17
    i32 2, label %18
    i32 3, label %19
  ]

; <label>:17                                      ; preds = %16
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12.594, i64 0, i64 0)) #2
  br label %Indent.exit5

; <label>:18                                      ; preds = %16
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.13.595, i64 0, i64 0)) #2
  br label %Indent.exit5

; <label>:19                                      ; preds = %16
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.14.596, i64 0, i64 0)) #2
  br label %Indent.exit5

Indent.exit5:                                     ; preds = %16, %17, %18, %19
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.18.588, i64 0, i64 0)) #2
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @Ruby_GenExit(%struct._tagTreeCCContext* nocapture readnone %context, %struct._tagTreeCCStream* %stream, %struct._tagTreeCCOperation* nocapture readonly %oper) #0 {
  %1 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %oper, i64 0, i32 2
  %2 = load i8*, i8** %1, align 8, !tbaa !45
  %3 = tail call i32 @strcmp(i8* %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23.589, i64 0, i64 0)) #2
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %11, label %5

; <label>:5                                       ; preds = %0
  %6 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %oper, i64 0, i32 3
  %7 = load i8*, i8** %6, align 8, !tbaa !59
  %8 = icmp eq i8* %7, null
  br i1 %8, label %10, label %9

; <label>:9                                       ; preds = %5
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.24.590, i64 0, i64 0), i8* %7) #2
  br label %11

; <label>:10                                      ; preds = %5
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.25.591, i64 0, i64 0)) #2
  br label %11

; <label>:11                                      ; preds = %0, %9, %10
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.26.592, i64 0, i64 0)) #2
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @Ruby_GenEnd(%struct._tagTreeCCContext* nocapture readnone %context, %struct._tagTreeCCStream* %stream, %struct._tagTreeCCOperation* nocapture readnone %oper) #0 {
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.18.588, i64 0, i64 0)) #2
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @RubyGenEntry(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %stream, %struct._tagTreeCCOperation* nocapture readonly %oper, i32 %number) #0 {
  %1 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %oper, i64 0, i32 1
  %2 = load i8*, i8** %1, align 8, !tbaa !60
  %3 = icmp eq i8* %2, null
  %4 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %oper, i64 0, i32 0
  %5 = load i8*, i8** %4, align 8, !tbaa !46
  %. = select i1 %3, i8* %5, i8* %2
  %6 = icmp eq i32 %number, -1
  br i1 %6, label %8, label %7

; <label>:7                                       ; preds = %0
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.1.612, i64 0, i64 0), i8* %., i8* %5, i32 %number) #2
  br label %9

; <label>:8                                       ; preds = %0
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2.613, i64 0, i64 0), i8* %., i8* %5) #2
  br label %9

; <label>:9                                       ; preds = %8, %7
  %10 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %oper, i64 0, i32 4
  %param.0.2 = load %struct._tagTreeCCParam*, %struct._tagTreeCCParam** %10, align 8
  %11 = icmp eq %struct._tagTreeCCParam* %param.0.2, null
  br i1 %11, label %._crit_edge, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %9
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %IsEnumType.exit.thread1
  %param.05 = phi %struct._tagTreeCCParam* [ %param.0, %IsEnumType.exit.thread1 ], [ %param.0.2, %.lr.ph.preheader ]
  %needComma.04 = phi i1 [ false, %IsEnumType.exit.thread1 ], [ true, %.lr.ph.preheader ]
  %num.03 = phi i32 [ %num.1, %IsEnumType.exit.thread1 ], [ 1, %.lr.ph.preheader ]
  br i1 %needComma.04, label %13, label %12

; <label>:12                                      ; preds = %.lr.ph
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.599, i64 0, i64 0)) #2
  br label %13

; <label>:13                                      ; preds = %.lr.ph, %12
  %14 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.05, i64 0, i32 0
  %15 = load i8*, i8** %14, align 8, !tbaa !41
  %16 = icmp eq i8* %15, null
  br i1 %16, label %18, label %17

; <label>:17                                      ; preds = %13
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4.600, i64 0, i64 0), i8* %15) #2
  br label %20

; <label>:18                                      ; preds = %13
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5.601, i64 0, i64 0), i32 %num.03) #2
  %19 = add nsw i32 %num.03, 1
  br label %20

; <label>:20                                      ; preds = %18, %17
  %num.1 = phi i32 [ %num.03, %17 ], [ %19, %18 ]
  %21 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.05, i64 0, i32 2
  %22 = load i32, i32* %21, align 4, !tbaa !52
  %23 = and i32 %22, 1
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %IsEnumType.exit.thread1, label %25

; <label>:25                                      ; preds = %20
  %26 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.05, i64 0, i32 1
  %27 = load i8*, i8** %26, align 8, !tbaa !47
  %28 = tail call %struct._tagTreeCCNode* @TreeCCNodeFindByType(%struct._tagTreeCCContext* %context, i8* %27) #2
  %29 = icmp eq %struct._tagTreeCCNode* %28, null
  br i1 %29, label %35, label %30

; <label>:30                                      ; preds = %25
  %31 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %28, i64 0, i32 5
  %32 = load i32, i32* %31, align 4, !tbaa !34
  %33 = and i32 %32, 8
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %IsEnumType.exit.thread1

; <label>:35                                      ; preds = %25, %30
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6.602, i64 0, i64 0)) #2
  br label %IsEnumType.exit.thread1

IsEnumType.exit.thread1:                          ; preds = %30, %20, %35
  %36 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.05, i64 0, i32 4
  %param.0 = load %struct._tagTreeCCParam*, %struct._tagTreeCCParam** %36, align 8
  %37 = icmp eq %struct._tagTreeCCParam* %param.0, null
  br i1 %37, label %._crit_edge.loopexit, label %.lr.ph

._crit_edge.loopexit:                             ; preds = %IsEnumType.exit.thread1
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %9
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7.603, i64 0, i64 0)) #2
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @CreateParams.622(%struct._tagTreeCCStream* %stream, %struct._tagTreeCCNode* nocapture readonly %node, i32 %needComma) #0 {
  %1 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 0
  %2 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %1, align 8, !tbaa !38
  %3 = icmp eq %struct._tagTreeCCNode* %2, null
  br i1 %3, label %6, label %4

; <label>:4                                       ; preds = %0
  %5 = tail call fastcc i32 @CreateParams.622(%struct._tagTreeCCStream* %stream, %struct._tagTreeCCNode* %2, i32 %needComma)
  br label %6

; <label>:6                                       ; preds = %0, %4
  %.0 = phi i32 [ %5, %4 ], [ %needComma, %0 ]
  %7 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 10
  %field.0.1 = load %struct._tagTreeCCField*, %struct._tagTreeCCField** %7, align 8
  %8 = icmp eq %struct._tagTreeCCField* %field.0.1, null
  br i1 %8, label %._crit_edge, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %6
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %19
  %field.03 = phi %struct._tagTreeCCField* [ %field.0, %19 ], [ %field.0.1, %.lr.ph.preheader ]
  %.12 = phi i32 [ %.2, %19 ], [ %.0, %.lr.ph.preheader ]
  %9 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.03, i64 0, i32 3
  %10 = load i32, i32* %9, align 4, !tbaa !61
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %19

; <label>:13                                      ; preds = %.lr.ph
  %14 = icmp eq i32 %.12, 0
  br i1 %14, label %16, label %15

; <label>:15                                      ; preds = %13
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.599, i64 0, i64 0)) #2
  br label %16

; <label>:16                                      ; preds = %13, %15
  %17 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.03, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8, !tbaa !64
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4.600, i64 0, i64 0), i8* %18) #2
  br label %19

; <label>:19                                      ; preds = %16, %.lr.ph
  %.2 = phi i32 [ 1, %16 ], [ %.12, %.lr.ph ]
  %20 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.03, i64 0, i32 6
  %field.0 = load %struct._tagTreeCCField*, %struct._tagTreeCCField** %20, align 8
  %21 = icmp eq %struct._tagTreeCCField* %field.0, null
  br i1 %21, label %._crit_edge.loopexit, label %.lr.ph

._crit_edge.loopexit:                             ; preds = %19
  %.2.lcssa = phi i32 [ %.2, %19 ]
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %6
  %.1.lcssa = phi i32 [ %.0, %6 ], [ %.2.lcssa, %._crit_edge.loopexit ]
  ret i32 %.1.lcssa
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @InheritParamsSource.625(%struct._tagTreeCCStream* %stream, %struct._tagTreeCCNode* nocapture readonly %node, i32 %needComma) #0 {
  %1 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 0
  %2 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %1, align 8, !tbaa !38
  %3 = icmp eq %struct._tagTreeCCNode* %2, null
  br i1 %3, label %6, label %4

; <label>:4                                       ; preds = %0
  %5 = tail call fastcc i32 @InheritParamsSource.625(%struct._tagTreeCCStream* %stream, %struct._tagTreeCCNode* %2, i32 %needComma)
  br label %6

; <label>:6                                       ; preds = %0, %4
  %.0 = phi i32 [ %5, %4 ], [ %needComma, %0 ]
  %7 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 10
  %field.0.1 = load %struct._tagTreeCCField*, %struct._tagTreeCCField** %7, align 8
  %8 = icmp eq %struct._tagTreeCCField* %field.0.1, null
  br i1 %8, label %._crit_edge, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %6
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %19
  %field.03 = phi %struct._tagTreeCCField* [ %field.0, %19 ], [ %field.0.1, %.lr.ph.preheader ]
  %.12 = phi i32 [ %.2, %19 ], [ %.0, %.lr.ph.preheader ]
  %9 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.03, i64 0, i32 3
  %10 = load i32, i32* %9, align 4, !tbaa !61
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %19

; <label>:13                                      ; preds = %.lr.ph
  %14 = icmp eq i32 %.12, 0
  br i1 %14, label %16, label %15

; <label>:15                                      ; preds = %13
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.599, i64 0, i64 0)) #2
  br label %16

; <label>:16                                      ; preds = %13, %15
  %17 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.03, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8, !tbaa !64
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4.600, i64 0, i64 0), i8* %18) #2
  br label %19

; <label>:19                                      ; preds = %16, %.lr.ph
  %.2 = phi i32 [ 1, %16 ], [ %.12, %.lr.ph ]
  %20 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.03, i64 0, i32 6
  %field.0 = load %struct._tagTreeCCField*, %struct._tagTreeCCField** %20, align 8
  %21 = icmp eq %struct._tagTreeCCField* %field.0, null
  br i1 %21, label %._crit_edge.loopexit, label %.lr.ph

._crit_edge.loopexit:                             ; preds = %19
  %.2.lcssa = phi i32 [ %.2, %19 ]
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %6
  %.1.lcssa = phi i32 [ %.0, %6 ], [ %.2.lcssa, %._crit_edge.loopexit ]
  ret i32 %.1.lcssa
}

; Function Attrs: nounwind uwtable
define internal fastcc void @ImplementVirtuals.633(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %stream, %struct._tagTreeCCNode* readonly %node, %struct._tagTreeCCNode* %actualNode) #0 {
  %1 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 0
  %2 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %1, align 8, !tbaa !38
  %3 = icmp eq %struct._tagTreeCCNode* %2, null
  br i1 %3, label %5, label %4

; <label>:4                                       ; preds = %0
  tail call fastcc void @ImplementVirtuals.633(%struct._tagTreeCCContext* %context, %struct._tagTreeCCStream* %stream, %struct._tagTreeCCNode* %2, %struct._tagTreeCCNode* %actualNode)
  br label %5

; <label>:5                                       ; preds = %0, %4
  %6 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 11
  %virt.0.18 = load %struct._tagTreeCCVirtual*, %struct._tagTreeCCVirtual** %6, align 8
  %7 = icmp eq %struct._tagTreeCCVirtual* %virt.0.18, null
  br i1 %7, label %._crit_edge.23, label %.lr.ph22

.lr.ph22:                                         ; preds = %5
  %8 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %actualNode, i64 0, i32 4
  %9 = icmp eq %struct._tagTreeCCNode* %node, %actualNode
  br label %10

; <label>:10                                      ; preds = %.lr.ph22, %.backedge
  %virt.019 = phi %struct._tagTreeCCVirtual* [ %virt.0.18, %.lr.ph22 ], [ %virt.0, %.backedge ]
  %11 = getelementptr inbounds %struct._tagTreeCCVirtual, %struct._tagTreeCCVirtual* %virt.019, i64 0, i32 0
  %12 = load i8*, i8** %11, align 8, !tbaa !39
  %13 = tail call %struct._tagTreeCCOperationCase* @TreeCCOperationFindCase(%struct._tagTreeCCContext* %context, %struct._tagTreeCCNode* %actualNode, i8* %12) #2
  %14 = icmp eq %struct._tagTreeCCOperationCase* %13, null
  br i1 %14, label %.preheader.preheader, label %24

.preheader.preheader:                             ; preds = %10
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %16
  %actualNode.pn = phi %struct._tagTreeCCNode* [ %tempNode.0, %16 ], [ %actualNode, %.preheader.preheader ]
  %tempNode.0.in = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %actualNode.pn, i64 0, i32 0
  %tempNode.0 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %tempNode.0.in, align 8
  %15 = icmp eq %struct._tagTreeCCNode* %tempNode.0, null
  br i1 %15, label %20, label %16

; <label>:16                                      ; preds = %.preheader
  %17 = load i8*, i8** %11, align 8, !tbaa !39
  %18 = tail call %struct._tagTreeCCOperationCase* @TreeCCOperationFindCase(%struct._tagTreeCCContext* %context, %struct._tagTreeCCNode* %tempNode.0, i8* %17) #2
  %19 = icmp eq %struct._tagTreeCCOperationCase* %18, null
  br i1 %19, label %.preheader, label %.backedge.loopexit

; <label>:20                                      ; preds = %.preheader
  br i1 %9, label %21, label %.backedge

; <label>:21                                      ; preds = %20
  %22 = load i8*, i8** %11, align 8, !tbaa !39
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.67.643, i64 0, i64 0), i8* %22) #2
  br label %26

.backedge.loopexit:                               ; preds = %16
  br label %.backedge

.backedge:                                        ; preds = %.backedge.loopexit, %71, %70, %20
  %virt.0.in.be = getelementptr inbounds %struct._tagTreeCCVirtual, %struct._tagTreeCCVirtual* %virt.019, i64 0, i32 4
  %virt.0 = load %struct._tagTreeCCVirtual*, %struct._tagTreeCCVirtual** %virt.0.in.be, align 8
  %23 = icmp eq %struct._tagTreeCCVirtual* %virt.0, null
  br i1 %23, label %._crit_edge.23.loopexit, label %10

; <label>:24                                      ; preds = %10
  %25 = load i8*, i8** %11, align 8, !tbaa !39
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.67.643, i64 0, i64 0), i8* %25) #2
  br label %26

; <label>:26                                      ; preds = %24, %21
  %27 = phi i1 [ false, %24 ], [ true, %21 ]
  %operCase.2.ph9 = phi %struct._tagTreeCCOperationCase* [ %13, %24 ], [ null, %21 ]
  %28 = getelementptr inbounds %struct._tagTreeCCVirtual, %struct._tagTreeCCVirtual* %virt.019, i64 0, i32 3
  %29 = load %struct._tagTreeCCOperation*, %struct._tagTreeCCOperation** %28, align 8, !tbaa !70
  %30 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %29, i64 0, i32 4
  %param.0.13 = load %struct._tagTreeCCParam*, %struct._tagTreeCCParam** %30, align 8
  %31 = icmp eq %struct._tagTreeCCParam* %param.0.13, null
  br i1 %31, label %._crit_edge, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %26
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %46
  %param.017 = phi %struct._tagTreeCCParam* [ %param.0, %46 ], [ %param.0.13, %.lr.ph.preheader ]
  %needComma.016 = phi i32 [ %needComma.1, %46 ], [ 0, %.lr.ph.preheader ]
  %first.015 = phi i32 [ 0, %46 ], [ 1, %.lr.ph.preheader ]
  %num.014 = phi i32 [ %num.3, %46 ], [ 1, %.lr.ph.preheader ]
  %32 = icmp eq i32 %needComma.016, 0
  br i1 %32, label %34, label %33

; <label>:33                                      ; preds = %.lr.ph
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.599, i64 0, i64 0)) #2
  br label %34

; <label>:34                                      ; preds = %.lr.ph, %33
  %35 = icmp eq i32 %first.015, 0
  %36 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.017, i64 0, i32 0
  %37 = load i8*, i8** %36, align 8, !tbaa !41
  %38 = icmp ne i8* %37, null
  br i1 %35, label %42, label %39

; <label>:39                                      ; preds = %34
  %40 = zext i1 %38 to i32
  %41 = xor i32 %40, 1
  %num.0. = add nsw i32 %41, %num.014
  br label %46

; <label>:42                                      ; preds = %34
  br i1 %38, label %43, label %44

; <label>:43                                      ; preds = %42
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4.600, i64 0, i64 0), i8* %37) #2
  br label %46

; <label>:44                                      ; preds = %42
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.68.644, i64 0, i64 0), i32 %num.014) #2
  %45 = add nsw i32 %num.014, 1
  br label %46

; <label>:46                                      ; preds = %43, %44, %39
  %num.3 = phi i32 [ %num.0., %39 ], [ %num.014, %43 ], [ %45, %44 ]
  %needComma.1 = phi i32 [ %needComma.016, %39 ], [ 1, %43 ], [ 1, %44 ]
  %47 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.017, i64 0, i32 4
  %param.0 = load %struct._tagTreeCCParam*, %struct._tagTreeCCParam** %47, align 8
  %48 = icmp eq %struct._tagTreeCCParam* %param.0, null
  br i1 %48, label %._crit_edge.loopexit, label %.lr.ph

._crit_edge.loopexit:                             ; preds = %46
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %26
  br i1 %27, label %71, label %49

; <label>:49                                      ; preds = %._crit_edge
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7.603, i64 0, i64 0)) #2
  %50 = getelementptr inbounds %struct._tagTreeCCOperationCase, %struct._tagTreeCCOperationCase* %operCase.2.ph9, i64 0, i32 7
  %51 = load i64, i64* %50, align 8, !tbaa !56
  %52 = getelementptr inbounds %struct._tagTreeCCOperationCase, %struct._tagTreeCCOperationCase* %operCase.2.ph9, i64 0, i32 6
  %53 = load i8*, i8** %52, align 8, !tbaa !57
  tail call void @TreeCCStreamLine(%struct._tagTreeCCStream* %stream, i64 %51, i8* %53) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12.594, i64 0, i64 0)) #2
  %54 = load %struct._tagTreeCCOperation*, %struct._tagTreeCCOperation** %28, align 8, !tbaa !70
  %55 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %54, i64 0, i32 4
  %56 = load %struct._tagTreeCCParam*, %struct._tagTreeCCParam** %55, align 8, !tbaa !68
  %57 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %56, i64 0, i32 0
  %58 = load i8*, i8** %57, align 8, !tbaa !41
  %59 = icmp eq i8* %58, null
  br i1 %59, label %63, label %60

; <label>:60                                      ; preds = %49
  %61 = tail call i32 @strcmp(i8* %58, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.69.645, i64 0, i64 0)) #2
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %66

; <label>:63                                      ; preds = %60, %49
  %64 = getelementptr inbounds %struct._tagTreeCCOperationCase, %struct._tagTreeCCOperationCase* %operCase.2.ph9, i64 0, i32 1
  %65 = load i8*, i8** %64, align 8, !tbaa !58
  tail call void @TreeCCStreamCodeIndent(%struct._tagTreeCCStream* %stream, i8* %65, i32 1) #2
  br label %70

; <label>:66                                      ; preds = %60
  %67 = load i8*, i8** %8, align 8, !tbaa !36
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.70.646, i64 0, i64 0), i8* %67, i8* %58) #2
  %68 = getelementptr inbounds %struct._tagTreeCCOperationCase, %struct._tagTreeCCOperationCase* %operCase.2.ph9, i64 0, i32 1
  %69 = load i8*, i8** %68, align 8, !tbaa !58
  tail call void @TreeCCStreamCodeIndent(%struct._tagTreeCCStream* %stream, i8* %69, i32 1) #2
  br label %70

; <label>:70                                      ; preds = %66, %63
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.26.592, i64 0, i64 0)) #2
  tail call void @TreeCCStreamFixLine(%struct._tagTreeCCStream* %stream) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.605, i64 0, i64 0)) #2
  br label %.backedge

; <label>:71                                      ; preds = %._crit_edge
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.71.647, i64 0, i64 0)) #2
  br label %.backedge

._crit_edge.23.loopexit:                          ; preds = %.backedge
  br label %._crit_edge.23

._crit_edge.23:                                   ; preds = %._crit_edge.23.loopexit, %5
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @ImplementCreateFuncs.654(%struct._tagTreeCCContext* nocapture readonly %context, %struct._tagTreeCCNode* nocapture readonly %node) #0 {
  %1 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 5
  %2 = load i32, i32* %1, align 4, !tbaa !34
  %3 = and i32 %2, 26
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %22

; <label>:5                                       ; preds = %0
  %6 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 7
  %7 = load %struct._tagTreeCCStream*, %struct._tagTreeCCStream** %6, align 8, !tbaa !32
  %8 = icmp eq %struct._tagTreeCCStream* %7, null
  br i1 %8, label %9, label %12

; <label>:9                                       ; preds = %5
  %10 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 5
  %11 = load %struct._tagTreeCCStream*, %struct._tagTreeCCStream** %10, align 8, !tbaa !33
  br label %12

; <label>:12                                      ; preds = %5, %9
  %stream.0 = phi %struct._tagTreeCCStream* [ %11, %9 ], [ %7, %5 ]
  %13 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 4
  %14 = load i8*, i8** %13, align 8, !tbaa !36
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.0, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.41.657, i64 0, i64 0), i8* %14, i8* %14) #2
  %15 = tail call fastcc i32 @FactoryCreateParams.658(%struct._tagTreeCCStream* %stream.0, %struct._tagTreeCCNode* %node)
  %16 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 8
  %17 = load i16, i16* %16, align 8
  %.mask = and i16 %17, 64
  %18 = icmp eq i16 %.mask, 0
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7.603, i64 0, i64 0)) #2
  %19 = load i8*, i8** %13, align 8, !tbaa !36
  br i1 %18, label %21, label %20

; <label>:20                                      ; preds = %12
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.0, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.42.659, i64 0, i64 0), i8* %19) #2
  br label %22

; <label>:21                                      ; preds = %12
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.43.660, i64 0, i64 0), i8* %19) #2
  tail call fastcc void @FactoryInvokeParams.661(%struct._tagTreeCCStream* %stream.0, %struct._tagTreeCCNode* %node)
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7.603, i64 0, i64 0)) #2
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream.0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.37.632, i64 0, i64 0)) #2
  br label %22

; <label>:22                                      ; preds = %20, %21, %0
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @FactoryCreateParams.658(%struct._tagTreeCCStream* %stream, %struct._tagTreeCCNode* nocapture readonly %node) #0 {
  %1 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 0
  %2 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %1, align 8, !tbaa !38
  %3 = icmp eq %struct._tagTreeCCNode* %2, null
  br i1 %3, label %6, label %4

; <label>:4                                       ; preds = %0
  %5 = tail call fastcc i32 @FactoryCreateParams.658(%struct._tagTreeCCStream* %stream, %struct._tagTreeCCNode* %2)
  br label %6

; <label>:6                                       ; preds = %0, %4
  %.0 = phi i32 [ %5, %4 ], [ 0, %0 ]
  %7 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 10
  %field.0.1 = load %struct._tagTreeCCField*, %struct._tagTreeCCField** %7, align 8
  %8 = icmp eq %struct._tagTreeCCField* %field.0.1, null
  br i1 %8, label %._crit_edge, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %6
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %19
  %field.03 = phi %struct._tagTreeCCField* [ %field.0, %19 ], [ %field.0.1, %.lr.ph.preheader ]
  %.12 = phi i32 [ %.2, %19 ], [ %.0, %.lr.ph.preheader ]
  %9 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.03, i64 0, i32 3
  %10 = load i32, i32* %9, align 4, !tbaa !61
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %19

; <label>:13                                      ; preds = %.lr.ph
  %14 = icmp eq i32 %.12, 0
  br i1 %14, label %16, label %15

; <label>:15                                      ; preds = %13
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.599, i64 0, i64 0)) #2
  br label %16

; <label>:16                                      ; preds = %13, %15
  %17 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.03, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8, !tbaa !64
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4.600, i64 0, i64 0), i8* %18) #2
  br label %19

; <label>:19                                      ; preds = %16, %.lr.ph
  %.2 = phi i32 [ 1, %16 ], [ %.12, %.lr.ph ]
  %20 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.03, i64 0, i32 6
  %field.0 = load %struct._tagTreeCCField*, %struct._tagTreeCCField** %20, align 8
  %21 = icmp eq %struct._tagTreeCCField* %field.0, null
  br i1 %21, label %._crit_edge.loopexit, label %.lr.ph

._crit_edge.loopexit:                             ; preds = %19
  %.2.lcssa = phi i32 [ %.2, %19 ]
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %6
  %.1.lcssa = phi i32 [ %.0, %6 ], [ %.2.lcssa, %._crit_edge.loopexit ]
  ret i32 %.1.lcssa
}

; Function Attrs: nounwind uwtable
define internal fastcc void @FactoryInvokeParams.661(%struct._tagTreeCCStream* %stream, %struct._tagTreeCCNode* nocapture readonly %node) #0 {
  %1 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 0
  %2 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %1, align 8, !tbaa !38
  %3 = icmp eq %struct._tagTreeCCNode* %2, null
  br i1 %3, label %5, label %4

; <label>:4                                       ; preds = %0
  tail call fastcc void @FactoryInvokeParams.661(%struct._tagTreeCCStream* %stream, %struct._tagTreeCCNode* %2)
  br label %5

; <label>:5                                       ; preds = %0, %4
  %6 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 10
  %field.0.1 = load %struct._tagTreeCCField*, %struct._tagTreeCCField** %6, align 8
  %7 = icmp eq %struct._tagTreeCCField* %field.0.1, null
  br i1 %7, label %._crit_edge, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %5
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %15
  %field.02 = phi %struct._tagTreeCCField* [ %field.0, %15 ], [ %field.0.1, %.lr.ph.preheader ]
  %8 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.02, i64 0, i32 3
  %9 = load i32, i32* %8, align 4, !tbaa !61
  %10 = and i32 %9, 1
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %15

; <label>:12                                      ; preds = %.lr.ph
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.599, i64 0, i64 0)) #2
  %13 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.02, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8, !tbaa !64
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4.600, i64 0, i64 0), i8* %14) #2
  br label %15

; <label>:15                                      ; preds = %12, %.lr.ph
  %16 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.02, i64 0, i32 6
  %field.0 = load %struct._tagTreeCCField*, %struct._tagTreeCCField** %16, align 8
  %17 = icmp eq %struct._tagTreeCCField* %field.0, null
  br i1 %17, label %._crit_edge.loopexit, label %.lr.ph

._crit_edge.loopexit:                             ; preds = %15
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %5
  ret void
}

; Function Attrs: nounwind uwtable
define void @TreeCCOpen(%struct.TreeCCInput* nocapture %input, i8* %progname, %struct._IO_FILE* %stream, i8* %filename) #0 {
  %1 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %input, i64 0, i32 0
  store i32 1, i32* %1, align 4, !tbaa !97
  %2 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %input, i64 0, i32 1
  store i8* null, i8** %2, align 8, !tbaa !98
  %3 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %input, i64 0, i32 2
  store i8* %progname, i8** %3, align 8, !tbaa !25
  %4 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %input, i64 0, i32 3
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %4, align 8, !tbaa !99
  %5 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %input, i64 0, i32 4
  store i8* %filename, i8** %5, align 8, !tbaa !21
  %6 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %input, i64 0, i32 5
  %7 = bitcast i64* %6 to <2 x i64>*
  store <2 x i64> <i64 1, i64 1>, <2 x i64>* %7, align 8, !tbaa !100
  %8 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %input, i64 0, i32 7
  %9 = bitcast i32* %8 to <4 x i32>*
  store <4 x i32> <i32 0, i32 0, i32 1, i32 0>, <4 x i32>* %9, align 4, !tbaa !26
  ret void
}

; Function Attrs: nounwind uwtable
define void @TreeCCClose(%struct.TreeCCInput* readonly %input, i32 %closeRaw) #0 {
  %1 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %input, i64 0, i32 1
  %2 = load i8*, i8** %1, align 8, !tbaa !98
  %3 = icmp eq i8* %2, null
  %4 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %input, i64 0, i32 11, i64 0
  %5 = icmp eq i8* %2, %4
  %or.cond = or i1 %3, %5
  br i1 %or.cond, label %7, label %6

; <label>:6                                       ; preds = %0
  tail call void @free(i8* %2) #2
  br label %7

; <label>:7                                       ; preds = %0, %6
  %8 = icmp eq i32 %closeRaw, 0
  br i1 %8, label %13, label %9

; <label>:9                                       ; preds = %7
  %10 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %input, i64 0, i32 3
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %10, align 8, !tbaa !99
  %12 = tail call i32 @fclose(%struct._IO_FILE* %11) #2
  br label %13

; <label>:13                                      ; preds = %7, %9
  ret void
}

; Function Attrs: nounwind
declare i32 @fclose(%struct._IO_FILE* nocapture) #1

; Function Attrs: nounwind uwtable
define i32 @TreeCCNextToken(%struct.TreeCCInput* %input) #0 {
  %1 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %input, i64 0, i32 8
  %2 = load i32, i32* %1, align 4, !tbaa !101
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %9, label %4

; <label>:4                                       ; preds = %0
  %5 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %input, i64 0, i32 6
  %6 = load i64, i64* %5, align 8, !tbaa !102
  %7 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %input, i64 0, i32 5
  store i64 %6, i64* %7, align 8, !tbaa !23
  %8 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %input, i64 0, i32 0
  store i32 0, i32* %8, align 4, !tbaa !97
  br label %621

; <label>:9                                       ; preds = %0
  %10 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %input, i64 0, i32 1
  %11 = load i8*, i8** %10, align 8, !tbaa !98
  %12 = icmp eq i8* %11, null
  %13 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %input, i64 0, i32 11, i64 0
  %14 = icmp eq i8* %11, %13
  %or.cond = or i1 %12, %14
  br i1 %or.cond, label %16, label %15

; <label>:15                                      ; preds = %9
  tail call void @free(i8* %11) #2
  br label %16

; <label>:16                                      ; preds = %9, %15
  store i8* null, i8** %10, align 8, !tbaa !98
  %17 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %input, i64 0, i32 6
  %18 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %input, i64 0, i32 5
  %19 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %input, i64 0, i32 3
  br label %InvalidChar.exit

InvalidChar.exit.loopexit:                        ; preds = %.preheader
  br label %InvalidChar.exit.backedge

InvalidChar.exit:                                 ; preds = %InvalidChar.exit.backedge, %16
  %20 = load i64, i64* %17, align 8, !tbaa !102
  store i64 %20, i64* %18, align 8, !tbaa !23
  %21 = load %struct._IO_FILE*, %struct._IO_FILE** %19, align 8, !tbaa !99
  %22 = tail call i32 @_IO_getc(%struct._IO_FILE* %21) #2
  switch i32 %22, label %86 [
    i32 -1, label %618
    i32 37, label %23
  ]

; <label>:23                                      ; preds = %InvalidChar.exit
  %24 = load %struct._IO_FILE*, %struct._IO_FILE** %19, align 8, !tbaa !99
  %25 = tail call i32 @_IO_getc(%struct._IO_FILE* %24) #2
  switch i32 %25, label %30 [
    i32 123, label %26
    i32 37, label %28
  ]

; <label>:26                                      ; preds = %23
  tail call fastcc void @LiteralCodeDefn(%struct.TreeCCInput* %input, i32 0)
  %27 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %input, i64 0, i32 0
  store i32 2, i32* %27, align 4, !tbaa !97
  br label %621

; <label>:28                                      ; preds = %23
  tail call fastcc void @LiteralCodeDefn(%struct.TreeCCInput* %input, i32 1)
  %29 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %input, i64 0, i32 0
  store i32 4, i32* %29, align 4, !tbaa !97
  br label %621

; <label>:30                                      ; preds = %23
  %.off22 = add i32 %25, -65
  %31 = icmp ult i32 %.off22, 26
  br i1 %31, label %.backedge.i.preheader, label %32

; <label>:32                                      ; preds = %30
  %.off23 = add i32 %25, -97
  %33 = icmp ult i32 %.off23, 26
  %34 = icmp eq i32 %25, 95
  %or.cond5 = or i1 %34, %33
  br i1 %or.cond5, label %.backedge.i.preheader, label %81

.backedge.i.preheader:                            ; preds = %32, %30
  %.lcssa821 = phi i32 [ %25, %32 ], [ %25, %30 ]
  br label %.backedge.i

.backedge.i:                                      ; preds = %.backedge.i.backedge, %.backedge.i.preheader
  %.0.i = phi i32 [ %.lcssa821, %.backedge.i.preheader ], [ %43, %.backedge.i.backedge ]
  %len.0.i = phi i32 [ 0, %.backedge.i.preheader ], [ %len.1.i, %.backedge.i.backedge ]
  %overflow.0.i = phi i32 [ 0, %.backedge.i.preheader ], [ %overflow.1.i, %.backedge.i.backedge ]
  %35 = icmp slt i32 %len.0.i, 1023
  br i1 %35, label %36, label %41

; <label>:36                                      ; preds = %.backedge.i
  %37 = trunc i32 %.0.i to i8
  %38 = add nsw i32 %len.0.i, 1
  %39 = sext i32 %len.0.i to i64
  %40 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %input, i64 0, i32 11, i64 %39
  store i8 %37, i8* %40, align 1, !tbaa !27
  br label %41

; <label>:41                                      ; preds = %36, %.backedge.i
  %len.1.i = phi i32 [ %38, %36 ], [ %len.0.i, %.backedge.i ]
  %overflow.1.i = phi i32 [ %overflow.0.i, %36 ], [ 1, %.backedge.i ]
  %42 = load %struct._IO_FILE*, %struct._IO_FILE** %19, align 8, !tbaa !99
  %43 = tail call i32 @_IO_getc(%struct._IO_FILE* %42) #2
  %44 = icmp eq i32 %43, -1
  br i1 %44, label %45, label %46

; <label>:45                                      ; preds = %41
  %overflow.1.i.lcssa = phi i32 [ %overflow.1.i, %41 ]
  %len.1.i.lcssa = phi i32 [ %len.1.i, %41 ]
  store i32 1, i32* %1, align 4, !tbaa !101
  br label %56

; <label>:46                                      ; preds = %41
  %47 = and i32 %43, -33
  %48 = add i32 %47, -65
  %49 = icmp ult i32 %48, 26
  br i1 %49, label %.backedge.i.backedge, label %50

.backedge.i.backedge:                             ; preds = %46, %50
  br label %.backedge.i

; <label>:50                                      ; preds = %46
  %.off9.i = add i32 %43, -48
  %51 = icmp ult i32 %.off9.i, 10
  %52 = icmp eq i32 %43, 95
  %or.cond7.i = or i1 %52, %51
  br i1 %or.cond7.i, label %.backedge.i.backedge, label %53

; <label>:53                                      ; preds = %50
  %.lcssa793 = phi i32 [ %43, %50 ]
  %overflow.1.i.lcssa790 = phi i32 [ %overflow.1.i, %50 ]
  %len.1.i.lcssa788 = phi i32 [ %len.1.i, %50 ]
  %54 = load %struct._IO_FILE*, %struct._IO_FILE** %19, align 8, !tbaa !99
  %55 = tail call i32 @ungetc(i32 %.lcssa793, %struct._IO_FILE* %54) #2
  br label %56

; <label>:56                                      ; preds = %53, %45
  %overflow.1.i791 = phi i32 [ %overflow.1.i.lcssa790, %53 ], [ %overflow.1.i.lcssa, %45 ]
  %len.1.i789 = phi i32 [ %len.1.i.lcssa788, %53 ], [ %len.1.i.lcssa, %45 ]
  %57 = icmp eq i32 %overflow.1.i791, 0
  br i1 %57, label %RecogIdentifier.exit, label %58

; <label>:58                                      ; preds = %56
  tail call void (%struct.TreeCCInput*, i8*, ...) @TreeCCError(%struct.TreeCCInput* %input, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.7.664, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.665, i64 0, i64 0)) #2
  br label %RecogIdentifier.exit

RecogIdentifier.exit:                             ; preds = %56, %58
  %59 = sext i32 %len.1.i789 to i64
  %60 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %input, i64 0, i32 11, i64 %59
  store i8 0, i8* %60, align 1, !tbaa !27
  store i8* %13, i8** %10, align 8, !tbaa !98
  br label %.lr.ph

.lr.ph:                                           ; preds = %RecogIdentifier.exit, %.outer
  %low.0.ph226 = phi i32 [ 0, %RecogIdentifier.exit ], [ %low.0224.lcssa780, %.outer ]
  %high.0.ph225 = phi i32 [ 18, %RecogIdentifier.exit ], [ %75, %.outer ]
  br label %61

; <label>:61                                      ; preds = %77, %.lr.ph
  %low.0224 = phi i32 [ %low.0.ph226, %.lr.ph ], [ %78, %77 ]
  %62 = add nsw i32 %low.0224, %high.0.ph225
  %63 = sdiv i32 %62, 2
  %64 = sext i32 %63 to i64
  %65 = getelementptr inbounds [19 x %struct.anon], [19 x %struct.anon]* @KeywordTable, i64 0, i64 %64, i32 0
  %66 = load i8*, i8** %65, align 16, !tbaa !103
  %67 = tail call i32 @strcmp(i8* %13, i8* %66) #2
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %73

; <label>:69                                      ; preds = %61
  %.lcssa785 = phi i64 [ %64, %61 ]
  %70 = getelementptr inbounds [19 x %struct.anon], [19 x %struct.anon]* @KeywordTable, i64 0, i64 %.lcssa785, i32 1
  %71 = load i32, i32* %70, align 8, !tbaa !105
  %72 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %input, i64 0, i32 0
  store i32 %71, i32* %72, align 4, !tbaa !97
  br label %621

; <label>:73                                      ; preds = %61
  %74 = icmp slt i32 %67, 0
  br i1 %74, label %.outer, label %77

.outer:                                           ; preds = %73
  %.lcssa783 = phi i32 [ %63, %73 ]
  %low.0224.lcssa780 = phi i32 [ %low.0224, %73 ]
  %75 = add nsw i32 %.lcssa783, -1
  %76 = icmp sgt i32 %low.0224.lcssa780, %75
  br i1 %76, label %.outer._crit_edge.loopexit588, label %.lr.ph

; <label>:77                                      ; preds = %73
  %78 = add nsw i32 %63, 1
  %79 = icmp slt i32 %63, %high.0.ph225
  br i1 %79, label %61, label %.outer._crit_edge.loopexit

.outer._crit_edge.loopexit:                       ; preds = %77
  br label %.outer._crit_edge

.outer._crit_edge.loopexit588:                    ; preds = %.outer
  br label %.outer._crit_edge

.outer._crit_edge:                                ; preds = %.outer._crit_edge.loopexit588, %.outer._crit_edge.loopexit
  tail call void (%struct.TreeCCInput*, i8*, ...) @TreeCCError(%struct.TreeCCInput* %input, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1.666, i64 0, i64 0), i8* %13) #2
  %80 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %input, i64 0, i32 0
  store i32 18, i32* %80, align 4, !tbaa !97
  br label %621

; <label>:81                                      ; preds = %32
  tail call void (%struct.TreeCCInput*, i8*, ...) @TreeCCError(%struct.TreeCCInput* %input, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.2.667, i64 0, i64 0)) #2
  %82 = icmp eq i32 %25, -1
  br i1 %82, label %618, label %83

; <label>:83                                      ; preds = %81
  %84 = load %struct._IO_FILE*, %struct._IO_FILE** %19, align 8, !tbaa !99
  %85 = tail call i32 @ungetc(i32 %25, %struct._IO_FILE* %84) #2
  br label %InvalidChar.exit.backedge

InvalidChar.exit.backedge:                        ; preds = %83, %147, %214, %.loopexit43, %611, %224, %118, %118, %118, %118, %616, %617, %InvalidChar.exit.loopexit
  br label %InvalidChar.exit

; <label>:86                                      ; preds = %InvalidChar.exit
  %.off = add i32 %22, -65
  %87 = icmp ult i32 %.off, 26
  br i1 %87, label %.backedge.i.28.preheader, label %88

; <label>:88                                      ; preds = %86
  %.off20 = add i32 %22, -97
  %89 = icmp ult i32 %.off20, 26
  %90 = icmp eq i32 %22, 95
  %or.cond11 = or i1 %90, %89
  br i1 %or.cond11, label %.backedge.i.28.preheader, label %118

.backedge.i.28.preheader:                         ; preds = %88, %86
  %.lcssa801 = phi i32 [ %22, %88 ], [ %22, %86 ]
  br label %.backedge.i.28

.backedge.i.28:                                   ; preds = %.backedge.i.28.backedge, %.backedge.i.28.preheader
  %.0.i.25 = phi i32 [ %.lcssa801, %.backedge.i.28.preheader ], [ %99, %.backedge.i.28.backedge ]
  %len.0.i.26 = phi i32 [ 0, %.backedge.i.28.preheader ], [ %len.1.i.29, %.backedge.i.28.backedge ]
  %overflow.0.i.27 = phi i32 [ 0, %.backedge.i.28.preheader ], [ %overflow.1.i.30, %.backedge.i.28.backedge ]
  %91 = icmp slt i32 %len.0.i.26, 1023
  br i1 %91, label %92, label %97

; <label>:92                                      ; preds = %.backedge.i.28
  %93 = trunc i32 %.0.i.25 to i8
  %94 = add nsw i32 %len.0.i.26, 1
  %95 = sext i32 %len.0.i.26 to i64
  %96 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %input, i64 0, i32 11, i64 %95
  store i8 %93, i8* %96, align 1, !tbaa !27
  br label %97

; <label>:97                                      ; preds = %92, %.backedge.i.28
  %len.1.i.29 = phi i32 [ %94, %92 ], [ %len.0.i.26, %.backedge.i.28 ]
  %overflow.1.i.30 = phi i32 [ %overflow.0.i.27, %92 ], [ 1, %.backedge.i.28 ]
  %98 = load %struct._IO_FILE*, %struct._IO_FILE** %19, align 8, !tbaa !99
  %99 = tail call i32 @_IO_getc(%struct._IO_FILE* %98) #2
  %100 = icmp eq i32 %99, -1
  br i1 %100, label %101, label %102

; <label>:101                                     ; preds = %97
  %overflow.1.i.30.lcssa = phi i32 [ %overflow.1.i.30, %97 ]
  %len.1.i.29.lcssa = phi i32 [ %len.1.i.29, %97 ]
  store i32 1, i32* %1, align 4, !tbaa !101
  br label %112

; <label>:102                                     ; preds = %97
  %103 = and i32 %99, -33
  %104 = add i32 %103, -65
  %105 = icmp ult i32 %104, 26
  br i1 %105, label %.backedge.i.28.backedge, label %106

.backedge.i.28.backedge:                          ; preds = %102, %106
  br label %.backedge.i.28

; <label>:106                                     ; preds = %102
  %.off9.i.31 = add i32 %99, -48
  %107 = icmp ult i32 %.off9.i.31, 10
  %108 = icmp eq i32 %99, 95
  %or.cond7.i.32 = or i1 %108, %107
  br i1 %or.cond7.i.32, label %.backedge.i.28.backedge, label %109

; <label>:109                                     ; preds = %106
  %.lcssa710 = phi i32 [ %99, %106 ]
  %overflow.1.i.30.lcssa708 = phi i32 [ %overflow.1.i.30, %106 ]
  %len.1.i.29.lcssa706 = phi i32 [ %len.1.i.29, %106 ]
  %110 = load %struct._IO_FILE*, %struct._IO_FILE** %19, align 8, !tbaa !99
  %111 = tail call i32 @ungetc(i32 %.lcssa710, %struct._IO_FILE* %110) #2
  br label %112

; <label>:112                                     ; preds = %109, %101
  %overflow.1.i.30709 = phi i32 [ %overflow.1.i.30.lcssa708, %109 ], [ %overflow.1.i.30.lcssa, %101 ]
  %len.1.i.29707 = phi i32 [ %len.1.i.29.lcssa706, %109 ], [ %len.1.i.29.lcssa, %101 ]
  %113 = icmp eq i32 %overflow.1.i.30709, 0
  br i1 %113, label %RecogIdentifier.exit33, label %114

; <label>:114                                     ; preds = %112
  tail call void (%struct.TreeCCInput*, i8*, ...) @TreeCCError(%struct.TreeCCInput* %input, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.7.664, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3.668, i64 0, i64 0)) #2
  br label %RecogIdentifier.exit33

RecogIdentifier.exit33:                           ; preds = %112, %114
  %115 = sext i32 %len.1.i.29707 to i64
  %116 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %input, i64 0, i32 11, i64 %115
  store i8 0, i8* %116, align 1, !tbaa !27
  store i8* %13, i8** %10, align 8, !tbaa !98
  %117 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %input, i64 0, i32 0
  store i32 1, i32* %117, align 4, !tbaa !97
  br label %621

; <label>:118                                     ; preds = %88
  switch i32 %22, label %614 [
    i32 40, label %119
    i32 41, label %121
    i32 125, label %123
    i32 91, label %125
    i32 93, label %127
    i32 44, label %129
    i32 61, label %131
    i32 42, label %133
    i32 38, label %135
    i32 59, label %137
    i32 58, label %139
    i32 39, label %150
    i32 34, label %150
    i32 10, label %214
    i32 13, label %217
    i32 123, label %227
    i32 32, label %InvalidChar.exit.backedge
    i32 12, label %InvalidChar.exit.backedge
    i32 11, label %InvalidChar.exit.backedge
    i32 9, label %InvalidChar.exit.backedge
    i32 47, label %572
  ]

; <label>:119                                     ; preds = %118
  %120 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %input, i64 0, i32 0
  store i32 5, i32* %120, align 4, !tbaa !97
  br label %621

; <label>:121                                     ; preds = %118
  %122 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %input, i64 0, i32 0
  store i32 6, i32* %122, align 4, !tbaa !97
  br label %621

; <label>:123                                     ; preds = %118
  %124 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %input, i64 0, i32 0
  store i32 8, i32* %124, align 4, !tbaa !97
  br label %621

; <label>:125                                     ; preds = %118
  %126 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %input, i64 0, i32 0
  store i32 9, i32* %126, align 4, !tbaa !97
  br label %621

; <label>:127                                     ; preds = %118
  %128 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %input, i64 0, i32 0
  store i32 10, i32* %128, align 4, !tbaa !97
  br label %621

; <label>:129                                     ; preds = %118
  %130 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %input, i64 0, i32 0
  store i32 11, i32* %130, align 4, !tbaa !97
  br label %621

; <label>:131                                     ; preds = %118
  %132 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %input, i64 0, i32 0
  store i32 12, i32* %132, align 4, !tbaa !97
  br label %621

; <label>:133                                     ; preds = %118
  %134 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %input, i64 0, i32 0
  store i32 13, i32* %134, align 4, !tbaa !97
  br label %621

; <label>:135                                     ; preds = %118
  %136 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %input, i64 0, i32 0
  store i32 14, i32* %136, align 4, !tbaa !97
  br label %621

; <label>:137                                     ; preds = %118
  %138 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %input, i64 0, i32 0
  store i32 15, i32* %138, align 4, !tbaa !97
  br label %621

; <label>:139                                     ; preds = %118
  %140 = load %struct._IO_FILE*, %struct._IO_FILE** %19, align 8, !tbaa !99
  %141 = tail call i32 @_IO_getc(%struct._IO_FILE* %140) #2
  switch i32 %141, label %147 [
    i32 58, label %142
    i32 -1, label %144
  ]

; <label>:142                                     ; preds = %139
  %143 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %input, i64 0, i32 0
  store i32 16, i32* %143, align 4, !tbaa !97
  br label %621

; <label>:144                                     ; preds = %139
  tail call void (%struct.TreeCCInput*, i8*, ...) @TreeCCError(%struct.TreeCCInput* %input, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.27.669, i64 0, i64 0), i32 58) #2
  store i32 1, i32* %1, align 4, !tbaa !101
  %145 = load i64, i64* %17, align 8, !tbaa !102
  store i64 %145, i64* %18, align 8, !tbaa !23
  %146 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %input, i64 0, i32 0
  store i32 0, i32* %146, align 4, !tbaa !97
  br label %621

; <label>:147                                     ; preds = %139
  %148 = load %struct._IO_FILE*, %struct._IO_FILE** %19, align 8, !tbaa !99
  %149 = tail call i32 @ungetc(i32 %141, %struct._IO_FILE* %148) #2
  tail call void (%struct.TreeCCInput*, i8*, ...) @TreeCCError(%struct.TreeCCInput* %input, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.27.669, i64 0, i64 0), i32 58) #2
  br label %InvalidChar.exit.backedge

; <label>:150                                     ; preds = %118, %118
  %.lcssa812 = phi i32 [ %22, %118 ], [ %22, %118 ]
  %151 = load %struct._IO_FILE*, %struct._IO_FILE** %19, align 8, !tbaa !99
  %152 = tail call i32 @_IO_getc(%struct._IO_FILE* %151) #2
  %153 = icmp eq i32 %152, %.lcssa812
  br i1 %153, label %.loopexit.thread.i, label %.lr.ph.lr.ph.i.preheader

.lr.ph.lr.ph.i.preheader:                         ; preds = %150
  br label %.lr.ph.lr.ph.i

.lr.ph.lr.ph.i:                                   ; preds = %.lr.ph.lr.ph.i.preheader, %FlushBuffer.exit.outer.i
  %154 = phi i32 [ %191, %FlushBuffer.exit.outer.i ], [ %152, %.lr.ph.lr.ph.i.preheader ]
  %currlen.0.ph25.i = phi i32 [ %178, %FlushBuffer.exit.outer.i ], [ 0, %.lr.ph.lr.ph.i.preheader ]
  br label %.lr.ph.i

.lr.ph.i:                                         ; preds = %FlushBuffer.exit.outer3.backedge.i, %.lr.ph.lr.ph.i
  %155 = phi i32 [ %154, %.lr.ph.lr.ph.i ], [ %172, %FlushBuffer.exit.outer3.backedge.i ]
  %len.0.ph20.i = phi i32 [ 0, %.lr.ph.lr.ph.i ], [ %len.0.ph.be.i, %FlushBuffer.exit.outer3.backedge.i ]
  br label %156

; <label>:156                                     ; preds = %InvalidChar.exit.i, %.lr.ph.i
  %157 = phi i32 [ %155, %.lr.ph.i ], [ %163, %InvalidChar.exit.i ]
  switch i32 %157, label %165 [
    i32 -1, label %158
    i32 13, label %159
    i32 10, label %159
    i32 0, label %InvalidChar.exit.i
  ]

; <label>:158                                     ; preds = %156
  %currlen.0.ph25.i.lcssa = phi i32 [ %currlen.0.ph25.i, %156 ]
  %len.0.ph20.i.lcssa = phi i32 [ %len.0.ph20.i, %156 ]
  store i32 1, i32* %1, align 4, !tbaa !101
  tail call void (%struct.TreeCCInput*, i8*, ...) @TreeCCError(%struct.TreeCCInput* %input, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.29.670, i64 0, i64 0)) #2
  br label %.loopexit.i

; <label>:159                                     ; preds = %156, %156
  %currlen.0.ph25.i.lcssa720 = phi i32 [ %currlen.0.ph25.i, %156 ], [ %currlen.0.ph25.i, %156 ]
  %len.0.ph20.i.lcssa714 = phi i32 [ %len.0.ph20.i, %156 ], [ %len.0.ph20.i, %156 ]
  %.lcssa712 = phi i32 [ %157, %156 ], [ %157, %156 ]
  %160 = load %struct._IO_FILE*, %struct._IO_FILE** %19, align 8, !tbaa !99
  %161 = tail call i32 @ungetc(i32 %.lcssa712, %struct._IO_FILE* %160) #2
  tail call void (%struct.TreeCCInput*, i8*, ...) @TreeCCError(%struct.TreeCCInput* %input, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.30.671, i64 0, i64 0)) #2
  br label %.loopexit.i

InvalidChar.exit.i:                               ; preds = %156
  tail call void (%struct.TreeCCInput*, i8*, ...) @TreeCCError(%struct.TreeCCInput* %input, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.28.672, i64 0, i64 0), i32 0) #2
  %162 = load %struct._IO_FILE*, %struct._IO_FILE** %19, align 8, !tbaa !99
  %163 = tail call i32 @_IO_getc(%struct._IO_FILE* %162) #2
  %164 = icmp eq i32 %163, %.lcssa812
  br i1 %164, label %.loopexit.i.loopexit, label %156

; <label>:165                                     ; preds = %156
  %.lcssa = phi i32 [ %157, %156 ]
  %166 = trunc i32 %.lcssa to i8
  %167 = add nsw i32 %len.0.ph20.i, 1
  %168 = sext i32 %len.0.ph20.i to i64
  %169 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %input, i64 0, i32 11, i64 %168
  store i8 %166, i8* %169, align 1, !tbaa !27
  %170 = icmp sgt i32 %len.0.ph20.i, 1021
  br i1 %170, label %174, label %FlushBuffer.exit.outer3.backedge.i

FlushBuffer.exit.outer3.backedge.i:               ; preds = %174, %165
  %len.0.ph.be.i = phi i32 [ 0, %174 ], [ %167, %165 ]
  %171 = load %struct._IO_FILE*, %struct._IO_FILE** %19, align 8, !tbaa !99
  %172 = tail call i32 @_IO_getc(%struct._IO_FILE* %171) #2
  %173 = icmp eq i32 %172, %.lcssa812
  br i1 %173, label %.loopexit.i.loopexit585, label %.lr.ph.i

; <label>:174                                     ; preds = %165
  %175 = icmp eq i32 %167, 0
  br i1 %175, label %FlushBuffer.exit.outer3.backedge.i, label %176

; <label>:176                                     ; preds = %174
  %.lcssa718 = phi i32 [ %167, %174 ]
  %177 = load i8*, i8** %10, align 8, !tbaa !98
  %178 = add nsw i32 %.lcssa718, %currlen.0.ph25.i
  %179 = add nsw i32 %178, 1
  %180 = sext i32 %179 to i64
  %181 = tail call i8* @realloc(i8* %177, i64 %180) #2
  %182 = icmp eq i8* %181, null
  br i1 %182, label %183, label %FlushBuffer.exit.outer.i

; <label>:183                                     ; preds = %176
  tail call void @TreeCCOutOfMemory(%struct.TreeCCInput* %input) #2
  br label %FlushBuffer.exit.outer.i

FlushBuffer.exit.outer.i:                         ; preds = %183, %176
  store i8* %181, i8** %10, align 8, !tbaa !98
  %184 = sext i32 %currlen.0.ph25.i to i64
  %185 = getelementptr inbounds i8, i8* %181, i64 %184
  %186 = sext i32 %.lcssa718 to i64
  %187 = tail call i8* @strncpy(i8* %185, i8* %13, i64 %186) #2
  %188 = sext i32 %178 to i64
  %189 = getelementptr inbounds i8, i8* %181, i64 %188
  store i8 0, i8* %189, align 1, !tbaa !27
  %190 = load %struct._IO_FILE*, %struct._IO_FILE** %19, align 8, !tbaa !99
  %191 = tail call i32 @_IO_getc(%struct._IO_FILE* %190) #2
  %192 = icmp eq i32 %191, %.lcssa812
  br i1 %192, label %.loopexit.i.loopexit586, label %.lr.ph.lr.ph.i

.loopexit.i.loopexit:                             ; preds = %InvalidChar.exit.i
  %currlen.0.ph25.i.lcssa721 = phi i32 [ %currlen.0.ph25.i, %InvalidChar.exit.i ]
  %len.0.ph20.i.lcssa715 = phi i32 [ %len.0.ph20.i, %InvalidChar.exit.i ]
  br label %.loopexit.i

.loopexit.i.loopexit585:                          ; preds = %FlushBuffer.exit.outer3.backedge.i
  %currlen.0.ph25.i.lcssa723 = phi i32 [ %currlen.0.ph25.i, %FlushBuffer.exit.outer3.backedge.i ]
  %len.0.ph.be.i.lcssa = phi i32 [ %len.0.ph.be.i, %FlushBuffer.exit.outer3.backedge.i ]
  br label %.loopexit.i

.loopexit.i.loopexit586:                          ; preds = %FlushBuffer.exit.outer.i
  %.lcssa724 = phi i32 [ %178, %FlushBuffer.exit.outer.i ]
  br label %.loopexit.i

.loopexit.i:                                      ; preds = %.loopexit.i.loopexit586, %.loopexit.i.loopexit585, %.loopexit.i.loopexit, %159, %158
  %currlen.0.ph16.i = phi i32 [ %currlen.0.ph25.i.lcssa720, %159 ], [ %currlen.0.ph25.i.lcssa, %158 ], [ %currlen.0.ph25.i.lcssa721, %.loopexit.i.loopexit ], [ %currlen.0.ph25.i.lcssa723, %.loopexit.i.loopexit585 ], [ %.lcssa724, %.loopexit.i.loopexit586 ]
  %len.0.ph13.i = phi i32 [ %len.0.ph20.i.lcssa714, %159 ], [ %len.0.ph20.i.lcssa, %158 ], [ %len.0.ph20.i.lcssa715, %.loopexit.i.loopexit ], [ %len.0.ph.be.i.lcssa, %.loopexit.i.loopexit585 ], [ 0, %.loopexit.i.loopexit586 ]
  %193 = icmp eq i32 %currlen.0.ph16.i, 0
  br i1 %193, label %.loopexit.thread.i, label %194

; <label>:194                                     ; preds = %.loopexit.i
  %195 = icmp eq i32 %len.0.ph13.i, 0
  br i1 %195, label %RecogString.exit, label %196

; <label>:196                                     ; preds = %194
  %197 = load i8*, i8** %10, align 8, !tbaa !98
  %198 = add nsw i32 %len.0.ph13.i, %currlen.0.ph16.i
  %199 = add nsw i32 %198, 1
  %200 = sext i32 %199 to i64
  %201 = tail call i8* @realloc(i8* %197, i64 %200) #2
  %202 = icmp eq i8* %201, null
  br i1 %202, label %203, label %204

; <label>:203                                     ; preds = %196
  tail call void @TreeCCOutOfMemory(%struct.TreeCCInput* %input) #2
  br label %204

; <label>:204                                     ; preds = %203, %196
  store i8* %201, i8** %10, align 8, !tbaa !98
  %205 = sext i32 %currlen.0.ph16.i to i64
  %206 = getelementptr inbounds i8, i8* %201, i64 %205
  %207 = sext i32 %len.0.ph13.i to i64
  %208 = tail call i8* @strncpy(i8* %206, i8* %13, i64 %207) #2
  %209 = sext i32 %198 to i64
  %210 = getelementptr inbounds i8, i8* %201, i64 %209
  store i8 0, i8* %210, align 1, !tbaa !27
  br label %RecogString.exit

.loopexit.thread.i:                               ; preds = %.loopexit.i, %150
  %len.0.ph1342.i = phi i32 [ %len.0.ph13.i, %.loopexit.i ], [ 0, %150 ]
  %211 = sext i32 %len.0.ph1342.i to i64
  %212 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %input, i64 0, i32 11, i64 %211
  store i8 0, i8* %212, align 1, !tbaa !27
  store i8* %13, i8** %10, align 8, !tbaa !98
  br label %RecogString.exit

RecogString.exit:                                 ; preds = %194, %204, %.loopexit.thread.i
  %213 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %input, i64 0, i32 0
  store i32 17, i32* %213, align 4, !tbaa !97
  br label %621

; <label>:214                                     ; preds = %118
  %215 = load i64, i64* %17, align 8, !tbaa !102
  %216 = add nsw i64 %215, 1
  store i64 %216, i64* %17, align 8, !tbaa !102
  br label %InvalidChar.exit.backedge

; <label>:217                                     ; preds = %118
  %218 = load %struct._IO_FILE*, %struct._IO_FILE** %19, align 8, !tbaa !99
  %219 = tail call i32 @_IO_getc(%struct._IO_FILE* %218) #2
  switch i32 %219, label %221 [
    i32 -1, label %220
    i32 10, label %224
  ]

; <label>:220                                     ; preds = %217
  store i32 1, i32* %1, align 4, !tbaa !101
  br label %224

; <label>:221                                     ; preds = %217
  %222 = load %struct._IO_FILE*, %struct._IO_FILE** %19, align 8, !tbaa !99
  %223 = tail call i32 @ungetc(i32 %219, %struct._IO_FILE* %222) #2
  br label %224

; <label>:224                                     ; preds = %217, %221, %220
  %225 = load i64, i64* %17, align 8, !tbaa !102
  %226 = add nsw i64 %225, 1
  store i64 %226, i64* %17, align 8, !tbaa !102
  br label %InvalidChar.exit.backedge

; <label>:227                                     ; preds = %118
  %228 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %input, i64 0, i32 9
  %229 = load i32, i32* %228, align 4, !tbaa !106
  %230 = icmp eq i32 %229, 0
  br i1 %230, label %570, label %.outer.i.preheader

.outer.i.preheader:                               ; preds = %227
  br label %.outer.i

.outer.i:                                         ; preds = %.outer.i.backedge, %.outer.i.preheader
  %len.0.ph.i = phi i32 [ 0, %.outer.i.preheader ], [ %len.0.ph.i.be, %.outer.i.backedge ]
  %currlen.0.ph.i = phi i32 [ 0, %.outer.i.preheader ], [ %currlen.0.ph.i.be, %.outer.i.backedge ]
  %level.0.ph.i = phi i64 [ 0, %.outer.i.preheader ], [ %level.1.i, %.outer.i.backedge ]
  br label %231

; <label>:231                                     ; preds = %.thread.i, %.outer.i
  %232 = load %struct._IO_FILE*, %struct._IO_FILE** %19, align 8, !tbaa !99
  %233 = tail call i32 @_IO_getc(%struct._IO_FILE* %232) #2
  switch i32 %233, label %527 [
    i32 -1, label %234
    i32 125, label %235
    i32 123, label %242
    i32 39, label %247
    i32 34, label %247
    i32 47, label %336
    i32 10, label %509
    i32 13, label %515
    i32 0, label %.thread.i
  ]

; <label>:234                                     ; preds = %231
  %currlen.0.ph.i.lcssa = phi i32 [ %currlen.0.ph.i, %231 ]
  %len.0.ph.i.lcssa = phi i32 [ %len.0.ph.i, %231 ]
  store i32 1, i32* %1, align 4, !tbaa !101
  tail call void (%struct.TreeCCInput*, i8*, ...) @TreeCCError(%struct.TreeCCInput* %input, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.673, i64 0, i64 0)) #2
  br label %.loopexit.i.36

; <label>:235                                     ; preds = %231
  %236 = icmp eq i64 %level.0.ph.i, 0
  br i1 %236, label %.loopexit.i.36.loopexit, label %237

; <label>:237                                     ; preds = %235
  %238 = add i64 %level.0.ph.i, -1
  %239 = add nsw i32 %len.0.ph.i, 1
  %240 = sext i32 %len.0.ph.i to i64
  %241 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %input, i64 0, i32 11, i64 %240
  store i8 125, i8* %241, align 1, !tbaa !27
  br label %532

; <label>:242                                     ; preds = %231
  %243 = add i64 %level.0.ph.i, 1
  %244 = add nsw i32 %len.0.ph.i, 1
  %245 = sext i32 %len.0.ph.i to i64
  %246 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %input, i64 0, i32 11, i64 %245
  store i8 123, i8* %246, align 1, !tbaa !27
  br label %532

; <label>:247                                     ; preds = %231, %231
  %.lcssa729 = phi i32 [ %233, %231 ], [ %233, %231 ]
  %248 = trunc i32 %.lcssa729 to i8
  %249 = add nsw i32 %len.0.ph.i, 1
  %250 = sext i32 %len.0.ph.i to i64
  %251 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %input, i64 0, i32 11, i64 %250
  store i8 %248, i8* %251, align 1, !tbaa !27
  %252 = icmp sgt i32 %len.0.ph.i, 1021
  br i1 %252, label %253, label %FlushBuffer.exit.preheader.i

; <label>:253                                     ; preds = %247
  %254 = icmp eq i32 %249, 0
  br i1 %254, label %FlushBuffer.exit.preheader.i, label %255

; <label>:255                                     ; preds = %253
  %256 = load i8*, i8** %10, align 8, !tbaa !98
  %257 = add nsw i32 %currlen.0.ph.i, %249
  %258 = add nsw i32 %257, 1
  %259 = sext i32 %258 to i64
  %260 = tail call i8* @realloc(i8* %256, i64 %259) #2
  %261 = icmp eq i8* %260, null
  br i1 %261, label %262, label %263

; <label>:262                                     ; preds = %255
  tail call void @TreeCCOutOfMemory(%struct.TreeCCInput* %input) #2
  br label %263

; <label>:263                                     ; preds = %262, %255
  store i8* %260, i8** %10, align 8, !tbaa !98
  %264 = sext i32 %currlen.0.ph.i to i64
  %265 = getelementptr inbounds i8, i8* %260, i64 %264
  %266 = sext i32 %249 to i64
  %267 = tail call i8* @strncpy(i8* %265, i8* %13, i64 %266) #2
  %268 = sext i32 %257 to i64
  %269 = getelementptr inbounds i8, i8* %260, i64 %268
  store i8 0, i8* %269, align 1, !tbaa !27
  br label %FlushBuffer.exit.preheader.i

FlushBuffer.exit.preheader.i:                     ; preds = %263, %253, %247
  %len.1.ph.i = phi i32 [ 0, %263 ], [ 0, %253 ], [ %249, %247 ]
  %currlen.1.ph.i = phi i32 [ %257, %263 ], [ %currlen.0.ph.i, %253 ], [ %currlen.0.ph.i, %247 ]
  %270 = load %struct._IO_FILE*, %struct._IO_FILE** %19, align 8, !tbaa !99
  %271 = tail call i32 @_IO_getc(%struct._IO_FILE* %270) #2
  %272 = icmp eq i32 %271, -1
  %273 = icmp eq i32 %271, %.lcssa729
  %or.cond.104.i = or i1 %272, %273
  br i1 %or.cond.104.i, label %.critedge.i, label %.lr.ph.i.34.preheader

.lr.ph.i.34.preheader:                            ; preds = %FlushBuffer.exit.preheader.i
  br label %.lr.ph.i.34

.lr.ph.i.34:                                      ; preds = %.lr.ph.i.34.preheader, %FlushBuffer.exit.backedge.i
  %274 = phi i32 [ %311, %FlushBuffer.exit.backedge.i ], [ %271, %.lr.ph.i.34.preheader ]
  %currlen.1106.i = phi i32 [ %currlen.1.be.i, %FlushBuffer.exit.backedge.i ], [ %currlen.1.ph.i, %.lr.ph.i.34.preheader ]
  %len.1105.i = phi i32 [ %len.1.be.i, %FlushBuffer.exit.backedge.i ], [ %len.1.ph.i, %.lr.ph.i.34.preheader ]
  %275 = icmp eq i32 %274, 92
  br i1 %275, label %276, label %301

; <label>:276                                     ; preds = %.lr.ph.i.34
  %277 = add nsw i32 %len.1105.i, 1
  %278 = sext i32 %len.1105.i to i64
  %279 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %input, i64 0, i32 11, i64 %278
  store i8 92, i8* %279, align 1, !tbaa !27
  %280 = icmp sgt i32 %len.1105.i, 1021
  br i1 %280, label %281, label %FlushBuffer.exit9.i

; <label>:281                                     ; preds = %276
  %282 = icmp eq i32 %277, 0
  br i1 %282, label %FlushBuffer.exit9.i, label %283

; <label>:283                                     ; preds = %281
  %284 = load i8*, i8** %10, align 8, !tbaa !98
  %285 = add nsw i32 %277, %currlen.1106.i
  %286 = add nsw i32 %285, 1
  %287 = sext i32 %286 to i64
  %288 = tail call i8* @realloc(i8* %284, i64 %287) #2
  %289 = icmp eq i8* %288, null
  br i1 %289, label %290, label %291

; <label>:290                                     ; preds = %283
  tail call void @TreeCCOutOfMemory(%struct.TreeCCInput* %input) #2
  br label %291

; <label>:291                                     ; preds = %290, %283
  store i8* %288, i8** %10, align 8, !tbaa !98
  %292 = sext i32 %currlen.1106.i to i64
  %293 = getelementptr inbounds i8, i8* %288, i64 %292
  %294 = sext i32 %277 to i64
  %295 = tail call i8* @strncpy(i8* %293, i8* %13, i64 %294) #2
  %296 = sext i32 %285 to i64
  %297 = getelementptr inbounds i8, i8* %288, i64 %296
  store i8 0, i8* %297, align 1, !tbaa !27
  br label %FlushBuffer.exit9.i

FlushBuffer.exit9.i:                              ; preds = %291, %281, %276
  %len.2.i = phi i32 [ %277, %276 ], [ 0, %281 ], [ 0, %291 ]
  %currlen.2.i = phi i32 [ %currlen.1106.i, %276 ], [ %currlen.1106.i, %281 ], [ %285, %291 ]
  %298 = load %struct._IO_FILE*, %struct._IO_FILE** %19, align 8, !tbaa !99
  %299 = tail call i32 @_IO_getc(%struct._IO_FILE* %298) #2
  %300 = icmp eq i32 %299, -1
  br i1 %300, label %.critedge.thread.i.loopexit, label %301

; <label>:301                                     ; preds = %FlushBuffer.exit9.i, %.lr.ph.i.34
  %len.3.i = phi i32 [ %len.2.i, %FlushBuffer.exit9.i ], [ %len.1105.i, %.lr.ph.i.34 ]
  %currlen.3.i = phi i32 [ %currlen.2.i, %FlushBuffer.exit9.i ], [ %currlen.1106.i, %.lr.ph.i.34 ]
  %ch.0.i = phi i32 [ %299, %FlushBuffer.exit9.i ], [ %274, %.lr.ph.i.34 ]
  switch i32 %ch.0.i, label %304 [
    i32 13, label %.critedge.thread30.i
    i32 10, label %.critedge.thread30.i
  ]

.critedge.thread30.i:                             ; preds = %301, %301
  %ch.0.i.lcssa = phi i32 [ %ch.0.i, %301 ], [ %ch.0.i, %301 ]
  %currlen.3.i.lcssa = phi i32 [ %currlen.3.i, %301 ], [ %currlen.3.i, %301 ]
  %len.3.i.lcssa = phi i32 [ %len.3.i, %301 ], [ %len.3.i, %301 ]
  tail call void (%struct.TreeCCInput*, i8*, ...) @TreeCCError(%struct.TreeCCInput* %input, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.30.671, i64 0, i64 0)) #2
  %302 = load %struct._IO_FILE*, %struct._IO_FILE** %19, align 8, !tbaa !99
  %303 = tail call i32 @ungetc(i32 %ch.0.i.lcssa, %struct._IO_FILE* %302) #2
  br label %332

; <label>:304                                     ; preds = %301
  %305 = trunc i32 %ch.0.i to i8
  %306 = add nsw i32 %len.3.i, 1
  %307 = sext i32 %len.3.i to i64
  %308 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %input, i64 0, i32 11, i64 %307
  store i8 %305, i8* %308, align 1, !tbaa !27
  %309 = icmp sgt i32 %len.3.i, 1021
  br i1 %309, label %314, label %FlushBuffer.exit.backedge.i

FlushBuffer.exit.backedge.i:                      ; preds = %324, %314, %304
  %len.1.be.i = phi i32 [ %306, %304 ], [ 0, %314 ], [ 0, %324 ]
  %currlen.1.be.i = phi i32 [ %currlen.3.i, %304 ], [ %currlen.3.i, %314 ], [ %318, %324 ]
  %310 = load %struct._IO_FILE*, %struct._IO_FILE** %19, align 8, !tbaa !99
  %311 = tail call i32 @_IO_getc(%struct._IO_FILE* %310) #2
  %312 = icmp eq i32 %311, -1
  %313 = icmp eq i32 %311, %.lcssa729
  %or.cond.i = or i1 %312, %313
  br i1 %or.cond.i, label %.critedge.i.loopexit, label %.lr.ph.i.34

; <label>:314                                     ; preds = %304
  %315 = icmp eq i32 %306, 0
  br i1 %315, label %FlushBuffer.exit.backedge.i, label %316

; <label>:316                                     ; preds = %314
  %317 = load i8*, i8** %10, align 8, !tbaa !98
  %318 = add nsw i32 %currlen.3.i, %306
  %319 = add nsw i32 %318, 1
  %320 = sext i32 %319 to i64
  %321 = tail call i8* @realloc(i8* %317, i64 %320) #2
  %322 = icmp eq i8* %321, null
  br i1 %322, label %323, label %324

; <label>:323                                     ; preds = %316
  tail call void @TreeCCOutOfMemory(%struct.TreeCCInput* %input) #2
  br label %324

; <label>:324                                     ; preds = %323, %316
  store i8* %321, i8** %10, align 8, !tbaa !98
  %325 = sext i32 %currlen.3.i to i64
  %326 = getelementptr inbounds i8, i8* %321, i64 %325
  %327 = sext i32 %306 to i64
  %328 = tail call i8* @strncpy(i8* %326, i8* %13, i64 %327) #2
  %329 = sext i32 %318 to i64
  %330 = getelementptr inbounds i8, i8* %321, i64 %329
  store i8 0, i8* %330, align 1, !tbaa !27
  br label %FlushBuffer.exit.backedge.i

.critedge.i.loopexit:                             ; preds = %FlushBuffer.exit.backedge.i
  %.lcssa752 = phi i32 [ %311, %FlushBuffer.exit.backedge.i ]
  %currlen.1.be.i.lcssa = phi i32 [ %currlen.1.be.i, %FlushBuffer.exit.backedge.i ]
  %len.1.be.i.lcssa = phi i32 [ %len.1.be.i, %FlushBuffer.exit.backedge.i ]
  br label %.critedge.i

.critedge.i:                                      ; preds = %.critedge.i.loopexit, %FlushBuffer.exit.preheader.i
  %.lcssa74.i = phi i32 [ %271, %FlushBuffer.exit.preheader.i ], [ %.lcssa752, %.critedge.i.loopexit ]
  %currlen.1.lcssa.i = phi i32 [ %currlen.1.ph.i, %FlushBuffer.exit.preheader.i ], [ %currlen.1.be.i.lcssa, %.critedge.i.loopexit ]
  %len.1.lcssa.i = phi i32 [ %len.1.ph.i, %FlushBuffer.exit.preheader.i ], [ %len.1.be.i.lcssa, %.critedge.i.loopexit ]
  %331 = icmp eq i32 %.lcssa74.i, -1
  br i1 %331, label %.critedge.thread.i.loopexit587, label %332

.critedge.thread.i.loopexit:                      ; preds = %FlushBuffer.exit9.i
  %currlen.2.i.lcssa = phi i32 [ %currlen.2.i, %FlushBuffer.exit9.i ]
  %len.2.i.lcssa = phi i32 [ %len.2.i, %FlushBuffer.exit9.i ]
  br label %.critedge.thread.i

.critedge.thread.i.loopexit587:                   ; preds = %.critedge.i
  %len.1.lcssa.i.lcssa = phi i32 [ %len.1.lcssa.i, %.critedge.i ]
  %currlen.1.lcssa.i.lcssa = phi i32 [ %currlen.1.lcssa.i, %.critedge.i ]
  br label %.critedge.thread.i

.critedge.thread.i:                               ; preds = %.critedge.thread.i.loopexit587, %.critedge.thread.i.loopexit
  %currlen.429.i = phi i32 [ %currlen.2.i.lcssa, %.critedge.thread.i.loopexit ], [ %currlen.1.lcssa.i.lcssa, %.critedge.thread.i.loopexit587 ]
  %len.428.i = phi i32 [ %len.2.i.lcssa, %.critedge.thread.i.loopexit ], [ %len.1.lcssa.i.lcssa, %.critedge.thread.i.loopexit587 ]
  store i32 1, i32* %1, align 4, !tbaa !101
  tail call void (%struct.TreeCCInput*, i8*, ...) @TreeCCError(%struct.TreeCCInput* %input, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.29.670, i64 0, i64 0)) #2
  br label %.loopexit.i.36

; <label>:332                                     ; preds = %.critedge.i, %.critedge.thread30.i
  %currlen.432.i = phi i32 [ %currlen.3.i.lcssa, %.critedge.thread30.i ], [ %currlen.1.lcssa.i, %.critedge.i ]
  %len.431.i = phi i32 [ %len.3.i.lcssa, %.critedge.thread30.i ], [ %len.1.lcssa.i, %.critedge.i ]
  %333 = add nsw i32 %len.431.i, 1
  %334 = sext i32 %len.431.i to i64
  %335 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %input, i64 0, i32 11, i64 %334
  store i8 %248, i8* %335, align 1, !tbaa !27
  br label %532

; <label>:336                                     ; preds = %231
  %337 = add nsw i32 %len.0.ph.i, 1
  %338 = sext i32 %len.0.ph.i to i64
  %339 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %input, i64 0, i32 11, i64 %338
  store i8 47, i8* %339, align 1, !tbaa !27
  %340 = icmp sgt i32 %len.0.ph.i, 1021
  br i1 %340, label %341, label %FlushBuffer.exit13.i

; <label>:341                                     ; preds = %336
  %342 = icmp eq i32 %337, 0
  br i1 %342, label %FlushBuffer.exit13.i, label %343

; <label>:343                                     ; preds = %341
  %344 = load i8*, i8** %10, align 8, !tbaa !98
  %345 = add nsw i32 %currlen.0.ph.i, %337
  %346 = add nsw i32 %345, 1
  %347 = sext i32 %346 to i64
  %348 = tail call i8* @realloc(i8* %344, i64 %347) #2
  %349 = icmp eq i8* %348, null
  br i1 %349, label %350, label %351

; <label>:350                                     ; preds = %343
  tail call void @TreeCCOutOfMemory(%struct.TreeCCInput* %input) #2
  br label %351

; <label>:351                                     ; preds = %350, %343
  store i8* %348, i8** %10, align 8, !tbaa !98
  %352 = sext i32 %currlen.0.ph.i to i64
  %353 = getelementptr inbounds i8, i8* %348, i64 %352
  %354 = sext i32 %337 to i64
  %355 = tail call i8* @strncpy(i8* %353, i8* %13, i64 %354) #2
  %356 = sext i32 %345 to i64
  %357 = getelementptr inbounds i8, i8* %348, i64 %356
  store i8 0, i8* %357, align 1, !tbaa !27
  br label %FlushBuffer.exit13.i

FlushBuffer.exit13.i:                             ; preds = %351, %341, %336
  %len.5.i = phi i32 [ %337, %336 ], [ 0, %341 ], [ 0, %351 ]
  %currlen.5.i = phi i32 [ %currlen.0.ph.i, %336 ], [ %currlen.0.ph.i, %341 ], [ %345, %351 ]
  %358 = load %struct._IO_FILE*, %struct._IO_FILE** %19, align 8, !tbaa !99
  %359 = tail call i32 @_IO_getc(%struct._IO_FILE* %358) #2
  switch i32 %359, label %506 [
    i32 -1, label %360
    i32 47, label %361
    i32 42, label %411
  ]

; <label>:360                                     ; preds = %FlushBuffer.exit13.i
  %currlen.5.i.lcssa = phi i32 [ %currlen.5.i, %FlushBuffer.exit13.i ]
  %len.5.i.lcssa = phi i32 [ %len.5.i, %FlushBuffer.exit13.i ]
  store i32 1, i32* %1, align 4, !tbaa !101
  tail call void (%struct.TreeCCInput*, i8*, ...) @TreeCCError(%struct.TreeCCInput* %input, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.673, i64 0, i64 0)) #2
  br label %.loopexit.i.36

; <label>:361                                     ; preds = %FlushBuffer.exit13.i
  %362 = add nsw i32 %len.5.i, 1
  %363 = sext i32 %len.5.i to i64
  %364 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %input, i64 0, i32 11, i64 %363
  store i8 47, i8* %364, align 1, !tbaa !27
  %365 = icmp sgt i32 %len.5.i, 1021
  br i1 %365, label %366, label %FlushBuffer.exit15.outer.outer.i.preheader

; <label>:366                                     ; preds = %361
  %367 = icmp eq i32 %362, 0
  br i1 %367, label %FlushBuffer.exit15.outer.outer.i.preheader, label %368

; <label>:368                                     ; preds = %366
  %369 = load i8*, i8** %10, align 8, !tbaa !98
  %370 = add nsw i32 %currlen.5.i, %362
  %371 = add nsw i32 %370, 1
  %372 = sext i32 %371 to i64
  %373 = tail call i8* @realloc(i8* %369, i64 %372) #2
  %374 = icmp eq i8* %373, null
  br i1 %374, label %375, label %376

; <label>:375                                     ; preds = %368
  tail call void @TreeCCOutOfMemory(%struct.TreeCCInput* %input) #2
  br label %376

; <label>:376                                     ; preds = %375, %368
  store i8* %373, i8** %10, align 8, !tbaa !98
  %377 = sext i32 %currlen.5.i to i64
  %378 = getelementptr inbounds i8, i8* %373, i64 %377
  %379 = sext i32 %362 to i64
  %380 = tail call i8* @strncpy(i8* %378, i8* %13, i64 %379) #2
  %381 = sext i32 %370 to i64
  %382 = getelementptr inbounds i8, i8* %373, i64 %381
  store i8 0, i8* %382, align 1, !tbaa !27
  br label %FlushBuffer.exit15.outer.outer.i.preheader

FlushBuffer.exit15.outer.outer.i.preheader:       ; preds = %361, %366, %376
  %len.6.ph35.ph.i.ph = phi i32 [ %362, %361 ], [ 0, %366 ], [ 0, %376 ]
  %currlen.6.ph36.ph.i.ph = phi i32 [ %currlen.5.i, %361 ], [ %currlen.5.i, %366 ], [ %370, %376 ]
  br label %FlushBuffer.exit15.outer.outer.i

FlushBuffer.exit15.outer.outer.i:                 ; preds = %FlushBuffer.exit15.outer.outer.i.preheader, %401
  %len.6.ph35.ph.i = phi i32 [ 0, %401 ], [ %len.6.ph35.ph.i.ph, %FlushBuffer.exit15.outer.outer.i.preheader ]
  %currlen.6.ph36.ph.i = phi i32 [ %395, %401 ], [ %currlen.6.ph36.ph.i.ph, %FlushBuffer.exit15.outer.outer.i.preheader ]
  br label %FlushBuffer.exit15.outer.i

FlushBuffer.exit15.outer.i:                       ; preds = %FlushBuffer.exit15.outer.i.backedge, %FlushBuffer.exit15.outer.outer.i
  %len.6.ph35.i = phi i32 [ %len.6.ph35.ph.i, %FlushBuffer.exit15.outer.outer.i ], [ %len.6.ph35.i.be, %FlushBuffer.exit15.outer.i.backedge ]
  br label %FlushBuffer.exit15.i

FlushBuffer.exit15.i:                             ; preds = %InvalidChar.exit.i.35, %FlushBuffer.exit15.outer.i
  %383 = load %struct._IO_FILE*, %struct._IO_FILE** %19, align 8, !tbaa !99
  %384 = tail call i32 @_IO_getc(%struct._IO_FILE* %383) #2
  switch i32 %384, label %385 [
    i32 -1, label %switch.edge.i
    i32 10, label %408
    i32 13, label %408
    i32 0, label %InvalidChar.exit.i.35
  ]

; <label>:385                                     ; preds = %FlushBuffer.exit15.i
  %.lcssa742 = phi i32 [ %384, %FlushBuffer.exit15.i ]
  %386 = trunc i32 %.lcssa742 to i8
  %387 = add nsw i32 %len.6.ph35.i, 1
  %388 = sext i32 %len.6.ph35.i to i64
  %389 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %input, i64 0, i32 11, i64 %388
  store i8 %386, i8* %389, align 1, !tbaa !27
  %390 = icmp sgt i32 %len.6.ph35.i, 1021
  br i1 %390, label %391, label %FlushBuffer.exit15.outer.i.backedge

FlushBuffer.exit15.outer.i.backedge:              ; preds = %385, %391
  %len.6.ph35.i.be = phi i32 [ 0, %391 ], [ %387, %385 ]
  br label %FlushBuffer.exit15.outer.i

; <label>:391                                     ; preds = %385
  %392 = icmp eq i32 %387, 0
  br i1 %392, label %FlushBuffer.exit15.outer.i.backedge, label %393

; <label>:393                                     ; preds = %391
  %.lcssa747 = phi i32 [ %387, %391 ]
  %394 = load i8*, i8** %10, align 8, !tbaa !98
  %395 = add nsw i32 %.lcssa747, %currlen.6.ph36.ph.i
  %396 = add nsw i32 %395, 1
  %397 = sext i32 %396 to i64
  %398 = tail call i8* @realloc(i8* %394, i64 %397) #2
  %399 = icmp eq i8* %398, null
  br i1 %399, label %400, label %401

; <label>:400                                     ; preds = %393
  tail call void @TreeCCOutOfMemory(%struct.TreeCCInput* %input) #2
  br label %401

; <label>:401                                     ; preds = %400, %393
  store i8* %398, i8** %10, align 8, !tbaa !98
  %402 = sext i32 %currlen.6.ph36.ph.i to i64
  %403 = getelementptr inbounds i8, i8* %398, i64 %402
  %404 = sext i32 %.lcssa747 to i64
  %405 = tail call i8* @strncpy(i8* %403, i8* %13, i64 %404) #2
  %406 = sext i32 %395 to i64
  %407 = getelementptr inbounds i8, i8* %398, i64 %406
  store i8 0, i8* %407, align 1, !tbaa !27
  br label %FlushBuffer.exit15.outer.outer.i

InvalidChar.exit.i.35:                            ; preds = %FlushBuffer.exit15.i
  tail call void (%struct.TreeCCInput*, i8*, ...) @TreeCCError(%struct.TreeCCInput* %input, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.28.672, i64 0, i64 0), i32 0) #2
  br label %FlushBuffer.exit15.i

switch.edge.i:                                    ; preds = %FlushBuffer.exit15.i
  %currlen.6.ph36.ph.i.lcssa = phi i32 [ %currlen.6.ph36.ph.i, %FlushBuffer.exit15.i ]
  %len.6.ph35.i.lcssa = phi i32 [ %len.6.ph35.i, %FlushBuffer.exit15.i ]
  store i32 1, i32* %1, align 4, !tbaa !101
  tail call void (%struct.TreeCCInput*, i8*, ...) @TreeCCError(%struct.TreeCCInput* %input, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.673, i64 0, i64 0)) #2
  br label %.loopexit.i.36

; <label>:408                                     ; preds = %FlushBuffer.exit15.i, %FlushBuffer.exit15.i
  %currlen.6.ph36.ph.i.lcssa748 = phi i32 [ %currlen.6.ph36.ph.i, %FlushBuffer.exit15.i ], [ %currlen.6.ph36.ph.i, %FlushBuffer.exit15.i ]
  %len.6.ph35.i.lcssa745 = phi i32 [ %len.6.ph35.i, %FlushBuffer.exit15.i ], [ %len.6.ph35.i, %FlushBuffer.exit15.i ]
  %.lcssa744 = phi i32 [ %384, %FlushBuffer.exit15.i ], [ %384, %FlushBuffer.exit15.i ]
  %409 = load %struct._IO_FILE*, %struct._IO_FILE** %19, align 8, !tbaa !99
  %410 = tail call i32 @ungetc(i32 %.lcssa744, %struct._IO_FILE* %409) #2
  br label %532

; <label>:411                                     ; preds = %FlushBuffer.exit13.i
  %412 = add nsw i32 %len.5.i, 1
  %413 = sext i32 %len.5.i to i64
  %414 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %input, i64 0, i32 11, i64 %413
  store i8 42, i8* %414, align 1, !tbaa !27
  %415 = icmp sgt i32 %len.5.i, 1021
  br i1 %415, label %416, label %FlushBuffer.exit19.outer.i.preheader

; <label>:416                                     ; preds = %411
  %417 = icmp eq i32 %412, 0
  br i1 %417, label %FlushBuffer.exit19.outer.i.preheader, label %418

; <label>:418                                     ; preds = %416
  %419 = load i8*, i8** %10, align 8, !tbaa !98
  %420 = add nsw i32 %currlen.5.i, %412
  %421 = add nsw i32 %420, 1
  %422 = sext i32 %421 to i64
  %423 = tail call i8* @realloc(i8* %419, i64 %422) #2
  %424 = icmp eq i8* %423, null
  br i1 %424, label %425, label %426

; <label>:425                                     ; preds = %418
  tail call void @TreeCCOutOfMemory(%struct.TreeCCInput* %input) #2
  br label %426

; <label>:426                                     ; preds = %425, %418
  store i8* %423, i8** %10, align 8, !tbaa !98
  %427 = sext i32 %currlen.5.i to i64
  %428 = getelementptr inbounds i8, i8* %423, i64 %427
  %429 = sext i32 %412 to i64
  %430 = tail call i8* @strncpy(i8* %428, i8* %13, i64 %429) #2
  %431 = sext i32 %420 to i64
  %432 = getelementptr inbounds i8, i8* %423, i64 %431
  store i8 0, i8* %432, align 1, !tbaa !27
  br label %FlushBuffer.exit19.outer.i.preheader

FlushBuffer.exit19.outer.i.preheader:             ; preds = %411, %416, %426
  %len.7.ph37.i.ph = phi i32 [ %412, %411 ], [ 0, %416 ], [ 0, %426 ]
  %currlen.7.ph38.i.ph = phi i32 [ %currlen.5.i, %411 ], [ %currlen.5.i, %416 ], [ %420, %426 ]
  br label %FlushBuffer.exit19.outer.i

FlushBuffer.exit19.outer.i:                       ; preds = %FlushBuffer.exit19.outer.i.backedge, %FlushBuffer.exit19.outer.i.preheader
  %len.7.ph37.i = phi i32 [ %len.7.ph37.i.ph, %FlushBuffer.exit19.outer.i.preheader ], [ %len.7.ph37.i.be, %FlushBuffer.exit19.outer.i.backedge ]
  %currlen.7.ph38.i = phi i32 [ %currlen.7.ph38.i.ph, %FlushBuffer.exit19.outer.i.preheader ], [ %currlen.7.ph38.i.be, %FlushBuffer.exit19.outer.i.backedge ]
  br label %FlushBuffer.exit19.i

FlushBuffer.exit19.i:                             ; preds = %FlushBuffer.exit19.i.backedge, %FlushBuffer.exit19.outer.i
  %len.7.i = phi i32 [ %len.7.ph37.i, %FlushBuffer.exit19.outer.i ], [ %len.7.i.be, %FlushBuffer.exit19.i.backedge ]
  %433 = load %struct._IO_FILE*, %struct._IO_FILE** %19, align 8, !tbaa !99
  %434 = tail call i32 @_IO_getc(%struct._IO_FILE* %433) #2
  switch i32 %434, label %483 [
    i32 -1, label %435
    i32 42, label %436
    i32 10, label %468
    i32 13, label %471
  ]

; <label>:435                                     ; preds = %FlushBuffer.exit19.i
  %currlen.7.ph38.i.lcssa = phi i32 [ %currlen.7.ph38.i, %FlushBuffer.exit19.i ]
  %len.7.i.lcssa = phi i32 [ %len.7.i, %FlushBuffer.exit19.i ]
  store i32 1, i32* %1, align 4, !tbaa !101
  tail call void (%struct.TreeCCInput*, i8*, ...) @TreeCCError(%struct.TreeCCInput* %input, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.673, i64 0, i64 0)) #2
  br label %.loopexit.i.36

; <label>:436                                     ; preds = %FlushBuffer.exit19.i
  %len.7.i.lcssa733 = phi i32 [ %len.7.i, %FlushBuffer.exit19.i ]
  %437 = add nsw i32 %len.7.i.lcssa733, 1
  %438 = sext i32 %len.7.i.lcssa733 to i64
  %439 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %input, i64 0, i32 11, i64 %438
  store i8 42, i8* %439, align 1, !tbaa !27
  %440 = icmp sgt i32 %len.7.i.lcssa733, 1021
  br i1 %440, label %441, label %FlushBuffer.exit21.i

; <label>:441                                     ; preds = %436
  %442 = icmp eq i32 %437, 0
  br i1 %442, label %FlushBuffer.exit21.i, label %443

; <label>:443                                     ; preds = %441
  %444 = load i8*, i8** %10, align 8, !tbaa !98
  %445 = add nsw i32 %437, %currlen.7.ph38.i
  %446 = add nsw i32 %445, 1
  %447 = sext i32 %446 to i64
  %448 = tail call i8* @realloc(i8* %444, i64 %447) #2
  %449 = icmp eq i8* %448, null
  br i1 %449, label %450, label %451

; <label>:450                                     ; preds = %443
  tail call void @TreeCCOutOfMemory(%struct.TreeCCInput* %input) #2
  br label %451

; <label>:451                                     ; preds = %450, %443
  store i8* %448, i8** %10, align 8, !tbaa !98
  %452 = sext i32 %currlen.7.ph38.i to i64
  %453 = getelementptr inbounds i8, i8* %448, i64 %452
  %454 = sext i32 %437 to i64
  %455 = tail call i8* @strncpy(i8* %453, i8* %13, i64 %454) #2
  %456 = sext i32 %445 to i64
  %457 = getelementptr inbounds i8, i8* %448, i64 %456
  store i8 0, i8* %457, align 1, !tbaa !27
  br label %FlushBuffer.exit21.i

FlushBuffer.exit21.i:                             ; preds = %451, %441, %436
  %len.8.i = phi i32 [ %437, %436 ], [ 0, %441 ], [ 0, %451 ]
  %currlen.8.i = phi i32 [ %currlen.7.ph38.i, %436 ], [ %currlen.7.ph38.i, %441 ], [ %445, %451 ]
  %458 = load %struct._IO_FILE*, %struct._IO_FILE** %19, align 8, !tbaa !99
  %459 = tail call i32 @_IO_getc(%struct._IO_FILE* %458) #2
  switch i32 %459, label %465 [
    i32 47, label %460
    i32 -1, label %464
  ]

; <label>:460                                     ; preds = %FlushBuffer.exit21.i
  %currlen.8.i.lcssa = phi i32 [ %currlen.8.i, %FlushBuffer.exit21.i ]
  %len.8.i.lcssa = phi i32 [ %len.8.i, %FlushBuffer.exit21.i ]
  %461 = add nsw i32 %len.8.i.lcssa, 1
  %462 = sext i32 %len.8.i.lcssa to i64
  %463 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %input, i64 0, i32 11, i64 %462
  store i8 47, i8* %463, align 1, !tbaa !27
  br label %532

; <label>:464                                     ; preds = %FlushBuffer.exit21.i
  %currlen.8.i.lcssa741 = phi i32 [ %currlen.8.i, %FlushBuffer.exit21.i ]
  %len.8.i.lcssa740 = phi i32 [ %len.8.i, %FlushBuffer.exit21.i ]
  store i32 1, i32* %1, align 4, !tbaa !101
  tail call void (%struct.TreeCCInput*, i8*, ...) @TreeCCError(%struct.TreeCCInput* %input, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.673, i64 0, i64 0)) #2
  br label %.loopexit.i.36

; <label>:465                                     ; preds = %FlushBuffer.exit21.i
  %466 = load %struct._IO_FILE*, %struct._IO_FILE** %19, align 8, !tbaa !99
  %467 = tail call i32 @ungetc(i32 %459, %struct._IO_FILE* %466) #2
  br label %FlushBuffer.exit19.outer.i.backedge

FlushBuffer.exit19.outer.i.backedge:              ; preds = %465, %499
  %len.7.ph37.i.be = phi i32 [ 0, %499 ], [ %len.8.i, %465 ]
  %currlen.7.ph38.i.be = phi i32 [ %493, %499 ], [ %currlen.8.i, %465 ]
  br label %FlushBuffer.exit19.outer.i

; <label>:468                                     ; preds = %FlushBuffer.exit19.i
  %469 = load i64, i64* %17, align 8, !tbaa !102
  %470 = add nsw i64 %469, 1
  store i64 %470, i64* %17, align 8, !tbaa !102
  br label %483

; <label>:471                                     ; preds = %FlushBuffer.exit19.i
  %472 = load i64, i64* %17, align 8, !tbaa !102
  %473 = add nsw i64 %472, 1
  store i64 %473, i64* %17, align 8, !tbaa !102
  %474 = load %struct._IO_FILE*, %struct._IO_FILE** %19, align 8, !tbaa !99
  %475 = tail call i32 @_IO_getc(%struct._IO_FILE* %474) #2
  switch i32 %475, label %480 [
    i32 -1, label %476
    i32 10, label %483
  ]

; <label>:476                                     ; preds = %471
  %currlen.7.ph38.i.lcssa737 = phi i32 [ %currlen.7.ph38.i, %471 ]
  %len.7.i.lcssa734 = phi i32 [ %len.7.i, %471 ]
  %477 = add nsw i32 %len.7.i.lcssa734, 1
  %478 = sext i32 %len.7.i.lcssa734 to i64
  %479 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %input, i64 0, i32 11, i64 %478
  store i8 10, i8* %479, align 1, !tbaa !27
  store i32 1, i32* %1, align 4, !tbaa !101
  tail call void (%struct.TreeCCInput*, i8*, ...) @TreeCCError(%struct.TreeCCInput* %input, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.673, i64 0, i64 0)) #2
  br label %.loopexit.i.36

; <label>:480                                     ; preds = %471
  %481 = load %struct._IO_FILE*, %struct._IO_FILE** %19, align 8, !tbaa !99
  %482 = tail call i32 @ungetc(i32 %475, %struct._IO_FILE* %481) #2
  br label %483

; <label>:483                                     ; preds = %480, %471, %468, %FlushBuffer.exit19.i
  %ch.2.i = phi i32 [ 10, %468 ], [ %434, %FlushBuffer.exit19.i ], [ 10, %471 ], [ 10, %480 ]
  %484 = trunc i32 %ch.2.i to i8
  %485 = add nsw i32 %len.7.i, 1
  %486 = sext i32 %len.7.i to i64
  %487 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %input, i64 0, i32 11, i64 %486
  store i8 %484, i8* %487, align 1, !tbaa !27
  %488 = icmp sgt i32 %len.7.i, 1021
  br i1 %488, label %489, label %FlushBuffer.exit19.i.backedge

FlushBuffer.exit19.i.backedge:                    ; preds = %483, %489
  %len.7.i.be = phi i32 [ %485, %483 ], [ 0, %489 ]
  br label %FlushBuffer.exit19.i

; <label>:489                                     ; preds = %483
  %490 = icmp eq i32 %485, 0
  br i1 %490, label %FlushBuffer.exit19.i.backedge, label %491

; <label>:491                                     ; preds = %489
  %.lcssa736 = phi i32 [ %485, %489 ]
  %492 = load i8*, i8** %10, align 8, !tbaa !98
  %493 = add nsw i32 %.lcssa736, %currlen.7.ph38.i
  %494 = add nsw i32 %493, 1
  %495 = sext i32 %494 to i64
  %496 = tail call i8* @realloc(i8* %492, i64 %495) #2
  %497 = icmp eq i8* %496, null
  br i1 %497, label %498, label %499

; <label>:498                                     ; preds = %491
  tail call void @TreeCCOutOfMemory(%struct.TreeCCInput* %input) #2
  br label %499

; <label>:499                                     ; preds = %498, %491
  store i8* %496, i8** %10, align 8, !tbaa !98
  %500 = sext i32 %currlen.7.ph38.i to i64
  %501 = getelementptr inbounds i8, i8* %496, i64 %500
  %502 = sext i32 %.lcssa736 to i64
  %503 = tail call i8* @strncpy(i8* %501, i8* %13, i64 %502) #2
  %504 = sext i32 %493 to i64
  %505 = getelementptr inbounds i8, i8* %496, i64 %504
  store i8 0, i8* %505, align 1, !tbaa !27
  br label %FlushBuffer.exit19.outer.i.backedge

; <label>:506                                     ; preds = %FlushBuffer.exit13.i
  %507 = load %struct._IO_FILE*, %struct._IO_FILE** %19, align 8, !tbaa !99
  %508 = tail call i32 @ungetc(i32 %359, %struct._IO_FILE* %507) #2
  br label %532

; <label>:509                                     ; preds = %231
  %510 = load i64, i64* %17, align 8, !tbaa !102
  %511 = add nsw i64 %510, 1
  store i64 %511, i64* %17, align 8, !tbaa !102
  %512 = add nsw i32 %len.0.ph.i, 1
  %513 = sext i32 %len.0.ph.i to i64
  %514 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %input, i64 0, i32 11, i64 %513
  store i8 10, i8* %514, align 1, !tbaa !27
  br label %532

; <label>:515                                     ; preds = %231
  %516 = load i64, i64* %17, align 8, !tbaa !102
  %517 = add nsw i64 %516, 1
  store i64 %517, i64* %17, align 8, !tbaa !102
  %518 = add nsw i32 %len.0.ph.i, 1
  %519 = sext i32 %len.0.ph.i to i64
  %520 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %input, i64 0, i32 11, i64 %519
  store i8 10, i8* %520, align 1, !tbaa !27
  %521 = load %struct._IO_FILE*, %struct._IO_FILE** %19, align 8, !tbaa !99
  %522 = tail call i32 @_IO_getc(%struct._IO_FILE* %521) #2
  switch i32 %522, label %524 [
    i32 -1, label %523
    i32 10, label %532
  ]

; <label>:523                                     ; preds = %515
  %.lcssa771 = phi i32 [ %518, %515 ]
  %currlen.0.ph.i.lcssa762 = phi i32 [ %currlen.0.ph.i, %515 ]
  store i32 1, i32* %1, align 4, !tbaa !101
  tail call void (%struct.TreeCCInput*, i8*, ...) @TreeCCError(%struct.TreeCCInput* %input, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.673, i64 0, i64 0)) #2
  br label %.loopexit.i.36

; <label>:524                                     ; preds = %515
  %525 = load %struct._IO_FILE*, %struct._IO_FILE** %19, align 8, !tbaa !99
  %526 = tail call i32 @ungetc(i32 %522, %struct._IO_FILE* %525) #2
  br label %532

.thread.i:                                        ; preds = %231
  tail call void (%struct.TreeCCInput*, i8*, ...) @TreeCCError(%struct.TreeCCInput* %input, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.28.672, i64 0, i64 0), i32 0) #2
  br label %231

; <label>:527                                     ; preds = %231
  %.lcssa725 = phi i32 [ %233, %231 ]
  %528 = trunc i32 %.lcssa725 to i8
  %529 = add nsw i32 %len.0.ph.i, 1
  %530 = sext i32 %len.0.ph.i to i64
  %531 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %input, i64 0, i32 11, i64 %530
  store i8 %528, i8* %531, align 1, !tbaa !27
  br label %532

; <label>:532                                     ; preds = %527, %524, %515, %509, %506, %460, %408, %332, %242, %237
  %len.9.i = phi i32 [ %239, %237 ], [ %244, %242 ], [ %333, %332 ], [ %len.6.ph35.i.lcssa745, %408 ], [ %461, %460 ], [ %len.5.i, %506 ], [ %512, %509 ], [ %518, %524 ], [ %529, %527 ], [ %518, %515 ]
  %currlen.9.i = phi i32 [ %currlen.0.ph.i, %237 ], [ %currlen.0.ph.i, %242 ], [ %currlen.432.i, %332 ], [ %currlen.6.ph36.ph.i.lcssa748, %408 ], [ %currlen.8.i.lcssa, %460 ], [ %currlen.5.i, %506 ], [ %currlen.0.ph.i, %509 ], [ %currlen.0.ph.i, %524 ], [ %currlen.0.ph.i, %527 ], [ %currlen.0.ph.i, %515 ]
  %level.1.i = phi i64 [ %238, %237 ], [ %243, %242 ], [ %level.0.ph.i, %332 ], [ %level.0.ph.i, %408 ], [ %level.0.ph.i, %460 ], [ %level.0.ph.i, %506 ], [ %level.0.ph.i, %509 ], [ %level.0.ph.i, %524 ], [ %level.0.ph.i, %527 ], [ %level.0.ph.i, %515 ]
  %533 = icmp sgt i32 %len.9.i, 1022
  br i1 %533, label %534, label %.outer.i.backedge

.outer.i.backedge:                                ; preds = %532, %FlushBuffer.exit27.i
  %len.0.ph.i.be = phi i32 [ %len.9.i, %532 ], [ 0, %FlushBuffer.exit27.i ]
  %currlen.0.ph.i.be = phi i32 [ %currlen.9.i, %532 ], [ %536, %FlushBuffer.exit27.i ]
  br label %.outer.i

; <label>:534                                     ; preds = %532
  %535 = load i8*, i8** %10, align 8, !tbaa !98
  %536 = add nsw i32 %currlen.9.i, %len.9.i
  %537 = add nsw i32 %536, 1
  %538 = sext i32 %537 to i64
  %539 = tail call i8* @realloc(i8* %535, i64 %538) #2
  %540 = icmp eq i8* %539, null
  br i1 %540, label %541, label %FlushBuffer.exit27.i

; <label>:541                                     ; preds = %534
  tail call void @TreeCCOutOfMemory(%struct.TreeCCInput* %input) #2
  br label %FlushBuffer.exit27.i

FlushBuffer.exit27.i:                             ; preds = %541, %534
  store i8* %539, i8** %10, align 8, !tbaa !98
  %542 = sext i32 %currlen.9.i to i64
  %543 = getelementptr inbounds i8, i8* %539, i64 %542
  %544 = sext i32 %len.9.i to i64
  %545 = tail call i8* @strncpy(i8* %543, i8* %13, i64 %544) #2
  %546 = sext i32 %536 to i64
  %547 = getelementptr inbounds i8, i8* %539, i64 %546
  store i8 0, i8* %547, align 1, !tbaa !27
  br label %.outer.i.backedge

.loopexit.i.36.loopexit:                          ; preds = %235
  %currlen.0.ph.i.lcssa770 = phi i32 [ %currlen.0.ph.i, %235 ]
  %len.0.ph.i.lcssa761 = phi i32 [ %len.0.ph.i, %235 ]
  br label %.loopexit.i.36

.loopexit.i.36:                                   ; preds = %.loopexit.i.36.loopexit, %523, %476, %464, %435, %switch.edge.i, %360, %.critedge.thread.i, %234
  %len.10.i = phi i32 [ %len.0.ph.i.lcssa, %234 ], [ %len.428.i, %.critedge.thread.i ], [ %len.5.i.lcssa, %360 ], [ %len.6.ph35.i.lcssa, %switch.edge.i ], [ %len.7.i.lcssa, %435 ], [ %len.8.i.lcssa740, %464 ], [ %477, %476 ], [ %.lcssa771, %523 ], [ %len.0.ph.i.lcssa761, %.loopexit.i.36.loopexit ]
  %currlen.10.i = phi i32 [ %currlen.0.ph.i.lcssa, %234 ], [ %currlen.429.i, %.critedge.thread.i ], [ %currlen.5.i.lcssa, %360 ], [ %currlen.6.ph36.ph.i.lcssa, %switch.edge.i ], [ %currlen.7.ph38.i.lcssa, %435 ], [ %currlen.8.i.lcssa741, %464 ], [ %currlen.7.ph38.i.lcssa737, %476 ], [ %currlen.0.ph.i.lcssa762, %523 ], [ %currlen.0.ph.i.lcssa770, %.loopexit.i.36.loopexit ]
  %548 = icmp eq i32 %currlen.10.i, 0
  br i1 %548, label %566, label %549

; <label>:549                                     ; preds = %.loopexit.i.36
  %550 = icmp eq i32 %len.10.i, 0
  br i1 %550, label %LiteralCode.exit, label %551

; <label>:551                                     ; preds = %549
  %552 = load i8*, i8** %10, align 8, !tbaa !98
  %553 = add nsw i32 %currlen.10.i, %len.10.i
  %554 = add nsw i32 %553, 1
  %555 = sext i32 %554 to i64
  %556 = tail call i8* @realloc(i8* %552, i64 %555) #2
  %557 = icmp eq i8* %556, null
  br i1 %557, label %558, label %559

; <label>:558                                     ; preds = %551
  tail call void @TreeCCOutOfMemory(%struct.TreeCCInput* %input) #2
  br label %559

; <label>:559                                     ; preds = %558, %551
  store i8* %556, i8** %10, align 8, !tbaa !98
  %560 = sext i32 %currlen.10.i to i64
  %561 = getelementptr inbounds i8, i8* %556, i64 %560
  %562 = sext i32 %len.10.i to i64
  %563 = tail call i8* @strncpy(i8* %561, i8* %13, i64 %562) #2
  %564 = sext i32 %553 to i64
  %565 = getelementptr inbounds i8, i8* %556, i64 %564
  store i8 0, i8* %565, align 1, !tbaa !27
  br label %LiteralCode.exit

; <label>:566                                     ; preds = %.loopexit.i.36
  %567 = sext i32 %len.10.i to i64
  %568 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %input, i64 0, i32 11, i64 %567
  store i8 0, i8* %568, align 1, !tbaa !27
  store i8* %13, i8** %10, align 8, !tbaa !98
  br label %LiteralCode.exit

LiteralCode.exit:                                 ; preds = %549, %559, %566
  %569 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %input, i64 0, i32 0
  store i32 3, i32* %569, align 4, !tbaa !97
  br label %621

; <label>:570                                     ; preds = %227
  %571 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %input, i64 0, i32 0
  store i32 7, i32* %571, align 4, !tbaa !97
  br label %621

; <label>:572                                     ; preds = %118
  %573 = load %struct._IO_FILE*, %struct._IO_FILE** %19, align 8, !tbaa !99
  %574 = tail call i32 @_IO_getc(%struct._IO_FILE* %573) #2
  switch i32 %574, label %609 [
    i32 42, label %.preheader40.preheader
    i32 47, label %.preheader42.preheader
  ]

.preheader42.preheader:                           ; preds = %572
  br label %.preheader42

.preheader40.preheader:                           ; preds = %572
  br label %.preheader40

.preheader40:                                     ; preds = %.preheader40.backedge, %.preheader40.preheader
  %575 = load %struct._IO_FILE*, %struct._IO_FILE** %19, align 8, !tbaa !99
  %576 = tail call i32 @_IO_getc(%struct._IO_FILE* %575) #2
  switch i32 %576, label %.preheader40.backedge [
    i32 -1, label %.loopexit.loopexit589
    i32 42, label %.preheader.preheader
    i32 10, label %584
    i32 13, label %587
  ]

.preheader.preheader:                             ; preds = %.preheader40
  br label %.preheader

.loopexit.loopexit:                               ; preds = %.preheader
  br label %.loopexit

.loopexit.loopexit589:                            ; preds = %.preheader40, %587
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit589, %.loopexit.loopexit
  tail call void (%struct.TreeCCInput*, i8*, ...) @TreeCCError(%struct.TreeCCInput* %input, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.4.674, i64 0, i64 0)) #2
  store i32 1, i32* %1, align 4, !tbaa !101
  %577 = load i64, i64* %17, align 8, !tbaa !102
  store i64 %577, i64* %18, align 8, !tbaa !23
  %578 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %input, i64 0, i32 0
  store i32 0, i32* %578, align 4, !tbaa !97
  br label %621

.preheader:                                       ; preds = %.preheader.preheader, %.preheader
  %579 = load %struct._IO_FILE*, %struct._IO_FILE** %19, align 8, !tbaa !99
  %580 = tail call i32 @_IO_getc(%struct._IO_FILE* %579) #2
  switch i32 %580, label %581 [
    i32 -1, label %.loopexit.loopexit
    i32 47, label %InvalidChar.exit.loopexit
    i32 42, label %.preheader
  ]

; <label>:581                                     ; preds = %.preheader
  %.lcssa794 = phi i32 [ %580, %.preheader ]
  %582 = load %struct._IO_FILE*, %struct._IO_FILE** %19, align 8, !tbaa !99
  %583 = tail call i32 @ungetc(i32 %.lcssa794, %struct._IO_FILE* %582) #2
  br label %.preheader40.backedge

.preheader40.backedge:                            ; preds = %581, %592, %584, %.preheader40, %587
  br label %.preheader40

; <label>:584                                     ; preds = %.preheader40
  %585 = load i64, i64* %17, align 8, !tbaa !102
  %586 = add nsw i64 %585, 1
  store i64 %586, i64* %17, align 8, !tbaa !102
  br label %.preheader40.backedge

; <label>:587                                     ; preds = %.preheader40
  %588 = load i64, i64* %17, align 8, !tbaa !102
  %589 = add nsw i64 %588, 1
  store i64 %589, i64* %17, align 8, !tbaa !102
  %590 = load %struct._IO_FILE*, %struct._IO_FILE** %19, align 8, !tbaa !99
  %591 = tail call i32 @_IO_getc(%struct._IO_FILE* %590) #2
  switch i32 %591, label %592 [
    i32 -1, label %.loopexit.loopexit589
    i32 10, label %.preheader40.backedge
  ]

; <label>:592                                     ; preds = %587
  %593 = load %struct._IO_FILE*, %struct._IO_FILE** %19, align 8, !tbaa !99
  %594 = tail call i32 @ungetc(i32 %591, %struct._IO_FILE* %593) #2
  br label %.preheader40.backedge

.preheader42:                                     ; preds = %.preheader42.preheader, %.preheader42
  %595 = load %struct._IO_FILE*, %struct._IO_FILE** %19, align 8, !tbaa !99
  %596 = tail call i32 @_IO_getc(%struct._IO_FILE* %595) #2
  switch i32 %596, label %.preheader42 [
    i32 -1, label %597
    i32 10, label %.loopexit43.loopexit
    i32 13, label %600
  ]

; <label>:597                                     ; preds = %.preheader42
  store i32 1, i32* %1, align 4, !tbaa !101
  %598 = load i64, i64* %17, align 8, !tbaa !102
  store i64 %598, i64* %18, align 8, !tbaa !23
  %599 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %input, i64 0, i32 0
  store i32 0, i32* %599, align 4, !tbaa !97
  br label %621

; <label>:600                                     ; preds = %.preheader42
  %601 = load %struct._IO_FILE*, %struct._IO_FILE** %19, align 8, !tbaa !99
  %602 = tail call i32 @_IO_getc(%struct._IO_FILE* %601) #2
  switch i32 %602, label %604 [
    i32 -1, label %603
    i32 10, label %.loopexit43
  ]

; <label>:603                                     ; preds = %600
  store i32 1, i32* %1, align 4, !tbaa !101
  br label %.loopexit43

; <label>:604                                     ; preds = %600
  %605 = load %struct._IO_FILE*, %struct._IO_FILE** %19, align 8, !tbaa !99
  %606 = tail call i32 @ungetc(i32 %602, %struct._IO_FILE* %605) #2
  br label %.loopexit43

.loopexit43.loopexit:                             ; preds = %.preheader42
  br label %.loopexit43

.loopexit43:                                      ; preds = %.loopexit43.loopexit, %600, %603, %604
  %607 = load i64, i64* %17, align 8, !tbaa !102
  %608 = add nsw i64 %607, 1
  store i64 %608, i64* %17, align 8, !tbaa !102
  br label %InvalidChar.exit.backedge

; <label>:609                                     ; preds = %572
  tail call void (%struct.TreeCCInput*, i8*, ...) @TreeCCError(%struct.TreeCCInput* %input, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.27.669, i64 0, i64 0), i32 47) #2
  %610 = icmp eq i32 %574, -1
  br i1 %610, label %618, label %611

; <label>:611                                     ; preds = %609
  %612 = load %struct._IO_FILE*, %struct._IO_FILE** %19, align 8, !tbaa !99
  %613 = tail call i32 @ungetc(i32 %574, %struct._IO_FILE* %612) #2
  br label %InvalidChar.exit.backedge

; <label>:614                                     ; preds = %118
  %ch.off.i = add i32 %22, -32
  %615 = icmp ult i32 %ch.off.i, 95
  br i1 %615, label %616, label %617

; <label>:616                                     ; preds = %614
  tail call void (%struct.TreeCCInput*, i8*, ...) @TreeCCError(%struct.TreeCCInput* %input, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.27.669, i64 0, i64 0), i32 %22) #2
  br label %InvalidChar.exit.backedge

; <label>:617                                     ; preds = %614
  tail call void (%struct.TreeCCInput*, i8*, ...) @TreeCCError(%struct.TreeCCInput* %input, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.28.672, i64 0, i64 0), i32 %22) #2
  br label %InvalidChar.exit.backedge

; <label>:618                                     ; preds = %InvalidChar.exit, %609, %81
  %619 = load i64, i64* %17, align 8, !tbaa !102
  store i64 %619, i64* %18, align 8, !tbaa !23
  %620 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %input, i64 0, i32 0
  store i32 0, i32* %620, align 4, !tbaa !97
  store i32 1, i32* %1, align 4, !tbaa !101
  br label %621

; <label>:621                                     ; preds = %618, %597, %.loopexit, %570, %LiteralCode.exit, %RecogString.exit, %144, %142, %137, %135, %133, %131, %129, %127, %125, %123, %121, %119, %RecogIdentifier.exit33, %.outer._crit_edge, %69, %28, %26, %4
  %.0 = phi i32 [ 0, %4 ], [ 0, %618 ], [ 1, %26 ], [ 1, %28 ], [ 1, %69 ], [ 1, %.outer._crit_edge ], [ 1, %RecogIdentifier.exit33 ], [ 1, %119 ], [ 1, %121 ], [ 1, %123 ], [ 1, %125 ], [ 1, %127 ], [ 1, %129 ], [ 1, %131 ], [ 1, %133 ], [ 1, %135 ], [ 1, %137 ], [ 1, %142 ], [ 0, %144 ], [ 1, %RecogString.exit ], [ 1, %LiteralCode.exit ], [ 1, %570 ], [ 0, %.loopexit ], [ 0, %597 ]
  ret i32 %.0
}

; Function Attrs: nounwind
declare i32 @_IO_getc(%struct._IO_FILE* nocapture) #1

; Function Attrs: nounwind
declare i32 @ungetc(i32, %struct._IO_FILE* nocapture) #1

; Function Attrs: nounwind uwtable
define i8* @TreeCCValue(%struct.TreeCCInput* %input) #0 {
  %1 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %input, i64 0, i32 1
  %2 = load i8*, i8** %1, align 8, !tbaa !98
  %3 = icmp eq i8* %2, null
  br i1 %3, label %4, label %7

; <label>:4                                       ; preds = %0
  %5 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %input, i64 0, i32 0
  %6 = load i32, i32* %5, align 4, !tbaa !97
  tail call void (%struct.TreeCCInput*, i8*, ...) @TreeCCAbort(%struct.TreeCCInput* %input, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.5.675, i64 0, i64 0), i32 %6) #2
  br label %19

; <label>:7                                       ; preds = %0
  %8 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %input, i64 0, i32 11, i64 0
  %9 = icmp eq i8* %2, %8
  br i1 %9, label %11, label %10

; <label>:10                                      ; preds = %7
  store i8* null, i8** %1, align 8, !tbaa !98
  br label %19

; <label>:11                                      ; preds = %7
  %12 = tail call i64 @strlen(i8* %2) #12
  %13 = add i64 %12, 1
  %14 = tail call noalias i8* @malloc(i64 %13) #2
  %15 = icmp eq i8* %14, null
  br i1 %15, label %16, label %17

; <label>:16                                      ; preds = %11
  tail call void @TreeCCOutOfMemory(%struct.TreeCCInput* %input) #2
  br label %17

; <label>:17                                      ; preds = %11, %16
  %18 = tail call i8* @strcpy(i8* %14, i8* %2) #2
  store i8* null, i8** %1, align 8, !tbaa !98
  br label %19

; <label>:19                                      ; preds = %17, %10, %4
  %.0 = phi i8* [ %2, %10 ], [ %14, %17 ], [ null, %4 ]
  ret i8* %.0
}

; Function Attrs: nounwind
declare noalias i8* @malloc(i64) #1

; Function Attrs: nounwind
declare i8* @strcpy(i8*, i8* nocapture readonly) #1

; Function Attrs: nounwind
declare noalias i8* @realloc(i8* nocapture, i64) #1

; Function Attrs: nounwind
declare i8* @strncpy(i8*, i8* nocapture readonly, i64) #1

; Function Attrs: nounwind uwtable
define internal fastcc void @LiteralCodeDefn(%struct.TreeCCInput* %input, i32 %tillEnd) #0 {
  %1 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %input, i64 0, i32 3
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %1, align 8, !tbaa !99
  %3 = tail call i32 @_IO_getc(%struct._IO_FILE* %2) #2
  %4 = icmp eq i32 %3, -1
  br i1 %4, label %FlushBuffer.exit.outer._crit_edge, label %.lr.ph.lr.ph

.lr.ph.lr.ph:                                     ; preds = %0
  %5 = icmp ne i32 %tillEnd, 0
  %6 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %input, i64 0, i32 6
  %7 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %input, i64 0, i32 1
  %8 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %input, i64 0, i32 11, i64 0
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.lr.ph, %FlushBuffer.exit.outer.backedge
  %9 = phi i32 [ %3, %.lr.ph.lr.ph ], [ %115, %FlushBuffer.exit.outer.backedge ]
  %currlen.0.ph26 = phi i32 [ 0, %.lr.ph.lr.ph ], [ %currlen.0.ph.be, %FlushBuffer.exit.outer.backedge ]
  br i1 %5, label %.lr.ph.split.us.preheader, label %.lr.ph..lr.ph.split_crit_edge.preheader

.lr.ph..lr.ph.split_crit_edge.preheader:          ; preds = %.lr.ph
  br label %.lr.ph..lr.ph.split_crit_edge

.lr.ph.split.us.preheader:                        ; preds = %.lr.ph
  br label %.lr.ph.split.us

.lr.ph.split.us:                                  ; preds = %.lr.ph.split.us.preheader, %FlushBuffer.exit.backedge.us
  %10 = phi i32 [ %36, %FlushBuffer.exit.backedge.us ], [ %9, %.lr.ph.split.us.preheader ]
  %len.019.us = phi i32 [ %len.1.us53, %FlushBuffer.exit.backedge.us ], [ 0, %.lr.ph.split.us.preheader ]
  switch i32 %10, label %28 [
    i32 10, label %22
    i32 13, label %11
    i32 0, label %.thread
  ]

.thread:                                          ; preds = %.lr.ph.split.us
  tail call void (%struct.TreeCCInput*, i8*, ...) @TreeCCError(%struct.TreeCCInput* %input, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.28.672, i64 0, i64 0), i32 0) #2
  br label %FlushBuffer.exit.backedge.us

; <label>:11                                      ; preds = %.lr.ph.split.us
  %12 = load i64, i64* %6, align 8, !tbaa !102
  %13 = add nsw i64 %12, 1
  store i64 %13, i64* %6, align 8, !tbaa !102
  %14 = add nsw i32 %len.019.us, 1
  %15 = sext i32 %len.019.us to i64
  %16 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %input, i64 0, i32 11, i64 %15
  store i8 10, i8* %16, align 1, !tbaa !27
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** %1, align 8, !tbaa !99
  %18 = tail call i32 @_IO_getc(%struct._IO_FILE* %17) #2
  switch i32 %18, label %19 [
    i32 -1, label %.us-lcssa24.us.loopexit
    i32 10, label %33
  ]

; <label>:19                                      ; preds = %11
  %20 = load %struct._IO_FILE*, %struct._IO_FILE** %1, align 8, !tbaa !99
  %21 = tail call i32 @ungetc(i32 %18, %struct._IO_FILE* %20) #2
  br label %33

; <label>:22                                      ; preds = %.lr.ph.split.us
  %23 = load i64, i64* %6, align 8, !tbaa !102
  %24 = add nsw i64 %23, 1
  store i64 %24, i64* %6, align 8, !tbaa !102
  %25 = add nsw i32 %len.019.us, 1
  %26 = sext i32 %len.019.us to i64
  %27 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %input, i64 0, i32 11, i64 %26
  store i8 10, i8* %27, align 1, !tbaa !27
  br label %33

; <label>:28                                      ; preds = %.lr.ph.split.us
  %29 = trunc i32 %10 to i8
  %30 = add nsw i32 %len.019.us, 1
  %31 = sext i32 %len.019.us to i64
  %32 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %input, i64 0, i32 11, i64 %31
  store i8 %29, i8* %32, align 1, !tbaa !27
  br label %33

; <label>:33                                      ; preds = %28, %22, %19, %11
  %len.1.us = phi i32 [ %25, %22 ], [ %14, %19 ], [ %30, %28 ], [ %14, %11 ]
  %34 = icmp sgt i32 %len.1.us, 1022
  br i1 %34, label %.us-lcssa25.us.loopexit, label %FlushBuffer.exit.backedge.us

FlushBuffer.exit.backedge.us:                     ; preds = %.thread, %33
  %len.1.us53 = phi i32 [ %len.019.us, %.thread ], [ %len.1.us, %33 ]
  %35 = load %struct._IO_FILE*, %struct._IO_FILE** %1, align 8, !tbaa !99
  %36 = tail call i32 @_IO_getc(%struct._IO_FILE* %35) #2
  %37 = icmp eq i32 %36, -1
  br i1 %37, label %FlushBuffer.exit.outer._crit_edge.loopexit, label %.lr.ph.split.us

FlushBuffer.exit.outer._crit_edge.loopexit:       ; preds = %FlushBuffer.exit.backedge.us
  %currlen.0.ph26.lcssa123 = phi i32 [ %currlen.0.ph26, %FlushBuffer.exit.backedge.us ]
  %len.1.us53.lcssa = phi i32 [ %len.1.us53, %FlushBuffer.exit.backedge.us ]
  br label %FlushBuffer.exit.outer._crit_edge

FlushBuffer.exit.outer._crit_edge.loopexit94:     ; preds = %FlushBuffer.exit.backedge
  %currlen.0.ph26.lcssa121 = phi i32 [ %currlen.0.ph26, %FlushBuffer.exit.backedge ]
  %len.0.be.lcssa = phi i32 [ %len.0.be, %FlushBuffer.exit.backedge ]
  br label %FlushBuffer.exit.outer._crit_edge

FlushBuffer.exit.outer._crit_edge.loopexit95:     ; preds = %FlushBuffer.exit.outer.backedge
  %currlen.0.ph.be.lcssa = phi i32 [ %currlen.0.ph.be, %FlushBuffer.exit.outer.backedge ]
  br label %FlushBuffer.exit.outer._crit_edge

FlushBuffer.exit.outer._crit_edge:                ; preds = %FlushBuffer.exit.outer._crit_edge.loopexit95, %FlushBuffer.exit.outer._crit_edge.loopexit94, %FlushBuffer.exit.outer._crit_edge.loopexit, %0
  %currlen.0.ph.lcssa17 = phi i32 [ 0, %0 ], [ %currlen.0.ph26.lcssa123, %FlushBuffer.exit.outer._crit_edge.loopexit ], [ %currlen.0.ph26.lcssa121, %FlushBuffer.exit.outer._crit_edge.loopexit94 ], [ %currlen.0.ph.be.lcssa, %FlushBuffer.exit.outer._crit_edge.loopexit95 ]
  %len.0.lcssa = phi i32 [ 0, %0 ], [ %len.1.us53.lcssa, %FlushBuffer.exit.outer._crit_edge.loopexit ], [ %len.0.be.lcssa, %FlushBuffer.exit.outer._crit_edge.loopexit94 ], [ 0, %FlushBuffer.exit.outer._crit_edge.loopexit95 ]
  %38 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %input, i64 0, i32 8
  store i32 1, i32* %38, align 4, !tbaa !101
  %39 = icmp eq i32 %tillEnd, 0
  br i1 %39, label %40, label %.loopexit

; <label>:40                                      ; preds = %FlushBuffer.exit.outer._crit_edge
  tail call void (%struct.TreeCCInput*, i8*, ...) @TreeCCError(%struct.TreeCCInput* %input, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.673, i64 0, i64 0)) #2
  br label %.loopexit

.lr.ph..lr.ph.split_crit_edge:                    ; preds = %.lr.ph..lr.ph.split_crit_edge.preheader, %FlushBuffer.exit.backedge
  %41 = phi i32 [ %57, %FlushBuffer.exit.backedge ], [ %9, %.lr.ph..lr.ph.split_crit_edge.preheader ]
  %len.019 = phi i32 [ %len.0.be, %FlushBuffer.exit.backedge ], [ 0, %.lr.ph..lr.ph.split_crit_edge.preheader ]
  switch i32 %41, label %94 [
    i32 37, label %42
    i32 10, label %75
    i32 13, label %81
    i32 0, label %InvalidChar.exit
  ]

; <label>:42                                      ; preds = %.lr.ph..lr.ph.split_crit_edge
  %43 = load %struct._IO_FILE*, %struct._IO_FILE** %1, align 8, !tbaa !99
  %44 = tail call i32 @_IO_getc(%struct._IO_FILE* %43) #2
  switch i32 %44, label %49 [
    i32 125, label %.loopexit.loopexit
    i32 -1, label %.us-lcssa
  ]

.us-lcssa:                                        ; preds = %42
  %currlen.0.ph26.lcssa120 = phi i32 [ %currlen.0.ph26, %42 ]
  %len.019.lcssa112 = phi i32 [ %len.019, %42 ]
  %45 = add nsw i32 %len.019.lcssa112, 1
  %46 = sext i32 %len.019.lcssa112 to i64
  %47 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %input, i64 0, i32 11, i64 %46
  store i8 37, i8* %47, align 1, !tbaa !27
  %48 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %input, i64 0, i32 8
  store i32 1, i32* %48, align 4, !tbaa !101
  tail call void (%struct.TreeCCInput*, i8*, ...) @TreeCCError(%struct.TreeCCInput* %input, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.673, i64 0, i64 0)) #2
  br label %.loopexit

; <label>:49                                      ; preds = %42
  %50 = load %struct._IO_FILE*, %struct._IO_FILE** %1, align 8, !tbaa !99
  %51 = tail call i32 @ungetc(i32 %44, %struct._IO_FILE* %50) #2
  %52 = add nsw i32 %len.019, 1
  %53 = sext i32 %len.019 to i64
  %54 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %input, i64 0, i32 11, i64 %53
  store i8 37, i8* %54, align 1, !tbaa !27
  %55 = icmp sgt i32 %len.019, 1021
  br i1 %55, label %59, label %FlushBuffer.exit.backedge

FlushBuffer.exit.backedge:                        ; preds = %49, %99, %59
  %len.0.be = phi i32 [ %len.1, %99 ], [ %52, %49 ], [ 0, %59 ]
  %56 = load %struct._IO_FILE*, %struct._IO_FILE** %1, align 8, !tbaa !99
  %57 = tail call i32 @_IO_getc(%struct._IO_FILE* %56) #2
  %58 = icmp eq i32 %57, -1
  br i1 %58, label %FlushBuffer.exit.outer._crit_edge.loopexit94, label %.lr.ph..lr.ph.split_crit_edge

; <label>:59                                      ; preds = %49
  %60 = icmp eq i32 %52, 0
  br i1 %60, label %FlushBuffer.exit.backedge, label %.us-lcssa23

.us-lcssa23:                                      ; preds = %59
  %.lcssa116 = phi i32 [ %52, %59 ]
  %61 = load i8*, i8** %7, align 8, !tbaa !98
  %62 = add nsw i32 %currlen.0.ph26, %.lcssa116
  %63 = add nsw i32 %62, 1
  %64 = sext i32 %63 to i64
  %65 = tail call i8* @realloc(i8* %61, i64 %64) #2
  %66 = icmp eq i8* %65, null
  br i1 %66, label %67, label %68

; <label>:67                                      ; preds = %.us-lcssa23
  tail call void @TreeCCOutOfMemory(%struct.TreeCCInput* %input) #2
  br label %68

; <label>:68                                      ; preds = %67, %.us-lcssa23
  store i8* %65, i8** %7, align 8, !tbaa !98
  %69 = sext i32 %currlen.0.ph26 to i64
  %70 = getelementptr inbounds i8, i8* %65, i64 %69
  %71 = sext i32 %.lcssa116 to i64
  %72 = tail call i8* @strncpy(i8* %70, i8* %8, i64 %71) #2
  %73 = sext i32 %62 to i64
  %74 = getelementptr inbounds i8, i8* %65, i64 %73
  store i8 0, i8* %74, align 1, !tbaa !27
  br label %FlushBuffer.exit.outer.backedge

; <label>:75                                      ; preds = %.lr.ph..lr.ph.split_crit_edge
  %76 = load i64, i64* %6, align 8, !tbaa !102
  %77 = add nsw i64 %76, 1
  store i64 %77, i64* %6, align 8, !tbaa !102
  %78 = add nsw i32 %len.019, 1
  %79 = sext i32 %len.019 to i64
  %80 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %input, i64 0, i32 11, i64 %79
  store i8 10, i8* %80, align 1, !tbaa !27
  br label %99

; <label>:81                                      ; preds = %.lr.ph..lr.ph.split_crit_edge
  %82 = load i64, i64* %6, align 8, !tbaa !102
  %83 = add nsw i64 %82, 1
  store i64 %83, i64* %6, align 8, !tbaa !102
  %84 = add nsw i32 %len.019, 1
  %85 = sext i32 %len.019 to i64
  %86 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %input, i64 0, i32 11, i64 %85
  store i8 10, i8* %86, align 1, !tbaa !27
  %87 = load %struct._IO_FILE*, %struct._IO_FILE** %1, align 8, !tbaa !99
  %88 = tail call i32 @_IO_getc(%struct._IO_FILE* %87) #2
  switch i32 %88, label %91 [
    i32 -1, label %.us-lcssa24.us.loopexit92
    i32 10, label %99
  ]

.us-lcssa24.us.loopexit:                          ; preds = %11
  %currlen.0.ph26.lcssa122 = phi i32 [ %currlen.0.ph26, %11 ]
  %.lcssa118 = phi i32 [ %14, %11 ]
  br label %.us-lcssa24.us

.us-lcssa24.us.loopexit92:                        ; preds = %81
  %currlen.0.ph26.lcssa = phi i32 [ %currlen.0.ph26, %81 ]
  %.lcssa = phi i32 [ %84, %81 ]
  br label %.us-lcssa24.us

.us-lcssa24.us:                                   ; preds = %.us-lcssa24.us.loopexit92, %.us-lcssa24.us.loopexit
  %currlen.0.ph26125 = phi i32 [ %currlen.0.ph26.lcssa122, %.us-lcssa24.us.loopexit ], [ %currlen.0.ph26.lcssa, %.us-lcssa24.us.loopexit92 ]
  %.lcssa14 = phi i32 [ %.lcssa118, %.us-lcssa24.us.loopexit ], [ %.lcssa, %.us-lcssa24.us.loopexit92 ]
  %89 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %input, i64 0, i32 8
  store i32 1, i32* %89, align 4, !tbaa !101
  br i1 %5, label %.loopexit, label %90

; <label>:90                                      ; preds = %.us-lcssa24.us
  tail call void (%struct.TreeCCInput*, i8*, ...) @TreeCCError(%struct.TreeCCInput* %input, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.673, i64 0, i64 0)) #2
  br label %.loopexit

; <label>:91                                      ; preds = %81
  %92 = load %struct._IO_FILE*, %struct._IO_FILE** %1, align 8, !tbaa !99
  %93 = tail call i32 @ungetc(i32 %88, %struct._IO_FILE* %92) #2
  br label %99

InvalidChar.exit:                                 ; preds = %.lr.ph..lr.ph.split_crit_edge
  tail call void (%struct.TreeCCInput*, i8*, ...) @TreeCCError(%struct.TreeCCInput* %input, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.28.672, i64 0, i64 0), i32 0) #2
  br label %99

; <label>:94                                      ; preds = %.lr.ph..lr.ph.split_crit_edge
  %95 = trunc i32 %41 to i8
  %96 = add nsw i32 %len.019, 1
  %97 = sext i32 %len.019 to i64
  %98 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %input, i64 0, i32 11, i64 %97
  store i8 %95, i8* %98, align 1, !tbaa !27
  br label %99

; <label>:99                                      ; preds = %81, %91, %94, %InvalidChar.exit, %75
  %len.1 = phi i32 [ %78, %75 ], [ %84, %91 ], [ %len.019, %InvalidChar.exit ], [ %96, %94 ], [ %84, %81 ]
  %100 = icmp sgt i32 %len.1, 1022
  br i1 %100, label %.us-lcssa25.us.loopexit93, label %FlushBuffer.exit.backedge

.us-lcssa25.us.loopexit:                          ; preds = %33
  br label %.us-lcssa25.us

.us-lcssa25.us.loopexit93:                        ; preds = %99
  %len.1.lcssa117 = phi i32 [ %len.1, %99 ]
  br label %.us-lcssa25.us

.us-lcssa25.us:                                   ; preds = %.us-lcssa25.us.loopexit93, %.us-lcssa25.us.loopexit
  %len.1.lcssa = phi i32 [ 1023, %.us-lcssa25.us.loopexit ], [ %len.1.lcssa117, %.us-lcssa25.us.loopexit93 ]
  %101 = load i8*, i8** %7, align 8, !tbaa !98
  %102 = add nsw i32 %len.1.lcssa, %currlen.0.ph26
  %103 = add nsw i32 %102, 1
  %104 = sext i32 %103 to i64
  %105 = tail call i8* @realloc(i8* %101, i64 %104) #2
  %106 = icmp eq i8* %105, null
  br i1 %106, label %107, label %FlushBuffer.exit3

; <label>:107                                     ; preds = %.us-lcssa25.us
  tail call void @TreeCCOutOfMemory(%struct.TreeCCInput* %input) #2
  br label %FlushBuffer.exit3

FlushBuffer.exit3:                                ; preds = %.us-lcssa25.us, %107
  store i8* %105, i8** %7, align 8, !tbaa !98
  %108 = sext i32 %currlen.0.ph26 to i64
  %109 = getelementptr inbounds i8, i8* %105, i64 %108
  %110 = sext i32 %len.1.lcssa to i64
  %111 = tail call i8* @strncpy(i8* %109, i8* %8, i64 %110) #2
  %112 = sext i32 %102 to i64
  %113 = getelementptr inbounds i8, i8* %105, i64 %112
  store i8 0, i8* %113, align 1, !tbaa !27
  br label %FlushBuffer.exit.outer.backedge

FlushBuffer.exit.outer.backedge:                  ; preds = %FlushBuffer.exit3, %68
  %currlen.0.ph.be = phi i32 [ %62, %68 ], [ %102, %FlushBuffer.exit3 ]
  %114 = load %struct._IO_FILE*, %struct._IO_FILE** %1, align 8, !tbaa !99
  %115 = tail call i32 @_IO_getc(%struct._IO_FILE* %114) #2
  %116 = icmp eq i32 %115, -1
  br i1 %116, label %FlushBuffer.exit.outer._crit_edge.loopexit95, label %.lr.ph

.loopexit.loopexit:                               ; preds = %42
  %currlen.0.ph26.lcssa119 = phi i32 [ %currlen.0.ph26, %42 ]
  %len.019.lcssa111 = phi i32 [ %len.019, %42 ]
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %FlushBuffer.exit.outer._crit_edge, %.us-lcssa24.us, %90, %40, %.us-lcssa
  %currlen.0.ph18 = phi i32 [ %currlen.0.ph.lcssa17, %FlushBuffer.exit.outer._crit_edge ], [ %currlen.0.ph.lcssa17, %40 ], [ %currlen.0.ph26125, %.us-lcssa24.us ], [ %currlen.0.ph26125, %90 ], [ %currlen.0.ph26.lcssa120, %.us-lcssa ], [ %currlen.0.ph26.lcssa119, %.loopexit.loopexit ]
  %len.2 = phi i32 [ %len.0.lcssa, %FlushBuffer.exit.outer._crit_edge ], [ %len.0.lcssa, %40 ], [ %.lcssa14, %.us-lcssa24.us ], [ %.lcssa14, %90 ], [ %45, %.us-lcssa ], [ %len.019.lcssa111, %.loopexit.loopexit ]
  %117 = icmp eq i32 %currlen.0.ph18, 0
  br i1 %117, label %137, label %118

; <label>:118                                     ; preds = %.loopexit
  %119 = icmp eq i32 %len.2, 0
  br i1 %119, label %FinalizeBuffer.exit, label %120

; <label>:120                                     ; preds = %118
  %121 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %input, i64 0, i32 1
  %122 = load i8*, i8** %121, align 8, !tbaa !98
  %123 = add nsw i32 %len.2, %currlen.0.ph18
  %124 = add nsw i32 %123, 1
  %125 = sext i32 %124 to i64
  %126 = tail call i8* @realloc(i8* %122, i64 %125) #2
  %127 = icmp eq i8* %126, null
  br i1 %127, label %128, label %129

; <label>:128                                     ; preds = %120
  tail call void @TreeCCOutOfMemory(%struct.TreeCCInput* %input) #2
  br label %129

; <label>:129                                     ; preds = %128, %120
  store i8* %126, i8** %121, align 8, !tbaa !98
  %130 = sext i32 %currlen.0.ph18 to i64
  %131 = getelementptr inbounds i8, i8* %126, i64 %130
  %132 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %input, i64 0, i32 11, i64 0
  %133 = sext i32 %len.2 to i64
  %134 = tail call i8* @strncpy(i8* %131, i8* %132, i64 %133) #2
  %135 = sext i32 %123 to i64
  %136 = getelementptr inbounds i8, i8* %126, i64 %135
  store i8 0, i8* %136, align 1, !tbaa !27
  br label %FinalizeBuffer.exit

; <label>:137                                     ; preds = %.loopexit
  %138 = sext i32 %len.2 to i64
  %139 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %input, i64 0, i32 11, i64 %138
  store i8 0, i8* %139, align 1, !tbaa !27
  %140 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %input, i64 0, i32 11, i64 0
  %141 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %input, i64 0, i32 1
  store i8* %140, i8** %141, align 8, !tbaa !98
  br label %FinalizeBuffer.exit

FinalizeBuffer.exit:                              ; preds = %118, %129, %137
  ret void
}

; Function Attrs: nounwind uwtable
define void @TreeCCAddLiteralDefn(%struct._tagTreeCCContext* nocapture readonly %context, i8* %code, i32 %flags) #0 {
  %1 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 8
  %2 = load i16, i16* %1, align 8
  %.mask = and i16 %2, 1
  %3 = icmp eq i16 %.mask, 0
  br i1 %3, label %9, label %4

; <label>:4                                       ; preds = %0
  %5 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 2
  %6 = load %struct.TreeCCInput*, %struct.TreeCCInput** %5, align 8, !tbaa !1
  %7 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %6, i64 0, i32 5
  %8 = load i64, i64* %7, align 8, !tbaa !23
  tail call void (i64, i8*, ...) @TreeCCDebug(i64 %8, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.695, i64 0, i64 0), i32 %flags, i8* %code) #2
  br label %9

; <label>:9                                       ; preds = %0, %4
  %10 = and i32 %flags, 1
  %11 = icmp ne i32 %10, 0
  %.not = xor i1 %11, true
  %12 = and i32 %flags, 2
  %13 = icmp eq i32 %12, 0
  %or.cond = or i1 %13, %.not
  br i1 %or.cond, label %31, label %14

; <label>:14                                      ; preds = %9
  %15 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 4
  %16 = load %struct._tagTreeCCStream*, %struct._tagTreeCCStream** %15, align 8, !tbaa !28
  %17 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 2
  %18 = load %struct.TreeCCInput*, %struct.TreeCCInput** %17, align 8, !tbaa !1
  %19 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %18, i64 0, i32 4
  %20 = load i8*, i8** %19, align 8, !tbaa !21
  %21 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %18, i64 0, i32 5
  %22 = load i64, i64* %21, align 8, !tbaa !23
  %23 = lshr i32 %flags, 2
  %.lobit2 = and i32 %23, 1
  tail call void @TreeCCStreamAddLiteral(%struct._tagTreeCCStream* %16, i8* %code, i8* %20, i64 %22, i32 %.lobit2, i32 0) #2
  %24 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 5
  %25 = load %struct._tagTreeCCStream*, %struct._tagTreeCCStream** %24, align 8, !tbaa !33
  %26 = load %struct.TreeCCInput*, %struct.TreeCCInput** %17, align 8, !tbaa !1
  %27 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %26, i64 0, i32 4
  %28 = load i8*, i8** %27, align 8, !tbaa !21
  %29 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %26, i64 0, i32 5
  %30 = load i64, i64* %29, align 8, !tbaa !23
  tail call void @TreeCCStreamAddLiteral(%struct._tagTreeCCStream* %25, i8* %code, i8* %28, i64 %30, i32 %.lobit2, i32 1) #2
  br label %46

; <label>:31                                      ; preds = %9
  %32 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 2
  %33 = load %struct.TreeCCInput*, %struct.TreeCCInput** %32, align 8
  %34 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %33, i64 0, i32 4
  %35 = load i8*, i8** %34, align 8
  %36 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %33, i64 0, i32 5
  %37 = load i64, i64* %36, align 8
  br i1 %11, label %38, label %42

; <label>:38                                      ; preds = %31
  %39 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 5
  %40 = load %struct._tagTreeCCStream*, %struct._tagTreeCCStream** %39, align 8, !tbaa !33
  %41 = lshr i32 %flags, 2
  %.lobit1 = and i32 %41, 1
  tail call void @TreeCCStreamAddLiteral(%struct._tagTreeCCStream* %40, i8* %code, i8* %35, i64 %37, i32 %.lobit1, i32 0) #2
  br label %46

; <label>:42                                      ; preds = %31
  %43 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 4
  %44 = load %struct._tagTreeCCStream*, %struct._tagTreeCCStream** %43, align 8, !tbaa !28
  %45 = lshr i32 %flags, 2
  %.lobit = and i32 %45, 1
  tail call void @TreeCCStreamAddLiteral(%struct._tagTreeCCStream* %44, i8* %code, i8* %35, i64 %37, i32 %.lobit, i32 0) #2
  br label %46

; <label>:46                                      ; preds = %38, %42, %14
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @main(i32 %argc, i8** nocapture readonly %argv) #0 {
  %input = alloca %struct.TreeCCInput, align 8
  %1 = load i8*, i8** %argv, align 8, !tbaa !7
  %2 = bitcast %struct.TreeCCInput* %input to i8*
  call void @llvm.lifetime.start(i64 1096, i8* %2) #2
  %3 = sext i32 %argc to i64
  %4 = shl nsw i64 %3, 3
  %5 = tail call noalias i8* @malloc(i64 %4) #2
  %6 = bitcast i8* %5 to i8**
  %7 = icmp eq i8* %5, null
  br i1 %7, label %8, label %.preheader126

; <label>:8                                       ; preds = %0
  tail call void @TreeCCOutOfMemory(%struct.TreeCCInput* null) #2
  br label %.preheader126

.preheader126:                                    ; preds = %8, %0
  %9 = icmp sgt i32 %argc, 1
  br i1 %9, label %.lr.ph432.preheader, label %.critedge.thread123

.lr.ph432.preheader:                              ; preds = %.preheader126
  br label %.lr.ph432

.lr.ph432:                                        ; preds = %.lr.ph432.preheader, %.loopexit125
  %.0106431 = phi i32 [ %179, %.loopexit125 ], [ %argc, %.lr.ph432.preheader ]
  %.0107430 = phi i8** [ %180, %.loopexit125 ], [ %argv, %.lr.ph432.preheader ]
  %outputFile.0429 = phi i8* [ %outputFile.2, %.loopexit125 ], [ null, %.lr.ph432.preheader ]
  %headerFile.0428 = phi i8* [ %headerFile.2, %.loopexit125 ], [ null, %.lr.ph432.preheader ]
  %extension.0427 = phi i8* [ %extension.2, %.loopexit125 ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.696, i64 0, i64 0), %.lr.ph432.preheader ]
  %outputDir.0426 = phi i8* [ %outputDir.2, %.loopexit125 ], [ null, %.lr.ph432.preheader ]
  %forceCreate.0425 = phi i32 [ %forceCreate.2, %.loopexit125 ], [ 0, %.lr.ph432.preheader ]
  %generateOutput.0424 = phi i32 [ %generateOutput.2, %.loopexit125 ], [ 1, %.lr.ph432.preheader ]
  %num_options.0423 = phi i32 [ %num_options.2, %.loopexit125 ], [ 0, %.lr.ph432.preheader ]
  %10 = getelementptr inbounds i8*, i8** %.0107430, i64 1
  %11 = load i8*, i8** %10, align 8, !tbaa !7
  %12 = load i8, i8* %11, align 1, !tbaa !27
  %13 = icmp eq i8 %12, 45
  br i1 %13, label %14, label %.critedge.thread.loopexit

; <label>:14                                      ; preds = %.lr.ph432
  %15 = getelementptr inbounds i8, i8* %11, i64 1
  %16 = load i8, i8* %15, align 1, !tbaa !27
  switch i8 %16, label %.lr.ph413.preheader [
    i8 0, label %.critedge.thread.loopexit
    i8 45, label %17
  ]

.lr.ph413.preheader:                              ; preds = %14
  br label %.lr.ph413

; <label>:17                                      ; preds = %14
  %18 = getelementptr inbounds i8, i8* %11, i64 2
  %19 = load i8, i8* %18, align 1, !tbaa !27
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %.critedge, label %21

; <label>:21                                      ; preds = %17
  %22 = tail call i32 @strcmp(i8* %11, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1.697, i64 0, i64 0)) #2
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %31

; <label>:24                                      ; preds = %21
  %25 = icmp slt i32 %.0106431, 3
  br i1 %25, label %26, label %27

; <label>:26                                      ; preds = %24
  tail call fastcc void @Usage(i8* %1)
  br label %300

; <label>:27                                      ; preds = %24
  %28 = add nsw i32 %.0106431, -1
  %29 = getelementptr inbounds i8*, i8** %.0107430, i64 2
  %30 = load i8*, i8** %29, align 8, !tbaa !7
  br label %.loopexit125

; <label>:31                                      ; preds = %21
  %32 = tail call i32 @strcmp(i8* %11, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.698, i64 0, i64 0)) #2
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %41

; <label>:34                                      ; preds = %31
  %35 = icmp slt i32 %.0106431, 3
  br i1 %35, label %36, label %37

; <label>:36                                      ; preds = %34
  tail call fastcc void @Usage(i8* %1)
  br label %300

; <label>:37                                      ; preds = %34
  %38 = add nsw i32 %.0106431, -1
  %39 = getelementptr inbounds i8*, i8** %.0107430, i64 2
  %40 = load i8*, i8** %39, align 8, !tbaa !7
  br label %.loopexit125

; <label>:41                                      ; preds = %31
  %42 = tail call i32 @strcmp(i8* %11, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3.699, i64 0, i64 0)) #2
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %51

; <label>:44                                      ; preds = %41
  %45 = icmp slt i32 %.0106431, 3
  br i1 %45, label %46, label %47

; <label>:46                                      ; preds = %44
  tail call fastcc void @Usage(i8* %1)
  br label %300

; <label>:47                                      ; preds = %44
  %48 = add nsw i32 %.0106431, -1
  %49 = getelementptr inbounds i8*, i8** %.0107430, i64 2
  %50 = load i8*, i8** %49, align 8, !tbaa !7
  br label %.loopexit125

; <label>:51                                      ; preds = %41
  %52 = tail call i32 @strcmp(i8* %11, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4.700, i64 0, i64 0)) #2
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %58

; <label>:54                                      ; preds = %51
  %55 = add nsw i32 %.0106431, -1
  %56 = icmp slt i32 %.0106431, 3
  br i1 %56, label %57, label %.loopexit125

; <label>:57                                      ; preds = %54
  tail call fastcc void @Usage(i8* %1)
  br label %300

; <label>:58                                      ; preds = %51
  %59 = tail call i32 @strcmp(i8* %11, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.5.701, i64 0, i64 0)) #2
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %68

; <label>:61                                      ; preds = %58
  %62 = icmp slt i32 %.0106431, 3
  br i1 %62, label %63, label %64

; <label>:63                                      ; preds = %61
  tail call fastcc void @Usage(i8* %1)
  br label %300

; <label>:64                                      ; preds = %61
  %65 = add nsw i32 %.0106431, -1
  %66 = getelementptr inbounds i8*, i8** %.0107430, i64 2
  %67 = load i8*, i8** %66, align 8, !tbaa !7
  br label %.loopexit125

; <label>:68                                      ; preds = %58
  %69 = tail call i32 @strcmp(i8* %11, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6.702, i64 0, i64 0)) #2
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %83

; <label>:71                                      ; preds = %68
  %72 = icmp slt i32 %.0106431, 3
  br i1 %72, label %73, label %74

; <label>:73                                      ; preds = %71
  tail call fastcc void @Usage(i8* %1)
  br label %300

; <label>:74                                      ; preds = %71
  %75 = add nsw i32 %.0106431, -1
  %76 = getelementptr inbounds i8*, i8** %.0107430, i64 2
  %77 = bitcast i8** %76 to i64*
  %78 = load i64, i64* %77, align 8, !tbaa !7
  %79 = add nsw i32 %num_options.0423, 1
  %80 = sext i32 %num_options.0423 to i64
  %81 = getelementptr inbounds i8*, i8** %6, i64 %80
  %82 = bitcast i8** %81 to i64*
  store i64 %78, i64* %82, align 8, !tbaa !7
  br label %.loopexit125

; <label>:83                                      ; preds = %68
  %84 = tail call i32 @strcmp(i8* %11, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.7.703, i64 0, i64 0)) #2
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %.loopexit125, label %86

; <label>:86                                      ; preds = %83
  %87 = tail call i32 @strcmp(i8* %11, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.8.704, i64 0, i64 0)) #2
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %.loopexit125, label %89

; <label>:89                                      ; preds = %86
  %.lcssa1410 = phi i8* [ %11, %86 ]
  %90 = tail call i32 @strcmp(i8* %.lcssa1410, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9.705, i64 0, i64 0)) #2
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %93

; <label>:92                                      ; preds = %89
  tail call fastcc void @Usage(i8* %1)
  br label %300

; <label>:93                                      ; preds = %89
  %94 = tail call i32 @strcmp(i8* %.lcssa1410, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.10.706, i64 0, i64 0)) #2
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %96, label %97

; <label>:96                                      ; preds = %93
  %puts.i = tail call i32 @puts(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @str, i64 0, i64 0)) #2
  %puts1.i = tail call i32 @puts(i8* getelementptr inbounds ([59 x i8], [59 x i8]* @str.42, i64 0, i64 0)) #2
  %putchar.i = tail call i32 @putchar(i32 10) #2
  %puts2.i = tail call i32 @puts(i8* getelementptr inbounds ([66 x i8], [66 x i8]* @str.43, i64 0, i64 0)) #2
  %puts3.i = tail call i32 @puts(i8* getelementptr inbounds ([62 x i8], [62 x i8]* @str.44, i64 0, i64 0)) #2
  %puts4.i = tail call i32 @puts(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @str.45, i64 0, i64 0)) #2
  %putchar5.i = tail call i32 @putchar(i32 10) #2
  %puts6.i = tail call i32 @puts(i8* getelementptr inbounds ([65 x i8], [65 x i8]* @str.46, i64 0, i64 0)) #2
  br label %300

; <label>:97                                      ; preds = %93
  tail call fastcc void @Usage(i8* %1)
  br label %300

.lr.ph413:                                        ; preds = %.lr.ph413.preheader, %.backedge
  %98 = phi i8 [ %161, %.backedge ], [ %16, %.lr.ph413.preheader ]
  %.1412 = phi i32 [ %.1.be, %.backedge ], [ %.0106431, %.lr.ph413.preheader ]
  %.1108411 = phi i8** [ %.1108.be, %.backedge ], [ %.0107430, %.lr.ph413.preheader ]
  %opt.0410 = phi i8* [ %opt.0.be, %.backedge ], [ %15, %.lr.ph413.preheader ]
  %outputFile.1409 = phi i8* [ %outputFile.1.be, %.backedge ], [ %outputFile.0429, %.lr.ph413.preheader ]
  %headerFile.1408 = phi i8* [ %headerFile.1.be, %.backedge ], [ %headerFile.0428, %.lr.ph413.preheader ]
  %extension.1407 = phi i8* [ %extension.1.be, %.backedge ], [ %extension.0427, %.lr.ph413.preheader ]
  %outputDir.1406 = phi i8* [ %outputDir.1.be, %.backedge ], [ %outputDir.0426, %.lr.ph413.preheader ]
  %forceCreate.1405 = phi i32 [ %forceCreate.1.be, %.backedge ], [ %forceCreate.0425, %.lr.ph413.preheader ]
  %generateOutput.1404 = phi i32 [ %generateOutput.1.be, %.backedge ], [ %generateOutput.0424, %.lr.ph413.preheader ]
  %num_options.1403 = phi i32 [ %num_options.1.be, %.backedge ], [ %num_options.0423, %.lr.ph413.preheader ]
  %99 = sext i8 %98 to i32
  %100 = getelementptr inbounds i8, i8* %opt.0410, i64 1
  switch i32 %99, label %178 [
    i32 111, label %101
    i32 104, label %112
    i32 100, label %123
    i32 115, label %134
    i32 101, label %143
    i32 79, label %154
    i32 102, label %.backedge
    i32 110, label %176
    i32 118, label %177
  ]

; <label>:101                                     ; preds = %.lr.ph413
  %102 = load i8, i8* %100, align 1, !tbaa !27
  %103 = icmp eq i8 %102, 0
  br i1 %103, label %104, label %.backedge

; <label>:104                                     ; preds = %101
  %105 = icmp slt i32 %.1412, 3
  br i1 %105, label %106, label %107

; <label>:106                                     ; preds = %104
  tail call fastcc void @Usage(i8* %1)
  br label %300

; <label>:107                                     ; preds = %104
  %108 = add nsw i32 %.1412, -1
  %109 = getelementptr inbounds i8*, i8** %.1108411, i64 1
  %110 = getelementptr inbounds i8*, i8** %.1108411, i64 2
  %111 = load i8*, i8** %110, align 8, !tbaa !7
  br label %.backedge

; <label>:112                                     ; preds = %.lr.ph413
  %113 = load i8, i8* %100, align 1, !tbaa !27
  %114 = icmp eq i8 %113, 0
  br i1 %114, label %115, label %.backedge

; <label>:115                                     ; preds = %112
  %116 = icmp slt i32 %.1412, 3
  br i1 %116, label %117, label %118

; <label>:117                                     ; preds = %115
  tail call fastcc void @Usage(i8* %1)
  br label %300

; <label>:118                                     ; preds = %115
  %119 = add nsw i32 %.1412, -1
  %120 = getelementptr inbounds i8*, i8** %.1108411, i64 1
  %121 = getelementptr inbounds i8*, i8** %.1108411, i64 2
  %122 = load i8*, i8** %121, align 8, !tbaa !7
  br label %.backedge

; <label>:123                                     ; preds = %.lr.ph413
  %124 = load i8, i8* %100, align 1, !tbaa !27
  %125 = icmp eq i8 %124, 0
  br i1 %125, label %126, label %.backedge

; <label>:126                                     ; preds = %123
  %127 = icmp slt i32 %.1412, 3
  br i1 %127, label %128, label %129

; <label>:128                                     ; preds = %126
  tail call fastcc void @Usage(i8* %1)
  br label %300

; <label>:129                                     ; preds = %126
  %130 = add nsw i32 %.1412, -1
  %131 = getelementptr inbounds i8*, i8** %.1108411, i64 1
  %132 = getelementptr inbounds i8*, i8** %.1108411, i64 2
  %133 = load i8*, i8** %132, align 8, !tbaa !7
  br label %.backedge

; <label>:134                                     ; preds = %.lr.ph413
  %135 = load i8, i8* %100, align 1, !tbaa !27
  %136 = icmp eq i8 %135, 0
  br i1 %136, label %137, label %.backedge

; <label>:137                                     ; preds = %134
  %138 = icmp slt i32 %.1412, 3
  br i1 %138, label %139, label %140

; <label>:139                                     ; preds = %137
  tail call fastcc void @Usage(i8* %1)
  br label %300

; <label>:140                                     ; preds = %137
  %141 = add nsw i32 %.1412, -1
  %142 = getelementptr inbounds i8*, i8** %.1108411, i64 1
  br label %.backedge

; <label>:143                                     ; preds = %.lr.ph413
  %144 = load i8, i8* %100, align 1, !tbaa !27
  %145 = icmp eq i8 %144, 0
  br i1 %145, label %146, label %.backedge

; <label>:146                                     ; preds = %143
  %147 = icmp slt i32 %.1412, 3
  br i1 %147, label %148, label %149

; <label>:148                                     ; preds = %146
  tail call fastcc void @Usage(i8* %1)
  br label %300

; <label>:149                                     ; preds = %146
  %150 = add nsw i32 %.1412, -1
  %151 = getelementptr inbounds i8*, i8** %.1108411, i64 1
  %152 = getelementptr inbounds i8*, i8** %.1108411, i64 2
  %153 = load i8*, i8** %152, align 8, !tbaa !7
  br label %.backedge

; <label>:154                                     ; preds = %.lr.ph413
  %155 = load i8, i8* %100, align 1, !tbaa !27
  %156 = icmp eq i8 %155, 0
  br i1 %156, label %163, label %157

; <label>:157                                     ; preds = %154
  %158 = add nsw i32 %num_options.1403, 1
  %159 = sext i32 %num_options.1403 to i64
  %160 = getelementptr inbounds i8*, i8** %6, i64 %159
  store i8* %100, i8** %160, align 8, !tbaa !7
  br label %.backedge

.backedge:                                        ; preds = %157, %166, %149, %140, %129, %118, %107, %176, %101, %112, %123, %134, %143, %.lr.ph413
  %num_options.1.be = phi i32 [ %num_options.1403, %176 ], [ %158, %157 ], [ %172, %166 ], [ %num_options.1403, %149 ], [ %num_options.1403, %140 ], [ %num_options.1403, %129 ], [ %num_options.1403, %118 ], [ %num_options.1403, %107 ], [ %num_options.1403, %101 ], [ %num_options.1403, %112 ], [ %num_options.1403, %123 ], [ %num_options.1403, %134 ], [ %num_options.1403, %143 ], [ %num_options.1403, %.lr.ph413 ]
  %generateOutput.1.be = phi i32 [ 0, %176 ], [ %generateOutput.1404, %157 ], [ %generateOutput.1404, %166 ], [ %generateOutput.1404, %149 ], [ %generateOutput.1404, %140 ], [ %generateOutput.1404, %129 ], [ %generateOutput.1404, %118 ], [ %generateOutput.1404, %107 ], [ %generateOutput.1404, %101 ], [ %generateOutput.1404, %112 ], [ %generateOutput.1404, %123 ], [ %generateOutput.1404, %134 ], [ %generateOutput.1404, %143 ], [ %generateOutput.1404, %.lr.ph413 ]
  %forceCreate.1.be = phi i32 [ %forceCreate.1405, %176 ], [ %forceCreate.1405, %157 ], [ %forceCreate.1405, %166 ], [ %forceCreate.1405, %149 ], [ %forceCreate.1405, %140 ], [ %forceCreate.1405, %129 ], [ %forceCreate.1405, %118 ], [ %forceCreate.1405, %107 ], [ %forceCreate.1405, %101 ], [ %forceCreate.1405, %112 ], [ %forceCreate.1405, %123 ], [ %forceCreate.1405, %134 ], [ %forceCreate.1405, %143 ], [ 1, %.lr.ph413 ]
  %outputDir.1.be = phi i8* [ %outputDir.1406, %176 ], [ %outputDir.1406, %157 ], [ %outputDir.1406, %166 ], [ %outputDir.1406, %149 ], [ %outputDir.1406, %140 ], [ %133, %129 ], [ %outputDir.1406, %118 ], [ %outputDir.1406, %107 ], [ %outputDir.1406, %101 ], [ %outputDir.1406, %112 ], [ %100, %123 ], [ %outputDir.1406, %134 ], [ %outputDir.1406, %143 ], [ %outputDir.1406, %.lr.ph413 ]
  %extension.1.be = phi i8* [ %extension.1407, %176 ], [ %extension.1407, %157 ], [ %extension.1407, %166 ], [ %153, %149 ], [ %extension.1407, %140 ], [ %extension.1407, %129 ], [ %extension.1407, %118 ], [ %extension.1407, %107 ], [ %extension.1407, %101 ], [ %extension.1407, %112 ], [ %extension.1407, %123 ], [ %extension.1407, %134 ], [ %100, %143 ], [ %extension.1407, %.lr.ph413 ]
  %headerFile.1.be = phi i8* [ %headerFile.1408, %176 ], [ %headerFile.1408, %157 ], [ %headerFile.1408, %166 ], [ %headerFile.1408, %149 ], [ %headerFile.1408, %140 ], [ %headerFile.1408, %129 ], [ %122, %118 ], [ %headerFile.1408, %107 ], [ %headerFile.1408, %101 ], [ %100, %112 ], [ %headerFile.1408, %123 ], [ %headerFile.1408, %134 ], [ %headerFile.1408, %143 ], [ %headerFile.1408, %.lr.ph413 ]
  %outputFile.1.be = phi i8* [ %outputFile.1409, %176 ], [ %outputFile.1409, %157 ], [ %outputFile.1409, %166 ], [ %outputFile.1409, %149 ], [ %outputFile.1409, %140 ], [ %outputFile.1409, %129 ], [ %outputFile.1409, %118 ], [ %111, %107 ], [ %100, %101 ], [ %outputFile.1409, %112 ], [ %outputFile.1409, %123 ], [ %outputFile.1409, %134 ], [ %outputFile.1409, %143 ], [ %outputFile.1409, %.lr.ph413 ]
  %opt.0.be = phi i8* [ %100, %176 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.11.707, i64 0, i64 0), %157 ], [ %100, %166 ], [ %100, %149 ], [ %100, %140 ], [ %100, %129 ], [ %100, %118 ], [ %100, %107 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.11.707, i64 0, i64 0), %101 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.11.707, i64 0, i64 0), %112 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.11.707, i64 0, i64 0), %123 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.11.707, i64 0, i64 0), %134 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.11.707, i64 0, i64 0), %143 ], [ %100, %.lr.ph413 ]
  %.1108.be = phi i8** [ %.1108411, %176 ], [ %.1108411, %157 ], [ %168, %166 ], [ %151, %149 ], [ %142, %140 ], [ %131, %129 ], [ %120, %118 ], [ %109, %107 ], [ %.1108411, %101 ], [ %.1108411, %112 ], [ %.1108411, %123 ], [ %.1108411, %134 ], [ %.1108411, %143 ], [ %.1108411, %.lr.ph413 ]
  %.1.be = phi i32 [ %.1412, %176 ], [ %.1412, %157 ], [ %167, %166 ], [ %150, %149 ], [ %141, %140 ], [ %130, %129 ], [ %119, %118 ], [ %108, %107 ], [ %.1412, %101 ], [ %.1412, %112 ], [ %.1412, %123 ], [ %.1412, %134 ], [ %.1412, %143 ], [ %.1412, %.lr.ph413 ]
  %161 = load i8, i8* %opt.0.be, align 1, !tbaa !27
  %162 = icmp eq i8 %161, 0
  br i1 %162, label %.loopexit125.loopexit, label %.lr.ph413

; <label>:163                                     ; preds = %154
  %164 = icmp slt i32 %.1412, 3
  br i1 %164, label %165, label %166

; <label>:165                                     ; preds = %163
  tail call fastcc void @Usage(i8* %1)
  br label %300

; <label>:166                                     ; preds = %163
  %167 = add nsw i32 %.1412, -1
  %168 = getelementptr inbounds i8*, i8** %.1108411, i64 1
  %169 = getelementptr inbounds i8*, i8** %.1108411, i64 2
  %170 = bitcast i8** %169 to i64*
  %171 = load i64, i64* %170, align 8, !tbaa !7
  %172 = add nsw i32 %num_options.1403, 1
  %173 = sext i32 %num_options.1403 to i64
  %174 = getelementptr inbounds i8*, i8** %6, i64 %173
  %175 = bitcast i8** %174 to i64*
  store i64 %171, i64* %175, align 8, !tbaa !7
  br label %.backedge

; <label>:176                                     ; preds = %.lr.ph413
  br label %.backedge

; <label>:177                                     ; preds = %.lr.ph413
  %puts.i.113 = tail call i32 @puts(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @str, i64 0, i64 0)) #2
  %puts1.i.114 = tail call i32 @puts(i8* getelementptr inbounds ([59 x i8], [59 x i8]* @str.42, i64 0, i64 0)) #2
  %putchar.i.115 = tail call i32 @putchar(i32 10) #2
  %puts2.i.116 = tail call i32 @puts(i8* getelementptr inbounds ([66 x i8], [66 x i8]* @str.43, i64 0, i64 0)) #2
  %puts3.i.117 = tail call i32 @puts(i8* getelementptr inbounds ([62 x i8], [62 x i8]* @str.44, i64 0, i64 0)) #2
  %puts4.i.118 = tail call i32 @puts(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @str.45, i64 0, i64 0)) #2
  %putchar5.i.119 = tail call i32 @putchar(i32 10) #2
  %puts6.i.120 = tail call i32 @puts(i8* getelementptr inbounds ([65 x i8], [65 x i8]* @str.46, i64 0, i64 0)) #2
  br label %300

; <label>:178                                     ; preds = %.lr.ph413
  tail call fastcc void @Usage(i8* %1)
  br label %300

.loopexit125.loopexit:                            ; preds = %.backedge
  %.1.be.lcssa = phi i32 [ %.1.be, %.backedge ]
  %.1108.be.lcssa = phi i8** [ %.1108.be, %.backedge ]
  %outputFile.1.be.lcssa = phi i8* [ %outputFile.1.be, %.backedge ]
  %headerFile.1.be.lcssa = phi i8* [ %headerFile.1.be, %.backedge ]
  %extension.1.be.lcssa = phi i8* [ %extension.1.be, %.backedge ]
  %outputDir.1.be.lcssa = phi i8* [ %outputDir.1.be, %.backedge ]
  %forceCreate.1.be.lcssa = phi i32 [ %forceCreate.1.be, %.backedge ]
  %generateOutput.1.be.lcssa = phi i32 [ %generateOutput.1.be, %.backedge ]
  %num_options.1.be.lcssa = phi i32 [ %num_options.1.be, %.backedge ]
  br label %.loopexit125

.loopexit125:                                     ; preds = %.loopexit125.loopexit, %86, %83, %37, %54, %74, %64, %47, %27
  %num_options.2 = phi i32 [ %79, %74 ], [ %num_options.0423, %64 ], [ %num_options.0423, %54 ], [ %num_options.0423, %47 ], [ %num_options.0423, %37 ], [ %num_options.0423, %27 ], [ %num_options.0423, %83 ], [ %num_options.0423, %86 ], [ %num_options.1.be.lcssa, %.loopexit125.loopexit ]
  %generateOutput.2 = phi i32 [ %generateOutput.0424, %74 ], [ %generateOutput.0424, %64 ], [ %generateOutput.0424, %54 ], [ %generateOutput.0424, %47 ], [ %generateOutput.0424, %37 ], [ %generateOutput.0424, %27 ], [ %generateOutput.0424, %83 ], [ 0, %86 ], [ %generateOutput.1.be.lcssa, %.loopexit125.loopexit ]
  %forceCreate.2 = phi i32 [ %forceCreate.0425, %74 ], [ %forceCreate.0425, %64 ], [ %forceCreate.0425, %54 ], [ %forceCreate.0425, %47 ], [ %forceCreate.0425, %37 ], [ %forceCreate.0425, %27 ], [ 1, %83 ], [ %forceCreate.0425, %86 ], [ %forceCreate.1.be.lcssa, %.loopexit125.loopexit ]
  %outputDir.2 = phi i8* [ %outputDir.0426, %74 ], [ %outputDir.0426, %64 ], [ %outputDir.0426, %54 ], [ %50, %47 ], [ %outputDir.0426, %37 ], [ %outputDir.0426, %27 ], [ %outputDir.0426, %83 ], [ %outputDir.0426, %86 ], [ %outputDir.1.be.lcssa, %.loopexit125.loopexit ]
  %extension.2 = phi i8* [ %extension.0427, %74 ], [ %67, %64 ], [ %extension.0427, %54 ], [ %extension.0427, %47 ], [ %extension.0427, %37 ], [ %extension.0427, %27 ], [ %extension.0427, %83 ], [ %extension.0427, %86 ], [ %extension.1.be.lcssa, %.loopexit125.loopexit ]
  %headerFile.2 = phi i8* [ %headerFile.0428, %74 ], [ %headerFile.0428, %64 ], [ %headerFile.0428, %54 ], [ %headerFile.0428, %47 ], [ %40, %37 ], [ %headerFile.0428, %27 ], [ %headerFile.0428, %83 ], [ %headerFile.0428, %86 ], [ %headerFile.1.be.lcssa, %.loopexit125.loopexit ]
  %outputFile.2 = phi i8* [ %outputFile.0429, %74 ], [ %outputFile.0429, %64 ], [ %outputFile.0429, %54 ], [ %outputFile.0429, %47 ], [ %outputFile.0429, %37 ], [ %30, %27 ], [ %outputFile.0429, %83 ], [ %outputFile.0429, %86 ], [ %outputFile.1.be.lcssa, %.loopexit125.loopexit ]
  %.2109 = phi i8** [ %10, %74 ], [ %10, %64 ], [ %10, %54 ], [ %10, %47 ], [ %10, %37 ], [ %10, %27 ], [ %.0107430, %83 ], [ %.0107430, %86 ], [ %.1108.be.lcssa, %.loopexit125.loopexit ]
  %.2 = phi i32 [ %75, %74 ], [ %65, %64 ], [ %55, %54 ], [ %48, %47 ], [ %38, %37 ], [ %28, %27 ], [ %.0106431, %83 ], [ %.0106431, %86 ], [ %.1.be.lcssa, %.loopexit125.loopexit ]
  %179 = add nsw i32 %.2, -1
  %180 = getelementptr inbounds i8*, i8** %.2109, i64 1
  %181 = icmp sgt i32 %179, 1
  br i1 %181, label %.lr.ph432, label %.critedge.thread123.loopexit

.critedge:                                        ; preds = %17
  %.lcssa1391 = phi i8** [ %10, %17 ]
  %num_options.0423.lcssa1372 = phi i32 [ %num_options.0423, %17 ]
  %generateOutput.0424.lcssa1354 = phi i32 [ %generateOutput.0424, %17 ]
  %forceCreate.0425.lcssa1336 = phi i32 [ %forceCreate.0425, %17 ]
  %outputDir.0426.lcssa1318 = phi i8* [ %outputDir.0426, %17 ]
  %extension.0427.lcssa1300 = phi i8* [ %extension.0427, %17 ]
  %headerFile.0428.lcssa1282 = phi i8* [ %headerFile.0428, %17 ]
  %outputFile.0429.lcssa1264 = phi i8* [ %outputFile.0429, %17 ]
  %.0106431.lcssa1230 = phi i32 [ %.0106431, %17 ]
  %182 = add nsw i32 %.0106431.lcssa1230, -1
  %183 = icmp slt i32 %.0106431.lcssa1230, 3
  br i1 %183, label %.critedge.thread123, label %.critedge.thread

.critedge.thread123.loopexit:                     ; preds = %.loopexit125
  br label %.critedge.thread123

.critedge.thread123:                              ; preds = %.critedge.thread123.loopexit, %.preheader126, %.critedge
  tail call fastcc void @Usage(i8* %1)
  br label %300

.critedge.thread.loopexit:                        ; preds = %14, %.lr.ph432
  %num_options.0423.lcssa = phi i32 [ %num_options.0423, %14 ], [ %num_options.0423, %.lr.ph432 ]
  %generateOutput.0424.lcssa = phi i32 [ %generateOutput.0424, %14 ], [ %generateOutput.0424, %.lr.ph432 ]
  %forceCreate.0425.lcssa = phi i32 [ %forceCreate.0425, %14 ], [ %forceCreate.0425, %.lr.ph432 ]
  %outputDir.0426.lcssa = phi i8* [ %outputDir.0426, %14 ], [ %outputDir.0426, %.lr.ph432 ]
  %extension.0427.lcssa = phi i8* [ %extension.0427, %14 ], [ %extension.0427, %.lr.ph432 ]
  %headerFile.0428.lcssa = phi i8* [ %headerFile.0428, %14 ], [ %headerFile.0428, %.lr.ph432 ]
  %outputFile.0429.lcssa = phi i8* [ %outputFile.0429, %14 ], [ %outputFile.0429, %.lr.ph432 ]
  %.0107430.lcssa = phi i8** [ %.0107430, %14 ], [ %.0107430, %.lr.ph432 ]
  %.0106431.lcssa = phi i32 [ %.0106431, %14 ], [ %.0106431, %.lr.ph432 ]
  br label %.critedge.thread

.critedge.thread:                                 ; preds = %.critedge.thread.loopexit, %.critedge
  %num_options.04231389 = phi i32 [ %num_options.0423.lcssa1372, %.critedge ], [ %num_options.0423.lcssa, %.critedge.thread.loopexit ]
  %generateOutput.04241371 = phi i32 [ %generateOutput.0424.lcssa1354, %.critedge ], [ %generateOutput.0424.lcssa, %.critedge.thread.loopexit ]
  %forceCreate.04251353 = phi i32 [ %forceCreate.0425.lcssa1336, %.critedge ], [ %forceCreate.0425.lcssa, %.critedge.thread.loopexit ]
  %outputDir.04261335 = phi i8* [ %outputDir.0426.lcssa1318, %.critedge ], [ %outputDir.0426.lcssa, %.critedge.thread.loopexit ]
  %extension.04271317 = phi i8* [ %extension.0427.lcssa1300, %.critedge ], [ %extension.0427.lcssa, %.critedge.thread.loopexit ]
  %headerFile.04281299 = phi i8* [ %headerFile.0428.lcssa1282, %.critedge ], [ %headerFile.0428.lcssa, %.critedge.thread.loopexit ]
  %outputFile.04291281 = phi i8* [ %outputFile.0429.lcssa1264, %.critedge ], [ %outputFile.0429.lcssa, %.critedge.thread.loopexit ]
  %.3122 = phi i32 [ %182, %.critedge ], [ %.0106431.lcssa, %.critedge.thread.loopexit ]
  %.3110121 = phi i8** [ %.lcssa1391, %.critedge ], [ %.0107430.lcssa, %.critedge.thread.loopexit ]
  %184 = icmp eq i8* %outputFile.04291281, null
  br i1 %184, label %185, label %192

; <label>:185                                     ; preds = %.critedge.thread
  %186 = load i8, i8* %extension.04271317, align 1, !tbaa !27
  %187 = icmp eq i8 %186, 46
  %188 = getelementptr inbounds i8, i8* %extension.04271317, i64 1
  %.extension.0 = select i1 %187, i8* %188, i8* %extension.04271317
  %189 = getelementptr inbounds i8*, i8** %.3110121, i64 1
  %190 = load i8*, i8** %189, align 8, !tbaa !7
  %191 = tail call fastcc i8* @GetDefault(i8* %190, i8* %.extension.0)
  br label %192

; <label>:192                                     ; preds = %.critedge.thread, %185
  %outputFile.3 = phi i8* [ %outputFile.04291281, %.critedge.thread ], [ %191, %185 ]
  %193 = icmp eq i8* %headerFile.04281299, null
  br i1 %193, label %194, label %196

; <label>:194                                     ; preds = %192
  %195 = tail call fastcc i8* @GetDefault(i8* %outputFile.3, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.708, i64 0, i64 0))
  br label %196

; <label>:196                                     ; preds = %192, %194
  %headerFile.3 = phi i8* [ %headerFile.04281299, %192 ], [ %195, %194 ]
  call void @TreeCCOpen(%struct.TreeCCInput* nonnull %input, i8* %1, %struct._IO_FILE* null, i8* null) #2
  %197 = icmp eq i8* %outputDir.04261335, null
  br i1 %197, label %198, label %224

; <label>:198                                     ; preds = %196
  %199 = getelementptr inbounds i8*, i8** %.3110121, i64 1
  %200 = load i8*, i8** %199, align 8, !tbaa !7
  %201 = call i64 @strlen(i8* %200) #12
  %202 = trunc i64 %201 to i32
  %sext = shl i64 %201, 32
  %203 = ashr exact i64 %sext, 32
  br label %204

; <label>:204                                     ; preds = %206, %198
  %indvars.iv = phi i64 [ %indvars.iv.next, %206 ], [ %203, %198 ]
  %len.0 = phi i32 [ %207, %206 ], [ %202, %198 ]
  %205 = icmp sgt i64 %indvars.iv, 0
  br i1 %205, label %206, label %.critedge112

; <label>:206                                     ; preds = %204
  %207 = add nsw i32 %len.0, -1
  %208 = sext i32 %207 to i64
  %209 = getelementptr inbounds i8, i8* %200, i64 %208
  %210 = load i8, i8* %209, align 1, !tbaa !27
  %indvars.iv.next = add nsw i64 %indvars.iv, -1
  switch i8 %210, label %204 [
    i8 92, label %.critedge112
    i8 47, label %.critedge112
  ]

.critedge112:                                     ; preds = %206, %206, %204
  %indvars.iv.lcssa = phi i64 [ %indvars.iv, %206 ], [ %indvars.iv, %206 ], [ %indvars.iv, %204 ]
  %.lcssa435 = phi i32 [ -1, %206 ], [ -1, %206 ], [ 0, %204 ]
  %211 = trunc i64 %indvars.iv.lcssa to i32
  %.len.0 = add nsw i32 %.lcssa435, %211
  %212 = icmp sgt i32 %.len.0, 0
  br i1 %212, label %213, label %224

; <label>:213                                     ; preds = %.critedge112
  %214 = add nsw i32 %.len.0, 1
  %215 = sext i32 %214 to i64
  %216 = call noalias i8* @malloc(i64 %215) #2
  %217 = icmp eq i8* %216, null
  br i1 %217, label %218, label %219

; <label>:218                                     ; preds = %213
  call void @TreeCCOutOfMemory(%struct.TreeCCInput* nonnull %input) #2
  br label %219

; <label>:219                                     ; preds = %213, %218
  %220 = load i8*, i8** %199, align 8, !tbaa !7
  %221 = sext i32 %.len.0 to i64
  %222 = call i8* @strncpy(i8* %216, i8* %220, i64 %221) #2
  %223 = getelementptr inbounds i8, i8* %216, i64 %221
  store i8 0, i8* %223, align 1, !tbaa !27
  br label %224

; <label>:224                                     ; preds = %196, %.critedge112, %219
  %outputDir.3 = phi i8* [ %outputDir.04261335, %196 ], [ %216, %219 ], [ null, %.critedge112 ]
  %225 = call %struct._tagTreeCCContext* @TreeCCContextCreate(%struct.TreeCCInput* nonnull %input) #2
  %226 = icmp eq %struct._tagTreeCCContext* %225, null
  br i1 %226, label %227, label %228

; <label>:227                                     ; preds = %224
  call void @TreeCCOutOfMemory(%struct.TreeCCInput* nonnull %input) #2
  br label %228

; <label>:228                                     ; preds = %224, %227
  %229 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %225, i64 0, i32 8
  %230 = trunc i32 %forceCreate.04251353 to i16
  %231 = load i16, i16* %229, align 8
  %232 = shl i16 %230, 4
  %233 = and i16 %232, 16
  %234 = and i16 %231, -17
  %235 = or i16 %234, %233
  store i16 %235, i16* %229, align 8
  %236 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %225, i64 0, i32 15
  store i8* %outputDir.3, i8** %236, align 8, !tbaa !107
  br label %237

; <label>:237                                     ; preds = %250, %228
  %.02.i = phi i8** [ %6, %228 ], [ %248, %250 ]
  %.01.i = phi i32 [ %num_options.04231389, %228 ], [ %238, %250 ]
  %238 = add nsw i32 %.01.i, -1
  %239 = icmp sgt i32 %.01.i, 0
  br i1 %239, label %240, label %255

; <label>:240                                     ; preds = %237
  %241 = load i8*, i8** %.02.i, align 8, !tbaa !7
  br label %242

; <label>:242                                     ; preds = %242, %240
  %value.0.i = phi i8* [ %241, %240 ], [ %246, %242 ]
  %243 = load i8, i8* %value.0.i, align 1, !tbaa !27
  %244 = icmp eq i8 %243, 0
  %245 = icmp ne i8 %243, 61
  %not..i = xor i1 %244, true
  %..i = and i1 %245, %not..i
  %246 = getelementptr inbounds i8, i8* %value.0.i, i64 1
  br i1 %..i, label %242, label %247

; <label>:247                                     ; preds = %242
  %.lcssa1228 = phi i8* [ %246, %242 ]
  %.lcssa = phi i1 [ %244, %242 ]
  %value.0.i.lcssa = phi i8* [ %value.0.i, %242 ]
  %248 = getelementptr inbounds i8*, i8** %.02.i, i64 1
  br i1 %.lcssa, label %250, label %249

; <label>:249                                     ; preds = %247
  store i8 0, i8* %value.0.i.lcssa, align 1, !tbaa !27
  br label %250

; <label>:250                                     ; preds = %249, %247
  %value.1.i = phi i8* [ %.lcssa1228, %249 ], [ null, %247 ]
  %251 = call i32 @TreeCCOptionProcess(%struct._tagTreeCCContext* %225, i8* %241, i8* %value.1.i) #2
  %252 = icmp eq i32 %251, 0
  br i1 %252, label %237, label %ExtraOptions.exit.thread

ExtraOptions.exit.thread:                         ; preds = %250
  %.lcssa1229 = phi i8* [ %241, %250 ]
  %253 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !7
  %254 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %253, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.40.709, i64 0, i64 0), i8* %.lcssa1229) #10
  br label %300

; <label>:255                                     ; preds = %237
  call void @free(i8* %5) #2
  %256 = call %struct._tagTreeCCStream* @TreeCCStreamCreate(%struct._tagTreeCCContext* %225, i8* %outputFile.3, i8* null, i32 0) #2
  %257 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %225, i64 0, i32 5
  store %struct._tagTreeCCStream* %256, %struct._tagTreeCCStream** %257, align 8, !tbaa !33
  %258 = getelementptr inbounds %struct._tagTreeCCStream, %struct._tagTreeCCStream* %256, i64 0, i32 7
  %259 = load i8, i8* %258, align 4
  %260 = or i8 %259, 8
  store i8 %260, i8* %258, align 4
  %261 = call %struct._tagTreeCCStream* @TreeCCStreamCreate(%struct._tagTreeCCContext* %225, i8* %headerFile.3, i8* null, i32 1) #2
  %262 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %225, i64 0, i32 4
  store %struct._tagTreeCCStream* %261, %struct._tagTreeCCStream** %262, align 8, !tbaa !28
  %263 = getelementptr inbounds %struct._tagTreeCCStream, %struct._tagTreeCCStream* %261, i64 0, i32 7
  %264 = load i8, i8* %263, align 4
  %265 = or i8 %264, 8
  store i8 %265, i8* %263, align 4
  %266 = icmp sgt i32 %.3122, 1
  %267 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %input, i64 0, i32 7
  br i1 %266, label %.lr.ph402.preheader, label %._crit_edge

.lr.ph402.preheader:                              ; preds = %255
  br label %.lr.ph402

.lr.ph402:                                        ; preds = %.lr.ph402.preheader, %285
  %.4401 = phi i32 [ %286, %285 ], [ %.3122, %.lr.ph402.preheader ]
  %.4111400 = phi i8** [ %268, %285 ], [ %.3110121, %.lr.ph402.preheader ]
  %sawStdin.0399 = phi i32 [ %sawStdin.1, %285 ], [ 0, %.lr.ph402.preheader ]
  %268 = getelementptr inbounds i8*, i8** %.4111400, i64 1
  %269 = load i8*, i8** %268, align 8, !tbaa !7
  %270 = load i8, i8* %269, align 1, !tbaa !27
  %271 = icmp eq i8 %270, 45
  br i1 %271, label %272, label %.thread

; <label>:272                                     ; preds = %.lr.ph402
  %273 = getelementptr inbounds i8, i8* %269, i64 1
  %274 = load i8, i8* %273, align 1, !tbaa !27
  %275 = icmp eq i8 %274, 0
  br i1 %275, label %276, label %.thread

; <label>:276                                     ; preds = %272
  %277 = icmp eq i32 %sawStdin.0399, 0
  br i1 %277, label %278, label %285

; <label>:278                                     ; preds = %276
  %279 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !tbaa !7
  call void @TreeCCOpen(%struct.TreeCCInput* nonnull %input, i8* %1, %struct._IO_FILE* %279, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.14.710, i64 0, i64 0)) #2
  call void @TreeCCParse(%struct._tagTreeCCContext* %225) #2
  call void @TreeCCClose(%struct.TreeCCInput* nonnull %input, i32 0) #2
  br label %285

.thread:                                          ; preds = %.lr.ph402, %272
  %280 = call %struct._IO_FILE* @fopen(i8* %269, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15.711, i64 0, i64 0)) #2
  %281 = icmp eq %struct._IO_FILE* %280, null
  %282 = load i8*, i8** %268, align 8, !tbaa !7
  br i1 %281, label %283, label %284

; <label>:283                                     ; preds = %.thread
  call void @perror(i8* %282) #10
  store i32 1, i32* %267, align 8, !tbaa !24
  br label %285

; <label>:284                                     ; preds = %.thread
  call void @TreeCCOpen(%struct.TreeCCInput* nonnull %input, i8* %1, %struct._IO_FILE* %280, i8* %282) #2
  call void @TreeCCParse(%struct._tagTreeCCContext* %225) #2
  call void @TreeCCClose(%struct.TreeCCInput* nonnull %input, i32 1) #2
  br label %285

; <label>:285                                     ; preds = %276, %283, %284, %278
  %sawStdin.1 = phi i32 [ %sawStdin.0399, %283 ], [ %sawStdin.0399, %284 ], [ %sawStdin.0399, %276 ], [ 1, %278 ]
  %286 = add nsw i32 %.4401, -1
  %287 = icmp sgt i32 %286, 1
  br i1 %287, label %.lr.ph402, label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %285
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %255
  call void @TreeCCNodeValidate(%struct._tagTreeCCContext* %225) #2
  call void @TreeCCOperationValidate(%struct._tagTreeCCContext* %225) #2
  %288 = load i32, i32* %267, align 8, !tbaa !24
  %289 = icmp eq i32 %288, 0
  br i1 %289, label %291, label %290

; <label>:290                                     ; preds = %._crit_edge
  call void @TreeCCContextDestroy(%struct._tagTreeCCContext* %225) #2
  br label %300

; <label>:291                                     ; preds = %._crit_edge
  %292 = icmp eq i32 %generateOutput.04241371, 0
  br i1 %292, label %.loopexit, label %293

; <label>:293                                     ; preds = %291
  call void @TreeCCGenerate(%struct._tagTreeCCContext* %225) #2
  %294 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %225, i64 0, i32 3
  %stream.0.396 = load %struct._tagTreeCCStream*, %struct._tagTreeCCStream** %294, align 8
  %295 = icmp eq %struct._tagTreeCCStream* %stream.0.396, null
  br i1 %295, label %.loopexit, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %293
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %.lr.ph
  %stream.0398 = phi %struct._tagTreeCCStream* [ %stream.0, %.lr.ph ], [ %stream.0.396, %.lr.ph.preheader ]
  %result.0397 = phi i32 [ %.result.0, %.lr.ph ], [ 0, %.lr.ph.preheader ]
  %296 = call i32 @TreeCCStreamFlush(%struct._tagTreeCCStream* %stream.0398) #2
  %297 = icmp eq i32 %296, 0
  %.result.0 = select i1 %297, i32 1, i32 %result.0397
  %298 = getelementptr inbounds %struct._tagTreeCCStream, %struct._tagTreeCCStream* %stream.0398, i64 0, i32 10
  %stream.0 = load %struct._tagTreeCCStream*, %struct._tagTreeCCStream** %298, align 8
  %299 = icmp eq %struct._tagTreeCCStream* %stream.0, null
  br i1 %299, label %.loopexit.loopexit, label %.lr.ph

.loopexit.loopexit:                               ; preds = %.lr.ph
  %.result.0.lcssa = phi i32 [ %.result.0, %.lr.ph ]
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %293, %291
  %result.2 = phi i32 [ 0, %291 ], [ 0, %293 ], [ %.result.0.lcssa, %.loopexit.loopexit ]
  call void @TreeCCContextDestroy(%struct._tagTreeCCContext* %225) #2
  br label %300

; <label>:300                                     ; preds = %ExtraOptions.exit.thread, %.loopexit, %290, %.critedge.thread123, %178, %177, %165, %148, %139, %128, %117, %106, %97, %96, %92, %73, %63, %57, %46, %36, %26
  %.0 = phi i32 [ 1, %.critedge.thread123 ], [ 1, %290 ], [ %result.2, %.loopexit ], [ 1, %97 ], [ 0, %96 ], [ 1, %92 ], [ 1, %73 ], [ 1, %63 ], [ 1, %57 ], [ 1, %46 ], [ 1, %36 ], [ 1, %26 ], [ 1, %178 ], [ 0, %177 ], [ 1, %165 ], [ 1, %148 ], [ 1, %139 ], [ 1, %128 ], [ 1, %117 ], [ 1, %106 ], [ 1, %ExtraOptions.exit.thread ]
  call void @llvm.lifetime.end(i64 1096, i8* %2) #2
  ret i32 %.0
}

; Function Attrs: nounwind
declare noalias %struct._IO_FILE* @fopen(i8* nocapture readonly, i8* nocapture readonly) #1

; Function Attrs: nounwind
declare void @perror(i8* nocapture readonly) #1

; Function Attrs: nounwind
declare i32 @fputc(i32, %struct._IO_FILE* nocapture) #2

; Function Attrs: nounwind
declare i32 @puts(i8* nocapture readonly) #2

; Function Attrs: nounwind
declare i32 @putchar(i32) #2

; Function Attrs: nounwind uwtable
define internal fastcc void @Usage(i8* %progname) #0 {
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !7
  %2 = tail call i64 @fwrite(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.16.713, i64 0, i64 0), i64 38, i64 1, %struct._IO_FILE* %1) #11
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !7
  %4 = tail call i64 @fwrite(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.17.714, i64 0, i64 0), i64 59, i64 1, %struct._IO_FILE* %3) #11
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !7
  %fputc = tail call i32 @fputc(i32 10, %struct._IO_FILE* %5) #11
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !7
  %7 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %6, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.19.715, i64 0, i64 0), i8* %progname) #10
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !7
  %fputc3 = tail call i32 @fputc(i32 10, %struct._IO_FILE* %8) #11
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !7
  %10 = tail call i64 @fwrite(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.20.716, i64 0, i64 0), i64 27, i64 1, %struct._IO_FILE* %9) #11
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !7
  %12 = tail call i64 @fwrite(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.21.717, i64 0, i64 0), i64 41, i64 1, %struct._IO_FILE* %11) #11
  %13 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !7
  %14 = tail call i64 @fwrite(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.22.718, i64 0, i64 0), i64 27, i64 1, %struct._IO_FILE* %13) #11
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !7
  %16 = tail call i64 @fwrite(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.23.719, i64 0, i64 0), i64 48, i64 1, %struct._IO_FILE* %15) #11
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !7
  %18 = tail call i64 @fwrite(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.24.720, i64 0, i64 0), i64 31, i64 1, %struct._IO_FILE* %17) #11
  %19 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !7
  %20 = tail call i64 @fwrite(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.25.721, i64 0, i64 0), i64 51, i64 1, %struct._IO_FILE* %19) #11
  %21 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !7
  %22 = tail call i64 @fwrite(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.26.722, i64 0, i64 0), i64 29, i64 1, %struct._IO_FILE* %21) #11
  %23 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !7
  %24 = tail call i64 @fwrite(i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.27.723, i64 0, i64 0), i64 57, i64 1, %struct._IO_FILE* %23) #11
  %25 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !7
  %26 = tail call i64 @fwrite(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.28.724, i64 0, i64 0), i64 28, i64 1, %struct._IO_FILE* %25) #11
  %27 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !7
  %28 = tail call i64 @fwrite(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.29.725, i64 0, i64 0), i64 54, i64 1, %struct._IO_FILE* %27) #11
  %29 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !7
  %30 = tail call i64 @fwrite(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.30.726, i64 0, i64 0), i64 26, i64 1, %struct._IO_FILE* %29) #11
  %31 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !7
  %32 = tail call i64 @fwrite(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.31.727, i64 0, i64 0), i64 42, i64 1, %struct._IO_FILE* %31) #11
  %33 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !7
  %34 = tail call i64 @fwrite(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.32.728, i64 0, i64 0), i64 11, i64 1, %struct._IO_FILE* %33) #11
  %35 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !7
  %36 = tail call i64 @fwrite(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.33.729, i64 0, i64 0), i64 33, i64 1, %struct._IO_FILE* %35) #11
  %37 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !7
  %38 = tail call i64 @fwrite(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.34.730, i64 0, i64 0), i64 23, i64 1, %struct._IO_FILE* %37) #11
  %39 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !7
  %40 = tail call i64 @fwrite(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.35.731, i64 0, i64 0), i64 35, i64 1, %struct._IO_FILE* %39) #11
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc i8* @GetDefault(i8* nocapture readonly %filename, i8* nocapture readonly %extension) #0 {
  %1 = load i8, i8* %filename, align 1, !tbaa !27
  %2 = zext i8 %1 to i32
  %3 = sub nsw i32 45, %2
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %10

; <label>:5                                       ; preds = %0
  %6 = getelementptr inbounds i8, i8* %filename, i64 1
  %7 = load i8, i8* %6, align 1, !tbaa !27
  %8 = zext i8 %7 to i32
  %9 = sub nsw i32 0, %8
  br label %10

; <label>:10                                      ; preds = %5, %0
  %__result.0 = phi i32 [ %9, %5 ], [ %3, %0 ]
  %phitmp = icmp ne i32 %__result.0, 0
  %.0 = select i1 %phitmp, i8* %filename, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.41.712, i64 0, i64 0)
  %11 = tail call i64 @strlen(i8* %.0) #12
  %12 = trunc i64 %11 to i32
  %sext11 = shl i64 %11, 32
  %13 = ashr exact i64 %sext11, 32
  br label %.critedge7

.critedge7:                                       ; preds = %15, %10
  %indvars.iv = phi i64 [ %indvars.iv.next, %15 ], [ %13, %10 ]
  %len.0 = phi i32 [ %16, %15 ], [ %12, %10 ]
  %14 = icmp sgt i64 %indvars.iv, 0
  br i1 %14, label %15, label %.critedge8

; <label>:15                                      ; preds = %.critedge7
  %16 = add nsw i32 %len.0, -1
  %17 = sext i32 %16 to i64
  %18 = getelementptr inbounds i8, i8* %.0, i64 %17
  %19 = load i8, i8* %18, align 1, !tbaa !27
  %indvars.iv.next = add nsw i64 %indvars.iv, -1
  switch i8 %19, label %.critedge7 [
    i8 46, label %20
    i8 47, label %.critedge8
    i8 92, label %.critedge8
  ]

; <label>:20                                      ; preds = %15
  %indvars.iv.lcssa16 = phi i64 [ %indvars.iv, %15 ]
  %sext12 = shl i64 %indvars.iv.lcssa16, 32
  %21 = ashr exact i64 %sext12, 32
  %22 = tail call i64 @strlen(i8* %extension) #12
  %23 = add nsw i64 %21, 1
  %24 = add i64 %23, %22
  %25 = tail call noalias i8* @malloc(i64 %24) #2
  %26 = icmp eq i8* %25, null
  br i1 %26, label %27, label %28

; <label>:27                                      ; preds = %20
  tail call void @TreeCCOutOfMemory(%struct.TreeCCInput* null) #2
  br label %28

; <label>:28                                      ; preds = %20, %27
  %29 = tail call i8* @strncpy(i8* %25, i8* %.0, i64 %21) #2
  %30 = getelementptr inbounds i8, i8* %25, i64 %21
  %31 = tail call i8* @strcpy(i8* %30, i8* %extension) #2
  br label %45

.critedge8:                                       ; preds = %15, %15, %.critedge7
  %32 = tail call i64 @strlen(i8* %.0) #12
  %sext = shl i64 %32, 32
  %33 = ashr exact i64 %sext, 32
  %34 = tail call i64 @strlen(i8* %extension) #12
  %35 = add i64 %34, 2
  %36 = add i64 %35, %33
  %37 = tail call noalias i8* @malloc(i64 %36) #2
  %38 = icmp eq i8* %37, null
  br i1 %38, label %39, label %40

; <label>:39                                      ; preds = %.critedge8
  tail call void @TreeCCOutOfMemory(%struct.TreeCCInput* null) #2
  br label %40

; <label>:40                                      ; preds = %.critedge8, %39
  %41 = tail call i8* @strcpy(i8* %37, i8* %.0) #2
  %42 = getelementptr inbounds i8, i8* %37, i64 %33
  store i8 46, i8* %42, align 1, !tbaa !27
  %43 = getelementptr inbounds i8, i8* %42, i64 1
  %44 = tail call i8* @strcpy(i8* %43, i8* %extension) #2
  br label %45

; <label>:45                                      ; preds = %40, %28
  %name.0 = phi i8* [ %25, %28 ], [ %37, %40 ]
  ret i8* %name.0
}

; Function Attrs: nounwind readonly uwtable
define i32 @TreeCCHashString(i8* nocapture readonly %str) #7 {
  %1 = load i8, i8* %str, align 1, !tbaa !27
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %._crit_edge, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %0
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %.lr.ph
  %3 = phi i8 [ %8, %.lr.ph ], [ %1, %.lr.ph.preheader ]
  %hash.02 = phi i32 [ %7, %.lr.ph ], [ 0, %.lr.ph.preheader ]
  %.01 = phi i8* [ %6, %.lr.ph ], [ %str, %.lr.ph.preheader ]
  %4 = sext i8 %3 to i32
  %5 = mul i32 %hash.02, 33
  %6 = getelementptr inbounds i8, i8* %.01, i64 1
  %7 = add i32 %4, %5
  %8 = load i8, i8* %6, align 1, !tbaa !27
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %._crit_edge.loopexit, label %.lr.ph

._crit_edge.loopexit:                             ; preds = %.lr.ph
  %.lcssa = phi i32 [ %7, %.lr.ph ]
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %0
  %hash.0.lcssa = phi i32 [ 0, %0 ], [ %.lcssa, %._crit_edge.loopexit ]
  ret i32 %hash.0.lcssa
}

; Function Attrs: nounwind uwtable
define void @TreeCCNodeFree(%struct._tagTreeCCNode* nocapture %node) #0 {
  %1 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 10
  %2 = load %struct._tagTreeCCField*, %struct._tagTreeCCField** %1, align 8, !tbaa !67
  %3 = icmp eq %struct._tagTreeCCField* %2, null
  br i1 %3, label %._crit_edge.5, label %.lr.ph4.preheader

.lr.ph4.preheader:                                ; preds = %0
  br label %.lr.ph4

.lr.ph4:                                          ; preds = %.lr.ph4.preheader, %14
  %field.02 = phi %struct._tagTreeCCField* [ %5, %14 ], [ %2, %.lr.ph4.preheader ]
  %4 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.02, i64 0, i32 6
  %5 = load %struct._tagTreeCCField*, %struct._tagTreeCCField** %4, align 8, !tbaa !108
  %6 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.02, i64 0, i32 0
  %7 = load i8*, i8** %6, align 8, !tbaa !64
  tail call void @free(i8* %7) #2
  %8 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.02, i64 0, i32 1
  %9 = load i8*, i8** %8, align 8, !tbaa !63
  tail call void @free(i8* %9) #2
  %10 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.02, i64 0, i32 2
  %11 = load i8*, i8** %10, align 8, !tbaa !65
  %12 = icmp eq i8* %11, null
  br i1 %12, label %14, label %13

; <label>:13                                      ; preds = %.lr.ph4
  tail call void @free(i8* %11) #2
  br label %14

; <label>:14                                      ; preds = %.lr.ph4, %13
  %15 = bitcast %struct._tagTreeCCField* %field.02 to i8*
  tail call void @free(i8* %15) #2
  %16 = icmp eq %struct._tagTreeCCField* %5, null
  br i1 %16, label %._crit_edge.5.loopexit, label %.lr.ph4

._crit_edge.5.loopexit:                           ; preds = %14
  br label %._crit_edge.5

._crit_edge.5:                                    ; preds = %._crit_edge.5.loopexit, %0
  %17 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 11
  %18 = load %struct._tagTreeCCVirtual*, %struct._tagTreeCCVirtual** %17, align 8, !tbaa !109
  %19 = icmp eq %struct._tagTreeCCVirtual* %18, null
  br i1 %19, label %._crit_edge, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %._crit_edge.5
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %.lr.ph
  %virt.01 = phi %struct._tagTreeCCVirtual* [ %21, %.lr.ph ], [ %18, %.lr.ph.preheader ]
  %20 = getelementptr inbounds %struct._tagTreeCCVirtual, %struct._tagTreeCCVirtual* %virt.01, i64 0, i32 4
  %21 = load %struct._tagTreeCCVirtual*, %struct._tagTreeCCVirtual** %20, align 8, !tbaa !110
  %22 = bitcast %struct._tagTreeCCVirtual* %virt.01 to i8*
  tail call void @free(i8* %22) #2
  %23 = icmp eq %struct._tagTreeCCVirtual* %21, null
  br i1 %23, label %._crit_edge.loopexit, label %.lr.ph

._crit_edge.loopexit:                             ; preds = %.lr.ph
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %._crit_edge.5
  %24 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 4
  %25 = load i8*, i8** %24, align 8, !tbaa !36
  tail call void @free(i8* %25) #2
  %26 = bitcast %struct._tagTreeCCNode* %node to i8*
  tail call void @free(i8* %26) #2
  ret void
}

; Function Attrs: nounwind uwtable
define %struct._tagTreeCCNode* @TreeCCNodeCreate(%struct._tagTreeCCContext* nocapture %context, i64 %linenum, i8* %name, i8* %parent, i32 %flags) #0 {
  %1 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 8
  %2 = load i16, i16* %1, align 8
  %.mask = and i16 %2, 1
  %3 = icmp eq i16 %.mask, 0
  br i1 %3, label %7, label %4

; <label>:4                                       ; preds = %0
  %5 = icmp ne i8* %parent, null
  %6 = select i1 %5, i8* %parent, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1.750, i64 0, i64 0)
  tail call void (i64, i8*, ...) @TreeCCDebug(i64 %linenum, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.751, i64 0, i64 0), i8* %name, i8* %6, i32 %flags) #2
  br label %7

; <label>:7                                       ; preds = %0, %4
  %8 = icmp eq i8* %parent, null
  br i1 %8, label %73, label %9

; <label>:9                                       ; preds = %7
  %10 = load i8, i8* %parent, align 1, !tbaa !27
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %TreeCCHashString.exit.i, label %.lr.ph.i.i.preheader

.lr.ph.i.i.preheader:                             ; preds = %9
  br label %.lr.ph.i.i

.lr.ph.i.i:                                       ; preds = %.lr.ph.i.i.preheader, %.lr.ph.i.i
  %12 = phi i8 [ %17, %.lr.ph.i.i ], [ %10, %.lr.ph.i.i.preheader ]
  %hash.02.i.i = phi i32 [ %16, %.lr.ph.i.i ], [ 0, %.lr.ph.i.i.preheader ]
  %.01.i.i = phi i8* [ %15, %.lr.ph.i.i ], [ %parent, %.lr.ph.i.i.preheader ]
  %13 = sext i8 %12 to i32
  %14 = mul i32 %hash.02.i.i, 33
  %15 = getelementptr inbounds i8, i8* %.01.i.i, i64 1
  %16 = add i32 %14, %13
  %17 = load i8, i8* %15, align 1, !tbaa !27
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %TreeCCHashString.exit.loopexit.i, label %.lr.ph.i.i

TreeCCHashString.exit.loopexit.i:                 ; preds = %.lr.ph.i.i
  %.lcssa68 = phi i32 [ %16, %.lr.ph.i.i ]
  %phitmp.i = and i32 %.lcssa68, 511
  %phitmp5.i = zext i32 %phitmp.i to i64
  br label %TreeCCHashString.exit.i

TreeCCHashString.exit.i:                          ; preds = %TreeCCHashString.exit.loopexit.i, %9
  %hash.0.lcssa.i.i = phi i64 [ 0, %9 ], [ %phitmp5.i, %TreeCCHashString.exit.loopexit.i ]
  %19 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 0, i64 %hash.0.lcssa.i.i
  %node.0.1.i = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %19, align 8
  %20 = icmp eq %struct._tagTreeCCNode* %node.0.1.i, null
  br i1 %20, label %.loopexit35, label %.lr.ph.i.preheader

.lr.ph.i.preheader:                               ; preds = %TreeCCHashString.exit.i
  br label %.lr.ph.i

.lr.ph.i:                                         ; preds = %.lr.ph.i.preheader, %25
  %node.02.i = phi %struct._tagTreeCCNode* [ %node.0.i, %25 ], [ %node.0.1.i, %.lr.ph.i.preheader ]
  %21 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node.02.i, i64 0, i32 4
  %22 = load i8*, i8** %21, align 8, !tbaa !36
  %23 = tail call i32 @strcmp(i8* %22, i8* %parent) #2
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %72, label %25

; <label>:25                                      ; preds = %.lr.ph.i
  %26 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node.02.i, i64 0, i32 12
  %node.0.i = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %26, align 8
  %27 = icmp eq %struct._tagTreeCCNode* %node.0.i, null
  br i1 %27, label %.loopexit35.loopexit, label %.lr.ph.i

.loopexit35.loopexit:                             ; preds = %25
  br label %.loopexit35

.loopexit35:                                      ; preds = %.loopexit35.loopexit, %TreeCCHashString.exit.i
  %28 = tail call noalias i8* @malloc(i64 112) #2
  %29 = bitcast i8* %28 to %struct._tagTreeCCNode*
  %30 = icmp eq i8* %28, null
  %31 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 2
  br i1 %30, label %32, label %._crit_edge

; <label>:32                                      ; preds = %.loopexit35
  %33 = load %struct.TreeCCInput*, %struct.TreeCCInput** %31, align 8, !tbaa !1
  tail call void @TreeCCOutOfMemory(%struct.TreeCCInput* %33) #2
  br label %._crit_edge

._crit_edge:                                      ; preds = %.loopexit35, %32
  %34 = getelementptr inbounds i8, i8* %28, i64 32
  %35 = bitcast i8* %34 to i8**
  call void @llvm.memset.p0i8.i64(i8* %28, i8 0, i64 32, i32 8, i1 false)
  store i8* %parent, i8** %35, align 8, !tbaa !36
  %36 = getelementptr inbounds i8, i8* %28, i64 40
  %37 = bitcast i8* %36 to i32*
  store i32 1, i32* %37, align 4, !tbaa !34
  %38 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 12
  %39 = load i32, i32* %38, align 4, !tbaa !11
  %40 = add nsw i32 %39, 1
  store i32 %40, i32* %38, align 4, !tbaa !11
  %41 = getelementptr inbounds i8, i8* %28, i64 44
  %42 = bitcast i8* %41 to i32*
  store i32 %39, i32* %42, align 4, !tbaa !37
  %43 = load %struct.TreeCCInput*, %struct.TreeCCInput** %31, align 8, !tbaa !1
  %44 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %43, i64 0, i32 4
  %45 = bitcast i8** %44 to i64*
  %46 = load i64, i64* %45, align 8, !tbaa !21
  %47 = getelementptr inbounds i8, i8* %28, i64 56
  %48 = bitcast i8* %47 to i64*
  store i64 %46, i64* %48, align 8, !tbaa !111
  %49 = getelementptr inbounds i8, i8* %28, i64 64
  %50 = bitcast i8* %49 to i64*
  store i64 %linenum, i64* %50, align 8, !tbaa !112
  %51 = getelementptr inbounds i8, i8* %28, i64 72
  %52 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 4
  call void @llvm.memset.p0i8.i64(i8* %51, i8 0, i64 16, i32 8, i1 false)
  %53 = getelementptr inbounds i8, i8* %28, i64 96
  %54 = bitcast %struct._tagTreeCCStream** %52 to <2 x i64>*
  %55 = load <2 x i64>, <2 x i64>* %54, align 8, !tbaa !7
  %56 = bitcast i8* %53 to <2 x i64>*
  store <2 x i64> %55, <2 x i64>* %56, align 8, !tbaa !7
  %57 = load i8, i8* %parent, align 1, !tbaa !27
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %AddToHash.exit, label %.lr.ph.i.i.3.preheader

.lr.ph.i.i.3.preheader:                           ; preds = %._crit_edge
  br label %.lr.ph.i.i.3

.lr.ph.i.i.3:                                     ; preds = %.lr.ph.i.i.3.preheader, %.lr.ph.i.i.3
  %59 = phi i8 [ %64, %.lr.ph.i.i.3 ], [ %57, %.lr.ph.i.i.3.preheader ]
  %hash.02.i.i.1 = phi i32 [ %63, %.lr.ph.i.i.3 ], [ 0, %.lr.ph.i.i.3.preheader ]
  %.01.i.i.2 = phi i8* [ %62, %.lr.ph.i.i.3 ], [ %parent, %.lr.ph.i.i.3.preheader ]
  %60 = sext i8 %59 to i32
  %61 = mul i32 %hash.02.i.i.1, 33
  %62 = getelementptr inbounds i8, i8* %.01.i.i.2, i64 1
  %63 = add i32 %61, %60
  %64 = load i8, i8* %62, align 1, !tbaa !27
  %65 = icmp eq i8 %64, 0
  br i1 %65, label %TreeCCHashString.exit.loopexit.i.5, label %.lr.ph.i.i.3

TreeCCHashString.exit.loopexit.i.5:               ; preds = %.lr.ph.i.i.3
  %.lcssa66 = phi i32 [ %63, %.lr.ph.i.i.3 ]
  %phitmp.i.4 = and i32 %.lcssa66, 511
  %phitmp1.i = zext i32 %phitmp.i.4 to i64
  br label %AddToHash.exit

AddToHash.exit:                                   ; preds = %._crit_edge, %TreeCCHashString.exit.loopexit.i.5
  %hash.0.lcssa.i.i.6 = phi i64 [ 0, %._crit_edge ], [ %phitmp1.i, %TreeCCHashString.exit.loopexit.i.5 ]
  %66 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 0, i64 %hash.0.lcssa.i.i.6
  %67 = bitcast %struct._tagTreeCCNode** %66 to i64*
  %68 = load i64, i64* %67, align 8, !tbaa !7
  %69 = getelementptr inbounds i8, i8* %28, i64 88
  %70 = bitcast i8* %69 to i64*
  store i64 %68, i64* %70, align 8, !tbaa !17
  %71 = bitcast %struct._tagTreeCCNode** %66 to i8**
  store i8* %28, i8** %71, align 8, !tbaa !7
  br label %73

; <label>:72                                      ; preds = %.lr.ph.i
  %node.02.i.lcssa = phi %struct._tagTreeCCNode* [ %node.02.i, %.lr.ph.i ]
  tail call void @free(i8* %parent) #2
  br label %73

; <label>:73                                      ; preds = %7, %AddToHash.exit, %72
  %parentNode.0 = phi %struct._tagTreeCCNode* [ %node.02.i.lcssa, %72 ], [ %29, %AddToHash.exit ], [ null, %7 ]
  %74 = load i8, i8* %name, align 1, !tbaa !27
  %75 = icmp eq i8 %74, 0
  br i1 %75, label %TreeCCHashString.exit.i.25, label %.lr.ph.i.i.19.preheader

.lr.ph.i.i.19.preheader:                          ; preds = %73
  br label %.lr.ph.i.i.19

.lr.ph.i.i.19:                                    ; preds = %.lr.ph.i.i.19.preheader, %.lr.ph.i.i.19
  %76 = phi i8 [ %81, %.lr.ph.i.i.19 ], [ %74, %.lr.ph.i.i.19.preheader ]
  %hash.02.i.i.17 = phi i32 [ %80, %.lr.ph.i.i.19 ], [ 0, %.lr.ph.i.i.19.preheader ]
  %.01.i.i.18 = phi i8* [ %79, %.lr.ph.i.i.19 ], [ %name, %.lr.ph.i.i.19.preheader ]
  %77 = sext i8 %76 to i32
  %78 = mul i32 %hash.02.i.i.17, 33
  %79 = getelementptr inbounds i8, i8* %.01.i.i.18, i64 1
  %80 = add i32 %78, %77
  %81 = load i8, i8* %79, align 1, !tbaa !27
  %82 = icmp eq i8 %81, 0
  br i1 %82, label %TreeCCHashString.exit.loopexit.i.22, label %.lr.ph.i.i.19

TreeCCHashString.exit.loopexit.i.22:              ; preds = %.lr.ph.i.i.19
  %.lcssa65 = phi i32 [ %80, %.lr.ph.i.i.19 ]
  %phitmp.i.20 = and i32 %.lcssa65, 511
  %phitmp5.i.21 = zext i32 %phitmp.i.20 to i64
  br label %TreeCCHashString.exit.i.25

TreeCCHashString.exit.i.25:                       ; preds = %TreeCCHashString.exit.loopexit.i.22, %73
  %hash.0.lcssa.i.i.23 = phi i64 [ 0, %73 ], [ %phitmp5.i.21, %TreeCCHashString.exit.loopexit.i.22 ]
  %83 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 0, i64 %hash.0.lcssa.i.i.23
  %node.0.1.i.24 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %83, align 8
  %84 = icmp eq %struct._tagTreeCCNode* %node.0.1.i.24, null
  br i1 %84, label %.loopexit, label %.lr.ph.i.27.preheader

.lr.ph.i.27.preheader:                            ; preds = %TreeCCHashString.exit.i.25
  br label %.lr.ph.i.27

.lr.ph.i.27:                                      ; preds = %.lr.ph.i.27.preheader, %89
  %node.02.i.26 = phi %struct._tagTreeCCNode* [ %node.0.i.28, %89 ], [ %node.0.1.i.24, %.lr.ph.i.27.preheader ]
  %85 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node.02.i.26, i64 0, i32 4
  %86 = load i8*, i8** %85, align 8, !tbaa !36
  %87 = tail call i32 @strcmp(i8* %86, i8* %name) #2
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %92, label %89

; <label>:89                                      ; preds = %.lr.ph.i.27
  %90 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node.02.i.26, i64 0, i32 12
  %node.0.i.28 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %90, align 8
  %91 = icmp eq %struct._tagTreeCCNode* %node.0.i.28, null
  br i1 %91, label %.loopexit.loopexit, label %.lr.ph.i.27

; <label>:92                                      ; preds = %.lr.ph.i.27
  %node.02.i.26.lcssa = phi %struct._tagTreeCCNode* [ %node.02.i.26, %.lr.ph.i.27 ]
  %93 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node.02.i.26.lcssa, i64 0, i32 5
  %94 = load i32, i32* %93, align 4, !tbaa !34
  %95 = and i32 %94, 1
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %107

; <label>:97                                      ; preds = %92
  %98 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 2
  %99 = load %struct.TreeCCInput*, %struct.TreeCCInput** %98, align 8, !tbaa !1
  %100 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %99, i64 0, i32 4
  %101 = load i8*, i8** %100, align 8, !tbaa !21
  tail call void (%struct.TreeCCInput*, i8*, i64, i8*, ...) @TreeCCErrorOnLine(%struct.TreeCCInput* %99, i8* %101, i64 %linenum, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.2.752, i64 0, i64 0), i8* %name) #2
  %102 = load %struct.TreeCCInput*, %struct.TreeCCInput** %98, align 8, !tbaa !1
  %103 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node.02.i.26.lcssa, i64 0, i32 8
  %104 = load i8*, i8** %103, align 8, !tbaa !111
  %105 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node.02.i.26.lcssa, i64 0, i32 9
  %106 = load i64, i64* %105, align 8, !tbaa !112
  tail call void (%struct.TreeCCInput*, i8*, i64, i8*, ...) @TreeCCErrorOnLine(%struct.TreeCCInput* %102, i8* %104, i64 %106, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3.753, i64 0, i64 0)) #2
  tail call void @free(i8* %name) #2
  br label %195

; <label>:107                                     ; preds = %92
  store i32 %flags, i32* %93, align 4, !tbaa !34
  %108 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node.02.i.26.lcssa, i64 0, i32 0
  store %struct._tagTreeCCNode* %parentNode.0, %struct._tagTreeCCNode** %108, align 8, !tbaa !38
  %109 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 2
  %110 = load %struct.TreeCCInput*, %struct.TreeCCInput** %109, align 8, !tbaa !1
  %111 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %110, i64 0, i32 4
  %112 = bitcast i8** %111 to i64*
  %113 = load i64, i64* %112, align 8, !tbaa !21
  %114 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node.02.i.26.lcssa, i64 0, i32 8
  %115 = bitcast i8** %114 to i64*
  store i64 %113, i64* %115, align 8, !tbaa !111
  %116 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node.02.i.26.lcssa, i64 0, i32 9
  store i64 %linenum, i64* %116, align 8, !tbaa !112
  %117 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 4
  %118 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node.02.i.26.lcssa, i64 0, i32 13
  %119 = bitcast %struct._tagTreeCCStream** %117 to <2 x i64>*
  %120 = load <2 x i64>, <2 x i64>* %119, align 8, !tbaa !7
  %121 = bitcast %struct._tagTreeCCStream** %118 to <2 x i64>*
  store <2 x i64> %120, <2 x i64>* %121, align 8, !tbaa !7
  %122 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node.02.i.26.lcssa, i64 0, i32 3
  store %struct._tagTreeCCNode* null, %struct._tagTreeCCNode** %122, align 8, !tbaa !113
  %123 = icmp eq %struct._tagTreeCCNode* %parentNode.0, null
  br i1 %123, label %195, label %124

; <label>:124                                     ; preds = %107
  %125 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %parentNode.0, i64 0, i32 2
  %126 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %125, align 8, !tbaa !114
  %127 = icmp eq %struct._tagTreeCCNode* %126, null
  br i1 %127, label %130, label %128

; <label>:128                                     ; preds = %124
  %129 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %126, i64 0, i32 3
  store %struct._tagTreeCCNode* %node.02.i.26.lcssa, %struct._tagTreeCCNode** %129, align 8, !tbaa !113
  br label %132

; <label>:130                                     ; preds = %124
  %131 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %parentNode.0, i64 0, i32 1
  store %struct._tagTreeCCNode* %node.02.i.26.lcssa, %struct._tagTreeCCNode** %131, align 8, !tbaa !115
  br label %132

; <label>:132                                     ; preds = %130, %128
  store %struct._tagTreeCCNode* %node.02.i.26.lcssa, %struct._tagTreeCCNode** %125, align 8, !tbaa !114
  br label %195

.loopexit.loopexit:                               ; preds = %89
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %TreeCCHashString.exit.i.25
  %133 = tail call noalias i8* @malloc(i64 112) #2
  %134 = bitcast i8* %133 to %struct._tagTreeCCNode*
  %135 = icmp eq i8* %133, null
  %136 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 2
  br i1 %135, label %137, label %._crit_edge.46

; <label>:137                                     ; preds = %.loopexit
  %138 = load %struct.TreeCCInput*, %struct.TreeCCInput** %136, align 8, !tbaa !1
  tail call void @TreeCCOutOfMemory(%struct.TreeCCInput* %138) #2
  br label %._crit_edge.46

._crit_edge.46:                                   ; preds = %.loopexit, %137
  %139 = bitcast i8* %133 to %struct._tagTreeCCNode**
  store %struct._tagTreeCCNode* %parentNode.0, %struct._tagTreeCCNode** %139, align 8, !tbaa !38
  %140 = getelementptr inbounds i8, i8* %133, i64 8
  %141 = getelementptr inbounds i8, i8* %133, i64 32
  %142 = bitcast i8* %141 to i8**
  call void @llvm.memset.p0i8.i64(i8* %140, i8 0, i64 16, i32 8, i1 false)
  store i8* %name, i8** %142, align 8, !tbaa !36
  %143 = getelementptr inbounds i8, i8* %133, i64 40
  %144 = bitcast i8* %143 to i32*
  store i32 %flags, i32* %144, align 4, !tbaa !34
  %145 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 12
  %146 = load i32, i32* %145, align 4, !tbaa !11
  %147 = add nsw i32 %146, 1
  store i32 %147, i32* %145, align 4, !tbaa !11
  %148 = getelementptr inbounds i8, i8* %133, i64 44
  %149 = bitcast i8* %148 to i32*
  store i32 %146, i32* %149, align 4, !tbaa !37
  %150 = load %struct.TreeCCInput*, %struct.TreeCCInput** %136, align 8, !tbaa !1
  %151 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %150, i64 0, i32 4
  %152 = bitcast i8** %151 to i64*
  %153 = load i64, i64* %152, align 8, !tbaa !21
  %154 = getelementptr inbounds i8, i8* %133, i64 56
  %155 = bitcast i8* %154 to i64*
  store i64 %153, i64* %155, align 8, !tbaa !111
  %156 = getelementptr inbounds i8, i8* %133, i64 64
  %157 = bitcast i8* %156 to i64*
  store i64 %linenum, i64* %157, align 8, !tbaa !112
  %158 = getelementptr inbounds i8, i8* %133, i64 72
  %159 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 4
  call void @llvm.memset.p0i8.i64(i8* %158, i8 0, i64 16, i32 8, i1 false)
  %160 = getelementptr inbounds i8, i8* %133, i64 96
  %161 = bitcast %struct._tagTreeCCStream** %159 to <2 x i64>*
  %162 = load <2 x i64>, <2 x i64>* %161, align 8, !tbaa !7
  %163 = bitcast i8* %160 to <2 x i64>*
  store <2 x i64> %162, <2 x i64>* %163, align 8, !tbaa !7
  %164 = getelementptr inbounds i8, i8* %133, i64 24
  %165 = bitcast i8* %164 to %struct._tagTreeCCNode**
  store %struct._tagTreeCCNode* null, %struct._tagTreeCCNode** %165, align 8, !tbaa !113
  %166 = icmp eq %struct._tagTreeCCNode* %parentNode.0, null
  br i1 %166, label %179, label %167

; <label>:167                                     ; preds = %._crit_edge.46
  %168 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %parentNode.0, i64 0, i32 2
  %169 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %168, align 8, !tbaa !114
  %170 = icmp eq %struct._tagTreeCCNode* %169, null
  br i1 %170, label %174, label %171

; <label>:171                                     ; preds = %167
  %172 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %169, i64 0, i32 3
  %173 = bitcast %struct._tagTreeCCNode** %172 to i8**
  store i8* %133, i8** %173, align 8, !tbaa !113
  br label %177

; <label>:174                                     ; preds = %167
  %175 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %parentNode.0, i64 0, i32 1
  %176 = bitcast %struct._tagTreeCCNode** %175 to i8**
  store i8* %133, i8** %176, align 8, !tbaa !115
  br label %177

; <label>:177                                     ; preds = %174, %171
  %178 = bitcast %struct._tagTreeCCNode** %168 to i8**
  store i8* %133, i8** %178, align 8, !tbaa !114
  br label %179

; <label>:179                                     ; preds = %._crit_edge.46, %177
  %180 = load i8, i8* %name, align 1, !tbaa !27
  %181 = icmp eq i8 %180, 0
  br i1 %181, label %AddToHash.exit16, label %.lr.ph.i.i.10.preheader

.lr.ph.i.i.10.preheader:                          ; preds = %179
  br label %.lr.ph.i.i.10

.lr.ph.i.i.10:                                    ; preds = %.lr.ph.i.i.10.preheader, %.lr.ph.i.i.10
  %182 = phi i8 [ %187, %.lr.ph.i.i.10 ], [ %180, %.lr.ph.i.i.10.preheader ]
  %hash.02.i.i.8 = phi i32 [ %186, %.lr.ph.i.i.10 ], [ 0, %.lr.ph.i.i.10.preheader ]
  %.01.i.i.9 = phi i8* [ %185, %.lr.ph.i.i.10 ], [ %name, %.lr.ph.i.i.10.preheader ]
  %183 = sext i8 %182 to i32
  %184 = mul i32 %hash.02.i.i.8, 33
  %185 = getelementptr inbounds i8, i8* %.01.i.i.9, i64 1
  %186 = add i32 %184, %183
  %187 = load i8, i8* %185, align 1, !tbaa !27
  %188 = icmp eq i8 %187, 0
  br i1 %188, label %TreeCCHashString.exit.loopexit.i.13, label %.lr.ph.i.i.10

TreeCCHashString.exit.loopexit.i.13:              ; preds = %.lr.ph.i.i.10
  %.lcssa = phi i32 [ %186, %.lr.ph.i.i.10 ]
  %phitmp.i.11 = and i32 %.lcssa, 511
  %phitmp1.i.12 = zext i32 %phitmp.i.11 to i64
  br label %AddToHash.exit16

AddToHash.exit16:                                 ; preds = %179, %TreeCCHashString.exit.loopexit.i.13
  %hash.0.lcssa.i.i.14 = phi i64 [ 0, %179 ], [ %phitmp1.i.12, %TreeCCHashString.exit.loopexit.i.13 ]
  %189 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 0, i64 %hash.0.lcssa.i.i.14
  %190 = bitcast %struct._tagTreeCCNode** %189 to i64*
  %191 = load i64, i64* %190, align 8, !tbaa !7
  %192 = getelementptr inbounds i8, i8* %133, i64 88
  %193 = bitcast i8* %192 to i64*
  store i64 %191, i64* %193, align 8, !tbaa !17
  %194 = bitcast %struct._tagTreeCCNode** %189 to i8**
  store i8* %133, i8** %194, align 8, !tbaa !7
  br label %195

; <label>:195                                     ; preds = %107, %97, %132, %AddToHash.exit16
  %node.0 = phi %struct._tagTreeCCNode* [ %node.02.i.26.lcssa, %97 ], [ %node.02.i.26.lcssa, %132 ], [ %node.02.i.26.lcssa, %107 ], [ %134, %AddToHash.exit16 ]
  ret %struct._tagTreeCCNode* %node.0
}

; Function Attrs: nounwind readonly uwtable
define %struct._tagTreeCCNode* @TreeCCNodeFind(%struct._tagTreeCCContext* nocapture readonly %context, i8* nocapture readonly %name) #7 {
  %1 = load i8, i8* %name, align 1, !tbaa !27
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %TreeCCHashString.exit, label %.lr.ph.i.preheader

.lr.ph.i.preheader:                               ; preds = %0
  br label %.lr.ph.i

.lr.ph.i:                                         ; preds = %.lr.ph.i.preheader, %.lr.ph.i
  %3 = phi i8 [ %8, %.lr.ph.i ], [ %1, %.lr.ph.i.preheader ]
  %hash.02.i = phi i32 [ %7, %.lr.ph.i ], [ 0, %.lr.ph.i.preheader ]
  %.01.i = phi i8* [ %6, %.lr.ph.i ], [ %name, %.lr.ph.i.preheader ]
  %4 = sext i8 %3 to i32
  %5 = mul i32 %hash.02.i, 33
  %6 = getelementptr inbounds i8, i8* %.01.i, i64 1
  %7 = add i32 %5, %4
  %8 = load i8, i8* %6, align 1, !tbaa !27
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %TreeCCHashString.exit.loopexit, label %.lr.ph.i

TreeCCHashString.exit.loopexit:                   ; preds = %.lr.ph.i
  %.lcssa = phi i32 [ %7, %.lr.ph.i ]
  %phitmp = and i32 %.lcssa, 511
  %phitmp5 = zext i32 %phitmp to i64
  br label %TreeCCHashString.exit

TreeCCHashString.exit:                            ; preds = %TreeCCHashString.exit.loopexit, %0
  %hash.0.lcssa.i = phi i64 [ 0, %0 ], [ %phitmp5, %TreeCCHashString.exit.loopexit ]
  %10 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 0, i64 %hash.0.lcssa.i
  %node.0.1 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %10, align 8
  %11 = icmp eq %struct._tagTreeCCNode* %node.0.1, null
  br i1 %11, label %._crit_edge, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %TreeCCHashString.exit
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %16
  %node.02 = phi %struct._tagTreeCCNode* [ %node.0, %16 ], [ %node.0.1, %.lr.ph.preheader ]
  %12 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node.02, i64 0, i32 4
  %13 = load i8*, i8** %12, align 8, !tbaa !36
  %14 = tail call i32 @strcmp(i8* %13, i8* %name) #2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %._crit_edge.loopexit, label %16

; <label>:16                                      ; preds = %.lr.ph
  %17 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node.02, i64 0, i32 12
  %node.0 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %17, align 8
  %18 = icmp eq %struct._tagTreeCCNode* %node.0, null
  br i1 %18, label %._crit_edge.loopexit, label %.lr.ph

._crit_edge.loopexit:                             ; preds = %16, %.lr.ph
  %.0.ph = phi %struct._tagTreeCCNode* [ %node.02, %.lr.ph ], [ null, %16 ]
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %TreeCCHashString.exit
  %.0 = phi %struct._tagTreeCCNode* [ null, %TreeCCHashString.exit ], [ %.0.ph, %._crit_edge.loopexit ]
  ret %struct._tagTreeCCNode* %.0
}

; Function Attrs: nounwind readonly uwtable
define %struct._tagTreeCCNode* @TreeCCNodeFindByType(%struct._tagTreeCCContext* nocapture readonly %context, i8* nocapture readonly %name) #7 {
  %1 = tail call i64 @strlen(i8* %name) #12
  %2 = trunc i64 %1 to i32
  %3 = icmp sgt i32 %2, 1
  br i1 %3, label %4, label %16

; <label>:4                                       ; preds = %0
  %5 = shl i64 %1, 32
  %sext = add i64 %5, -4294967296
  %6 = ashr exact i64 %sext, 32
  %7 = getelementptr inbounds i8, i8* %name, i64 %6
  %8 = load i8, i8* %7, align 1, !tbaa !27
  %9 = icmp eq i8 %8, 42
  br i1 %9, label %10, label %16

; <label>:10                                      ; preds = %4
  %11 = add nsw i32 %2, -2
  %12 = sext i32 %11 to i64
  %13 = getelementptr inbounds i8, i8* %name, i64 %12
  %14 = load i8, i8* %13, align 1, !tbaa !27
  %15 = icmp eq i8 %14, 32
  br i1 %15, label %17, label %16

; <label>:16                                      ; preds = %10, %4, %0
  br label %17

; <label>:17                                      ; preds = %10, %16
  %len.0 = phi i32 [ %2, %16 ], [ %11, %10 ]
  %hasSuffix.0 = phi i32 [ 0, %16 ], [ 1, %10 ]
  %18 = icmp sgt i32 %len.0, 0
  br i1 %18, label %.lr.ph.i.preheader, label %HashStringLen.exit

.lr.ph.i.preheader:                               ; preds = %17
  br label %.lr.ph.i

.lr.ph.i:                                         ; preds = %.lr.ph.i.preheader, %.lr.ph.i
  %hash.04.i = phi i32 [ %23, %.lr.ph.i ], [ 0, %.lr.ph.i.preheader ]
  %.03.i = phi i32 [ %24, %.lr.ph.i ], [ %len.0, %.lr.ph.i.preheader ]
  %.012.i = phi i8* [ %20, %.lr.ph.i ], [ %name, %.lr.ph.i.preheader ]
  %19 = mul i32 %hash.04.i, 33
  %20 = getelementptr inbounds i8, i8* %.012.i, i64 1
  %21 = load i8, i8* %.012.i, align 1, !tbaa !27
  %22 = sext i8 %21 to i32
  %23 = add i32 %22, %19
  %24 = add nsw i32 %.03.i, -1
  %25 = icmp sgt i32 %.03.i, 1
  br i1 %25, label %.lr.ph.i, label %HashStringLen.exit.loopexit

HashStringLen.exit.loopexit:                      ; preds = %.lr.ph.i
  %.lcssa = phi i32 [ %23, %.lr.ph.i ]
  %phitmp = and i32 %.lcssa, 511
  %phitmp5 = zext i32 %phitmp to i64
  br label %HashStringLen.exit

HashStringLen.exit:                               ; preds = %HashStringLen.exit.loopexit, %17
  %hash.0.lcssa.i = phi i64 [ 0, %17 ], [ %phitmp5, %HashStringLen.exit.loopexit ]
  %26 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 0, i64 %hash.0.lcssa.i
  %node.0.3 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %26, align 8
  %27 = icmp eq %struct._tagTreeCCNode* %node.0.3, null
  br i1 %27, label %.loopexit, label %.lr.ph

.lr.ph:                                           ; preds = %HashStringLen.exit
  %28 = sext i32 %len.0 to i64
  br label %29

; <label>:29                                      ; preds = %.lr.ph, %48
  %node.04 = phi %struct._tagTreeCCNode* [ %node.0.3, %.lr.ph ], [ %node.0, %48 ]
  %30 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node.04, i64 0, i32 4
  %31 = load i8*, i8** %30, align 8, !tbaa !36
  %32 = tail call i32 @strncmp(i8* %31, i8* %name, i64 %28) #12
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %48

; <label>:34                                      ; preds = %29
  %35 = getelementptr inbounds i8, i8* %31, i64 %28
  %36 = load i8, i8* %35, align 1, !tbaa !27
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %38, label %48

; <label>:38                                      ; preds = %34
  %node.04.lcssa = phi %struct._tagTreeCCNode* [ %node.04, %34 ]
  %39 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node.04.lcssa, i64 0, i32 5
  %40 = load i32, i32* %39, align 4, !tbaa !34
  %41 = and i32 %40, 8
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %45, label %43

; <label>:43                                      ; preds = %38
  %44 = icmp eq i32 %hasSuffix.0, 0
  %node.0. = select i1 %44, %struct._tagTreeCCNode* %node.04.lcssa, %struct._tagTreeCCNode* null
  br label %.loopexit

; <label>:45                                      ; preds = %38
  %46 = and i32 %40, 16
  %47 = icmp eq i32 %46, 0
  %node.0.1 = select i1 %47, %struct._tagTreeCCNode* %node.04.lcssa, %struct._tagTreeCCNode* null
  br label %.loopexit

; <label>:48                                      ; preds = %29, %34
  %49 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node.04, i64 0, i32 12
  %node.0 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %49, align 8
  %50 = icmp eq %struct._tagTreeCCNode* %node.0, null
  br i1 %50, label %.loopexit.loopexit, label %29

.loopexit.loopexit:                               ; preds = %48
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %HashStringLen.exit, %45, %43
  %.0 = phi %struct._tagTreeCCNode* [ %node.0., %43 ], [ %node.0.1, %45 ], [ null, %HashStringLen.exit ], [ null, %.loopexit.loopexit ]
  ret %struct._tagTreeCCNode* %.0
}

; Function Attrs: nounwind readonly
declare i32 @strncmp(i8* nocapture, i8* nocapture, i64) #5

; Function Attrs: nounwind uwtable
define void @TreeCCNodeValidate(%struct._tagTreeCCContext* nocapture readonly %context) #0 {
  %1 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 13
  %2 = load i32, i32* %1, align 4, !tbaa !9
  %3 = icmp ult i32 %2, 2
  %4 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 2
  br label %5

; <label>:5                                       ; preds = %._crit_edge, %0
  %indvars.iv = phi i64 [ 0, %0 ], [ %indvars.iv.next, %._crit_edge ]
  %6 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 0, i64 %indvars.iv
  %node.0.6 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %6, align 8
  %7 = icmp eq %struct._tagTreeCCNode* %node.0.6, null
  br i1 %7, label %._crit_edge, label %.lr.ph8

.lr.ph8:                                          ; preds = %5
  br i1 %3, label %.lr.ph8.split.us.preheader, label %.lr.ph8..lr.ph8.split_crit_edge.preheader

.lr.ph8..lr.ph8.split_crit_edge.preheader:        ; preds = %.lr.ph8
  br label %.lr.ph8..lr.ph8.split_crit_edge

.lr.ph8.split.us.preheader:                       ; preds = %.lr.ph8
  br label %.lr.ph8.split.us

.lr.ph8.split.us:                                 ; preds = %.lr.ph8.split.us.preheader, %..loopexit_crit_edge.us
  %node.07.us = phi %struct._tagTreeCCNode* [ %node.0.us, %..loopexit_crit_edge.us ], [ %node.0.6, %.lr.ph8.split.us.preheader ]
  %8 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node.07.us, i64 0, i32 5
  %9 = load i32, i32* %8, align 4, !tbaa !34
  %10 = and i32 %9, 1
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %20, label %12

; <label>:12                                      ; preds = %.lr.ph8.split.us
  %13 = load %struct.TreeCCInput*, %struct.TreeCCInput** %4, align 8, !tbaa !1
  %14 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node.07.us, i64 0, i32 8
  %15 = load i8*, i8** %14, align 8, !tbaa !111
  %16 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node.07.us, i64 0, i32 9
  %17 = load i64, i64* %16, align 8, !tbaa !112
  %18 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node.07.us, i64 0, i32 4
  %19 = load i8*, i8** %18, align 8, !tbaa !36
  tail call void (%struct.TreeCCInput*, i8*, i64, i8*, ...) @TreeCCErrorOnLine(%struct.TreeCCInput* %13, i8* %15, i64 %17, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.4.754, i64 0, i64 0), i8* %19) #2
  br label %20

; <label>:20                                      ; preds = %12, %.lr.ph8.split.us
  %21 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node.07.us, i64 0, i32 0
  %22 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %21, align 8, !tbaa !38
  %23 = icmp eq %struct._tagTreeCCNode* %22, null
  br i1 %23, label %24, label %36

; <label>:24                                      ; preds = %20
  %25 = load i32, i32* %8, align 4, !tbaa !34
  %26 = and i32 %25, 5
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %36

; <label>:28                                      ; preds = %24
  %29 = load %struct.TreeCCInput*, %struct.TreeCCInput** %4, align 8, !tbaa !1
  %30 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node.07.us, i64 0, i32 8
  %31 = load i8*, i8** %30, align 8, !tbaa !111
  %32 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node.07.us, i64 0, i32 9
  %33 = load i64, i64* %32, align 8, !tbaa !112
  %34 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node.07.us, i64 0, i32 4
  %35 = load i8*, i8** %34, align 8, !tbaa !36
  tail call void (%struct.TreeCCInput*, i8*, i64, i8*, ...) @TreeCCErrorOnLine(%struct.TreeCCInput* %29, i8* %31, i64 %33, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.5.755, i64 0, i64 0), i8* %35) #2
  br label %36

; <label>:36                                      ; preds = %20, %24, %28
  %37 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node.07.us, i64 0, i32 10
  %field.0.3.us = load %struct._tagTreeCCField*, %struct._tagTreeCCField** %37, align 8
  %38 = icmp eq %struct._tagTreeCCField* %field.0.3.us, null
  br i1 %38, label %..loopexit_crit_edge.us, label %.lr.ph.us.preheader

.lr.ph.us.preheader:                              ; preds = %36
  br label %.lr.ph.us

.lr.ph.us:                                        ; preds = %.lr.ph.us.preheader, %69
  %field.04.us = phi %struct._tagTreeCCField* [ %field.0.us, %69 ], [ %field.0.3.us, %.lr.ph.us.preheader ]
  %39 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.04.us, i64 0, i32 1
  %40 = load i8*, i8** %39, align 8, !tbaa !63
  %41 = tail call %struct._tagTreeCCNode* @TreeCCNodeFindByType(%struct._tagTreeCCContext* %context, i8* %40)
  %42 = icmp eq %struct._tagTreeCCNode* %41, null
  br i1 %42, label %69, label %43

; <label>:43                                      ; preds = %.lr.ph.us
  %44 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %41, i64 0, i32 5
  %45 = load i32, i32* %44, align 4, !tbaa !34
  %46 = and i32 %45, 8
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %69

; <label>:48                                      ; preds = %43
  %49 = tail call i64 @strlen(i8* %40) #12
  %50 = trunc i64 %49 to i32
  %51 = icmp slt i32 %50, 2
  br i1 %51, label %63, label %52

; <label>:52                                      ; preds = %48
  %53 = shl i64 %49, 32
  %sext.us = add i64 %53, -4294967296
  %54 = ashr exact i64 %sext.us, 32
  %55 = getelementptr inbounds i8, i8* %40, i64 %54
  %56 = load i8, i8* %55, align 1, !tbaa !27
  %57 = icmp eq i8 %56, 42
  br i1 %57, label %58, label %63

; <label>:58                                      ; preds = %52
  %sext1.us = add i64 %53, -8589934592
  %59 = ashr exact i64 %sext1.us, 32
  %60 = getelementptr inbounds i8, i8* %40, i64 %59
  %61 = load i8, i8* %60, align 1, !tbaa !27
  %62 = icmp eq i8 %61, 32
  br i1 %62, label %69, label %63

; <label>:63                                      ; preds = %58, %52, %48
  %64 = load %struct.TreeCCInput*, %struct.TreeCCInput** %4, align 8, !tbaa !1
  %65 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.04.us, i64 0, i32 4
  %66 = load i8*, i8** %65, align 8, !tbaa !116
  %67 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.04.us, i64 0, i32 5
  %68 = load i64, i64* %67, align 8, !tbaa !117
  tail call void (%struct.TreeCCInput*, i8*, i64, i8*, ...) @TreeCCErrorOnLine(%struct.TreeCCInput* %64, i8* %66, i64 %68, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.6.756, i64 0, i64 0)) #2
  br label %69

; <label>:69                                      ; preds = %63, %58, %43, %.lr.ph.us
  %70 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.04.us, i64 0, i32 6
  %field.0.us = load %struct._tagTreeCCField*, %struct._tagTreeCCField** %70, align 8
  %71 = icmp eq %struct._tagTreeCCField* %field.0.us, null
  br i1 %71, label %..loopexit_crit_edge.us.loopexit, label %.lr.ph.us

..loopexit_crit_edge.us.loopexit:                 ; preds = %69
  br label %..loopexit_crit_edge.us

..loopexit_crit_edge.us:                          ; preds = %..loopexit_crit_edge.us.loopexit, %36
  %72 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node.07.us, i64 0, i32 12
  %node.0.us = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %72, align 8
  %73 = icmp eq %struct._tagTreeCCNode* %node.0.us, null
  br i1 %73, label %._crit_edge.loopexit, label %.lr.ph8.split.us

.lr.ph8..lr.ph8.split_crit_edge:                  ; preds = %.lr.ph8..lr.ph8.split_crit_edge.preheader, %102
  %node.07 = phi %struct._tagTreeCCNode* [ %node.0, %102 ], [ %node.0.6, %.lr.ph8..lr.ph8.split_crit_edge.preheader ]
  %74 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node.07, i64 0, i32 5
  %75 = load i32, i32* %74, align 4, !tbaa !34
  %76 = and i32 %75, 1
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %86, label %78

; <label>:78                                      ; preds = %.lr.ph8..lr.ph8.split_crit_edge
  %79 = load %struct.TreeCCInput*, %struct.TreeCCInput** %4, align 8, !tbaa !1
  %80 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node.07, i64 0, i32 8
  %81 = load i8*, i8** %80, align 8, !tbaa !111
  %82 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node.07, i64 0, i32 9
  %83 = load i64, i64* %82, align 8, !tbaa !112
  %84 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node.07, i64 0, i32 4
  %85 = load i8*, i8** %84, align 8, !tbaa !36
  tail call void (%struct.TreeCCInput*, i8*, i64, i8*, ...) @TreeCCErrorOnLine(%struct.TreeCCInput* %79, i8* %81, i64 %83, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.4.754, i64 0, i64 0), i8* %85) #2
  br label %86

; <label>:86                                      ; preds = %.lr.ph8..lr.ph8.split_crit_edge, %78
  %87 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node.07, i64 0, i32 0
  %88 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %87, align 8, !tbaa !38
  %89 = icmp eq %struct._tagTreeCCNode* %88, null
  br i1 %89, label %90, label %102

; <label>:90                                      ; preds = %86
  %91 = load i32, i32* %74, align 4, !tbaa !34
  %92 = and i32 %91, 5
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %94, label %102

; <label>:94                                      ; preds = %90
  %95 = load %struct.TreeCCInput*, %struct.TreeCCInput** %4, align 8, !tbaa !1
  %96 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node.07, i64 0, i32 8
  %97 = load i8*, i8** %96, align 8, !tbaa !111
  %98 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node.07, i64 0, i32 9
  %99 = load i64, i64* %98, align 8, !tbaa !112
  %100 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node.07, i64 0, i32 4
  %101 = load i8*, i8** %100, align 8, !tbaa !36
  tail call void (%struct.TreeCCInput*, i8*, i64, i8*, ...) @TreeCCErrorOnLine(%struct.TreeCCInput* %95, i8* %97, i64 %99, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.5.755, i64 0, i64 0), i8* %101) #2
  br label %102

; <label>:102                                     ; preds = %90, %94, %86
  %103 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node.07, i64 0, i32 12
  %node.0 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %103, align 8
  %104 = icmp eq %struct._tagTreeCCNode* %node.0, null
  br i1 %104, label %._crit_edge.loopexit13, label %.lr.ph8..lr.ph8.split_crit_edge

._crit_edge.loopexit:                             ; preds = %..loopexit_crit_edge.us
  br label %._crit_edge

._crit_edge.loopexit13:                           ; preds = %102
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit13, %._crit_edge.loopexit, %5
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i64 %indvars.iv.next, 512
  br i1 %exitcond, label %105, label %5

; <label>:105                                     ; preds = %._crit_edge
  ret void
}

; Function Attrs: nounwind uwtable
define void @TreeCCNodeVisitAll(%struct._tagTreeCCContext* %context, void (%struct._tagTreeCCContext*, %struct._tagTreeCCNode*)* nocapture %visitor) #0 {
  br label %1

; <label>:1                                       ; preds = %._crit_edge, %0
  %indvars.iv = phi i64 [ 0, %0 ], [ %indvars.iv.next, %._crit_edge ]
  %2 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 0, i64 %indvars.iv
  %node.0.1 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %2, align 8
  %3 = icmp eq %struct._tagTreeCCNode* %node.0.1, null
  br i1 %3, label %._crit_edge, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %1
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %8
  %node.02 = phi %struct._tagTreeCCNode* [ %node.0, %8 ], [ %node.0.1, %.lr.ph.preheader ]
  %4 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node.02, i64 0, i32 0
  %5 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %4, align 8, !tbaa !38
  %6 = icmp eq %struct._tagTreeCCNode* %5, null
  br i1 %6, label %7, label %8

; <label>:7                                       ; preds = %.lr.ph
  tail call void %visitor(%struct._tagTreeCCContext* %context, %struct._tagTreeCCNode* %node.02) #2
  tail call fastcc void @Visit(%struct._tagTreeCCContext* %context, %struct._tagTreeCCNode* %node.02, void (%struct._tagTreeCCContext*, %struct._tagTreeCCNode*)* %visitor)
  br label %8

; <label>:8                                       ; preds = %.lr.ph, %7
  %9 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node.02, i64 0, i32 12
  %node.0 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %9, align 8
  %10 = icmp eq %struct._tagTreeCCNode* %node.0, null
  br i1 %10, label %._crit_edge.loopexit, label %.lr.ph

._crit_edge.loopexit:                             ; preds = %8
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %1
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i64 %indvars.iv.next, 512
  br i1 %exitcond, label %11, label %1

; <label>:11                                      ; preds = %._crit_edge
  ret void
}

; Function Attrs: nounwind readonly uwtable
define i32 @TreeCCNodeIsSingleton(%struct._tagTreeCCNode* readonly %node) #7 {
  %1 = icmp eq %struct._tagTreeCCNode* %node, null
  br i1 %1, label %._crit_edge, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %0
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %5
  %.02 = phi %struct._tagTreeCCNode* [ %7, %5 ], [ %node, %.lr.ph.preheader ]
  %2 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %.02, i64 0, i32 10
  %3 = load %struct._tagTreeCCField*, %struct._tagTreeCCField** %2, align 8, !tbaa !67
  %4 = icmp eq %struct._tagTreeCCField* %3, null
  br i1 %4, label %5, label %._crit_edge.loopexit

; <label>:5                                       ; preds = %.lr.ph
  %6 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %.02, i64 0, i32 0
  %7 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %6, align 8, !tbaa !38
  %8 = icmp eq %struct._tagTreeCCNode* %7, null
  br i1 %8, label %._crit_edge.loopexit, label %.lr.ph

._crit_edge.loopexit:                             ; preds = %5, %.lr.ph
  %.01.ph = phi i32 [ 0, %.lr.ph ], [ 1, %5 ]
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %0
  %.01 = phi i32 [ 1, %0 ], [ %.01.ph, %._crit_edge.loopexit ]
  ret i32 %.01
}

; Function Attrs: nounwind uwtable
define i32 @TreeCCNodeHasAbstracts(%struct._tagTreeCCContext* %context, %struct._tagTreeCCNode* %node) #0 {
  %1 = tail call fastcc i32 @HasAbstracts(%struct._tagTreeCCContext* %context, %struct._tagTreeCCNode* %node, %struct._tagTreeCCNode* %node)
  ret i32 %1
}

; Function Attrs: nounwind uwtable
define void @TreeCCNodeAddVirtual(%struct._tagTreeCCContext* nocapture readonly %context, %struct._tagTreeCCNode* nocapture %node, %struct._tagTreeCCOperation* %oper) #0 {
  %1 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 8
  %2 = load i16, i16* %1, align 8
  %.mask = and i16 %2, 1
  %3 = icmp eq i16 %.mask, 0
  br i1 %3, label %11, label %4

; <label>:4                                       ; preds = %0
  %5 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %oper, i64 0, i32 8
  %6 = load i64, i64* %5, align 8, !tbaa !118
  %7 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 4
  %8 = load i8*, i8** %7, align 8, !tbaa !36
  %9 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %oper, i64 0, i32 0
  %10 = load i8*, i8** %9, align 8, !tbaa !46
  tail call void (i64, i8*, ...) @TreeCCDebug(i64 %6, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.7.757, i64 0, i64 0), i8* %8, i8* %10) #2
  br label %11

; <label>:11                                      ; preds = %0, %4
  %12 = tail call noalias i8* @malloc(i64 40) #2
  %13 = icmp eq i8* %12, null
  br i1 %13, label %14, label %17

; <label>:14                                      ; preds = %11
  %15 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 2
  %16 = load %struct.TreeCCInput*, %struct.TreeCCInput** %15, align 8, !tbaa !1
  tail call void @TreeCCOutOfMemory(%struct.TreeCCInput* %16) #2
  br label %17

; <label>:17                                      ; preds = %14, %11
  %18 = bitcast %struct._tagTreeCCOperation* %oper to i64*
  %19 = load i64, i64* %18, align 8, !tbaa !46
  %20 = bitcast i8* %12 to i64*
  store i64 %19, i64* %20, align 8, !tbaa !39
  %21 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %oper, i64 0, i32 2
  %22 = bitcast i8** %21 to i64*
  %23 = load i64, i64* %22, align 8, !tbaa !45
  %24 = getelementptr inbounds i8, i8* %12, i64 8
  %25 = bitcast i8* %24 to i64*
  store i64 %23, i64* %25, align 8, !tbaa !66
  %26 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %oper, i64 0, i32 4
  %27 = load %struct._tagTreeCCParam*, %struct._tagTreeCCParam** %26, align 8, !tbaa !68
  %28 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %27, i64 0, i32 4
  %29 = bitcast %struct._tagTreeCCParam** %28 to i64*
  %30 = load i64, i64* %29, align 8, !tbaa !82
  %31 = getelementptr inbounds i8, i8* %12, i64 16
  %32 = bitcast i8* %31 to i64*
  store i64 %30, i64* %32, align 8, !tbaa !119
  %33 = getelementptr inbounds i8, i8* %12, i64 24
  %34 = bitcast i8* %33 to %struct._tagTreeCCOperation**
  store %struct._tagTreeCCOperation* %oper, %struct._tagTreeCCOperation** %34, align 8, !tbaa !70
  %35 = getelementptr inbounds i8, i8* %12, i64 32
  %36 = bitcast i8* %35 to %struct._tagTreeCCVirtual**
  store %struct._tagTreeCCVirtual* null, %struct._tagTreeCCVirtual** %36, align 8, !tbaa !110
  %37 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 11
  %38 = load %struct._tagTreeCCVirtual*, %struct._tagTreeCCVirtual** %37, align 8, !tbaa !109
  %39 = icmp eq %struct._tagTreeCCVirtual* %38, null
  br i1 %39, label %45, label %.preheader.preheader

.preheader.preheader:                             ; preds = %17
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %.preheader
  %last.0 = phi %struct._tagTreeCCVirtual* [ %41, %.preheader ], [ %38, %.preheader.preheader ]
  %40 = getelementptr inbounds %struct._tagTreeCCVirtual, %struct._tagTreeCCVirtual* %last.0, i64 0, i32 4
  %41 = load %struct._tagTreeCCVirtual*, %struct._tagTreeCCVirtual** %40, align 8, !tbaa !110
  %42 = icmp eq %struct._tagTreeCCVirtual* %41, null
  br i1 %42, label %43, label %.preheader

; <label>:43                                      ; preds = %.preheader
  %.lcssa = phi %struct._tagTreeCCVirtual** [ %40, %.preheader ]
  %44 = bitcast %struct._tagTreeCCVirtual** %.lcssa to i8**
  store i8* %12, i8** %44, align 8, !tbaa !110
  br label %47

; <label>:45                                      ; preds = %17
  %46 = bitcast %struct._tagTreeCCVirtual** %37 to i8**
  store i8* %12, i8** %46, align 8, !tbaa !109
  br label %47

; <label>:47                                      ; preds = %45, %43
  ret void
}

; Function Attrs: nounwind readonly uwtable
define i32 @TreeCCNodeInheritsFrom(%struct._tagTreeCCNode* readonly %nodea, %struct._tagTreeCCNode* readnone %nodeb) #7 {
  %1 = icmp eq %struct._tagTreeCCNode* %nodea, null
  br i1 %1, label %._crit_edge, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %0
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %3
  %.012 = phi %struct._tagTreeCCNode* [ %5, %3 ], [ %nodea, %.lr.ph.preheader ]
  %2 = icmp eq %struct._tagTreeCCNode* %.012, %nodeb
  br i1 %2, label %._crit_edge.loopexit, label %3

; <label>:3                                       ; preds = %.lr.ph
  %4 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %.012, i64 0, i32 0
  %5 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %4, align 8, !tbaa !38
  %6 = icmp eq %struct._tagTreeCCNode* %5, null
  br i1 %6, label %._crit_edge.loopexit, label %.lr.ph

._crit_edge.loopexit:                             ; preds = %3, %.lr.ph
  %.0.ph = phi i32 [ 1, %.lr.ph ], [ 0, %3 ]
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %0
  %.0 = phi i32 [ 0, %0 ], [ %.0.ph, %._crit_edge.loopexit ]
  ret i32 %.0
}

; Function Attrs: nounwind uwtable
define void @TreeCCNodeClearMarking(%struct._tagTreeCCContext* nocapture readonly %context, i32 %flags) #0 {
  %1 = xor i32 %flags, -1
  br label %2

; <label>:2                                       ; preds = %._crit_edge.1, %0
  %indvars.iv = phi i64 [ 0, %0 ], [ %indvars.iv.next.1, %._crit_edge.1 ]
  %3 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 0, i64 %indvars.iv
  %node.0.1 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %3, align 8
  %4 = icmp eq %struct._tagTreeCCNode* %node.0.1, null
  br i1 %4, label %._crit_edge, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %2
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %.lr.ph
  %node.02 = phi %struct._tagTreeCCNode* [ %node.0, %.lr.ph ], [ %node.0.1, %.lr.ph.preheader ]
  %5 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node.02, i64 0, i32 5
  %6 = load i32, i32* %5, align 4, !tbaa !34
  %7 = and i32 %6, %1
  store i32 %7, i32* %5, align 4, !tbaa !34
  %8 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node.02, i64 0, i32 12
  %node.0 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %8, align 8
  %9 = icmp eq %struct._tagTreeCCNode* %node.0, null
  br i1 %9, label %._crit_edge.loopexit, label %.lr.ph

._crit_edge.loopexit:                             ; preds = %.lr.ph
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %2
  %indvars.iv.next = or i64 %indvars.iv, 1
  %10 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 0, i64 %indvars.iv.next
  %node.0.1.1 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %10, align 8
  %11 = icmp eq %struct._tagTreeCCNode* %node.0.1.1, null
  br i1 %11, label %._crit_edge.1, label %.lr.ph.preheader.1

; <label>:12                                      ; preds = %._crit_edge.1
  ret void

.lr.ph.preheader.1:                               ; preds = %._crit_edge
  br label %.lr.ph.1

.lr.ph.1:                                         ; preds = %.lr.ph.1, %.lr.ph.preheader.1
  %node.02.1 = phi %struct._tagTreeCCNode* [ %node.0.1.4, %.lr.ph.1 ], [ %node.0.1.1, %.lr.ph.preheader.1 ]
  %13 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node.02.1, i64 0, i32 5
  %14 = load i32, i32* %13, align 4, !tbaa !34
  %15 = and i32 %14, %1
  store i32 %15, i32* %13, align 4, !tbaa !34
  %16 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node.02.1, i64 0, i32 12
  %node.0.1.4 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %16, align 8
  %17 = icmp eq %struct._tagTreeCCNode* %node.0.1.4, null
  br i1 %17, label %._crit_edge.loopexit.1, label %.lr.ph.1

._crit_edge.loopexit.1:                           ; preds = %.lr.ph.1
  br label %._crit_edge.1

._crit_edge.1:                                    ; preds = %._crit_edge.loopexit.1, %._crit_edge
  %indvars.iv.next.1 = add nsw i64 %indvars.iv, 2
  %exitcond.1 = icmp eq i64 %indvars.iv.next.1, 512
  br i1 %exitcond.1, label %12, label %2
}

; Function Attrs: nounwind uwtable
define i32 @TreeCCNodeAssignPositions(%struct._tagTreeCCNode* nocapture %node) #0 {
  %1 = tail call fastcc i32 @AssignPositions(%struct._tagTreeCCNode* %node, i32 0)
  ret i32 %1
}

; Function Attrs: nounwind uwtable
define void @TreeCCFieldCreate(%struct._tagTreeCCContext* nocapture readonly %context, %struct._tagTreeCCNode* %node, i8* %name, i8* %type, i8* %value, i32 %flags) #0 {
  %1 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 8
  %2 = load i16, i16* %1, align 8
  %.mask = and i16 %2, 1
  %3 = icmp eq i16 %.mask, 0
  br i1 %3, label %.preheader, label %4

; <label>:4                                       ; preds = %0
  %5 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 2
  %6 = load %struct.TreeCCInput*, %struct.TreeCCInput** %5, align 8, !tbaa !1
  %7 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %6, i64 0, i32 5
  %8 = load i64, i64* %7, align 8, !tbaa !23
  %9 = icmp ne i8* %type, null
  %10 = select i1 %9, i8* %type, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9.758, i64 0, i64 0)
  %11 = icmp ne i8* %value, null
  %12 = select i1 %11, i8* %value, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.10.759, i64 0, i64 0)
  tail call void (i64, i8*, ...) @TreeCCDebug(i64 %8, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.8.760, i64 0, i64 0), i8* %name, i8* %10, i8* %12, i32 %flags) #2
  br label %.preheader

.preheader:                                       ; preds = %0, %4
  %13 = icmp eq %struct._tagTreeCCNode* %node, null
  br i1 %13, label %._crit_edge, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %.preheader
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %.loopexit
  %current.02 = phi %struct._tagTreeCCNode* [ %34, %.loopexit ], [ %node, %.lr.ph.preheader ]
  %14 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %current.02, i64 0, i32 10
  %field.0.2.i = load %struct._tagTreeCCField*, %struct._tagTreeCCField** %14, align 8
  %15 = icmp eq %struct._tagTreeCCField* %field.0.2.i, null
  br i1 %15, label %.loopexit, label %.lr.ph.i.preheader

.lr.ph.i.preheader:                               ; preds = %.lr.ph
  br label %.lr.ph.i

.lr.ph.i:                                         ; preds = %.lr.ph.i.preheader, %20
  %field.03.i = phi %struct._tagTreeCCField* [ %field.0.i, %20 ], [ %field.0.2.i, %.lr.ph.i.preheader ]
  %16 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.03.i, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8, !tbaa !64
  %18 = tail call i32 @strcmp(i8* %17, i8* %name) #2
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %23, label %20

; <label>:20                                      ; preds = %.lr.ph.i
  %21 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.03.i, i64 0, i32 6
  %field.0.i = load %struct._tagTreeCCField*, %struct._tagTreeCCField** %21, align 8
  %22 = icmp eq %struct._tagTreeCCField* %field.0.i, null
  br i1 %22, label %.loopexit.loopexit, label %.lr.ph.i

; <label>:23                                      ; preds = %.lr.ph.i
  %field.03.i.lcssa = phi %struct._tagTreeCCField* [ %field.03.i, %.lr.ph.i ]
  %24 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 2
  %25 = load %struct.TreeCCInput*, %struct.TreeCCInput** %24, align 8, !tbaa !1
  tail call void (%struct.TreeCCInput*, i8*, ...) @TreeCCError(%struct.TreeCCInput* %25, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.11.761, i64 0, i64 0), i8* %name) #2
  %26 = load %struct.TreeCCInput*, %struct.TreeCCInput** %24, align 8, !tbaa !1
  %27 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.03.i.lcssa, i64 0, i32 4
  %28 = load i8*, i8** %27, align 8, !tbaa !116
  %29 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.03.i.lcssa, i64 0, i32 5
  %30 = load i64, i64* %29, align 8, !tbaa !117
  tail call void (%struct.TreeCCInput*, i8*, i64, i8*, ...) @TreeCCErrorOnLine(%struct.TreeCCInput* %26, i8* %28, i64 %30, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3.753, i64 0, i64 0)) #2
  tail call void @free(i8* %name) #2
  tail call void @free(i8* %type) #2
  %31 = icmp eq i8* %value, null
  br i1 %31, label %68, label %32

; <label>:32                                      ; preds = %23
  tail call void @free(i8* %value) #2
  br label %68

.loopexit.loopexit:                               ; preds = %20
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %.lr.ph
  %33 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %current.02, i64 0, i32 0
  %34 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %33, align 8, !tbaa !38
  %35 = icmp eq %struct._tagTreeCCNode* %34, null
  br i1 %35, label %._crit_edge.loopexit, label %.lr.ph

._crit_edge.loopexit:                             ; preds = %.loopexit
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %.preheader
  %36 = tail call fastcc i32 @IsDeclaredInChildren(%struct._tagTreeCCContext* %context, %struct._tagTreeCCNode* %node, i8* %name)
  %37 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 10
  br label %38

; <label>:38                                      ; preds = %38, %._crit_edge
  %field.0.in = phi %struct._tagTreeCCField** [ %37, %._crit_edge ], [ %40, %38 ]
  %prev.0 = phi %struct._tagTreeCCField* [ null, %._crit_edge ], [ %field.0, %38 ]
  %field.0 = load %struct._tagTreeCCField*, %struct._tagTreeCCField** %field.0.in, align 8
  %39 = icmp eq %struct._tagTreeCCField* %field.0, null
  %40 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.0, i64 0, i32 6
  br i1 %39, label %41, label %38

; <label>:41                                      ; preds = %38
  %prev.0.lcssa = phi %struct._tagTreeCCField* [ %prev.0, %38 ]
  %42 = tail call noalias i8* @malloc(i64 56) #2
  %43 = icmp eq i8* %42, null
  %44 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 2
  br i1 %43, label %45, label %._crit_edge.4

; <label>:45                                      ; preds = %41
  %46 = load %struct.TreeCCInput*, %struct.TreeCCInput** %44, align 8, !tbaa !1
  tail call void @TreeCCOutOfMemory(%struct.TreeCCInput* %46) #2
  br label %._crit_edge.4

._crit_edge.4:                                    ; preds = %41, %45
  %47 = bitcast i8* %42 to i8**
  store i8* %name, i8** %47, align 8, !tbaa !64
  %48 = getelementptr inbounds i8, i8* %42, i64 8
  %49 = bitcast i8* %48 to i8**
  store i8* %type, i8** %49, align 8, !tbaa !63
  %50 = getelementptr inbounds i8, i8* %42, i64 16
  %51 = bitcast i8* %50 to i8**
  store i8* %value, i8** %51, align 8, !tbaa !65
  %52 = getelementptr inbounds i8, i8* %42, i64 24
  %53 = bitcast i8* %52 to i32*
  store i32 %flags, i32* %53, align 4, !tbaa !61
  %54 = load %struct.TreeCCInput*, %struct.TreeCCInput** %44, align 8, !tbaa !1
  %55 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %54, i64 0, i32 4
  %56 = getelementptr inbounds i8, i8* %42, i64 32
  %57 = bitcast i8** %55 to <2 x i64>*
  %58 = load <2 x i64>, <2 x i64>* %57, align 8, !tbaa !27
  %59 = bitcast i8* %56 to <2 x i64>*
  store <2 x i64> %58, <2 x i64>* %59, align 8, !tbaa !27
  %60 = getelementptr inbounds i8, i8* %42, i64 48
  %61 = bitcast i8* %60 to %struct._tagTreeCCField**
  store %struct._tagTreeCCField* null, %struct._tagTreeCCField** %61, align 8, !tbaa !108
  %62 = icmp eq %struct._tagTreeCCField* %prev.0.lcssa, null
  br i1 %62, label %66, label %63

; <label>:63                                      ; preds = %._crit_edge.4
  %64 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %prev.0.lcssa, i64 0, i32 6
  %65 = bitcast %struct._tagTreeCCField** %64 to i8**
  store i8* %42, i8** %65, align 8, !tbaa !108
  br label %68

; <label>:66                                      ; preds = %._crit_edge.4
  %67 = bitcast %struct._tagTreeCCField** %37 to i8**
  store i8* %42, i8** %67, align 8, !tbaa !67
  br label %68

; <label>:68                                      ; preds = %63, %66, %32, %23
  ret void
}

; Function Attrs: nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture, i8, i64, i32, i1) #2

; Function Attrs: nounwind uwtable
define internal fastcc void @Visit(%struct._tagTreeCCContext* %context, %struct._tagTreeCCNode* nocapture readonly %node, void (%struct._tagTreeCCContext*, %struct._tagTreeCCNode*)* nocapture %visitor) #0 {
  %1 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 1
  %child.0.3 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %1, align 8
  %2 = icmp eq %struct._tagTreeCCNode* %child.0.3, null
  br i1 %2, label %._crit_edge, label %.lr.ph6.preheader

.lr.ph6.preheader:                                ; preds = %0
  br label %.lr.ph6

.preheader:                                       ; preds = %.lr.ph6
  %child.1.1.pre = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %1, align 8
  %3 = icmp eq %struct._tagTreeCCNode* %child.1.1.pre, null
  br i1 %3, label %._crit_edge, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %.preheader
  br label %.lr.ph

.lr.ph6:                                          ; preds = %.lr.ph6.preheader, %.lr.ph6
  %child.04 = phi %struct._tagTreeCCNode* [ %child.0, %.lr.ph6 ], [ %child.0.3, %.lr.ph6.preheader ]
  tail call void %visitor(%struct._tagTreeCCContext* %context, %struct._tagTreeCCNode* %child.04) #2
  %4 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %child.04, i64 0, i32 3
  %child.0 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %4, align 8
  %5 = icmp eq %struct._tagTreeCCNode* %child.0, null
  br i1 %5, label %.preheader, label %.lr.ph6

.lr.ph:                                           ; preds = %.lr.ph.preheader, %.lr.ph
  %child.12 = phi %struct._tagTreeCCNode* [ %child.1, %.lr.ph ], [ %child.1.1.pre, %.lr.ph.preheader ]
  tail call fastcc void @Visit(%struct._tagTreeCCContext* %context, %struct._tagTreeCCNode* %child.12, void (%struct._tagTreeCCContext*, %struct._tagTreeCCNode*)* %visitor)
  %6 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %child.12, i64 0, i32 3
  %child.1 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %6, align 8
  %7 = icmp eq %struct._tagTreeCCNode* %child.1, null
  br i1 %7, label %._crit_edge.loopexit, label %.lr.ph

._crit_edge.loopexit:                             ; preds = %.lr.ph
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %0, %.preheader
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @HasAbstracts(%struct._tagTreeCCContext* %context, %struct._tagTreeCCNode* nocapture readonly %node, %struct._tagTreeCCNode* %actualNode) #0 {
  %1 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 0
  %2 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %1, align 8, !tbaa !38
  %3 = icmp eq %struct._tagTreeCCNode* %2, null
  br i1 %3, label %7, label %4

; <label>:4                                       ; preds = %0
  %5 = tail call fastcc i32 @HasAbstracts(%struct._tagTreeCCContext* %context, %struct._tagTreeCCNode* %2, %struct._tagTreeCCNode* %actualNode)
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %.critedge

; <label>:7                                       ; preds = %4, %0
  %8 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 11
  %virt.0.2 = load %struct._tagTreeCCVirtual*, %struct._tagTreeCCVirtual** %8, align 8
  %9 = icmp eq %struct._tagTreeCCVirtual* %virt.0.2, null
  br i1 %9, label %.critedge, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %7
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %.loopexit
  %virt.03 = phi %struct._tagTreeCCVirtual* [ %virt.0, %.loopexit ], [ %virt.0.2, %.lr.ph.preheader ]
  %10 = getelementptr inbounds %struct._tagTreeCCVirtual, %struct._tagTreeCCVirtual* %virt.03, i64 0, i32 0
  %11 = load i8*, i8** %10, align 8, !tbaa !39
  %12 = tail call %struct._tagTreeCCOperationCase* @TreeCCOperationFindCase(%struct._tagTreeCCContext* %context, %struct._tagTreeCCNode* %actualNode, i8* %11) #2
  %13 = icmp eq %struct._tagTreeCCOperationCase* %12, null
  br i1 %13, label %.preheader.preheader, label %.loopexit

.preheader.preheader:                             ; preds = %.lr.ph
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %15
  %actualNode.pn = phi %struct._tagTreeCCNode* [ %tempNode.0, %15 ], [ %actualNode, %.preheader.preheader ]
  %tempNode.0.in = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %actualNode.pn, i64 0, i32 0
  %tempNode.0 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %tempNode.0.in, align 8
  %14 = icmp eq %struct._tagTreeCCNode* %tempNode.0, null
  br i1 %14, label %.critedge.loopexit, label %15

; <label>:15                                      ; preds = %.preheader
  %16 = load i8*, i8** %10, align 8, !tbaa !39
  %17 = tail call %struct._tagTreeCCOperationCase* @TreeCCOperationFindCase(%struct._tagTreeCCContext* %context, %struct._tagTreeCCNode* %tempNode.0, i8* %16) #2
  %18 = icmp eq %struct._tagTreeCCOperationCase* %17, null
  br i1 %18, label %.preheader, label %.loopexit.loopexit

.loopexit.loopexit:                               ; preds = %15
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %.lr.ph
  %19 = getelementptr inbounds %struct._tagTreeCCVirtual, %struct._tagTreeCCVirtual* %virt.03, i64 0, i32 4
  %virt.0 = load %struct._tagTreeCCVirtual*, %struct._tagTreeCCVirtual** %19, align 8
  %20 = icmp eq %struct._tagTreeCCVirtual* %virt.0, null
  br i1 %20, label %.critedge.loopexit6, label %.lr.ph

.critedge.loopexit:                               ; preds = %.preheader
  br label %.critedge

.critedge.loopexit6:                              ; preds = %.loopexit
  br label %.critedge

.critedge:                                        ; preds = %.critedge.loopexit6, %.critedge.loopexit, %7, %4
  %.0 = phi i32 [ 1, %4 ], [ 0, %7 ], [ 1, %.critedge.loopexit ], [ 0, %.critedge.loopexit6 ]
  ret i32 %.0
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @AssignPositions(%struct._tagTreeCCNode* nocapture %node, i32 %posn) #0 {
  %1 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 1
  %child.0.1 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %1, align 8
  %2 = icmp eq %struct._tagTreeCCNode* %child.0.1, null
  br i1 %2, label %._crit_edge, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %0
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %.lr.ph
  %child.03 = phi %struct._tagTreeCCNode* [ %child.0, %.lr.ph ], [ %child.0.1, %.lr.ph.preheader ]
  %.02 = phi i32 [ %3, %.lr.ph ], [ %posn, %.lr.ph.preheader ]
  %3 = tail call fastcc i32 @AssignPositions(%struct._tagTreeCCNode* %child.03, i32 %.02)
  %4 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %child.03, i64 0, i32 3
  %child.0 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %4, align 8
  %5 = icmp eq %struct._tagTreeCCNode* %child.0, null
  br i1 %5, label %._crit_edge.loopexit, label %.lr.ph

._crit_edge.loopexit:                             ; preds = %.lr.ph
  %.lcssa = phi i32 [ %3, %.lr.ph ]
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %0
  %.0.lcssa = phi i32 [ %posn, %0 ], [ %.lcssa, %._crit_edge.loopexit ]
  %6 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 7
  store i32 %.0.lcssa, i32* %6, align 4, !tbaa !94
  %7 = add nsw i32 %.0.lcssa, 1
  ret i32 %7
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @IsDeclaredInChildren(%struct._tagTreeCCContext* nocapture readonly %context, %struct._tagTreeCCNode* nocapture readonly %node, i8* %name) #0 {
  %1 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 1
  %child.0.3 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %1, align 8
  %2 = icmp eq %struct._tagTreeCCNode* %child.0.3, null
  br i1 %2, label %.loopexit1, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %0
  br label %.lr.ph

; <label>:3                                       ; preds = %.loopexit
  %4 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %child.04, i64 0, i32 3
  %child.0 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %4, align 8
  %5 = icmp eq %struct._tagTreeCCNode* %child.0, null
  br i1 %5, label %.loopexit1.loopexit, label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %3
  %child.04 = phi %struct._tagTreeCCNode* [ %child.0, %3 ], [ %child.0.3, %.lr.ph.preheader ]
  %6 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %child.04, i64 0, i32 10
  %field.0.2.i = load %struct._tagTreeCCField*, %struct._tagTreeCCField** %6, align 8
  %7 = icmp eq %struct._tagTreeCCField* %field.0.2.i, null
  br i1 %7, label %.loopexit, label %.lr.ph.i.preheader

.lr.ph.i.preheader:                               ; preds = %.lr.ph
  br label %.lr.ph.i

.lr.ph.i:                                         ; preds = %.lr.ph.i.preheader, %12
  %field.03.i = phi %struct._tagTreeCCField* [ %field.0.i, %12 ], [ %field.0.2.i, %.lr.ph.i.preheader ]
  %8 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.03.i, i64 0, i32 0
  %9 = load i8*, i8** %8, align 8, !tbaa !64
  %10 = tail call i32 @strcmp(i8* %9, i8* %name) #2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %IsDeclared.exit, label %12

; <label>:12                                      ; preds = %.lr.ph.i
  %13 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.03.i, i64 0, i32 6
  %field.0.i = load %struct._tagTreeCCField*, %struct._tagTreeCCField** %13, align 8
  %14 = icmp eq %struct._tagTreeCCField* %field.0.i, null
  br i1 %14, label %.loopexit.loopexit, label %.lr.ph.i

IsDeclared.exit:                                  ; preds = %.lr.ph.i
  %field.03.i.lcssa = phi %struct._tagTreeCCField* [ %field.03.i, %.lr.ph.i ]
  %15 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 2
  %16 = load %struct.TreeCCInput*, %struct.TreeCCInput** %15, align 8, !tbaa !1
  %17 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.03.i.lcssa, i64 0, i32 4
  %18 = load i8*, i8** %17, align 8, !tbaa !116
  %19 = getelementptr inbounds %struct._tagTreeCCField, %struct._tagTreeCCField* %field.03.i.lcssa, i64 0, i32 5
  %20 = load i64, i64* %19, align 8, !tbaa !117
  tail call void (%struct.TreeCCInput*, i8*, i64, i8*, ...) @TreeCCErrorOnLine(%struct.TreeCCInput* %16, i8* %18, i64 %20, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.11.761, i64 0, i64 0), i8* %name) #2
  %21 = load %struct.TreeCCInput*, %struct.TreeCCInput** %15, align 8, !tbaa !1
  tail call void (%struct.TreeCCInput*, i8*, ...) @TreeCCError(%struct.TreeCCInput* %21, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3.753, i64 0, i64 0)) #2
  br label %.loopexit1

.loopexit.loopexit:                               ; preds = %12
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %.lr.ph
  %22 = tail call fastcc i32 @IsDeclaredInChildren(%struct._tagTreeCCContext* %context, %struct._tagTreeCCNode* %child.04, i8* %name)
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %3, label %.loopexit1.loopexit

.loopexit1.loopexit:                              ; preds = %3, %.loopexit
  %.0.ph = phi i32 [ 0, %3 ], [ 1, %.loopexit ]
  br label %.loopexit1

.loopexit1:                                       ; preds = %.loopexit1.loopexit, %0, %IsDeclared.exit
  %.0 = phi i32 [ 1, %IsDeclared.exit ], [ 0, %0 ], [ %.0.ph, %.loopexit1.loopexit ]
  ret i32 %.0
}

; Function Attrs: nounwind uwtable
define void @TreeCCOperationFree(%struct._tagTreeCCOperation* nocapture %oper) #0 {
  %1 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %oper, i64 0, i32 0
  %2 = load i8*, i8** %1, align 8, !tbaa !46
  tail call void @free(i8* %2) #2
  %3 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %oper, i64 0, i32 1
  %4 = load i8*, i8** %3, align 8, !tbaa !60
  %5 = icmp eq i8* %4, null
  br i1 %5, label %7, label %6

; <label>:6                                       ; preds = %0
  tail call void @free(i8* %4) #2
  br label %7

; <label>:7                                       ; preds = %0, %6
  %8 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %oper, i64 0, i32 2
  %9 = load i8*, i8** %8, align 8, !tbaa !45
  tail call void @free(i8* %9) #2
  %10 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %oper, i64 0, i32 4
  %11 = load %struct._tagTreeCCParam*, %struct._tagTreeCCParam** %10, align 8, !tbaa !68
  %12 = icmp eq %struct._tagTreeCCParam* %11, null
  br i1 %12, label %._crit_edge.9, label %.lr.ph8.preheader

.lr.ph8.preheader:                                ; preds = %7
  br label %.lr.ph8

.lr.ph8:                                          ; preds = %.lr.ph8.preheader, %19
  %param.06 = phi %struct._tagTreeCCParam* [ %14, %19 ], [ %11, %.lr.ph8.preheader ]
  %13 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.06, i64 0, i32 4
  %14 = load %struct._tagTreeCCParam*, %struct._tagTreeCCParam** %13, align 8, !tbaa !82
  %15 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.06, i64 0, i32 0
  %16 = load i8*, i8** %15, align 8, !tbaa !41
  %17 = icmp eq i8* %16, null
  br i1 %17, label %19, label %18

; <label>:18                                      ; preds = %.lr.ph8
  tail call void @free(i8* %16) #2
  br label %19

; <label>:19                                      ; preds = %.lr.ph8, %18
  %20 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.06, i64 0, i32 1
  %21 = load i8*, i8** %20, align 8, !tbaa !47
  tail call void @free(i8* %21) #2
  %22 = icmp eq %struct._tagTreeCCParam* %14, null
  br i1 %22, label %._crit_edge.9.loopexit, label %.lr.ph8

._crit_edge.9.loopexit:                           ; preds = %19
  br label %._crit_edge.9

._crit_edge.9:                                    ; preds = %._crit_edge.9.loopexit, %7
  %23 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %oper, i64 0, i32 10
  %24 = load %struct._tagTreeCCOperationCase*, %struct._tagTreeCCOperationCase** %23, align 8, !tbaa !80
  %25 = icmp eq %struct._tagTreeCCOperationCase* %24, null
  br i1 %25, label %._crit_edge.5, label %.lr.ph4.preheader

.lr.ph4.preheader:                                ; preds = %._crit_edge.9
  br label %.lr.ph4

.lr.ph4:                                          ; preds = %.lr.ph4.preheader, %._crit_edge
  %operCase.02 = phi %struct._tagTreeCCOperationCase* [ %27, %._crit_edge ], [ %24, %.lr.ph4.preheader ]
  %26 = getelementptr inbounds %struct._tagTreeCCOperationCase, %struct._tagTreeCCOperationCase* %operCase.02, i64 0, i32 8
  %27 = load %struct._tagTreeCCOperationCase*, %struct._tagTreeCCOperationCase** %26, align 8, !tbaa !88
  %28 = getelementptr inbounds %struct._tagTreeCCOperationCase, %struct._tagTreeCCOperationCase* %operCase.02, i64 0, i32 1
  %29 = load i8*, i8** %28, align 8, !tbaa !58
  %30 = icmp eq i8* %29, null
  br i1 %30, label %36, label %31

; <label>:31                                      ; preds = %.lr.ph4
  %32 = getelementptr inbounds %struct._tagTreeCCOperationCase, %struct._tagTreeCCOperationCase* %operCase.02, i64 0, i32 9
  %33 = load %struct._tagTreeCCOperationCase*, %struct._tagTreeCCOperationCase** %32, align 8, !tbaa !120
  %34 = icmp eq %struct._tagTreeCCOperationCase* %33, null
  br i1 %34, label %35, label %36

; <label>:35                                      ; preds = %31
  tail call void @free(i8* %29) #2
  br label %36

; <label>:36                                      ; preds = %31, %.lr.ph4, %35
  %37 = getelementptr inbounds %struct._tagTreeCCOperationCase, %struct._tagTreeCCOperationCase* %operCase.02, i64 0, i32 0
  %38 = load %struct._tagTreeCCTrigger*, %struct._tagTreeCCTrigger** %37, align 8, !tbaa !51
  %39 = icmp eq %struct._tagTreeCCTrigger* %38, null
  br i1 %39, label %._crit_edge, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %36
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %.lr.ph
  %trigger.01 = phi %struct._tagTreeCCTrigger* [ %41, %.lr.ph ], [ %38, %.lr.ph.preheader ]
  %40 = getelementptr inbounds %struct._tagTreeCCTrigger, %struct._tagTreeCCTrigger* %trigger.01, i64 0, i32 1
  %41 = load %struct._tagTreeCCTrigger*, %struct._tagTreeCCTrigger** %40, align 8, !tbaa !55
  %42 = bitcast %struct._tagTreeCCTrigger* %trigger.01 to i8*
  tail call void @free(i8* %42) #2
  %43 = icmp eq %struct._tagTreeCCTrigger* %41, null
  br i1 %43, label %._crit_edge.loopexit, label %.lr.ph

._crit_edge.loopexit:                             ; preds = %.lr.ph
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %36
  %44 = bitcast %struct._tagTreeCCOperationCase* %operCase.02 to i8*
  tail call void @free(i8* %44) #2
  %45 = icmp eq %struct._tagTreeCCOperationCase* %27, null
  br i1 %45, label %._crit_edge.5.loopexit, label %.lr.ph4

._crit_edge.5.loopexit:                           ; preds = %._crit_edge
  br label %._crit_edge.5

._crit_edge.5:                                    ; preds = %._crit_edge.5.loopexit, %._crit_edge.9
  %46 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %oper, i64 0, i32 12
  %47 = load %struct._tagTreeCCOperationCase**, %struct._tagTreeCCOperationCase*** %46, align 8, !tbaa !77
  %48 = icmp eq %struct._tagTreeCCOperationCase** %47, null
  br i1 %48, label %51, label %49

; <label>:49                                      ; preds = %._crit_edge.5
  %50 = bitcast %struct._tagTreeCCOperationCase** %47 to i8*
  tail call void @free(i8* %50) #2
  br label %51

; <label>:51                                      ; preds = %._crit_edge.5, %49
  %52 = bitcast %struct._tagTreeCCOperation* %oper to i8*
  tail call void @free(i8* %52) #2
  ret void
}

; Function Attrs: nounwind uwtable
define %struct._tagTreeCCOperation* @TreeCCOperationCreate(%struct._tagTreeCCContext* nocapture %context, i8* %returnType, i8* %name, i8* %className, i8* %defValue, %struct._tagTreeCCParam* %params, i32 %flags, i32 %numTriggers, i8* %filename, i64 %linenum) #0 {
  %1 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 8
  %2 = load i16, i16* %1, align 8
  %.mask = and i16 %2, 1
  %3 = icmp eq i16 %.mask, 0
  br i1 %3, label %.loopexit, label %4

; <label>:4                                       ; preds = %0
  %5 = icmp ne i8* %className, null
  %6 = select i1 %5, i8* %className, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1.770, i64 0, i64 0)
  %7 = select i1 %5, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2.771, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1.770, i64 0, i64 0)
  tail call void (i64, i8*, ...) @TreeCCDebug(i64 %linenum, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.772, i64 0, i64 0), i8* %returnType, i8* %6, i8* %7, i8* %name, i32 %flags) #2
  %8 = icmp eq %struct._tagTreeCCParam* %params, null
  br i1 %8, label %.loopexit, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %4
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %.lr.ph
  %param.01 = phi %struct._tagTreeCCParam* [ %17, %.lr.ph ], [ %params, %.lr.ph.preheader ]
  %9 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.01, i64 0, i32 1
  %10 = load i8*, i8** %9, align 8, !tbaa !47
  %11 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.01, i64 0, i32 0
  %12 = load i8*, i8** %11, align 8, !tbaa !41
  %13 = icmp eq i8* %12, null
  %. = select i1 %13, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.4.773, i64 0, i64 0), i8* %12
  %14 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.01, i64 0, i32 2
  %15 = load i32, i32* %14, align 4, !tbaa !52
  tail call void (i64, i8*, ...) @TreeCCDebug(i64 %linenum, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3.774, i64 0, i64 0), i8* %10, i8* %., i32 %15) #2
  %16 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.01, i64 0, i32 4
  %17 = load %struct._tagTreeCCParam*, %struct._tagTreeCCParam** %16, align 8, !tbaa !82
  %18 = icmp eq %struct._tagTreeCCParam* %17, null
  br i1 %18, label %.loopexit.loopexit, label %.lr.ph

.loopexit.loopexit:                               ; preds = %.lr.ph
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %4, %0
  %19 = tail call noalias i8* @malloc(i64 120) #2
  %20 = bitcast i8* %19 to %struct._tagTreeCCOperation*
  %21 = icmp eq i8* %19, null
  br i1 %21, label %22, label %25

; <label>:22                                      ; preds = %.loopexit
  %23 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 2
  %24 = load %struct.TreeCCInput*, %struct.TreeCCInput** %23, align 8, !tbaa !1
  tail call void @TreeCCOutOfMemory(%struct.TreeCCInput* %24) #2
  br label %25

; <label>:25                                      ; preds = %22, %.loopexit
  %26 = bitcast i8* %19 to i8**
  store i8* %name, i8** %26, align 8, !tbaa !46
  %27 = getelementptr inbounds i8, i8* %19, i64 8
  %28 = bitcast i8* %27 to i8**
  store i8* %className, i8** %28, align 8, !tbaa !60
  %29 = getelementptr inbounds i8, i8* %19, i64 16
  %30 = bitcast i8* %29 to i8**
  store i8* %returnType, i8** %30, align 8, !tbaa !45
  %31 = getelementptr inbounds i8, i8* %19, i64 24
  %32 = bitcast i8* %31 to i8**
  store i8* %defValue, i8** %32, align 8, !tbaa !59
  %33 = getelementptr inbounds i8, i8* %19, i64 32
  %34 = bitcast i8* %33 to %struct._tagTreeCCParam**
  store %struct._tagTreeCCParam* %params, %struct._tagTreeCCParam** %34, align 8, !tbaa !68
  %35 = getelementptr inbounds i8, i8* %19, i64 40
  %36 = bitcast i8* %35 to i32*
  store i32 %flags, i32* %36, align 4, !tbaa !44
  %37 = getelementptr inbounds i8, i8* %19, i64 44
  %38 = bitcast i8* %37 to i32*
  store i32 %numTriggers, i32* %38, align 4, !tbaa !76
  %39 = getelementptr inbounds i8, i8* %19, i64 48
  %40 = bitcast i8* %39 to i8**
  store i8* %filename, i8** %40, align 8, !tbaa !121
  %41 = getelementptr inbounds i8, i8* %19, i64 56
  %42 = bitcast i8* %41 to i64*
  store i64 %linenum, i64* %42, align 8, !tbaa !118
  %43 = getelementptr inbounds i8, i8* %19, i64 72
  %44 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 4
  call void @llvm.memset.p0i8.i64(i8* %43, i8 0, i64 28, i32 8, i1 false)
  %45 = getelementptr inbounds i8, i8* %19, i64 104
  %46 = bitcast %struct._tagTreeCCStream** %44 to <2 x i64>*
  %47 = load <2 x i64>, <2 x i64>* %46, align 8, !tbaa !7
  %48 = bitcast i8* %45 to <2 x i64>*
  store <2 x i64> %47, <2 x i64>* %48, align 8, !tbaa !7
  %49 = tail call i32 @TreeCCHashString(i8* %name) #2
  %50 = and i32 %49, 511
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 1, i64 %51
  %53 = bitcast %struct._tagTreeCCOperation** %52 to i64*
  %54 = load i64, i64* %53, align 8, !tbaa !7
  %55 = getelementptr inbounds i8, i8* %19, i64 64
  %56 = bitcast i8* %55 to i64*
  store i64 %54, i64* %56, align 8, !tbaa !19
  %57 = bitcast %struct._tagTreeCCOperation** %52 to i8**
  store i8* %19, i8** %57, align 8, !tbaa !7
  ret %struct._tagTreeCCOperation* %20
}

; Function Attrs: nounwind uwtable
define %struct._tagTreeCCOperation* @TreeCCOperationFind(%struct._tagTreeCCContext* nocapture readonly %context, i8* %name) #0 {
  %1 = tail call i32 @TreeCCHashString(i8* %name) #2
  %2 = and i32 %1, 511
  %3 = zext i32 %2 to i64
  %4 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 1, i64 %3
  %oper.0.1 = load %struct._tagTreeCCOperation*, %struct._tagTreeCCOperation** %4, align 8
  %5 = icmp eq %struct._tagTreeCCOperation* %oper.0.1, null
  br i1 %5, label %._crit_edge, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %0
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %10
  %oper.02 = phi %struct._tagTreeCCOperation* [ %oper.0, %10 ], [ %oper.0.1, %.lr.ph.preheader ]
  %6 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %oper.02, i64 0, i32 0
  %7 = load i8*, i8** %6, align 8, !tbaa !46
  %8 = tail call i32 @strcmp(i8* %7, i8* %name) #2
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %._crit_edge.loopexit, label %10

; <label>:10                                      ; preds = %.lr.ph
  %11 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %oper.02, i64 0, i32 9
  %oper.0 = load %struct._tagTreeCCOperation*, %struct._tagTreeCCOperation** %11, align 8
  %12 = icmp eq %struct._tagTreeCCOperation* %oper.0, null
  br i1 %12, label %._crit_edge.loopexit, label %.lr.ph

._crit_edge.loopexit:                             ; preds = %10, %.lr.ph
  %.0.ph = phi %struct._tagTreeCCOperation* [ %oper.02, %.lr.ph ], [ null, %10 ]
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %0
  %.0 = phi %struct._tagTreeCCOperation* [ null, %0 ], [ %.0.ph, %._crit_edge.loopexit ]
  ret %struct._tagTreeCCOperation* %.0
}

; Function Attrs: nounwind uwtable
define %struct._tagTreeCCOperationCase* @TreeCCOperationAddCase(%struct._tagTreeCCContext* nocapture readonly %context, %struct._tagTreeCCOperation* %oper, %struct._tagTreeCCTrigger* %triggers, i8* %filename, i64 %linenum) #0 {
  %1 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 8
  %2 = load i16, i16* %1, align 8
  %.mask = and i16 %2, 1
  %3 = icmp eq i16 %.mask, 0
  br i1 %3, label %14, label %4

; <label>:4                                       ; preds = %0
  %5 = icmp eq %struct._tagTreeCCTrigger* %triggers, null
  %6 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %oper, i64 0, i32 0
  %7 = load i8*, i8** %6, align 8
  br i1 %5, label %8, label %9

; <label>:8                                       ; preds = %4
  tail call void (i64, i8*, ...) @TreeCCDebug(i64 %linenum, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.5.775, i64 0, i64 0), i8* %7) #2
  br label %14

; <label>:9                                       ; preds = %4
  %10 = getelementptr inbounds %struct._tagTreeCCTrigger, %struct._tagTreeCCTrigger* %triggers, i64 0, i32 0
  %11 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %10, align 8, !tbaa !53
  %12 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %11, i64 0, i32 4
  %13 = load i8*, i8** %12, align 8, !tbaa !36
  tail call void (i64, i8*, ...) @TreeCCDebug(i64 %linenum, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6.776, i64 0, i64 0), i8* %13, i8* %7) #2
  br label %14

; <label>:14                                      ; preds = %0, %8, %9
  %15 = tail call noalias i8* @malloc(i64 80) #2
  %16 = bitcast i8* %15 to %struct._tagTreeCCOperationCase*
  %17 = icmp eq i8* %15, null
  br i1 %17, label %18, label %21

; <label>:18                                      ; preds = %14
  %19 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 2
  %20 = load %struct.TreeCCInput*, %struct.TreeCCInput** %19, align 8, !tbaa !1
  tail call void @TreeCCOutOfMemory(%struct.TreeCCInput* %20) #2
  br label %21

; <label>:21                                      ; preds = %18, %14
  %22 = bitcast i8* %15 to %struct._tagTreeCCTrigger**
  store %struct._tagTreeCCTrigger* %triggers, %struct._tagTreeCCTrigger** %22, align 8, !tbaa !51
  %23 = getelementptr inbounds i8, i8* %15, i64 8
  %24 = bitcast i8* %23 to i8**
  store i8* null, i8** %24, align 8, !tbaa !58
  %25 = getelementptr inbounds i8, i8* %15, i64 16
  %26 = bitcast i8* %25 to %struct._tagTreeCCOperation**
  store %struct._tagTreeCCOperation* %oper, %struct._tagTreeCCOperation** %26, align 8, !tbaa !49
  %27 = getelementptr inbounds i8, i8* %15, i64 24
  %28 = bitcast i8* %27 to i32*
  store i32 0, i32* %28, align 4, !tbaa !75
  %29 = getelementptr inbounds i8, i8* %15, i64 32
  %30 = bitcast i8* %29 to i8**
  store i8* %filename, i8** %30, align 8, !tbaa !89
  %31 = getelementptr inbounds i8, i8* %15, i64 40
  %32 = bitcast i8* %31 to i64*
  store i64 %linenum, i64* %32, align 8, !tbaa !90
  %33 = getelementptr inbounds i8, i8* %15, i64 48
  %34 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %oper, i64 0, i32 11
  call void @llvm.memset.p0i8.i64(i8* %33, i8 0, i64 32, i32 8, i1 false)
  %35 = load %struct._tagTreeCCOperationCase*, %struct._tagTreeCCOperationCase** %34, align 8, !tbaa !122
  %36 = icmp eq %struct._tagTreeCCOperationCase* %35, null
  br i1 %36, label %40, label %37

; <label>:37                                      ; preds = %21
  %38 = getelementptr inbounds %struct._tagTreeCCOperationCase, %struct._tagTreeCCOperationCase* %35, i64 0, i32 8
  %39 = bitcast %struct._tagTreeCCOperationCase** %38 to i8**
  store i8* %15, i8** %39, align 8, !tbaa !88
  br label %43

; <label>:40                                      ; preds = %21
  %41 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %oper, i64 0, i32 10
  %42 = bitcast %struct._tagTreeCCOperationCase** %41 to i8**
  store i8* %15, i8** %42, align 8, !tbaa !80
  br label %43

; <label>:43                                      ; preds = %40, %37
  %44 = bitcast %struct._tagTreeCCOperationCase** %34 to i8**
  store i8* %15, i8** %44, align 8, !tbaa !122
  %45 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %oper, i64 0, i32 13
  %46 = load i32, i32* %45, align 4, !tbaa !123
  %47 = add nsw i32 %46, 1
  store i32 %47, i32* %45, align 4, !tbaa !123
  ret %struct._tagTreeCCOperationCase* %16
}

; Function Attrs: nounwind uwtable
define void @TreeCCOperationValidate(%struct._tagTreeCCContext* %context) #0 {
  %1 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 2
  br label %2

; <label>:2                                       ; preds = %._crit_edge, %0
  %indvars.iv = phi i64 [ 0, %0 ], [ %indvars.iv.next, %._crit_edge ]
  %3 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 1, i64 %indvars.iv
  %oper.0.6 = load %struct._tagTreeCCOperation*, %struct._tagTreeCCOperation** %3, align 8
  %4 = icmp eq %struct._tagTreeCCOperation* %oper.0.6, null
  br i1 %4, label %._crit_edge, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %2
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %OperationTest.exit
  %oper.07 = phi %struct._tagTreeCCOperation* [ %oper.0, %OperationTest.exit ], [ %oper.0.6, %.lr.ph.preheader ]
  %5 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %oper.07, i64 0, i32 5
  %6 = load i32, i32* %5, align 4, !tbaa !44
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %SortCases.exit

; <label>:9                                       ; preds = %.lr.ph
  %10 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %oper.07, i64 0, i32 13
  %11 = load i32, i32* %10, align 4, !tbaa !123
  %12 = icmp slt i32 %11, 2
  br i1 %12, label %SortCases.exit, label %13

; <label>:13                                      ; preds = %9
  %14 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %oper.07, i64 0, i32 6
  %15 = load i32, i32* %14, align 4, !tbaa !76
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %SortCases.exit, label %17

; <label>:17                                      ; preds = %13
  tail call void @TreeCCNodeClearMarking(%struct._tagTreeCCContext* %context, i32 65280) #2
  %18 = load i32, i32* %10, align 4, !tbaa !123
  %19 = sext i32 %18 to i64
  %20 = shl nsw i64 %19, 3
  %21 = tail call noalias i8* @malloc(i64 %20) #2
  %22 = bitcast i8* %21 to %struct._tagTreeCCOperationCase**
  %23 = icmp eq i8* %21, null
  br i1 %23, label %24, label %26

; <label>:24                                      ; preds = %17
  %25 = load %struct.TreeCCInput*, %struct.TreeCCInput** %1, align 8, !tbaa !1
  tail call void @TreeCCOutOfMemory(%struct.TreeCCInput* %25) #2
  br label %26

; <label>:26                                      ; preds = %24, %17
  %27 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %oper.07, i64 0, i32 10
  %operCase.0.2.i = load %struct._tagTreeCCOperationCase*, %struct._tagTreeCCOperationCase** %27, align 8
  %28 = icmp eq %struct._tagTreeCCOperationCase* %operCase.0.2.i, null
  br i1 %28, label %._crit_edge.7.i, label %.lr.ph6.i.preheader

.lr.ph6.i.preheader:                              ; preds = %26
  br label %.lr.ph6.i

.lr.ph6.i:                                        ; preds = %.lr.ph6.i.preheader, %.lr.ph6.i
  %indvars.iv8.i = phi i64 [ %indvars.iv.next9.i, %.lr.ph6.i ], [ 0, %.lr.ph6.i.preheader ]
  %operCase.04.i = phi %struct._tagTreeCCOperationCase* [ %operCase.0.i, %.lr.ph6.i ], [ %operCase.0.2.i, %.lr.ph6.i.preheader ]
  %indvars.iv.next9.i = add nuw nsw i64 %indvars.iv8.i, 1
  %29 = getelementptr inbounds %struct._tagTreeCCOperationCase*, %struct._tagTreeCCOperationCase** %22, i64 %indvars.iv8.i
  store %struct._tagTreeCCOperationCase* %operCase.04.i, %struct._tagTreeCCOperationCase** %29, align 8, !tbaa !7
  %30 = getelementptr inbounds %struct._tagTreeCCOperationCase, %struct._tagTreeCCOperationCase* %operCase.04.i, i64 0, i32 8
  %operCase.0.i = load %struct._tagTreeCCOperationCase*, %struct._tagTreeCCOperationCase** %30, align 8
  %31 = icmp eq %struct._tagTreeCCOperationCase* %operCase.0.i, null
  br i1 %31, label %._crit_edge.7.i.loopexit, label %.lr.ph6.i

._crit_edge.7.i.loopexit:                         ; preds = %.lr.ph6.i
  br label %._crit_edge.7.i

._crit_edge.7.i:                                  ; preds = %._crit_edge.7.i.loopexit, %26
  %32 = load i32, i32* %10, align 4, !tbaa !123
  %33 = sext i32 %32 to i64
  tail call void @qsort(i8* %21, i64 %33, i64 8, i32 (i8*, i8*)* nonnull @CaseCompare) #2
  %34 = bitcast i8* %21 to i64*
  %35 = load i64, i64* %34, align 8, !tbaa !7
  %36 = bitcast %struct._tagTreeCCOperationCase** %27 to i64*
  store i64 %35, i64* %36, align 8, !tbaa !80
  %37 = load i32, i32* %10, align 4, !tbaa !123
  %38 = icmp sgt i32 %37, 1
  br i1 %38, label %.lr.ph.i, label %._crit_edge.i

.lr.ph.i:                                         ; preds = %._crit_edge.7.i
  %39 = inttoptr i64 %35 to %struct._tagTreeCCOperationCase*
  %40 = getelementptr inbounds i8, i8* %21, i64 8
  %41 = bitcast i8* %40 to i64*
  %42 = load i64, i64* %41, align 8, !tbaa !7
  %43 = getelementptr inbounds %struct._tagTreeCCOperationCase, %struct._tagTreeCCOperationCase* %39, i64 0, i32 8
  %44 = bitcast %struct._tagTreeCCOperationCase** %43 to i64*
  store i64 %42, i64* %44, align 8, !tbaa !88
  %45 = icmp sgt i32 %37, 2
  br i1 %45, label %._crit_edge.10.i.lr.ph, label %._crit_edge.i

._crit_edge.10.i.lr.ph:                           ; preds = %.lr.ph.i
  %46 = bitcast i8* %40 to %struct._tagTreeCCOperationCase**
  %47 = sext i32 %37 to i64
  %48 = sext i32 %37 to i64
  %49 = add nsw i64 %48, 2
  %50 = add nsw i64 %48, -3
  %xtraiter = and i64 %49, 3
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod, label %._crit_edge.10.i.lr.ph.split, label %._crit_edge.10.i.prol.preheader

._crit_edge.10.i.prol.preheader:                  ; preds = %._crit_edge.10.i.lr.ph
  br label %._crit_edge.10.i.prol

._crit_edge.10.i.prol:                            ; preds = %._crit_edge.10.i.prol, %._crit_edge.10.i.prol.preheader
  %indvars.iv.next.i5.prol = phi i64 [ %indvars.iv.next.i.prol, %._crit_edge.10.i.prol ], [ 2, %._crit_edge.10.i.prol.preheader ]
  %51 = phi %struct._tagTreeCCOperationCase** [ %52, %._crit_edge.10.i.prol ], [ %46, %._crit_edge.10.i.prol.preheader ]
  %prol.iter = phi i64 [ %prol.iter.sub, %._crit_edge.10.i.prol ], [ %xtraiter, %._crit_edge.10.i.prol.preheader ]
  %.pre.i.prol = load %struct._tagTreeCCOperationCase*, %struct._tagTreeCCOperationCase** %51, align 8, !tbaa !7
  %52 = getelementptr inbounds %struct._tagTreeCCOperationCase*, %struct._tagTreeCCOperationCase** %22, i64 %indvars.iv.next.i5.prol
  %53 = bitcast %struct._tagTreeCCOperationCase** %52 to i64*
  %54 = load i64, i64* %53, align 8, !tbaa !7
  %55 = getelementptr inbounds %struct._tagTreeCCOperationCase, %struct._tagTreeCCOperationCase* %.pre.i.prol, i64 0, i32 8
  %56 = bitcast %struct._tagTreeCCOperationCase** %55 to i64*
  store i64 %54, i64* %56, align 8, !tbaa !88
  %indvars.iv.next.i.prol = add nuw nsw i64 %indvars.iv.next.i5.prol, 1
  %prol.iter.sub = add i64 %prol.iter, -1
  %prol.iter.cmp = icmp eq i64 %prol.iter.sub, 0
  br i1 %prol.iter.cmp, label %._crit_edge.10.i.lr.ph.split.loopexit, label %._crit_edge.10.i.prol, !llvm.loop !124

._crit_edge.10.i.lr.ph.split.loopexit:            ; preds = %._crit_edge.10.i.prol
  %indvars.iv.next.i.prol.lcssa = phi i64 [ %indvars.iv.next.i.prol, %._crit_edge.10.i.prol ]
  %.lcssa = phi %struct._tagTreeCCOperationCase** [ %52, %._crit_edge.10.i.prol ]
  br label %._crit_edge.10.i.lr.ph.split

._crit_edge.10.i.lr.ph.split:                     ; preds = %._crit_edge.10.i.lr.ph, %._crit_edge.10.i.lr.ph.split.loopexit
  %indvars.iv.next.i5.unr = phi i64 [ 2, %._crit_edge.10.i.lr.ph ], [ %indvars.iv.next.i.prol.lcssa, %._crit_edge.10.i.lr.ph.split.loopexit ]
  %.unr = phi %struct._tagTreeCCOperationCase** [ %46, %._crit_edge.10.i.lr.ph ], [ %.lcssa, %._crit_edge.10.i.lr.ph.split.loopexit ]
  %57 = icmp ult i64 %50, 3
  br i1 %57, label %._crit_edge.i.loopexit, label %._crit_edge.10.i.lr.ph.split.split

._crit_edge.10.i.lr.ph.split.split:               ; preds = %._crit_edge.10.i.lr.ph.split
  br label %._crit_edge.10.i

._crit_edge.10.i:                                 ; preds = %._crit_edge.10.i, %._crit_edge.10.i.lr.ph.split.split
  %indvars.iv.next.i5 = phi i64 [ %indvars.iv.next.i5.unr, %._crit_edge.10.i.lr.ph.split.split ], [ %indvars.iv.next.i.3, %._crit_edge.10.i ]
  %58 = phi %struct._tagTreeCCOperationCase** [ %.unr, %._crit_edge.10.i.lr.ph.split.split ], [ %74, %._crit_edge.10.i ]
  %.pre.i = load %struct._tagTreeCCOperationCase*, %struct._tagTreeCCOperationCase** %58, align 8, !tbaa !7
  %59 = getelementptr inbounds %struct._tagTreeCCOperationCase*, %struct._tagTreeCCOperationCase** %22, i64 %indvars.iv.next.i5
  %60 = bitcast %struct._tagTreeCCOperationCase** %59 to i64*
  %61 = load i64, i64* %60, align 8, !tbaa !7
  %62 = getelementptr inbounds %struct._tagTreeCCOperationCase, %struct._tagTreeCCOperationCase* %.pre.i, i64 0, i32 8
  %63 = bitcast %struct._tagTreeCCOperationCase** %62 to i64*
  store i64 %61, i64* %63, align 8, !tbaa !88
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.next.i5, 1
  %.pre.i.1 = load %struct._tagTreeCCOperationCase*, %struct._tagTreeCCOperationCase** %59, align 8, !tbaa !7
  %64 = getelementptr inbounds %struct._tagTreeCCOperationCase*, %struct._tagTreeCCOperationCase** %22, i64 %indvars.iv.next.i
  %65 = bitcast %struct._tagTreeCCOperationCase** %64 to i64*
  %66 = load i64, i64* %65, align 8, !tbaa !7
  %67 = getelementptr inbounds %struct._tagTreeCCOperationCase, %struct._tagTreeCCOperationCase* %.pre.i.1, i64 0, i32 8
  %68 = bitcast %struct._tagTreeCCOperationCase** %67 to i64*
  store i64 %66, i64* %68, align 8, !tbaa !88
  %indvars.iv.next.i.1 = add nsw i64 %indvars.iv.next.i5, 2
  %.pre.i.2 = load %struct._tagTreeCCOperationCase*, %struct._tagTreeCCOperationCase** %64, align 8, !tbaa !7
  %69 = getelementptr inbounds %struct._tagTreeCCOperationCase*, %struct._tagTreeCCOperationCase** %22, i64 %indvars.iv.next.i.1
  %70 = bitcast %struct._tagTreeCCOperationCase** %69 to i64*
  %71 = load i64, i64* %70, align 8, !tbaa !7
  %72 = getelementptr inbounds %struct._tagTreeCCOperationCase, %struct._tagTreeCCOperationCase* %.pre.i.2, i64 0, i32 8
  %73 = bitcast %struct._tagTreeCCOperationCase** %72 to i64*
  store i64 %71, i64* %73, align 8, !tbaa !88
  %indvars.iv.next.i.2 = add nsw i64 %indvars.iv.next.i5, 3
  %.pre.i.3 = load %struct._tagTreeCCOperationCase*, %struct._tagTreeCCOperationCase** %69, align 8, !tbaa !7
  %74 = getelementptr inbounds %struct._tagTreeCCOperationCase*, %struct._tagTreeCCOperationCase** %22, i64 %indvars.iv.next.i.2
  %75 = bitcast %struct._tagTreeCCOperationCase** %74 to i64*
  %76 = load i64, i64* %75, align 8, !tbaa !7
  %77 = getelementptr inbounds %struct._tagTreeCCOperationCase, %struct._tagTreeCCOperationCase* %.pre.i.3, i64 0, i32 8
  %78 = bitcast %struct._tagTreeCCOperationCase** %77 to i64*
  store i64 %76, i64* %78, align 8, !tbaa !88
  %indvars.iv.next.i.3 = add nsw i64 %indvars.iv.next.i5, 4
  %exitcond.3 = icmp eq i64 %indvars.iv.next.i.3, %47
  br i1 %exitcond.3, label %._crit_edge.i.loopexit.unr-lcssa, label %._crit_edge.10.i

._crit_edge.i.loopexit.unr-lcssa:                 ; preds = %._crit_edge.10.i
  br label %._crit_edge.i.loopexit

._crit_edge.i.loopexit:                           ; preds = %._crit_edge.10.i.lr.ph.split, %._crit_edge.i.loopexit.unr-lcssa
  br label %._crit_edge.i

._crit_edge.i:                                    ; preds = %._crit_edge.i.loopexit, %.lr.ph.i, %._crit_edge.7.i
  %79 = add nsw i32 %37, -1
  %80 = sext i32 %79 to i64
  %81 = getelementptr inbounds %struct._tagTreeCCOperationCase*, %struct._tagTreeCCOperationCase** %22, i64 %80
  %82 = bitcast %struct._tagTreeCCOperationCase** %81 to i64*
  %83 = load i64, i64* %82, align 8, !tbaa !7
  %84 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %oper.07, i64 0, i32 11
  %85 = bitcast %struct._tagTreeCCOperationCase** %84 to i64*
  store i64 %83, i64* %85, align 8, !tbaa !122
  %86 = inttoptr i64 %83 to %struct._tagTreeCCOperationCase*
  %87 = getelementptr inbounds %struct._tagTreeCCOperationCase, %struct._tagTreeCCOperationCase* %86, i64 0, i32 8
  store %struct._tagTreeCCOperationCase* null, %struct._tagTreeCCOperationCase** %87, align 8, !tbaa !88
  tail call void @free(i8* %21) #2
  br label %SortCases.exit

SortCases.exit:                                   ; preds = %._crit_edge.i, %13, %9, %.lr.ph
  tail call void @TreeCCNodeClearMarking(%struct._tagTreeCCContext* %context, i32 65280) #2
  %88 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %oper.07, i64 0, i32 10
  %89 = load %struct._tagTreeCCOperationCase*, %struct._tagTreeCCOperationCase** %88, align 8, !tbaa !80
  %90 = icmp eq %struct._tagTreeCCOperationCase* %89, null
  br i1 %90, label %91, label %99

; <label>:91                                      ; preds = %SortCases.exit
  %92 = load %struct.TreeCCInput*, %struct.TreeCCInput** %1, align 8, !tbaa !1
  %93 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %oper.07, i64 0, i32 7
  %94 = load i8*, i8** %93, align 8, !tbaa !121
  %95 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %oper.07, i64 0, i32 8
  %96 = load i64, i64* %95, align 8, !tbaa !118
  %97 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %oper.07, i64 0, i32 0
  %98 = load i8*, i8** %97, align 8, !tbaa !46
  tail call void (%struct.TreeCCInput*, i8*, i64, i8*, ...) @TreeCCErrorOnLine(%struct.TreeCCInput* %92, i8* %94, i64 %96, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.7.777, i64 0, i64 0), i8* %98) #2
  br label %99

; <label>:99                                      ; preds = %91, %SortCases.exit
  %100 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %oper.07, i64 0, i32 6
  %101 = load i32, i32* %100, align 4, !tbaa !76
  %102 = icmp eq i32 %101, 1
  br i1 %102, label %.preheader.i, label %145

.preheader.i:                                     ; preds = %99
  %operCase.0.5.i = load %struct._tagTreeCCOperationCase*, %struct._tagTreeCCOperationCase** %88, align 8
  %103 = icmp eq %struct._tagTreeCCOperationCase* %operCase.0.5.i, null
  br i1 %103, label %._crit_edge.i.2, label %.lr.ph7.i

.lr.ph7.i:                                        ; preds = %.preheader.i
  %104 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %oper.07, i64 0, i32 0
  br label %105

; <label>:105                                     ; preds = %127, %.lr.ph7.i
  %operCase.06.i = phi %struct._tagTreeCCOperationCase* [ %operCase.0.5.i, %.lr.ph7.i ], [ %operCase.0.i.1, %127 ]
  %106 = getelementptr inbounds %struct._tagTreeCCOperationCase, %struct._tagTreeCCOperationCase* %operCase.06.i, i64 0, i32 0
  %107 = load %struct._tagTreeCCTrigger*, %struct._tagTreeCCTrigger** %106, align 8, !tbaa !51
  %108 = icmp eq %struct._tagTreeCCTrigger* %107, null
  br i1 %108, label %127, label %109

; <label>:109                                     ; preds = %105
  %110 = getelementptr inbounds %struct._tagTreeCCTrigger, %struct._tagTreeCCTrigger* %107, i64 0, i32 0
  %111 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %110, align 8, !tbaa !53
  %112 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %111, i64 0, i32 5
  %113 = load i32, i32* %112, align 4, !tbaa !34
  %114 = and i32 %113, 256
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %125, label %116

; <label>:116                                     ; preds = %109
  %117 = load %struct.TreeCCInput*, %struct.TreeCCInput** %1, align 8, !tbaa !1
  %118 = getelementptr inbounds %struct._tagTreeCCOperationCase, %struct._tagTreeCCOperationCase* %operCase.06.i, i64 0, i32 4
  %119 = load i8*, i8** %118, align 8, !tbaa !89
  %120 = getelementptr inbounds %struct._tagTreeCCOperationCase, %struct._tagTreeCCOperationCase* %operCase.06.i, i64 0, i32 5
  %121 = load i64, i64* %120, align 8, !tbaa !90
  %122 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %111, i64 0, i32 4
  %123 = load i8*, i8** %122, align 8, !tbaa !36
  %124 = load i8*, i8** %104, align 8, !tbaa !46
  tail call void (%struct.TreeCCInput*, i8*, i64, i8*, ...) @TreeCCErrorOnLine(%struct.TreeCCInput* %117, i8* %119, i64 %121, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.8.778, i64 0, i64 0), i8* %123, i8* %124) #2
  br label %127

; <label>:125                                     ; preds = %109
  %126 = or i32 %113, 256
  store i32 %126, i32* %112, align 4, !tbaa !34
  br label %127

; <label>:127                                     ; preds = %125, %116, %105
  %128 = getelementptr inbounds %struct._tagTreeCCOperationCase, %struct._tagTreeCCOperationCase* %operCase.06.i, i64 0, i32 8
  %operCase.0.i.1 = load %struct._tagTreeCCOperationCase*, %struct._tagTreeCCOperationCase** %128, align 8
  %129 = icmp eq %struct._tagTreeCCOperationCase* %operCase.0.i.1, null
  br i1 %129, label %._crit_edge.i.2.loopexit, label %105

._crit_edge.i.2.loopexit:                         ; preds = %127
  br label %._crit_edge.i.2

._crit_edge.i.2:                                  ; preds = %._crit_edge.i.2.loopexit, %.preheader.i
  %130 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %oper.07, i64 0, i32 4
  %param.0.3.i = load %struct._tagTreeCCParam*, %struct._tagTreeCCParam** %130, align 8
  %131 = icmp eq %struct._tagTreeCCParam* %param.0.3.i, null
  br i1 %131, label %OperationTest.exit, label %.lr.ph.i.3.preheader

.lr.ph.i.3.preheader:                             ; preds = %._crit_edge.i.2
  br label %.lr.ph.i.3

.lr.ph.i.3:                                       ; preds = %.lr.ph.i.3.preheader, %142
  %param.04.i = phi %struct._tagTreeCCParam* [ %param.0.i, %142 ], [ %param.0.3.i, %.lr.ph.i.3.preheader ]
  %132 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.04.i, i64 0, i32 2
  %133 = load i32, i32* %132, align 4, !tbaa !52
  %134 = and i32 %133, 1
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %142, label %136

; <label>:136                                     ; preds = %.lr.ph.i.3
  %137 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.04.i, i64 0, i32 1
  %138 = load i8*, i8** %137, align 8, !tbaa !47
  %139 = tail call %struct._tagTreeCCNode* @TreeCCNodeFindByType(%struct._tagTreeCCContext* %context, i8* %138) #2
  %140 = icmp eq %struct._tagTreeCCNode* %139, null
  br i1 %140, label %142, label %141

; <label>:141                                     ; preds = %136
  tail call fastcc void @VerifyHierarchy(%struct._tagTreeCCContext* %context, %struct._tagTreeCCOperation* %oper.07, %struct._tagTreeCCNode* %139) #2
  br label %142

; <label>:142                                     ; preds = %141, %136, %.lr.ph.i.3
  %143 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.04.i, i64 0, i32 4
  %param.0.i = load %struct._tagTreeCCParam*, %struct._tagTreeCCParam** %143, align 8
  %144 = icmp eq %struct._tagTreeCCParam* %param.0.i, null
  br i1 %144, label %OperationTest.exit.loopexit, label %.lr.ph.i.3

; <label>:145                                     ; preds = %99
  %146 = icmp eq i32 %101, 0
  %147 = load %struct._tagTreeCCOperationCase*, %struct._tagTreeCCOperationCase** %88, align 8, !tbaa !80
  %148 = icmp eq %struct._tagTreeCCOperationCase* %147, null
  br i1 %146, label %149, label %173

; <label>:149                                     ; preds = %145
  br i1 %148, label %OperationTest.exit, label %150

; <label>:150                                     ; preds = %149
  %151 = getelementptr inbounds %struct._tagTreeCCOperationCase, %struct._tagTreeCCOperationCase* %147, i64 0, i32 8
  %152 = load %struct._tagTreeCCOperationCase*, %struct._tagTreeCCOperationCase** %151, align 8, !tbaa !88
  %153 = icmp eq %struct._tagTreeCCOperationCase* %152, null
  br i1 %153, label %OperationTest.exit, label %.preheader1.i

.preheader1.i:                                    ; preds = %150
  %154 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %oper.07, i64 0, i32 0
  br label %155

; <label>:155                                     ; preds = %155, %.preheader1.i
  %156 = phi %struct._tagTreeCCOperationCase* [ %164, %155 ], [ %152, %.preheader1.i ]
  %157 = load %struct.TreeCCInput*, %struct.TreeCCInput** %1, align 8, !tbaa !1
  %158 = getelementptr inbounds %struct._tagTreeCCOperationCase, %struct._tagTreeCCOperationCase* %156, i64 0, i32 4
  %159 = load i8*, i8** %158, align 8, !tbaa !89
  %160 = getelementptr inbounds %struct._tagTreeCCOperationCase, %struct._tagTreeCCOperationCase* %156, i64 0, i32 5
  %161 = load i64, i64* %160, align 8, !tbaa !90
  %162 = load i8*, i8** %154, align 8, !tbaa !46
  tail call void (%struct.TreeCCInput*, i8*, i64, i8*, ...) @TreeCCErrorOnLine(%struct.TreeCCInput* %157, i8* %159, i64 %161, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.9.779, i64 0, i64 0), i8* %162) #2
  %163 = getelementptr inbounds %struct._tagTreeCCOperationCase, %struct._tagTreeCCOperationCase* %156, i64 0, i32 8
  %164 = load %struct._tagTreeCCOperationCase*, %struct._tagTreeCCOperationCase** %163, align 8, !tbaa !88
  %165 = icmp eq %struct._tagTreeCCOperationCase* %164, null
  br i1 %165, label %166, label %155

; <label>:166                                     ; preds = %155
  %167 = load %struct.TreeCCInput*, %struct.TreeCCInput** %1, align 8, !tbaa !1
  %168 = load %struct._tagTreeCCOperationCase*, %struct._tagTreeCCOperationCase** %88, align 8, !tbaa !80
  %169 = getelementptr inbounds %struct._tagTreeCCOperationCase, %struct._tagTreeCCOperationCase* %168, i64 0, i32 4
  %170 = load i8*, i8** %169, align 8, !tbaa !89
  %171 = getelementptr inbounds %struct._tagTreeCCOperationCase, %struct._tagTreeCCOperationCase* %168, i64 0, i32 5
  %172 = load i64, i64* %171, align 8, !tbaa !90
  tail call void (%struct.TreeCCInput*, i8*, i64, i8*, ...) @TreeCCErrorOnLine(%struct.TreeCCInput* %167, i8* %170, i64 %172, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.10.780, i64 0, i64 0)) #2
  br label %OperationTest.exit

; <label>:173                                     ; preds = %145
  br i1 %148, label %OperationTest.exit, label %174

; <label>:174                                     ; preds = %173
  %175 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %oper.07, i64 0, i32 4
  %param.0.11.i.i = load %struct._tagTreeCCParam*, %struct._tagTreeCCParam** %175, align 8
  %176 = icmp eq %struct._tagTreeCCParam* %param.0.11.i.i, null
  br i1 %176, label %._crit_edge.18.i.i, label %.lr.ph17.i.i.preheader

.lr.ph17.i.i.preheader:                           ; preds = %174
  br label %.lr.ph17.i.i

.lr.ph17.i.i:                                     ; preds = %.lr.ph17.i.i.preheader, %.loopexit.i.i
  %param.013.i.i = phi %struct._tagTreeCCParam* [ %param.0.i.i, %.loopexit.i.i ], [ %param.0.11.i.i, %.lr.ph17.i.i.preheader ]
  %size.012.i.i = phi i32 [ %size.1.i.i, %.loopexit.i.i ], [ 1, %.lr.ph17.i.i.preheader ]
  %177 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.013.i.i, i64 0, i32 2
  %178 = load i32, i32* %177, align 4, !tbaa !52
  %179 = and i32 %178, 1
  %180 = icmp eq i32 %179, 0
  br i1 %180, label %.loopexit.i.i, label %181

; <label>:181                                     ; preds = %.lr.ph17.i.i
  %182 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.013.i.i, i64 0, i32 1
  %183 = load i8*, i8** %182, align 8, !tbaa !47
  %184 = tail call %struct._tagTreeCCNode* @TreeCCNodeFindByType(%struct._tagTreeCCContext* %context, i8* %183) #2
  %185 = icmp eq %struct._tagTreeCCNode* %184, null
  br i1 %185, label %.loopexit.i.i, label %186

; <label>:186                                     ; preds = %181
  %187 = tail call i32 @TreeCCNodeAssignPositions(%struct._tagTreeCCNode* %184) #2
  %188 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.013.i.i, i64 0, i32 3
  store i32 %187, i32* %188, align 4, !tbaa !95
  %189 = mul nsw i32 %187, %size.012.i.i
  %param2.0.7.i.i = load %struct._tagTreeCCParam*, %struct._tagTreeCCParam** %175, align 8
  %190 = icmp eq %struct._tagTreeCCParam* %param2.0.7.i.i, null
  br i1 %190, label %.loopexit.i.i, label %.lr.ph10.i.i.preheader

.lr.ph10.i.i.preheader:                           ; preds = %186
  br label %.lr.ph10.i.i

.lr.ph10.i.i:                                     ; preds = %.lr.ph10.i.i.preheader, %214
  %param2.08.i.i = phi %struct._tagTreeCCParam* [ %param2.0.i.i, %214 ], [ %param2.0.7.i.i, %.lr.ph10.i.i.preheader ]
  %191 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param2.08.i.i, i64 0, i32 2
  %192 = load i32, i32* %191, align 4, !tbaa !52
  %193 = and i32 %192, 1
  %194 = icmp eq i32 %193, 0
  %195 = icmp eq %struct._tagTreeCCParam* %param2.08.i.i, %param.013.i.i
  %or.cond.i.i = or i1 %195, %194
  br i1 %or.cond.i.i, label %214, label %196

; <label>:196                                     ; preds = %.lr.ph10.i.i
  %197 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param2.08.i.i, i64 0, i32 1
  %198 = load i8*, i8** %197, align 8, !tbaa !47
  %199 = tail call %struct._tagTreeCCNode* @TreeCCNodeFindByType(%struct._tagTreeCCContext* %context, i8* %198) #2
  %200 = icmp eq %struct._tagTreeCCNode* %199, null
  %201 = icmp eq %struct._tagTreeCCNode* %199, %184
  %or.cond1.i.i = or i1 %200, %201
  br i1 %or.cond1.i.i, label %214, label %202

; <label>:202                                     ; preds = %196
  %203 = tail call i32 @TreeCCNodeInheritsFrom(%struct._tagTreeCCNode* %184, %struct._tagTreeCCNode* %199) #2
  %204 = icmp eq i32 %203, 0
  br i1 %204, label %205, label %208

; <label>:205                                     ; preds = %202
  %206 = tail call i32 @TreeCCNodeInheritsFrom(%struct._tagTreeCCNode* %199, %struct._tagTreeCCNode* %184) #2
  %207 = icmp eq i32 %206, 0
  br i1 %207, label %214, label %208

; <label>:208                                     ; preds = %205, %202
  %209 = load %struct.TreeCCInput*, %struct.TreeCCInput** %1, align 8, !tbaa !1
  %210 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %oper.07, i64 0, i32 7
  %211 = load i8*, i8** %210, align 8, !tbaa !121
  %212 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %oper.07, i64 0, i32 8
  %213 = load i64, i64* %212, align 8, !tbaa !118
  tail call void (%struct.TreeCCInput*, i8*, i64, i8*, ...) @TreeCCErrorOnLine(%struct.TreeCCInput* %209, i8* %211, i64 %213, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.12.781, i64 0, i64 0)) #2
  br label %OperationTest.exit

; <label>:214                                     ; preds = %205, %196, %.lr.ph10.i.i
  %215 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param2.08.i.i, i64 0, i32 4
  %param2.0.i.i = load %struct._tagTreeCCParam*, %struct._tagTreeCCParam** %215, align 8
  %216 = icmp eq %struct._tagTreeCCParam* %param2.0.i.i, null
  br i1 %216, label %.loopexit.i.i.loopexit, label %.lr.ph10.i.i

.loopexit.i.i.loopexit:                           ; preds = %214
  br label %.loopexit.i.i

.loopexit.i.i:                                    ; preds = %.loopexit.i.i.loopexit, %186, %181, %.lr.ph17.i.i
  %size.1.i.i = phi i32 [ %size.012.i.i, %181 ], [ %size.012.i.i, %.lr.ph17.i.i ], [ %189, %186 ], [ %189, %.loopexit.i.i.loopexit ]
  %217 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.013.i.i, i64 0, i32 4
  %param.0.i.i = load %struct._tagTreeCCParam*, %struct._tagTreeCCParam** %217, align 8
  %218 = icmp eq %struct._tagTreeCCParam* %param.0.i.i, null
  br i1 %218, label %._crit_edge.18.i.i.loopexit, label %.lr.ph17.i.i

._crit_edge.18.i.i.loopexit:                      ; preds = %.loopexit.i.i
  %size.1.i.i.lcssa = phi i32 [ %size.1.i.i, %.loopexit.i.i ]
  br label %._crit_edge.18.i.i

._crit_edge.18.i.i:                               ; preds = %._crit_edge.18.i.i.loopexit, %174
  %size.0.lcssa.i.i = phi i32 [ 1, %174 ], [ %size.1.i.i.lcssa, %._crit_edge.18.i.i.loopexit ]
  %219 = sext i32 %size.0.lcssa.i.i to i64
  %220 = tail call noalias i8* @calloc(i64 %219, i64 8) #2
  %221 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %oper.07, i64 0, i32 12
  %222 = bitcast %struct._tagTreeCCOperationCase*** %221 to i8**
  store i8* %220, i8** %222, align 8, !tbaa !77
  %223 = icmp eq i8* %220, null
  br i1 %223, label %224, label %226

; <label>:224                                     ; preds = %._crit_edge.18.i.i
  %225 = load %struct.TreeCCInput*, %struct.TreeCCInput** %1, align 8, !tbaa !1
  tail call void @TreeCCOutOfMemory(%struct.TreeCCInput* %225) #2
  br label %226

; <label>:226                                     ; preds = %224, %._crit_edge.18.i.i
  %operCase.0.4.i.i = load %struct._tagTreeCCOperationCase*, %struct._tagTreeCCOperationCase** %88, align 8
  %227 = icmp eq %struct._tagTreeCCOperationCase* %operCase.0.4.i.i, null
  br i1 %227, label %._crit_edge.i.i, label %.lr.ph.i.i.preheader

.lr.ph.i.i.preheader:                             ; preds = %226
  br label %.lr.ph.i.i

.lr.ph.i.i:                                       ; preds = %.lr.ph.i.i.preheader, %MarkMultiCase.exit.i.i
  %operCase.05.i.i = phi %struct._tagTreeCCOperationCase* [ %operCase.0.i.i, %MarkMultiCase.exit.i.i ], [ %operCase.0.4.i.i, %.lr.ph.i.i.preheader ]
  %228 = load %struct._tagTreeCCOperationCase**, %struct._tagTreeCCOperationCase*** %221, align 8, !tbaa !77
  %229 = load %struct._tagTreeCCParam*, %struct._tagTreeCCParam** %175, align 8, !tbaa !68
  %230 = getelementptr inbounds %struct._tagTreeCCOperationCase, %struct._tagTreeCCOperationCase* %operCase.05.i.i, i64 0, i32 0
  %231 = load %struct._tagTreeCCTrigger*, %struct._tagTreeCCTrigger** %230, align 8, !tbaa !51
  %232 = icmp eq %struct._tagTreeCCParam* %229, null
  br i1 %232, label %.critedge1.i.i.i, label %.lr.ph.i.i.i.preheader

.lr.ph.i.i.i.preheader:                           ; preds = %.lr.ph.i.i
  br label %.lr.ph.i.i.i

.lr.ph.i.i.i:                                     ; preds = %.lr.ph.i.i.i.preheader, %237
  %.03.i.i.i = phi %struct._tagTreeCCParam* [ %239, %237 ], [ %229, %.lr.ph.i.i.i.preheader ]
  %233 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %.03.i.i.i, i64 0, i32 2
  %234 = load i32, i32* %233, align 4, !tbaa !52
  %235 = and i32 %234, 1
  %236 = icmp eq i32 %235, 0
  br i1 %236, label %237, label %.critedge.i.i.i

; <label>:237                                     ; preds = %.lr.ph.i.i.i
  %238 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %.03.i.i.i, i64 0, i32 4
  %239 = load %struct._tagTreeCCParam*, %struct._tagTreeCCParam** %238, align 8, !tbaa !82
  %240 = icmp eq %struct._tagTreeCCParam* %239, null
  br i1 %240, label %.critedge1.i.i.i.loopexit, label %.lr.ph.i.i.i

.critedge1.i.i.i.loopexit:                        ; preds = %237
  br label %.critedge1.i.i.i

.critedge1.i.i.i:                                 ; preds = %.critedge1.i.i.i.loopexit, %.lr.ph.i.i
  %241 = load %struct._tagTreeCCOperationCase*, %struct._tagTreeCCOperationCase** %228, align 8, !tbaa !7
  %242 = icmp eq %struct._tagTreeCCOperationCase* %241, null
  br i1 %242, label %243, label %MarkMultiCase.exit.i.i

; <label>:243                                     ; preds = %.critedge1.i.i.i
  store %struct._tagTreeCCOperationCase* %operCase.05.i.i, %struct._tagTreeCCOperationCase** %228, align 8, !tbaa !7
  br label %MarkMultiCase.exit.i.i

.critedge.i.i.i:                                  ; preds = %.lr.ph.i.i.i
  %.03.i.i.i.lcssa = phi %struct._tagTreeCCParam* [ %.03.i.i.i, %.lr.ph.i.i.i ]
  %244 = getelementptr inbounds %struct._tagTreeCCTrigger, %struct._tagTreeCCTrigger* %231, i64 0, i32 0
  %245 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %244, align 8, !tbaa !53
  tail call fastcc void @MarkMultiScan(%struct._tagTreeCCOperationCase** %228, i32 0, i32 1, %struct._tagTreeCCParam* %.03.i.i.i.lcssa, %struct._tagTreeCCOperationCase* %operCase.05.i.i, %struct._tagTreeCCTrigger* %231, %struct._tagTreeCCNode* %245) #2
  br label %MarkMultiCase.exit.i.i

MarkMultiCase.exit.i.i:                           ; preds = %.critedge.i.i.i, %243, %.critedge1.i.i.i
  %246 = getelementptr inbounds %struct._tagTreeCCOperationCase, %struct._tagTreeCCOperationCase* %operCase.05.i.i, i64 0, i32 8
  %operCase.0.i.i = load %struct._tagTreeCCOperationCase*, %struct._tagTreeCCOperationCase** %246, align 8
  %247 = icmp eq %struct._tagTreeCCOperationCase* %operCase.0.i.i, null
  br i1 %247, label %._crit_edge.i.i.loopexit, label %.lr.ph.i.i

._crit_edge.i.i.loopexit:                         ; preds = %MarkMultiCase.exit.i.i
  br label %._crit_edge.i.i

._crit_edge.i.i:                                  ; preds = %._crit_edge.i.i.loopexit, %226
  %248 = load i32, i32* %100, align 4, !tbaa !76
  %249 = sext i32 %248 to i64
  %250 = tail call noalias i8* @calloc(i64 %249, i64 8) #2
  %251 = bitcast i8* %250 to %struct._tagTreeCCNode**
  %252 = icmp eq i8* %250, null
  br i1 %252, label %253, label %255

; <label>:253                                     ; preds = %._crit_edge.i.i
  %254 = load %struct.TreeCCInput*, %struct.TreeCCInput** %1, align 8, !tbaa !1
  tail call void @TreeCCOutOfMemory(%struct.TreeCCInput* %254) #2
  br label %255

; <label>:255                                     ; preds = %253, %._crit_edge.i.i
  %256 = load %struct._tagTreeCCOperationCase**, %struct._tagTreeCCOperationCase*** %221, align 8, !tbaa !77
  %257 = load %struct._tagTreeCCParam*, %struct._tagTreeCCParam** %175, align 8, !tbaa !68
  tail call fastcc void @VerifyMultiCoverage(%struct._tagTreeCCContext* %context, %struct._tagTreeCCOperation* %oper.07, %struct._tagTreeCCOperationCase** %256, i32 0, i32 1, %struct._tagTreeCCParam* %257, %struct._tagTreeCCNode** %251, %struct._tagTreeCCNode** %251) #2
  tail call void @free(i8* %250) #2
  br label %OperationTest.exit

OperationTest.exit.loopexit:                      ; preds = %142
  br label %OperationTest.exit

OperationTest.exit:                               ; preds = %OperationTest.exit.loopexit, %._crit_edge.i.2, %149, %150, %166, %173, %208, %255
  %258 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %oper.07, i64 0, i32 9
  %oper.0 = load %struct._tagTreeCCOperation*, %struct._tagTreeCCOperation** %258, align 8
  %259 = icmp eq %struct._tagTreeCCOperation* %oper.0, null
  br i1 %259, label %._crit_edge.loopexit, label %.lr.ph

._crit_edge.loopexit:                             ; preds = %OperationTest.exit
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %2
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond11 = icmp eq i64 %indvars.iv.next, 512
  br i1 %exitcond11, label %260, label %2

; <label>:260                                     ; preds = %._crit_edge
  ret void
}

; Function Attrs: nounwind uwtable
define %struct._tagTreeCCOperationCase* @TreeCCOperationFindCase(%struct._tagTreeCCContext* nocapture readonly %context, %struct._tagTreeCCNode* readnone %node, i8* %name) #0 {
  %1 = tail call i32 @TreeCCHashString(i8* %name) #2
  %2 = and i32 %1, 511
  %3 = zext i32 %2 to i64
  %4 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 1, i64 %3
  %oper.0.1.i = load %struct._tagTreeCCOperation*, %struct._tagTreeCCOperation** %4, align 8
  %5 = icmp eq %struct._tagTreeCCOperation* %oper.0.1.i, null
  br i1 %5, label %TreeCCOperationFind.exit.thread, label %.lr.ph.i.preheader

.lr.ph.i.preheader:                               ; preds = %0
  br label %.lr.ph.i

.lr.ph.i:                                         ; preds = %.lr.ph.i.preheader, %10
  %oper.02.i = phi %struct._tagTreeCCOperation* [ %oper.0.i, %10 ], [ %oper.0.1.i, %.lr.ph.i.preheader ]
  %6 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %oper.02.i, i64 0, i32 0
  %7 = load i8*, i8** %6, align 8, !tbaa !46
  %8 = tail call i32 @strcmp(i8* %7, i8* %name) #2
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %13, label %10

; <label>:10                                      ; preds = %.lr.ph.i
  %11 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %oper.02.i, i64 0, i32 9
  %oper.0.i = load %struct._tagTreeCCOperation*, %struct._tagTreeCCOperation** %11, align 8
  %12 = icmp eq %struct._tagTreeCCOperation* %oper.0.i, null
  br i1 %12, label %TreeCCOperationFind.exit.thread.loopexit15, label %.lr.ph.i

; <label>:13                                      ; preds = %.lr.ph.i
  %oper.02.i.lcssa = phi %struct._tagTreeCCOperation* [ %oper.02.i, %.lr.ph.i ]
  %14 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %oper.02.i.lcssa, i64 0, i32 10
  %operCase.0.5 = load %struct._tagTreeCCOperationCase*, %struct._tagTreeCCOperationCase** %14, align 8
  %15 = icmp eq %struct._tagTreeCCOperationCase* %operCase.0.5, null
  br i1 %15, label %TreeCCOperationFind.exit.thread, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %13
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %23
  %operCase.06 = phi %struct._tagTreeCCOperationCase* [ %operCase.0, %23 ], [ %operCase.0.5, %.lr.ph.preheader ]
  %16 = getelementptr inbounds %struct._tagTreeCCOperationCase, %struct._tagTreeCCOperationCase* %operCase.06, i64 0, i32 0
  %17 = load %struct._tagTreeCCTrigger*, %struct._tagTreeCCTrigger** %16, align 8, !tbaa !51
  %18 = icmp eq %struct._tagTreeCCTrigger* %17, null
  br i1 %18, label %23, label %19

; <label>:19                                      ; preds = %.lr.ph
  %20 = getelementptr inbounds %struct._tagTreeCCTrigger, %struct._tagTreeCCTrigger* %17, i64 0, i32 0
  %21 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %20, align 8, !tbaa !53
  %22 = icmp eq %struct._tagTreeCCNode* %21, %node
  br i1 %22, label %TreeCCOperationFind.exit.thread.loopexit, label %23

; <label>:23                                      ; preds = %.lr.ph, %19
  %24 = getelementptr inbounds %struct._tagTreeCCOperationCase, %struct._tagTreeCCOperationCase* %operCase.06, i64 0, i32 8
  %operCase.0 = load %struct._tagTreeCCOperationCase*, %struct._tagTreeCCOperationCase** %24, align 8
  %25 = icmp eq %struct._tagTreeCCOperationCase* %operCase.0, null
  br i1 %25, label %TreeCCOperationFind.exit.thread.loopexit, label %.lr.ph

TreeCCOperationFind.exit.thread.loopexit:         ; preds = %23, %19
  %.0.ph = phi %struct._tagTreeCCOperationCase* [ null, %23 ], [ %operCase.06, %19 ]
  br label %TreeCCOperationFind.exit.thread

TreeCCOperationFind.exit.thread.loopexit15:       ; preds = %10
  br label %TreeCCOperationFind.exit.thread

TreeCCOperationFind.exit.thread:                  ; preds = %TreeCCOperationFind.exit.thread.loopexit15, %TreeCCOperationFind.exit.thread.loopexit, %13, %0
  %.0 = phi %struct._tagTreeCCOperationCase* [ null, %0 ], [ null, %13 ], [ %.0.ph, %TreeCCOperationFind.exit.thread.loopexit ], [ null, %TreeCCOperationFind.exit.thread.loopexit15 ]
  ret %struct._tagTreeCCOperationCase* %.0
}

; Function Attrs: nounwind uwtable
define void @TreeCCOperationVisitAll(%struct._tagTreeCCContext* %context, void (%struct._tagTreeCCContext*, %struct._tagTreeCCOperation*)* nocapture %visitor) #0 {
  br label %1

; <label>:1                                       ; preds = %._crit_edge, %0
  %indvars.iv = phi i64 [ 0, %0 ], [ %indvars.iv.next, %._crit_edge ]
  %2 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 1, i64 %indvars.iv
  %oper.0.1 = load %struct._tagTreeCCOperation*, %struct._tagTreeCCOperation** %2, align 8
  %3 = icmp eq %struct._tagTreeCCOperation* %oper.0.1, null
  br i1 %3, label %._crit_edge, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %1
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %.lr.ph
  %oper.02 = phi %struct._tagTreeCCOperation* [ %oper.0, %.lr.ph ], [ %oper.0.1, %.lr.ph.preheader ]
  tail call void %visitor(%struct._tagTreeCCContext* %context, %struct._tagTreeCCOperation* %oper.02) #2
  %4 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %oper.02, i64 0, i32 9
  %oper.0 = load %struct._tagTreeCCOperation*, %struct._tagTreeCCOperation** %4, align 8
  %5 = icmp eq %struct._tagTreeCCOperation* %oper.0, null
  br i1 %5, label %._crit_edge.loopexit, label %.lr.ph

._crit_edge.loopexit:                             ; preds = %.lr.ph
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %1
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i64 %indvars.iv.next, 512
  br i1 %exitcond, label %6, label %1

; <label>:6                                       ; preds = %._crit_edge
  ret void
}

declare void @qsort(i8*, i64, i64, i32 (i8*, i8*)* nocapture) #8

; Function Attrs: nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #2

; Function Attrs: nounwind uwtable
define internal i32 @CaseCompare(i8* nocapture readonly %e1, i8* nocapture readonly %e2) #0 {
  %1 = bitcast i8* %e1 to %struct._tagTreeCCOperationCase**
  %2 = load %struct._tagTreeCCOperationCase*, %struct._tagTreeCCOperationCase** %1, align 8, !tbaa !7
  %3 = bitcast i8* %e2 to %struct._tagTreeCCOperationCase**
  %4 = load %struct._tagTreeCCOperationCase*, %struct._tagTreeCCOperationCase** %3, align 8, !tbaa !7
  %5 = getelementptr inbounds %struct._tagTreeCCOperationCase, %struct._tagTreeCCOperationCase* %2, i64 0, i32 0
  %6 = getelementptr inbounds %struct._tagTreeCCOperationCase, %struct._tagTreeCCOperationCase* %4, i64 0, i32 0
  %trigger2.0.15 = load %struct._tagTreeCCTrigger*, %struct._tagTreeCCTrigger** %6, align 8
  %trigger1.0.16 = load %struct._tagTreeCCTrigger*, %struct._tagTreeCCTrigger** %5, align 8
  %7 = icmp ne %struct._tagTreeCCTrigger* %trigger1.0.16, null
  %8 = icmp ne %struct._tagTreeCCTrigger* %trigger2.0.15, null
  %9 = and i1 %8, %7
  br i1 %9, label %.lr.ph20.preheader, label %.loopexit

.lr.ph20.preheader:                               ; preds = %0
  br label %.lr.ph20

.lr.ph20:                                         ; preds = %.lr.ph20.preheader, %68
  %trigger1.018 = phi %struct._tagTreeCCTrigger* [ %trigger1.0, %68 ], [ %trigger1.0.16, %.lr.ph20.preheader ]
  %trigger2.017 = phi %struct._tagTreeCCTrigger* [ %trigger2.0, %68 ], [ %trigger2.0.15, %.lr.ph20.preheader ]
  %10 = getelementptr inbounds %struct._tagTreeCCTrigger, %struct._tagTreeCCTrigger* %trigger1.018, i64 0, i32 0
  %11 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %10, align 8, !tbaa !53
  %12 = getelementptr inbounds %struct._tagTreeCCTrigger, %struct._tagTreeCCTrigger* %trigger2.017, i64 0, i32 0
  %13 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %12, align 8, !tbaa !53
  %14 = icmp eq %struct._tagTreeCCNode* %11, %13
  br i1 %14, label %68, label %.preheader2.preheader

.preheader2.preheader:                            ; preds = %.lr.ph20
  %.lcssa60 = phi %struct._tagTreeCCNode* [ %13, %.lr.ph20 ]
  %.lcssa58 = phi %struct._tagTreeCCNode* [ %11, %.lr.ph20 ]
  br label %.preheader2

.preheader2:                                      ; preds = %.preheader2.preheader, %18
  %ancestor1.0 = phi %struct._tagTreeCCNode* [ %16, %18 ], [ %.lcssa58, %.preheader2.preheader ]
  %15 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %ancestor1.0, i64 0, i32 0
  %16 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %15, align 8, !tbaa !38
  %17 = icmp eq %struct._tagTreeCCNode* %16, null
  br i1 %17, label %.preheader.preheader, label %18

.preheader.preheader:                             ; preds = %.preheader2
  %ancestor1.0.lcssa = phi %struct._tagTreeCCNode* [ %ancestor1.0, %.preheader2 ]
  br label %.preheader

; <label>:18                                      ; preds = %.preheader2
  %19 = icmp eq %struct._tagTreeCCNode* %16, %.lcssa60
  br i1 %19, label %.loopexit.loopexit46, label %.preheader2

.preheader:                                       ; preds = %.preheader.preheader, %23
  %ancestor2.0 = phi %struct._tagTreeCCNode* [ %21, %23 ], [ %.lcssa60, %.preheader.preheader ]
  %20 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %ancestor2.0, i64 0, i32 0
  %21 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %20, align 8, !tbaa !38
  %22 = icmp eq %struct._tagTreeCCNode* %21, null
  br i1 %22, label %25, label %23

; <label>:23                                      ; preds = %.preheader
  %24 = icmp eq %struct._tagTreeCCNode* %21, %.lcssa58
  br i1 %24, label %.loopexit.loopexit, label %.preheader

; <label>:25                                      ; preds = %.preheader
  %ancestor2.0.lcssa = phi %struct._tagTreeCCNode* [ %ancestor2.0, %.preheader ]
  %26 = icmp eq %struct._tagTreeCCNode* %ancestor1.0.lcssa, %ancestor2.0.lcssa
  br i1 %26, label %33, label %27

; <label>:27                                      ; preds = %25
  %28 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %ancestor1.0.lcssa, i64 0, i32 6
  %29 = load i32, i32* %28, align 4, !tbaa !37
  %30 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %ancestor2.0.lcssa, i64 0, i32 6
  %31 = load i32, i32* %30, align 4, !tbaa !37
  %32 = icmp slt i32 %29, %31
  %. = select i1 %32, i32 -1, i32 1
  br label %.loopexit

; <label>:33                                      ; preds = %25
  %34 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %.lcssa58, i64 0, i32 0
  %35 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %34, align 8, !tbaa !38
  %36 = icmp eq %struct._tagTreeCCNode* %35, null
  br i1 %36, label %._crit_edge.14.preheader, label %.lr.ph13.preheader

.lr.ph13.preheader:                               ; preds = %33
  br label %.lr.ph13

.lr.ph13:                                         ; preds = %.lr.ph13.preheader, %.lr.ph13
  %37 = phi %struct._tagTreeCCNode* [ %42, %.lr.ph13 ], [ %35, %.lr.ph13.preheader ]
  %38 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %37, i64 0, i32 5
  %39 = load i32, i32* %38, align 4, !tbaa !34
  %40 = or i32 %39, 256
  store i32 %40, i32* %38, align 4, !tbaa !34
  %41 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %37, i64 0, i32 0
  %42 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %41, align 8, !tbaa !38
  %43 = icmp eq %struct._tagTreeCCNode* %42, null
  br i1 %43, label %._crit_edge.14.preheader.loopexit, label %.lr.ph13

._crit_edge.14.preheader.loopexit:                ; preds = %.lr.ph13
  br label %._crit_edge.14.preheader

._crit_edge.14.preheader:                         ; preds = %._crit_edge.14.preheader.loopexit, %33
  br label %._crit_edge.14

._crit_edge.14:                                   ; preds = %._crit_edge.14.preheader, %47
  %ancestor2.1 = phi %struct._tagTreeCCNode* [ %45, %47 ], [ %.lcssa60, %._crit_edge.14.preheader ]
  %44 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %ancestor2.1, i64 0, i32 0
  %45 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %44, align 8, !tbaa !38
  %46 = icmp eq %struct._tagTreeCCNode* %45, null
  br i1 %46, label %52, label %47

; <label>:47                                      ; preds = %._crit_edge.14
  %48 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %45, i64 0, i32 5
  %49 = load i32, i32* %48, align 4, !tbaa !34
  %50 = and i32 %49, 256
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %._crit_edge.14, label %52

; <label>:52                                      ; preds = %47, %._crit_edge.14
  %.lcssa55 = phi %struct._tagTreeCCNode* [ %45, %47 ], [ %45, %._crit_edge.14 ]
  %ancestor2.1.lcssa = phi %struct._tagTreeCCNode* [ %ancestor2.1, %47 ], [ %ancestor2.1, %._crit_edge.14 ]
  br i1 %36, label %._crit_edge.preheader, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %52
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %.lr.ph
  %53 = phi %struct._tagTreeCCNode* [ %58, %.lr.ph ], [ %35, %.lr.ph.preheader ]
  %54 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %53, i64 0, i32 5
  %55 = load i32, i32* %54, align 4, !tbaa !34
  %56 = and i32 %55, -257
  store i32 %56, i32* %54, align 4, !tbaa !34
  %57 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %53, i64 0, i32 0
  %58 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %57, align 8, !tbaa !38
  %59 = icmp eq %struct._tagTreeCCNode* %58, null
  br i1 %59, label %._crit_edge.preheader.loopexit, label %.lr.ph

._crit_edge.preheader.loopexit:                   ; preds = %.lr.ph
  br label %._crit_edge.preheader

._crit_edge.preheader:                            ; preds = %._crit_edge.preheader.loopexit, %52
  %.ph = phi %struct._tagTreeCCNode* [ null, %52 ], [ %35, %._crit_edge.preheader.loopexit ]
  %60 = icmp eq %struct._tagTreeCCNode* %.ph, %.lcssa55
  br i1 %60, label %._crit_edge._crit_edge, label %._crit_edge.29.preheader

._crit_edge.29.preheader:                         ; preds = %._crit_edge.preheader
  br label %._crit_edge.29

._crit_edge.29:                                   ; preds = %._crit_edge.29.preheader, %._crit_edge.29
  %61 = phi %struct._tagTreeCCNode* [ %.pre, %._crit_edge.29 ], [ %.ph, %._crit_edge.29.preheader ]
  %.phi.trans.insert = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %61, i64 0, i32 0
  %.pre = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %.phi.trans.insert, align 8, !tbaa !38
  %62 = icmp eq %struct._tagTreeCCNode* %.pre, %.lcssa55
  br i1 %62, label %._crit_edge._crit_edge.loopexit, label %._crit_edge.29

._crit_edge._crit_edge.loopexit:                  ; preds = %._crit_edge.29
  %.lcssa = phi %struct._tagTreeCCNode* [ %61, %._crit_edge.29 ]
  br label %._crit_edge._crit_edge

._crit_edge._crit_edge:                           ; preds = %._crit_edge._crit_edge.loopexit, %._crit_edge.preheader
  %ancestor1.3.lcssa = phi %struct._tagTreeCCNode* [ %.lcssa58, %._crit_edge.preheader ], [ %.lcssa, %._crit_edge._crit_edge.loopexit ]
  %63 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %ancestor1.3.lcssa, i64 0, i32 6
  %64 = load i32, i32* %63, align 4, !tbaa !37
  %65 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %ancestor2.1.lcssa, i64 0, i32 6
  %66 = load i32, i32* %65, align 4, !tbaa !37
  %67 = icmp slt i32 %64, %66
  %.1 = select i1 %67, i32 -1, i32 1
  br label %.loopexit

; <label>:68                                      ; preds = %.lr.ph20
  %69 = getelementptr inbounds %struct._tagTreeCCTrigger, %struct._tagTreeCCTrigger* %trigger1.018, i64 0, i32 1
  %70 = getelementptr inbounds %struct._tagTreeCCTrigger, %struct._tagTreeCCTrigger* %trigger2.017, i64 0, i32 1
  %trigger2.0 = load %struct._tagTreeCCTrigger*, %struct._tagTreeCCTrigger** %70, align 8
  %trigger1.0 = load %struct._tagTreeCCTrigger*, %struct._tagTreeCCTrigger** %69, align 8
  %71 = icmp ne %struct._tagTreeCCTrigger* %trigger1.0, null
  %72 = icmp ne %struct._tagTreeCCTrigger* %trigger2.0, null
  %73 = and i1 %72, %71
  br i1 %73, label %.lr.ph20, label %.loopexit.loopexit47

.loopexit.loopexit:                               ; preds = %23
  br label %.loopexit

.loopexit.loopexit46:                             ; preds = %18
  br label %.loopexit

.loopexit.loopexit47:                             ; preds = %68
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit47, %.loopexit.loopexit46, %.loopexit.loopexit, %0, %._crit_edge._crit_edge, %27
  %.0 = phi i32 [ %., %27 ], [ %.1, %._crit_edge._crit_edge ], [ 0, %0 ], [ 1, %.loopexit.loopexit ], [ -1, %.loopexit.loopexit46 ], [ 0, %.loopexit.loopexit47 ]
  ret i32 %.0
}

; Function Attrs: nounwind uwtable
define internal fastcc void @VerifyHierarchy(%struct._tagTreeCCContext* nocapture readonly %context, %struct._tagTreeCCOperation* nocapture readonly %oper, %struct._tagTreeCCNode* nocapture readonly %node) #0 {
  %1 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 5
  %2 = load i32, i32* %1, align 4, !tbaa !34
  %3 = and i32 %2, 256
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %.loopexit

; <label>:5                                       ; preds = %0
  %6 = and i32 %2, 2
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %19

; <label>:8                                       ; preds = %5
  %9 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 2
  %10 = load %struct.TreeCCInput*, %struct.TreeCCInput** %9, align 8, !tbaa !1
  %11 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %oper, i64 0, i32 7
  %12 = load i8*, i8** %11, align 8, !tbaa !121
  %13 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %oper, i64 0, i32 8
  %14 = load i64, i64* %13, align 8, !tbaa !118
  %15 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 4
  %16 = load i8*, i8** %15, align 8, !tbaa !36
  %17 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %oper, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8, !tbaa !46
  tail call void (%struct.TreeCCInput*, i8*, i64, i8*, ...) @TreeCCErrorOnLine(%struct.TreeCCInput* %10, i8* %12, i64 %14, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.11.785, i64 0, i64 0), i8* %16, i8* %18) #2
  br label %.loopexit

; <label>:19                                      ; preds = %5
  %20 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 1
  %.0.1 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %20, align 8
  %21 = icmp eq %struct._tagTreeCCNode* %.0.1, null
  br i1 %21, label %.loopexit, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %19
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %.lr.ph
  %.02 = phi %struct._tagTreeCCNode* [ %.0, %.lr.ph ], [ %.0.1, %.lr.ph.preheader ]
  tail call fastcc void @VerifyHierarchy(%struct._tagTreeCCContext* %context, %struct._tagTreeCCOperation* %oper, %struct._tagTreeCCNode* %.02)
  %22 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %.02, i64 0, i32 3
  %.0 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %22, align 8
  %23 = icmp eq %struct._tagTreeCCNode* %.0, null
  br i1 %23, label %.loopexit.loopexit, label %.lr.ph

.loopexit.loopexit:                               ; preds = %.lr.ph
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %19, %0, %8
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @MarkMultiScan(%struct._tagTreeCCOperationCase** %sortedCases, i32 %base, i32 %multiplier, %struct._tagTreeCCParam* nocapture readonly %nextParam, %struct._tagTreeCCOperationCase* %operCase, %struct._tagTreeCCTrigger* nocapture readonly %nextTrigger, %struct._tagTreeCCNode* nocapture readonly %node) #0 {
  %1 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 7
  %2 = load i32, i32* %1, align 4, !tbaa !94
  %3 = mul nsw i32 %2, %multiplier
  %4 = add nsw i32 %3, %base
  %5 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %nextParam, i64 0, i32 3
  %6 = load i32, i32* %5, align 4, !tbaa !95
  %7 = mul nsw i32 %6, %multiplier
  %8 = getelementptr inbounds %struct._tagTreeCCTrigger, %struct._tagTreeCCTrigger* %nextTrigger, i64 0, i32 1
  %9 = load %struct._tagTreeCCTrigger*, %struct._tagTreeCCTrigger** %8, align 8, !tbaa !55
  br label %10

; <label>:10                                      ; preds = %12, %0
  %nextParam.pn = phi %struct._tagTreeCCParam* [ %nextParam, %0 ], [ %.0.i, %12 ]
  %.0.i.in = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %nextParam.pn, i64 0, i32 4
  %.0.i = load %struct._tagTreeCCParam*, %struct._tagTreeCCParam** %.0.i.in, align 8
  %11 = icmp eq %struct._tagTreeCCParam* %.0.i, null
  br i1 %11, label %.critedge1.i, label %12

; <label>:12                                      ; preds = %10
  %13 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %.0.i, i64 0, i32 2
  %14 = load i32, i32* %13, align 4, !tbaa !52
  %15 = and i32 %14, 1
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %10, label %.critedge.i

.critedge1.i:                                     ; preds = %10
  %17 = sext i32 %4 to i64
  %18 = getelementptr inbounds %struct._tagTreeCCOperationCase*, %struct._tagTreeCCOperationCase** %sortedCases, i64 %17
  %19 = load %struct._tagTreeCCOperationCase*, %struct._tagTreeCCOperationCase** %18, align 8, !tbaa !7
  %20 = icmp eq %struct._tagTreeCCOperationCase* %19, null
  br i1 %20, label %21, label %MarkMultiCase.exit

; <label>:21                                      ; preds = %.critedge1.i
  store %struct._tagTreeCCOperationCase* %operCase, %struct._tagTreeCCOperationCase** %18, align 8, !tbaa !7
  br label %MarkMultiCase.exit

.critedge.i:                                      ; preds = %12
  %.0.i.lcssa8 = phi %struct._tagTreeCCParam* [ %.0.i, %12 ]
  %22 = getelementptr inbounds %struct._tagTreeCCTrigger, %struct._tagTreeCCTrigger* %9, i64 0, i32 0
  %23 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %22, align 8, !tbaa !53
  tail call fastcc void @MarkMultiScan(%struct._tagTreeCCOperationCase** %sortedCases, i32 %4, i32 %7, %struct._tagTreeCCParam* %.0.i.lcssa8, %struct._tagTreeCCOperationCase* %operCase, %struct._tagTreeCCTrigger* %9, %struct._tagTreeCCNode* %23) #2
  br label %MarkMultiCase.exit

MarkMultiCase.exit:                               ; preds = %.critedge1.i, %21, %.critedge.i
  %24 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 1
  %.0.2 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %24, align 8
  %25 = icmp eq %struct._tagTreeCCNode* %.0.2, null
  br i1 %25, label %._crit_edge, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %MarkMultiCase.exit
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %.lr.ph
  %.03 = phi %struct._tagTreeCCNode* [ %.0, %.lr.ph ], [ %.0.2, %.lr.ph.preheader ]
  tail call fastcc void @MarkMultiScan(%struct._tagTreeCCOperationCase** %sortedCases, i32 %base, i32 %multiplier, %struct._tagTreeCCParam* %nextParam, %struct._tagTreeCCOperationCase* %operCase, %struct._tagTreeCCTrigger* %nextTrigger, %struct._tagTreeCCNode* %.03)
  %26 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %.03, i64 0, i32 3
  %.0 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %26, align 8
  %27 = icmp eq %struct._tagTreeCCNode* %.0, null
  br i1 %27, label %._crit_edge.loopexit, label %.lr.ph

._crit_edge.loopexit:                             ; preds = %.lr.ph
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %MarkMultiCase.exit
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @VerifyMultiCoverage(%struct._tagTreeCCContext* %context, %struct._tagTreeCCOperation* nocapture readonly %oper, %struct._tagTreeCCOperationCase** nocapture readonly %sortedCases, i32 %base, i32 %multiplier, %struct._tagTreeCCParam* readonly %nextParam, %struct._tagTreeCCNode** nocapture readonly %nodeStack, %struct._tagTreeCCNode** nocapture %nodeStackTop) #0 {
  %1 = icmp eq %struct._tagTreeCCParam* %nextParam, null
  br i1 %1, label %.critedge1, label %.lr.ph11.preheader

.lr.ph11.preheader:                               ; preds = %0
  br label %.lr.ph11

.lr.ph11:                                         ; preds = %.lr.ph11.preheader, %6
  %.010 = phi %struct._tagTreeCCParam* [ %8, %6 ], [ %nextParam, %.lr.ph11.preheader ]
  %2 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %.010, i64 0, i32 2
  %3 = load i32, i32* %2, align 4, !tbaa !52
  %4 = and i32 %3, 1
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %.critedge

; <label>:6                                       ; preds = %.lr.ph11
  %7 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %.010, i64 0, i32 4
  %8 = load %struct._tagTreeCCParam*, %struct._tagTreeCCParam** %7, align 8, !tbaa !82
  %9 = icmp eq %struct._tagTreeCCParam* %8, null
  br i1 %9, label %.critedge1.loopexit, label %.lr.ph11

.critedge1.loopexit:                              ; preds = %6
  br label %.critedge1

.critedge1:                                       ; preds = %.critedge1.loopexit, %0
  %10 = sext i32 %base to i64
  %11 = getelementptr inbounds %struct._tagTreeCCOperationCase*, %struct._tagTreeCCOperationCase** %sortedCases, i64 %10
  %12 = load %struct._tagTreeCCOperationCase*, %struct._tagTreeCCOperationCase** %11, align 8, !tbaa !7
  %13 = icmp eq %struct._tagTreeCCOperationCase* %12, null
  br i1 %13, label %.preheader, label %.loopexit

.preheader:                                       ; preds = %.critedge1
  %14 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %oper, i64 0, i32 6
  %15 = load i32, i32* %14, align 4, !tbaa !76
  %16 = icmp sgt i32 %15, 0
  br i1 %16, label %.lr.ph8.preheader, label %.critedge2._crit_edge.thread

.lr.ph8.preheader:                                ; preds = %.preheader
  %17 = sext i32 %15 to i64
  br label %.lr.ph8

; <label>:18                                      ; preds = %.lr.ph8
  %19 = icmp slt i64 %indvars.iv.next14, %17
  br i1 %19, label %.lr.ph8, label %.critedge2.preheader

.critedge2.preheader:                             ; preds = %18
  br i1 %16, label %.lr.ph, label %.critedge2._crit_edge.thread

.lr.ph:                                           ; preds = %.critedge2.preheader
  %20 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 2
  br label %27

.lr.ph8:                                          ; preds = %.lr.ph8.preheader, %18
  %indvars.iv13 = phi i64 [ %indvars.iv.next14, %18 ], [ 0, %.lr.ph8.preheader ]
  %21 = getelementptr inbounds %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %nodeStack, i64 %indvars.iv13
  %22 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %21, align 8, !tbaa !7
  %23 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %22, i64 0, i32 5
  %24 = load i32, i32* %23, align 4, !tbaa !34
  %25 = and i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %indvars.iv.next14 = add nuw nsw i64 %indvars.iv13, 1
  br i1 %26, label %18, label %.loopexit.loopexit

; <label>:27                                      ; preds = %.lr.ph, %AppendParam.exit
  %indvars.iv = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next, %AppendParam.exit ]
  %str.06 = phi i8* [ null, %.lr.ph ], [ %.0.i, %AppendParam.exit ]
  %28 = getelementptr inbounds %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %nodeStack, i64 %indvars.iv
  %29 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %28, align 8, !tbaa !7
  %30 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %29, i64 0, i32 4
  %31 = load i8*, i8** %30, align 8, !tbaa !36
  %32 = icmp eq i8* %str.06, null
  br i1 %32, label %48, label %33

; <label>:33                                      ; preds = %27
  %34 = tail call i64 @strlen(i8* %str.06) #12
  %35 = tail call i64 @strlen(i8* %31) #12
  %36 = add i64 %35, %34
  %37 = shl i64 %36, 32
  %sext.i = add i64 %37, 12884901888
  %38 = ashr exact i64 %sext.i, 32
  %39 = tail call i8* @realloc(i8* %str.06, i64 %38) #2
  %40 = icmp eq i8* %39, null
  br i1 %40, label %41, label %43

; <label>:41                                      ; preds = %33
  %42 = load %struct.TreeCCInput*, %struct.TreeCCInput** %20, align 8, !tbaa !1
  tail call void @TreeCCOutOfMemory(%struct.TreeCCInput* %42) #2
  br label %43

; <label>:43                                      ; preds = %41, %33
  %sext1.i = shl i64 %34, 32
  %44 = ashr exact i64 %sext1.i, 32
  %45 = getelementptr inbounds i8, i8* %39, i64 %44
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %45, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.15.782, i64 0, i64 0), i64 3, i32 1, i1 false) #2
  %46 = getelementptr inbounds i8, i8* %45, i64 2
  %47 = tail call i8* @strcpy(i8* %46, i8* %31) #2
  br label %AppendParam.exit

; <label>:48                                      ; preds = %27
  %49 = tail call i8* @TreeCCDupString(i8* %31) #2
  br label %AppendParam.exit

AppendParam.exit:                                 ; preds = %43, %48
  %.0.i = phi i8* [ %39, %43 ], [ %49, %48 ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %50 = load i32, i32* %14, align 4, !tbaa !76
  %51 = sext i32 %50 to i64
  %52 = icmp slt i64 %indvars.iv.next, %51
  br i1 %52, label %27, label %.critedge2._crit_edge

.critedge2._crit_edge:                            ; preds = %AppendParam.exit
  %.0.i.lcssa = phi i8* [ %.0.i, %AppendParam.exit ]
  %53 = icmp eq i8* %.0.i.lcssa, null
  br i1 %53, label %.critedge2._crit_edge.thread, label %55

.critedge2._crit_edge.thread:                     ; preds = %.preheader, %.critedge2.preheader, %.critedge2._crit_edge
  %54 = tail call i8* @TreeCCDupString(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13.783, i64 0, i64 0)) #2
  br label %55

; <label>:55                                      ; preds = %.critedge2._crit_edge, %.critedge2._crit_edge.thread
  %str.1 = phi i8* [ %.0.i.lcssa, %.critedge2._crit_edge ], [ %54, %.critedge2._crit_edge.thread ]
  %56 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 2
  %57 = load %struct.TreeCCInput*, %struct.TreeCCInput** %56, align 8, !tbaa !1
  %58 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %oper, i64 0, i32 7
  %59 = load i8*, i8** %58, align 8, !tbaa !121
  %60 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %oper, i64 0, i32 8
  %61 = load i64, i64* %60, align 8, !tbaa !118
  %62 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %oper, i64 0, i32 0
  %63 = load i8*, i8** %62, align 8, !tbaa !46
  tail call void (%struct.TreeCCInput*, i8*, i64, i8*, ...) @TreeCCErrorOnLine(%struct.TreeCCInput* %57, i8* %59, i64 %61, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.14.784, i64 0, i64 0), i8* %str.1, i8* %63) #2
  tail call void @free(i8* %str.1) #2
  br label %.loopexit

.critedge:                                        ; preds = %.lr.ph11
  %.010.lcssa = phi %struct._tagTreeCCParam* [ %.010, %.lr.ph11 ]
  %64 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %.010.lcssa, i64 0, i32 1
  %65 = load i8*, i8** %64, align 8, !tbaa !47
  %66 = tail call %struct._tagTreeCCNode* @TreeCCNodeFindByType(%struct._tagTreeCCContext* %context, i8* %65) #2
  %67 = icmp eq %struct._tagTreeCCNode* %66, null
  br i1 %67, label %.loopexit, label %68

; <label>:68                                      ; preds = %.critedge
  tail call fastcc void @VerifyMultiScan(%struct._tagTreeCCContext* %context, %struct._tagTreeCCOperation* %oper, %struct._tagTreeCCOperationCase** %sortedCases, i32 %base, i32 %multiplier, %struct._tagTreeCCParam* %.010.lcssa, %struct._tagTreeCCNode* %66, %struct._tagTreeCCNode** %nodeStack, %struct._tagTreeCCNode** %nodeStackTop)
  br label %.loopexit

.loopexit.loopexit:                               ; preds = %.lr.ph8
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %.critedge, %.critedge1, %55, %68
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @VerifyMultiScan(%struct._tagTreeCCContext* %context, %struct._tagTreeCCOperation* nocapture readonly %oper, %struct._tagTreeCCOperationCase** nocapture readonly %sortedCases, i32 %base, i32 %multiplier, %struct._tagTreeCCParam* nocapture readonly %nextParam, %struct._tagTreeCCNode* %node, %struct._tagTreeCCNode** nocapture readonly %nodeStack, %struct._tagTreeCCNode** nocapture %nodeStackTop) #0 {
  store %struct._tagTreeCCNode* %node, %struct._tagTreeCCNode** %nodeStackTop, align 8, !tbaa !7
  %1 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 7
  %2 = load i32, i32* %1, align 4, !tbaa !94
  %3 = mul nsw i32 %2, %multiplier
  %4 = add nsw i32 %3, %base
  %5 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %nextParam, i64 0, i32 3
  %6 = load i32, i32* %5, align 4, !tbaa !95
  %7 = mul nsw i32 %6, %multiplier
  %8 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %nextParam, i64 0, i32 4
  %9 = load %struct._tagTreeCCParam*, %struct._tagTreeCCParam** %8, align 8, !tbaa !82
  %10 = getelementptr inbounds %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %nodeStackTop, i64 1
  tail call fastcc void @VerifyMultiCoverage(%struct._tagTreeCCContext* %context, %struct._tagTreeCCOperation* %oper, %struct._tagTreeCCOperationCase** %sortedCases, i32 %4, i32 %7, %struct._tagTreeCCParam* %9, %struct._tagTreeCCNode** %nodeStack, %struct._tagTreeCCNode** %10)
  %11 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %node, i64 0, i32 1
  %.0.1 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %11, align 8
  %12 = icmp eq %struct._tagTreeCCNode* %.0.1, null
  br i1 %12, label %._crit_edge, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %0
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %.lr.ph
  %.02 = phi %struct._tagTreeCCNode* [ %.0, %.lr.ph ], [ %.0.1, %.lr.ph.preheader ]
  tail call fastcc void @VerifyMultiScan(%struct._tagTreeCCContext* %context, %struct._tagTreeCCOperation* %oper, %struct._tagTreeCCOperationCase** %sortedCases, i32 %base, i32 %multiplier, %struct._tagTreeCCParam* %nextParam, %struct._tagTreeCCNode* %.02, %struct._tagTreeCCNode** %nodeStack, %struct._tagTreeCCNode** %nodeStackTop)
  %13 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %.02, i64 0, i32 3
  %.0 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %13, align 8
  %14 = icmp eq %struct._tagTreeCCNode* %.0, null
  br i1 %14, label %._crit_edge.loopexit, label %.lr.ph

._crit_edge.loopexit:                             ; preds = %.lr.ph
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %0
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @TreeCCOptionProcess(%struct._tagTreeCCContext* %context, i8* nocapture readonly %name, i8* %value) #0 {
  br label %4

; <label>:1                                       ; preds = %4
  %2 = trunc i64 %indvars.iv.next to i32
  %3 = icmp eq i32 %2, 32
  br i1 %3, label %.loopexit.loopexit, label %4

; <label>:4                                       ; preds = %0, %1
  %indvars.iv = phi i64 [ 0, %0 ], [ %indvars.iv.next, %1 ]
  %5 = getelementptr inbounds [33 x %struct.anon.180], [33 x %struct.anon.180]* @OptionHandlers, i64 0, i64 %indvars.iv, i32 0
  %6 = load i8*, i8** %5, align 8, !tbaa !126
  %7 = tail call i32 @strcmp(i8* %name, i8* %6) #2
  %8 = icmp eq i32 %7, 0
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  br i1 %8, label %9, label %1

; <label>:9                                       ; preds = %4
  %indvars.iv.lcssa = phi i64 [ %indvars.iv, %4 ]
  %10 = getelementptr inbounds [33 x %struct.anon.180], [33 x %struct.anon.180]* @OptionHandlers, i64 0, i64 %indvars.iv.lcssa, i32 1
  %11 = load i32 (%struct._tagTreeCCContext*, i8*, i32)*, i32 (%struct._tagTreeCCContext*, i8*, i32)** %10, align 8, !tbaa !128
  %12 = getelementptr inbounds [33 x %struct.anon.180], [33 x %struct.anon.180]* @OptionHandlers, i64 0, i64 %indvars.iv.lcssa, i32 2
  %13 = load i32, i32* %12, align 8, !tbaa !129
  %14 = tail call i32 %11(%struct._tagTreeCCContext* %context, i8* %value, i32 %13) #2
  br label %.loopexit

.loopexit.loopexit:                               ; preds = %1
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %9
  %.0 = phi i32 [ %14, %9 ], [ 2, %.loopexit.loopexit ]
  ret i32 %.0
}

; Function Attrs: nounwind uwtable
define internal i32 @TrackLinesOption(%struct._tagTreeCCContext* nocapture %context, i8* readnone %value, i32 %flag) #0 {
  %1 = icmp eq i8* %value, null
  br i1 %1, label %2, label %10

; <label>:2                                       ; preds = %0
  %3 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 8
  %4 = trunc i32 %flag to i16
  %5 = load i16, i16* %3, align 8
  %6 = shl i16 %4, 1
  %7 = and i16 %6, 2
  %8 = and i16 %5, -3
  %9 = or i16 %8, %7
  store i16 %9, i16* %3, align 8
  br label %10

; <label>:10                                      ; preds = %0, %2
  %.0 = phi i32 [ 0, %2 ], [ 5, %0 ]
  ret i32 %.0
}

; Function Attrs: nounwind uwtable
define internal i32 @NoSingletonsOption(%struct._tagTreeCCContext* nocapture %context, i8* readnone %value, i32 %flag) #0 {
  %1 = icmp eq i8* %value, null
  br i1 %1, label %2, label %10

; <label>:2                                       ; preds = %0
  %3 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 8
  %4 = trunc i32 %flag to i16
  %5 = load i16, i16* %3, align 8
  %6 = shl i16 %4, 2
  %7 = and i16 %6, 4
  %8 = and i16 %5, -5
  %9 = or i16 %8, %7
  store i16 %9, i16* %3, align 8
  br label %10

; <label>:10                                      ; preds = %0, %2
  %.0 = phi i32 [ 0, %2 ], [ 5, %0 ]
  ret i32 %.0
}

; Function Attrs: nounwind uwtable
define internal i32 @ReentrantOption(%struct._tagTreeCCContext* nocapture %context, i8* readnone %value, i32 %flag) #0 {
  %1 = icmp eq i8* %value, null
  br i1 %1, label %2, label %10

; <label>:2                                       ; preds = %0
  %3 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 8
  %4 = trunc i32 %flag to i16
  %5 = load i16, i16* %3, align 8
  %6 = shl i16 %4, 3
  %7 = and i16 %6, 8
  %8 = and i16 %5, -9
  %9 = or i16 %8, %7
  store i16 %9, i16* %3, align 8
  br label %10

; <label>:10                                      ; preds = %0, %2
  %.0 = phi i32 [ 0, %2 ], [ 5, %0 ]
  ret i32 %.0
}

; Function Attrs: nounwind uwtable
define internal i32 @ForceOption(%struct._tagTreeCCContext* nocapture %context, i8* readnone %value, i32 %flag) #0 {
  %1 = icmp eq i8* %value, null
  br i1 %1, label %2, label %10

; <label>:2                                       ; preds = %0
  %3 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 8
  %4 = trunc i32 %flag to i16
  %5 = load i16, i16* %3, align 8
  %6 = shl i16 %4, 4
  %7 = and i16 %6, 16
  %8 = and i16 %5, -17
  %9 = or i16 %8, %7
  store i16 %9, i16* %3, align 8
  br label %10

; <label>:10                                      ; preds = %0, %2
  %.0 = phi i32 [ 0, %2 ], [ 5, %0 ]
  ret i32 %.0
}

; Function Attrs: nounwind uwtable
define internal i32 @VirtualFactoryOption(%struct._tagTreeCCContext* nocapture %context, i8* readnone %value, i32 %flag) #0 {
  %1 = icmp eq i8* %value, null
  br i1 %1, label %2, label %10

; <label>:2                                       ; preds = %0
  %3 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 8
  %4 = trunc i32 %flag to i16
  %5 = load i16, i16* %3, align 8
  %6 = shl i16 %4, 5
  %7 = and i16 %6, 32
  %8 = and i16 %5, -33
  %9 = or i16 %8, %7
  store i16 %9, i16* %3, align 8
  br label %10

; <label>:10                                      ; preds = %0, %2
  %.0 = phi i32 [ 0, %2 ], [ 5, %0 ]
  ret i32 %.0
}

; Function Attrs: nounwind uwtable
define internal i32 @AbstractFactoryOption(%struct._tagTreeCCContext* nocapture %context, i8* readnone %value, i32 %flag) #0 {
  %1 = icmp eq i8* %value, null
  br i1 %1, label %2, label %10

; <label>:2                                       ; preds = %0
  %3 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 8
  %4 = trunc i32 %flag to i16
  %5 = load i16, i16* %3, align 8
  %6 = shl i16 %4, 6
  %7 = and i16 %6, 64
  %8 = and i16 %5, -65
  %9 = or i16 %8, %7
  store i16 %9, i16* %3, align 8
  br label %10

; <label>:10                                      ; preds = %0, %2
  %.0 = phi i32 [ 0, %2 ], [ 5, %0 ]
  ret i32 %.0
}

; Function Attrs: nounwind uwtable
define internal i32 @KindInVtableOption(%struct._tagTreeCCContext* nocapture %context, i8* readnone %value, i32 %flag) #0 {
  %1 = icmp eq i8* %value, null
  br i1 %1, label %2, label %10

; <label>:2                                       ; preds = %0
  %3 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 8
  %4 = trunc i32 %flag to i16
  %5 = load i16, i16* %3, align 8
  %6 = shl i16 %4, 7
  %7 = and i16 %6, 128
  %8 = and i16 %5, -129
  %9 = or i16 %8, %7
  store i16 %9, i16* %3, align 8
  br label %10

; <label>:10                                      ; preds = %0, %2
  %.0 = phi i32 [ 0, %2 ], [ 5, %0 ]
  ret i32 %.0
}

; Function Attrs: nounwind uwtable
define internal i32 @PrefixOption(%struct._tagTreeCCContext* nocapture %context, i8* %value, i32 %flag) #0 {
  %1 = icmp eq i8* %value, null
  br i1 %1, label %4, label %2

; <label>:2                                       ; preds = %0
  %3 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 9
  store i8* %value, i8** %3, align 8, !tbaa !30
  br label %4

; <label>:4                                       ; preds = %0, %2
  %.0 = phi i32 [ 1, %2 ], [ 4, %0 ]
  ret i32 %.0
}

; Function Attrs: nounwind uwtable
define internal i32 @StateTypeOption(%struct._tagTreeCCContext* nocapture %context, i8* %value, i32 %flag) #0 {
  %1 = icmp eq i8* %value, null
  br i1 %1, label %4, label %2

; <label>:2                                       ; preds = %0
  %3 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 10
  store i8* %value, i8** %3, align 8, !tbaa !31
  br label %4

; <label>:4                                       ; preds = %0, %2
  %.0 = phi i32 [ 1, %2 ], [ 4, %0 ]
  ret i32 %.0
}

; Function Attrs: nounwind uwtable
define internal i32 @NamespaceOption(%struct._tagTreeCCContext* nocapture %context, i8* %value, i32 %flag) #0 {
  %1 = icmp eq i8* %value, null
  br i1 %1, label %8, label %2

; <label>:2                                       ; preds = %0
  %3 = load i8, i8* %value, align 1, !tbaa !27
  %4 = icmp eq i8 %3, 0
  %5 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 11
  br i1 %4, label %6, label %7

; <label>:6                                       ; preds = %2
  store i8* null, i8** %5, align 8, !tbaa !8
  br label %8

; <label>:7                                       ; preds = %2
  store i8* %value, i8** %5, align 8, !tbaa !8
  br label %8

; <label>:8                                       ; preds = %0, %7, %6
  %.0 = phi i32 [ 0, %6 ], [ 1, %7 ], [ 4, %0 ]
  ret i32 %.0
}

; Function Attrs: nounwind uwtable
define internal i32 @BaseOption(%struct._tagTreeCCContext* nocapture %context, i8* readonly %value, i32 %flag) #0 {
  %1 = icmp eq i8* %value, null
  br i1 %1, label %17, label %2

; <label>:2                                       ; preds = %0
  %3 = load i8, i8* %value, align 1, !tbaa !27
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %17, label %.preheader

.preheader:                                       ; preds = %2
  %.off.2 = add i8 %3, -48
  %5 = icmp ult i8 %.off.2, 10
  br i1 %5, label %.lr.ph.preheader, label %.critedge

.lr.ph.preheader:                                 ; preds = %.preheader
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %.lr.ph
  %6 = phi i8 [ %12, %.lr.ph ], [ %3, %.lr.ph.preheader ]
  %num.04 = phi i32 [ %10, %.lr.ph ], [ 0, %.lr.ph.preheader ]
  %.013 = phi i8* [ %11, %.lr.ph ], [ %value, %.lr.ph.preheader ]
  %7 = sext i8 %6 to i32
  %8 = mul nsw i32 %num.04, 10
  %9 = add i32 %8, -48
  %10 = add i32 %9, %7
  %11 = getelementptr inbounds i8, i8* %.013, i64 1
  %12 = load i8, i8* %11, align 1, !tbaa !27
  %.off = add i8 %12, -48
  %13 = icmp ult i8 %.off, 10
  br i1 %13, label %.lr.ph, label %.critedge.loopexit

.critedge.loopexit:                               ; preds = %.lr.ph
  %.lcssa15 = phi i8 [ %12, %.lr.ph ]
  %.lcssa14 = phi i32 [ %10, %.lr.ph ]
  br label %.critedge

.critedge:                                        ; preds = %.critedge.loopexit, %.preheader
  %.lcssa = phi i8 [ %3, %.preheader ], [ %.lcssa15, %.critedge.loopexit ]
  %num.0.lcssa = phi i32 [ 0, %.preheader ], [ %.lcssa14, %.critedge.loopexit ]
  %14 = icmp eq i8 %.lcssa, 0
  br i1 %14, label %15, label %17

; <label>:15                                      ; preds = %.critedge
  %16 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 12
  store i32 %num.0.lcssa, i32* %16, align 4, !tbaa !11
  br label %17

; <label>:17                                      ; preds = %15, %.critedge, %2, %0
  %.1 = phi i32 [ 4, %0 ], [ 3, %2 ], [ 0, %15 ], [ 3, %.critedge ]
  ret i32 %.1
}

; Function Attrs: nounwind uwtable
define internal i32 @LangOption(%struct._tagTreeCCContext* nocapture %context, i8* %value, i32 %flag) #0 {
  %1 = icmp eq i8* %value, null
  br i1 %1, label %.thread129, label %2

; <label>:2                                       ; preds = %0
  %3 = load i8, i8* %value, align 1, !tbaa !27
  %4 = icmp eq i8 %3, 99
  br i1 %4, label %5, label %.thread131

; <label>:5                                       ; preds = %2
  %6 = getelementptr inbounds i8, i8* %value, i64 1
  %7 = load i8, i8* %6, align 1, !tbaa !27
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %14, label %.thread131

.thread131:                                       ; preds = %2, %5
  %9 = icmp eq i8 %3, 67
  br i1 %9, label %10, label %.thread132

; <label>:10                                      ; preds = %.thread131
  %11 = getelementptr inbounds i8, i8* %value, i64 1
  %12 = load i8, i8* %11, align 1, !tbaa !27
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %.thread132

; <label>:14                                      ; preds = %10, %5
  %15 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 13
  store i32 0, i32* %15, align 4, !tbaa !9
  br label %.thread129

.thread132:                                       ; preds = %.thread131, %10
  br i1 %4, label %16, label %.thread133

; <label>:16                                      ; preds = %.thread132
  %17 = getelementptr inbounds i8, i8* %value, i64 1
  %18 = load i8, i8* %17, align 1, !tbaa !27
  %19 = icmp eq i8 %18, 43
  br i1 %19, label %20, label %.thread133

; <label>:20                                      ; preds = %16
  %21 = getelementptr inbounds i8, i8* %value, i64 2
  %22 = load i8, i8* %21, align 1, !tbaa !27
  %23 = icmp eq i8 %22, 43
  br i1 %23, label %24, label %.thread133

; <label>:24                                      ; preds = %20
  %25 = getelementptr inbounds i8, i8* %value, i64 3
  %26 = load i8, i8* %25, align 1, !tbaa !27
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %40, label %.thread133

.thread133:                                       ; preds = %.thread132, %16, %20, %24
  br i1 %9, label %28, label %.thread135

; <label>:28                                      ; preds = %.thread133
  %29 = getelementptr inbounds i8, i8* %value, i64 1
  %30 = load i8, i8* %29, align 1, !tbaa !27
  %31 = icmp eq i8 %30, 43
  br i1 %31, label %32, label %.thread135

; <label>:32                                      ; preds = %28
  %33 = getelementptr inbounds i8, i8* %value, i64 2
  %34 = load i8, i8* %33, align 1, !tbaa !27
  %35 = icmp eq i8 %34, 43
  br i1 %35, label %36, label %.thread135

; <label>:36                                      ; preds = %32
  %37 = getelementptr inbounds i8, i8* %value, i64 3
  %38 = load i8, i8* %37, align 1, !tbaa !27
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %40, label %.thread135

; <label>:40                                      ; preds = %36, %24
  %41 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 13
  store i32 1, i32* %41, align 4, !tbaa !9
  br label %.thread129

.thread135:                                       ; preds = %.thread133, %28, %32, %36
  %42 = tail call i32 @strcmp(i8* %value, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.36.820, i64 0, i64 0)) #2
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %47, label %44

; <label>:44                                      ; preds = %.thread135
  %45 = tail call i32 @strcmp(i8* %value, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.37.821, i64 0, i64 0)) #2
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %49

; <label>:47                                      ; preds = %44, %.thread135
  %48 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 13
  store i32 2, i32* %48, align 4, !tbaa !9
  br label %.thread129

; <label>:49                                      ; preds = %44
  br i1 %4, label %50, label %.thread137

; <label>:50                                      ; preds = %49
  %51 = getelementptr inbounds i8, i8* %value, i64 1
  %52 = load i8, i8* %51, align 1, !tbaa !27
  %53 = icmp eq i8 %52, 35
  br i1 %53, label %54, label %.thread137

; <label>:54                                      ; preds = %50
  %55 = getelementptr inbounds i8, i8* %value, i64 2
  %56 = load i8, i8* %55, align 1, !tbaa !27
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %68, label %.thread137

.thread137:                                       ; preds = %49, %50, %54
  br i1 %9, label %58, label %.thread139

; <label>:58                                      ; preds = %.thread137
  %59 = getelementptr inbounds i8, i8* %value, i64 1
  %60 = load i8, i8* %59, align 1, !tbaa !27
  %61 = icmp eq i8 %60, 35
  br i1 %61, label %62, label %.thread139

; <label>:62                                      ; preds = %58
  %63 = getelementptr inbounds i8, i8* %value, i64 2
  %64 = load i8, i8* %63, align 1, !tbaa !27
  %65 = icmp eq i8 %64, 0
  br i1 %65, label %68, label %.thread139

.thread139:                                       ; preds = %.thread137, %58, %62
  %66 = tail call i32 @strcmp(i8* %value, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.40.822, i64 0, i64 0)) #2
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %70

; <label>:68                                      ; preds = %.thread139, %62, %54
  %69 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 13
  store i32 3, i32* %69, align 4, !tbaa !9
  br label %.thread129

; <label>:70                                      ; preds = %.thread139
  %71 = tail call i32 @strcmp(i8* %value, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.41.823, i64 0, i64 0)) #2
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %76, label %73

; <label>:73                                      ; preds = %70
  %74 = tail call i32 @strcmp(i8* %value, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.42.824, i64 0, i64 0)) #2
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %78

; <label>:76                                      ; preds = %73, %70
  %77 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 13
  store i32 4, i32* %77, align 4, !tbaa !9
  br label %.thread129

; <label>:78                                      ; preds = %73
  switch i8 %3, label %.thread129 [
    i8 112, label %79
    i8 80, label %90
  ]

; <label>:79                                      ; preds = %78
  %80 = getelementptr inbounds i8, i8* %value, i64 1
  %81 = load i8, i8* %80, align 1, !tbaa !27
  %82 = icmp eq i8 %81, 104
  br i1 %82, label %83, label %.thread129

; <label>:83                                      ; preds = %79
  %84 = getelementptr inbounds i8, i8* %value, i64 2
  %85 = load i8, i8* %84, align 1, !tbaa !27
  %86 = icmp eq i8 %85, 112
  br i1 %86, label %87, label %.thread129

; <label>:87                                      ; preds = %83
  %88 = getelementptr inbounds i8, i8* %value, i64 3
  %89 = load i8, i8* %88, align 1, !tbaa !27
  %phitmp = icmp eq i8 %89, 0
  br i1 %phitmp, label %101, label %.thread129

; <label>:90                                      ; preds = %78
  %91 = getelementptr inbounds i8, i8* %value, i64 1
  %92 = load i8, i8* %91, align 1, !tbaa !27
  %93 = icmp eq i8 %92, 72
  br i1 %93, label %94, label %.thread129

; <label>:94                                      ; preds = %90
  %95 = getelementptr inbounds i8, i8* %value, i64 2
  %96 = load i8, i8* %95, align 1, !tbaa !27
  %97 = icmp eq i8 %96, 80
  br i1 %97, label %98, label %.thread129

; <label>:98                                      ; preds = %94
  %99 = getelementptr inbounds i8, i8* %value, i64 3
  %100 = load i8, i8* %99, align 1, !tbaa !27
  %phitmp126 = icmp eq i8 %100, 0
  br i1 %phitmp126, label %101, label %.thread129

; <label>:101                                     ; preds = %87, %98
  %102 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 13
  store i32 5, i32* %102, align 4, !tbaa !9
  br label %.thread129

.thread129:                                       ; preds = %78, %83, %79, %87, %98, %90, %94, %14, %47, %76, %101, %68, %40, %0
  %.0 = phi i32 [ 4, %0 ], [ 3, %98 ], [ 0, %40 ], [ 0, %68 ], [ 0, %101 ], [ 0, %76 ], [ 0, %47 ], [ 0, %14 ], [ 3, %94 ], [ 3, %90 ], [ 3, %87 ], [ 3, %79 ], [ 3, %83 ], [ 3, %78 ]
  ret i32 %.0
}

; Function Attrs: nounwind uwtable
define internal i32 @BlockSizeOption(%struct._tagTreeCCContext* nocapture %context, i8* readonly %value, i32 %flag) #0 {
  %1 = icmp eq i8* %value, null
  br i1 %1, label %17, label %2

; <label>:2                                       ; preds = %0
  %3 = load i8, i8* %value, align 1, !tbaa !27
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %17, label %.preheader

.preheader:                                       ; preds = %2
  %.off.2 = add i8 %3, -48
  %5 = icmp ult i8 %.off.2, 10
  br i1 %5, label %.lr.ph.preheader, label %.critedge

.lr.ph.preheader:                                 ; preds = %.preheader
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %.lr.ph
  %6 = phi i8 [ %12, %.lr.ph ], [ %3, %.lr.ph.preheader ]
  %num.04 = phi i32 [ %10, %.lr.ph ], [ 0, %.lr.ph.preheader ]
  %.013 = phi i8* [ %11, %.lr.ph ], [ %value, %.lr.ph.preheader ]
  %7 = sext i8 %6 to i32
  %8 = mul nsw i32 %num.04, 10
  %9 = add i32 %8, -48
  %10 = add i32 %9, %7
  %11 = getelementptr inbounds i8, i8* %.013, i64 1
  %12 = load i8, i8* %11, align 1, !tbaa !27
  %.off = add i8 %12, -48
  %13 = icmp ult i8 %.off, 10
  br i1 %13, label %.lr.ph, label %.critedge.loopexit

.critedge.loopexit:                               ; preds = %.lr.ph
  %.lcssa15 = phi i8 [ %12, %.lr.ph ]
  %.lcssa14 = phi i32 [ %10, %.lr.ph ]
  br label %.critedge

.critedge:                                        ; preds = %.critedge.loopexit, %.preheader
  %.lcssa = phi i8 [ %3, %.preheader ], [ %.lcssa15, %.critedge.loopexit ]
  %num.0.lcssa = phi i32 [ 0, %.preheader ], [ %.lcssa14, %.critedge.loopexit ]
  %14 = icmp eq i8 %.lcssa, 0
  br i1 %14, label %15, label %17

; <label>:15                                      ; preds = %.critedge
  %16 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 14
  store i32 %num.0.lcssa, i32* %16, align 4, !tbaa !10
  br label %17

; <label>:17                                      ; preds = %15, %.critedge, %2, %0
  %.1 = phi i32 [ 4, %0 ], [ 3, %2 ], [ 0, %15 ], [ 3, %.critedge ]
  ret i32 %.1
}

; Function Attrs: nounwind uwtable
define internal i32 @StripFilenamesOption(%struct._tagTreeCCContext* nocapture %context, i8* readnone %value, i32 %flag) #0 {
  %1 = icmp eq i8* %value, null
  br i1 %1, label %2, label %10

; <label>:2                                       ; preds = %0
  %3 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 8
  %4 = trunc i32 %flag to i16
  %5 = load i16, i16* %3, align 8
  %6 = shl i16 %4, 8
  %7 = and i16 %6, 256
  %8 = and i16 %5, -257
  %9 = or i16 %8, %7
  store i16 %9, i16* %3, align 8
  br label %10

; <label>:10                                      ; preds = %0, %2
  %.0 = phi i32 [ 0, %2 ], [ 5, %0 ]
  ret i32 %.0
}

; Function Attrs: nounwind uwtable
define internal i32 @PrintLineNumberOption(%struct._tagTreeCCContext* nocapture %context, i8* readnone %value, i32 %flag) #0 {
  %1 = icmp eq i8* %value, null
  br i1 %1, label %2, label %10

; <label>:2                                       ; preds = %0
  %3 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 8
  %4 = trunc i32 %flag to i16
  %5 = load i16, i16* %3, align 8
  %6 = shl i16 %4, 9
  %7 = and i16 %6, 512
  %8 = and i16 %5, -513
  %9 = or i16 %8, %7
  store i16 %9, i16* %3, align 8
  br label %10

; <label>:10                                      ; preds = %0, %2
  %.0 = phi i32 [ 0, %2 ], [ 5, %0 ]
  ret i32 %.0
}

; Function Attrs: nounwind uwtable
define internal i32 @InternalAccessOption(%struct._tagTreeCCContext* nocapture %context, i8* readnone %value, i32 %flag) #0 {
  %1 = icmp eq i8* %value, null
  br i1 %1, label %2, label %10

; <label>:2                                       ; preds = %0
  %3 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 8
  %4 = trunc i32 %flag to i16
  %5 = load i16, i16* %3, align 8
  %6 = shl i16 %4, 10
  %7 = and i16 %6, 1024
  %8 = and i16 %5, -1025
  %9 = or i16 %8, %7
  store i16 %9, i16* %3, align 8
  br label %10

; <label>:10                                      ; preds = %0, %2
  %.0 = phi i32 [ 0, %2 ], [ 5, %0 ]
  ret i32 %.0
}

; Function Attrs: nounwind uwtable
define internal i32 @AllocatorOption(%struct._tagTreeCCContext* nocapture %context, i8* readnone %value, i32 %flag) #0 {
  %1 = icmp eq i8* %value, null
  br i1 %1, label %2, label %10

; <label>:2                                       ; preds = %0
  %3 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 8
  %4 = trunc i32 %flag to i16
  %5 = load i16, i16* %3, align 8
  %6 = shl i16 %4, 11
  %7 = and i16 %6, 2048
  %8 = and i16 %5, -2049
  %9 = or i16 %8, %7
  store i16 %9, i16* %3, align 8
  br label %10

; <label>:10                                      ; preds = %0, %2
  %.0 = phi i32 [ 0, %2 ], [ 5, %0 ]
  ret i32 %.0
}

; Function Attrs: nounwind uwtable
define internal i32 @GCAllocatorOption(%struct._tagTreeCCContext* nocapture %context, i8* readnone %value, i32 %flag) #0 {
  %1 = icmp eq i8* %value, null
  br i1 %1, label %2, label %10

; <label>:2                                       ; preds = %0
  %3 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 8
  %4 = trunc i32 %flag to i16
  %5 = load i16, i16* %3, align 8
  %6 = shl i16 %4, 12
  %7 = and i16 %6, 4096
  %8 = and i16 %5, -4097
  %9 = or i16 %8, %7
  store i16 %9, i16* %3, align 8
  br label %10

; <label>:10                                      ; preds = %0, %2
  %.0 = phi i32 [ 0, %2 ], [ 5, %0 ]
  ret i32 %.0
}

; Function Attrs: nounwind uwtable
define internal i32 @BaseTypeOption(%struct._tagTreeCCContext* nocapture %context, i8* %value, i32 %flag) #0 {
  %1 = icmp eq i8* %value, null
  br i1 %1, label %4, label %2

; <label>:2                                       ; preds = %0
  %3 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 16
  store i8* %value, i8** %3, align 8, !tbaa !12
  br label %4

; <label>:4                                       ; preds = %0, %2
  %.0 = phi i32 [ 1, %2 ], [ 4, %0 ]
  ret i32 %.0
}

; Function Attrs: nounwind uwtable
define void @TreeCCParse(%struct._tagTreeCCContext* %context) #0 {
  %returnType.i = alloca i8*, align 8
  %name.i = alloca i8*, align 8
  %paramType.i = alloca i8*, align 8
  %paramName.i = alloca i8*, align 8
  %fieldName.i = alloca i8*, align 8
  %fieldType.i = alloca i8*, align 8
  %1 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 2
  %2 = load %struct.TreeCCInput*, %struct.TreeCCInput** %1, align 8, !tbaa !1
  %3 = tail call i32 @TreeCCNextToken(%struct.TreeCCInput* %2) #2
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %.loopexit, label %.preheader23

.preheader23:                                     ; preds = %0
  %5 = bitcast i8** %fieldName.i to i8*
  %6 = bitcast i8** %fieldType.i to i8*
  %7 = bitcast i8** %returnType.i to i8*
  %8 = bitcast i8** %name.i to i8*
  %9 = bitcast i8** %paramType.i to i8*
  %10 = bitcast i8** %paramName.i to i8*
  %11 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 13
  %12 = bitcast i8** %paramName.i to i64*
  %13 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 8
  %14 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 4
  %15 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 6
  %16 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 5
  %17 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 7
  %18 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 15
  %19 = bitcast %struct.TreeCCInput** %1 to i8**
  %.pre = load %struct.TreeCCInput*, %struct.TreeCCInput** %1, align 8, !tbaa !1
  %.phi.trans.insert = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %.pre, i64 0, i32 0
  %.pre77 = load i32, i32* %.phi.trans.insert, align 4, !tbaa !97
  %20 = bitcast %struct._tagTreeCCStream** %14 to <2 x i64>*
  %21 = bitcast %struct._tagTreeCCStream** %15 to <2 x i64>*
  br label %22

; <label>:22                                      ; preds = %.preheader23, %.critedge4
  %23 = phi i32 [ %.pre77, %.preheader23 ], [ %733, %.critedge4 ]
  %24 = phi %struct.TreeCCInput* [ %.pre, %.preheader23 ], [ %731, %.critedge4 ]
  %25 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %24, i64 0, i32 0
  switch i32 %23, label %728 [
    i32 37, label %722
    i32 1, label %.lr.ph24.i.preheader
    i32 2, label %.preheader
    i32 4, label %.preheader
    i32 31, label %.preheader
    i32 32, label %.preheader
    i32 33, label %.preheader
    i32 19, label %181
    i32 22, label %258
    i32 27, label %531
    i32 28, label %569
    i32 29, label %596
    i32 30, label %623
    i32 34, label %636
    i32 35, label %687
    i32 36, label %689
    i32 3, label %722
    i32 5, label %722
    i32 6, label %722
    i32 7, label %722
    i32 8, label %722
    i32 9, label %722
    i32 10, label %722
    i32 11, label %722
    i32 12, label %722
    i32 13, label %722
    i32 14, label %722
    i32 15, label %722
    i32 16, label %722
    i32 17, label %722
    i32 18, label %722
    i32 20, label %722
    i32 21, label %722
    i32 23, label %722
    i32 24, label %722
    i32 25, label %722
    i32 26, label %722
  ]

.lr.ph24.i.preheader:                             ; preds = %22
  br label %.lr.ph24.i

.preheader:                                       ; preds = %22, %22, %22, %22, %22
  %.off.48 = add i32 %23, -31
  %switch.49 = icmp ult i32 %.off.48, 3
  br i1 %switch.49, label %.critedge.preheader, label %._crit_edge

.critedge.preheader:                              ; preds = %.preheader
  br label %.critedge

.lr.ph24.i:                                       ; preds = %.lr.ph24.i.preheader, %.backedge._crit_edge.i
  %26 = phi %struct.TreeCCInput* [ %.pre.i, %.backedge._crit_edge.i ], [ %24, %.lr.ph24.i.preheader ]
  %caseList.023.i = phi %struct._tagTreeCCOperationCase* [ %caseList.1.i, %.backedge._crit_edge.i ], [ null, %.lr.ph24.i.preheader ]
  %27 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %26, i64 0, i32 4
  %28 = load i8*, i8** %27, align 8, !tbaa !21
  %29 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %26, i64 0, i32 5
  %30 = load i64, i64* %29, align 8, !tbaa !23
  %31 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %26, i64 0, i32 1
  %32 = load i8*, i8** %31, align 8, !tbaa !98
  %33 = tail call %struct._tagTreeCCOperation* @TreeCCOperationFind(%struct._tagTreeCCContext* %context, i8* %32) #2
  %34 = icmp ne %struct._tagTreeCCOperation* %33, null
  br i1 %34, label %37, label %35

; <label>:35                                      ; preds = %.lr.ph24.i
  %36 = load i8*, i8** %31, align 8, !tbaa !98
  tail call void (%struct.TreeCCInput*, i8*, ...) @TreeCCError(%struct.TreeCCInput* %26, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.10.827, i64 0, i64 0), i8* %36) #2
  br label %37

; <label>:37                                      ; preds = %35, %.lr.ph24.i
  %fatalError.0.i.i = phi i32 [ 0, %.lr.ph24.i ], [ 1, %35 ]
  %38 = tail call i32 @TreeCCNextToken(%struct.TreeCCInput* %26) #2
  %39 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %26, i64 0, i32 0
  %40 = load i32, i32* %39, align 4, !tbaa !97
  %41 = icmp eq i32 %40, 5
  br i1 %41, label %42, label %78

; <label>:42                                      ; preds = %37
  %43 = tail call i32 @TreeCCNextToken(%struct.TreeCCInput* %26) #2
  br label %thread-pre-split.i.i

thread-pre-split.i.i:                             ; preds = %73, %42
  %lastTrigger.0.ph.i.i = phi %struct._tagTreeCCTrigger* [ %.lcssa179, %73 ], [ null, %42 ]
  %fatalError.1.ph.i.i = phi i32 [ %fatalError.2.i.i.lcssa176, %73 ], [ %fatalError.0.i.i, %42 ]
  %numTriggers.0.ph.i.i = phi i32 [ %.lcssa174, %73 ], [ 0, %42 ]
  %triggers.0.ph.i.i = phi %struct._tagTreeCCTrigger* [ %triggers.1.i.i.lcssa181, %73 ], [ null, %42 ]
  %.pr.i.i = load i32, i32* %39, align 4, !tbaa !97
  br label %44

; <label>:44                                      ; preds = %69, %thread-pre-split.i.i
  %.pr253.i.i = phi i32 [ %.pr.i.i, %thread-pre-split.i.i ], [ 1, %69 ]
  %lastTrigger.0.i.i = phi %struct._tagTreeCCTrigger* [ %lastTrigger.0.ph.i.i, %thread-pre-split.i.i ], [ %55, %69 ]
  %fatalError.1.i.i = phi i32 [ %fatalError.1.ph.i.i, %thread-pre-split.i.i ], [ %fatalError.2.i.i, %69 ]
  %numTriggers.0.i.i = phi i32 [ %numTriggers.0.ph.i.i, %thread-pre-split.i.i ], [ %47, %69 ]
  %triggers.0.i.i = phi %struct._tagTreeCCTrigger* [ %triggers.0.ph.i.i, %thread-pre-split.i.i ], [ %triggers.1.i.i, %69 ]
  %45 = icmp eq i32 %.pr253.i.i, 1
  br i1 %45, label %46, label %.loopexit7.i.i.loopexit

; <label>:46                                      ; preds = %44
  %47 = add nsw i32 %numTriggers.0.i.i, 1
  %48 = load i8*, i8** %31, align 8, !tbaa !98
  %49 = tail call %struct._tagTreeCCNode* @TreeCCNodeFind(%struct._tagTreeCCContext* %context, i8* %48) #2
  %50 = icmp eq %struct._tagTreeCCNode* %49, null
  br i1 %50, label %51, label %53

; <label>:51                                      ; preds = %46
  %52 = load i8*, i8** %31, align 8, !tbaa !98
  tail call void (%struct.TreeCCInput*, i8*, ...) @TreeCCError(%struct.TreeCCInput* %26, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.11.828, i64 0, i64 0), i8* %52) #2
  br label %53

; <label>:53                                      ; preds = %51, %46
  %fatalError.2.i.i = phi i32 [ %fatalError.1.i.i, %46 ], [ 1, %51 ]
  %54 = tail call noalias i8* @malloc(i64 16) #2
  %55 = bitcast i8* %54 to %struct._tagTreeCCTrigger*
  %56 = icmp eq i8* %54, null
  br i1 %56, label %57, label %58

; <label>:57                                      ; preds = %53
  tail call void @TreeCCOutOfMemory(%struct.TreeCCInput* %26) #2
  br label %58

; <label>:58                                      ; preds = %57, %53
  %59 = bitcast i8* %54 to %struct._tagTreeCCNode**
  store %struct._tagTreeCCNode* %49, %struct._tagTreeCCNode** %59, align 8, !tbaa !53
  %60 = getelementptr inbounds i8, i8* %54, i64 8
  %61 = bitcast i8* %60 to %struct._tagTreeCCTrigger**
  store %struct._tagTreeCCTrigger* null, %struct._tagTreeCCTrigger** %61, align 8, !tbaa !55
  %62 = icmp eq %struct._tagTreeCCTrigger* %lastTrigger.0.i.i, null
  br i1 %62, label %66, label %63

; <label>:63                                      ; preds = %58
  %64 = getelementptr inbounds %struct._tagTreeCCTrigger, %struct._tagTreeCCTrigger* %lastTrigger.0.i.i, i64 0, i32 1
  %65 = bitcast %struct._tagTreeCCTrigger** %64 to i8**
  store i8* %54, i8** %65, align 8, !tbaa !55
  br label %66

; <label>:66                                      ; preds = %63, %58
  %triggers.1.i.i = phi %struct._tagTreeCCTrigger* [ %triggers.0.i.i, %63 ], [ %55, %58 ]
  %67 = tail call i32 @TreeCCNextToken(%struct.TreeCCInput* %26) #2
  %68 = load i32, i32* %39, align 4, !tbaa !97
  switch i32 %68, label %74 [
    i32 11, label %69
    i32 6, label %.thread.i.i.loopexit
  ]

; <label>:69                                      ; preds = %66
  %70 = tail call i32 @TreeCCNextToken(%struct.TreeCCInput* %26) #2
  %71 = load i32, i32* %39, align 4, !tbaa !97
  %72 = icmp eq i32 %71, 1
  br i1 %72, label %44, label %73

; <label>:73                                      ; preds = %69
  %triggers.1.i.i.lcssa181 = phi %struct._tagTreeCCTrigger* [ %triggers.1.i.i, %69 ]
  %.lcssa179 = phi %struct._tagTreeCCTrigger* [ %55, %69 ]
  %fatalError.2.i.i.lcssa176 = phi i32 [ %fatalError.2.i.i, %69 ]
  %.lcssa174 = phi i32 [ %47, %69 ]
  tail call void (%struct.TreeCCInput*, i8*, ...) @TreeCCError(%struct.TreeCCInput* %26, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.12.829, i64 0, i64 0)) #2
  br label %thread-pre-split.i.i

; <label>:74                                      ; preds = %66
  %triggers.1.i.i.lcssa = phi %struct._tagTreeCCTrigger* [ %triggers.1.i.i, %66 ]
  %fatalError.2.i.i.lcssa = phi i32 [ %fatalError.2.i.i, %66 ]
  %.lcssa172 = phi i32 [ %47, %66 ]
  tail call void (%struct.TreeCCInput*, i8*, ...) @TreeCCError(%struct.TreeCCInput* %26, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.7.830, i64 0, i64 0)) #2
  %.pr2.pre.i.i = load i32, i32* %39, align 4, !tbaa !97
  br label %.loopexit7.i.i

.loopexit7.i.i.loopexit:                          ; preds = %44
  %triggers.0.i.i.lcssa = phi %struct._tagTreeCCTrigger* [ %triggers.0.i.i, %44 ]
  %numTriggers.0.i.i.lcssa = phi i32 [ %numTriggers.0.i.i, %44 ]
  %fatalError.1.i.i.lcssa = phi i32 [ %fatalError.1.i.i, %44 ]
  %.pr253.i.i.lcssa = phi i32 [ %.pr253.i.i, %44 ]
  br label %.loopexit7.i.i

.loopexit7.i.i:                                   ; preds = %.loopexit7.i.i.loopexit, %74
  %.pr2.i.i = phi i32 [ %.pr2.pre.i.i, %74 ], [ %.pr253.i.i.lcssa, %.loopexit7.i.i.loopexit ]
  %fatalError.3.ph.i.i = phi i32 [ %fatalError.2.i.i.lcssa, %74 ], [ %fatalError.1.i.i.lcssa, %.loopexit7.i.i.loopexit ]
  %numTriggers.1.ph.i.i = phi i32 [ %.lcssa172, %74 ], [ %numTriggers.0.i.i.lcssa, %.loopexit7.i.i.loopexit ]
  %triggers.2.ph.i.i = phi %struct._tagTreeCCTrigger* [ %triggers.1.i.i.lcssa, %74 ], [ %triggers.0.i.i.lcssa, %.loopexit7.i.i.loopexit ]
  %75 = icmp eq i32 %.pr2.i.i, 6
  br i1 %75, label %.thread.i.i, label %77

.thread.i.i.loopexit:                             ; preds = %66
  %triggers.1.i.i.lcssa180 = phi %struct._tagTreeCCTrigger* [ %triggers.1.i.i, %66 ]
  %fatalError.2.i.i.lcssa175 = phi i32 [ %fatalError.2.i.i, %66 ]
  %.lcssa173 = phi i32 [ %47, %66 ]
  br label %.thread.i.i

.thread.i.i:                                      ; preds = %.thread.i.i.loopexit, %.loopexit7.i.i
  %triggers.25.i.i = phi %struct._tagTreeCCTrigger* [ %triggers.2.ph.i.i, %.loopexit7.i.i ], [ %triggers.1.i.i.lcssa180, %.thread.i.i.loopexit ]
  %numTriggers.14.i.i = phi i32 [ %numTriggers.1.ph.i.i, %.loopexit7.i.i ], [ %.lcssa173, %.thread.i.i.loopexit ]
  %fatalError.33.i.i = phi i32 [ %fatalError.3.ph.i.i, %.loopexit7.i.i ], [ %fatalError.2.i.i.lcssa175, %.thread.i.i.loopexit ]
  %76 = tail call i32 @TreeCCNextToken(%struct.TreeCCInput* %26) #2
  br label %79

; <label>:77                                      ; preds = %.loopexit7.i.i
  tail call void (%struct.TreeCCInput*, i8*, ...) @TreeCCError(%struct.TreeCCInput* %26, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.13.831, i64 0, i64 0)) #2
  br label %79

; <label>:78                                      ; preds = %37
  tail call void (%struct.TreeCCInput*, i8*, ...) @TreeCCError(%struct.TreeCCInput* %26, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.14.832, i64 0, i64 0)) #2
  br label %79

; <label>:79                                      ; preds = %78, %77, %.thread.i.i
  %fatalError.4.i.i = phi i32 [ %fatalError.33.i.i, %.thread.i.i ], [ %fatalError.3.ph.i.i, %77 ], [ %fatalError.0.i.i, %78 ]
  %numTriggers.2.i.i = phi i32 [ %numTriggers.14.i.i, %.thread.i.i ], [ %numTriggers.1.ph.i.i, %77 ], [ 0, %78 ]
  %triggers.3.i.i = phi %struct._tagTreeCCTrigger* [ %triggers.25.i.i, %.thread.i.i ], [ %triggers.2.ph.i.i, %77 ], [ null, %78 ]
  br i1 %34, label %80, label %._crit_edge.thread.i.i

; <label>:80                                      ; preds = %79
  %81 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %33, i64 0, i32 6
  %82 = load i32, i32* %81, align 4, !tbaa !76
  %83 = icmp eq i32 %82, %numTriggers.2.i.i
  br i1 %83, label %88, label %.thread6.i.i

.thread6.i.i:                                     ; preds = %80
  tail call void (%struct.TreeCCInput*, i8*, i64, i8*, ...) @TreeCCErrorOnLine(%struct.TreeCCInput* %26, i8* %28, i64 %30, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.15.833, i64 0, i64 0)) #2
  %84 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %33, i64 0, i32 7
  %85 = load i8*, i8** %84, align 8, !tbaa !121
  %86 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %33, i64 0, i32 8
  %87 = load i64, i64* %86, align 8, !tbaa !118
  tail call void (%struct.TreeCCInput*, i8*, i64, i8*, ...) @TreeCCErrorOnLine(%struct.TreeCCInput* %26, i8* %85, i64 %87, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.834, i64 0, i64 0)) #2
  br label %.preheader.i.i

; <label>:88                                      ; preds = %80
  %89 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %33, i64 0, i32 4
  %param.0.27.i.i = load %struct._tagTreeCCParam*, %struct._tagTreeCCParam** %89, align 8
  %90 = icmp eq %struct._tagTreeCCParam* %param.0.27.i.i, null
  br i1 %90, label %._crit_edge.thread.i.i, label %.lr.ph32.i.i.preheader

.lr.ph32.i.i.preheader:                           ; preds = %88
  br label %.lr.ph32.i.i

.lr.ph32.i.i:                                     ; preds = %.lr.ph32.i.i.preheader, %116
  %param.031.i.i = phi %struct._tagTreeCCParam* [ %param.0.i.i, %116 ], [ %param.0.27.i.i, %.lr.ph32.i.i.preheader ]
  %reportedError.030.i.i = phi i32 [ %reportedError.2.i.i, %116 ], [ 0, %.lr.ph32.i.i.preheader ]
  %fatalError.529.i.i = phi i32 [ %fatalError.7.i.i, %116 ], [ %fatalError.4.i.i, %.lr.ph32.i.i.preheader ]
  %newTrigger.028.i.i = phi %struct._tagTreeCCTrigger* [ %newTrigger.1.i.i, %116 ], [ %triggers.3.i.i, %.lr.ph32.i.i.preheader ]
  %91 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.031.i.i, i64 0, i32 2
  %92 = load i32, i32* %91, align 4, !tbaa !52
  %93 = and i32 %92, 1
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %116, label %95

; <label>:95                                      ; preds = %.lr.ph32.i.i
  %96 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.031.i.i, i64 0, i32 1
  %97 = load i8*, i8** %96, align 8, !tbaa !47
  %98 = tail call %struct._tagTreeCCNode* @TreeCCNodeFindByType(%struct._tagTreeCCContext* %context, i8* %97) #2
  %99 = icmp eq %struct._tagTreeCCNode* %98, null
  br i1 %99, label %113, label %100

; <label>:100                                     ; preds = %95
  %101 = getelementptr inbounds %struct._tagTreeCCTrigger, %struct._tagTreeCCTrigger* %newTrigger.028.i.i, i64 0, i32 0
  %102 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %101, align 8, !tbaa !53
  %103 = tail call i32 @TreeCCNodeInheritsFrom(%struct._tagTreeCCNode* %102, %struct._tagTreeCCNode* %98) #2
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %105, label %113

; <label>:105                                     ; preds = %100
  %106 = load %struct._tagTreeCCNode*, %struct._tagTreeCCNode** %101, align 8, !tbaa !53
  %107 = icmp eq %struct._tagTreeCCNode* %106, null
  br i1 %107, label %113, label %108

; <label>:108                                     ; preds = %105
  %109 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %106, i64 0, i32 4
  %110 = load i8*, i8** %109, align 8, !tbaa !36
  %111 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %98, i64 0, i32 4
  %112 = load i8*, i8** %111, align 8, !tbaa !36
  tail call void (%struct.TreeCCInput*, i8*, i64, i8*, ...) @TreeCCErrorOnLine(%struct.TreeCCInput* %26, i8* %28, i64 %30, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.17.835, i64 0, i64 0), i8* %110, i8* %112) #2
  br label %113

; <label>:113                                     ; preds = %108, %105, %100, %95
  %fatalError.6.i.i = phi i32 [ %fatalError.529.i.i, %100 ], [ 1, %108 ], [ %fatalError.529.i.i, %105 ], [ %fatalError.529.i.i, %95 ]
  %reportedError.1.i.i = phi i32 [ %reportedError.030.i.i, %100 ], [ 1, %108 ], [ %reportedError.030.i.i, %105 ], [ %reportedError.030.i.i, %95 ]
  %114 = getelementptr inbounds %struct._tagTreeCCTrigger, %struct._tagTreeCCTrigger* %newTrigger.028.i.i, i64 0, i32 1
  %115 = load %struct._tagTreeCCTrigger*, %struct._tagTreeCCTrigger** %114, align 8, !tbaa !55
  br label %116

; <label>:116                                     ; preds = %113, %.lr.ph32.i.i
  %newTrigger.1.i.i = phi %struct._tagTreeCCTrigger* [ %115, %113 ], [ %newTrigger.028.i.i, %.lr.ph32.i.i ]
  %fatalError.7.i.i = phi i32 [ %fatalError.6.i.i, %113 ], [ %fatalError.529.i.i, %.lr.ph32.i.i ]
  %reportedError.2.i.i = phi i32 [ %reportedError.1.i.i, %113 ], [ %reportedError.030.i.i, %.lr.ph32.i.i ]
  %117 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %param.031.i.i, i64 0, i32 4
  %param.0.i.i = load %struct._tagTreeCCParam*, %struct._tagTreeCCParam** %117, align 8
  %118 = icmp eq %struct._tagTreeCCParam* %param.0.i.i, null
  br i1 %118, label %._crit_edge.i.i, label %.lr.ph32.i.i

._crit_edge.i.i:                                  ; preds = %116
  %reportedError.2.i.i.lcssa = phi i32 [ %reportedError.2.i.i, %116 ]
  %fatalError.7.i.i.lcssa = phi i32 [ %fatalError.7.i.i, %116 ]
  %119 = icmp eq i32 %reportedError.2.i.i.lcssa, 0
  br i1 %119, label %._crit_edge.thread.i.i, label %120

; <label>:120                                     ; preds = %._crit_edge.i.i
  %121 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %33, i64 0, i32 7
  %122 = load i8*, i8** %121, align 8, !tbaa !121
  %123 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %33, i64 0, i32 8
  %124 = load i64, i64* %123, align 8, !tbaa !118
  tail call void (%struct.TreeCCInput*, i8*, i64, i8*, ...) @TreeCCErrorOnLine(%struct.TreeCCInput* %26, i8* %122, i64 %124, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.834, i64 0, i64 0)) #2
  br label %._crit_edge.thread.i.i

._crit_edge.thread.i.i:                           ; preds = %120, %._crit_edge.i.i, %88, %79
  %fatalError.8.i.i = phi i32 [ %fatalError.4.i.i, %79 ], [ %fatalError.7.i.i.lcssa, %._crit_edge.i.i ], [ %fatalError.7.i.i.lcssa, %120 ], [ %fatalError.4.i.i, %88 ]
  %125 = icmp eq i32 %fatalError.8.i.i, 0
  br i1 %125, label %ParseOperationHeader.exit.i, label %.preheader.i.i

.preheader.i.i:                                   ; preds = %._crit_edge.thread.i.i, %.thread6.i.i
  %126 = icmp eq %struct._tagTreeCCTrigger* %triggers.3.i.i, null
  br i1 %126, label %ParseOperationHeader.exit.thread.i, label %.lr.ph.i.i.preheader

.lr.ph.i.i.preheader:                             ; preds = %.preheader.i.i
  br label %.lr.ph.i.i

.lr.ph.i.i:                                       ; preds = %.lr.ph.i.i.preheader, %.lr.ph.i.i
  %triggers.426.i.i = phi %struct._tagTreeCCTrigger* [ %128, %.lr.ph.i.i ], [ %triggers.3.i.i, %.lr.ph.i.i.preheader ]
  %127 = getelementptr inbounds %struct._tagTreeCCTrigger, %struct._tagTreeCCTrigger* %triggers.426.i.i, i64 0, i32 1
  %128 = load %struct._tagTreeCCTrigger*, %struct._tagTreeCCTrigger** %127, align 8, !tbaa !55
  %129 = bitcast %struct._tagTreeCCTrigger* %triggers.426.i.i to i8*
  tail call void @free(i8* %129) #2
  %130 = icmp eq %struct._tagTreeCCTrigger* %128, null
  br i1 %130, label %ParseOperationHeader.exit.thread.i.loopexit, label %.lr.ph.i.i

ParseOperationHeader.exit.i:                      ; preds = %._crit_edge.thread.i.i
  %131 = tail call %struct._tagTreeCCOperationCase* @TreeCCOperationAddCase(%struct._tagTreeCCContext* %context, %struct._tagTreeCCOperation* %33, %struct._tagTreeCCTrigger* %triggers.3.i.i, i8* %28, i64 %30) #2
  %132 = icmp eq %struct._tagTreeCCOperationCase* %131, null
  br i1 %132, label %ParseOperationHeader.exit.thread.i, label %133

; <label>:133                                     ; preds = %ParseOperationHeader.exit.i
  %134 = getelementptr inbounds %struct._tagTreeCCOperationCase, %struct._tagTreeCCOperationCase* %131, i64 0, i32 9
  store %struct._tagTreeCCOperationCase* %caseList.023.i, %struct._tagTreeCCOperationCase** %134, align 8, !tbaa !120
  br label %ParseOperationHeader.exit.thread.i

ParseOperationHeader.exit.thread.i.loopexit:      ; preds = %.lr.ph.i.i
  br label %ParseOperationHeader.exit.thread.i

ParseOperationHeader.exit.thread.i:               ; preds = %ParseOperationHeader.exit.thread.i.loopexit, %133, %ParseOperationHeader.exit.i, %.preheader.i.i
  %caseList.1.i = phi %struct._tagTreeCCOperationCase* [ %131, %133 ], [ %caseList.023.i, %ParseOperationHeader.exit.i ], [ %caseList.023.i, %.preheader.i.i ], [ %caseList.023.i, %ParseOperationHeader.exit.thread.i.loopexit ]
  %135 = load i32, i32* %25, align 4, !tbaa !97
  switch i32 %135, label %ParseOperationHeader.exit.thread._crit_edge.i [
    i32 1, label %136
    i32 11, label %138
  ]

; <label>:136                                     ; preds = %ParseOperationHeader.exit.thread.i
  tail call void (%struct.TreeCCInput*, i8*, ...) @TreeCCError(%struct.TreeCCInput* %24, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.7.830, i64 0, i64 0)) #2
  br label %.backedge.i

.backedge.i:                                      ; preds = %142, %136
  %.pr.i = load i32, i32* %25, align 4, !tbaa !97
  %137 = icmp eq i32 %.pr.i, 1
  br i1 %137, label %.backedge._crit_edge.i, label %ParseOperationHeader.exit.thread._crit_edge.i

.backedge._crit_edge.i:                           ; preds = %138, %.backedge.i
  %.pre.i = load %struct.TreeCCInput*, %struct.TreeCCInput** %1, align 8, !tbaa !1
  br label %.lr.ph24.i

; <label>:138                                     ; preds = %ParseOperationHeader.exit.thread.i
  %139 = tail call i32 @TreeCCNextToken(%struct.TreeCCInput* %24) #2
  %140 = load i32, i32* %25, align 4, !tbaa !97
  %141 = icmp eq i32 %140, 1
  br i1 %141, label %.backedge._crit_edge.i, label %142

; <label>:142                                     ; preds = %138
  tail call void (%struct.TreeCCInput*, i8*, ...) @TreeCCError(%struct.TreeCCInput* %24, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.8.836, i64 0, i64 0)) #2
  br label %.backedge.i

ParseOperationHeader.exit.thread._crit_edge.i:    ; preds = %.backedge.i, %ParseOperationHeader.exit.thread.i
  %caseList.1.i.lcssa = phi %struct._tagTreeCCOperationCase* [ %caseList.1.i, %.backedge.i ], [ %caseList.1.i, %ParseOperationHeader.exit.thread.i ]
  %143 = phi i32 [ %.pr.i, %.backedge.i ], [ %135, %ParseOperationHeader.exit.thread.i ]
  %144 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %24, i64 0, i32 4
  %145 = bitcast i8** %144 to <2 x i64>*
  %146 = load <2 x i64>, <2 x i64>* %145, align 8, !tbaa !27
  %147 = icmp eq i32 %143, 3
  br i1 %147, label %148, label %.thread.i

.thread.i:                                        ; preds = %ParseOperationHeader.exit.thread._crit_edge.i
  tail call void (%struct.TreeCCInput*, i8*, ...) @TreeCCError(%struct.TreeCCInput* %24, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.9.837, i64 0, i64 0)) #2
  br label %.critedge4

; <label>:148                                     ; preds = %ParseOperationHeader.exit.thread._crit_edge.i
  %149 = tail call i8* @TreeCCValue(%struct.TreeCCInput* %24) #2
  %150 = tail call i32 @TreeCCNextToken(%struct.TreeCCInput* %24) #2
  %151 = icmp eq i8* %149, null
  %152 = icmp eq %struct._tagTreeCCOperationCase* %caseList.1.i.lcssa, null
  %or.cond.i = or i1 %152, %151
  br i1 %or.cond.i, label %.critedge4, label %.lr.ph.i.preheader

.lr.ph.i.preheader:                               ; preds = %148
  br label %.lr.ph.i

.lr.ph.i:                                         ; preds = %.lr.ph.i.preheader, %.lr.ph.i
  %operCase.022.i = phi %struct._tagTreeCCOperationCase* [ %157, %.lr.ph.i ], [ %caseList.1.i.lcssa, %.lr.ph.i.preheader ]
  %153 = getelementptr inbounds %struct._tagTreeCCOperationCase, %struct._tagTreeCCOperationCase* %operCase.022.i, i64 0, i32 1
  store i8* %149, i8** %153, align 8, !tbaa !58
  %154 = getelementptr inbounds %struct._tagTreeCCOperationCase, %struct._tagTreeCCOperationCase* %operCase.022.i, i64 0, i32 6
  %155 = bitcast i8** %154 to <2 x i64>*
  store <2 x i64> %146, <2 x i64>* %155, align 8, !tbaa !27
  %156 = getelementptr inbounds %struct._tagTreeCCOperationCase, %struct._tagTreeCCOperationCase* %operCase.022.i, i64 0, i32 9
  %157 = load %struct._tagTreeCCOperationCase*, %struct._tagTreeCCOperationCase** %156, align 8, !tbaa !120
  %158 = icmp eq %struct._tagTreeCCOperationCase* %157, null
  br i1 %158, label %.critedge4.loopexit133, label %.lr.ph.i

.critedge:                                        ; preds = %.critedge.preheader, %167
  %159 = phi %struct.TreeCCInput* [ %169, %167 ], [ %24, %.critedge.preheader ]
  %160 = phi i32 [ %171, %167 ], [ %23, %.critedge.preheader ]
  %flags.050 = phi i32 [ %flags.1, %167 ], [ 0, %.critedge.preheader ]
  switch i32 %160, label %165 [
    i32 31, label %161
    i32 32, label %163
  ]

; <label>:161                                     ; preds = %.critedge
  %162 = or i32 %flags.050, 3
  br label %167

; <label>:163                                     ; preds = %.critedge
  %164 = or i32 %flags.050, 2
  br label %167

; <label>:165                                     ; preds = %.critedge
  %166 = or i32 %flags.050, 4
  br label %167

; <label>:167                                     ; preds = %163, %165, %161
  %flags.1 = phi i32 [ %162, %161 ], [ %164, %163 ], [ %166, %165 ]
  %168 = tail call i32 @TreeCCNextToken(%struct.TreeCCInput* %159) #2
  %169 = load %struct.TreeCCInput*, %struct.TreeCCInput** %1, align 8, !tbaa !1
  %170 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %169, i64 0, i32 0
  %171 = load i32, i32* %170, align 4, !tbaa !97
  %.off = add i32 %171, -31
  %switch = icmp ult i32 %.off, 3
  br i1 %switch, label %.critedge, label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %167
  %.lcssa159 = phi i32 [ %171, %167 ]
  %.lcssa158 = phi %struct.TreeCCInput* [ %169, %167 ]
  %flags.1.lcssa = phi i32 [ %flags.1, %167 ]
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %.preheader
  %.lcssa25 = phi i32 [ %23, %.preheader ], [ %.lcssa159, %._crit_edge.loopexit ]
  %.lcssa24 = phi %struct.TreeCCInput* [ %24, %.preheader ], [ %.lcssa158, %._crit_edge.loopexit ]
  %flags.0.lcssa = phi i32 [ 0, %.preheader ], [ %flags.1.lcssa, %._crit_edge.loopexit ]
  %172 = lshr i32 %flags.0.lcssa, 1
  %173 = and i32 %172, 1
  %174 = xor i32 %173, 1
  %175 = or i32 %174, %flags.0.lcssa
  switch i32 %.lcssa25, label %.critedge3 [
    i32 2, label %176
    i32 4, label %178
  ]

; <label>:176                                     ; preds = %._crit_edge
  %177 = tail call i8* @TreeCCValue(%struct.TreeCCInput* %.lcssa24) #2
  tail call void @TreeCCAddLiteralDefn(%struct._tagTreeCCContext* %context, i8* %177, i32 %175) #2
  br label %728

; <label>:178                                     ; preds = %._crit_edge
  %179 = tail call i8* @TreeCCValue(%struct.TreeCCInput* %.lcssa24) #2
  %180 = or i32 %175, 4
  tail call void @TreeCCAddLiteralDefn(%struct._tagTreeCCContext* %context, i8* %179, i32 %180) #2
  br label %728

.critedge3:                                       ; preds = %._crit_edge
  tail call void (%struct.TreeCCInput*, i8*, ...) @TreeCCError(%struct.TreeCCInput* %.lcssa24, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.838, i64 0, i64 0)) #2
  br label %.critedge4

; <label>:181                                     ; preds = %22
  call void @llvm.lifetime.start(i64 8, i8* %5) #2
  call void @llvm.lifetime.start(i64 8, i8* %6) #2
  %182 = tail call i32 @TreeCCNextToken(%struct.TreeCCInput* %24) #2
  %183 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %24, i64 0, i32 5
  %184 = load i64, i64* %183, align 8, !tbaa !23
  %185 = load i32, i32* %25, align 4, !tbaa !97
  %186 = icmp eq i32 %185, 1
  br i1 %186, label %188, label %187

; <label>:187                                     ; preds = %181
  tail call void (%struct.TreeCCInput*, i8*, ...) @TreeCCError(%struct.TreeCCInput* %24, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.8.836, i64 0, i64 0)) #2
  br label %ParseNode.exit

; <label>:188                                     ; preds = %181
  %189 = tail call i8* @TreeCCValue(%struct.TreeCCInput* %24) #2
  %190 = tail call i32 @TreeCCNextToken(%struct.TreeCCInput* %24) #2
  %191 = load i32, i32* %25, align 4, !tbaa !97
  %192 = icmp eq i32 %191, 1
  br i1 %192, label %193, label %196

; <label>:193                                     ; preds = %188
  %194 = tail call i8* @TreeCCValue(%struct.TreeCCInput* %24) #2
  %195 = tail call i32 @TreeCCNextToken(%struct.TreeCCInput* %24) #2
  br label %196

; <label>:196                                     ; preds = %193, %188
  %parent.0.i = phi i8* [ %194, %193 ], [ null, %188 ]
  br label %.backedge8.i

.backedge8.i:                                     ; preds = %.backedge8.i.backedge, %196
  %flags.0.i = phi i32 [ 0, %196 ], [ %flags.0.i.be, %.backedge8.i.backedge ]
  %197 = load i32, i32* %25, align 4, !tbaa !97
  switch i32 %197, label %204 [
    i32 20, label %198
    i32 21, label %201
  ]

; <label>:198                                     ; preds = %.backedge8.i
  %199 = or i32 %flags.0.i, 2
  %200 = tail call i32 @TreeCCNextToken(%struct.TreeCCInput* %24) #2
  br label %.backedge8.i.backedge

.backedge8.i.backedge:                            ; preds = %198, %201
  %flags.0.i.be = phi i32 [ %199, %198 ], [ %202, %201 ]
  br label %.backedge8.i

; <label>:201                                     ; preds = %.backedge8.i
  %202 = or i32 %flags.0.i, 4
  %203 = tail call i32 @TreeCCNextToken(%struct.TreeCCInput* %24) #2
  br label %.backedge8.i.backedge

; <label>:204                                     ; preds = %.backedge8.i
  %flags.0.i.lcssa = phi i32 [ %flags.0.i, %.backedge8.i ]
  %205 = tail call %struct._tagTreeCCNode* @TreeCCNodeCreate(%struct._tagTreeCCContext* %context, i64 %184, i8* %189, i8* %parent.0.i, i32 %flags.0.i.lcssa) #2
  %206 = load i32, i32* %25, align 4, !tbaa !97
  %207 = icmp eq i32 %206, 12
  br i1 %207, label %208, label %ParseNode.exit

; <label>:208                                     ; preds = %204
  %209 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %24, i64 0, i32 9
  store i32 0, i32* %209, align 4, !tbaa !106
  %210 = tail call i32 @TreeCCNextToken(%struct.TreeCCInput* %24) #2
  store i32 1, i32* %209, align 4, !tbaa !106
  %211 = load i32, i32* %25, align 4, !tbaa !97
  %212 = icmp eq i32 %211, 7
  br i1 %212, label %213, label %257

; <label>:213                                     ; preds = %208
  %214 = tail call i32 @TreeCCNextToken(%struct.TreeCCInput* %24) #2
  br label %thread-pre-split.i

thread-pre-split.i:                               ; preds = %thread-pre-split.i.backedge, %213
  %.pr.i.6 = load i32, i32* %25, align 4, !tbaa !97
  br label %.backedge.i.7

.backedge.i.7:                                    ; preds = %.backedge.i.7.backedge, %thread-pre-split.i
  %215 = phi i32 [ %.pr.i.6, %thread-pre-split.i ], [ %252, %.backedge.i.7.backedge ]
  switch i32 %215, label %220 [
    i32 8, label %255
    i32 0, label %255
    i32 15, label %216
    i32 23, label %218
  ]

; <label>:216                                     ; preds = %.backedge.i.7
  %217 = tail call i32 @TreeCCNextToken(%struct.TreeCCInput* %24) #2
  br label %thread-pre-split.i.backedge

thread-pre-split.i.backedge:                      ; preds = %216, %249, %253
  br label %thread-pre-split.i

; <label>:218                                     ; preds = %.backedge.i.7
  %219 = tail call i32 @TreeCCNextToken(%struct.TreeCCInput* %24) #2
  br label %220

; <label>:220                                     ; preds = %218, %.backedge.i.7
  %flags.1.i = phi i32 [ 1, %218 ], [ 0, %.backedge.i.7 ]
  call fastcc void @ParseTypeAndName(%struct.TreeCCInput* %24, i8** nonnull %fieldType.i, i8** nonnull %fieldName.i) #2
  %221 = load i8*, i8** %fieldType.i, align 8, !tbaa !7
  %222 = icmp ne i8* %221, null
  %223 = load i8*, i8** %fieldName.i, align 8
  %224 = icmp ne i8* %223, null
  %or.cond.i.8 = and i1 %222, %224
  br i1 %or.cond.i.8, label %225, label %239

; <label>:225                                     ; preds = %220
  %226 = load i32, i32* %25, align 4, !tbaa !97
  %227 = icmp eq i32 %226, 12
  br i1 %227, label %228, label %.thread.i.9

; <label>:228                                     ; preds = %225
  %229 = tail call i32 @TreeCCNextToken(%struct.TreeCCInput* %24) #2
  %230 = load i32, i32* %25, align 4, !tbaa !97
  %231 = icmp eq i32 %230, 3
  br i1 %231, label %233, label %232

; <label>:232                                     ; preds = %228
  tail call void (%struct.TreeCCInput*, i8*, ...) @TreeCCError(%struct.TreeCCInput* %24, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.18.839, i64 0, i64 0)) #2
  br label %.thread.i.9

; <label>:233                                     ; preds = %228
  %234 = tail call i8* @TreeCCValue(%struct.TreeCCInput* %24) #2
  %235 = tail call i32 @TreeCCNextToken(%struct.TreeCCInput* %24) #2
  %236 = icmp ne i8* %234, null
  %237 = icmp eq i32 %flags.1.i, 0
  %or.cond4.i = and i1 %237, %236
  br i1 %or.cond4.i, label %238, label %.thread.i.9

; <label>:238                                     ; preds = %233
  tail call void (%struct.TreeCCInput*, i8*, ...) @TreeCCError(%struct.TreeCCInput* %24, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.19.840, i64 0, i64 0)) #2
  br label %.thread.i.9

.thread.i.9:                                      ; preds = %238, %233, %232, %225
  %fieldValue.06.i = phi i8* [ %234, %233 ], [ %234, %238 ], [ null, %232 ], [ null, %225 ]
  tail call void @TreeCCFieldCreate(%struct._tagTreeCCContext* %context, %struct._tagTreeCCNode* %205, i8* %223, i8* %221, i8* %fieldValue.06.i, i32 %flags.1.i) #2
  %.pr7.i = load i32, i32* %25, align 4, !tbaa !97
  br label %.critedge.i

; <label>:239                                     ; preds = %220
  br i1 %222, label %240, label %.thread9.i

.thread9.i:                                       ; preds = %239
  tail call void (%struct.TreeCCInput*, i8*, ...) @TreeCCError(%struct.TreeCCInput* %24, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.21.841, i64 0, i64 0)) #2
  br label %241

; <label>:240                                     ; preds = %239
  tail call void (%struct.TreeCCInput*, i8*, ...) @TreeCCError(%struct.TreeCCInput* %24, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.20.842, i64 0, i64 0)) #2
  tail call void @free(i8* %221) #2
  br label %241

; <label>:241                                     ; preds = %240, %.thread9.i
  %242 = icmp eq i8* %223, null
  br i1 %242, label %.preheader.i.preheader, label %243

; <label>:243                                     ; preds = %241
  tail call void @free(i8* %223) #2
  br label %.preheader.i.preheader

.preheader.i.preheader:                           ; preds = %241, %243
  br label %.preheader.i

.preheader.i:                                     ; preds = %.preheader.i.preheader, %245
  %244 = load i32, i32* %25, align 4, !tbaa !97
  switch i32 %244, label %245 [
    i32 15, label %.critedge.i.loopexit
    i32 8, label %.critedge.i.loopexit
    i32 1, label %.critedge.i.loopexit
    i32 0, label %.critedge.i.loopexit
  ]

; <label>:245                                     ; preds = %.preheader.i
  %246 = tail call i32 @TreeCCNextToken(%struct.TreeCCInput* %24) #2
  br label %.preheader.i

.critedge.i.loopexit:                             ; preds = %.preheader.i, %.preheader.i, %.preheader.i, %.preheader.i
  %.lcssa = phi i32 [ %244, %.preheader.i ], [ %244, %.preheader.i ], [ %244, %.preheader.i ], [ %244, %.preheader.i ]
  br label %.critedge.i

.critedge.i:                                      ; preds = %.critedge.i.loopexit, %.thread.i.9
  %247 = phi i32 [ %.pr7.i, %.thread.i.9 ], [ %.lcssa, %.critedge.i.loopexit ]
  %248 = icmp eq i32 %247, 15
  br i1 %248, label %249, label %251

; <label>:249                                     ; preds = %.critedge.i
  %250 = tail call i32 @TreeCCNextToken(%struct.TreeCCInput* %24) #2
  br label %thread-pre-split.i.backedge

; <label>:251                                     ; preds = %.critedge.i
  tail call void (%struct.TreeCCInput*, i8*, ...) @TreeCCError(%struct.TreeCCInput* %24, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.22.843, i64 0, i64 0)) #2
  %252 = load i32, i32* %25, align 4, !tbaa !97
  switch i32 %252, label %253 [
    i32 1, label %.backedge.i.7.backedge
    i32 8, label %.backedge.i.7.backedge
  ]

.backedge.i.7.backedge:                           ; preds = %251, %251
  br label %.backedge.i.7

; <label>:253                                     ; preds = %251
  %254 = tail call i32 @TreeCCNextToken(%struct.TreeCCInput* %24) #2
  br label %thread-pre-split.i.backedge

; <label>:255                                     ; preds = %.backedge.i.7, %.backedge.i.7
  %256 = tail call i32 @TreeCCNextToken(%struct.TreeCCInput* %24) #2
  br label %ParseNode.exit

; <label>:257                                     ; preds = %208
  tail call void (%struct.TreeCCInput*, i8*, ...) @TreeCCError(%struct.TreeCCInput* %24, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.23.844, i64 0, i64 0)) #2
  br label %ParseNode.exit

ParseNode.exit:                                   ; preds = %187, %204, %255, %257
  call void @llvm.lifetime.end(i64 8, i8* %6) #2
  call void @llvm.lifetime.end(i64 8, i8* %5) #2
  br label %.critedge4

; <label>:258                                     ; preds = %22
  call void @llvm.lifetime.start(i64 8, i8* %7) #2
  call void @llvm.lifetime.start(i64 8, i8* %8) #2
  call void @llvm.lifetime.start(i64 8, i8* %9) #2
  call void @llvm.lifetime.start(i64 8, i8* %10) #2
  %259 = tail call i32 @TreeCCNextToken(%struct.TreeCCInput* %24) #2
  br label %.backedge33.i

.backedge33.i:                                    ; preds = %.backedge33.i.backedge, %258
  %flags.0.i.10 = phi i32 [ 0, %258 ], [ %flags.0.i.10.be, %.backedge33.i.backedge ]
  %260 = load i32, i32* %25, align 4, !tbaa !97
  switch i32 %260, label %270 [
    i32 24, label %261
    i32 25, label %264
    i32 26, label %267
  ]

; <label>:261                                     ; preds = %.backedge33.i
  %262 = or i32 %flags.0.i.10, 1
  %263 = tail call i32 @TreeCCNextToken(%struct.TreeCCInput* %24) #2
  br label %.backedge33.i.backedge

.backedge33.i.backedge:                           ; preds = %261, %264, %267
  %flags.0.i.10.be = phi i32 [ %262, %261 ], [ %265, %264 ], [ %268, %267 ]
  br label %.backedge33.i

; <label>:264                                     ; preds = %.backedge33.i
  %265 = or i32 %flags.0.i.10, 2
  %266 = tail call i32 @TreeCCNextToken(%struct.TreeCCInput* %24) #2
  br label %.backedge33.i.backedge

; <label>:267                                     ; preds = %.backedge33.i
  %268 = or i32 %flags.0.i.10, 4
  %269 = tail call i32 @TreeCCNextToken(%struct.TreeCCInput* %24) #2
  br label %.backedge33.i.backedge

; <label>:270                                     ; preds = %.backedge33.i
  %flags.0.i.10.lcssa = phi i32 [ %flags.0.i.10, %.backedge33.i ]
  %271 = and i32 %flags.0.i.10.lcssa, 3
  %272 = icmp eq i32 %271, 3
  br i1 %272, label %273, label %275

; <label>:273                                     ; preds = %270
  tail call void (%struct.TreeCCInput*, i8*, ...) @TreeCCError(%struct.TreeCCInput* %24, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.28.845, i64 0, i64 0)) #2
  %274 = and i32 %flags.0.i.10.lcssa, -3
  br label %275

; <label>:275                                     ; preds = %273, %270
  %flags.1.i.11 = phi i32 [ %274, %273 ], [ %flags.0.i.10.lcssa, %270 ]
  call fastcc void @ParseTypeAndName(%struct.TreeCCInput* %24, i8** nonnull %returnType.i, i8** nonnull %name.i) #2
  %276 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %24, i64 0, i32 4
  %277 = load i8*, i8** %276, align 8, !tbaa !21
  %278 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %24, i64 0, i32 5
  %279 = load i64, i64* %278, align 8, !tbaa !23
  %280 = load i8*, i8** %returnType.i, align 8, !tbaa !7
  %281 = icmp ne i8* %280, null
  %282 = load i8*, i8** %name.i, align 8
  %283 = icmp ne i8* %282, null
  %or.cond.i.12 = and i1 %281, %283
  br i1 %or.cond.i.12, label %289, label %284

; <label>:284                                     ; preds = %275
  br i1 %281, label %285, label %.thread.i.13

.thread.i.13:                                     ; preds = %284
  tail call void (%struct.TreeCCInput*, i8*, ...) @TreeCCError(%struct.TreeCCInput* %24, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.30.846, i64 0, i64 0)) #2
  br label %286

; <label>:285                                     ; preds = %284
  tail call void (%struct.TreeCCInput*, i8*, ...) @TreeCCError(%struct.TreeCCInput* %24, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.29.847, i64 0, i64 0)) #2
  tail call void @free(i8* %280) #2
  br label %286

; <label>:286                                     ; preds = %285, %.thread.i.13
  %287 = icmp eq i8* %282, null
  br i1 %287, label %ParseOperation.exit, label %288

; <label>:288                                     ; preds = %286
  tail call void @free(i8* %282) #2
  br label %ParseOperation.exit

; <label>:289                                     ; preds = %275
  %290 = load i32, i32* %25, align 4, !tbaa !97
  %291 = icmp eq i32 %290, 16
  br i1 %291, label %292, label %300

; <label>:292                                     ; preds = %289
  %293 = tail call i32 @TreeCCNextToken(%struct.TreeCCInput* %24) #2
  %294 = load i32, i32* %25, align 4, !tbaa !97
  %295 = icmp eq i32 %294, 1
  br i1 %295, label %297, label %296

; <label>:296                                     ; preds = %292
  tail call void (%struct.TreeCCInput*, i8*, ...) @TreeCCError(%struct.TreeCCInput* %24, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.29.847, i64 0, i64 0)) #2
  tail call void @free(i8* %280) #2
  tail call void @free(i8* %282) #2
  br label %ParseOperation.exit

; <label>:297                                     ; preds = %292
  %298 = tail call i8* @TreeCCValue(%struct.TreeCCInput* %24) #2
  store i8* %298, i8** %name.i, align 8, !tbaa !7
  %299 = tail call i32 @TreeCCNextToken(%struct.TreeCCInput* %24) #2
  br label %300

; <label>:300                                     ; preds = %297, %289
  %301 = phi i8* [ %298, %297 ], [ %282, %289 ]
  %className.0.i = phi i8* [ %282, %297 ], [ null, %289 ]
  %302 = and i32 %flags.1.i.11, 1
  %303 = icmp eq i32 %302, 0
  br i1 %303, label %304, label %314

; <label>:304                                     ; preds = %300
  %305 = load i32, i32* %11, align 4, !tbaa !9
  %306 = icmp eq i32 %305, 3
  br i1 %306, label %307, label %314

; <label>:307                                     ; preds = %304
  %308 = icmp eq i8* %className.0.i, null
  br i1 %308, label %309, label %310

; <label>:309                                     ; preds = %307
  tail call void (%struct.TreeCCInput*, i8*, i64, i8*, ...) @TreeCCErrorOnLine(%struct.TreeCCInput* %24, i8* %277, i64 %279, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.31.848, i64 0, i64 0)) #2
  br label %314

; <label>:310                                     ; preds = %307
  %311 = tail call i32 @strcmp(i8* %className.0.i, i8* %301) #2
  %312 = icmp eq i32 %311, 0
  br i1 %312, label %313, label %314

; <label>:313                                     ; preds = %310
  tail call void (%struct.TreeCCInput*, i8*, i64, i8*, ...) @TreeCCErrorOnLine(%struct.TreeCCInput* %24, i8* %277, i64 %279, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.32.849, i64 0, i64 0)) #2
  br label %314

; <label>:314                                     ; preds = %313, %310, %309, %304, %300
  %315 = load i32, i32* %25, align 4, !tbaa !97
  %316 = icmp eq i32 %315, 5
  br i1 %316, label %317, label %405

; <label>:317                                     ; preds = %314
  %318 = tail call i32 @TreeCCNextToken(%struct.TreeCCInput* %24) #2
  br label %thread-pre-split.i.15

thread-pre-split.i.15:                            ; preds = %399, %317
  %numTriggers.0.ph.i = phi i32 [ %numTriggers.1.i.lcssa, %399 ], [ 0, %317 ]
  %lastParam.0.ph.i = phi %struct._tagTreeCCParam* [ %lastParam.1.i.lcssa, %399 ], [ null, %317 ]
  %params.0.ph.i = phi %struct._tagTreeCCParam* [ %params.2.i.lcssa, %399 ], [ null, %317 ]
  %.pr.i.14 = load i32, i32* %25, align 4, !tbaa !97
  br label %.backedge.i.16

.backedge.i.16:                                   ; preds = %.backedge.i.16.backedge, %thread-pre-split.i.15
  %.pr31.i = phi i32 [ %.pr.i.14, %thread-pre-split.i.15 ], [ %398, %.backedge.i.16.backedge ]
  %numTriggers.0.i = phi i32 [ %numTriggers.0.ph.i, %thread-pre-split.i.15 ], [ %numTriggers.1.i, %.backedge.i.16.backedge ]
  %lastParam.0.i = phi %struct._tagTreeCCParam* [ %lastParam.0.ph.i, %thread-pre-split.i.15 ], [ %lastParam.1.i, %.backedge.i.16.backedge ]
  %params.0.i = phi %struct._tagTreeCCParam* [ %params.0.ph.i, %thread-pre-split.i.15 ], [ %params.2.i, %.backedge.i.16.backedge ]
  switch i32 %.pr31.i, label %thread-pre-split30.i [
    i32 1, label %319
    i32 9, label %320
  ]

; <label>:319                                     ; preds = %.backedge.i.16
  call fastcc void @ParseTypeAndName(%struct.TreeCCInput* %24, i8** nonnull %paramType.i, i8** nonnull %paramName.i) #2
  br label %329

; <label>:320                                     ; preds = %.backedge.i.16
  %321 = tail call i32 @TreeCCNextToken(%struct.TreeCCInput* %24) #2
  call fastcc void @ParseTypeAndName(%struct.TreeCCInput* %24, i8** nonnull %paramType.i, i8** nonnull %paramName.i) #2
  %322 = load i32, i32* %25, align 4, !tbaa !97
  %323 = icmp eq i32 %322, 10
  br i1 %323, label %324, label %326

; <label>:324                                     ; preds = %320
  %325 = tail call i32 @TreeCCNextToken(%struct.TreeCCInput* %24) #2
  br label %327

; <label>:326                                     ; preds = %320
  tail call void (%struct.TreeCCInput*, i8*, ...) @TreeCCError(%struct.TreeCCInput* %24, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.27.850, i64 0, i64 0)) #2
  br label %327

; <label>:327                                     ; preds = %326, %324
  %328 = add nsw i32 %numTriggers.0.i, 1
  br label %329

; <label>:329                                     ; preds = %327, %319
  %paramFlags.0.i = phi i32 [ 0, %319 ], [ 1, %327 ]
  %numTriggers.1.i = phi i32 [ %numTriggers.0.i, %319 ], [ %328, %327 ]
  %330 = load i8*, i8** %paramType.i, align 8, !tbaa !7
  %331 = icmp eq i8* %330, null
  %332 = ptrtoint i8* %330 to i64
  br i1 %331, label %333, label %334

; <label>:333                                     ; preds = %329
  tail call void (%struct.TreeCCInput*, i8*, ...) @TreeCCError(%struct.TreeCCInput* %24, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.33.851, i64 0, i64 0)) #2
  br label %ValidateSuffixes.exit.i

; <label>:334                                     ; preds = %329
  %335 = tail call i32 @strcmp(i8* %330, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.34.852, i64 0, i64 0)) #2
  %336 = icmp eq i32 %335, 0
  br i1 %336, label %337, label %341

; <label>:337                                     ; preds = %334
  tail call void @free(i8* %330) #2
  %338 = load i8*, i8** %paramName.i, align 8, !tbaa !7
  %339 = icmp eq i8* %338, null
  br i1 %339, label %ValidateSuffixes.exit.i, label %340

; <label>:340                                     ; preds = %337
  tail call void @free(i8* %338) #2
  br label %ValidateSuffixes.exit.i

; <label>:341                                     ; preds = %334
  %342 = tail call noalias i8* @malloc(i64 32) #2
  %343 = bitcast i8* %342 to %struct._tagTreeCCParam*
  %344 = icmp eq i8* %342, null
  br i1 %344, label %345, label %346

; <label>:345                                     ; preds = %341
  tail call void @TreeCCOutOfMemory(%struct.TreeCCInput* %24) #2
  br label %346

; <label>:346                                     ; preds = %345, %341
  %347 = load i64, i64* %12, align 8, !tbaa !7
  %348 = bitcast i8* %342 to i64*
  store i64 %347, i64* %348, align 8, !tbaa !41
  %349 = getelementptr inbounds i8, i8* %342, i64 8
  %350 = bitcast i8* %349 to i64*
  store i64 %332, i64* %350, align 8, !tbaa !47
  %351 = getelementptr inbounds i8, i8* %342, i64 16
  %352 = bitcast i8* %351 to i32*
  store i32 %paramFlags.0.i, i32* %352, align 4, !tbaa !52
  %353 = getelementptr inbounds i8, i8* %342, i64 20
  %354 = bitcast i8* %353 to i32*
  store i32 0, i32* %354, align 4, !tbaa !95
  %355 = getelementptr inbounds i8, i8* %342, i64 24
  %356 = bitcast i8* %355 to %struct._tagTreeCCParam**
  store %struct._tagTreeCCParam* null, %struct._tagTreeCCParam** %356, align 8, !tbaa !82
  %357 = icmp eq %struct._tagTreeCCParam* %lastParam.0.i, null
  br i1 %357, label %361, label %358

; <label>:358                                     ; preds = %346
  %359 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %lastParam.0.i, i64 0, i32 4
  %360 = bitcast %struct._tagTreeCCParam** %359 to i8**
  store i8* %342, i8** %360, align 8, !tbaa !82
  br label %361

; <label>:361                                     ; preds = %358, %346
  %params.1.i = phi %struct._tagTreeCCParam* [ %params.0.i, %358 ], [ %343, %346 ]
  %362 = icmp eq i32 %paramFlags.0.i, 0
  br i1 %362, label %ValidateSuffixes.exit.i, label %363

; <label>:363                                     ; preds = %361
  %364 = load i8*, i8** %paramType.i, align 8, !tbaa !7
  %365 = tail call %struct._tagTreeCCNode* @TreeCCNodeFindByType(%struct._tagTreeCCContext* %context, i8* %364) #2
  %366 = icmp eq %struct._tagTreeCCNode* %365, null
  br i1 %366, label %367, label %368

; <label>:367                                     ; preds = %363
  tail call void (%struct.TreeCCInput*, i8*, ...) @TreeCCError(%struct.TreeCCInput* %24, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.35.853, i64 0, i64 0), i8* %364) #2
  br label %ValidateSuffixes.exit.i

; <label>:368                                     ; preds = %363
  %369 = load i8*, i8** %276, align 8, !tbaa !21
  %370 = load i64, i64* %278, align 8, !tbaa !23
  %371 = tail call i64 @strlen(i8* %364) #12
  %372 = trunc i64 %371 to i32
  %373 = load i32, i32* %11, align 4, !tbaa !9
  %switch.i.i = icmp ult i32 %373, 2
  br i1 %switch.i.i, label %374, label %ValidateSuffixes.exit.i

; <label>:374                                     ; preds = %368
  %375 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %365, i64 0, i32 5
  %376 = load i32, i32* %375, align 4, !tbaa !34
  %377 = and i32 %376, 24
  %378 = icmp eq i32 %377, 0
  br i1 %378, label %379, label %ValidateSuffixes.exit.i

; <label>:379                                     ; preds = %374
  %380 = icmp slt i32 %372, 2
  br i1 %380, label %392, label %381

; <label>:381                                     ; preds = %379
  %382 = shl i64 %371, 32
  %sext.i.i = add i64 %382, -4294967296
  %383 = ashr exact i64 %sext.i.i, 32
  %384 = getelementptr inbounds i8, i8* %364, i64 %383
  %385 = load i8, i8* %384, align 1, !tbaa !27
  %386 = icmp eq i8 %385, 42
  br i1 %386, label %387, label %392

; <label>:387                                     ; preds = %381
  %sext1.i.i = add i64 %382, -8589934592
  %388 = ashr exact i64 %sext1.i.i, 32
  %389 = getelementptr inbounds i8, i8* %364, i64 %388
  %390 = load i8, i8* %389, align 1, !tbaa !27
  %391 = icmp eq i8 %390, 32
  br i1 %391, label %ValidateSuffixes.exit.i, label %392

; <label>:392                                     ; preds = %387, %381, %379
  %393 = load %struct.TreeCCInput*, %struct.TreeCCInput** %1, align 8, !tbaa !1
  tail call void (%struct.TreeCCInput*, i8*, i64, i8*, ...) @TreeCCErrorOnLine(%struct.TreeCCInput* %393, i8* %369, i64 %370, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.43.854, i64 0, i64 0)) #2
  br label %ValidateSuffixes.exit.i

ValidateSuffixes.exit.i:                          ; preds = %392, %387, %374, %368, %367, %361, %340, %337, %333
  %lastParam.1.i = phi %struct._tagTreeCCParam* [ %343, %367 ], [ %343, %361 ], [ %lastParam.0.i, %340 ], [ %lastParam.0.i, %337 ], [ %lastParam.0.i, %333 ], [ %343, %368 ], [ %343, %374 ], [ %343, %387 ], [ %343, %392 ]
  %params.2.i = phi %struct._tagTreeCCParam* [ %params.1.i, %367 ], [ %params.1.i, %361 ], [ %params.0.i, %340 ], [ %params.0.i, %337 ], [ %params.0.i, %333 ], [ %params.1.i, %368 ], [ %params.1.i, %374 ], [ %params.1.i, %387 ], [ %params.1.i, %392 ]
  %394 = load i32, i32* %25, align 4, !tbaa !97
  %395 = icmp eq i32 %394, 11
  br i1 %395, label %396, label %thread-pre-split30.i

; <label>:396                                     ; preds = %ValidateSuffixes.exit.i
  %397 = tail call i32 @TreeCCNextToken(%struct.TreeCCInput* %24) #2
  %398 = load i32, i32* %25, align 4, !tbaa !97
  switch i32 %398, label %399 [
    i32 1, label %.backedge.i.16.backedge
    i32 9, label %.backedge.i.16.backedge
  ]

.backedge.i.16.backedge:                          ; preds = %396, %396
  br label %.backedge.i.16

; <label>:399                                     ; preds = %396
  %params.2.i.lcssa = phi %struct._tagTreeCCParam* [ %params.2.i, %396 ]
  %lastParam.1.i.lcssa = phi %struct._tagTreeCCParam* [ %lastParam.1.i, %396 ]
  %numTriggers.1.i.lcssa = phi i32 [ %numTriggers.1.i, %396 ]
  tail call void (%struct.TreeCCInput*, i8*, ...) @TreeCCError(%struct.TreeCCInput* %24, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.33.851, i64 0, i64 0)) #2
  br label %thread-pre-split.i.15

thread-pre-split30.i:                             ; preds = %ValidateSuffixes.exit.i, %.backedge.i.16
  %400 = phi i32 [ %.pr31.i, %.backedge.i.16 ], [ %394, %ValidateSuffixes.exit.i ]
  %numTriggers.2.i = phi i32 [ %numTriggers.0.i, %.backedge.i.16 ], [ %numTriggers.1.i, %ValidateSuffixes.exit.i ]
  %params.3.i = phi %struct._tagTreeCCParam* [ %params.0.i, %.backedge.i.16 ], [ %params.2.i, %ValidateSuffixes.exit.i ]
  %401 = icmp eq i32 %400, 6
  br i1 %401, label %402, label %404

; <label>:402                                     ; preds = %thread-pre-split30.i
  %403 = tail call i32 @TreeCCNextToken(%struct.TreeCCInput* %24) #2
  br label %406

; <label>:404                                     ; preds = %thread-pre-split30.i
  tail call void (%struct.TreeCCInput*, i8*, ...) @TreeCCError(%struct.TreeCCInput* %24, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.13.831, i64 0, i64 0)) #2
  br label %406

; <label>:405                                     ; preds = %314
  tail call void (%struct.TreeCCInput*, i8*, ...) @TreeCCError(%struct.TreeCCInput* %24, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.14.832, i64 0, i64 0)) #2
  br label %406

; <label>:406                                     ; preds = %405, %404, %402
  %numTriggers.3.i = phi i32 [ %numTriggers.2.i, %402 ], [ %numTriggers.2.i, %404 ], [ 0, %405 ]
  %params.4.i = phi %struct._tagTreeCCParam* [ %params.3.i, %402 ], [ %params.3.i, %404 ], [ null, %405 ]
  %407 = load i32, i32* %25, align 4, !tbaa !97
  %408 = icmp eq i32 %407, 12
  br i1 %408, label %409, label %417

; <label>:409                                     ; preds = %406
  %410 = tail call i32 @TreeCCNextToken(%struct.TreeCCInput* %24) #2
  %411 = load i32, i32* %25, align 4, !tbaa !97
  %412 = icmp eq i32 %411, 3
  br i1 %412, label %413, label %416

; <label>:413                                     ; preds = %409
  %414 = tail call i8* @TreeCCValue(%struct.TreeCCInput* %24) #2
  %415 = tail call i32 @TreeCCNextToken(%struct.TreeCCInput* %24) #2
  br label %423

; <label>:416                                     ; preds = %409
  tail call void (%struct.TreeCCInput*, i8*, ...) @TreeCCError(%struct.TreeCCInput* %24, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.36.855, i64 0, i64 0)) #2
  br label %423

; <label>:417                                     ; preds = %406
  br i1 %303, label %418, label %423

; <label>:418                                     ; preds = %417
  %419 = load i8*, i8** %returnType.i, align 8, !tbaa !7
  %420 = tail call i32 @strcmp(i8* %419, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.34.852, i64 0, i64 0)) #2
  %421 = icmp eq i32 %420, 0
  br i1 %421, label %423, label %422

; <label>:422                                     ; preds = %418
  tail call void (%struct.TreeCCInput*, i8*, ...) @TreeCCError(%struct.TreeCCInput* %24, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.37.856, i64 0, i64 0)) #2
  br label %423

; <label>:423                                     ; preds = %422, %418, %417, %416, %413
  %defValue.0.i = phi i8* [ %414, %413 ], [ null, %416 ], [ null, %422 ], [ null, %418 ], [ null, %417 ]
  %424 = load i32, i32* %25, align 4, !tbaa !97
  %425 = icmp eq i32 %424, 15
  br i1 %425, label %426, label %428

; <label>:426                                     ; preds = %423
  %427 = tail call i32 @TreeCCNextToken(%struct.TreeCCInput* %24) #2
  br label %428

; <label>:428                                     ; preds = %426, %423
  %429 = icmp eq i32 %numTriggers.3.i, 0
  %430 = icmp ne %struct._tagTreeCCParam* %params.4.i, null
  %or.cond21.i = and i1 %429, %430
  br i1 %or.cond21.i, label %431, label %ValidateSuffixes.exit29.i

; <label>:431                                     ; preds = %428
  %432 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %params.4.i, i64 0, i32 2
  %433 = load i32, i32* %432, align 4, !tbaa !52
  %434 = or i32 %433, 1
  store i32 %434, i32* %432, align 4, !tbaa !52
  %435 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %params.4.i, i64 0, i32 1
  %436 = load i8*, i8** %435, align 8, !tbaa !47
  %437 = tail call %struct._tagTreeCCNode* @TreeCCNodeFindByType(%struct._tagTreeCCContext* %context, i8* %436) #2
  %438 = icmp eq %struct._tagTreeCCNode* %437, null
  %439 = load i8*, i8** %435, align 8, !tbaa !47
  br i1 %438, label %440, label %441

; <label>:440                                     ; preds = %431
  tail call void (%struct.TreeCCInput*, i8*, i64, i8*, ...) @TreeCCErrorOnLine(%struct.TreeCCInput* %24, i8* %277, i64 %279, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.35.853, i64 0, i64 0), i8* %439) #2
  br label %ValidateSuffixes.exit29.i

; <label>:441                                     ; preds = %431
  %442 = tail call i64 @strlen(i8* %439) #12
  %443 = trunc i64 %442 to i32
  %444 = load i32, i32* %11, align 4, !tbaa !9
  %switch.i.26.i = icmp ult i32 %444, 2
  br i1 %switch.i.26.i, label %445, label %ValidateSuffixes.exit29.i

; <label>:445                                     ; preds = %441
  %446 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %437, i64 0, i32 5
  %447 = load i32, i32* %446, align 4, !tbaa !34
  %448 = and i32 %447, 24
  %449 = icmp eq i32 %448, 0
  br i1 %449, label %450, label %ValidateSuffixes.exit29.i

; <label>:450                                     ; preds = %445
  %451 = icmp slt i32 %443, 2
  br i1 %451, label %463, label %452

; <label>:452                                     ; preds = %450
  %453 = shl i64 %442, 32
  %sext.i.27.i = add i64 %453, -4294967296
  %454 = ashr exact i64 %sext.i.27.i, 32
  %455 = getelementptr inbounds i8, i8* %439, i64 %454
  %456 = load i8, i8* %455, align 1, !tbaa !27
  %457 = icmp eq i8 %456, 42
  br i1 %457, label %458, label %463

; <label>:458                                     ; preds = %452
  %sext1.i.28.i = add i64 %453, -8589934592
  %459 = ashr exact i64 %sext1.i.28.i, 32
  %460 = getelementptr inbounds i8, i8* %439, i64 %459
  %461 = load i8, i8* %460, align 1, !tbaa !27
  %462 = icmp eq i8 %461, 32
  br i1 %462, label %ValidateSuffixes.exit29.i, label %463

; <label>:463                                     ; preds = %458, %452, %450
  %464 = load %struct.TreeCCInput*, %struct.TreeCCInput** %1, align 8, !tbaa !1
  tail call void (%struct.TreeCCInput*, i8*, i64, i8*, ...) @TreeCCErrorOnLine(%struct.TreeCCInput* %464, i8* %277, i64 %279, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.43.854, i64 0, i64 0)) #2
  br label %ValidateSuffixes.exit29.i

ValidateSuffixes.exit29.i:                        ; preds = %463, %458, %445, %441, %440, %428
  %numTriggers.4.i = phi i32 [ 1, %440 ], [ %numTriggers.3.i, %428 ], [ 1, %441 ], [ 1, %445 ], [ 1, %458 ], [ 1, %463 ]
  br i1 %303, label %492, label %465

; <label>:465                                     ; preds = %ValidateSuffixes.exit29.i
  %466 = icmp eq %struct._tagTreeCCParam* %params.4.i, null
  %467 = icmp ne i32 %numTriggers.4.i, 1
  %or.cond23.i = or i1 %466, %467
  br i1 %or.cond23.i, label %473, label %468

; <label>:468                                     ; preds = %465
  %469 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %params.4.i, i64 0, i32 2
  %470 = load i32, i32* %469, align 4, !tbaa !52
  %471 = and i32 %470, 1
  %472 = icmp eq i32 %471, 0
  br i1 %472, label %473, label %478

; <label>:473                                     ; preds = %468, %465
  br i1 %430, label %475, label %474

; <label>:474                                     ; preds = %473
  tail call void (%struct.TreeCCInput*, i8*, ...) @TreeCCError(%struct.TreeCCInput* %24, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.38.857, i64 0, i64 0)) #2
  br label %476

; <label>:475                                     ; preds = %473
  tail call void (%struct.TreeCCInput*, i8*, ...) @TreeCCError(%struct.TreeCCInput* %24, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.39.858, i64 0, i64 0)) #2
  br label %476

; <label>:476                                     ; preds = %475, %474
  %477 = and i32 %flags.1.i.11, -2
  br label %492

; <label>:478                                     ; preds = %468
  %479 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %params.4.i, i64 0, i32 1
  %480 = load i8*, i8** %479, align 8, !tbaa !47
  %481 = tail call %struct._tagTreeCCNode* @TreeCCNodeFindByType(%struct._tagTreeCCContext* %context, i8* %480) #2
  %482 = icmp eq %struct._tagTreeCCNode* %481, null
  br i1 %482, label %483, label %485

; <label>:483                                     ; preds = %478
  %484 = and i32 %flags.1.i.11, -2
  br label %492

; <label>:485                                     ; preds = %478
  %486 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %481, i64 0, i32 5
  %487 = load i32, i32* %486, align 4, !tbaa !34
  %488 = and i32 %487, 8
  %489 = icmp eq i32 %488, 0
  br i1 %489, label %492, label %490

; <label>:490                                     ; preds = %485
  tail call void (%struct.TreeCCInput*, i8*, ...) @TreeCCError(%struct.TreeCCInput* %24, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.40.859, i64 0, i64 0)) #2
  %491 = and i32 %flags.1.i.11, -2
  br label %492

; <label>:492                                     ; preds = %490, %485, %483, %476, %ValidateSuffixes.exit29.i
  %flags.2.i = phi i32 [ %477, %476 ], [ %484, %483 ], [ %491, %490 ], [ %flags.1.i.11, %485 ], [ %flags.1.i.11, %ValidateSuffixes.exit29.i ]
  %493 = load i8*, i8** %name.i, align 8, !tbaa !7
  %494 = tail call %struct._tagTreeCCOperation* @TreeCCOperationFind(%struct._tagTreeCCContext* %context, i8* %493) #2
  %495 = icmp eq %struct._tagTreeCCOperation* %494, null
  br i1 %495, label %522, label %496

; <label>:496                                     ; preds = %492
  tail call void (%struct.TreeCCInput*, i8*, i64, i8*, ...) @TreeCCErrorOnLine(%struct.TreeCCInput* %24, i8* %277, i64 %279, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.41.860, i64 0, i64 0), i8* %493) #2
  %497 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %494, i64 0, i32 7
  %498 = load i8*, i8** %497, align 8, !tbaa !121
  %499 = getelementptr inbounds %struct._tagTreeCCOperation, %struct._tagTreeCCOperation* %494, i64 0, i32 8
  %500 = load i64, i64* %499, align 8, !tbaa !118
  tail call void (%struct.TreeCCInput*, i8*, i64, i8*, ...) @TreeCCErrorOnLine(%struct.TreeCCInput* %24, i8* %498, i64 %500, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.42.861, i64 0, i64 0)) #2
  %501 = load i8*, i8** %returnType.i, align 8, !tbaa !7
  tail call void @free(i8* %501) #2
  tail call void @free(i8* %493) #2
  %502 = icmp eq i8* %className.0.i, null
  br i1 %502, label %504, label %503

; <label>:503                                     ; preds = %496
  tail call void @free(i8* %className.0.i) #2
  br label %504

; <label>:504                                     ; preds = %503, %496
  %505 = icmp eq i8* %defValue.0.i, null
  br i1 %505, label %.preheader.i.17, label %506

; <label>:506                                     ; preds = %504
  tail call void @free(i8* %defValue.0.i) #2
  br label %.preheader.i.17

.preheader.i.17:                                  ; preds = %506, %504
  %507 = icmp eq %struct._tagTreeCCParam* %params.4.i, null
  br i1 %507, label %ParseOperation.exit, label %.lr.ph.i.18.preheader

.lr.ph.i.18.preheader:                            ; preds = %.preheader.i.17
  br label %.lr.ph.i.18

.lr.ph.i.18:                                      ; preds = %.lr.ph.i.18.preheader, %519
  %params.543.i = phi %struct._tagTreeCCParam* [ %509, %519 ], [ %params.4.i, %.lr.ph.i.18.preheader ]
  %508 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %params.543.i, i64 0, i32 4
  %509 = load %struct._tagTreeCCParam*, %struct._tagTreeCCParam** %508, align 8, !tbaa !82
  %510 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %params.543.i, i64 0, i32 0
  %511 = load i8*, i8** %510, align 8, !tbaa !41
  %512 = icmp eq i8* %511, null
  br i1 %512, label %514, label %513

; <label>:513                                     ; preds = %.lr.ph.i.18
  tail call void @free(i8* %511) #2
  br label %514

; <label>:514                                     ; preds = %513, %.lr.ph.i.18
  %515 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %params.543.i, i64 0, i32 1
  %516 = load i8*, i8** %515, align 8, !tbaa !47
  %517 = icmp eq i8* %516, null
  br i1 %517, label %519, label %518

; <label>:518                                     ; preds = %514
  tail call void @free(i8* %516) #2
  br label %519

; <label>:519                                     ; preds = %518, %514
  %520 = bitcast %struct._tagTreeCCParam* %params.543.i to i8*
  tail call void @free(i8* %520) #2
  %521 = icmp eq %struct._tagTreeCCParam* %509, null
  br i1 %521, label %ParseOperation.exit.loopexit, label %.lr.ph.i.18

; <label>:522                                     ; preds = %492
  %523 = load i8*, i8** %returnType.i, align 8, !tbaa !7
  %524 = tail call %struct._tagTreeCCOperation* @TreeCCOperationCreate(%struct._tagTreeCCContext* %context, i8* %523, i8* %493, i8* %className.0.i, i8* %defValue.0.i, %struct._tagTreeCCParam* %params.4.i, i32 %flags.2.i, i32 %numTriggers.4.i, i8* %277, i64 %279) #2
  %525 = and i32 %flags.2.i, 1
  %526 = icmp eq i32 %525, 0
  br i1 %526, label %ParseOperation.exit, label %527

; <label>:527                                     ; preds = %522
  %528 = getelementptr inbounds %struct._tagTreeCCParam, %struct._tagTreeCCParam* %params.4.i, i64 0, i32 1
  %529 = load i8*, i8** %528, align 8, !tbaa !47
  %530 = tail call %struct._tagTreeCCNode* @TreeCCNodeFindByType(%struct._tagTreeCCContext* %context, i8* %529) #2
  tail call void @TreeCCNodeAddVirtual(%struct._tagTreeCCContext* %context, %struct._tagTreeCCNode* %530, %struct._tagTreeCCOperation* %524) #2
  br label %ParseOperation.exit

ParseOperation.exit.loopexit:                     ; preds = %519
  br label %ParseOperation.exit

ParseOperation.exit:                              ; preds = %ParseOperation.exit.loopexit, %286, %288, %296, %.preheader.i.17, %522, %527
  call void @llvm.lifetime.end(i64 8, i8* %10) #2
  call void @llvm.lifetime.end(i64 8, i8* %9) #2
  call void @llvm.lifetime.end(i64 8, i8* %8) #2
  call void @llvm.lifetime.end(i64 8, i8* %7) #2
  br label %.critedge4

; <label>:531                                     ; preds = %22
  %532 = tail call i32 @TreeCCNextToken(%struct.TreeCCInput* %24) #2
  %533 = load i32, i32* %25, align 4, !tbaa !97
  %534 = icmp eq i32 %533, 1
  br i1 %534, label %536, label %535

; <label>:535                                     ; preds = %531
  tail call void (%struct.TreeCCInput*, i8*, ...) @TreeCCError(%struct.TreeCCInput* %24, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.44.862, i64 0, i64 0)) #2
  br label %.critedge4

; <label>:536                                     ; preds = %531
  %537 = tail call i8* @TreeCCValue(%struct.TreeCCInput* %24) #2
  %538 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %24, i64 0, i32 4
  %539 = load i8*, i8** %538, align 8, !tbaa !21
  %540 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %24, i64 0, i32 5
  %541 = load i64, i64* %540, align 8, !tbaa !23
  %542 = tail call i32 @TreeCCNextToken(%struct.TreeCCInput* %24) #2
  %543 = load i32, i32* %25, align 4, !tbaa !97
  %544 = icmp eq i32 %543, 12
  br i1 %544, label %545, label %552

; <label>:545                                     ; preds = %536
  %546 = tail call i32 @TreeCCNextToken(%struct.TreeCCInput* %24) #2
  %547 = load i32, i32* %25, align 4, !tbaa !97
  switch i32 %547, label %551 [
    i32 1, label %548
    i32 17, label %548
  ]

; <label>:548                                     ; preds = %545, %545
  %549 = tail call i8* @TreeCCValue(%struct.TreeCCInput* %24) #2
  %550 = tail call i32 @TreeCCNextToken(%struct.TreeCCInput* %24) #2
  br label %552

; <label>:551                                     ; preds = %545
  tail call void (%struct.TreeCCInput*, i8*, ...) @TreeCCError(%struct.TreeCCInput* %24, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.45.863, i64 0, i64 0)) #2
  br label %552

; <label>:552                                     ; preds = %551, %548, %536
  %value.0.i = phi i8* [ %549, %548 ], [ null, %551 ], [ null, %536 ]
  %553 = load i16, i16* %13, align 8
  %.mask.i = and i16 %553, 1
  %554 = icmp eq i16 %.mask.i, 0
  br i1 %554, label %559, label %555

; <label>:555                                     ; preds = %552
  %556 = icmp eq i8* %value.0.i, null
  br i1 %556, label %558, label %557

; <label>:557                                     ; preds = %555
  tail call void (i64, i8*, ...) @TreeCCDebug(i64 %541, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.46.864, i64 0, i64 0), i8* %537, i8* %value.0.i) #2
  br label %559

; <label>:558                                     ; preds = %555
  tail call void (i64, i8*, ...) @TreeCCDebug(i64 %541, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.47.865, i64 0, i64 0), i8* %537) #2
  br label %559

; <label>:559                                     ; preds = %558, %557, %552
  %560 = tail call i32 @TreeCCOptionProcess(%struct._tagTreeCCContext* %context, i8* %537, i8* %value.0.i) #2
  switch i32 %560, label %565 [
    i32 2, label %561
    i32 3, label %562
    i32 4, label %563
    i32 5, label %564
  ]

; <label>:561                                     ; preds = %559
  tail call void (%struct.TreeCCInput*, i8*, i64, i8*, ...) @TreeCCErrorOnLine(%struct.TreeCCInput* %24, i8* %539, i64 %541, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.48.866, i64 0, i64 0), i8* %537) #2
  br label %565

; <label>:562                                     ; preds = %559
  tail call void (%struct.TreeCCInput*, i8*, i64, i8*, ...) @TreeCCErrorOnLine(%struct.TreeCCInput* %24, i8* %539, i64 %541, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.49.867, i64 0, i64 0), i8* %537) #2
  br label %565

; <label>:563                                     ; preds = %559
  tail call void (%struct.TreeCCInput*, i8*, i64, i8*, ...) @TreeCCErrorOnLine(%struct.TreeCCInput* %24, i8* %539, i64 %541, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.50.868, i64 0, i64 0), i8* %537) #2
  br label %565

; <label>:564                                     ; preds = %559
  tail call void (%struct.TreeCCInput*, i8*, i64, i8*, ...) @TreeCCErrorOnLine(%struct.TreeCCInput* %24, i8* %539, i64 %541, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.51.869, i64 0, i64 0), i8* %537) #2
  br label %565

; <label>:565                                     ; preds = %564, %563, %562, %561, %559
  tail call void @free(i8* %537) #2
  %566 = icmp ne i32 %560, 1
  %567 = icmp ne i8* %value.0.i, null
  %or.cond.i.19 = and i1 %567, %566
  br i1 %or.cond.i.19, label %568, label %.critedge4

; <label>:568                                     ; preds = %565
  tail call void @free(i8* %value.0.i) #2
  br label %.critedge4

; <label>:569                                     ; preds = %22
  %570 = tail call i32 @TreeCCNextToken(%struct.TreeCCInput* %24) #2
  %571 = load %struct.TreeCCInput*, %struct.TreeCCInput** %1, align 8, !tbaa !1
  %572 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %571, i64 0, i32 0
  %573 = load i32, i32* %572, align 4, !tbaa !97
  %574 = icmp eq i32 %573, 17
  br i1 %574, label %575, label %595

; <label>:575                                     ; preds = %569
  %576 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %571, i64 0, i32 1
  %577 = load i8*, i8** %576, align 8, !tbaa !98
  %578 = tail call %struct._tagTreeCCStream* @TreeCCStreamCreate(%struct._tagTreeCCContext* %context, i8* %577, i8* %577, i32 1) #2
  store %struct._tagTreeCCStream* %578, %struct._tagTreeCCStream** %14, align 8, !tbaa !28
  %579 = load %struct.TreeCCInput*, %struct.TreeCCInput** %1, align 8, !tbaa !1
  %580 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %579, i64 0, i32 10
  %581 = load i32, i32* %580, align 4, !tbaa !130
  %582 = getelementptr inbounds %struct._tagTreeCCStream, %struct._tagTreeCCStream* %578, i64 0, i32 7
  %583 = load i8, i8* %582, align 4
  %584 = lshr i8 %583, 1
  %585 = zext i8 %584 to i32
  %586 = or i32 %585, %581
  %587 = trunc i32 %586 to i8
  %588 = shl i8 %587, 1
  %589 = and i8 %588, 2
  %590 = and i8 %583, -3
  %591 = or i8 %589, %590
  store i8 %591, i8* %582, align 4
  %592 = load %struct._tagTreeCCStream*, %struct._tagTreeCCStream** %15, align 8, !tbaa !29
  %593 = icmp eq %struct._tagTreeCCStream* %592, null
  br i1 %593, label %594, label %728

; <label>:594                                     ; preds = %575
  store %struct._tagTreeCCStream* %578, %struct._tagTreeCCStream** %15, align 8, !tbaa !29
  br label %728

; <label>:595                                     ; preds = %569
  tail call void (%struct.TreeCCInput*, i8*, ...) @TreeCCError(%struct.TreeCCInput* %571, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.1.870, i64 0, i64 0)) #2
  br label %.critedge4

; <label>:596                                     ; preds = %22
  %597 = tail call i32 @TreeCCNextToken(%struct.TreeCCInput* %24) #2
  %598 = load %struct.TreeCCInput*, %struct.TreeCCInput** %1, align 8, !tbaa !1
  %599 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %598, i64 0, i32 0
  %600 = load i32, i32* %599, align 4, !tbaa !97
  %601 = icmp eq i32 %600, 17
  br i1 %601, label %602, label %622

; <label>:602                                     ; preds = %596
  %603 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %598, i64 0, i32 1
  %604 = load i8*, i8** %603, align 8, !tbaa !98
  %605 = tail call %struct._tagTreeCCStream* @TreeCCStreamCreate(%struct._tagTreeCCContext* %context, i8* %604, i8* %604, i32 0) #2
  store %struct._tagTreeCCStream* %605, %struct._tagTreeCCStream** %16, align 8, !tbaa !33
  %606 = load %struct.TreeCCInput*, %struct.TreeCCInput** %1, align 8, !tbaa !1
  %607 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %606, i64 0, i32 10
  %608 = load i32, i32* %607, align 4, !tbaa !130
  %609 = getelementptr inbounds %struct._tagTreeCCStream, %struct._tagTreeCCStream* %605, i64 0, i32 7
  %610 = load i8, i8* %609, align 4
  %611 = lshr i8 %610, 1
  %612 = zext i8 %611 to i32
  %613 = or i32 %612, %608
  %614 = trunc i32 %613 to i8
  %615 = shl i8 %614, 1
  %616 = and i8 %615, 2
  %617 = and i8 %610, -3
  %618 = or i8 %616, %617
  store i8 %618, i8* %609, align 4
  %619 = load %struct._tagTreeCCStream*, %struct._tagTreeCCStream** %17, align 8, !tbaa !32
  %620 = icmp eq %struct._tagTreeCCStream* %619, null
  br i1 %620, label %621, label %728

; <label>:621                                     ; preds = %602
  store %struct._tagTreeCCStream* %605, %struct._tagTreeCCStream** %17, align 8, !tbaa !32
  br label %728

; <label>:622                                     ; preds = %596
  tail call void (%struct.TreeCCInput*, i8*, ...) @TreeCCError(%struct.TreeCCInput* %598, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.2.871, i64 0, i64 0)) #2
  br label %.critedge4

; <label>:623                                     ; preds = %22
  %624 = tail call i32 @TreeCCNextToken(%struct.TreeCCInput* %24) #2
  %625 = load %struct.TreeCCInput*, %struct.TreeCCInput** %1, align 8, !tbaa !1
  %626 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %625, i64 0, i32 0
  %627 = load i32, i32* %626, align 4, !tbaa !97
  %628 = icmp eq i32 %627, 17
  br i1 %628, label %629, label %635

; <label>:629                                     ; preds = %623
  %630 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %625, i64 0, i32 4
  %631 = load i8*, i8** %630, align 8, !tbaa !21
  %632 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %625, i64 0, i32 1
  %633 = load i8*, i8** %632, align 8, !tbaa !98
  %634 = tail call i8* @TreeCCResolvePathname(i8* %631, i8* %633) #2
  store i8* %634, i8** %18, align 8, !tbaa !107
  br label %728

; <label>:635                                     ; preds = %623
  tail call void (%struct.TreeCCInput*, i8*, ...) @TreeCCError(%struct.TreeCCInput* %625, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.2.871, i64 0, i64 0)) #2
  br label %.critedge4

; <label>:636                                     ; preds = %22
  %637 = tail call i32 @TreeCCNextToken(%struct.TreeCCInput* %24) #2
  %638 = load i32, i32* %25, align 4, !tbaa !97
  %639 = icmp eq i32 %638, 1
  br i1 %639, label %641, label %640

; <label>:640                                     ; preds = %636
  tail call void (%struct.TreeCCInput*, i8*, ...) @TreeCCError(%struct.TreeCCInput* %24, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.52.872, i64 0, i64 0)) #2
  br label %.critedge4

; <label>:641                                     ; preds = %636
  %642 = tail call i8* @TreeCCValue(%struct.TreeCCInput* %24) #2
  %643 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %24, i64 0, i32 5
  %644 = load i64, i64* %643, align 8, !tbaa !23
  %645 = tail call %struct._tagTreeCCNode* @TreeCCNodeCreate(%struct._tagTreeCCContext* %context, i64 %644, i8* %642, i8* null, i32 14) #2
  %646 = tail call i32 @TreeCCNextToken(%struct.TreeCCInput* %24) #2
  %647 = load i32, i32* %25, align 4, !tbaa !97
  %648 = icmp eq i32 %647, 12
  br i1 %648, label %650, label %649

; <label>:649                                     ; preds = %641
  tail call void (%struct.TreeCCInput*, i8*, ...) @TreeCCError(%struct.TreeCCInput* %24, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.53.873, i64 0, i64 0)) #2
  br label %.critedge4

; <label>:650                                     ; preds = %641
  %651 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %24, i64 0, i32 9
  store i32 0, i32* %651, align 4, !tbaa !106
  %652 = tail call i32 @TreeCCNextToken(%struct.TreeCCInput* %24) #2
  store i32 1, i32* %651, align 4, !tbaa !106
  %653 = load i32, i32* %25, align 4, !tbaa !97
  %654 = icmp eq i32 %653, 7
  br i1 %654, label %656, label %655

; <label>:655                                     ; preds = %650
  tail call void (%struct.TreeCCInput*, i8*, ...) @TreeCCError(%struct.TreeCCInput* %24, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.54.874, i64 0, i64 0)) #2
  br label %.critedge4

; <label>:656                                     ; preds = %650
  %657 = tail call i32 @TreeCCNextToken(%struct.TreeCCInput* %24) #2
  %658 = load i32, i32* %25, align 4, !tbaa !97
  %659 = icmp eq i32 %658, 1
  br i1 %659, label %.lr.ph.i.20, label %._crit_edge.i

.lr.ph.i.20:                                      ; preds = %656
  %660 = getelementptr inbounds %struct._tagTreeCCNode, %struct._tagTreeCCNode* %645, i64 0, i32 4
  br label %661

; <label>:661                                     ; preds = %.backedge.i.21, %.lr.ph.i.20
  %662 = load i64, i64* %643, align 8, !tbaa !23
  %663 = tail call i8* @TreeCCValue(%struct.TreeCCInput* %24) #2
  %664 = load i8*, i8** %660, align 8, !tbaa !36
  %665 = tail call i8* @TreeCCDupString(i8* %664) #2
  %666 = tail call %struct._tagTreeCCNode* @TreeCCNodeCreate(%struct._tagTreeCCContext* %context, i64 %662, i8* %663, i8* %665, i32 16) #2
  %667 = tail call i32 @TreeCCNextToken(%struct.TreeCCInput* %24) #2
  %668 = load i32, i32* %25, align 4, !tbaa !97
  switch i32 %668, label %._crit_edge.i.loopexit [
    i32 11, label %669
    i32 1, label %671
  ]

; <label>:669                                     ; preds = %661
  %670 = tail call i32 @TreeCCNextToken(%struct.TreeCCInput* %24) #2
  br label %.backedge.i.21

; <label>:671                                     ; preds = %661
  tail call void (%struct.TreeCCInput*, i8*, ...) @TreeCCError(%struct.TreeCCInput* %24, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.7.830, i64 0, i64 0)) #2
  br label %.backedge.i.21

.backedge.i.21:                                   ; preds = %671, %669
  %672 = load i32, i32* %25, align 4, !tbaa !97
  %673 = icmp eq i32 %672, 1
  br i1 %673, label %661, label %._crit_edge.i.loopexit

._crit_edge.i.loopexit:                           ; preds = %661, %.backedge.i.21
  %.ph = phi i32 [ %672, %.backedge.i.21 ], [ %668, %661 ]
  br label %._crit_edge.i

._crit_edge.i:                                    ; preds = %._crit_edge.i.loopexit, %656
  %674 = phi i32 [ %658, %656 ], [ %.ph, %._crit_edge.i.loopexit ]
  %sawValue.1.i = phi i32 [ 0, %656 ], [ 1, %._crit_edge.i.loopexit ]
  %675 = icmp eq i32 %674, 11
  br i1 %675, label %676, label %678

; <label>:676                                     ; preds = %._crit_edge.i
  %677 = tail call i32 @TreeCCNextToken(%struct.TreeCCInput* %24) #2
  br label %678

; <label>:678                                     ; preds = %676, %._crit_edge.i
  %679 = icmp eq i32 %sawValue.1.i, 0
  br i1 %679, label %680, label %681

; <label>:680                                     ; preds = %678
  tail call void (%struct.TreeCCInput*, i8*, ...) @TreeCCError(%struct.TreeCCInput* %24, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.55.875, i64 0, i64 0)) #2
  br label %681

; <label>:681                                     ; preds = %680, %678
  %682 = load i32, i32* %25, align 4, !tbaa !97
  %683 = icmp eq i32 %682, 8
  br i1 %683, label %684, label %686

; <label>:684                                     ; preds = %681
  %685 = tail call i32 @TreeCCNextToken(%struct.TreeCCInput* %24) #2
  br label %.critedge4

; <label>:686                                     ; preds = %681
  tail call void (%struct.TreeCCInput*, i8*, ...) @TreeCCError(%struct.TreeCCInput* %24, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.56.876, i64 0, i64 0)) #2
  br label %.critedge4

; <label>:687                                     ; preds = %22
  %688 = load <2 x i64>, <2 x i64>* %20, align 8, !tbaa !7
  store <2 x i64> %688, <2 x i64>* %21, align 8, !tbaa !7
  br label %728

; <label>:689                                     ; preds = %22
  %690 = tail call i32 @TreeCCNextToken(%struct.TreeCCInput* %24) #2
  %691 = load %struct.TreeCCInput*, %struct.TreeCCInput** %1, align 8, !tbaa !1
  %692 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %691, i64 0, i32 0
  %693 = load i32, i32* %692, align 4, !tbaa !97
  %694 = icmp eq i32 %693, 37
  br i1 %694, label %695, label %697

; <label>:695                                     ; preds = %689
  %696 = tail call i32 @TreeCCNextToken(%struct.TreeCCInput* %691) #2
  %.pre78 = load %struct.TreeCCInput*, %struct.TreeCCInput** %1, align 8, !tbaa !1
  %.phi.trans.insert79 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %.pre78, i64 0, i32 0
  %.pre80 = load i32, i32* %.phi.trans.insert79, align 4, !tbaa !97
  br label %697

; <label>:697                                     ; preds = %695, %689
  %698 = phi i32 [ %.pre80, %695 ], [ %693, %689 ]
  %699 = phi %struct.TreeCCInput* [ %.pre78, %695 ], [ %691, %689 ]
  %700 = icmp eq i32 %698, 17
  br i1 %700, label %701, label %721

; <label>:701                                     ; preds = %697
  %702 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %699, i64 0, i32 4
  %703 = load i8*, i8** %702, align 8, !tbaa !21
  %704 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %699, i64 0, i32 1
  %705 = load i8*, i8** %704, align 8, !tbaa !98
  %706 = tail call i8* @TreeCCResolvePathname(i8* %703, i8* %705) #2
  %707 = tail call %struct._IO_FILE* @fopen(i8* %706, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.877, i64 0, i64 0)) #2
  %708 = icmp eq %struct._IO_FILE* %707, null
  br i1 %708, label %719, label %709

; <label>:709                                     ; preds = %701
  %710 = tail call noalias i8* @malloc(i64 1096) #2
  %711 = bitcast i8* %710 to %struct.TreeCCInput*
  %712 = load %struct.TreeCCInput*, %struct.TreeCCInput** %1, align 8, !tbaa !1
  %713 = icmp eq i8* %710, null
  br i1 %713, label %714, label %715

; <label>:714                                     ; preds = %709
  tail call void @TreeCCOutOfMemory(%struct.TreeCCInput* %712) #2
  %.pre81 = load %struct.TreeCCInput*, %struct.TreeCCInput** %1, align 8, !tbaa !1
  br label %715

; <label>:715                                     ; preds = %709, %714
  %716 = phi %struct.TreeCCInput* [ %712, %709 ], [ %.pre81, %714 ]
  %717 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %716, i64 0, i32 2
  %718 = load i8*, i8** %717, align 8, !tbaa !25
  tail call void @TreeCCOpen(%struct.TreeCCInput* %711, i8* %718, %struct._IO_FILE* %707, i8* %706) #2
  store i8* %710, i8** %19, align 8, !tbaa !1
  tail call void @TreeCCParse(%struct._tagTreeCCContext* %context)
  store %struct.TreeCCInput* %712, %struct.TreeCCInput** %1, align 8, !tbaa !1
  tail call void @TreeCCClose(%struct.TreeCCInput* %711, i32 1) #2
  tail call void @free(i8* %710) #2
  br label %728

; <label>:719                                     ; preds = %701
  %720 = load %struct.TreeCCInput*, %struct.TreeCCInput** %1, align 8, !tbaa !1
  tail call void (%struct.TreeCCInput*, i8*, ...) @TreeCCError(%struct.TreeCCInput* %720, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4.878, i64 0, i64 0), i8* %706) #2
  tail call void @free(i8* %706) #2
  br label %728

; <label>:721                                     ; preds = %697
  tail call void (%struct.TreeCCInput*, i8*, ...) @TreeCCError(%struct.TreeCCInput* %699, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.5.879, i64 0, i64 0)) #2
  br label %728

; <label>:722                                     ; preds = %22, %22, %22, %22, %22, %22, %22, %22, %22, %22, %22, %22, %22, %22, %22, %22, %22, %22, %22, %22, %22, %22
  tail call void (%struct.TreeCCInput*, i8*, ...) @TreeCCError(%struct.TreeCCInput* %24, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6.880, i64 0, i64 0)) #2
  %.pre82 = load %struct.TreeCCInput*, %struct.TreeCCInput** %1, align 8, !tbaa !1
  br label %.critedge5

.critedge5:                                       ; preds = %.critedge5, %722
  %723 = phi %struct.TreeCCInput* [ %725, %.critedge5 ], [ %.pre82, %722 ]
  %724 = tail call i32 @TreeCCNextToken(%struct.TreeCCInput* %723) #2
  %725 = load %struct.TreeCCInput*, %struct.TreeCCInput** %1, align 8, !tbaa !1
  %726 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %725, i64 0, i32 0
  %727 = load i32, i32* %726, align 4, !tbaa !97
  switch i32 %727, label %.critedge5 [
    i32 0, label %.critedge4.loopexit
    i32 1, label %.critedge4.loopexit
    i32 2, label %.critedge4.loopexit
    i32 4, label %.critedge4.loopexit
    i32 19, label %.critedge4.loopexit
    i32 22, label %.critedge4.loopexit
    i32 27, label %.critedge4.loopexit
    i32 28, label %.critedge4.loopexit
    i32 29, label %.critedge4.loopexit
    i32 31, label %.critedge4.loopexit
    i32 32, label %.critedge4.loopexit
    i32 33, label %.critedge4.loopexit
    i32 34, label %.critedge4.loopexit
    i32 35, label %.critedge4.loopexit
    i32 36, label %.critedge4.loopexit
  ]

; <label>:728                                     ; preds = %721, %719, %715, %621, %602, %594, %575, %178, %176, %22, %687, %629
  %729 = load %struct.TreeCCInput*, %struct.TreeCCInput** %1, align 8, !tbaa !1
  %730 = tail call i32 @TreeCCNextToken(%struct.TreeCCInput* %729) #2
  br label %.critedge4

.critedge4.loopexit:                              ; preds = %.critedge5, %.critedge5, %.critedge5, %.critedge5, %.critedge5, %.critedge5, %.critedge5, %.critedge5, %.critedge5, %.critedge5, %.critedge5, %.critedge5, %.critedge5, %.critedge5, %.critedge5
  br label %.critedge4

.critedge4.loopexit133:                           ; preds = %.lr.ph.i
  br label %.critedge4

.critedge4:                                       ; preds = %.critedge4.loopexit133, %.critedge4.loopexit, %686, %684, %655, %649, %640, %568, %565, %535, %148, %.thread.i, %.critedge3, %728, %635, %622, %595, %ParseOperation.exit, %ParseNode.exit
  %731 = load %struct.TreeCCInput*, %struct.TreeCCInput** %1, align 8, !tbaa !1
  %732 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %731, i64 0, i32 0
  %733 = load i32, i32* %732, align 4, !tbaa !97
  %734 = icmp eq i32 %733, 0
  br i1 %734, label %.loopexit.loopexit, label %22

.loopexit.loopexit:                               ; preds = %.critedge4
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %0
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @ParseTypeAndName(%struct.TreeCCInput* %input, i8** nocapture %type, i8** nocapture %name) #0 {
  %1 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %input, i64 0, i32 0
  %2 = load i32, i32* %1, align 4, !tbaa !97
  %3 = icmp eq i32 %2, 1
  br i1 %3, label %.preheader16.preheader, label %4

.preheader16.preheader:                           ; preds = %0
  br label %.preheader16

; <label>:4                                       ; preds = %0
  tail call void (%struct.TreeCCInput*, i8*, ...) @TreeCCError(%struct.TreeCCInput* %input, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.12.829, i64 0, i64 0)) #2
  br label %105

.preheader16:                                     ; preds = %.preheader16.preheader, %31
  %last.019 = phi i8* [ %last.1, %31 ], [ null, %.preheader16.preheader ]
  %tempType.018 = phi i8* [ %tempType.1, %31 ], [ null, %.preheader16.preheader ]
  %5 = icmp eq i8* %tempType.018, null
  br i1 %5, label %6, label %8

; <label>:6                                       ; preds = %.preheader16
  %7 = tail call i8* @TreeCCValue(%struct.TreeCCInput* %input) #2
  br label %31

; <label>:8                                       ; preds = %.preheader16
  %9 = icmp eq i8* %last.019, null
  br i1 %9, label %10, label %12

; <label>:10                                      ; preds = %8
  %11 = tail call i8* @TreeCCValue(%struct.TreeCCInput* %input) #2
  br label %31

; <label>:12                                      ; preds = %8
  %13 = tail call i64 @strlen(i8* %tempType.018) #12
  %14 = trunc i64 %13 to i32
  %15 = tail call i64 @strlen(i8* %last.019) #12
  %16 = trunc i64 %15 to i32
  %17 = add nsw i32 %16, %14
  %18 = add i32 %17, 2
  %19 = sext i32 %18 to i64
  %20 = tail call i8* @realloc(i8* %tempType.018, i64 %19) #2
  %21 = icmp eq i8* %20, null
  br i1 %21, label %22, label %AppendStrings.exit

; <label>:22                                      ; preds = %12
  tail call void @TreeCCOutOfMemory(%struct.TreeCCInput* %input) #2
  br label %AppendStrings.exit

AppendStrings.exit:                               ; preds = %12, %22
  %sext.i = shl i64 %13, 32
  %23 = ashr exact i64 %sext.i, 32
  %24 = getelementptr inbounds i8, i8* %20, i64 %23
  store i8 32, i8* %24, align 1, !tbaa !27
  %25 = getelementptr inbounds i8, i8* %24, i64 1
  %26 = tail call i8* @strcpy(i8* %25, i8* %last.019) #2
  %27 = add nsw i32 %17, 1
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i8, i8* %20, i64 %28
  store i8 0, i8* %29, align 1, !tbaa !27
  tail call void @free(i8* %last.019) #2
  %30 = tail call i8* @TreeCCValue(%struct.TreeCCInput* %input) #2
  br label %31

; <label>:31                                      ; preds = %10, %AppendStrings.exit, %6
  %tempType.1 = phi i8* [ %20, %AppendStrings.exit ], [ %tempType.018, %10 ], [ %7, %6 ]
  %last.1 = phi i8* [ %30, %AppendStrings.exit ], [ %11, %10 ], [ %last.019, %6 ]
  %32 = tail call i32 @TreeCCNextToken(%struct.TreeCCInput* %input) #2
  %.pr = load i32, i32* %1, align 4, !tbaa !97
  %33 = icmp eq i32 %.pr, 1
  br i1 %33, label %.preheader16, label %34

; <label>:34                                      ; preds = %31
  %.pr.lcssa = phi i32 [ %.pr, %31 ]
  %last.1.lcssa = phi i8* [ %last.1, %31 ]
  %tempType.1.lcssa = phi i8* [ %tempType.1, %31 ]
  %35 = icmp eq i8* %last.1.lcssa, null
  br i1 %35, label %.preheader, label %36

; <label>:36                                      ; preds = %34
  switch i32 %.pr.lcssa, label %.preheader [
    i32 13, label %37
    i32 14, label %37
    i32 9, label %37
  ]

; <label>:37                                      ; preds = %36, %36, %36
  %38 = tail call i64 @strlen(i8* %tempType.1.lcssa) #12
  %39 = trunc i64 %38 to i32
  %40 = tail call i64 @strlen(i8* %last.1.lcssa) #12
  %41 = trunc i64 %40 to i32
  %42 = add nsw i32 %41, %39
  %43 = add i32 %42, 2
  %44 = sext i32 %43 to i64
  %45 = tail call i8* @realloc(i8* %tempType.1.lcssa, i64 %44) #2
  %46 = icmp eq i8* %45, null
  br i1 %46, label %47, label %AppendStrings.exit4

; <label>:47                                      ; preds = %37
  tail call void @TreeCCOutOfMemory(%struct.TreeCCInput* %input) #2
  br label %AppendStrings.exit4

AppendStrings.exit4:                              ; preds = %37, %47
  %sext.i.3 = shl i64 %38, 32
  %48 = ashr exact i64 %sext.i.3, 32
  %49 = getelementptr inbounds i8, i8* %45, i64 %48
  store i8 32, i8* %49, align 1, !tbaa !27
  %50 = getelementptr inbounds i8, i8* %49, i64 1
  %51 = tail call i8* @strcpy(i8* %50, i8* %last.1.lcssa) #2
  %52 = add nsw i32 %42, 1
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds i8, i8* %45, i64 %53
  store i8 0, i8* %54, align 1, !tbaa !27
  tail call void @free(i8* %last.1.lcssa) #2
  br label %.preheader

.preheader:                                       ; preds = %AppendStrings.exit4, %34, %36
  %tempType.2.ph = phi i8* [ %tempType.1.lcssa, %36 ], [ %tempType.1.lcssa, %34 ], [ %45, %AppendStrings.exit4 ]
  %last.2.ph = phi i8* [ %last.1.lcssa, %36 ], [ null, %34 ], [ null, %AppendStrings.exit4 ]
  br label %.backedge

.backedge:                                        ; preds = %.backedge.backedge, %.preheader
  %tempType.2 = phi i8* [ %tempType.2.ph, %.preheader ], [ %tempType.2.be, %.backedge.backedge ]
  %55 = load i32, i32* %1, align 4, !tbaa !97
  switch i32 %55, label %99 [
    i32 13, label %56
    i32 14, label %69
    i32 9, label %82
  ]

; <label>:56                                      ; preds = %.backedge
  %57 = tail call i64 @strlen(i8* %tempType.2) #12
  %58 = shl i64 %57, 32
  %sext14 = add i64 %58, 12884901888
  %59 = ashr exact i64 %sext14, 32
  %60 = tail call i8* @realloc(i8* %tempType.2, i64 %59) #2
  %61 = icmp eq i8* %60, null
  br i1 %61, label %62, label %AppendStrings.exit6

; <label>:62                                      ; preds = %56
  tail call void @TreeCCOutOfMemory(%struct.TreeCCInput* %input) #2
  br label %AppendStrings.exit6

AppendStrings.exit6:                              ; preds = %56, %62
  %63 = ashr exact i64 %58, 32
  %64 = getelementptr inbounds i8, i8* %60, i64 %63
  store i8 32, i8* %64, align 1, !tbaa !27
  %65 = getelementptr inbounds i8, i8* %64, i64 1
  %66 = bitcast i8* %65 to i16*
  store i16 42, i16* %66, align 1
  %sext15 = add i64 %58, 8589934592
  %67 = ashr exact i64 %sext15, 32
  %68 = getelementptr inbounds i8, i8* %60, i64 %67
  store i8 0, i8* %68, align 1, !tbaa !27
  br label %97

; <label>:69                                      ; preds = %.backedge
  %70 = tail call i64 @strlen(i8* %tempType.2) #12
  %71 = shl i64 %70, 32
  %sext12 = add i64 %71, 12884901888
  %72 = ashr exact i64 %sext12, 32
  %73 = tail call i8* @realloc(i8* %tempType.2, i64 %72) #2
  %74 = icmp eq i8* %73, null
  br i1 %74, label %75, label %AppendStrings.exit8

; <label>:75                                      ; preds = %69
  tail call void @TreeCCOutOfMemory(%struct.TreeCCInput* %input) #2
  br label %AppendStrings.exit8

AppendStrings.exit8:                              ; preds = %69, %75
  %76 = ashr exact i64 %71, 32
  %77 = getelementptr inbounds i8, i8* %73, i64 %76
  store i8 32, i8* %77, align 1, !tbaa !27
  %78 = getelementptr inbounds i8, i8* %77, i64 1
  %79 = bitcast i8* %78 to i16*
  store i16 38, i16* %79, align 1
  %sext13 = add i64 %71, 8589934592
  %80 = ashr exact i64 %sext13, 32
  %81 = getelementptr inbounds i8, i8* %73, i64 %80
  store i8 0, i8* %81, align 1, !tbaa !27
  br label %97

; <label>:82                                      ; preds = %.backedge
  %83 = tail call i64 @strlen(i8* %tempType.2) #12
  %84 = shl i64 %83, 32
  %sext = add i64 %84, 12884901888
  %85 = ashr exact i64 %sext, 32
  %86 = tail call i8* @realloc(i8* %tempType.2, i64 %85) #2
  %87 = icmp eq i8* %86, null
  br i1 %87, label %88, label %AppendStrings.exit10

; <label>:88                                      ; preds = %82
  tail call void @TreeCCOutOfMemory(%struct.TreeCCInput* %input) #2
  br label %AppendStrings.exit10

AppendStrings.exit10:                             ; preds = %82, %88
  %89 = ashr exact i64 %84, 32
  %90 = getelementptr inbounds i8, i8* %86, i64 %89
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %90, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.26.881, i64 0, i64 0), i64 3, i32 1, i1 false)
  %sext11 = add i64 %84, 8589934592
  %91 = ashr exact i64 %sext11, 32
  %92 = getelementptr inbounds i8, i8* %86, i64 %91
  store i8 0, i8* %92, align 1, !tbaa !27
  %93 = tail call i32 @TreeCCNextToken(%struct.TreeCCInput* %input) #2
  %94 = load i32, i32* %1, align 4, !tbaa !97
  %95 = icmp eq i32 %94, 10
  br i1 %95, label %97, label %96

; <label>:96                                      ; preds = %AppendStrings.exit10
  tail call void (%struct.TreeCCInput*, i8*, ...) @TreeCCError(%struct.TreeCCInput* %input, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.27.850, i64 0, i64 0)) #2
  br label %.backedge.backedge

.backedge.backedge:                               ; preds = %96, %97
  %tempType.2.be = phi i8* [ %tempType.3, %97 ], [ %86, %96 ]
  br label %.backedge

; <label>:97                                      ; preds = %AppendStrings.exit10, %AppendStrings.exit8, %AppendStrings.exit6
  %tempType.3 = phi i8* [ %60, %AppendStrings.exit6 ], [ %73, %AppendStrings.exit8 ], [ %86, %AppendStrings.exit10 ]
  %98 = tail call i32 @TreeCCNextToken(%struct.TreeCCInput* %input) #2
  br label %.backedge.backedge

; <label>:99                                      ; preds = %.backedge
  %.lcssa = phi i32 [ %55, %.backedge ]
  %tempType.2.lcssa = phi i8* [ %tempType.2, %.backedge ]
  %100 = icmp eq i8* %last.2.ph, null
  %101 = icmp eq i32 %.lcssa, 1
  %or.cond = and i1 %100, %101
  br i1 %or.cond, label %102, label %105

; <label>:102                                     ; preds = %99
  %103 = tail call i8* @TreeCCValue(%struct.TreeCCInput* %input) #2
  %104 = tail call i32 @TreeCCNextToken(%struct.TreeCCInput* %input) #2
  br label %105

; <label>:105                                     ; preds = %102, %99, %4
  %storemerge.2 = phi i8* [ null, %4 ], [ %tempType.2.lcssa, %99 ], [ %tempType.2.lcssa, %102 ]
  %storemerge = phi i8* [ null, %4 ], [ %last.2.ph, %99 ], [ %103, %102 ]
  store i8* %storemerge.2, i8** %type, align 8, !tbaa !7
  store i8* %storemerge, i8** %name, align 8, !tbaa !7
  ret void
}

; Function Attrs: nounwind uwtable
define void @TreeCCIncludeSkeleton(%struct._tagTreeCCContext* nocapture readonly %context, %struct._tagTreeCCStream* %stream, i8* %skeleton) #0 {
  %buffer = alloca [8192 x i8], align 16
  %1 = load i8*, i8** getelementptr inbounds ([17 x i8*], [17 x i8*]* @TreeCCSkelFiles, i64 0, i64 0), align 8, !tbaa !7
  %2 = icmp eq i8* %1, null
  br i1 %2, label %FindSkeletonString.exit.thread, label %.lr.ph.i.preheader

.lr.ph.i.preheader:                               ; preds = %0
  br label %.lr.ph.i

.lr.ph.i:                                         ; preds = %.lr.ph.i.preheader, %6
  %3 = phi i8* [ %8, %6 ], [ %1, %.lr.ph.i.preheader ]
  %search.02.i = phi i8** [ %7, %6 ], [ getelementptr inbounds ([17 x i8*], [17 x i8*]* @TreeCCSkelFiles, i64 0, i64 0), %.lr.ph.i.preheader ]
  %4 = tail call i32 @strcmp(i8* %3, i8* %skeleton) #2
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %FindSkeletonString.exit, label %6

; <label>:6                                       ; preds = %.lr.ph.i
  %7 = getelementptr inbounds i8*, i8** %search.02.i, i64 2
  %8 = load i8*, i8** %7, align 8, !tbaa !7
  %9 = icmp eq i8* %8, null
  br i1 %9, label %FindSkeletonString.exit.thread.loopexit, label %.lr.ph.i

FindSkeletonString.exit.thread.loopexit:          ; preds = %6
  br label %FindSkeletonString.exit.thread

FindSkeletonString.exit.thread:                   ; preds = %FindSkeletonString.exit.thread.loopexit, %0
  %10 = getelementptr inbounds [8192 x i8], [8192 x i8]* %buffer, i64 0, i64 0
  call void @llvm.lifetime.start(i64 8192, i8* %10) #2
  br label %15

FindSkeletonString.exit:                          ; preds = %.lr.ph.i
  %search.02.i.lcssa = phi i8** [ %search.02.i, %.lr.ph.i ]
  %11 = getelementptr inbounds i8*, i8** %search.02.i.lcssa, i64 1
  %12 = load i8*, i8** %11, align 8, !tbaa !7
  %13 = getelementptr inbounds [8192 x i8], [8192 x i8]* %buffer, i64 0, i64 0
  call void @llvm.lifetime.start(i64 8192, i8* %13) #2
  %14 = icmp eq i8* %12, null
  br i1 %14, label %15, label %18

; <label>:15                                      ; preds = %FindSkeletonString.exit.thread, %FindSkeletonString.exit
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !7
  %17 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %16, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.884, i64 0, i64 0), i8* %skeleton) #10
  tail call void @exit(i32 1) #9
  unreachable

; <label>:18                                      ; preds = %FindSkeletonString.exit
  tail call void @TreeCCStreamLine(%struct._tagTreeCCStream* %stream, i64 1, i8* %skeleton) #2
  %19 = load i8, i8* %12, align 1, !tbaa !27
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %._crit_edge, label %.preheader.i.preheader.lr.ph

.preheader.i.preheader.lr.ph:                     ; preds = %18
  %21 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 9
  %22 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 10
  br label %.preheader.i

.preheader.i:                                     ; preds = %.preheader.i.backedge, %.preheader.i.preheader.lr.ph
  %23 = phi i8 [ %19, %.preheader.i.preheader.lr.ph ], [ %.be, %.preheader.i.backedge ]
  %.02.i = phi i8* [ %13, %.preheader.i.preheader.lr.ph ], [ %.02.i.be, %.preheader.i.backedge ]
  %.01.i = phi i32 [ 8192, %.preheader.i.preheader.lr.ph ], [ %.01.i.be, %.preheader.i.backedge ]
  %ptr.0.i = phi i8* [ %12, %.preheader.i.preheader.lr.ph ], [ %ptr.0.i.be, %.preheader.i.backedge ]
  switch i8 %23, label %24 [
    i8 10, label %31
    i8 0, label %.loopexit
  ]

; <label>:24                                      ; preds = %.preheader.i
  %25 = icmp sgt i32 %.01.i, 2
  br i1 %25, label %26, label %29

; <label>:26                                      ; preds = %24
  %27 = getelementptr inbounds i8, i8* %.02.i, i64 1
  store i8 %23, i8* %.02.i, align 1, !tbaa !27
  %28 = add nsw i32 %.01.i, -1
  br label %29

; <label>:29                                      ; preds = %26, %24
  %.13.i = phi i8* [ %27, %26 ], [ %.02.i, %24 ]
  %.1.i = phi i32 [ %28, %26 ], [ %.01.i, %24 ]
  %30 = getelementptr inbounds i8, i8* %ptr.0.i, i64 1
  %.pre.i = load i8, i8* %30, align 1, !tbaa !27
  br label %.preheader.i.backedge

.preheader.i.backedge:                            ; preds = %29, %.backedge
  %.be = phi i8 [ %.pre.i, %29 ], [ %74, %.backedge ]
  %.02.i.be = phi i8* [ %.13.i, %29 ], [ %13, %.backedge ]
  %.01.i.be = phi i32 [ %.1.i, %29 ], [ 8192, %.backedge ]
  %ptr.0.i.be = phi i8* [ %30, %29 ], [ %ptr.1.i, %.backedge ]
  br label %.preheader.i

; <label>:31                                      ; preds = %.preheader.i
  %32 = getelementptr inbounds i8, i8* %ptr.0.i, i64 1
  %33 = getelementptr inbounds i8, i8* %.02.i, i64 1
  store i8 10, i8* %.02.i, align 1, !tbaa !27
  br label %.loopexit

.loopexit:                                        ; preds = %.preheader.i, %31
  %.2.i = phi i8* [ %33, %31 ], [ %.02.i, %.preheader.i ]
  %ptr.1.i = phi i8* [ %32, %31 ], [ %ptr.0.i, %.preheader.i ]
  store i8 0, i8* %.2.i, align 1, !tbaa !27
  %34 = call i8* @strchr(i8* %13, i32 89) #2
  %35 = icmp eq i8* %34, null
  br i1 %35, label %36, label %.outer.preheader

; <label>:36                                      ; preds = %.loopexit
  %37 = call i8* @strchr(i8* %13, i32 121) #2
  %38 = icmp eq i8* %37, null
  br i1 %38, label %79, label %.outer.preheader

.outer.preheader:                                 ; preds = %36, %.loopexit
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %.outer.preheader
  %posn.0.ph = phi i32 [ 0, %.outer.preheader ], [ %posn.0.ph.be, %.outer.backedge ]
  %39 = sext i32 %posn.0.ph to i64
  br label %40

; <label>:40                                      ; preds = %.outer, %70
  %indvars.iv = phi i64 [ %39, %.outer ], [ %indvars.iv.next, %70 ]
  %posn.0 = phi i32 [ %posn.0.ph, %.outer ], [ %.pre-phi, %70 ]
  %41 = getelementptr inbounds [8192 x i8], [8192 x i8]* %buffer, i64 0, i64 %indvars.iv
  %42 = load i8, i8* %41, align 1, !tbaa !27
  switch i8 %42, label %._crit_edge.17 [
    i8 0, label %71
    i8 89, label %43
    i8 121, label %55
  ]

; <label>:43                                      ; preds = %40
  %44 = call i32 @strncmp(i8* %41, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1.885, i64 0, i64 0), i64 11) #12
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %._crit_edge.17

; <label>:46                                      ; preds = %43
  %.lcssa36 = phi i8* [ %41, %43 ]
  %indvars.iv.lcssa34 = phi i64 [ %indvars.iv, %43 ]
  %47 = trunc i64 %indvars.iv.lcssa34 to i32
  store i8 0, i8* %.lcssa36, align 1, !tbaa !27
  %48 = icmp slt i32 %posn.0.ph, %47
  br i1 %48, label %49, label %52

; <label>:49                                      ; preds = %46
  %50 = sext i32 %posn.0.ph to i64
  %51 = getelementptr inbounds [8192 x i8], [8192 x i8]* %buffer, i64 0, i64 %50
  call void @TreeCCStreamCode(%struct._tagTreeCCStream* %stream, i8* %51) #2
  br label %52

; <label>:52                                      ; preds = %49, %46
  %53 = load i8*, i8** %22, align 8, !tbaa !31
  call void @TreeCCStreamCode(%struct._tagTreeCCStream* %stream, i8* %53) #2
  %54 = add nsw i32 %47, 11
  br label %.outer.backedge

._crit_edge.17:                                   ; preds = %40, %43
  %.pre = add nsw i32 %posn.0, 1
  br label %70

; <label>:55                                      ; preds = %40
  %56 = add nsw i32 %posn.0, 1
  %57 = sext i32 %56 to i64
  %58 = getelementptr inbounds [8192 x i8], [8192 x i8]* %buffer, i64 0, i64 %57
  %59 = load i8, i8* %58, align 1, !tbaa !27
  %60 = icmp eq i8 %59, 121
  br i1 %60, label %61, label %70

; <label>:61                                      ; preds = %55
  %.lcssa35 = phi i8* [ %41, %55 ]
  %indvars.iv.lcssa33 = phi i64 [ %indvars.iv, %55 ]
  %62 = trunc i64 %indvars.iv.lcssa33 to i32
  store i8 0, i8* %.lcssa35, align 1, !tbaa !27
  %63 = icmp slt i32 %posn.0.ph, %62
  br i1 %63, label %64, label %67

; <label>:64                                      ; preds = %61
  %65 = sext i32 %posn.0.ph to i64
  %66 = getelementptr inbounds [8192 x i8], [8192 x i8]* %buffer, i64 0, i64 %65
  call void @TreeCCStreamCode(%struct._tagTreeCCStream* %stream, i8* %66) #2
  br label %67

; <label>:67                                      ; preds = %64, %61
  %68 = load i8*, i8** %21, align 8, !tbaa !30
  call void @TreeCCStreamCode(%struct._tagTreeCCStream* %stream, i8* %68) #2
  %69 = add nsw i32 %62, 2
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %67, %52
  %posn.0.ph.be = phi i32 [ %54, %52 ], [ %69, %67 ]
  br label %.outer

; <label>:70                                      ; preds = %._crit_edge.17, %55
  %.pre-phi = phi i32 [ %.pre, %._crit_edge.17 ], [ %56, %55 ]
  %indvars.iv.next = add i64 %indvars.iv, 1
  br label %40

; <label>:71                                      ; preds = %40
  %posn.0.ph.lcssa = phi i32 [ %posn.0.ph, %40 ]
  %indvars.iv.lcssa = phi i64 [ %indvars.iv, %40 ]
  %72 = trunc i64 %indvars.iv.lcssa to i32
  %73 = icmp slt i32 %posn.0.ph.lcssa, %72
  br i1 %73, label %76, label %.backedge

.backedge:                                        ; preds = %71, %76, %79
  %74 = load i8, i8* %ptr.1.i, align 1, !tbaa !27
  %75 = icmp eq i8 %74, 0
  br i1 %75, label %._crit_edge.loopexit, label %.preheader.i.backedge

; <label>:76                                      ; preds = %71
  %77 = sext i32 %posn.0.ph.lcssa to i64
  %78 = getelementptr inbounds [8192 x i8], [8192 x i8]* %buffer, i64 0, i64 %77
  call void @TreeCCStreamCode(%struct._tagTreeCCStream* %stream, i8* %78) #2
  br label %.backedge

; <label>:79                                      ; preds = %36
  call void @TreeCCStreamCode(%struct._tagTreeCCStream* %stream, i8* %13) #2
  br label %.backedge

._crit_edge.loopexit:                             ; preds = %.backedge
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %18
  call void @TreeCCStreamFixLine(%struct._tagTreeCCStream* %stream) #2
  call void @llvm.lifetime.end(i64 8192, i8* %13) #2
  ret void
}

; Function Attrs: nounwind readonly
declare i8* @strchr(i8*, i32) #5

; Function Attrs: nounwind uwtable
define i8* @TreeCCDupString(i8* nocapture readonly %str) #0 {
  %1 = tail call i64 @strlen(i8* %str) #12
  %2 = add i64 %1, 1
  %3 = tail call noalias i8* @malloc(i64 %2) #2
  %4 = icmp eq i8* %3, null
  br i1 %4, label %5, label %6

; <label>:5                                       ; preds = %0
  tail call void @TreeCCOutOfMemory(%struct.TreeCCInput* null) #2
  br label %6

; <label>:6                                       ; preds = %0, %5
  %7 = tail call i8* @strcpy(i8* %3, i8* %str) #2
  ret i8* %3
}

; Function Attrs: nounwind uwtable
define i8* @TreeCCResolvePathname(i8* readonly %absolute, i8* nocapture readonly %relative) #0 {
  %1 = icmp eq i8* %absolute, null
  br i1 %1, label %2, label %9

; <label>:2                                       ; preds = %0
  %3 = tail call i64 @strlen(i8* %relative) #12
  %4 = add i64 %3, 1
  %5 = tail call noalias i8* @malloc(i64 %4) #2
  %6 = icmp eq i8* %5, null
  br i1 %6, label %7, label %TreeCCDupString.exit

; <label>:7                                       ; preds = %2
  tail call void @TreeCCOutOfMemory(%struct.TreeCCInput* null) #2
  br label %TreeCCDupString.exit

TreeCCDupString.exit:                             ; preds = %2, %7
  %8 = tail call i8* @strcpy(i8* %5, i8* %relative) #2
  br label %40

; <label>:9                                       ; preds = %0
  %10 = tail call i64 @strlen(i8* %absolute) #12
  %11 = trunc i64 %10 to i32
  %sext = shl i64 %10, 32
  %12 = ashr exact i64 %sext, 32
  br label %13

; <label>:13                                      ; preds = %15, %9
  %indvars.iv = phi i64 [ %indvars.iv.next, %15 ], [ %12, %9 ]
  %len.0 = phi i32 [ %16, %15 ], [ %11, %9 ]
  %14 = icmp sgt i64 %indvars.iv, 0
  br i1 %14, label %15, label %.critedge.thread.loopexit

; <label>:15                                      ; preds = %13
  %16 = add nsw i32 %len.0, -1
  %17 = sext i32 %16 to i64
  %18 = getelementptr inbounds i8, i8* %absolute, i64 %17
  %19 = load i8, i8* %18, align 1, !tbaa !27
  %indvars.iv.next = add nsw i64 %indvars.iv, -1
  switch i8 %19, label %13 [
    i8 92, label %.critedge
    i8 47, label %.critedge
  ]

.critedge:                                        ; preds = %15, %15
  %indvars.iv.lcssa8 = phi i64 [ %indvars.iv, %15 ], [ %indvars.iv, %15 ]
  %20 = trunc i64 %indvars.iv.lcssa8 to i32
  %21 = icmp slt i32 %20, 1
  br i1 %21, label %.critedge.thread, label %28

.critedge.thread.loopexit:                        ; preds = %13
  br label %.critedge.thread

.critedge.thread:                                 ; preds = %.critedge.thread.loopexit, %.critedge
  %22 = tail call i64 @strlen(i8* %relative) #12
  %23 = add i64 %22, 1
  %24 = tail call noalias i8* @malloc(i64 %23) #2
  %25 = icmp eq i8* %24, null
  br i1 %25, label %26, label %TreeCCDupString.exit1

; <label>:26                                      ; preds = %.critedge.thread
  tail call void @TreeCCOutOfMemory(%struct.TreeCCInput* null) #2
  br label %TreeCCDupString.exit1

TreeCCDupString.exit1:                            ; preds = %.critedge.thread, %26
  %27 = tail call i8* @strcpy(i8* %24, i8* %relative) #2
  br label %40

; <label>:28                                      ; preds = %.critedge
  %sext4 = shl i64 %indvars.iv.lcssa8, 32
  %29 = ashr exact i64 %sext4, 32
  %30 = tail call i64 @strlen(i8* %relative) #12
  %31 = add nsw i64 %29, 1
  %32 = add i64 %31, %30
  %33 = tail call noalias i8* @malloc(i64 %32) #2
  %34 = icmp eq i8* %33, null
  br i1 %34, label %35, label %36

; <label>:35                                      ; preds = %28
  tail call void @TreeCCOutOfMemory(%struct.TreeCCInput* null) #2
  br label %36

; <label>:36                                      ; preds = %28, %35
  %37 = tail call i8* @strncpy(i8* %33, i8* %absolute, i64 %29) #2
  %38 = getelementptr inbounds i8, i8* %33, i64 %29
  %39 = tail call i8* @strcpy(i8* %38, i8* %relative) #2
  br label %40

; <label>:40                                      ; preds = %36, %TreeCCDupString.exit1, %TreeCCDupString.exit
  %.0 = phi i8* [ %24, %TreeCCDupString.exit1 ], [ %33, %36 ], [ %5, %TreeCCDupString.exit ]
  ret i8* %.0
}

; Function Attrs: nounwind uwtable
define %struct._tagTreeCCStream* @TreeCCStreamCreate(%struct._tagTreeCCContext* %context, i8* nocapture readonly %filename, i8* readonly %embedName, i32 %isHeader) #0 {
  %1 = icmp slt i32 %isHeader, 0
  br i1 %1, label %2, label %9

; <label>:2                                       ; preds = %0
  %3 = tail call i64 @strlen(i8* %filename) #12
  %4 = add i64 %3, 1
  %5 = tail call noalias i8* @malloc(i64 %4) #2
  %6 = icmp eq i8* %5, null
  br i1 %6, label %7, label %TreeCCDupString.exit

; <label>:7                                       ; preds = %2
  tail call void @TreeCCOutOfMemory(%struct.TreeCCInput* null) #2
  br label %TreeCCDupString.exit

TreeCCDupString.exit:                             ; preds = %2, %7
  %8 = tail call i8* @strcpy(i8* %5, i8* %filename) #2
  br label %15

; <label>:9                                       ; preds = %0
  %10 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 2
  %11 = load %struct.TreeCCInput*, %struct.TreeCCInput** %10, align 8, !tbaa !1
  %12 = getelementptr inbounds %struct.TreeCCInput, %struct.TreeCCInput* %11, i64 0, i32 4
  %13 = load i8*, i8** %12, align 8, !tbaa !21
  %14 = tail call i8* @TreeCCResolvePathname(i8* %13, i8* %filename)
  %phitmp = trunc i32 %isHeader to i8
  %phitmp2 = shl i8 %phitmp, 2
  %phitmp3 = and i8 %phitmp2, 4
  br label %15

; <label>:15                                      ; preds = %9, %TreeCCDupString.exit
  %path.0 = phi i8* [ %5, %TreeCCDupString.exit ], [ %14, %9 ]
  %.01 = phi i8 [ 0, %TreeCCDupString.exit ], [ %phitmp3, %9 ]
  %16 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 3
  %stream.0.7 = load %struct._tagTreeCCStream*, %struct._tagTreeCCStream** %16, align 8
  %17 = icmp eq %struct._tagTreeCCStream* %stream.0.7, null
  br i1 %17, label %._crit_edge, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %15
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %23
  %stream.08 = phi %struct._tagTreeCCStream* [ %stream.0, %23 ], [ %stream.0.7, %.lr.ph.preheader ]
  %18 = getelementptr inbounds %struct._tagTreeCCStream, %struct._tagTreeCCStream* %stream.08, i64 0, i32 1
  %19 = load i8*, i8** %18, align 8, !tbaa !131
  %20 = tail call i32 @strcmp(i8* %19, i8* %path.0) #2
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %23

; <label>:22                                      ; preds = %.lr.ph
  %stream.08.lcssa = phi %struct._tagTreeCCStream* [ %stream.08, %.lr.ph ]
  tail call void @free(i8* %path.0) #2
  br label %73

; <label>:23                                      ; preds = %.lr.ph
  %24 = getelementptr inbounds %struct._tagTreeCCStream, %struct._tagTreeCCStream* %stream.08, i64 0, i32 10
  %stream.0 = load %struct._tagTreeCCStream*, %struct._tagTreeCCStream** %24, align 8
  %25 = icmp eq %struct._tagTreeCCStream* %stream.0, null
  br i1 %25, label %._crit_edge.loopexit, label %.lr.ph

._crit_edge.loopexit:                             ; preds = %23
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %15
  %26 = tail call noalias i8* @malloc(i64 80) #2
  %27 = bitcast i8* %26 to %struct._tagTreeCCStream*
  %28 = icmp eq i8* %26, null
  br i1 %28, label %29, label %30

; <label>:29                                      ; preds = %._crit_edge
  tail call void @TreeCCOutOfMemory(%struct.TreeCCInput* null) #2
  br label %30

; <label>:30                                      ; preds = %._crit_edge, %29
  %31 = bitcast i8* %26 to %struct._tagTreeCCContext**
  store %struct._tagTreeCCContext* %context, %struct._tagTreeCCContext** %31, align 8, !tbaa !132
  %32 = getelementptr inbounds i8, i8* %26, i64 8
  %33 = bitcast i8* %32 to i8**
  store i8* %path.0, i8** %33, align 8, !tbaa !131
  %34 = icmp eq i8* %embedName, null
  br i1 %34, label %42, label %35

; <label>:35                                      ; preds = %30
  %36 = tail call i64 @strlen(i8* %embedName) #12
  %37 = add i64 %36, 1
  %38 = tail call noalias i8* @malloc(i64 %37) #2
  %39 = icmp eq i8* %38, null
  br i1 %39, label %40, label %TreeCCDupString.exit4

; <label>:40                                      ; preds = %35
  tail call void @TreeCCOutOfMemory(%struct.TreeCCInput* null) #2
  br label %TreeCCDupString.exit4

TreeCCDupString.exit4:                            ; preds = %35, %40
  %41 = tail call i8* @strcpy(i8* %38, i8* %embedName) #2
  br label %49

; <label>:42                                      ; preds = %30
  %43 = tail call i64 @strlen(i8* %filename) #12
  %44 = add i64 %43, 1
  %45 = tail call noalias i8* @malloc(i64 %44) #2
  %46 = icmp eq i8* %45, null
  br i1 %46, label %47, label %TreeCCDupString.exit5

; <label>:47                                      ; preds = %42
  tail call void @TreeCCOutOfMemory(%struct.TreeCCInput* null) #2
  br label %TreeCCDupString.exit5

TreeCCDupString.exit5:                            ; preds = %42, %47
  %48 = tail call i8* @strcpy(i8* %45, i8* %filename) #2
  br label %49

; <label>:49                                      ; preds = %TreeCCDupString.exit5, %TreeCCDupString.exit4
  %50 = phi i8* [ %38, %TreeCCDupString.exit4 ], [ %45, %TreeCCDupString.exit5 ]
  %51 = getelementptr inbounds i8, i8* %26, i64 16
  %52 = bitcast i8* %51 to i8**
  store i8* %50, i8** %52, align 8, !tbaa !69
  %53 = getelementptr inbounds i8, i8* %26, i64 24
  %54 = bitcast i8* %53 to i64*
  store i64 1, i64* %54, align 8, !tbaa !133
  %55 = getelementptr inbounds i8, i8* %26, i64 32
  %56 = getelementptr inbounds i8, i8* %26, i64 48
  %57 = bitcast i8* %56 to i32*
  call void @llvm.memset.p0i8.i64(i8* %55, i8 0, i64 16, i32 8, i1 false)
  store i32 2048, i32* %57, align 4, !tbaa !134
  %58 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 8
  %59 = load i16, i16* %58, align 8
  %60 = lshr i16 %59, 4
  %61 = getelementptr inbounds i8, i8* %26, i64 52
  %.tr = trunc i16 %60 to i8
  %62 = and i8 %.tr, 1
  %63 = load i8, i8* %61, align 4
  %64 = and i8 %63, -32
  %65 = or i8 %64, %.01
  %66 = or i8 %65, %62
  store i8 %66, i8* %61, align 4
  %67 = getelementptr inbounds i8, i8* %26, i64 56
  %68 = bitcast %struct._tagTreeCCStream** %16 to i64*
  call void @llvm.memset.p0i8.i64(i8* %67, i8 0, i64 16, i32 8, i1 false)
  %69 = load i64, i64* %68, align 8, !tbaa !13
  %70 = getelementptr inbounds i8, i8* %26, i64 72
  %71 = bitcast i8* %70 to i64*
  store i64 %69, i64* %71, align 8, !tbaa !14
  %72 = bitcast %struct._tagTreeCCStream** %16 to i8**
  store i8* %26, i8** %72, align 8, !tbaa !13
  br label %73

; <label>:73                                      ; preds = %49, %22
  %.0 = phi %struct._tagTreeCCStream* [ %stream.08.lcssa, %22 ], [ %27, %49 ]
  ret %struct._tagTreeCCStream* %.0
}

; Function Attrs: nounwind uwtable
define %struct._tagTreeCCStream* @TreeCCStreamGetJava(%struct._tagTreeCCContext* %context, i8* nocapture readonly %className) #0 {
  %1 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 15
  %2 = load i8*, i8** %1, align 8, !tbaa !107
  %3 = icmp eq i8* %2, null
  br i1 %3, label %24, label %4

; <label>:4                                       ; preds = %0
  %5 = tail call i64 @strlen(i8* %2) #12
  %6 = tail call i64 @strlen(i8* %className) #12
  %7 = add i64 %6, %5
  %8 = shl i64 %7, 32
  %sext2 = add i64 %8, 30064771072
  %9 = ashr exact i64 %sext2, 32
  %10 = tail call noalias i8* @malloc(i64 %9) #2
  %11 = icmp eq i8* %10, null
  br i1 %11, label %12, label %15

; <label>:12                                      ; preds = %4
  %13 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 2
  %14 = load %struct.TreeCCInput*, %struct.TreeCCInput** %13, align 8, !tbaa !1
  tail call void @TreeCCOutOfMemory(%struct.TreeCCInput* %14) #2
  %.pre = load i8*, i8** %1, align 8, !tbaa !107
  br label %15

; <label>:15                                      ; preds = %12, %4
  %16 = phi i8* [ %.pre, %12 ], [ %2, %4 ]
  %17 = tail call i8* @strcpy(i8* %10, i8* %16) #2
  %18 = load i8*, i8** %1, align 8, !tbaa !107
  %19 = tail call i64 @strlen(i8* %18) #12
  %sext3 = shl i64 %19, 32
  %20 = ashr exact i64 %sext3, 32
  %21 = getelementptr inbounds i8, i8* %10, i64 %20
  store i8 47, i8* %21, align 1, !tbaa !27
  %22 = getelementptr inbounds i8, i8* %21, i64 1
  %23 = tail call i8* @strcpy(i8* %22, i8* %className) #2
  %strlen4 = tail call i64 @strlen(i8* %10)
  %endptr5 = getelementptr i8, i8* %10, i64 %strlen4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %endptr5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.934, i64 0, i64 0), i64 6, i32 1, i1 false)
  %sext1 = add i64 %sext3, 4294967296
  %phitmp = ashr exact i64 %sext1, 32
  br label %35

; <label>:24                                      ; preds = %0
  %25 = tail call i64 @strlen(i8* %className) #12
  %26 = shl i64 %25, 32
  %sext = add i64 %26, 25769803776
  %27 = ashr exact i64 %sext, 32
  %28 = tail call noalias i8* @malloc(i64 %27) #2
  %29 = icmp eq i8* %28, null
  br i1 %29, label %30, label %33

; <label>:30                                      ; preds = %24
  %31 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %context, i64 0, i32 2
  %32 = load %struct.TreeCCInput*, %struct.TreeCCInput** %31, align 8, !tbaa !1
  tail call void @TreeCCOutOfMemory(%struct.TreeCCInput* %32) #2
  br label %33

; <label>:33                                      ; preds = %30, %24
  %34 = tail call i8* @strcpy(i8* %28, i8* %className) #2
  %strlen = tail call i64 @strlen(i8* %28)
  %endptr = getelementptr i8, i8* %28, i64 %strlen
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %endptr, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.934, i64 0, i64 0), i64 6, i32 1, i1 false)
  br label %35

; <label>:35                                      ; preds = %33, %15
  %len.0 = phi i64 [ %phitmp, %15 ], [ 0, %33 ]
  %filename.0 = phi i8* [ %10, %15 ], [ %28, %33 ]
  %36 = getelementptr inbounds i8, i8* %filename.0, i64 %len.0
  %37 = tail call %struct._tagTreeCCStream* @TreeCCStreamCreate(%struct._tagTreeCCContext* %context, i8* %filename.0, i8* %36, i32 -1)
  tail call void @free(i8* %filename.0) #2
  ret %struct._tagTreeCCStream* %37
}

; Function Attrs: nounwind uwtable
define void @TreeCCStreamDestroy(%struct._tagTreeCCStream* nocapture %stream) #0 {
  %1 = getelementptr inbounds %struct._tagTreeCCStream, %struct._tagTreeCCStream* %stream, i64 0, i32 4
  %2 = load %struct._tagTreeCCStreamBuf*, %struct._tagTreeCCStreamBuf** %1, align 8, !tbaa !135
  %3 = icmp eq %struct._tagTreeCCStreamBuf* %2, null
  br i1 %3, label %TreeCCStreamClear.exit, label %.lr.ph.i.preheader

.lr.ph.i.preheader:                               ; preds = %0
  br label %.lr.ph.i

.lr.ph.i:                                         ; preds = %.lr.ph.i.preheader, %.lr.ph.i
  %buffer.01.i = phi %struct._tagTreeCCStreamBuf* [ %5, %.lr.ph.i ], [ %2, %.lr.ph.i.preheader ]
  %4 = getelementptr inbounds %struct._tagTreeCCStreamBuf, %struct._tagTreeCCStreamBuf* %buffer.01.i, i64 0, i32 1
  %5 = load %struct._tagTreeCCStreamBuf*, %struct._tagTreeCCStreamBuf** %4, align 8, !tbaa !136
  %6 = getelementptr inbounds %struct._tagTreeCCStreamBuf, %struct._tagTreeCCStreamBuf* %buffer.01.i, i64 0, i32 0, i64 0
  tail call void @free(i8* %6) #2
  %7 = icmp eq %struct._tagTreeCCStreamBuf* %5, null
  br i1 %7, label %TreeCCStreamClear.exit.loopexit, label %.lr.ph.i

TreeCCStreamClear.exit.loopexit:                  ; preds = %.lr.ph.i
  br label %TreeCCStreamClear.exit

TreeCCStreamClear.exit:                           ; preds = %TreeCCStreamClear.exit.loopexit, %0
  %8 = getelementptr inbounds %struct._tagTreeCCStream, %struct._tagTreeCCStream* %stream, i64 0, i32 7
  %9 = bitcast %struct._tagTreeCCStreamBuf** %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* %9, i8 0, i64 16, i32 8, i1 false) #2
  %10 = load i8, i8* %8, align 4
  %11 = and i8 %10, -17
  store i8 %11, i8* %8, align 4
  %12 = getelementptr inbounds %struct._tagTreeCCStream, %struct._tagTreeCCStream* %stream, i64 0, i32 6
  store i32 2048, i32* %12, align 4, !tbaa !134
  %13 = getelementptr inbounds %struct._tagTreeCCStream, %struct._tagTreeCCStream* %stream, i64 0, i32 3
  store i64 1, i64* %13, align 8, !tbaa !133
  %14 = getelementptr inbounds %struct._tagTreeCCStream, %struct._tagTreeCCStream* %stream, i64 0, i32 8
  %15 = load %struct._tagTreeCCStreamDefn*, %struct._tagTreeCCStreamDefn** %14, align 8, !tbaa !138
  %16 = icmp eq %struct._tagTreeCCStreamDefn* %15, null
  br i1 %16, label %._crit_edge, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %TreeCCStreamClear.exit
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %25
  %defn.01 = phi %struct._tagTreeCCStreamDefn* [ %18, %25 ], [ %15, %.lr.ph.preheader ]
  %17 = getelementptr inbounds %struct._tagTreeCCStreamDefn, %struct._tagTreeCCStreamDefn* %defn.01, i64 0, i32 5
  %18 = load %struct._tagTreeCCStreamDefn*, %struct._tagTreeCCStreamDefn** %17, align 8, !tbaa !139
  %19 = getelementptr inbounds %struct._tagTreeCCStreamDefn, %struct._tagTreeCCStreamDefn* %defn.01, i64 0, i32 4
  %20 = load i32, i32* %19, align 4, !tbaa !141
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

; <label>:22                                      ; preds = %.lr.ph
  %23 = getelementptr inbounds %struct._tagTreeCCStreamDefn, %struct._tagTreeCCStreamDefn* %defn.01, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8, !tbaa !142
  tail call void @free(i8* %24) #2
  br label %25

; <label>:25                                      ; preds = %.lr.ph, %22
  %26 = bitcast %struct._tagTreeCCStreamDefn* %defn.01 to i8*
  tail call void @free(i8* %26) #2
  %27 = icmp eq %struct._tagTreeCCStreamDefn* %18, null
  br i1 %27, label %._crit_edge.loopexit, label %.lr.ph

._crit_edge.loopexit:                             ; preds = %25
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %TreeCCStreamClear.exit
  %28 = getelementptr inbounds %struct._tagTreeCCStream, %struct._tagTreeCCStream* %stream, i64 0, i32 1
  %29 = load i8*, i8** %28, align 8, !tbaa !131
  tail call void @free(i8* %29) #2
  %30 = getelementptr inbounds %struct._tagTreeCCStream, %struct._tagTreeCCStream* %stream, i64 0, i32 2
  %31 = load i8*, i8** %30, align 8, !tbaa !69
  tail call void @free(i8* %31) #2
  %32 = bitcast %struct._tagTreeCCStream* %stream to i8*
  tail call void @free(i8* %32) #2
  ret void
}

; Function Attrs: nounwind uwtable
define void @TreeCCStreamClear(%struct._tagTreeCCStream* nocapture %stream) #0 {
  %1 = getelementptr inbounds %struct._tagTreeCCStream, %struct._tagTreeCCStream* %stream, i64 0, i32 4
  %2 = load %struct._tagTreeCCStreamBuf*, %struct._tagTreeCCStreamBuf** %1, align 8, !tbaa !135
  %3 = icmp eq %struct._tagTreeCCStreamBuf* %2, null
  br i1 %3, label %._crit_edge, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %0
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %.lr.ph
  %buffer.01 = phi %struct._tagTreeCCStreamBuf* [ %5, %.lr.ph ], [ %2, %.lr.ph.preheader ]
  %4 = getelementptr inbounds %struct._tagTreeCCStreamBuf, %struct._tagTreeCCStreamBuf* %buffer.01, i64 0, i32 1
  %5 = load %struct._tagTreeCCStreamBuf*, %struct._tagTreeCCStreamBuf** %4, align 8, !tbaa !136
  %6 = getelementptr inbounds %struct._tagTreeCCStreamBuf, %struct._tagTreeCCStreamBuf* %buffer.01, i64 0, i32 0, i64 0
  tail call void @free(i8* %6) #2
  %7 = icmp eq %struct._tagTreeCCStreamBuf* %5, null
  br i1 %7, label %._crit_edge.loopexit, label %.lr.ph

._crit_edge.loopexit:                             ; preds = %.lr.ph
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %0
  %8 = getelementptr inbounds %struct._tagTreeCCStream, %struct._tagTreeCCStream* %stream, i64 0, i32 7
  %9 = bitcast %struct._tagTreeCCStreamBuf** %1 to i8*
  call void @llvm.memset.p0i8.i64(i8* %9, i8 0, i64 16, i32 8, i1 false)
  %10 = load i8, i8* %8, align 4
  %11 = and i8 %10, -17
  store i8 %11, i8* %8, align 4
  %12 = getelementptr inbounds %struct._tagTreeCCStream, %struct._tagTreeCCStream* %stream, i64 0, i32 6
  store i32 2048, i32* %12, align 4, !tbaa !134
  %13 = getelementptr inbounds %struct._tagTreeCCStream, %struct._tagTreeCCStream* %stream, i64 0, i32 3
  store i64 1, i64* %13, align 8, !tbaa !133
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @TreeCCStreamFlush(%struct._tagTreeCCStream* nocapture readonly %stream) #0 {
  %tempbuf = alloca [2048 x i8], align 16
  %1 = getelementptr inbounds [2048 x i8], [2048 x i8]* %tempbuf, i64 0, i64 0
  call void @llvm.lifetime.start(i64 2048, i8* %1) #2
  %2 = getelementptr inbounds %struct._tagTreeCCStream, %struct._tagTreeCCStream* %stream, i64 0, i32 7
  %3 = load i8, i8* %2, align 4
  %.mask = and i8 %3, 8
  %4 = icmp eq i8 %.mask, 0
  br i1 %4, label %9, label %5

; <label>:5                                       ; preds = %0
  %6 = getelementptr inbounds %struct._tagTreeCCStream, %struct._tagTreeCCStream* %stream, i64 0, i32 4
  %7 = load %struct._tagTreeCCStreamBuf*, %struct._tagTreeCCStreamBuf** %6, align 8, !tbaa !135
  %8 = icmp eq %struct._tagTreeCCStreamBuf* %7, null
  br i1 %8, label %94, label %9

; <label>:9                                       ; preds = %5, %0
  %10 = and i8 %3, 3
  %11 = icmp eq i8 %10, 1
  %.pre = getelementptr inbounds %struct._tagTreeCCStream, %struct._tagTreeCCStream* %stream, i64 0, i32 1
  br i1 %11, label %._crit_edge.47, label %12

; <label>:12                                      ; preds = %9
  %13 = load i8*, i8** %.pre, align 8, !tbaa !131
  %14 = tail call %struct._IO_FILE* @fopen(i8* %13, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.935, i64 0, i64 0)) #2
  %15 = icmp eq %struct._IO_FILE* %14, null
  br i1 %15, label %56, label %16

; <label>:16                                      ; preds = %12
  %17 = getelementptr inbounds %struct._tagTreeCCStream, %struct._tagTreeCCStream* %stream, i64 0, i32 4
  %18 = load %struct._tagTreeCCStreamBuf*, %struct._tagTreeCCStreamBuf** %17, align 8, !tbaa !135
  %19 = getelementptr inbounds %struct._tagTreeCCStream, %struct._tagTreeCCStream* %stream, i64 0, i32 6
  %20 = call i64 @fread(i8* %1, i64 1, i64 2048, %struct._IO_FILE* %14) #2
  %21 = trunc i64 %20 to i32
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %._crit_edge, label %.lr.ph

.lr.ph:                                           ; preds = %16
  %23 = getelementptr inbounds %struct._tagTreeCCStream, %struct._tagTreeCCStream* %stream, i64 0, i32 5
  br label %24

; <label>:24                                      ; preds = %.lr.ph, %.backedge
  %25 = phi i32 [ %21, %.lr.ph ], [ %52, %.backedge ]
  %26 = phi i64 [ %20, %.lr.ph ], [ %51, %.backedge ]
  %buffer.07 = phi %struct._tagTreeCCStreamBuf* [ %18, %.lr.ph ], [ %buffer.0.be, %.backedge ]
  %27 = icmp eq %struct._tagTreeCCStreamBuf* %buffer.07, null
  br i1 %27, label %._crit_edge.loopexit, label %28

; <label>:28                                      ; preds = %24
  %29 = load %struct._tagTreeCCStreamBuf*, %struct._tagTreeCCStreamBuf** %23, align 8, !tbaa !143
  %30 = icmp eq %struct._tagTreeCCStreamBuf* %buffer.07, %29
  br i1 %30, label %31, label %39

; <label>:31                                      ; preds = %28
  %32 = load i32, i32* %19, align 4, !tbaa !134
  %33 = icmp eq i32 %32, %25
  br i1 %33, label %34, label %._crit_edge.loopexit

; <label>:34                                      ; preds = %31
  %35 = getelementptr inbounds %struct._tagTreeCCStreamBuf, %struct._tagTreeCCStreamBuf* %buffer.07, i64 0, i32 0, i64 0
  %sext = shl i64 %26, 32
  %36 = ashr exact i64 %sext, 32
  %37 = call i32 @memcmp(i8* %35, i8* %1, i64 %36) #12
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %47, label %._crit_edge.loopexit

; <label>:39                                      ; preds = %28
  %40 = icmp eq i32 %25, 2048
  br i1 %40, label %41, label %._crit_edge.loopexit

; <label>:41                                      ; preds = %39
  %42 = getelementptr inbounds %struct._tagTreeCCStreamBuf, %struct._tagTreeCCStreamBuf* %buffer.07, i64 0, i32 0, i64 0
  %43 = call i32 @memcmp(i8* %42, i8* %1, i64 2048) #12
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %.thread, label %._crit_edge.loopexit

.thread:                                          ; preds = %41
  %45 = getelementptr inbounds %struct._tagTreeCCStreamBuf, %struct._tagTreeCCStreamBuf* %buffer.07, i64 0, i32 1
  %46 = load %struct._tagTreeCCStreamBuf*, %struct._tagTreeCCStreamBuf** %45, align 8, !tbaa !136
  br label %.backedge

; <label>:47                                      ; preds = %34
  %48 = getelementptr inbounds %struct._tagTreeCCStreamBuf, %struct._tagTreeCCStreamBuf* %buffer.07, i64 0, i32 1
  %49 = load %struct._tagTreeCCStreamBuf*, %struct._tagTreeCCStreamBuf** %48, align 8, !tbaa !136
  %50 = icmp slt i32 %25, 2048
  br i1 %50, label %._crit_edge.loopexit, label %.backedge

.backedge:                                        ; preds = %47, %.thread
  %buffer.0.be = phi %struct._tagTreeCCStreamBuf* [ %49, %47 ], [ %46, %.thread ]
  %51 = call i64 @fread(i8* %1, i64 1, i64 2048, %struct._IO_FILE* %14) #2
  %52 = trunc i64 %51 to i32
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %._crit_edge.loopexit, label %24

._crit_edge.loopexit:                             ; preds = %47, %41, %39, %34, %31, %24, %.backedge
  %buffer.1.ph = phi %struct._tagTreeCCStreamBuf* [ %buffer.0.be, %.backedge ], [ null, %24 ], [ %buffer.07, %31 ], [ %buffer.07, %34 ], [ %buffer.07, %39 ], [ %buffer.07, %41 ], [ %49, %47 ]
  %size.0.ph = phi i32 [ 0, %.backedge ], [ %25, %24 ], [ %25, %31 ], [ %25, %34 ], [ %25, %39 ], [ 2048, %41 ], [ 0, %47 ]
  %changed.0.ph = phi i1 [ true, %.backedge ], [ false, %24 ], [ false, %31 ], [ false, %34 ], [ false, %39 ], [ false, %41 ], [ true, %47 ]
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %16
  %buffer.1 = phi %struct._tagTreeCCStreamBuf* [ %18, %16 ], [ %buffer.1.ph, %._crit_edge.loopexit ]
  %size.0 = phi i32 [ 0, %16 ], [ %size.0.ph, %._crit_edge.loopexit ]
  %changed.0 = phi i1 [ true, %16 ], [ %changed.0.ph, %._crit_edge.loopexit ]
  %54 = tail call i32 @fclose(%struct._IO_FILE* %14) #2
  %notlhs = icmp ne i32 %size.0, 0
  %notrhs = icmp eq %struct._tagTreeCCStreamBuf* %buffer.1, null
  %not.or.cond = or i1 %notrhs, %notlhs
  %55 = and i1 %changed.0, %not.or.cond
  br i1 %55, label %94, label %56

; <label>:56                                      ; preds = %._crit_edge, %12
  %57 = load i8, i8* %2, align 4
  %.mask3 = and i8 %57, 2
  %58 = icmp eq i8 %.mask3, 0
  br i1 %58, label %._crit_edge.47, label %59

; <label>:59                                      ; preds = %56
  %60 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !7
  %61 = load i8*, i8** %.pre, align 8, !tbaa !131
  %62 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %60, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.2.936, i64 0, i64 0), i8* %61) #10
  br label %94

._crit_edge.47:                                   ; preds = %9, %56
  %63 = load i8*, i8** %.pre, align 8, !tbaa !131
  %64 = tail call %struct._IO_FILE* @fopen(i8* %63, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.937, i64 0, i64 0)) #2
  %65 = icmp eq %struct._IO_FILE* %64, null
  br i1 %65, label %66, label %68

; <label>:66                                      ; preds = %._crit_edge.47
  %67 = load i8*, i8** %.pre, align 8, !tbaa !131
  tail call void @perror(i8* %67) #10
  br label %94

; <label>:68                                      ; preds = %._crit_edge.47
  %69 = getelementptr inbounds %struct._tagTreeCCStream, %struct._tagTreeCCStream* %stream, i64 0, i32 4
  %buffer.0.1.i = load %struct._tagTreeCCStreamBuf*, %struct._tagTreeCCStreamBuf** %69, align 8
  %70 = icmp eq %struct._tagTreeCCStreamBuf* %buffer.0.1.i, null
  br i1 %70, label %._crit_edge.i, label %.lr.ph.i

.lr.ph.i:                                         ; preds = %68
  %71 = getelementptr inbounds %struct._tagTreeCCStream, %struct._tagTreeCCStream* %stream, i64 0, i32 5
  %72 = getelementptr inbounds %struct._tagTreeCCStream, %struct._tagTreeCCStream* %stream, i64 0, i32 6
  br label %73

; <label>:73                                      ; preds = %87, %.lr.ph.i
  %buffer.02.i = phi %struct._tagTreeCCStreamBuf* [ %buffer.0.1.i, %.lr.ph.i ], [ %buffer.0.i, %87 ]
  %74 = load %struct._tagTreeCCStreamBuf*, %struct._tagTreeCCStreamBuf** %71, align 8, !tbaa !143
  %75 = icmp eq %struct._tagTreeCCStreamBuf* %buffer.02.i, %74
  %76 = getelementptr inbounds %struct._tagTreeCCStreamBuf, %struct._tagTreeCCStreamBuf* %buffer.02.i, i64 0, i32 0, i64 0
  br i1 %75, label %77, label %84

; <label>:77                                      ; preds = %73
  %78 = load i32, i32* %72, align 4, !tbaa !134
  %79 = sext i32 %78 to i64
  %80 = tail call i64 @fwrite(i8* %76, i64 1, i64 %79, %struct._IO_FILE* %64) #2
  %81 = load i32, i32* %72, align 4, !tbaa !134
  %82 = sext i32 %81 to i64
  %83 = icmp eq i64 %80, %82
  br i1 %83, label %87, label %TreeCCStreamFlushStdio.exit.loopexit

; <label>:84                                      ; preds = %73
  %85 = tail call i64 @fwrite(i8* %76, i64 1, i64 2048, %struct._IO_FILE* %64) #2
  %86 = icmp eq i64 %85, 2048
  br i1 %86, label %87, label %TreeCCStreamFlushStdio.exit.loopexit

; <label>:87                                      ; preds = %84, %77
  %88 = getelementptr inbounds %struct._tagTreeCCStreamBuf, %struct._tagTreeCCStreamBuf* %buffer.02.i, i64 0, i32 1
  %buffer.0.i = load %struct._tagTreeCCStreamBuf*, %struct._tagTreeCCStreamBuf** %88, align 8
  %89 = icmp eq %struct._tagTreeCCStreamBuf* %buffer.0.i, null
  br i1 %89, label %._crit_edge.i.loopexit, label %73

._crit_edge.i.loopexit:                           ; preds = %87
  br label %._crit_edge.i

._crit_edge.i:                                    ; preds = %._crit_edge.i.loopexit, %68
  %90 = tail call i32 @fflush(%struct._IO_FILE* %64) #2
  %91 = icmp eq i32 %90, 0
  %92 = zext i1 %91 to i32
  br label %TreeCCStreamFlushStdio.exit

TreeCCStreamFlushStdio.exit.loopexit:             ; preds = %84, %77
  br label %TreeCCStreamFlushStdio.exit

TreeCCStreamFlushStdio.exit:                      ; preds = %TreeCCStreamFlushStdio.exit.loopexit, %._crit_edge.i
  %.0.i = phi i32 [ %92, %._crit_edge.i ], [ 0, %TreeCCStreamFlushStdio.exit.loopexit ]
  %93 = tail call i32 @fclose(%struct._IO_FILE* %64) #2
  br label %94

; <label>:94                                      ; preds = %._crit_edge, %5, %TreeCCStreamFlushStdio.exit, %66, %59
  %.0 = phi i32 [ 0, %59 ], [ 0, %66 ], [ %.0.i, %TreeCCStreamFlushStdio.exit ], [ 1, %5 ], [ 1, %._crit_edge ]
  call void @llvm.lifetime.end(i64 2048, i8* %1) #2
  ret i32 %.0
}

; Function Attrs: nounwind
declare i64 @fread(i8* nocapture, i64, i64, %struct._IO_FILE* nocapture) #1

; Function Attrs: nounwind readonly
declare i32 @memcmp(i8* nocapture, i8* nocapture, i64) #5

; Function Attrs: nounwind uwtable
define i32 @TreeCCStreamFlushStdio(%struct._tagTreeCCStream* nocapture readonly %stream, %struct._IO_FILE* nocapture %file) #0 {
  %1 = getelementptr inbounds %struct._tagTreeCCStream, %struct._tagTreeCCStream* %stream, i64 0, i32 4
  %buffer.0.1 = load %struct._tagTreeCCStreamBuf*, %struct._tagTreeCCStreamBuf** %1, align 8
  %2 = icmp eq %struct._tagTreeCCStreamBuf* %buffer.0.1, null
  br i1 %2, label %._crit_edge, label %.lr.ph

.lr.ph:                                           ; preds = %0
  %3 = getelementptr inbounds %struct._tagTreeCCStream, %struct._tagTreeCCStream* %stream, i64 0, i32 5
  %4 = getelementptr inbounds %struct._tagTreeCCStream, %struct._tagTreeCCStream* %stream, i64 0, i32 6
  br label %5

; <label>:5                                       ; preds = %.lr.ph, %19
  %buffer.02 = phi %struct._tagTreeCCStreamBuf* [ %buffer.0.1, %.lr.ph ], [ %buffer.0, %19 ]
  %6 = load %struct._tagTreeCCStreamBuf*, %struct._tagTreeCCStreamBuf** %3, align 8, !tbaa !143
  %7 = icmp eq %struct._tagTreeCCStreamBuf* %buffer.02, %6
  %8 = getelementptr inbounds %struct._tagTreeCCStreamBuf, %struct._tagTreeCCStreamBuf* %buffer.02, i64 0, i32 0, i64 0
  br i1 %7, label %9, label %16

; <label>:9                                       ; preds = %5
  %10 = load i32, i32* %4, align 4, !tbaa !134
  %11 = sext i32 %10 to i64
  %12 = tail call i64 @fwrite(i8* %8, i64 1, i64 %11, %struct._IO_FILE* %file) #2
  %13 = load i32, i32* %4, align 4, !tbaa !134
  %14 = sext i32 %13 to i64
  %15 = icmp eq i64 %12, %14
  br i1 %15, label %19, label %.loopexit.loopexit

; <label>:16                                      ; preds = %5
  %17 = tail call i64 @fwrite(i8* %8, i64 1, i64 2048, %struct._IO_FILE* %file) #2
  %18 = icmp eq i64 %17, 2048
  br i1 %18, label %19, label %.loopexit.loopexit

; <label>:19                                      ; preds = %9, %16
  %20 = getelementptr inbounds %struct._tagTreeCCStreamBuf, %struct._tagTreeCCStreamBuf* %buffer.02, i64 0, i32 1
  %buffer.0 = load %struct._tagTreeCCStreamBuf*, %struct._tagTreeCCStreamBuf** %20, align 8
  %21 = icmp eq %struct._tagTreeCCStreamBuf* %buffer.0, null
  br i1 %21, label %._crit_edge.loopexit, label %5

._crit_edge.loopexit:                             ; preds = %19
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %0
  %22 = tail call i32 @fflush(%struct._IO_FILE* %file) #2
  %23 = icmp eq i32 %22, 0
  %24 = zext i1 %23 to i32
  br label %.loopexit

.loopexit.loopexit:                               ; preds = %9, %16
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %._crit_edge
  %.0 = phi i32 [ %24, %._crit_edge ], [ 0, %.loopexit.loopexit ]
  ret i32 %.0
}

; Function Attrs: nounwind uwtable
define void @TreeCCStreamPrint(%struct._tagTreeCCStream* nocapture %stream, i8* nocapture readonly %format, ...) #0 {
  %tempbuf = alloca [4096 x i8], align 16
  %va = alloca [1 x %struct.__va_list_tag], align 16
  %1 = getelementptr inbounds [4096 x i8], [4096 x i8]* %tempbuf, i64 0, i64 0
  call void @llvm.lifetime.start(i64 4096, i8* %1) #2
  %2 = bitcast [1 x %struct.__va_list_tag]* %va to i8*
  call void @llvm.lifetime.start(i64 24, i8* %2) #2
  %3 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %va, i64 0, i64 0
  call void @llvm.va_start(i8* %2)
  %4 = call i32 @vsnprintf(i8* %1, i64 4096, i8* %format, %struct.__va_list_tag* %3) #2
  call void @llvm.va_end(i8* %2)
  %5 = call i64 @strlen(i8* %1) #12
  %6 = trunc i64 %5 to i32
  %7 = getelementptr inbounds %struct._tagTreeCCStream, %struct._tagTreeCCStream* %stream, i64 0, i32 7
  %8 = load i8, i8* %7, align 4
  %9 = or i8 %8, 16
  store i8 %9, i8* %7, align 4
  %10 = icmp sgt i32 %6, 0
  br i1 %10, label %.lr.ph.i, label %WriteBuffer.exit

.lr.ph.i:                                         ; preds = %0
  %11 = getelementptr inbounds %struct._tagTreeCCStream, %struct._tagTreeCCStream* %stream, i64 0, i32 6
  %12 = getelementptr inbounds %struct._tagTreeCCStream, %struct._tagTreeCCStream* %stream, i64 0, i32 5
  %13 = getelementptr inbounds %struct._tagTreeCCStream, %struct._tagTreeCCStream* %stream, i64 0, i32 4
  %14 = bitcast %struct._tagTreeCCStreamBuf** %13 to i8**
  %15 = bitcast %struct._tagTreeCCStreamBuf** %12 to i8**
  %.pre.i = load i32, i32* %11, align 4, !tbaa !134
  br label %16

; <label>:16                                      ; preds = %37, %.lr.ph.i
  %17 = phi i32 [ %.pre.i, %.lr.ph.i ], [ %46, %37 ]
  %len.02.i = phi i32 [ %6, %.lr.ph.i ], [ %44, %37 ]
  %.01.i = phi i8* [ %1, %.lr.ph.i ], [ %43, %37 ]
  %18 = icmp sgt i32 %17, 2047
  br i1 %18, label %19, label %34

; <label>:19                                      ; preds = %16
  %20 = call noalias i8* @malloc(i64 2056) #2
  %21 = bitcast i8* %20 to %struct._tagTreeCCStreamBuf*
  %22 = icmp eq i8* %20, null
  br i1 %22, label %23, label %24

; <label>:23                                      ; preds = %19
  call void @TreeCCOutOfMemory(%struct.TreeCCInput* null) #2
  br label %24

; <label>:24                                      ; preds = %23, %19
  %25 = getelementptr inbounds i8, i8* %20, i64 2048
  %26 = bitcast i8* %25 to %struct._tagTreeCCStreamBuf**
  store %struct._tagTreeCCStreamBuf* null, %struct._tagTreeCCStreamBuf** %26, align 8, !tbaa !136
  %27 = load %struct._tagTreeCCStreamBuf*, %struct._tagTreeCCStreamBuf** %12, align 8, !tbaa !143
  %28 = icmp eq %struct._tagTreeCCStreamBuf* %27, null
  br i1 %28, label %32, label %29

; <label>:29                                      ; preds = %24
  %30 = getelementptr inbounds %struct._tagTreeCCStreamBuf, %struct._tagTreeCCStreamBuf* %27, i64 0, i32 1
  %31 = bitcast %struct._tagTreeCCStreamBuf** %30 to i8**
  store i8* %20, i8** %31, align 8, !tbaa !136
  br label %33

; <label>:32                                      ; preds = %24
  store i8* %20, i8** %14, align 8, !tbaa !135
  br label %33

; <label>:33                                      ; preds = %32, %29
  store i8* %20, i8** %15, align 8, !tbaa !143
  store i32 0, i32* %11, align 4, !tbaa !134
  br label %37

; <label>:34                                      ; preds = %16
  %35 = load %struct._tagTreeCCStreamBuf*, %struct._tagTreeCCStreamBuf** %12, align 8, !tbaa !143
  %36 = sub nsw i32 2048, %17
  br label %37

; <label>:37                                      ; preds = %34, %33
  %38 = phi i32 [ 0, %33 ], [ %17, %34 ]
  %templen.0.i = phi i32 [ 2048, %33 ], [ %36, %34 ]
  %buffer.0.i = phi %struct._tagTreeCCStreamBuf* [ %21, %33 ], [ %35, %34 ]
  %39 = icmp sgt i32 %templen.0.i, %len.02.i
  %len.0.templen.0.i = select i1 %39, i32 %len.02.i, i32 %templen.0.i
  %40 = sext i32 %38 to i64
  %41 = getelementptr inbounds %struct._tagTreeCCStreamBuf, %struct._tagTreeCCStreamBuf* %buffer.0.i, i64 0, i32 0, i64 %40
  %42 = sext i32 %len.0.templen.0.i to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %41, i8* %.01.i, i64 %42, i32 1, i1 false) #2
  %43 = getelementptr inbounds i8, i8* %.01.i, i64 %42
  %44 = sub nsw i32 %len.02.i, %len.0.templen.0.i
  %45 = load i32, i32* %11, align 4, !tbaa !134
  %46 = add nsw i32 %45, %len.0.templen.0.i
  store i32 %46, i32* %11, align 4, !tbaa !134
  %47 = icmp sgt i32 %44, 0
  br i1 %47, label %16, label %WriteBuffer.exit.loopexit

WriteBuffer.exit.loopexit:                        ; preds = %37
  br label %WriteBuffer.exit

WriteBuffer.exit:                                 ; preds = %WriteBuffer.exit.loopexit, %0
  %48 = call i8* @strchr(i8* %1, i32 10) #2
  %49 = icmp eq i8* %48, null
  br i1 %49, label %UpdateLineNum.exit, label %.lr.ph.i.2

.lr.ph.i.2:                                       ; preds = %WriteBuffer.exit
  %50 = getelementptr inbounds %struct._tagTreeCCStream, %struct._tagTreeCCStream* %stream, i64 0, i32 3
  %.pre.i.1 = load i64, i64* %50, align 8, !tbaa !133
  br label %51

; <label>:51                                      ; preds = %51, %.lr.ph.i.2
  %52 = phi i64 [ %.pre.i.1, %.lr.ph.i.2 ], [ %55, %51 ]
  %53 = phi i8* [ %48, %.lr.ph.i.2 ], [ %56, %51 ]
  %54 = getelementptr inbounds i8, i8* %53, i64 1
  %55 = add nsw i64 %52, 1
  store i64 %55, i64* %50, align 8, !tbaa !133
  %56 = call i8* @strchr(i8* %54, i32 10) #2
  %57 = icmp eq i8* %56, null
  br i1 %57, label %UpdateLineNum.exit.loopexit, label %51

UpdateLineNum.exit.loopexit:                      ; preds = %51
  br label %UpdateLineNum.exit

UpdateLineNum.exit:                               ; preds = %UpdateLineNum.exit.loopexit, %WriteBuffer.exit
  call void @llvm.lifetime.end(i64 24, i8* %2) #2
  call void @llvm.lifetime.end(i64 4096, i8* %1) #2
  ret void
}

; Function Attrs: nounwind
declare i32 @vsnprintf(i8* nocapture, i64, i8* nocapture readonly, %struct.__va_list_tag*) #1

; Function Attrs: nounwind uwtable
define void @TreeCCStreamCode(%struct._tagTreeCCStream* nocapture %stream, i8* readonly %code) #0 {
  %1 = tail call i64 @strlen(i8* %code) #12
  %2 = trunc i64 %1 to i32
  %3 = getelementptr inbounds %struct._tagTreeCCStream, %struct._tagTreeCCStream* %stream, i64 0, i32 7
  %4 = load i8, i8* %3, align 4
  %5 = or i8 %4, 16
  store i8 %5, i8* %3, align 4
  %6 = icmp sgt i32 %2, 0
  br i1 %6, label %.lr.ph.i, label %WriteBuffer.exit

.lr.ph.i:                                         ; preds = %0
  %7 = getelementptr inbounds %struct._tagTreeCCStream, %struct._tagTreeCCStream* %stream, i64 0, i32 6
  %8 = getelementptr inbounds %struct._tagTreeCCStream, %struct._tagTreeCCStream* %stream, i64 0, i32 5
  %9 = getelementptr inbounds %struct._tagTreeCCStream, %struct._tagTreeCCStream* %stream, i64 0, i32 4
  %10 = bitcast %struct._tagTreeCCStreamBuf** %9 to i8**
  %11 = bitcast %struct._tagTreeCCStreamBuf** %8 to i8**
  %.pre.i = load i32, i32* %7, align 4, !tbaa !134
  br label %12

; <label>:12                                      ; preds = %33, %.lr.ph.i
  %13 = phi i32 [ %.pre.i, %.lr.ph.i ], [ %42, %33 ]
  %len.02.i = phi i32 [ %2, %.lr.ph.i ], [ %40, %33 ]
  %.01.i = phi i8* [ %code, %.lr.ph.i ], [ %39, %33 ]
  %14 = icmp sgt i32 %13, 2047
  br i1 %14, label %15, label %30

; <label>:15                                      ; preds = %12
  %16 = tail call noalias i8* @malloc(i64 2056) #2
  %17 = bitcast i8* %16 to %struct._tagTreeCCStreamBuf*
  %18 = icmp eq i8* %16, null
  br i1 %18, label %19, label %20

; <label>:19                                      ; preds = %15
  tail call void @TreeCCOutOfMemory(%struct.TreeCCInput* null) #2
  br label %20

; <label>:20                                      ; preds = %19, %15
  %21 = getelementptr inbounds i8, i8* %16, i64 2048
  %22 = bitcast i8* %21 to %struct._tagTreeCCStreamBuf**
  store %struct._tagTreeCCStreamBuf* null, %struct._tagTreeCCStreamBuf** %22, align 8, !tbaa !136
  %23 = load %struct._tagTreeCCStreamBuf*, %struct._tagTreeCCStreamBuf** %8, align 8, !tbaa !143
  %24 = icmp eq %struct._tagTreeCCStreamBuf* %23, null
  br i1 %24, label %28, label %25

; <label>:25                                      ; preds = %20
  %26 = getelementptr inbounds %struct._tagTreeCCStreamBuf, %struct._tagTreeCCStreamBuf* %23, i64 0, i32 1
  %27 = bitcast %struct._tagTreeCCStreamBuf** %26 to i8**
  store i8* %16, i8** %27, align 8, !tbaa !136
  br label %29

; <label>:28                                      ; preds = %20
  store i8* %16, i8** %10, align 8, !tbaa !135
  br label %29

; <label>:29                                      ; preds = %28, %25
  store i8* %16, i8** %11, align 8, !tbaa !143
  store i32 0, i32* %7, align 4, !tbaa !134
  br label %33

; <label>:30                                      ; preds = %12
  %31 = load %struct._tagTreeCCStreamBuf*, %struct._tagTreeCCStreamBuf** %8, align 8, !tbaa !143
  %32 = sub nsw i32 2048, %13
  br label %33

; <label>:33                                      ; preds = %30, %29
  %34 = phi i32 [ 0, %29 ], [ %13, %30 ]
  %templen.0.i = phi i32 [ 2048, %29 ], [ %32, %30 ]
  %buffer.0.i = phi %struct._tagTreeCCStreamBuf* [ %17, %29 ], [ %31, %30 ]
  %35 = icmp sgt i32 %templen.0.i, %len.02.i
  %len.0.templen.0.i = select i1 %35, i32 %len.02.i, i32 %templen.0.i
  %36 = sext i32 %34 to i64
  %37 = getelementptr inbounds %struct._tagTreeCCStreamBuf, %struct._tagTreeCCStreamBuf* %buffer.0.i, i64 0, i32 0, i64 %36
  %38 = sext i32 %len.0.templen.0.i to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %37, i8* %.01.i, i64 %38, i32 1, i1 false) #2
  %39 = getelementptr inbounds i8, i8* %.01.i, i64 %38
  %40 = sub nsw i32 %len.02.i, %len.0.templen.0.i
  %41 = load i32, i32* %7, align 4, !tbaa !134
  %42 = add nsw i32 %41, %len.0.templen.0.i
  store i32 %42, i32* %7, align 4, !tbaa !134
  %43 = icmp sgt i32 %40, 0
  br i1 %43, label %12, label %WriteBuffer.exit.loopexit

WriteBuffer.exit.loopexit:                        ; preds = %33
  br label %WriteBuffer.exit

WriteBuffer.exit:                                 ; preds = %WriteBuffer.exit.loopexit, %0
  %44 = tail call i8* @strchr(i8* %code, i32 10) #2
  %45 = icmp eq i8* %44, null
  br i1 %45, label %UpdateLineNum.exit, label %.lr.ph.i.2

.lr.ph.i.2:                                       ; preds = %WriteBuffer.exit
  %46 = getelementptr inbounds %struct._tagTreeCCStream, %struct._tagTreeCCStream* %stream, i64 0, i32 3
  %.pre.i.1 = load i64, i64* %46, align 8, !tbaa !133
  br label %47

; <label>:47                                      ; preds = %47, %.lr.ph.i.2
  %48 = phi i64 [ %.pre.i.1, %.lr.ph.i.2 ], [ %51, %47 ]
  %49 = phi i8* [ %44, %.lr.ph.i.2 ], [ %52, %47 ]
  %50 = getelementptr inbounds i8, i8* %49, i64 1
  %51 = add nsw i64 %48, 1
  store i64 %51, i64* %46, align 8, !tbaa !133
  %52 = tail call i8* @strchr(i8* %50, i32 10) #2
  %53 = icmp eq i8* %52, null
  br i1 %53, label %UpdateLineNum.exit.loopexit, label %47

UpdateLineNum.exit.loopexit:                      ; preds = %47
  br label %UpdateLineNum.exit

UpdateLineNum.exit:                               ; preds = %UpdateLineNum.exit.loopexit, %WriteBuffer.exit
  ret void
}

; Function Attrs: nounwind uwtable
define void @TreeCCStreamCodeIndent(%struct._tagTreeCCStream* nocapture %stream, i8* nocapture readonly %code, i32 %indent) #0 {
  %1 = load i8, i8* %code, align 1, !tbaa !27
  %2 = sext i8 %1 to i32
  %3 = icmp eq i8 %1, 0
  br i1 %3, label %._crit_edge, label %.lr.ph3

.lr.ph3:                                          ; preds = %0
  %4 = getelementptr inbounds %struct._tagTreeCCStream, %struct._tagTreeCCStream* %stream, i64 0, i32 6
  %5 = getelementptr inbounds %struct._tagTreeCCStream, %struct._tagTreeCCStream* %stream, i64 0, i32 5
  %6 = getelementptr inbounds %struct._tagTreeCCStream, %struct._tagTreeCCStream* %stream, i64 0, i32 7
  %7 = getelementptr inbounds %struct._tagTreeCCStream, %struct._tagTreeCCStream* %stream, i64 0, i32 3
  %8 = icmp sgt i32 %indent, 0
  br i1 %8, label %.lr.ph3.split.us.preheader, label %.lr.ph3..lr.ph3.split_crit_edge.preheader

.lr.ph3..lr.ph3.split_crit_edge.preheader:        ; preds = %.lr.ph3
  br label %.lr.ph3..lr.ph3.split_crit_edge

.lr.ph3.split.us.preheader:                       ; preds = %.lr.ph3
  br label %.lr.ph3.split.us

.lr.ph3.split.us:                                 ; preds = %.lr.ph3.split.us.preheader, %.loopexit.us
  %9 = phi i32 [ %26, %.loopexit.us ], [ %2, %.lr.ph3.split.us.preheader ]
  %10 = phi i8 [ %25, %.loopexit.us ], [ %1, %.lr.ph3.split.us.preheader ]
  %.02.us = phi i8* [ %24, %.loopexit.us ], [ %code, %.lr.ph3.split.us.preheader ]
  %11 = load i32, i32* %4, align 4, !tbaa !134
  %12 = icmp slt i32 %11, 2048
  br i1 %12, label %14, label %13

; <label>:13                                      ; preds = %.lr.ph3.split.us
  tail call fastcc void @_StreamPut(i32 %9, %struct._tagTreeCCStream* %stream)
  br label %21

; <label>:14                                      ; preds = %.lr.ph3.split.us
  %15 = add nsw i32 %11, 1
  store i32 %15, i32* %4, align 4, !tbaa !134
  %16 = sext i32 %11 to i64
  %17 = load %struct._tagTreeCCStreamBuf*, %struct._tagTreeCCStreamBuf** %5, align 8, !tbaa !143
  %18 = getelementptr inbounds %struct._tagTreeCCStreamBuf, %struct._tagTreeCCStreamBuf* %17, i64 0, i32 0, i64 %16
  store i8 %10, i8* %18, align 1, !tbaa !27
  %19 = load i8, i8* %6, align 4
  %20 = or i8 %19, 16
  store i8 %20, i8* %6, align 4
  br label %21

; <label>:21                                      ; preds = %14, %13
  %22 = load i8, i8* %.02.us, align 1, !tbaa !27
  %23 = icmp eq i8 %22, 10
  br i1 %23, label %.lr.ph.us, label %.loopexit.us

.loopexit.us.loopexit:                            ; preds = %39
  br label %.loopexit.us

.loopexit.us:                                     ; preds = %.loopexit.us.loopexit, %21
  %24 = getelementptr inbounds i8, i8* %.02.us, i64 1
  %25 = load i8, i8* %24, align 1, !tbaa !27
  %26 = sext i8 %25 to i32
  %27 = icmp eq i8 %25, 0
  br i1 %27, label %._crit_edge.loopexit, label %.lr.ph3.split.us

; <label>:28                                      ; preds = %39, %.lr.ph.us
  %temp.01.us = phi i32 [ 0, %.lr.ph.us ], [ %40, %39 ]
  %29 = load i32, i32* %4, align 4, !tbaa !134
  %30 = icmp slt i32 %29, 2048
  br i1 %30, label %32, label %31

; <label>:31                                      ; preds = %28
  tail call fastcc void @_StreamPut(i32 9, %struct._tagTreeCCStream* %stream)
  br label %39

; <label>:32                                      ; preds = %28
  %33 = add nsw i32 %29, 1
  store i32 %33, i32* %4, align 4, !tbaa !134
  %34 = sext i32 %29 to i64
  %35 = load %struct._tagTreeCCStreamBuf*, %struct._tagTreeCCStreamBuf** %5, align 8, !tbaa !143
  %36 = getelementptr inbounds %struct._tagTreeCCStreamBuf, %struct._tagTreeCCStreamBuf* %35, i64 0, i32 0, i64 %34
  store i8 9, i8* %36, align 1, !tbaa !27
  %37 = load i8, i8* %6, align 4
  %38 = or i8 %37, 16
  store i8 %38, i8* %6, align 4
  br label %39

; <label>:39                                      ; preds = %32, %31
  %40 = add nuw nsw i32 %temp.01.us, 1
  %exitcond = icmp eq i32 %40, %indent
  br i1 %exitcond, label %.loopexit.us.loopexit, label %28

.lr.ph.us:                                        ; preds = %21
  %41 = load i64, i64* %7, align 8, !tbaa !133
  %42 = add nsw i64 %41, 1
  store i64 %42, i64* %7, align 8, !tbaa !133
  br label %28

.lr.ph3..lr.ph3.split_crit_edge:                  ; preds = %.lr.ph3..lr.ph3.split_crit_edge.preheader, %60
  %43 = phi i32 [ %63, %60 ], [ %2, %.lr.ph3..lr.ph3.split_crit_edge.preheader ]
  %44 = phi i8 [ %62, %60 ], [ %1, %.lr.ph3..lr.ph3.split_crit_edge.preheader ]
  %.02 = phi i8* [ %61, %60 ], [ %code, %.lr.ph3..lr.ph3.split_crit_edge.preheader ]
  %45 = load i32, i32* %4, align 4, !tbaa !134
  %46 = icmp slt i32 %45, 2048
  br i1 %46, label %47, label %54

; <label>:47                                      ; preds = %.lr.ph3..lr.ph3.split_crit_edge
  %48 = add nsw i32 %45, 1
  store i32 %48, i32* %4, align 4, !tbaa !134
  %49 = sext i32 %45 to i64
  %50 = load %struct._tagTreeCCStreamBuf*, %struct._tagTreeCCStreamBuf** %5, align 8, !tbaa !143
  %51 = getelementptr inbounds %struct._tagTreeCCStreamBuf, %struct._tagTreeCCStreamBuf* %50, i64 0, i32 0, i64 %49
  store i8 %44, i8* %51, align 1, !tbaa !27
  %52 = load i8, i8* %6, align 4
  %53 = or i8 %52, 16
  store i8 %53, i8* %6, align 4
  br label %55

; <label>:54                                      ; preds = %.lr.ph3..lr.ph3.split_crit_edge
  tail call fastcc void @_StreamPut(i32 %43, %struct._tagTreeCCStream* %stream)
  br label %55

; <label>:55                                      ; preds = %54, %47
  %56 = load i8, i8* %.02, align 1, !tbaa !27
  %57 = icmp eq i8 %56, 10
  br i1 %57, label %.loopexit, label %60

.loopexit:                                        ; preds = %55
  %58 = load i64, i64* %7, align 8, !tbaa !133
  %59 = add nsw i64 %58, 1
  store i64 %59, i64* %7, align 8, !tbaa !133
  br label %60

; <label>:60                                      ; preds = %.loopexit, %55
  %61 = getelementptr inbounds i8, i8* %.02, i64 1
  %62 = load i8, i8* %61, align 1, !tbaa !27
  %63 = sext i8 %62 to i32
  %64 = icmp eq i8 %62, 0
  br i1 %64, label %._crit_edge.loopexit6, label %.lr.ph3..lr.ph3.split_crit_edge

._crit_edge.loopexit:                             ; preds = %.loopexit.us
  br label %._crit_edge

._crit_edge.loopexit6:                            ; preds = %60
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit6, %._crit_edge.loopexit, %0
  ret void
}

; Function Attrs: nounwind uwtable
define void @TreeCCStreamCodeIndentCustom(%struct._tagTreeCCStream* nocapture %stream, i8* nocapture readonly %code, i8 signext %indentchar, i32 %indent) #0 {
  %1 = load i8, i8* %code, align 1, !tbaa !27
  %2 = sext i8 %1 to i32
  %3 = icmp eq i8 %1, 0
  br i1 %3, label %._crit_edge, label %.lr.ph3

.lr.ph3:                                          ; preds = %0
  %4 = getelementptr inbounds %struct._tagTreeCCStream, %struct._tagTreeCCStream* %stream, i64 0, i32 6
  %5 = getelementptr inbounds %struct._tagTreeCCStream, %struct._tagTreeCCStream* %stream, i64 0, i32 5
  %6 = getelementptr inbounds %struct._tagTreeCCStream, %struct._tagTreeCCStream* %stream, i64 0, i32 7
  %7 = getelementptr inbounds %struct._tagTreeCCStream, %struct._tagTreeCCStream* %stream, i64 0, i32 3
  %8 = icmp sgt i32 %indent, 0
  %9 = sext i8 %indentchar to i32
  br i1 %8, label %.lr.ph3.split.us.preheader, label %.lr.ph3..lr.ph3.split_crit_edge.preheader

.lr.ph3..lr.ph3.split_crit_edge.preheader:        ; preds = %.lr.ph3
  br label %.lr.ph3..lr.ph3.split_crit_edge

.lr.ph3.split.us.preheader:                       ; preds = %.lr.ph3
  br label %.lr.ph3.split.us

.lr.ph3.split.us:                                 ; preds = %.lr.ph3.split.us.preheader, %.loopexit.us
  %10 = phi i32 [ %27, %.loopexit.us ], [ %2, %.lr.ph3.split.us.preheader ]
  %11 = phi i8 [ %26, %.loopexit.us ], [ %1, %.lr.ph3.split.us.preheader ]
  %.02.us = phi i8* [ %25, %.loopexit.us ], [ %code, %.lr.ph3.split.us.preheader ]
  %12 = load i32, i32* %4, align 4, !tbaa !134
  %13 = icmp slt i32 %12, 2048
  br i1 %13, label %15, label %14

; <label>:14                                      ; preds = %.lr.ph3.split.us
  tail call fastcc void @_StreamPut(i32 %10, %struct._tagTreeCCStream* %stream)
  br label %22

; <label>:15                                      ; preds = %.lr.ph3.split.us
  %16 = add nsw i32 %12, 1
  store i32 %16, i32* %4, align 4, !tbaa !134
  %17 = sext i32 %12 to i64
  %18 = load %struct._tagTreeCCStreamBuf*, %struct._tagTreeCCStreamBuf** %5, align 8, !tbaa !143
  %19 = getelementptr inbounds %struct._tagTreeCCStreamBuf, %struct._tagTreeCCStreamBuf* %18, i64 0, i32 0, i64 %17
  store i8 %11, i8* %19, align 1, !tbaa !27
  %20 = load i8, i8* %6, align 4
  %21 = or i8 %20, 16
  store i8 %21, i8* %6, align 4
  br label %22

; <label>:22                                      ; preds = %15, %14
  %23 = load i8, i8* %.02.us, align 1, !tbaa !27
  %24 = icmp eq i8 %23, 10
  br i1 %24, label %.lr.ph.us, label %.loopexit.us

.loopexit.us.loopexit:                            ; preds = %40
  br label %.loopexit.us

.loopexit.us:                                     ; preds = %.loopexit.us.loopexit, %22
  %25 = getelementptr inbounds i8, i8* %.02.us, i64 1
  %26 = load i8, i8* %25, align 1, !tbaa !27
  %27 = sext i8 %26 to i32
  %28 = icmp eq i8 %26, 0
  br i1 %28, label %._crit_edge.loopexit, label %.lr.ph3.split.us

; <label>:29                                      ; preds = %40, %.lr.ph.us
  %temp.01.us = phi i32 [ 0, %.lr.ph.us ], [ %41, %40 ]
  %30 = load i32, i32* %4, align 4, !tbaa !134
  %31 = icmp slt i32 %30, 2048
  br i1 %31, label %33, label %32

; <label>:32                                      ; preds = %29
  tail call fastcc void @_StreamPut(i32 %9, %struct._tagTreeCCStream* %stream)
  br label %40

; <label>:33                                      ; preds = %29
  %34 = add nsw i32 %30, 1
  store i32 %34, i32* %4, align 4, !tbaa !134
  %35 = sext i32 %30 to i64
  %36 = load %struct._tagTreeCCStreamBuf*, %struct._tagTreeCCStreamBuf** %5, align 8, !tbaa !143
  %37 = getelementptr inbounds %struct._tagTreeCCStreamBuf, %struct._tagTreeCCStreamBuf* %36, i64 0, i32 0, i64 %35
  store i8 %indentchar, i8* %37, align 1, !tbaa !27
  %38 = load i8, i8* %6, align 4
  %39 = or i8 %38, 16
  store i8 %39, i8* %6, align 4
  br label %40

; <label>:40                                      ; preds = %33, %32
  %41 = add nuw nsw i32 %temp.01.us, 1
  %exitcond = icmp eq i32 %41, %indent
  br i1 %exitcond, label %.loopexit.us.loopexit, label %29

.lr.ph.us:                                        ; preds = %22
  %42 = load i64, i64* %7, align 8, !tbaa !133
  %43 = add nsw i64 %42, 1
  store i64 %43, i64* %7, align 8, !tbaa !133
  br label %29

.lr.ph3..lr.ph3.split_crit_edge:                  ; preds = %.lr.ph3..lr.ph3.split_crit_edge.preheader, %61
  %44 = phi i32 [ %64, %61 ], [ %2, %.lr.ph3..lr.ph3.split_crit_edge.preheader ]
  %45 = phi i8 [ %63, %61 ], [ %1, %.lr.ph3..lr.ph3.split_crit_edge.preheader ]
  %.02 = phi i8* [ %62, %61 ], [ %code, %.lr.ph3..lr.ph3.split_crit_edge.preheader ]
  %46 = load i32, i32* %4, align 4, !tbaa !134
  %47 = icmp slt i32 %46, 2048
  br i1 %47, label %48, label %55

; <label>:48                                      ; preds = %.lr.ph3..lr.ph3.split_crit_edge
  %49 = add nsw i32 %46, 1
  store i32 %49, i32* %4, align 4, !tbaa !134
  %50 = sext i32 %46 to i64
  %51 = load %struct._tagTreeCCStreamBuf*, %struct._tagTreeCCStreamBuf** %5, align 8, !tbaa !143
  %52 = getelementptr inbounds %struct._tagTreeCCStreamBuf, %struct._tagTreeCCStreamBuf* %51, i64 0, i32 0, i64 %50
  store i8 %45, i8* %52, align 1, !tbaa !27
  %53 = load i8, i8* %6, align 4
  %54 = or i8 %53, 16
  store i8 %54, i8* %6, align 4
  br label %56

; <label>:55                                      ; preds = %.lr.ph3..lr.ph3.split_crit_edge
  tail call fastcc void @_StreamPut(i32 %44, %struct._tagTreeCCStream* %stream)
  br label %56

; <label>:56                                      ; preds = %55, %48
  %57 = load i8, i8* %.02, align 1, !tbaa !27
  %58 = icmp eq i8 %57, 10
  br i1 %58, label %.loopexit, label %61

.loopexit:                                        ; preds = %56
  %59 = load i64, i64* %7, align 8, !tbaa !133
  %60 = add nsw i64 %59, 1
  store i64 %60, i64* %7, align 8, !tbaa !133
  br label %61

; <label>:61                                      ; preds = %.loopexit, %56
  %62 = getelementptr inbounds i8, i8* %.02, i64 1
  %63 = load i8, i8* %62, align 1, !tbaa !27
  %64 = sext i8 %63 to i32
  %65 = icmp eq i8 %63, 0
  br i1 %65, label %._crit_edge.loopexit6, label %.lr.ph3..lr.ph3.split_crit_edge

._crit_edge.loopexit:                             ; preds = %.loopexit.us
  br label %._crit_edge

._crit_edge.loopexit6:                            ; preds = %61
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit6, %._crit_edge.loopexit, %0
  ret void
}

; Function Attrs: nounwind uwtable
define void @TreeCCStreamFixLine(%struct._tagTreeCCStream* nocapture %stream) #0 {
  %1 = getelementptr inbounds %struct._tagTreeCCStream, %struct._tagTreeCCStream* %stream, i64 0, i32 3
  %2 = load i64, i64* %1, align 8, !tbaa !133
  %3 = add nsw i64 %2, 1
  %4 = getelementptr inbounds %struct._tagTreeCCStream, %struct._tagTreeCCStream* %stream, i64 0, i32 2
  %5 = load i8*, i8** %4, align 8, !tbaa !69
  %6 = getelementptr inbounds %struct._tagTreeCCStream, %struct._tagTreeCCStream* %stream, i64 0, i32 0
  %7 = load %struct._tagTreeCCContext*, %struct._tagTreeCCContext** %6, align 8, !tbaa !132
  %8 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %7, i64 0, i32 8
  %9 = load i16, i16* %8, align 8
  %.mask.i = and i16 %9, 512
  %10 = icmp eq i16 %.mask.i, 0
  br i1 %10, label %TreeCCStreamLine.exit, label %11

; <label>:11                                      ; preds = %0
  %.mask1.i = and i16 %9, 256
  %12 = icmp eq i16 %.mask1.i, 0
  br i1 %12, label %26, label %13

; <label>:13                                      ; preds = %11
  %14 = tail call i64 @strlen(i8* %5) #12
  %15 = trunc i64 %14 to i32
  %sext = shl i64 %14, 32
  %16 = ashr exact i64 %sext, 32
  br label %17

; <label>:17                                      ; preds = %19, %13
  %indvars.iv = phi i64 [ %indvars.iv.next, %19 ], [ %16, %13 ]
  %len.0.i = phi i32 [ %20, %19 ], [ %15, %13 ]
  %18 = icmp sgt i64 %indvars.iv, 0
  br i1 %18, label %19, label %.critedge.i

; <label>:19                                      ; preds = %17
  %20 = add nsw i32 %len.0.i, -1
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds i8, i8* %5, i64 %21
  %23 = load i8, i8* %22, align 1, !tbaa !27
  %indvars.iv.next = add nsw i64 %indvars.iv, -1
  switch i8 %23, label %17 [
    i8 92, label %.critedge.i
    i8 47, label %.critedge.i
  ]

.critedge.i:                                      ; preds = %19, %19, %17
  %indvars.iv.lcssa = phi i64 [ %indvars.iv, %19 ], [ %indvars.iv, %19 ], [ %indvars.iv, %17 ]
  %sext2.i = shl i64 %indvars.iv.lcssa, 32
  %24 = ashr exact i64 %sext2.i, 32
  %25 = getelementptr inbounds i8, i8* %5, i64 %24
  br label %26

; <label>:26                                      ; preds = %.critedge.i, %11
  %.0.i = phi i8* [ %25, %.critedge.i ], [ %5, %11 ]
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.8.938, i64 0, i64 0), i64 %3, i8* %.0.i) #2
  br label %TreeCCStreamLine.exit

TreeCCStreamLine.exit:                            ; preds = %0, %26
  ret void
}

; Function Attrs: nounwind uwtable
define void @TreeCCStreamLine(%struct._tagTreeCCStream* nocapture %stream, i64 %linenum, i8* %filename) #0 {
  %1 = getelementptr inbounds %struct._tagTreeCCStream, %struct._tagTreeCCStream* %stream, i64 0, i32 0
  %2 = load %struct._tagTreeCCContext*, %struct._tagTreeCCContext** %1, align 8, !tbaa !132
  %3 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %2, i64 0, i32 8
  %4 = load i16, i16* %3, align 8
  %.mask = and i16 %4, 512
  %5 = icmp eq i16 %.mask, 0
  br i1 %5, label %22, label %6

; <label>:6                                       ; preds = %0
  %.mask1 = and i16 %4, 256
  %7 = icmp eq i16 %.mask1, 0
  br i1 %7, label %21, label %8

; <label>:8                                       ; preds = %6
  %9 = tail call i64 @strlen(i8* %filename) #12
  %10 = trunc i64 %9 to i32
  %sext = shl i64 %9, 32
  %11 = ashr exact i64 %sext, 32
  br label %12

; <label>:12                                      ; preds = %14, %8
  %indvars.iv = phi i64 [ %indvars.iv.next, %14 ], [ %11, %8 ]
  %len.0 = phi i32 [ %15, %14 ], [ %10, %8 ]
  %13 = icmp sgt i64 %indvars.iv, 0
  br i1 %13, label %14, label %.critedge

; <label>:14                                      ; preds = %12
  %15 = add nsw i32 %len.0, -1
  %16 = sext i32 %15 to i64
  %17 = getelementptr inbounds i8, i8* %filename, i64 %16
  %18 = load i8, i8* %17, align 1, !tbaa !27
  %indvars.iv.next = add nsw i64 %indvars.iv, -1
  switch i8 %18, label %12 [
    i8 92, label %.critedge
    i8 47, label %.critedge
  ]

.critedge:                                        ; preds = %14, %14, %12
  %indvars.iv.lcssa = phi i64 [ %indvars.iv, %14 ], [ %indvars.iv, %14 ], [ %indvars.iv, %12 ]
  %sext2 = shl i64 %indvars.iv.lcssa, 32
  %19 = ashr exact i64 %sext2, 32
  %20 = getelementptr inbounds i8, i8* %filename, i64 %19
  br label %21

; <label>:21                                      ; preds = %6, %.critedge
  %.0 = phi i8* [ %20, %.critedge ], [ %filename, %6 ]
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.8.938, i64 0, i64 0), i64 %linenum, i8* %.0)
  br label %22

; <label>:22                                      ; preds = %0, %21
  ret void
}

; Function Attrs: nounwind uwtable
define void @TreeCCStreamAddLiteral(%struct._tagTreeCCStream* %stream, i8* %code, i8* %filename, i64 %linenum, i32 %atEnd, i32 %refOnly) #0 {
  %1 = icmp eq %struct._tagTreeCCStream* %stream, null
  br i1 %1, label %29, label %2

; <label>:2                                       ; preds = %0
  %3 = tail call noalias i8* @malloc(i64 40) #2
  %4 = icmp eq i8* %3, null
  br i1 %4, label %5, label %6

; <label>:5                                       ; preds = %2
  tail call void @TreeCCOutOfMemory(%struct.TreeCCInput* null) #2
  br label %6

; <label>:6                                       ; preds = %2, %5
  %7 = bitcast i8* %3 to i8**
  store i8* %code, i8** %7, align 8, !tbaa !142
  %8 = getelementptr inbounds i8, i8* %3, i64 8
  %9 = bitcast i8* %8 to i8**
  store i8* %filename, i8** %9, align 8, !tbaa !144
  %10 = getelementptr inbounds i8, i8* %3, i64 16
  %11 = bitcast i8* %10 to i64*
  store i64 %linenum, i64* %11, align 8, !tbaa !145
  %12 = getelementptr inbounds i8, i8* %3, i64 24
  %13 = bitcast i8* %12 to i32*
  store i32 %atEnd, i32* %13, align 4, !tbaa !146
  %14 = getelementptr inbounds i8, i8* %3, i64 28
  %15 = bitcast i8* %14 to i32*
  store i32 %refOnly, i32* %15, align 4, !tbaa !141
  %16 = getelementptr inbounds i8, i8* %3, i64 32
  %17 = bitcast i8* %16 to %struct._tagTreeCCStreamDefn**
  store %struct._tagTreeCCStreamDefn* null, %struct._tagTreeCCStreamDefn** %17, align 8, !tbaa !139
  %18 = getelementptr inbounds %struct._tagTreeCCStream, %struct._tagTreeCCStream* %stream, i64 0, i32 9
  %19 = load %struct._tagTreeCCStreamDefn*, %struct._tagTreeCCStreamDefn** %18, align 8, !tbaa !147
  %20 = icmp eq %struct._tagTreeCCStreamDefn* %19, null
  br i1 %20, label %24, label %21

; <label>:21                                      ; preds = %6
  %22 = getelementptr inbounds %struct._tagTreeCCStreamDefn, %struct._tagTreeCCStreamDefn* %19, i64 0, i32 5
  %23 = bitcast %struct._tagTreeCCStreamDefn** %22 to i8**
  store i8* %3, i8** %23, align 8, !tbaa !139
  br label %27

; <label>:24                                      ; preds = %6
  %25 = getelementptr inbounds %struct._tagTreeCCStream, %struct._tagTreeCCStream* %stream, i64 0, i32 8
  %26 = bitcast %struct._tagTreeCCStreamDefn** %25 to i8**
  store i8* %3, i8** %26, align 8, !tbaa !138
  br label %27

; <label>:27                                      ; preds = %24, %21
  %28 = bitcast %struct._tagTreeCCStreamDefn** %18 to i8**
  store i8* %3, i8** %28, align 8, !tbaa !147
  br label %29

; <label>:29                                      ; preds = %0, %27
  ret void
}

; Function Attrs: nounwind uwtable
define void @TreeCCStreamHeaderTop(%struct._tagTreeCCStream* nocapture %stream) #0 {
  %1 = getelementptr inbounds %struct._tagTreeCCStream, %struct._tagTreeCCStream* %stream, i64 0, i32 2
  %2 = load i8*, i8** %1, align 8, !tbaa !69
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.4.939, i64 0, i64 0), i8* %2)
  %3 = getelementptr inbounds %struct._tagTreeCCStream, %struct._tagTreeCCStream* %stream, i64 0, i32 0
  %4 = load %struct._tagTreeCCContext*, %struct._tagTreeCCContext** %3, align 8, !tbaa !132
  %5 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %4, i64 0, i32 9
  %6 = load i8*, i8** %5, align 8, !tbaa !30
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.940, i64 0, i64 0), i8* %6)
  tail call fastcc void @OutputMacroName(%struct._tagTreeCCStream* %stream, i8* %2)
  %7 = load %struct._tagTreeCCContext*, %struct._tagTreeCCContext** %3, align 8, !tbaa !132
  %8 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %7, i64 0, i32 9
  %9 = load i8*, i8** %8, align 8, !tbaa !30
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6.941, i64 0, i64 0), i8* %9)
  tail call fastcc void @OutputMacroName(%struct._tagTreeCCStream* %stream, i8* %2)
  tail call fastcc void @OutputDefns(%struct._tagTreeCCStream* %stream, i32 0)
  ret void
}

; Function Attrs: nounwind uwtable
define void @TreeCCStreamHeaderBottom(%struct._tagTreeCCStream* nocapture %stream) #0 {
  tail call fastcc void @OutputDefns(%struct._tagTreeCCStream* %stream, i32 1)
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.7.942, i64 0, i64 0))
  ret void
}

; Function Attrs: nounwind uwtable
define void @TreeCCStreamSourceTop(%struct._tagTreeCCStream* nocapture %stream) #0 {
  %1 = getelementptr inbounds %struct._tagTreeCCStream, %struct._tagTreeCCStream* %stream, i64 0, i32 2
  %2 = load i8*, i8** %1, align 8, !tbaa !69
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.4.939, i64 0, i64 0), i8* %2)
  tail call fastcc void @OutputDefns(%struct._tagTreeCCStream* %stream, i32 0)
  ret void
}

; Function Attrs: nounwind uwtable
define void @TreeCCStreamSourceTopCS(%struct._tagTreeCCStream* nocapture %stream) #0 {
  tail call fastcc void @OutputDefns(%struct._tagTreeCCStream* %stream, i32 0)
  ret void
}

; Function Attrs: nounwind uwtable
define void @TreeCCStreamSourceBottom(%struct._tagTreeCCStream* nocapture %stream) #0 {
  tail call fastcc void @OutputDefns(%struct._tagTreeCCStream* %stream, i32 1)
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @_StreamPut(i32 %ch, %struct._tagTreeCCStream* nocapture %stream) #0 {
  %buf = alloca [2 x i8], align 1
  %1 = getelementptr inbounds [2 x i8], [2 x i8]* %buf, i64 0, i64 0
  call void @llvm.lifetime.start(i64 2, i8* %1) #2
  %2 = trunc i32 %ch to i8
  store i8 %2, i8* %1, align 1, !tbaa !27
  %3 = getelementptr inbounds [2 x i8], [2 x i8]* %buf, i64 0, i64 1
  store i8 0, i8* %3, align 1, !tbaa !27
  %4 = call i64 @strlen(i8* %1) #12
  %5 = trunc i64 %4 to i32
  %6 = getelementptr inbounds %struct._tagTreeCCStream, %struct._tagTreeCCStream* %stream, i64 0, i32 7
  %7 = load i8, i8* %6, align 4
  %8 = or i8 %7, 16
  store i8 %8, i8* %6, align 4
  %9 = icmp sgt i32 %5, 0
  br i1 %9, label %.lr.ph.i, label %WriteBuffer.exit

.lr.ph.i:                                         ; preds = %0
  %10 = getelementptr inbounds %struct._tagTreeCCStream, %struct._tagTreeCCStream* %stream, i64 0, i32 6
  %11 = getelementptr inbounds %struct._tagTreeCCStream, %struct._tagTreeCCStream* %stream, i64 0, i32 5
  %12 = getelementptr inbounds %struct._tagTreeCCStream, %struct._tagTreeCCStream* %stream, i64 0, i32 4
  %13 = bitcast %struct._tagTreeCCStreamBuf** %12 to i8**
  %14 = bitcast %struct._tagTreeCCStreamBuf** %11 to i8**
  %.pre.i = load i32, i32* %10, align 4, !tbaa !134
  br label %15

; <label>:15                                      ; preds = %36, %.lr.ph.i
  %16 = phi i32 [ %.pre.i, %.lr.ph.i ], [ %45, %36 ]
  %len.02.i = phi i32 [ %5, %.lr.ph.i ], [ %43, %36 ]
  %.01.i = phi i8* [ %1, %.lr.ph.i ], [ %42, %36 ]
  %17 = icmp sgt i32 %16, 2047
  br i1 %17, label %18, label %33

; <label>:18                                      ; preds = %15
  %19 = tail call noalias i8* @malloc(i64 2056) #2
  %20 = bitcast i8* %19 to %struct._tagTreeCCStreamBuf*
  %21 = icmp eq i8* %19, null
  br i1 %21, label %22, label %23

; <label>:22                                      ; preds = %18
  tail call void @TreeCCOutOfMemory(%struct.TreeCCInput* null) #2
  br label %23

; <label>:23                                      ; preds = %22, %18
  %24 = getelementptr inbounds i8, i8* %19, i64 2048
  %25 = bitcast i8* %24 to %struct._tagTreeCCStreamBuf**
  store %struct._tagTreeCCStreamBuf* null, %struct._tagTreeCCStreamBuf** %25, align 8, !tbaa !136
  %26 = load %struct._tagTreeCCStreamBuf*, %struct._tagTreeCCStreamBuf** %11, align 8, !tbaa !143
  %27 = icmp eq %struct._tagTreeCCStreamBuf* %26, null
  br i1 %27, label %31, label %28

; <label>:28                                      ; preds = %23
  %29 = getelementptr inbounds %struct._tagTreeCCStreamBuf, %struct._tagTreeCCStreamBuf* %26, i64 0, i32 1
  %30 = bitcast %struct._tagTreeCCStreamBuf** %29 to i8**
  store i8* %19, i8** %30, align 8, !tbaa !136
  br label %32

; <label>:31                                      ; preds = %23
  store i8* %19, i8** %13, align 8, !tbaa !135
  br label %32

; <label>:32                                      ; preds = %31, %28
  store i8* %19, i8** %14, align 8, !tbaa !143
  store i32 0, i32* %10, align 4, !tbaa !134
  br label %36

; <label>:33                                      ; preds = %15
  %34 = load %struct._tagTreeCCStreamBuf*, %struct._tagTreeCCStreamBuf** %11, align 8, !tbaa !143
  %35 = sub nsw i32 2048, %16
  br label %36

; <label>:36                                      ; preds = %33, %32
  %37 = phi i32 [ 0, %32 ], [ %16, %33 ]
  %templen.0.i = phi i32 [ 2048, %32 ], [ %35, %33 ]
  %buffer.0.i = phi %struct._tagTreeCCStreamBuf* [ %20, %32 ], [ %34, %33 ]
  %38 = icmp sgt i32 %templen.0.i, %len.02.i
  %len.0.templen.0.i = select i1 %38, i32 %len.02.i, i32 %templen.0.i
  %39 = sext i32 %37 to i64
  %40 = getelementptr inbounds %struct._tagTreeCCStreamBuf, %struct._tagTreeCCStreamBuf* %buffer.0.i, i64 0, i32 0, i64 %39
  %41 = sext i32 %len.0.templen.0.i to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %40, i8* %.01.i, i64 %41, i32 1, i1 false) #2
  %42 = getelementptr inbounds i8, i8* %.01.i, i64 %41
  %43 = sub nsw i32 %len.02.i, %len.0.templen.0.i
  %44 = load i32, i32* %10, align 4, !tbaa !134
  %45 = add nsw i32 %44, %len.0.templen.0.i
  store i32 %45, i32* %10, align 4, !tbaa !134
  %46 = icmp sgt i32 %43, 0
  br i1 %46, label %15, label %WriteBuffer.exit.loopexit

WriteBuffer.exit.loopexit:                        ; preds = %36
  br label %WriteBuffer.exit

WriteBuffer.exit:                                 ; preds = %WriteBuffer.exit.loopexit, %0
  call void @llvm.lifetime.end(i64 2, i8* %1) #2
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @OutputMacroName(%struct._tagTreeCCStream* nocapture %stream, i8* nocapture readonly %filename) #0 {
  %1 = load i8, i8* %filename, align 1, !tbaa !27
  %2 = icmp eq i8 %1, 0
  %.pre = getelementptr inbounds %struct._tagTreeCCStream, %struct._tagTreeCCStream* %stream, i64 0, i32 6
  br i1 %2, label %._crit_edge, label %.lr.ph

.lr.ph:                                           ; preds = %0
  %3 = getelementptr inbounds %struct._tagTreeCCStream, %struct._tagTreeCCStream* %stream, i64 0, i32 5
  %4 = getelementptr inbounds %struct._tagTreeCCStream, %struct._tagTreeCCStream* %stream, i64 0, i32 7
  br label %5

; <label>:5                                       ; preds = %.lr.ph, %32
  %6 = phi i8 [ %1, %.lr.ph ], [ %34, %32 ]
  %.08 = phi i8* [ %filename, %.lr.ph ], [ %33, %32 ]
  %7 = and i8 %6, -33
  %8 = add i8 %7, -65
  %9 = icmp ult i8 %8, 26
  %.off4 = add i8 %6, -48
  %10 = icmp ult i8 %.off4, 10
  %or.cond7 = or i1 %10, %9
  %11 = load i32, i32* %.pre, align 4, !tbaa !134
  %12 = icmp slt i32 %11, 2048
  br i1 %or.cond7, label %13, label %23

; <label>:13                                      ; preds = %5
  br i1 %12, label %14, label %21

; <label>:14                                      ; preds = %13
  %15 = add nsw i32 %11, 1
  store i32 %15, i32* %.pre, align 4, !tbaa !134
  %16 = sext i32 %11 to i64
  %17 = load %struct._tagTreeCCStreamBuf*, %struct._tagTreeCCStreamBuf** %3, align 8, !tbaa !143
  %18 = getelementptr inbounds %struct._tagTreeCCStreamBuf, %struct._tagTreeCCStreamBuf* %17, i64 0, i32 0, i64 %16
  store i8 %6, i8* %18, align 1, !tbaa !27
  %19 = load i8, i8* %4, align 4
  %20 = or i8 %19, 16
  store i8 %20, i8* %4, align 4
  br label %32

; <label>:21                                      ; preds = %13
  %22 = sext i8 %6 to i32
  tail call fastcc void @_StreamPut(i32 %22, %struct._tagTreeCCStream* %stream)
  br label %32

; <label>:23                                      ; preds = %5
  br i1 %12, label %24, label %31

; <label>:24                                      ; preds = %23
  %25 = add nsw i32 %11, 1
  store i32 %25, i32* %.pre, align 4, !tbaa !134
  %26 = sext i32 %11 to i64
  %27 = load %struct._tagTreeCCStreamBuf*, %struct._tagTreeCCStreamBuf** %3, align 8, !tbaa !143
  %28 = getelementptr inbounds %struct._tagTreeCCStreamBuf, %struct._tagTreeCCStreamBuf* %27, i64 0, i32 0, i64 %26
  store i8 95, i8* %28, align 1, !tbaa !27
  %29 = load i8, i8* %4, align 4
  %30 = or i8 %29, 16
  store i8 %30, i8* %4, align 4
  br label %32

; <label>:31                                      ; preds = %23
  tail call fastcc void @_StreamPut(i32 95, %struct._tagTreeCCStream* %stream)
  br label %32

; <label>:32                                      ; preds = %31, %24, %21, %14
  %33 = getelementptr inbounds i8, i8* %.08, i64 1
  %34 = load i8, i8* %33, align 1, !tbaa !27
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %._crit_edge.loopexit, label %5

._crit_edge.loopexit:                             ; preds = %32
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %0
  %36 = load i32, i32* %.pre, align 4, !tbaa !134
  %37 = icmp slt i32 %36, 2048
  br i1 %37, label %38, label %47

; <label>:38                                      ; preds = %._crit_edge
  %39 = add nsw i32 %36, 1
  store i32 %39, i32* %.pre, align 4, !tbaa !134
  %40 = sext i32 %36 to i64
  %41 = getelementptr inbounds %struct._tagTreeCCStream, %struct._tagTreeCCStream* %stream, i64 0, i32 5
  %42 = load %struct._tagTreeCCStreamBuf*, %struct._tagTreeCCStreamBuf** %41, align 8, !tbaa !143
  %43 = getelementptr inbounds %struct._tagTreeCCStreamBuf, %struct._tagTreeCCStreamBuf* %42, i64 0, i32 0, i64 %40
  store i8 10, i8* %43, align 1, !tbaa !27
  %44 = getelementptr inbounds %struct._tagTreeCCStream, %struct._tagTreeCCStream* %stream, i64 0, i32 7
  %45 = load i8, i8* %44, align 4
  %46 = or i8 %45, 16
  store i8 %46, i8* %44, align 4
  br label %48

; <label>:47                                      ; preds = %._crit_edge
  tail call fastcc void @_StreamPut(i32 10, %struct._tagTreeCCStream* %stream)
  br label %48

; <label>:48                                      ; preds = %38, %47
  %49 = getelementptr inbounds %struct._tagTreeCCStream, %struct._tagTreeCCStream* %stream, i64 0, i32 3
  %50 = load i64, i64* %49, align 8, !tbaa !133
  %51 = add nsw i64 %50, 1
  store i64 %51, i64* %49, align 8, !tbaa !133
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @OutputDefns(%struct._tagTreeCCStream* nocapture %stream, i32 %atEnd) #0 {
  %1 = getelementptr inbounds %struct._tagTreeCCStream, %struct._tagTreeCCStream* %stream, i64 0, i32 8
  %defn.0.6 = load %struct._tagTreeCCStreamDefn*, %struct._tagTreeCCStreamDefn** %1, align 8
  %2 = icmp eq %struct._tagTreeCCStreamDefn* %defn.0.6, null
  br i1 %2, label %TreeCCStreamFixLine.exit, label %.lr.ph

.lr.ph:                                           ; preds = %0
  %3 = getelementptr inbounds %struct._tagTreeCCStream, %struct._tagTreeCCStream* %stream, i64 0, i32 0
  %4 = getelementptr inbounds %struct._tagTreeCCStream, %struct._tagTreeCCStream* %stream, i64 0, i32 7
  %5 = getelementptr inbounds %struct._tagTreeCCStream, %struct._tagTreeCCStream* %stream, i64 0, i32 6
  %6 = getelementptr inbounds %struct._tagTreeCCStream, %struct._tagTreeCCStream* %stream, i64 0, i32 5
  %7 = getelementptr inbounds %struct._tagTreeCCStream, %struct._tagTreeCCStream* %stream, i64 0, i32 4
  %8 = bitcast %struct._tagTreeCCStreamBuf** %7 to i8**
  %9 = bitcast %struct._tagTreeCCStreamBuf** %6 to i8**
  %10 = getelementptr inbounds %struct._tagTreeCCStream, %struct._tagTreeCCStream* %stream, i64 0, i32 3
  br label %11

; <label>:11                                      ; preds = %.lr.ph, %111
  %defn.08 = phi %struct._tagTreeCCStreamDefn* [ %defn.0.6, %.lr.ph ], [ %defn.0, %111 ]
  %sawDefn.07 = phi i32 [ 0, %.lr.ph ], [ %sawDefn.1, %111 ]
  %12 = getelementptr inbounds %struct._tagTreeCCStreamDefn, %struct._tagTreeCCStreamDefn* %defn.08, i64 0, i32 3
  %13 = load i32, i32* %12, align 4, !tbaa !146
  %14 = icmp eq i32 %13, %atEnd
  br i1 %14, label %15, label %111

; <label>:15                                      ; preds = %11
  %16 = getelementptr inbounds %struct._tagTreeCCStreamDefn, %struct._tagTreeCCStreamDefn* %defn.08, i64 0, i32 2
  %17 = load i64, i64* %16, align 8, !tbaa !145
  %18 = getelementptr inbounds %struct._tagTreeCCStreamDefn, %struct._tagTreeCCStreamDefn* %defn.08, i64 0, i32 1
  %19 = load i8*, i8** %18, align 8, !tbaa !144
  %20 = load %struct._tagTreeCCContext*, %struct._tagTreeCCContext** %3, align 8, !tbaa !132
  %21 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %20, i64 0, i32 8
  %22 = load i16, i16* %21, align 8
  %.mask.i = and i16 %22, 512
  %23 = icmp eq i16 %.mask.i, 0
  br i1 %23, label %TreeCCStreamLine.exit, label %24

; <label>:24                                      ; preds = %15
  %.mask1.i = and i16 %22, 256
  %25 = icmp eq i16 %.mask1.i, 0
  br i1 %25, label %39, label %26

; <label>:26                                      ; preds = %24
  %27 = tail call i64 @strlen(i8* %19) #12
  %28 = trunc i64 %27 to i32
  %sext12 = shl i64 %27, 32
  %29 = ashr exact i64 %sext12, 32
  br label %30

; <label>:30                                      ; preds = %32, %26
  %indvars.iv10 = phi i64 [ %indvars.iv.next11, %32 ], [ %29, %26 ]
  %len.0.i = phi i32 [ %33, %32 ], [ %28, %26 ]
  %31 = icmp sgt i64 %indvars.iv10, 0
  br i1 %31, label %32, label %.critedge.i

; <label>:32                                      ; preds = %30
  %33 = add nsw i32 %len.0.i, -1
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds i8, i8* %19, i64 %34
  %36 = load i8, i8* %35, align 1, !tbaa !27
  %indvars.iv.next11 = add nsw i64 %indvars.iv10, -1
  switch i8 %36, label %30 [
    i8 92, label %.critedge.i
    i8 47, label %.critedge.i
  ]

.critedge.i:                                      ; preds = %32, %32, %30
  %indvars.iv10.lcssa = phi i64 [ %indvars.iv10, %32 ], [ %indvars.iv10, %32 ], [ %indvars.iv10, %30 ]
  %sext2.i = shl i64 %indvars.iv10.lcssa, 32
  %37 = ashr exact i64 %sext2.i, 32
  %38 = getelementptr inbounds i8, i8* %19, i64 %37
  br label %39

; <label>:39                                      ; preds = %.critedge.i, %24
  %.0.i = phi i8* [ %38, %.critedge.i ], [ %19, %24 ]
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.8.938, i64 0, i64 0), i64 %17, i8* %.0.i) #2
  br label %TreeCCStreamLine.exit

TreeCCStreamLine.exit:                            ; preds = %15, %39
  %40 = getelementptr inbounds %struct._tagTreeCCStreamDefn, %struct._tagTreeCCStreamDefn* %defn.08, i64 0, i32 0
  %41 = load i8*, i8** %40, align 8, !tbaa !142
  %42 = tail call i64 @strlen(i8* %41) #12
  %43 = trunc i64 %42 to i32
  %44 = load i8, i8* %4, align 4
  %45 = or i8 %44, 16
  store i8 %45, i8* %4, align 4
  %46 = icmp sgt i32 %43, 0
  br i1 %46, label %.lr.ph.i, label %WriteBuffer.exit

.lr.ph.i:                                         ; preds = %TreeCCStreamLine.exit
  %.pre.i = load i32, i32* %5, align 4, !tbaa !134
  br label %47

; <label>:47                                      ; preds = %68, %.lr.ph.i
  %48 = phi i32 [ %.pre.i, %.lr.ph.i ], [ %77, %68 ]
  %len.02.i = phi i32 [ %43, %.lr.ph.i ], [ %75, %68 ]
  %.01.i = phi i8* [ %41, %.lr.ph.i ], [ %74, %68 ]
  %49 = icmp sgt i32 %48, 2047
  br i1 %49, label %50, label %65

; <label>:50                                      ; preds = %47
  %51 = tail call noalias i8* @malloc(i64 2056) #2
  %52 = bitcast i8* %51 to %struct._tagTreeCCStreamBuf*
  %53 = icmp eq i8* %51, null
  br i1 %53, label %54, label %55

; <label>:54                                      ; preds = %50
  tail call void @TreeCCOutOfMemory(%struct.TreeCCInput* null) #2
  br label %55

; <label>:55                                      ; preds = %54, %50
  %56 = getelementptr inbounds i8, i8* %51, i64 2048
  %57 = bitcast i8* %56 to %struct._tagTreeCCStreamBuf**
  store %struct._tagTreeCCStreamBuf* null, %struct._tagTreeCCStreamBuf** %57, align 8, !tbaa !136
  %58 = load %struct._tagTreeCCStreamBuf*, %struct._tagTreeCCStreamBuf** %6, align 8, !tbaa !143
  %59 = icmp eq %struct._tagTreeCCStreamBuf* %58, null
  br i1 %59, label %63, label %60

; <label>:60                                      ; preds = %55
  %61 = getelementptr inbounds %struct._tagTreeCCStreamBuf, %struct._tagTreeCCStreamBuf* %58, i64 0, i32 1
  %62 = bitcast %struct._tagTreeCCStreamBuf** %61 to i8**
  store i8* %51, i8** %62, align 8, !tbaa !136
  br label %64

; <label>:63                                      ; preds = %55
  store i8* %51, i8** %8, align 8, !tbaa !135
  br label %64

; <label>:64                                      ; preds = %63, %60
  store i8* %51, i8** %9, align 8, !tbaa !143
  store i32 0, i32* %5, align 4, !tbaa !134
  br label %68

; <label>:65                                      ; preds = %47
  %66 = load %struct._tagTreeCCStreamBuf*, %struct._tagTreeCCStreamBuf** %6, align 8, !tbaa !143
  %67 = sub nsw i32 2048, %48
  br label %68

; <label>:68                                      ; preds = %65, %64
  %69 = phi i32 [ 0, %64 ], [ %48, %65 ]
  %templen.0.i = phi i32 [ 2048, %64 ], [ %67, %65 ]
  %buffer.0.i = phi %struct._tagTreeCCStreamBuf* [ %52, %64 ], [ %66, %65 ]
  %70 = icmp sgt i32 %templen.0.i, %len.02.i
  %len.0.templen.0.i = select i1 %70, i32 %len.02.i, i32 %templen.0.i
  %71 = sext i32 %69 to i64
  %72 = getelementptr inbounds %struct._tagTreeCCStreamBuf, %struct._tagTreeCCStreamBuf* %buffer.0.i, i64 0, i32 0, i64 %71
  %73 = sext i32 %len.0.templen.0.i to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %72, i8* %.01.i, i64 %73, i32 1, i1 false) #2
  %74 = getelementptr inbounds i8, i8* %.01.i, i64 %73
  %75 = sub nsw i32 %len.02.i, %len.0.templen.0.i
  %76 = load i32, i32* %5, align 4, !tbaa !134
  %77 = add nsw i32 %76, %len.0.templen.0.i
  store i32 %77, i32* %5, align 4, !tbaa !134
  %78 = icmp sgt i32 %75, 0
  br i1 %78, label %47, label %WriteBuffer.exit.loopexit

WriteBuffer.exit.loopexit:                        ; preds = %68
  br label %WriteBuffer.exit

WriteBuffer.exit:                                 ; preds = %WriteBuffer.exit.loopexit, %TreeCCStreamLine.exit
  %79 = load i8*, i8** %40, align 8, !tbaa !142
  %80 = tail call i8* @strchr(i8* %79, i32 10) #2
  %81 = icmp eq i8* %80, null
  br i1 %81, label %UpdateLineNum.exit, label %.lr.ph.i.2

.lr.ph.i.2:                                       ; preds = %WriteBuffer.exit
  %.pre.i.1 = load i64, i64* %10, align 8, !tbaa !133
  br label %82

; <label>:82                                      ; preds = %82, %.lr.ph.i.2
  %83 = phi i64 [ %.pre.i.1, %.lr.ph.i.2 ], [ %86, %82 ]
  %84 = phi i8* [ %80, %.lr.ph.i.2 ], [ %87, %82 ]
  %85 = getelementptr inbounds i8, i8* %84, i64 1
  %86 = add nsw i64 %83, 1
  store i64 %86, i64* %10, align 8, !tbaa !133
  %87 = tail call i8* @strchr(i8* %85, i32 10) #2
  %88 = icmp eq i8* %87, null
  br i1 %88, label %UpdateLineNum.exit.loopexit, label %82

UpdateLineNum.exit.loopexit:                      ; preds = %82
  br label %UpdateLineNum.exit

UpdateLineNum.exit:                               ; preds = %UpdateLineNum.exit.loopexit, %WriteBuffer.exit
  %89 = load i8, i8* %79, align 1, !tbaa !27
  %90 = icmp eq i8 %89, 0
  br i1 %90, label %111, label %91

; <label>:91                                      ; preds = %UpdateLineNum.exit
  %92 = tail call i64 @strlen(i8* %79) #12
  %93 = add i64 %92, -1
  %94 = getelementptr inbounds i8, i8* %79, i64 %93
  %95 = load i8, i8* %94, align 1, !tbaa !27
  %96 = icmp eq i8 %95, 10
  br i1 %96, label %111, label %97

; <label>:97                                      ; preds = %91
  %98 = load i32, i32* %5, align 4, !tbaa !134
  %99 = icmp slt i32 %98, 2048
  br i1 %99, label %100, label %107

; <label>:100                                     ; preds = %97
  %101 = add nsw i32 %98, 1
  store i32 %101, i32* %5, align 4, !tbaa !134
  %102 = sext i32 %98 to i64
  %103 = load %struct._tagTreeCCStreamBuf*, %struct._tagTreeCCStreamBuf** %6, align 8, !tbaa !143
  %104 = getelementptr inbounds %struct._tagTreeCCStreamBuf, %struct._tagTreeCCStreamBuf* %103, i64 0, i32 0, i64 %102
  store i8 10, i8* %104, align 1, !tbaa !27
  %105 = load i8, i8* %4, align 4
  %106 = or i8 %105, 16
  store i8 %106, i8* %4, align 4
  br label %108

; <label>:107                                     ; preds = %97
  tail call fastcc void @_StreamPut(i32 10, %struct._tagTreeCCStream* %stream)
  br label %108

; <label>:108                                     ; preds = %107, %100
  %109 = load i64, i64* %10, align 8, !tbaa !133
  %110 = add nsw i64 %109, 1
  store i64 %110, i64* %10, align 8, !tbaa !133
  br label %111

; <label>:111                                     ; preds = %108, %UpdateLineNum.exit, %91, %11
  %sawDefn.1 = phi i32 [ %sawDefn.07, %11 ], [ 1, %91 ], [ 1, %UpdateLineNum.exit ], [ 1, %108 ]
  %112 = getelementptr inbounds %struct._tagTreeCCStreamDefn, %struct._tagTreeCCStreamDefn* %defn.08, i64 0, i32 5
  %defn.0 = load %struct._tagTreeCCStreamDefn*, %struct._tagTreeCCStreamDefn** %112, align 8
  %113 = icmp eq %struct._tagTreeCCStreamDefn* %defn.0, null
  br i1 %113, label %._crit_edge, label %11

._crit_edge:                                      ; preds = %111
  %sawDefn.1.lcssa = phi i32 [ %sawDefn.1, %111 ]
  %114 = icmp eq i32 %sawDefn.1.lcssa, 0
  br i1 %114, label %TreeCCStreamFixLine.exit, label %115

; <label>:115                                     ; preds = %._crit_edge
  %116 = getelementptr inbounds %struct._tagTreeCCStream, %struct._tagTreeCCStream* %stream, i64 0, i32 3
  %117 = load i64, i64* %116, align 8, !tbaa !133
  %118 = add nsw i64 %117, 1
  %119 = getelementptr inbounds %struct._tagTreeCCStream, %struct._tagTreeCCStream* %stream, i64 0, i32 2
  %120 = load i8*, i8** %119, align 8, !tbaa !69
  %121 = getelementptr inbounds %struct._tagTreeCCStream, %struct._tagTreeCCStream* %stream, i64 0, i32 0
  %122 = load %struct._tagTreeCCContext*, %struct._tagTreeCCContext** %121, align 8, !tbaa !132
  %123 = getelementptr inbounds %struct._tagTreeCCContext, %struct._tagTreeCCContext* %122, i64 0, i32 8
  %124 = load i16, i16* %123, align 8
  %.mask.i.i = and i16 %124, 512
  %125 = icmp eq i16 %.mask.i.i, 0
  br i1 %125, label %TreeCCStreamFixLine.exit, label %126

; <label>:126                                     ; preds = %115
  %.mask1.i.i = and i16 %124, 256
  %127 = icmp eq i16 %.mask1.i.i, 0
  br i1 %127, label %141, label %128

; <label>:128                                     ; preds = %126
  %129 = tail call i64 @strlen(i8* %120) #12
  %130 = trunc i64 %129 to i32
  %sext = shl i64 %129, 32
  %131 = ashr exact i64 %sext, 32
  br label %132

; <label>:132                                     ; preds = %134, %128
  %indvars.iv = phi i64 [ %indvars.iv.next, %134 ], [ %131, %128 ]
  %len.0.i.i = phi i32 [ %135, %134 ], [ %130, %128 ]
  %133 = icmp sgt i64 %indvars.iv, 0
  br i1 %133, label %134, label %.critedge.i.i

; <label>:134                                     ; preds = %132
  %135 = add nsw i32 %len.0.i.i, -1
  %136 = sext i32 %135 to i64
  %137 = getelementptr inbounds i8, i8* %120, i64 %136
  %138 = load i8, i8* %137, align 1, !tbaa !27
  %indvars.iv.next = add nsw i64 %indvars.iv, -1
  switch i8 %138, label %132 [
    i8 92, label %.critedge.i.i
    i8 47, label %.critedge.i.i
  ]

.critedge.i.i:                                    ; preds = %134, %134, %132
  %indvars.iv.lcssa = phi i64 [ %indvars.iv, %134 ], [ %indvars.iv, %134 ], [ %indvars.iv, %132 ]
  %sext2.i.i = shl i64 %indvars.iv.lcssa, 32
  %139 = ashr exact i64 %sext2.i.i, 32
  %140 = getelementptr inbounds i8, i8* %120, i64 %139
  br label %141

; <label>:141                                     ; preds = %.critedge.i.i, %126
  %.0.i.i = phi i8* [ %140, %.critedge.i.i ], [ %120, %126 ]
  tail call void (%struct._tagTreeCCStream*, i8*, ...) @TreeCCStreamPrint(%struct._tagTreeCCStream* %stream, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.8.938, i64 0, i64 0), i64 %118, i8* %.0.i.i) #2
  br label %TreeCCStreamFixLine.exit

TreeCCStreamFixLine.exit:                         ; preds = %0, %141, %115, %._crit_edge
  ret void
}

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind }
attributes #3 = { noreturn nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readonly "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readonly uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind }
attributes #10 = { cold nounwind }
attributes #11 = { cold }
attributes #12 = { nounwind readonly }

!llvm.ident = !{!0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0}

!0 = !{!"clang version 3.7.1 (tags/RELEASE_371/final)"}
!1 = !{!2, !5, i64 8192}
!2 = !{!"_tagTreeCCContext", !3, i64 0, !3, i64 4096, !5, i64 8192, !5, i64 8200, !5, i64 8208, !5, i64 8216, !5, i64 8224, !5, i64 8232, !6, i64 8240, !6, i64 8240, !6, i64 8240, !6, i64 8240, !6, i64 8240, !6, i64 8240, !6, i64 8240, !6, i64 8240, !6, i64 8241, !6, i64 8241, !6, i64 8241, !6, i64 8241, !6, i64 8241, !5, i64 8248, !5, i64 8256, !5, i64 8264, !6, i64 8272, !6, i64 8276, !6, i64 8280, !5, i64 8288, !5, i64 8296}
!3 = !{!"omnipotent char", !4, i64 0}
!4 = !{!"Simple C/C++ TBAA"}
!5 = !{!"any pointer", !3, i64 0}
!6 = !{!"int", !3, i64 0}
!7 = !{!5, !5, i64 0}
!8 = !{!2, !5, i64 8264}
!9 = !{!2, !6, i64 8276}
!10 = !{!2, !6, i64 8280}
!11 = !{!2, !6, i64 8272}
!12 = !{!2, !5, i64 8296}
!13 = !{!2, !5, i64 8200}
!14 = !{!15, !5, i64 72}
!15 = !{!"_tagTreeCCStream", !5, i64 0, !5, i64 8, !5, i64 16, !16, i64 24, !5, i64 32, !5, i64 40, !6, i64 48, !6, i64 52, !6, i64 52, !6, i64 52, !6, i64 52, !6, i64 52, !5, i64 56, !5, i64 64, !5, i64 72}
!16 = !{!"long", !3, i64 0}
!17 = !{!18, !5, i64 88}
!18 = !{!"_tagTreeCCNode", !5, i64 0, !5, i64 8, !5, i64 16, !5, i64 24, !5, i64 32, !6, i64 40, !6, i64 44, !6, i64 48, !5, i64 56, !16, i64 64, !5, i64 72, !5, i64 80, !5, i64 88, !5, i64 96, !5, i64 104}
!19 = !{!20, !5, i64 64}
!20 = !{!"_tagTreeCCOperation", !5, i64 0, !5, i64 8, !5, i64 16, !5, i64 24, !5, i64 32, !6, i64 40, !6, i64 44, !5, i64 48, !16, i64 56, !5, i64 64, !5, i64 72, !5, i64 80, !5, i64 88, !6, i64 96, !5, i64 104, !5, i64 112}
!21 = !{!22, !5, i64 32}
!22 = !{!"", !3, i64 0, !5, i64 8, !5, i64 16, !5, i64 24, !5, i64 32, !16, i64 40, !16, i64 48, !6, i64 56, !6, i64 60, !6, i64 64, !6, i64 68, !3, i64 72}
!23 = !{!22, !16, i64 40}
!24 = !{!22, !6, i64 56}
!25 = !{!22, !5, i64 16}
!26 = !{!6, !6, i64 0}
!27 = !{!3, !3, i64 0}
!28 = !{!2, !5, i64 8208}
!29 = !{!2, !5, i64 8224}
!30 = !{!2, !5, i64 8248}
!31 = !{!2, !5, i64 8256}
!32 = !{!2, !5, i64 8232}
!33 = !{!2, !5, i64 8216}
!34 = !{!18, !6, i64 40}
!35 = !{!18, !5, i64 96}
!36 = !{!18, !5, i64 32}
!37 = !{!18, !6, i64 44}
!38 = !{!18, !5, i64 0}
!39 = !{!40, !5, i64 0}
!40 = !{!"_tagTreeCCVirtual", !5, i64 0, !5, i64 8, !5, i64 16, !5, i64 24, !5, i64 32}
!41 = !{!42, !5, i64 0}
!42 = !{!"_tagTreeCCParam", !5, i64 0, !5, i64 8, !6, i64 16, !6, i64 20, !5, i64 24}
!43 = !{!20, !5, i64 104}
!44 = !{!20, !6, i64 40}
!45 = !{!20, !5, i64 16}
!46 = !{!20, !5, i64 0}
!47 = !{!42, !5, i64 8}
!48 = !{!18, !5, i64 104}
!49 = !{!50, !5, i64 16}
!50 = !{!"_tagTreeCCOperationCase", !5, i64 0, !5, i64 8, !5, i64 16, !6, i64 24, !5, i64 32, !16, i64 40, !5, i64 48, !16, i64 56, !5, i64 64, !5, i64 72}
!51 = !{!50, !5, i64 0}
!52 = !{!42, !6, i64 16}
!53 = !{!54, !5, i64 0}
!54 = !{!"_tagTreeCCTrigger", !5, i64 0, !5, i64 8}
!55 = !{!54, !5, i64 8}
!56 = !{!50, !16, i64 56}
!57 = !{!50, !5, i64 48}
!58 = !{!50, !5, i64 8}
!59 = !{!20, !5, i64 24}
!60 = !{!20, !5, i64 8}
!61 = !{!62, !6, i64 24}
!62 = !{!"_tagTreeCCField", !5, i64 0, !5, i64 8, !5, i64 16, !6, i64 24, !5, i64 32, !16, i64 40, !5, i64 48}
!63 = !{!62, !5, i64 8}
!64 = !{!62, !5, i64 0}
!65 = !{!62, !5, i64 16}
!66 = !{!40, !5, i64 8}
!67 = !{!18, !5, i64 72}
!68 = !{!20, !5, i64 32}
!69 = !{!15, !5, i64 16}
!70 = !{!40, !5, i64 24}
!71 = !{!20, !5, i64 112}
!72 = !{!73, !5, i64 0}
!73 = !{!"", !5, i64 0, !5, i64 8, !5, i64 16, !5, i64 24, !5, i64 32, !5, i64 40, !5, i64 48, !5, i64 56, !5, i64 64, !5, i64 72, !5, i64 80, !5, i64 88, !5, i64 96, !5, i64 104}
!74 = !{!73, !5, i64 48}
!75 = !{!50, !6, i64 24}
!76 = !{!20, !6, i64 44}
!77 = !{!20, !5, i64 88}
!78 = !{!73, !5, i64 104}
!79 = !{!73, !5, i64 8}
!80 = !{!20, !5, i64 72}
!81 = !{!73, !5, i64 96}
!82 = !{!42, !5, i64 24}
!83 = !{!73, !5, i64 16}
!84 = !{!73, !5, i64 24}
!85 = !{!73, !5, i64 88}
!86 = !{!73, !5, i64 64}
!87 = !{!73, !5, i64 56}
!88 = !{!50, !5, i64 64}
!89 = !{!50, !5, i64 32}
!90 = !{!50, !16, i64 40}
!91 = !{!73, !5, i64 40}
!92 = !{!73, !5, i64 80}
!93 = !{!73, !5, i64 32}
!94 = !{!18, !6, i64 48}
!95 = !{!42, !6, i64 20}
!96 = !{!73, !5, i64 72}
!97 = !{!22, !3, i64 0}
!98 = !{!22, !5, i64 8}
!99 = !{!22, !5, i64 24}
!100 = !{!16, !16, i64 0}
!101 = !{!22, !6, i64 60}
!102 = !{!22, !16, i64 48}
!103 = !{!104, !5, i64 0}
!104 = !{!"", !5, i64 0, !3, i64 8}
!105 = !{!104, !3, i64 8}
!106 = !{!22, !6, i64 64}
!107 = !{!2, !5, i64 8288}
!108 = !{!62, !5, i64 48}
!109 = !{!18, !5, i64 80}
!110 = !{!40, !5, i64 32}
!111 = !{!18, !5, i64 56}
!112 = !{!18, !16, i64 64}
!113 = !{!18, !5, i64 24}
!114 = !{!18, !5, i64 16}
!115 = !{!18, !5, i64 8}
!116 = !{!62, !5, i64 32}
!117 = !{!62, !16, i64 40}
!118 = !{!20, !16, i64 56}
!119 = !{!40, !5, i64 16}
!120 = !{!50, !5, i64 72}
!121 = !{!20, !5, i64 48}
!122 = !{!20, !5, i64 80}
!123 = !{!20, !6, i64 96}
!124 = distinct !{!124, !125}
!125 = !{!"llvm.loop.unroll.disable"}
!126 = !{!127, !5, i64 0}
!127 = !{!"", !5, i64 0, !5, i64 8, !6, i64 16}
!128 = !{!127, !5, i64 8}
!129 = !{!127, !6, i64 16}
!130 = !{!22, !6, i64 68}
!131 = !{!15, !5, i64 8}
!132 = !{!15, !5, i64 0}
!133 = !{!15, !16, i64 24}
!134 = !{!15, !6, i64 48}
!135 = !{!15, !5, i64 32}
!136 = !{!137, !5, i64 2048}
!137 = !{!"_tagTreeCCStreamBuf", !3, i64 0, !5, i64 2048}
!138 = !{!15, !5, i64 56}
!139 = !{!140, !5, i64 32}
!140 = !{!"_tagTreeCCStreamDefn", !5, i64 0, !5, i64 8, !16, i64 16, !6, i64 24, !6, i64 28, !5, i64 32}
!141 = !{!140, !6, i64 28}
!142 = !{!140, !5, i64 0}
!143 = !{!15, !5, i64 40}
!144 = !{!140, !5, i64 8}
!145 = !{!140, !16, i64 16}
!146 = !{!140, !6, i64 24}
!147 = !{!15, !5, i64 64}
